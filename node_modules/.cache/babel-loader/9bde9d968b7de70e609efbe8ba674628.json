{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\audittrail\\\\Esign.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { TagLine } from \"../../components/login/login.styles\";\nimport { transactionStatus } from '../../components/Enumeration'; //import {transactionStatus} from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Esign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleChange = event => {\n      let agree = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      this.setState({\n        agree\n      });\n      this.props.onInputOnChange(event);\n    };\n\n    this.state = {\n      agree: transactionStatus.YES\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    state.agree = props.selectedRecord.agree === transactionStatus.NO ? false : true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sloginid\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      defaultValue: this.props.inputParam && this.props.inputParam.inputData && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\"),\n      isMandatory: false,\n      required: false,\n      maxLength: 20,\n      readOnly: true,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"esignpassword\",\n      type: \"password\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      isMandatory: true,\n      required: true,\n      maxLength: 50,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"esigncomments\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      rows: \"2\",\n      isMandatory: true,\n      required: true,\n      maxLength: 255,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"esigndate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ESIGNDATE\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.Login.serverTime,\n      dateFormat: this.props.Login.userInfo.ssitedatetime,\n      isClearable: false,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TagLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ELECTRONICSIGN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 94\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGNTEXT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      name: \"agree\",\n      type: \"switch\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }) // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\n      ,\n      isMandatory: true,\n      required: true,\n      checked: this.state.agree,\n      onChange: event => this.toggleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }\n    })));\n  }\n\n} //export default injectIntl(Esign);\n\n\nexport default connect(mapStateToProps, {})(injectIntl(Esign));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/audittrail/Esign.js"],"names":["React","connect","Row","Col","FormInput","FormTextarea","CustomSwitch","FormattedMessage","injectIntl","DateTimePicker","TagLine","transactionStatus","mapStateToProps","state","Login","Esign","Component","constructor","props","toggleChange","event","agree","target","checked","YES","NO","setState","onInputOnChange","getDerivedStateFromProps","selectedRecord","render","intl","formatMessage","id","inputParam","inputData","userinfo","serverTime","userInfo","ssitedatetime"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { TagLine} from \"../../components/login/login.styles\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n//import {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Esign extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            agree : transactionStatus.YES\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        state.agree = props.selectedRecord.agree === transactionStatus.NO ? false : true\r\n    }\r\n       render (){\r\n      \r\n           return(\r\n           <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                  \r\n                        placeholder={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}\r\n                        defaultValue ={this.props.inputParam && this.props.inputParam.inputData \r\n                                        && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\")}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly = {true}\r\n                        onChange={(event)=> this.props.onInputOnChange(event)}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                       <FormInput\r\n                            name={\"esignpassword\"}\r\n                            type=\"password\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}                            \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}                            \r\n                       />\r\n                   </Col>\r\n                   <Col md={12}>\r\n                       <FormTextarea\r\n                            name={\"esigncomments\"}\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}                    \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}\r\n                            rows=\"2\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={255}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}\r\n                           />\r\n                   </Col>                \r\n                  \r\n                    <Col md={12}>                     \r\n                       <DateTimePicker\r\n                                    name={\"esigndate\"} \r\n                                    label={ this.props.intl.formatMessage({ id:\"IDS_ESIGNDATE\"})}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={this.props.Login.serverTime}\r\n                                    dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                                    isClearable={false}\r\n                                    readOnly={true}                                                                                                  \r\n                            />\r\n                    </Col>  \r\n                    <Col md={12}>\r\n                        <TagLine>\r\n                                <FormattedMessage id=\"IDS_ELECTRONICSIGN\"></FormattedMessage><br/>                    \r\n                                <FormattedMessage id=\"IDS_ESIGNTEXT\"></FormattedMessage>\r\n                        </TagLine>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                       <CustomSwitch\r\n                            name={\"agree\"}\r\n                            type=\"switch\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}\r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}                            \r\n                            // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            checked={ this.state.agree}\r\n                            onChange={(event)=> this.toggleChange(event)}\r\n                         />\r\n                   </Col>                          \r\n               </Row>   \r\n            )\r\n        }\r\n        toggleChange =(event)=>{\r\n            let agree = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            this.setState({agree})\r\n            this.props.onInputOnChange(event);\r\n        }\r\n   }\r\n   //export default injectIntl(Esign);\r\n   export default connect(mapStateToProps, {})(injectIntl(Esign));"]},"metadata":{},"sourceType":"module"}