{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\ReleaseFilter.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass ReleaseFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showMoreToggle = () => {\n      this.setState({\n        showMore: !this.state.showMore\n      });\n    };\n\n    this.state = {\n      showMore: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side_more_filter_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      selected: this.props.fromDate,\n      value: this.props.fromDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"fromDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"todate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      selected: this.props.toDate,\n      value: this.props.toDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"toDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      name: \"nsampletypecode\",\n      optionId: \"nsampletypecode\",\n      optionValue: \"ssampletypename\",\n      className: \"form-control\",\n      options: this.props.SampleType,\n      value: this.props.SampleTypeValue ? {\n        \"label\": this.props.SampleTypeValue.ssampletypename,\n        \"value\": this.props.SampleTypeValue.nsampletypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nsampletypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      name: \"nregtypecode\",\n      className: \"form-control\",\n      options: this.props.RegType,\n      value: this.props.RegTypeValue ? {\n        \"label\": this.props.RegTypeValue.sregtypename,\n        \"value\": this.props.RegTypeValue.nregtypecode\n      } : \"\",\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\",\n      className: \"form-control\",\n      options: this.props.RegSubType,\n      value: this.props.RegSubTypeValue ? {\n        \"label\": this.props.RegSubTypeValue.sregsubtypename,\n        \"value\": this.props.RegSubTypeValue.nregsubtypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregsubtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ReleaseFilter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/ReleaseFilter.jsx"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","ReleaseFilter","Component","constructor","props","showMoreToggle","setState","showMore","state","render","intl","formatMessage","id","fromDate","userInfo","ssitedate","date","handleDateChange","toDate","SampleType","SampleTypeValue","ssampletypename","nsampletypecode","event","onFilterComboChange","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ReleaseFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: false\r\n        }\r\n    }\r\n    showMoreToggle = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"todate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue ? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nsampletypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue ? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregtypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue ? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregsubtypecode\")}\r\n                        />\r\n                    </Col>\r\n                </Row>              \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ReleaseFilter)"]},"metadata":{},"sourceType":"module"}