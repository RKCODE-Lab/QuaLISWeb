{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nvar uuid = Utils.uuid;\nexport default (function (props) {\n  var value = props.value,\n      setValue = props.setValue,\n      config = props.config,\n      labelYes = props.labelYes,\n      labelNo = props.labelNo,\n      readonly = props.readonly,\n      _props$customProps = props.customProps,\n      customProps = _props$customProps === void 0 ? {} : _props$customProps;\n  var customRadioYesProps = customProps.radioYes || {};\n  var customRadioNoProps = customProps.radioNo || {};\n\n  var onCheckboxChange = function onCheckboxChange(e) {\n    return setValue(e.target.checked);\n  };\n\n  var onRadioChange = function onRadioChange(e) {\n    return setValue(e.target.value == \"true\");\n  };\n\n  var id = uuid(),\n      id2 = uuid(); // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    key: id,\n    type: \"radio\",\n    id: id,\n    value: true,\n    checked: !!value,\n    disabled: readonly,\n    onChange: onRadioChange\n  }, customRadioYesProps)), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"inline\"\n    },\n    key: id + \"label\",\n    htmlFor: id\n  }, labelYes), /*#__PURE__*/React.createElement(\"input\", _extends({\n    key: id2,\n    type: \"radio\",\n    id: id2,\n    value: false,\n    checked: !value,\n    disabled: readonly,\n    onChange: onRadioChange\n  }, customRadioNoProps)), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"inline\"\n    },\n    key: id2 + \"label\",\n    htmlFor: id2\n  }, labelNo));\n});","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@react-awesome-query-builder/ui/esm/components/widgets/vanilla/value/VanillaBoolean.js"],"names":["_extends","React","Utils","uuid","props","value","setValue","config","labelYes","labelNo","readonly","_props$customProps","customProps","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onCheckboxChange","e","target","checked","onRadioChange","id","id2","createElement","Fragment","key","type","disabled","onChange","style","display","htmlFor"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nvar uuid = Utils.uuid;\nexport default (function (props) {\n  var value = props.value,\n    setValue = props.setValue,\n    config = props.config,\n    labelYes = props.labelYes,\n    labelNo = props.labelNo,\n    readonly = props.readonly,\n    _props$customProps = props.customProps,\n    customProps = _props$customProps === void 0 ? {} : _props$customProps;\n  var customRadioYesProps = customProps.radioYes || {};\n  var customRadioNoProps = customProps.radioNo || {};\n  var onCheckboxChange = function onCheckboxChange(e) {\n    return setValue(e.target.checked);\n  };\n  var onRadioChange = function onRadioChange(e) {\n    return setValue(e.target.value == \"true\");\n  };\n  var id = uuid(),\n    id2 = uuid();\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    key: id,\n    type: \"radio\",\n    id: id,\n    value: true,\n    checked: !!value,\n    disabled: readonly,\n    onChange: onRadioChange\n  }, customRadioYesProps)), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"inline\"\n    },\n    key: id + \"label\",\n    htmlFor: id\n  }, labelYes), /*#__PURE__*/React.createElement(\"input\", _extends({\n    key: id2,\n    type: \"radio\",\n    id: id2,\n    value: false,\n    checked: !value,\n    disabled: readonly,\n    onChange: onRadioChange\n  }, customRadioNoProps)), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"inline\"\n    },\n    key: id2 + \"label\",\n    htmlFor: id2\n  }, labelNo));\n});"]},"metadata":{},"sourceType":"module"}