{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{ListWrapper}from'../../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{callService,crudMaster,updateStore,validateEsignCredential,getPlasmaMasterFileComboService}from'../../actions';import DataGrid from'../../components/data-grid/data-grid.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import AddPlasmaMasterFile from'./AddPlasmaMasterFile';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PlasmaMasterFile=/*#__PURE__*/function(_React$Component){_inherits(PlasmaMasterFile,_React$Component);var _super=_createSuper(PlasmaMasterFile);function PlasmaMasterFile(props){var _this;_classCallCheck(this,PlasmaMasterFile);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.getNestedFieldData=function(nestedColumnArray,data){return nestedColumnArray.reduce(function(xs,x){return xs&&xs[x]?xs[x]:null;},data);};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;//.value;\n_this.setState({selectedRecord:selectedRecord});}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.deleteRecord=function(deleteparam){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:deleteparam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,deleteparam.methodUrl.toLowerCase(),deleteparam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteparam.operation};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteparam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,//screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n//operation\nscreenName:deleteparam.screenName,operation:deleteparam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nplasmafilecode;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=JSON.parse(JSON.stringify(_this.state.selectedRecord));_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=_this.state.selectedRecord[item];});inputData[\"plasmamasterfile\"][\"nmanufcode\"]=_this.state.selectedRecord[\"nmanufcode\"]?_this.state.selectedRecord[\"nmanufcode\"].value:\"\";dataState=_this.state.dataState;}else{//add               \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});inputData[\"plasmamasterfile\"][\"nmanufcode\"]=_this.state.selectedRecord[\"nmanufcode\"]?_this.state.selectedRecord[\"nmanufcode\"].value:\"\";}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}//let selectedRecord = {};\n//this.setState({ selectedRecord });\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.fieldList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={addScreen:false,data:[],masterStatus:\"\",error:\"\",operation:\"create\",dataResult:[],dataState:_dataState,plasmaData:[],userRoleControlRights:[],controlMap:new Map(),selectedRecord:{},manufList:[]};return _this;}_createClass(PlasmaMasterFile,[{key:\"render\",value:function render(){var _this2=this;//let primaryKeyField = \"\";\nthis.extractedColumnList=[{\"idsName\":\"IDS_MANUFNAME\",\"dataField\":\"smanufname\",\"width\":\"200px\"},{\"idsName\":\"IDS_PLASMAFILENUMBER\",\"dataField\":\"splasmafilenumber\",\"width\":\"200px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"400px\"}];//primaryKeyField = \"nplasmafilecode\";\nthis.validationColumnList=[{\"idsName\":\"IDS_MANUFNAME\",\"dataField\":\"nmanufcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PLASMAFILENUMBER\",\"dataField\":\"splasmafilenumber\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];this.fieldList=[\"splasmafilenumber\",\"sdescription\",\"nmanufcode\"];var addId=this.state.controlMap.has(\"AddPlasmaMasterFile\")&&this.state.controlMap.get(\"AddPlasmaMasterFile\").ncontrolcode;var editId=this.state.controlMap.has(\"EditPlasmaMasterFile\")&&this.state.controlMap.get(\"EditPlasmaMasterFile\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeletePlasmaMasterFile\")&&this.state.controlMap.get(\"DeletePlasmaMasterFile\").ncontrolcode;var PlasmaMasterFileAddParam={screenName:\"Plasma Master File\",operation:\"create\",primaryKeyField:\"nplasmafilecode\",userInfo:this.props.Login.userInfo,ncontrolCode:addId};var PlasmaMasterFileEditParam={screenName:\"Plasma Master File\",operation:\"update\",primaryKeyField:\"nplasmafilecode\",userInfo:this.props.Login.userInfo,ncontrolCode:editId};var PlasmaMasterFileDeleteParam={screenName:\"PlasmaMasterFile\",methodUrl:\"PlasmaMasterFile\",operation:\"delete\",ncontrolCode:deleteId};var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{gridHeight:\"600px\",primaryKeyField:\"nplasmafilecode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.getPlasmaMasterFileComboService//fetchRecord}\n,editParam:PlasmaMasterFileEditParam,deleteRecord:this.deleteRecord,addRecord:function addRecord(){return _this2.props.getPlasmaMasterFileComboService(PlasmaMasterFileAddParam);},deleteParam:PlasmaMasterFileDeleteParam,reloadData:this.reloadData,pageable:{buttonCount:4,pageSizes:true},scrollable:\"scrollable\",isActionRequired:true,isToolBarRequired:true,selectedId:this.props.Login.selectedId}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddPlasmaMasterFile,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,formatMessage:this.props.intl.formatMessage,manufList:this.state.manufList||[]//{this.props.Login.manufList || []}\n,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.manufList!==previousProps.Login.manufList){var manufList=constructOptionList(this.props.Login.manufList||[],\"nmanufcode\",\"smanufname\",undefined,undefined,undefined);var manufListFile=manufList.get(\"OptionList\");this.setState({manufList:manufListFile});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return PlasmaMasterFile;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getPlasmaMasterFileComboService:getPlasmaMasterFileComboService})(injectIntl(PlasmaMasterFile));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/product/PlasmaMasterFile.jsx"],"names":["React","connect","injectIntl","ListWrapper","Row","Col","toast","process","callService","crudMaster","updateStore","validateEsignCredential","getPlasmaMasterFileComboService","DataGrid","SlideOutModal","Esign","AddPlasmaMasterFile","DEFAULT_RETURN","constructOptionList","getControlMap","showEsign","mapStateToProps","state","Login","PlasmaMasterFile","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","selectedId","getNestedFieldData","nestedColumnArray","reduce","xs","x","onComboChange","comboData","fieldName","onInputOnChange","target","type","name","checked","value","deleteRecord","deleteparam","inputParam","classUrl","methodUrl","displayName","inputData","toLowerCase","userInfo","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","reloadData","onSaveClick","saveType","formRef","undefined","nplasmafilecode","JSON","parse","stringify","fieldList","map","item","nmastersitecode","intl","formatMessage","id","validateEsign","sreason","password","createRef","extractedColumnList","skip","take","settings","parseInt","addScreen","masterStatus","error","plasmaData","controlMap","Map","manufList","validationColumnList","addId","has","get","ncontrolcode","editId","deleteId","PlasmaMasterFileAddParam","primaryKeyField","PlasmaMasterFileEditParam","PlasmaMasterFileDeleteParam","mandatoryFields","forEach","mandatory","push","buttonCount","pageSizes","previousProps","Object","values","manufListFile","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Row, Col } from 'react-bootstrap'; \r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential, getPlasmaMasterFileComboService } from '../../actions';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddPlasmaMasterFile from './AddPlasmaMasterFile';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PlasmaMasterFile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: [], masterStatus: \"\", error: \"\", operation: \"create\",\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            plasmaData: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {},manufList:[]\r\n\r\n        };\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getNestedFieldData = (nestedColumnArray, data) =>\r\n        nestedColumnArray.reduce((xs, x) => (xs && xs[x]) ? xs[x] : null, data);\r\n\r\n    render() {\r\n\r\n        //let primaryKeyField = \"\";\r\n\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_MANUFNAME\", \"dataField\": \"smanufname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"400px\" },\r\n\r\n        ]\r\n        //primaryKeyField = \"nplasmafilecode\";\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_MANUFNAME\", \"dataField\": \"nmanufcode\", \"width\": \"200px\",\"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"  },\r\n            { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", \"width\": \"200px\",\"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"  },\r\n\r\n        ]\r\n        this.fieldList = [\"splasmafilenumber\", \"sdescription\", \"nmanufcode\"];\r\n\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddPlasmaMasterFile\") && this.state.controlMap.get(\"AddPlasmaMasterFile\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditPlasmaMasterFile\") && this.state.controlMap.get(\"EditPlasmaMasterFile\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeletePlasmaMasterFile\") && this.state.controlMap.get(\"DeletePlasmaMasterFile\").ncontrolcode;\r\n\r\n        const PlasmaMasterFileAddParam = {\r\n            screenName: \"Plasma Master File\", operation: \"create\", primaryKeyField: \"nplasmafilecode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        const PlasmaMasterFileEditParam = {\r\n            screenName: \"Plasma Master File\", operation: \"update\", primaryKeyField: \"nplasmafilecode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const PlasmaMasterFileDeleteParam = { screenName: \"PlasmaMasterFile\", methodUrl: \"PlasmaMasterFile\", operation: \"delete\", ncontrolCode: deleteId };\r\n\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    gridHeight = {\"600px\"}\r\n                                    primaryKeyField={\"nplasmafilecode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.getPlasmaMasterFileComboService} //fetchRecord}\r\n                                    editParam={PlasmaMasterFileEditParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    addRecord={() => this.props.getPlasmaMasterFileComboService(PlasmaMasterFileAddParam)}\r\n                                    deleteParam={PlasmaMasterFileDeleteParam}\r\n                                    reloadData={this.reloadData}\r\n                                    pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                    scrollable={\"scrollable\"}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddPlasmaMasterFile\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                manufList={this.state.manufList || []}//{this.props.Login.manufList || []}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;//.value;\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if(this.props.Login.manufList !== previousProps.Login.manufList ){\r\n\r\n            const  manufList  = constructOptionList(this.props.Login.manufList ||[], \"nmanufcode\",\r\n            \"smanufname\" , undefined, undefined, undefined);\r\n        const  manufListFile  = manufList.get(\"OptionList\");\r\n\r\n        this.setState({ manufList: manufListFile});\r\n    }\r\n    }\r\n\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        }\r\n        else if (event.target.type === 'select-one') {\r\n\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n\r\n\r\n    }\r\n\r\n    // onNumericInputOnChange = (value, name) => {\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (value === 0 || value === 0.0) {\r\n    //         selectedRecord[name] = '';\r\n    //         this.setState({ selectedRecord });\r\n    //     } else {\r\n    //         selectedRecord[name] = value;\r\n    //         this.setState({ selectedRecord });\r\n    //     }\r\n    // }\r\n\r\n    deleteRecord = (deleteparam) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: deleteparam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                //[this.props.Login.inputParam.methodUrl.toLowerCase()]: selectedRecord.dataItem,\r\n                [deleteparam.methodUrl.toLowerCase()]: deleteparam.selectedRecord,//.dataItem,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteparam.operation\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteparam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, //screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    //operation\r\n                    screenName: deleteparam.screenName, operation: deleteparam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        let selectedId=null\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId=this.state.selectedRecord.nplasmafilecode\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n\r\n            this.fieldList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\r\n            })\r\n\r\n            inputData[\"plasmamasterfile\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value : \"\";\r\n            dataState = this.state.dataState;\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n            this.fieldList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]?this.state.selectedRecord[item]:\"\"\r\n            })\r\n\r\n            inputData[\"plasmamasterfile\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value : \"\";\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation, saveType, formRef, dataState,selectedId\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n        //let selectedRecord = {};\r\n        //this.setState({ selectedRecord });\r\n\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getPlasmaMasterFileComboService\r\n})(injectIntl(PlasmaMasterFile));"]},"metadata":{},"sourceType":"module"}