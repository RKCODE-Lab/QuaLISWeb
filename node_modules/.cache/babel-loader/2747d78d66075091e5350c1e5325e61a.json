{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{transactionStatus}from'../../components/Enumeration';var DashBoardDynamicControls=function DashBoardDynamicControls(props){//console.log(\"props. dynamic:\", props);\nreturn props.viewDashBoardDesignConfigList.map(function(item){switch(item.ndesigncomponentcode){case 1:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:item.sfieldname,type:\"text\",label:item.sdisplayname,placeholder:item.sdisplayname,value:props.selectedRecord[item.sfieldname]||\"\",isMandatory:item.nmandatory===transactionStatus.YES?true:false,required:item.nmandatory===transactionStatus.YES?true:false,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event,item);}})));}case 2:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:item.sfieldname,label:item.sdisplayname,placeholder:item.sdisplayname,value:props.selectedRecord[item.sfieldname]||\"\",rows:\"2\",isMandatory:item.nmandatory===transactionStatus.YES?true:false,required:item.nmandatory===transactionStatus.YES?true:false,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event,item);}})));}case 3:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:item.sfieldname,formLabel:item.sdisplayname,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:item.dataList||[],value:props.selectedRecord[item.sfieldname]||\"\",isMandatory:item.nmandatory===transactionStatus.YES?true:false,isMulti:false,isClearable:item.nmandatory===transactionStatus.YES?false:true,isSearchable:true,isDisabled:false,closeMenuOnSelect:true// alphabeticalSort={true}\n,onChange:function onChange(event){return props.onComboChange(event,item.sfieldname,item);}})));}case 4:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:item.sfieldname,label:item.sdisplayname,className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[item.sfieldname]||\"\",dateFormat:props.userInfo.ssitedate,readOnly:props.operation===\"update\"//timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\n,showTimeInput:false,isClearable:false,isMandatory:item.nmandatory===transactionStatus.YES?true:false,required:item.nmandatory===transactionStatus.YES?true:false,onChange:function onChange(date){return props.handleDateChange(item.sfieldname,date,item);},value:props.selectedRecord[item.sfieldname]})));}case 5:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormNumericInput,{name:item.sfieldname,label:item.sdisplayname,placeholder:item.sdisplayname,value:props.selectedRecord[item.sfieldname]||\"\",type:\"number\",strict:true,maxLength:10,noStyle:true,onChange:function onChange(event){return props.onNumericInputOnChange(event,item.sfieldname,item);},precision:0,min:0,className:\"form-control\",isMandatory:item.nmandatory===transactionStatus.YES?true:false,required:item.nmandatory===transactionStatus.YES?true:false,errors:\"Please provide a valid number.\"})));}case 6:{return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{name:item.sfieldname,type:\"switch\",label:item.sdisplayname,placeholder:item.sdisplayname,defaultValue:props.selectedRecord[item.sfieldname]===transactionStatus.YES?true:false,isMandatory:item.nmandatory===transactionStatus.YES?true:false,required:item.nmandatory===transactionStatus.YES?true:false,checked:props.selectedRecord[item.sfieldname]===transactionStatus.YES?true:false,onChange:function onChange(event){return props.onInputOnChange(event,item);}})));}default:return\"\";}});};export default injectIntl(DashBoardDynamicControls);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/dashboardtypes/DashBoardDynamicControls.js"],"names":["React","Row","Col","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","transactionStatus","DashBoardDynamicControls","props","viewDashBoardDesignConfigList","map","item","ndesigncomponentcode","sfieldname","sdisplayname","selectedRecord","nmandatory","YES","event","onInputOnChange","intl","formatMessage","id","dataList","onComboChange","userInfo","ssitedate","operation","date","handleDateChange","onNumericInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration'\r\n\r\nconst DashBoardDynamicControls = (props) => {\r\n    //console.log(\"props. dynamic:\", props);\r\n    return(      \r\n       props.viewDashBoardDesignConfigList.map(item=>{\r\n        switch (item.ndesigncomponentcode) {\r\n\r\n            case 1: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                name={item.sfieldname}\r\n                                type=\"text\"\r\n                                label={ item.sdisplayname}                   \r\n                                placeholder={ item.sdisplayname}\r\n                                value ={ props.selectedRecord[item.sfieldname] || \"\" }\r\n                                isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                maxLength={100}\r\n                                onChange={(event)=> props.onInputOnChange(event, item)}\r\n                            />                      \r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 2: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                   name={item.sfieldname}\r\n                                   label={item.sdisplayname}                    \r\n                                   placeholder={item.sdisplayname}\r\n                                   value ={ props.selectedRecord[item.sfieldname] || \"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                        name={item.sfieldname}\r\n                                        formLabel={ item.sdisplayname}                              \r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })  }                        \r\n                                        options={item.dataList || []}\r\n                                        value = { props.selectedRecord[item.sfieldname] || \"\"}\r\n                                        isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                        isMulti={false}\r\n                                        isClearable={item.nmandatory === transactionStatus.YES ? false :true}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        // alphabeticalSort={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, item.sfieldname, item)}                               \r\n                                />  \r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 4: {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <DateTimePicker\r\n                                    name={item.sfieldname} \r\n                                    label={ item.sdisplayname}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={props.selectedRecord[item.sfieldname] || \"\"}\r\n                                    dateFormat={props.userInfo.ssitedate}\r\n                                    readOnly={props.operation === \"update\"}\r\n                                    //timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                                    showTimeInput={false}\r\n                                    isClearable={false}\r\n                                    isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                    required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                    onChange={date => props.handleDateChange(item.sfieldname, date, item)}\r\n                                    value={props.selectedRecord[item.sfieldname]}\r\n                              />\r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 5: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                   name={item.sfieldname}\r\n                                   label={ item.sdisplayname}                          \r\n                                   placeholder={ item.sdisplayname}\r\n                                   value ={ props.selectedRecord[item.sfieldname] || \"\"}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={10}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, item.sfieldname, item)}\r\n                                   precision={0}\r\n                                   min={0}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   errors=\"Please provide a valid number.\"\r\n                              />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 6: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                   name={item.sfieldname}\r\n                                   type=\"switch\"\r\n                                   label={item.sdisplayname}\r\n                                   placeholder={item.sdisplayname}                            \r\n                                   defaultValue ={ props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true :false }  \r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}                                   \r\n                                   checked={ props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true :false}\r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            default :\r\n                return \"\";\r\n        }\r\n        \r\n        } )\r\n\r\n    )\r\n}\r\n\r\nexport default injectIntl(DashBoardDynamicControls);"]},"metadata":{},"sourceType":"module"}