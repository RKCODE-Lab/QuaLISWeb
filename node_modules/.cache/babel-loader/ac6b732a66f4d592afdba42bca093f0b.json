{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\AddIncident.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass AddIncident extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      loading: false,\n      dataState: dataState,\n      openModal: false,\n      inputParam: this.props.inputParam,\n      loadEsign: false,\n      operation: this.props.operation ? this.props.operation : \"\",\n      selectedRecord: { ...this.props.selectedRecord,\n        dincidentdate: this.props.currentDateTime\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"dincidentdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_INCIDENTDATE\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.state.selectedRecord[\"dincidentdate\"],\n      dateFormat: this.props.Login.userInfo.ssitedatetime,\n      timeInputLabel: this.props.intl.formatMessage({\n        id: \"IDS_TIME\"\n      }),\n      showTimeInput: true,\n      isClearable: false,\n      isMandatory: true,\n      required: true // maxTime={props.currentTime}\n      ,\n      onChange: date => this.handleDateChange(\"dincidentdate\", date),\n      value: this.state.selectedRecord[\"dincidentdate\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SOURCEOFINCIDENT\"\n      }),\n      name: \"ssourceofincident\",\n      onChange: event => this.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SOURCEOFINCIDENT\"\n      }),\n      value: this.state.selectedRecord[\"ssourceofincident\"] || \"\",\n      rows: \"2\",\n      isMandatory: true,\n      required: true,\n      maxLength: 50,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"ssourceid\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SOURCEID\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SOURCEID\"\n      }),\n      value: this.state.selectedRecord[\"ssourceid\"] || \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 50,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"ssourcename\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SOURCENAME\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SOURCENAME\"\n      }),\n      value: this.state.selectedRecord[\"ssourcename\"] || \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 50,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DESCRIPTION\"\n      }),\n      name: \"sdescription\",\n      onChange: event => this.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_DESCRIPTION\"\n      }),\n      value: this.state.selectedRecord[\"sdescription\"] || \"\",\n      rows: \"2\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sreportername\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_REPORTERNAME\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REPORTERNAME\"\n      }),\n      value: this.state.selectedRecord[\"sreportername\"] || \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 50,\n      onChange: event => this.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {})(injectIntl(AddIncident));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/approval/AddIncident.jsx"],"names":["React","Col","Row","injectIntl","connect","FormTextarea","FormInput","DateTimePicker","mapStateToProps","state","Login","AddIncident","Component","constructor","props","onInputOnChange","event","selectedRecord","target","name","value","setState","childDataChange","handleDateChange","dateName","dateValue","dataState","skip","take","settings","parseInt","loading","openModal","inputParam","loadEsign","operation","dincidentdate","currentDateTime","render","intl","formatMessage","id","userInfo","ssitedatetime","date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass AddIncident extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: this.props.operation ? this.props.operation : \"\",\r\n            selectedRecord: {\r\n                ...this.props.selectedRecord,\r\n                dincidentdate: this.props.currentDateTime\r\n            },\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <DateTimePicker\r\n                            name={\"dincidentdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_INCIDENTDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText=\"Select date..\"\r\n                            selected={this.state.selectedRecord[\"dincidentdate\"]}\r\n                            dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                            timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={true}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            // maxTime={props.currentTime}\r\n                            onChange={date => this.handleDateChange(\"dincidentdate\", date)}\r\n                            value={this.state.selectedRecord[\"dincidentdate\"]}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_SOURCEOFINCIDENT\" })}\r\n                            name={\"ssourceofincident\"}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SOURCEOFINCIDENT\" })}\r\n                            value={this.state.selectedRecord[\"ssourceofincident\"] || \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            isDisabled={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={\"ssourceid\"}\r\n                            type=\"text\"\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_SOURCEID\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SOURCEID\" })}\r\n                            value={this.state.selectedRecord[\"ssourceid\"] || \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={\"ssourcename\"}\r\n                            type=\"text\"\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_SOURCENAME\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SOURCENAME\" })}\r\n                            value={this.state.selectedRecord[\"ssourcename\"] || \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={this.state.selectedRecord[\"sdescription\"] || \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            isDisabled={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={\"sreportername\"}\r\n                            type=\"text\"\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_REPORTERNAME\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REPORTERNAME\" })}\r\n                            value={this.state.selectedRecord[\"sreportername\"] || \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord })\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(injectIntl(AddIncident));"]},"metadata":{},"sourceType":"module"}