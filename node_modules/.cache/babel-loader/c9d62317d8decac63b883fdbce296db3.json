{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../../components/form-input/form-input.component';import{injectIntl}from'react-intl';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';var AddCity=function AddCity(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_DISTRICTNAME\"}),isSearchable:true,name:\"ndistrictcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:props.districtList,optionId:\"ndistrictcode\",optionValue:\"sdistrictname\",value:props.selectedRecord[\"ndistrictcode\"],onChange:function onChange(event){return props.onComboChange(event,'ndistrictcode');},closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_CITY\"}),name:\"scityname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CITY\"}),value:props.selectedRecord[\"scityname\"]?props.selectedRecord[\"scityname\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_CITYCODE\"}),name:\"scitycode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CITYCODE\"}),value:props.selectedRecord[\"scitycode\"]?props.selectedRecord[\"scitycode\"]:\"\",isMandatory:true,required:true,maxLength:5})));};export default injectIntl(AddCity);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/submitter/city/AddCity.jsx"],"names":["React","Row","Col","FormInput","injectIntl","FormSelectSearch","AddCity","props","intl","formatMessage","id","districtList","selectedRecord","event","onComboChange","onInputOnChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qDAAtB,CACA,OAAQC,UAAR,KAA0B,YAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qEAA7B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,mBACM,oBAAC,GAAD,mBACG,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACG,oBAAC,gBAAD,EACI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,eAHV,CAII,UAAU,CAAE,KAJhB,CAKI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CALjB,CAMI,WAAW,CAAE,IANjB,CAOI,OAAO,CAAEH,KAAK,CAACI,YAPnB,CAQI,QAAQ,CAAC,eARb,CASI,WAAW,CAAC,eAThB,CAUI,KAAK,CAAEJ,KAAK,CAACK,cAAN,CAAqB,eAArB,CAVX,CAWI,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,eAA3B,CAAX,EAXd,CAYI,iBAAiB,CAAE,IAZvB,CAaI,gBAAgB,CAAE,IAbtB,EADH,CADH,cAkBE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACA,oBAAC,SAAD,EACQ,KAAK,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CADf,CAEQ,IAAI,CAAE,WAFd,CAGQ,IAAI,CAAC,MAHb,CAIQ,QAAQ,CAAE,kBAACG,KAAD,QAAWN,CAAAA,KAAK,CAACQ,eAAN,CAAsBF,KAAtB,CAAX,EAJlB,CAKQ,WAAW,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CALrB,CAMQ,KAAK,CAAGH,KAAK,CAACK,cAAN,CAAqB,WAArB,EAAoCL,KAAK,CAACK,cAAN,CAAqB,WAArB,CAApC,CAAwE,EANxF,CAOQ,WAAW,CAAE,IAPrB,CAQQ,QAAQ,CAAE,IARlB,CASQ,SAAS,CAAE,GATnB,EADA,CAlBF,cAgCE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACA,oBAAC,SAAD,EACQ,KAAK,CAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CADf,CAEQ,IAAI,CAAE,WAFd,CAGQ,IAAI,CAAC,MAHb,CAIQ,QAAQ,CAAE,kBAACG,KAAD,QAAWN,CAAAA,KAAK,CAACQ,eAAN,CAAsBF,KAAtB,CAAX,EAJlB,CAKQ,WAAW,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CALrB,CAMQ,KAAK,CAAGH,KAAK,CAACK,cAAN,CAAqB,WAArB,EAAoCL,KAAK,CAACK,cAAN,CAAqB,WAArB,CAApC,CAAwE,EANxF,CAOQ,WAAW,CAAE,IAPrB,CAQQ,QAAQ,CAAE,IARlB,CASQ,SAAS,CAAE,CATnB,EADA,CAhCF,CADN,CAgDH,CAjDD,CAkDA,cAAeR,CAAAA,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport {injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddCity = (props) => {\r\n    return(\r\n          <Row>    \r\n             <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_DISTRICTNAME\" })}\r\n                    isSearchable={true}\r\n                    name={\"ndistrictcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={props.districtList}\r\n                    optionId='ndistrictcode'\r\n                    optionValue='sdistrictname'\r\n                    value={props.selectedRecord[\"ndistrictcode\"]}\r\n                    onChange={(event) => props.onComboChange(event, 'ndistrictcode')}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            </Col>                   \r\n            <Col md={12}>\r\n            <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_CITY\" })}\r\n                    name= \"scityname\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CITY\" })}\r\n                    value={ props.selectedRecord[\"scityname\"] ? props.selectedRecord[\"scityname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n            <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_CITYCODE\" })}\r\n                    name= \"scitycode\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CITYCODE\" })}\r\n                    value={ props.selectedRecord[\"scitycode\"] ? props.selectedRecord[\"scitycode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={5}\r\n                />\r\n            </Col>\r\n         </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddCity);"]},"metadata":{},"sourceType":"module"}