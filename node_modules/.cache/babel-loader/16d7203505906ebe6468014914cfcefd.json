{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN,UPDATE_LANGUAGE,REQUEST_INIT}from'./LoginTypes';import rsapi from\"../rsapi\";import{intl,createIntlReinitilize}from'../components/App';import Axios from'axios';import{toast}from'react-toastify';import{constructjsonOptionList,constructOptionList,formatInputDate,rearrangeDateFormat}from'../components/CommonScript';import{getHomeDashBoard}from'./DashBoardTypeAction';import{getListStaticDashBoard}from'./StaticDashBoardAction';import{getListAlert}from'./AlertViewAction';import{getRandomColor}from'../components/header/headerutils';import{loadMessages}from'@progress/kendo-react-intl';import messages_ru from'../assets/translations/ru.json';import messages_tg from'../assets/translations/tg.json';import messages_en from'../assets/translations/en.json';import messages_de from'../assets/translations/de.json';import{transactionStatus}from'../components/Enumeration';import{callService}from'./ServiceAction';var messages={'en-US':messages_en,'ko-KR':messages_de,'ru-RU':messages_ru,'tg-TG':messages_tg};export var initRequest=function initRequest(loading){return{type:REQUEST_INIT,payload:loading};};export var navPage=function navPage(data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{navigation:data,nusermultirolecode:undefined,nusersitecode:undefined,selectedRecord:undefined}});};};export var changeLanguage=function changeLanguage(language,selectedRecord,loginType){return function(dispatch){var loginTypeMap=constructjsonOptionList(loginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,language);createIntlReinitilize(language);//ALPD-715 Fix\ndispatch({type:UPDATE_LANGUAGE,payload:_defineProperty({language:language,selectedRecord:selectedRecord,loginTypeList:loginTypeMap.get(\"OptionList\")},\"selectedRecord\",_objectSpread(_objectSpread({},selectedRecord),{},{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\"}))});};};export var clickOnLoginButton=function clickOnLoginButton(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputData.url,inputData).then(function(response){var returnStr=response.data[\"rtn\"];if(returnStr.toUpperCase()===\"SUCCESS\"){var responseData=response.data;var PassFlag=responseData.PassFlag;languageList&&languageList.map(function(x){loadMessages(messages[inputData.slanguagetypecode],inputData.slanguagetypecode);});createIntlReinitilize(inputData.slanguagetypecode);dispatch({type:DEFAULT_RETURN,payload:{openCPModal:response.data.PassFlag===transactionStatus.UNLOCK||PassFlag===transactionStatus.EXPIRED?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:PassFlag===transactionStatus.UNLOCK?\"IDS_CREATEPASSWORD\":PassFlag===transactionStatus.EXPIRED?\"IDS_CHANGEPASSWORD\":\"\",PassFlag:PassFlag,userInfo:response.data.UserInfo// userInfo: {\n//     nlogintypecode: inputData.nlogintypecode\n// }\n}});if(responseData.PassFlag!==transactionStatus.UNLOCK&&responseData.PassFlag!==transactionStatus.EXPIRED){var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,HomeDesign:responseData.HomeDesign,navigation:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,defaultMenuHome:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0],userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].sdisplayname,userMultiRole:responseData.UserMultiRole,settings:responseData.Settings,integrationSettings:responseData.IntegrationSettings,elnUserInfo:responseData.ELNUserInfo,elnSite:responseData.ELNSite,genericLabel:responseData.GenericLabel,genericLabelIDS:responseData.GenericLabelIDS,sdmselnsettings:responseData.SDMSELNSettings,hideQualisForms:responseData.HideQualisForms,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,isDeputyLogin:false,loading:false,userImagePath:responseData.UserImagePath,//profileColor: \"#002699\",\nprofileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});if(inputParam.navigation==='dashboard'){dispatch(getListStaticDashBoard(responseData.UserInfo));}else if(inputParam.navigation==='apiservice'){var inputParam1={inputData:{currentdate:formatInputDate(new Date(),true),\"userinfo\":inputParam.userInfo},serviceNeed:true,classUrl:inputParam.navigation,methodUrl:responseData.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].smethodurl};dispatch(callService(inputParam1));}dispatch(getListAlert(responseData.UserInfo,true));if(responseData.PasswordAlertDay){toast.info(intl.formatMessage({id:\"IDS_PASSWORDEXPIRY\"})+\" \"+responseData.PasswordAlertDay+\" \"+intl.formatMessage({id:\"IDS_DAYS\"}));}}}else{toast.warn(intl.formatMessage({id:returnStr}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitChangeRole=function submitChangeRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getuserscreenrightsmenu\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{userInfo:response.data.UserInfo,menuDesign:response.data.MenuDesign,navigation:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,defaultMenuHome:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0],userRoleControlRights:response.data.UserRoleControlRights,userMultiRole:response.data.UserMultiRole,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,loading:false,masterData:[],displayName:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].sdisplayname,// navigation: \"home\",\ninputParam:{},openRoleBox:false}});if(response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename==='dashboard'){dispatch(getListStaticDashBoard(response.data.UserInfo,1));}else if(inputParam.navigation==='apiservice'){var inputParam1={inputData:{currentdate:formatInputDate(new Date(),true),\"userinfo\":response.data.UserInfo},serviceNeed:true,classUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].shomename,methodUrl:response.data.HomeDesign.filter(function(x){return x.ndefaultstatus===3;})[0].smethodurl};dispatch(callService(inputParam1));}// dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\ndispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var updateStore=function updateStore(updateInfo){return function(dispatch){if(updateInfo.data.loadEsign===true){var currentTimeUrl=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});var reasonUrl=rsapi.post(\"/reason/getReason\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo});dispatch(initRequest(true));Axios.all([currentTimeUrl,reasonUrl]).then(function(response){var reasonMap=constructOptionList(response[1].data||[],\"nreasoncode\",\"sreason\",undefined,undefined,false);var reasonList=reasonMap.get(\"OptionList\");dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({serverTime:rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo,response[0].data),esignReasonList:reasonList},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined})});}};};export var getChangeUserRole=function getChangeUserRole(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getchangerole\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getLoginDetails=function getLoginDetails(){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginInfo\",{}).then(function(response){// let loginType = [];\n// response.data.LoginType.map(type => {\n//     loginType\n// })\nvar languageMap=constructOptionList(response.data.Language||[],\"slanguagetypecode\",\"slanguagename\",false,false,true);var defaultLanguage=languageMap.get(\"DefaultValue\")?languageMap.get(\"DefaultValue\"):undefined;var languageCode=defaultLanguage?defaultLanguage.value:\"en-US\";var loginTypeMap=constructjsonOptionList(response.data.LoginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,languageCode);dispatch({type:DEFAULT_RETURN,payload:{loginTypes:response.data.LoginType,loginTypeList:loginTypeMap.get(\"OptionList\"),languageList:languageMap.get(\"OptionList\"),nlanguagecode:defaultLanguage||\"\",selectedRecord:{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\",nlanguagecode:defaultLanguage||\"\"},language:defaultLanguage.value,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getUserSiteAndRole=function getUserSiteAndRole(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginvalidation\",_objectSpread({},inputParam)).then(function(response){if(inputParam.Language!==undefined&&inputParam.logintype!==undefined){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");var loggeInLoginTypeCode=response.data.Users.nlogintypecode;var logintypecode=inputParam.logintype.filter(function(x){return x.value===loggeInLoginTypeCode;});if(inputParam.logintype.length>0&&logintypecode.length===0){logintypecode=inputParam.logintype;loggeInLoginTypeCode=logintypecode[0].value;}dispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\",selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\"}),openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{},userInfo:{nlogintypecode:loggeInLoginTypeCode}}});}else{toast.warn(inputParam.Language===undefined?\"Language not available\":\"Login type not available\");}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response&&error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response===undefined){toast.warn(\"Service not available\");}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var createPassword=function createPassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/createnewpassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{}}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCREATEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changepassword=function changepassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changepassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{},navigation:\"login\"}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCHANGEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function validateEsignforDigitalSignature(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(saveDigitalSign(inputParam[\"screenData\"][\"inputParam\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var saveDigitalSign=function saveDigitalSign(inputParam){return function(dispatch){dispatch(initRequest(true));var formData=inputParam.formData;formData.append(\"userinfo\",JSON.stringify(inputParam.inputData.userinfo));rsapi.post(\"/digitalsignature/updateDigitalSignature\",formData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,loadEsign:false}});toast.success(intl.formatMessage({id:\"IDS_DIGITALSIGNATURESAVEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getPassWordPolicy=function getPassWordPolicy(nuserrolecode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getPassWordPolicy\",{nuserrolecode:nuserrolecode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,createPwdRecord:{},screenName:\"IDS_CHANGEPASSWORD\",passwordPolicy:response.data.PasswordPolicy}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getDigitalSign=function getDigitalSign(nusercode,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/digitalsignature/getDigitalSignature\",{nusercode:nusercode,userInfo:userInfo}).then(function(response){var responseData=response.data;var selectedDigiSign=responseData!==\"\"?responseData:{};dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,screenName:\"IDS_DIGITALSIGNATURE\",operation:\"update\",selectedDigiSign:selectedDigiSign,isInitialRender:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changeOwner=function changeOwner(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changeOwner\",_objectSpread({},inputData)).then(function(response){var responseData=response.data;var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,isDeputyLogin:true,// settings: responseData.Settings,\n// deputyUser: response.data.DeputyUser,\n// deputyUserRole: response.data.DeputyUserRole,\nloading:false,masterData:[],navigation:\"home\",inputParam:{},openRoleBox:false,userImagePath:responseData.UserImagePath,profileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var logOutAuditAction=function logOutAuditAction(inputData,languageList){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/insertAuditAction',_objectSpread(_objectSpread({},inputData),{},{nFlag:2})).then(function(response){languageList&&languageList.map(function(x){loadMessages({},x.slanguagetypecode);});dispatch(navPage(\"login\"));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var elnLoginAction=function elnLoginAction(inputParam,serverUrl,uiUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.objResponse!==null){if(response.data.objResponse.status){if(uiUrl){var user=response;var elnURL=uiUrl+\"#\"+user.data.username+\"$\"+user.data.password;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}}else{toast.info(response.data.objResponse.information);}// if(!$(\"#appsdetails\").is(\":hidden\")){\n//     $('#appsdetails').addClass(\"dp-none\");\n// }\n};}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var sdmsLoginAction=function sdmsLoginAction(inputParam,serverUrl,sdmsUIUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.status){if(response.data.status){var sdmsURL=sdmsUIUrl+\"?un=\"+response.data.username+\"&pd=\"+response.data.password+\"&sc=\"+inputParam.sSiteCode;window.open(sdmsURL,'_blank');}else{toast.info(response.Message);}}else{toast.info(intl.FormattedMessage({id:\"IDS_CHECKSYNCSERVICE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var getUsersiteRole=function getUsersiteRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/changeSite',{\"usersSite\":inputParam.selectedRecord.nusersitecode.item}).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:roleMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var checkPassword=function checkPassword(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getlogintypevalidation\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusercode:response.data.Users.nusercode}),userInfo:{nlogintypecode:inputParam.nlogintypecode},openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getDashBoardForHome(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/staticdashboard/getListStaticDashBoard\",{'userinfo':inputParam.data.userInfo}).then(function(response){var respObject={masterDataStatic:response.data,loading:false,userInfo:inputParam.data.userInfo};if(response.data!==null&&Object.keys(response.data).length>0){respObject=_objectSpread(_objectSpread(_objectSpread({},inputParam.data),respObject),{},{currentPageNo:-1});}dispatch(getHomeDashBoard(inputParam.data.userInfo,0,false,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LoginAction.js"],"names":["DEFAULT_RETURN","UPDATE_LANGUAGE","REQUEST_INIT","rsapi","intl","createIntlReinitilize","Axios","toast","constructjsonOptionList","constructOptionList","formatInputDate","rearrangeDateFormat","getHomeDashBoard","getListStaticDashBoard","getListAlert","getRandomColor","loadMessages","messages_ru","messages_tg","messages_en","messages_de","transactionStatus","callService","messages","initRequest","loading","type","payload","navPage","data","dispatch","navigation","nusermultirolecode","undefined","nusersitecode","selectedRecord","changeLanguage","language","loginType","loginTypeMap","loginTypeList","get","nlogintypecode","clickOnLoginButton","inputData","languageList","post","url","then","response","returnStr","toUpperCase","responseData","PassFlag","map","x","slanguagetypecode","openCPModal","UNLOCK","EXPIRED","passwordPolicy","PasswordPolicy","screenName","userInfo","UserInfo","inputParam","menuDesign","MenuDesign","HomeDesign","filter","ndefaultstatus","shomename","defaultMenuHome","userRoleControlRights","UserRoleControlRights","userFormControlProperties","UserFormControlproperties","transactionValidation","TransactionValidation","displayName","sdisplayname","userMultiRole","UserMultiRole","settings","Settings","integrationSettings","IntegrationSettings","elnUserInfo","ELNUserInfo","elnSite","ELNSite","genericLabel","GenericLabel","genericLabelIDS","GenericLabelIDS","sdmselnsettings","SDMSELNSettings","hideQualisForms","HideQualisForms","deputyUser","DeputyUser","deputyUserRole","DeputyUserRole","isDeputyLogin","userImagePath","UserImagePath","profileColor","idleneed","inputParam1","currentdate","Date","serviceNeed","classUrl","methodUrl","smethodurl","PasswordAlertDay","info","formatMessage","id","warn","catch","error","status","message","submitChangeRole","masterData","openRoleBox","updateStore","updateInfo","loadEsign","currentTimeUrl","screenData","userinfo","reasonUrl","all","reasonMap","reasonList","typeName","serverTime","esignReasonList","masterStatus","errorCode","getChangeUserRole","getLoginDetails","languageMap","Language","defaultLanguage","languageCode","value","LoginType","loginTypes","nlanguagecode","getUserSiteAndRole","logintype","roleMap","siteMap","Site","loggeInLoginTypeCode","Users","logintypecode","length","loginUserRole","loginUserSite","nusercode","createPwdRecord","createPassword","success","changepassword","validateEsignforDigitalSignature","toLowerCase","saveDigitalSign","formData","append","JSON","stringify","getPassWordPolicy","nuserrolecode","getDigitalSign","selectedDigiSign","operation","isInitialRender","changeOwner","logOutAuditAction","nFlag","elnLoginAction","serverUrl","uiUrl","objResponse","user","elnURL","username","password","window","open","FormattedMessage","information","sdmsLoginAction","sdmsUIUrl","sdmsURL","sSiteCode","Message","getUsersiteRole","item","checkPassword","getDashBoardForHome","respObject","masterDataStatic","Object","keys","currentPageNo"],"mappings":"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","sourcesContent":["import { DEFAULT_RETURN, UPDATE_LANGUAGE, REQUEST_INIT } from './LoginTypes';\r\nimport rsapi from \"../rsapi\";\r\nimport { intl, createIntlReinitilize } from '../components/App';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { constructjsonOptionList, constructOptionList, formatInputDate, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { getHomeDashBoard } from './DashBoardTypeAction';\r\nimport { getListStaticDashBoard } from './StaticDashBoardAction';\r\nimport { getListAlert } from './AlertViewAction'\r\nimport { getRandomColor } from '../components/header/headerutils';\r\nimport { loadMessages } from '@progress/kendo-react-intl';\r\nimport messages_ru from '../assets/translations/ru.json';\r\nimport messages_tg from '../assets/translations/tg.json';\r\nimport messages_en from '../assets/translations/en.json';\r\nimport messages_de from '../assets/translations/de.json';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { callService } from './ServiceAction';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg\r\n}\r\n\r\n\r\nexport const initRequest = (loading) => {\r\n    return {\r\n        type: REQUEST_INIT,\r\n        payload: loading\r\n    }\r\n}\r\n\r\nexport const navPage = (data) => dispatch => {\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: {\r\n            navigation: data,\r\n            nusermultirolecode: undefined,\r\n            nusersitecode: undefined,\r\n            selectedRecord: undefined\r\n        }\r\n    });\r\n}\r\n\r\nexport const changeLanguage = (language, selectedRecord, loginType) => (dispatch) => {\r\n    const loginTypeMap = constructjsonOptionList(loginType || [], \"nlogintypecode\",\r\n        \"sdisplayname\", false, false, true, undefined, 'jsondata', true, language);\r\n    createIntlReinitilize(language);  //ALPD-715 Fix\r\n    dispatch({\r\n        type: UPDATE_LANGUAGE,\r\n        payload: {\r\n            language,\r\n            selectedRecord,\r\n            loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n            selectedRecord: {\r\n                ...selectedRecord,\r\n                nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const clickOnLoginButton = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputData.url, inputData)\r\n            .then(response => {\r\n                const returnStr = response.data[\"rtn\"];\r\n                if (returnStr.toUpperCase() === \"SUCCESS\") {\r\n                    const responseData = response.data;\r\n                    const PassFlag = responseData.PassFlag;\r\n\r\n                    languageList &&\r\n                        languageList.map(x => {\r\n                            loadMessages(messages[inputData.slanguagetypecode], inputData.slanguagetypecode);\r\n                        })\r\n                        createIntlReinitilize(inputData.slanguagetypecode);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openCPModal: response.data.PassFlag === transactionStatus.UNLOCK || PassFlag === transactionStatus.EXPIRED ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: PassFlag === transactionStatus.UNLOCK ? \"IDS_CREATEPASSWORD\" : PassFlag === transactionStatus.EXPIRED ? \"IDS_CHANGEPASSWORD\" : \"\",\r\n                            PassFlag,\r\n                            userInfo: response.data.UserInfo,\r\n                            // userInfo: {\r\n                            //     nlogintypecode: inputData.nlogintypecode\r\n                            // }\r\n                        }\r\n                    });\r\n                    if (responseData.PassFlag !== transactionStatus.UNLOCK && responseData.PassFlag !== transactionStatus.EXPIRED) {\r\n                        const inputParam = {\r\n                            userInfo: responseData.UserInfo,\r\n                            menuDesign: responseData.MenuDesign,\r\n                            HomeDesign: responseData.HomeDesign,\r\n                            navigation: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename,\r\n                            defaultMenuHome: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0],\r\n                            userRoleControlRights: responseData.UserRoleControlRights,\r\n                            userFormControlProperties: responseData.UserFormControlproperties,\r\n                            transactionValidation: responseData.TransactionValidation,\r\n                            displayName: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].sdisplayname,\r\n                            userMultiRole: responseData.UserMultiRole,\r\n                            settings: responseData.Settings,\r\n                            integrationSettings: responseData.IntegrationSettings,\r\n                            elnUserInfo: responseData.ELNUserInfo,\r\n                            elnSite: responseData.ELNSite,\r\n                            genericLabel: responseData.GenericLabel,\r\n                            genericLabelIDS: responseData.GenericLabelIDS,\r\n                            sdmselnsettings: responseData.SDMSELNSettings,\r\n                            hideQualisForms: responseData.HideQualisForms,\r\n                            deputyUser: response.data.DeputyUser,\r\n                            deputyUserRole: response.data.DeputyUserRole,\r\n                            isDeputyLogin: false,\r\n                            loading: false,\r\n                            userImagePath: responseData.UserImagePath,\r\n                            //profileColor: \"#002699\",\r\n                            profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                            idleneed: true\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: inputParam\r\n                        });\r\n\r\n                        if (inputParam.navigation === 'dashboard') {\r\n                            dispatch(getListStaticDashBoard(responseData.UserInfo));\r\n                        } else if (inputParam.navigation === 'apiservice') {\r\n                            const inputParam1 = {\r\n                                inputData: { currentdate: formatInputDate(new Date(), true), \"userinfo\": inputParam.userInfo },\r\n                                serviceNeed: true, classUrl: inputParam.navigation, methodUrl: (responseData.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].smethodurl\r\n                            };\r\n                            dispatch(callService(inputParam1));\r\n                        }\r\n\r\n                        dispatch(getListAlert(responseData.UserInfo, true));\r\n                        if (responseData.PasswordAlertDay) {\r\n                            toast.info(intl.formatMessage({\r\n                                id: \"IDS_PASSWORDEXPIRY\"\r\n                            }) + \" \" + responseData.PasswordAlertDay + \" \" + intl.formatMessage({\r\n                                id: \"IDS_DAYS\"\r\n                            }))\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: returnStr\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitChangeRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getuserscreenrightsmenu\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userInfo: response.data.UserInfo,\r\n                        menuDesign: response.data.MenuDesign,\r\n                        navigation: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename,\r\n                        defaultMenuHome: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0],\r\n                        userRoleControlRights: response.data.UserRoleControlRights,\r\n                        userMultiRole: response.data.UserMultiRole,\r\n                        deputyUser: response.data.DeputyUser,\r\n                        deputyUserRole: response.data.DeputyUserRole,\r\n                        loading: false,\r\n                        masterData: [],\r\n                        displayName: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].sdisplayname,\r\n                        // navigation: \"home\",\r\n                        inputParam: {},\r\n                        openRoleBox: false\r\n                    }\r\n                });\r\n                if ((response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename === 'dashboard') {\r\n                    dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                } else if (inputParam.navigation === 'apiservice') {\r\n                    const inputParam1 = {\r\n                        inputData: { currentdate: formatInputDate(new Date(), true), \"userinfo\": response.data.UserInfo },\r\n                        serviceNeed: true, classUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].shomename, methodUrl: (response.data.HomeDesign.filter(x => x.ndefaultstatus === 3))[0].smethodurl\r\n                    };\r\n                    dispatch(callService(inputParam1));\r\n                }\r\n\r\n                // dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStore = (updateInfo) => dispatch => {\r\n    if (updateInfo.data.loadEsign === true) {\r\n\r\n        const currentTimeUrl = rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        });\r\n        const reasonUrl = rsapi.post(\"/reason/getReason\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        });\r\n        dispatch(initRequest(true));\r\n        Axios.all([currentTimeUrl, reasonUrl])\r\n            .then(response => {\r\n\r\n                const reasonMap = constructOptionList(response[1].data || [], \"nreasoncode\",\r\n                    \"sreason\", undefined, undefined, false);\r\n                const reasonList = reasonMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: updateInfo.typeName,\r\n                    payload: {\r\n                        serverTime: rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo, response[0].data),\r\n                        esignReasonList: reasonList,\r\n                        ...updateInfo.data,\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: updateInfo.typeName,\r\n            payload: {\r\n                ...updateInfo.data,\r\n                masterStatus: \"\",\r\n                errorCode: undefined\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getChangeUserRole = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getchangerole\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getLoginDetails = () => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginInfo\", {})\r\n            .then(response => {\r\n                // let loginType = [];\r\n                // response.data.LoginType.map(type => {\r\n                //     loginType\r\n                // })\r\n                const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n                let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n                let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n                const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginTypes: response.data.LoginType,\r\n                        loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n                        languageList: languageMap.get(\"OptionList\"),\r\n                        nlanguagecode: defaultLanguage || \"\",\r\n                        selectedRecord: {\r\n                            nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n                            nlanguagecode: defaultLanguage || \"\"\r\n                        },\r\n                        language: defaultLanguage.value,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserSiteAndRole = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginvalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                if (inputParam.Language !== undefined && inputParam.logintype !== undefined) {\r\n                    const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                    const siteMap = constructOptionList(response.data.Site || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                    let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                    let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                    if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                        logintypecode = inputParam.logintype;\r\n                        loggeInLoginTypeCode = logintypecode[0].value;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loginUserRole: roleMap.get(\"OptionList\"),\r\n                            loginUserSite: siteMap.get(\"OptionList\"),\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                            nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n\r\n                            nusercode: response.data.Users.nusercode,\r\n                            nlogintypecode: logintypecode ? logintypecode[0] : \"\",\r\n\r\n                            selectedRecord: {\r\n                                ...selectedRecord,\r\n                                nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                    roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                                nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                    siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                                nusercode: response.data.Users.nusercode,\r\n                                nlogintypecode: logintypecode ? logintypecode[0] : \"\"\r\n                            },\r\n\r\n                            openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: \"IDS_CREATEPASSWORD\",\r\n                            loading: false,\r\n                            PassFlag: response.data.PassFlag,\r\n                            createPwdRecord: {},\r\n                            userInfo: {\r\n                                nlogintypecode: loggeInLoginTypeCode\r\n                            }\r\n                        }\r\n\r\n\r\n                    });\r\n                } else {\r\n                    toast.warn(inputParam.Language === undefined ? \"Language not available\" : \"Login type not available\");\r\n                }\r\n            }\r\n            )\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else if (error.response === undefined) {\r\n                    toast.warn(\"Service not available\");\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const createPassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/createnewpassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCREATEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changepassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changepassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        navigation: \"login\"\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCHANGEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function validateEsignforDigitalSignature(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"performaction\"\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];                        \r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    dispatch(saveDigitalSign(inputParam[\"screenData\"][\"inputParam\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport const saveDigitalSign = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        const formData = inputParam.formData;\r\n        formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));  \r\n        rsapi.post(\"/digitalsignature/updateDigitalSignature\", formData )\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        loadEsign: false\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_DIGITALSIGNATURESAVEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getPassWordPolicy = (nuserrolecode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getPassWordPolicy\", {\r\n            nuserrolecode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        screenName: \"IDS_CHANGEPASSWORD\",\r\n                        passwordPolicy: response.data.PasswordPolicy\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getDigitalSign = (nusercode, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/digitalsignature/getDigitalSignature\", {\r\n            nusercode: nusercode, userInfo: userInfo\r\n        })\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let selectedDigiSign = responseData !== \"\" ? responseData : {}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        screenName: \"IDS_DIGITALSIGNATURE\",\r\n                        operation: \"update\",\r\n                        selectedDigiSign,\r\n                        isInitialRender: true\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeOwner = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changeOwner\", {\r\n            ...inputData\r\n        })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const inputParam = {\r\n                    userInfo: responseData.UserInfo,\r\n                    menuDesign: responseData.MenuDesign,\r\n                    userRoleControlRights: responseData.UserRoleControlRights,\r\n                    userFormControlProperties: responseData.UserFormControlproperties,\r\n                    transactionValidation: responseData.TransactionValidation,\r\n                    displayName: \"\",\r\n                    userMultiRole: responseData.UserMultiRole,\r\n                    isDeputyLogin: true,\r\n                    // settings: responseData.Settings,\r\n                    // deputyUser: response.data.DeputyUser,\r\n                    // deputyUserRole: response.data.DeputyUserRole,\r\n                    loading: false,\r\n                    masterData: [],\r\n                    navigation: \"home\",\r\n                    inputParam: {},\r\n                    openRoleBox: false,\r\n                    userImagePath: responseData.UserImagePath,\r\n                    profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                    idleneed: true\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: inputParam\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOutAuditAction = (inputData, languageList) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/insertAuditAction', {\r\n            ...inputData,\r\n            nFlag: 2\r\n        })\r\n            .then(response => {\r\n                languageList &&\r\n                    languageList.map(x => {\r\n                        loadMessages({}, x.slanguagetypecode);\r\n                    })\r\n                dispatch(navPage(\"login\"))\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const elnLoginAction = (inputParam, serverUrl, uiUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.objResponse !== null) {\r\n                    if (response.data.objResponse.status) {\r\n                        if (uiUrl) {\r\n                            let user = response;\r\n                            let elnURL = uiUrl + \"#\" + user.data.username + \"$\" + user.data.password;\r\n                            window.open(elnURL, '_blank');\r\n                        } else {\r\n                            toast.info(intl.FormattedMessage({\r\n                                id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                            }))\r\n                        }\r\n                    } else {\r\n                        toast.info(response.data.objResponse.information);\r\n                    }\r\n                    // if(!$(\"#appsdetails\").is(\":hidden\")){\r\n                    //     $('#appsdetails').addClass(\"dp-none\");\r\n                    // }\r\n                };\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const sdmsLoginAction = (inputParam, serverUrl, sdmsUIUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.status) {\r\n                    if (response.data.status) {\r\n                        const sdmsURL = sdmsUIUrl + \"?un=\" + response.data.username + \"&pd=\" + response.data.password + \"&sc=\" + inputParam.sSiteCode;\r\n                        window.open(sdmsURL, '_blank');\r\n                    } else {\r\n                        toast.info(response.Message);\r\n                    }\r\n                } else {\r\n                    toast.info(intl.FormattedMessage({\r\n                        id: \"IDS_CHECKSYNCSERVICE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersiteRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/changeSite', {\r\n            \"usersSite\": inputParam.selectedRecord.nusersitecode.item\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\"\r\n\r\n\r\n                        },\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkPassword = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getlogintypevalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusercode: response.data.Users.nusercode\r\n                        },\r\n                        userInfo: {\r\n                            nlogintypecode: inputParam.nlogintypecode\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getDashBoardForHome(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/staticdashboard/getListStaticDashBoard\", { 'userinfo': inputParam.data.userInfo })\r\n\r\n            .then(response => {\r\n\r\n                let respObject = { masterDataStatic: response.data, loading: false, userInfo: inputParam.data.userInfo };\r\n                if (response.data !== null && Object.keys(response.data).length > 0) {\r\n                    respObject = { ...inputParam.data, ...respObject, currentPageNo: -1 };\r\n                }\r\n                dispatch(getHomeDashBoard(inputParam.data.userInfo, 0, false, respObject));\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}