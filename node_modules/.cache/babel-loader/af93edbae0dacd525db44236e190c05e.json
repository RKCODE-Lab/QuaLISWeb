{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\n/* tslint:disable align */\n\n/* tslint:disable:no-use-before-declare */\n\nvar compileTemplate = function compileTemplate(Template, context, updateContext) {\n  var result = function result(data) {\n    updateContext(context, data);\n    var templateResult = ReactDOMServer.renderToStaticMarkup(React.createElement(Template, __assign({}, context)));\n    var parsed = Number(templateResult);\n    return isNaN(parsed) ? templateResult : parsed;\n  };\n\n  return result;\n};\n\nvar updateGroupHeaderContext = function updateGroupHeaderContext(context, data) {\n  context.$implicit = context.group = data;\n  context.field = data.field;\n  context.value = data.value;\n  context.aggregates = data.aggregates;\n};\n\nvar updateGroupFooterContext = function updateGroupFooterContext(context, data) {\n  context.group = data.group;\n  context.$implicit = context.aggregates = data;\n};\n\nvar updateFooterContext = function updateFooterContext(_context, _data) {};\n/* tslint:disable-line no-empty */\n\n/**\n * @hidden\n */\n\n\nexport var toExporterColumns = function toExporterColumns(sourceColumns) {\n  var exporterColumns = [];\n  var columnIndex = 0;\n\n  var addColumns = function addColumns(columns, result, level) {\n    columns.forEach(function (column) {\n      if (column.level === level) {\n        var exporterColumn = new ExporterColumn(column, columnIndex);\n        result.push(exporterColumn);\n\n        if (column.children && column.children.length > 1) {\n          var children = exporterColumn.columns = [];\n          addColumns(column.children, children, level + 1);\n        } else {\n          columnIndex++;\n        }\n      }\n    });\n  };\n\n  addColumns(sourceColumns, exporterColumns, 0);\n  return exporterColumns;\n};\n/**\n * @hidden\n */\n\nvar ExporterColumn =\n/** @class */\nfunction () {\n  function ExporterColumn(column, columnIndex) {\n    this.title = column.title;\n    this.field = column.field;\n    this.hidden = column.hidden;\n    this.locked = column.locked;\n    this.width = column.width;\n    this.headerCellOptions = column.headerCellOptions;\n    this.cellOptions = column.cellOptions;\n    this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n    this.groupFooterCellOptions = column.groupFooterCellOptions;\n    this.footerCellOptions = column.footerCellOptions;\n\n    if (column.footer) {\n      this.footerTemplate = compileTemplate(column.footer, {\n        $implicit: column,\n        column: column,\n        columnIndex: columnIndex\n      }, updateFooterContext);\n    }\n\n    if (column.groupFooter) {\n      this.groupFooterTemplate = compileTemplate(column.groupFooter, {\n        column: column,\n        field: column.field\n      }, updateGroupFooterContext);\n    }\n\n    if (column.groupHeader) {\n      this.groupHeaderTemplate = compileTemplate(column.groupHeader, {}, updateGroupHeaderContext);\n    }\n  }\n\n  return ExporterColumn;\n}();\n\nexport { ExporterColumn };","map":{"version":3,"sources":["../../../src/ooxml/ExporterColumns.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\n/* tslint:disable align */\n/* tslint:disable:no-use-before-declare */\nvar compileTemplate = function (Template, context, updateContext) {\n    var result = function (data) {\n        updateContext(context, data);\n        var templateResult = ReactDOMServer.renderToStaticMarkup(React.createElement(Template, __assign({}, context)));\n        var parsed = Number(templateResult);\n        return isNaN(parsed)\n            ? templateResult\n            : parsed;\n    };\n    return result;\n};\nvar updateGroupHeaderContext = function (context, data) {\n    context.$implicit = context.group = data;\n    context.field = data.field;\n    context.value = data.value;\n    context.aggregates = data.aggregates;\n};\nvar updateGroupFooterContext = function (context, data) {\n    context.group = data.group;\n    context.$implicit = context.aggregates = data;\n};\nvar updateFooterContext = function (_context, _data) { }; /* tslint:disable-line no-empty */\n/**\n * @hidden\n */\nexport var toExporterColumns = function (sourceColumns) {\n    var exporterColumns = [];\n    var columnIndex = 0;\n    var addColumns = function (columns, result, level) {\n        columns.forEach(function (column) {\n            if (column.level === level) {\n                var exporterColumn = new ExporterColumn(column, columnIndex);\n                result.push(exporterColumn);\n                if (column.children && column.children.length > 1) {\n                    var children = exporterColumn.columns = [];\n                    addColumns(column.children, children, level + 1);\n                }\n                else {\n                    columnIndex++;\n                }\n            }\n        });\n    };\n    addColumns(sourceColumns, exporterColumns, 0);\n    return exporterColumns;\n};\n/**\n * @hidden\n */\nvar ExporterColumn = /** @class */ (function () {\n    function ExporterColumn(column, columnIndex) {\n        this.title = column.title;\n        this.field = column.field;\n        this.hidden = column.hidden;\n        this.locked = column.locked;\n        this.width = column.width;\n        this.headerCellOptions = column.headerCellOptions;\n        this.cellOptions = column.cellOptions;\n        this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n        this.groupFooterCellOptions = column.groupFooterCellOptions;\n        this.footerCellOptions = column.footerCellOptions;\n        if (column.footer) {\n            this.footerTemplate = compileTemplate(column.footer, {\n                $implicit: column,\n                column: column,\n                columnIndex: columnIndex\n            }, updateFooterContext);\n        }\n        if (column.groupFooter) {\n            this.groupFooterTemplate = compileTemplate(column.groupFooter, {\n                column: column,\n                field: column.field\n            }, updateGroupFooterContext);\n        }\n        if (column.groupHeader) {\n            this.groupHeaderTemplate =\n                compileTemplate(column.groupHeader, {}, updateGroupHeaderContext);\n        }\n    }\n    return ExporterColumn;\n}());\nexport { ExporterColumn };\n//# sourceMappingURL=ExporterColumns.js.map"]},"metadata":{},"sourceType":"module"}