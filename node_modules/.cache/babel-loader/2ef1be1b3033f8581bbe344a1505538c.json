{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\Instrument.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FormattedMessage } from \"react-intl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter, filterColumnData, getTabDetails, getDataForAddEditValidation, addInstrumentFile, getDataForAddEditCalibration, getDataForAddEditMaintenance, OpenDate, CloseDate, viewAttachment } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { attachmentType, transactionStatus } from \"../../components/Enumeration\";\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, create_UUID, deleteAttachmentDropZone, rearrangeDateFormatDateOnly } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\";\nimport ReactTooltip from \"react-tooltip\";\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\nimport ModalShow from \"../../components/ModalShow\";\nimport AddOpenDate from \"./AddOpenDate\";\nimport AddCloseDate from \"./AddCloseDate\";\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Instrument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveModalClick = () => {\n      let inputData = [];\n      let inputParam = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef,\n          modalShow: false\n        };\n      } else {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef\n        };\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"modalShow\");\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let instSection = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n        let postParam = undefined;\n        let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"nsuppliercode\", \"nservicecode\", \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\", \"smodelnumber\", \"spono\", \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\", \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\n        inputData[\"instrument\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\"\n          };\n          inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          });\n        } else {\n          inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\n          inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item];\n          });\n          inputData[\"instrumentvalidation\"] = {\n            sremark: this.state.selectedRecord.sremark ? this.state.selectedRecord.sremark : \"\",\n            nusercode: this.props.Login.userInfo.nusercode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"] : transactionStatus.NA,\n            nvalidationstatus: this.state.selectedRecord[\"validation\"] ? this.state.selectedRecord[\"validation\"].value : transactionStatus.VALIDATION,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false)\n          };\n          inputData[\"instrumentcalibration\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            ncalibrationstatus: this.state.selectedRecord[\"calibration\"] ? this.state.selectedRecord[\"calibration\"].value : transactionStatus.NA,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"] : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"] : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"] : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"] : transactionStatus.NA,\n            npreregno: transactionStatus.NA,\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n          inputData[\"instrumentmaintenance\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"] : transactionStatus.NA,\n            nmaintenancestatus: this.state.selectedRecord[\"maintenance\"] ? this.state.selectedRecord[\"maintenance\"].value : transactionStatus.NA,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"] : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"] : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"] : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false)\n          };\n        }\n\n        inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\n        inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n\n        if (this.state.selectedRecord[\"dpodate\"]) {\n          inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dreceiveddate\"]) {\n          inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dinstallationdate\"]) {\n          inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpirydate\"]) {\n          inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dmanufacdate\"]) {\n          inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\n        }\n\n        inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\n\n        if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\n          if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\n            this.state.selectedRecord[\"nusercode\"].map(item => {\n              return instSection.push({\n                nusercode: item.value\n              });\n            });\n            inputData[\"instrumentsection\"] = instSection;\n          }\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Instrument\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_SECTION\") {\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Section\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        if (this.props.Login.operation === \"update\") {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.value,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false),\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\",\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\"\n          };\n        } else {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\",\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\"\n          };\n        }\n\n        if (this.state.selectedRecord[\"dvalidationdate\"]) {\n          inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false);\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentValidation\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const inputParam = this.onSaveInstrumentFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentcalibration\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n          sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n        };else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const inputParam = this.onSaveInstrumentCalibrationFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentmaintenance\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n        };else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const inputParam = this.onSaveInstrumentMaintenanceFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.Action === \"OPENDATE\") {\n        this.props.validateEsignCredential(inputParam, \"modalShow\");\n      } else if (this.props.Login.Action === \"Edit\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Delete\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Add\") {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      } else if (this.props.Login.Action === \"Closedate\") {\n        this.props.validateEsignCredential(inputParam, \"modalShow\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openModal\");\n      }\n    };\n\n    this.defaultRecord = defaultParam => {\n      const methodUrl = defaultParam.methodUrl;\n      let dataItem = defaultParam.selectedRecord;\n      dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\n      let dataState = undefined;\n\n      if (defaultParam.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          [methodUrl]: dataItem,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl,\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Test\",\n            operation: defaultParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.onSwitchChange = (item, key, methodUrl) => {\n      let dataItem = item;\n      dataItem[\"ndefaultstatus\"] = 3;\n      const inputParam = {\n        inputData: {\n          [key]: dataItem,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"testmaster\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\n    };\n\n    this.deleteTabFileRecord = deleteParam => {\n      let inputData = [];\n      const screenName = deleteParam.screenName;\n\n      if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibrationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenanceFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.DeleteInstrument = (operation, ncontrolCode) => {\n      let inputData = [];\n\n      if (operation.screenName === \"IDS_SECTION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\n        inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"Section\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentValidation\"] = {\n          ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode\n        };\n        inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidation\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        inputData[\"InstrumentCalibration\"] = {\n          ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n          ncalibrationstatus: this.props.Login.masterData.selectedInstrumentCalibration.ncalibrationstatus\n        };\n        inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        inputData[\"nFlag\"] = operation.nFlag;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibration\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentMaintenance\"] = {\n          ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode\n        };\n        inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenance\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Instrument\",\n          postParam,\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: operation.operation\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveInstrumentFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentCalibrationFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = 2;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentCalibrationFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = 1;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const tempData = Object.assign({}, instrumentFile);\n          const splittedFileName = file.name.split(\".\");\n          const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n          const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n          const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n          const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n          tempData[\"sfilename\"] = file.name;\n          tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          tempData[\"nlinkcode\"] = transactionStatus.NA;\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"nfilesize\"] = file.size;\n          tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n          tempData[\"nattachmenttypecode\"] = 1;\n          tempData[\"ninstrumentlogtypecode\"] = 3;\n          tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          instrumentFileArray.push(tempData);\n        });\n        formData.append(\"filecount\", acceptedFiles.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n        instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n        instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        instrumentFile[\"nattachmenttypecode\"] = 1;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 3;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentMaintenanceFile\"\n      };\n      return inputParam;\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n        sectionDataState: event.dataState\n      });\n    };\n\n    this.viewInstrumentFile = filedata => {\n      const inputParam = {\n        inputData: {\n          instrumentfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"view\",\n        methodUrl: \"AttachedInstrumentFile\",\n        screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\n      const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\n      tabMap.set(\"IDS_SECTION\", /*#__PURE__*/React.createElement(InstrumentSectionTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedSection\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultSecId: defaultSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentSection: this.props.Login.masterData.selectedSection || [],\n        screenName: \"IDS_SECTION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2683,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTVALIDATION\", /*#__PURE__*/React.createElement(InstrumentValidationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.ValidationFileData,\n        InstrumentValidation: this.props.Login.masterData.InstrumentValidation,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditValidation: this.props.getDataForAddEditValidation,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        getDataForEdit: this.props.getDataForEdit,\n        addfilecllick: this.addInstrumentFile,\n        viewInstrumentFile: this.viewInstrumentFile,\n        screenName: \"IDS_INSTRUMENTVALIDATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2704,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTCALIBRATION\", /*#__PURE__*/React.createElement(InstrumentCalibrationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.CalibrationFileData,\n        InstrumentCalibration: this.props.Login.masterData.InstrumentCalibration,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditCalibration: this.props.getDataForAddEditCalibration,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        viewInstrumentFile: this.viewInstrumentFile,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentCalibrationFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTCALIBRATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2729,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTMAINTENANCE\", /*#__PURE__*/React.createElement(InstrumentMaintenanceTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.MaintenanceFileData,\n        InstrumentMaintenance: this.props.Login.masterData.InstrumentMaintenance,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditMaintenance: this.props.getDataForAddEditMaintenance,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        viewInstrumentFile: this.viewInstrumentFile,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentMaintenanceFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTMAINTENANCE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2758,\n          columnNumber: 7\n        }\n      }));\n      return tabMap;\n    };\n\n    this.ConfirmDelete = (operation, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstrument(operation, deleteId, operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"));\n    };\n\n    this.addInstrumentFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\n      openModal = true;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          screenName,\n          inputData,\n          operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData !== null) {\n        switch (caseNo) {\n          case 1:\n            selectedRecord[fieldName] = comboData;\n            this.setState({\n              selectedRecord\n            });\n            break;\n\n          case 2:\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"nsectionusercode\"] = comboData.value;\n            this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n            break;\n\n          case 3:\n            let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n            nfilterInstrumentCategory = comboData;\n            this.searchRef.current.value = \"\";\n            this.setState({\n              nfilterInstrumentCategory\n            });\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        if (selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"nusercode\"];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"\n        }));\n      }\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedInstrument: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      sectionDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstrumentname\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    console.log(\"master main\", this.props.Login.masterData);\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTCATEGORY\",\n        dataField: \"ninstrumentcatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTID\",\n        dataField: \"sinstrumentid\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTNAME\",\n        dataField: \"sinstrumentname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SUPPLIER\",\n        dataField: \"nsuppliercode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SUPPLIER\",\n        dataField: \"nsuppliercode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MANUFACTURERNAME\",\n        dataField: \"nmanufcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MANUFACTURERDATE\",\n        dataField: \"dmanufacdate\",\n        mandatoryLabel: \"IDS_CHOOSE\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SERIALNO\",\n        dataField: \"sserialno\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTSTATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_INCHARGE\",\n          dataField: \"nusercode\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.state.selectedRecord[\"validation\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_VALIDATIONSTATUS\",\n          dataField: \"validation\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.state.selectedRecord[\"calibration\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_CALIBRATIONSTATUS\",\n          dataField: \"calibration\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.state.selectedRecord[\"maintenance\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_MAINTENANCESTATUS\",\n          dataField: \"maintenance\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") mandatoryFields.push({\n      mandatory: true,\n      idsName: \"IDS_SECTION\",\n      dataField: \"nsectioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_INCHARGE\",\n      dataField: \"nusercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    });else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n      mandatoryFields.push({\n        idsName: \"IDS_FILE\",\n        dataField: \"sfilename\",\n        mandatory: true,\n        mandatoryLabel: \"IDS_CHOOSE\",\n        controlType: \"file\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    }\n\n    const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\n    const {\n      selectedInstrument\n    } = this.props.Login.masterData;\n    const filterParam = {\n      inputListName: \"Instrument\",\n      selectedObject: \"selectedInstrument\",\n      primaryKeyField: \"ninstrumentcode\",\n      fetchUrl: \"instrument/getInstrument\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1718,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1719,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Instrument\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument,\n      getMasterDetail: Instrument => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstrument,\n      primaryKeyField: \"ninstrumentcode\",\n      mainField: \"sinstrumentname\",\n      firstField: \"sinstrumentid\",\n      secondField: \"sinstrumentcatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      addId: addId,\n      hidePaging: true,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        IDS_INSTRUMENTCATEGORYFILTER: /*#__PURE__*/React.createElement(InstrumentCategoryFilter, {\n          filterInstrumentCategory: this.state.filterInstrumentCategory || [],\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1773,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1789,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1791,\n        columnNumber: 21\n      }\n    }, this.props.Login.masterData.selectedInstrument ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1794,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1795,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1800,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1807,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1808,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1833,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete({\n        operation: \"delete\",\n        screenName: \"IDS_INSTRUMENT\"\n      }, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1863,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1864,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1865,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1866,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1867,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTNAME\",\n      message: \"Instrumentname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1868,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1873,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1881,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1882,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTID\",\n      message: \"Instrument Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1884,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1889,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1898,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1900,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEFAULTSTATUS\",\n      message: \"Default Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1901,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1906,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdefaultstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1917,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MODELNO\",\n      message: \"Modelno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1918,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smodelnumber))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1937,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PONO\",\n      message: \"PO No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1940,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1945,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spono))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1956,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1957,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1958,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURERDATE\",\n      message: \"ManufactureDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1959,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smanufacdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.smanufacdate) : this.props.Login.masterData.selectedInstrument.smanufacdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1982,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1983,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1984,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PODATE\",\n      message: \"PoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1985,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1990,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spodate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.spodate) : this.props.Login.spodate.selectedInstrument.spodate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2006,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2007,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2008,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATE\",\n      message: \"ReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2009,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sreceiveddate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate.selectedInstrument.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2032,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2033,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2034,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTALLATIONDATE\",\n      message: \"InstallationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2040,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sinstallationdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate.selectedInstrument.sinstallationdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2058,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2060,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYDATE\",\n      message: \"ExpiryDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2061,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2066,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sexpirydate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sexpirydate) : this.props.Login.sexpirydate.selectedInstrument.sexpirydate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2084,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2085,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2086,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERIALNO\",\n      message: \"Serialno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2087,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sserialno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2101,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTSTATUS\",\n      message: \"Instrumentstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2110,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sactivestatus === null || this.props.Login.masterData.selectedInstrument.sactivestatus.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sactivestatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2124,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2125,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2126,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2127,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2132,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sremarks)))), selectedInstrument && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2145,\n        columnNumber: 31\n      }\n    }))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2178,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(AddInstrument, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Supplier: this.props.Login.Supplier,\n        Manufacturer: this.props.Login.Manufacturer,\n        InstrumentStatus: this.props.Login.InstrumentStatus,\n        handleDateChange: this.handleDateChange,\n        Lab: this.props.Login.Lab,\n        Period: this.props.Login.Period,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        ValidationStatus: this.props.Login.ValidationStatus,\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        SectionUsers: this.props.Login.Users,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        defaultValue: this.props.Login.edqmManufacturer,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        expiryDate: this.props.Login.expiryDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2185,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_SECTION\" ? /*#__PURE__*/React.createElement(AddInstrumentSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        Lab: this.props.Login.Lab,\n        Users: this.props.Login.Users,\n        onComboChange: this.onComboChange,\n        onSwitchChange: this.onSwitchChange,\n        onInputOnChange: this.onInputOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2210,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? /*#__PURE__*/React.createElement(AddInstrumentValidation, {\n        selectedRecord: this.state.selectedRecord || {},\n        ValidationStatus: this.props.Login.ValidationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2220,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2235,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? /*#__PURE__*/React.createElement(AddInstrumentCalibration, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2246,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2261,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\" ? /*#__PURE__*/React.createElement(AddInstrumentMaintenance, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2272,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2287,\n          columnNumber: 17\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2163,\n        columnNumber: 11\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      esign: this.props.Login.loadEsign,\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2317,\n          columnNumber: 17\n        }\n      }) : this.props.Login.modalTitle === \"IDS_OPENDATE\" ? /*#__PURE__*/React.createElement(AddOpenDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2324,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddCloseDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2340,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2304,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterInstrumentCategory,\n      filterInstrumentCategory\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n\n      if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\n        nfilterInstrumentCategory = {\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          item: this.props.Login.masterData.SelectedInsCat\n        };\n      }\n\n      filterData = this.generateBreadCrumData();\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\n      const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", \"ntestcategorycode\", \"ascending\", false);\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\n\n      if (insCategoryMap.get(\"DefaultValue\")) {\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\n      } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\n      }\n\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        filterData,\n        nfilterInstrumentCategory,\n        filterInstrumentCategory\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.filterInstrumentCategory) {\n      breadCrumbData.push({\n        label: \"IDS_INSTRUMENTCATEGORY\",\n        value: this.props.Login.masterData.SelectedInsCat ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getInstrumentDetail,\n  filterColumnData,\n  getInstrumentCombo,\n  updateStore,\n  validateEsignCredential,\n  getSectionUsers,\n  getAvailableInstData,\n  changeInstrumentCategoryFilter,\n  getTabDetails,\n  getDataForAddEditValidation,\n  addInstrumentFile,\n  getDataForAddEditCalibration,\n  getDataForAddEditMaintenance,\n  OpenDate,\n  CloseDate,\n  viewAttachment\n})(injectIntl(Instrument));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/Instrument.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstrumentCombo","getInstrumentDetail","getSectionUsers","getAvailableInstData","changeInstrumentCategoryFilter","filterColumnData","getTabDetails","getDataForAddEditValidation","addInstrumentFile","getDataForAddEditCalibration","getDataForAddEditMaintenance","OpenDate","CloseDate","viewAttachment","ListMaster","attachmentType","transactionStatus","AddInstrument","AddInstrumentSection","DEFAULT_RETURN","SlideOutModal","CustomTab","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","create_UUID","deleteAttachmentDropZone","rearrangeDateFormatDateOnly","ReadOnlyText","ContentPanel","InstrumentSectionTab","process","ConfirmMessage","InstrumentCategoryFilter","BreadcrumbComponent","Affix","ReactTooltip","InstrumentValidationTab","AddInstrumentValidation","AddInstrumentFile","InstrumentCalibrationTab","AddInstrumentCalibration","ModalShow","AddOpenDate","AddCloseDate","InstrumentMaintenanceTab","AddInstrumentMaintenance","mapStateToProps","state","Login","Instrument","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","target","type","name","checked","value","onSaveModalClick","inputData","inputParam","userInfo","screenName","modalTitle","ninstrumentcode","masterData","selectedInstrument","ntzopendate","ninstrumentcalibrationcode","selectedInstrumentCalibration","ncalibrationstatus","ntranscode","sopenreason","nopenusercode","nusercode","ntzclosedate","sclosereason","ncloseusercode","classUrl","methodUrl","operation","searchRef","modalShow","ninstrumentmaintenancecode","selectedInstrumentMaintenance","nmaintenancestatus","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","onSaveClick","saveType","formRef","instSection","postParam","undefined","fieldList","nsitecode","nmastersitecode","inputListName","selectedObject","primaryKeyField","NA","map","item","sremark","ntzvalidationdate","nvalidationstatus","VALIDATION","dvalidationdate","dlastcalibrationdate","dopendate","UNDERCALIBIRATION","dclosedate","dduedate","ntzlastcalibrationdate","ntzduedate","npreregno","sarno","ntzlastmaintenancedate","UNDERMAINTANENCE","dlastmaintenancedate","label","push","instItem","ninstrumentvalidationcode","selectedInstrumentValidation","onSaveInstrumentFile","onSaveInstrumentCalibrationFile","onSaveInstrumentMaintenanceFile","onNumericInputOnChange","validateEsign","userinfo","sreason","password","Action","defaultRecord","defaultParam","dataItem","YES","dataState","sectionDataState","openChildModal","onSwitchChange","key","deleteTabFileRecord","deleteParam","ninstrumentfilecode","ninstrumentlogcode","sfilename","sfiledesc","openModal","DeleteInstrument","ninstrumentsectioncode","ndefaultstatus","nFlag","primaryKeyValue","fetchUrl","fecthInputObject","deleteAttachment","file","fieldName","actionType","acceptedFiles","nattachmenttypecode","isFileEdited","NO","instrumentFileArray","instrumentFile","nstatus","ACTIVE","formData","FormData","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","FTP","trim","size","append","nfilesize","JSON","stringify","isFileupload","onTabChange","tabProps","onDropTestFile","attachedFiles","maxSize","dataStateChange","dataResult","viewInstrumentFile","filedata","instrumentfile","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","defaultSecId","set","selectedSection","settings","ValidationFileData","InstrumentValidation","deleteAction","ConfirmDelete","getDataForEdit","CalibrationFileData","InstrumentCalibration","addInstrumentCalibrationFile","addOpenDate","MaintenanceFileData","InstrumentMaintenance","addInstrumentMaintenanceFile","deleteId","confirmMessage","confirm","intl","formatMessage","id","reloadData","current","nfilterInstrumentCategory","ninstrumentcatcode","filterInstrumentCategory","warn","onComboChange","comboData","caseNo","nsectionusercode","closeModal","selectedId","closeModalShow","openFilter","showFilter","closeFilter","onFilterSubmit","skip","take","error","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","console","log","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","addId","editId","filterParam","breadCrumbData","filterData","searchedData","IDS_INSTRUMENTCATEGORYFILTER","sinstrumentname","indexOf","e","sinstrumentid","sdefaultstatus","smodelnumber","spono","smanufacdate","dpodate","spodate","sreceiveddate","sinstallationdate","sexpirydate","sserialno","sactivestatus","sremarks","InstrumentCategory","Supplier","Manufacturer","InstrumentStatus","Lab","Period","TimeZoneList","ValidationStatus","CalibrationStatus","MaintenanceStatus","Users","edqmManufacturer","currentTime","expiryDate","componentDidUpdate","previousProps","updateState","values","SelectedInsCat","sinstrumentcatname","generateBreadCrumData","insCategoryMap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getInstrumentCombo,\r\n  getInstrumentDetail,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  filterColumnData,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport {\r\n  attachmentType,\r\n  transactionStatus,\r\n} from \"../../components/Enumeration\";\r\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\r\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  constructOptionList,\r\n  formatInputDate,\r\n  onDropAttachFileList,\r\n  create_UUID,\r\n  deleteAttachmentDropZone,\r\n  rearrangeDateFormatDateOnly,\r\n} from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\r\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\r\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\r\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\r\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\r\nimport ModalShow from \"../../components/ModalShow\";\r\nimport AddOpenDate from \"./AddOpenDate\";\r\nimport AddCloseDate from \"./AddCloseDate\";\r\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\r\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Instrument extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const sectionDataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedInstrument: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      sectionDataState,\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sinstrumentname\"];\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onInputOnChange = (event) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n  \r\n  onSaveModalClick = () => {\r\n    let inputData = [];\r\n    let inputParam = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n      inputData[\"instrumentcalibration\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n          \r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        ncalibrationstatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        \r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n      }\r\n      else{\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          \r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n          \r\n          sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n        };\r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      \r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n        modalShow: false,\r\n      };\r\n    } else {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n\r\n      inputData[\"instrumentmaintenance\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n        \r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n        nmaintenancestatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n    }\r\n      else{\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          \r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n            sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode\r\n        };\r\n  \r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n      };\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let inputData = [];\r\n    let instSection = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      let postParam = undefined;\r\n      let fieldList = [\r\n        \"ninstrumentcode\",\r\n        \"ninstrumentcatcode\",\r\n        \"nsuppliercode\",\r\n        \"nservicecode\",\r\n        \"nmanufcode\",\r\n        \"nusercode\",\r\n        \"sinstrumentid\",\r\n        \"sinstrumentname\",\r\n        \"smodelnumber\",\r\n        \"spono\",\r\n        \"nwindowsperiodminus\",\r\n        \"nwindowsperiodplus\",\r\n        \"nwindowsperiodminusunit\",\r\n        \"nwindowsperiodplusunit\",\r\n        \"sserialno\",\r\n        \"sremarks\",\r\n        \"ndefaultstatus\",\r\n        \"nsitecode\",\r\n        \"nstatus\",\r\n      ];\r\n\r\n      inputData[\"instrument\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      if (this.props.Login.operation === \"update\") {\r\n        postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrument\",\r\n          primaryKeyField: \"ninstrumentcode\",\r\n        };\r\n\r\n        inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\r\n          \"dmanufacdate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dmanufacdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\r\n          \"dpodate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dpodate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\r\n          \"dreceiveddate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dreceiveddate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sinstallationdate\"] = this.state\r\n          .selectedRecord[\"dinstallationdate\"]\r\n          ? this.state.selectedRecord[\"dinstallationdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\r\n          \"dexpirydate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dexpirydate\"]\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] = this.state.selectedRecord[\r\n            item\r\n          ]\r\n            ? this.state.selectedRecord[item]\r\n            : \"\");\r\n        });\r\n      } else {\r\n        inputData[\"instrument\"][\"ninstrumentstatus\"] =\r\n          this.state.selectedRecord[\"ntransactionstatus\"];\r\n        inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\r\n          \"nsectioncode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"nsectioncode\"].value\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] =\r\n            this.state.selectedRecord[item]);\r\n        });\r\n        inputData[\"instrumentvalidation\"] = {\r\n          sremark: this.state.selectedRecord.sremark\r\n  \r\n            ? this.state.selectedRecord.sremark\r\n            :\r\n            \"\",\r\n  \r\n          nusercode: this.props.Login.userInfo.nusercode,\r\n          ntzvalidationdate: this.state.selectedRecord[\r\n            \"ntzvalidationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            : transactionStatus.NA,\r\n  \r\n          nvalidationstatus: this.state.selectedRecord[\r\n            \"validation\"\r\n          ]\r\n            ? this.state.selectedRecord[\"validation\"].value\r\n            : transactionStatus.VALIDATION,\r\n  \r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          )\r\n        };\r\n        inputData[\"instrumentcalibration\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n  \r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          ncalibrationstatus: this.state.selectedRecord[\r\n            \"calibration\"\r\n          ]\r\n            ? this.state.selectedRecord[\"calibration\"].value\r\n            : transactionStatus.NA,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"]\r\n            : transactionStatus.NA,\r\n          dopendate: this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate: this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"]\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"]\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"]\r\n            : transactionStatus.NA,\r\n  \r\n          npreregno: transactionStatus.NA,\r\n  \r\n          sarno: this.state.selectedRecord[\r\n            \"sarno\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sarno\"]\r\n            : \"\"\r\n        }\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"]\r\n            : transactionStatus.NA,\r\n          nmaintenancestatus: this.state.selectedRecord[\r\n            \"maintenance\"\r\n          ]\r\n            ? this.state.selectedRecord[\"maintenance\"].value\r\n            : transactionStatus.NA,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"]\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"]\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"]\r\n            : transactionStatus.NA,\r\n          dopendate:this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate: this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          )\r\n  \r\n        }\r\n  \r\n      }\r\n      inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\r\n        \"ninstrumentcatcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ninstrumentcatcode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\r\n        \"nmanufcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\r\n        \"nsuppliercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nsuppliercode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\r\n        \"nservicecode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nservicecode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\r\n        \"ntranscode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\r\n        \"nwindowsperiodplus\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminus\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodplusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzmanufdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n\r\n      if (this.state.selectedRecord[\"dpodate\"]) {\r\n        inputData[\"instrument\"][\"dpodate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dpodate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dreceiveddate\"]) {\r\n        inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dreceiveddate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dinstallationdate\"]) {\r\n        inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dinstallationdate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dexpirydate\"]) {\r\n        inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dexpirydate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dmanufacdate\"]) {\r\n        inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dmanufacdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      inputData[\"instrument\"][\"nusercode\"] =\r\n        this.props.Login.userInfo.nusercode;\r\n\r\n      if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\r\n        if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\r\n          this.state.selectedRecord[\"nusercode\"].map((item) => {\r\n            return instSection.push({\r\n              nusercode: item.value,\r\n            });\r\n          });\r\n          inputData[\"instrumentsection\"] = instSection;\r\n        }\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Instrument\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") {\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state\r\n        .selectedRecord[\"nsectioncode\"]\r\n        ? this.state.selectedRecord[\"nsectioncode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\r\n        \"nusercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        this.props.Login.instItem[\"ninstrumentcode\"];\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Section\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      if (this.props.Login.operation === \"update\") {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentvalidationcode:\r\n            this.props.Login.masterData.selectedInstrumentValidation\r\n              .ninstrumentvalidationcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          ),\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n        };\r\n      } else {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n        };\r\n      }\r\n      if (this.state.selectedRecord[\"dvalidationdate\"]) {\r\n        inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dvalidationdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentValidation\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const inputParam = this.onSaveInstrumentFile(saveType, formRef);\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nopenusercode: this.props.Login.userInfo.nusercode,\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\"\r\n        };\r\n      else {\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\"\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentCalibrationFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            nopenusercode: this.props.Login.userInfo.nusercode,\r\n            ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      else {\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentMaintenanceFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    if (this.props.Login.Action === \"OPENDATE\") {\r\n      this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n    } else if (this.props.Login.Action === \"Edit\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Delete\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Add\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    } else if (this.props.Login.Action === \"Closedate\") {\r\n      this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n    } else {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n  };\r\n\r\n  defaultRecord = (defaultParam) => {\r\n    const methodUrl = defaultParam.methodUrl;\r\n    let dataItem = defaultParam.selectedRecord;\r\n    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n    let dataState = undefined;\r\n    if (defaultParam.screenName === \"IDS_SECTION\") {\r\n      dataState = this.state.sectionDataState;\r\n    }\r\n    const inputParam = {\r\n      inputData: {\r\n        [methodUrl]: dataItem,\r\n        userinfo: this.props.Login.userInfo,\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n      dataState,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        defaultParam.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openChildModal: true,\r\n          screenName: \"Test\",\r\n          operation: defaultParam.operation,\r\n          selectedRecord: {},\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n    }\r\n  };\r\n\r\n  onSwitchChange = (item, key, methodUrl) => {\r\n    let dataItem = item;\r\n    dataItem[\"ndefaultstatus\"] = 3;\r\n    const inputParam = {\r\n      inputData: {\r\n        [key]: dataItem,\r\n        userinfo: this.props.userInfo,\r\n      },\r\n      classUrl: \"testmaster\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n    };\r\n    this.props.crudMaster(\r\n      inputParam,\r\n      this.props.masterData,\r\n      \"openChildModal\",\r\n      {}\r\n    );\r\n  };\r\n\r\n  deleteTabFileRecord = (deleteParam) => {\r\n    let inputData = [];\r\n    const screenName = deleteParam.screenName;\r\n    if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc\r\n\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibrationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n            ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenanceFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  DeleteInstrument = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    if (operation.screenName === \"IDS_SECTION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] =\r\n        operation.selectedRecord.ninstrumentsectioncode;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        operation.selectedRecord.ninstrumentcode;\r\n      inputData[\"instrumentsection\"][\"ndefaultstatus\"] =\r\n        operation.selectedRecord.ndefaultstatus;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"Section\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n    else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentValidation\"] = {\r\n        ninstrumentvalidationcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n      };\r\n      inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidation\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      inputData[\"InstrumentCalibration\"] = {\r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n            ncalibrationstatus:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ncalibrationstatus,\r\n      };\r\n      inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      inputData[\"nFlag\"] = operation.nFlag;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibration\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentMaintenance\"] = {\r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n      };\r\n      inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else {\r\n      inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n      const postParam = {\r\n        inputListName: \"Instrument\",\r\n        selectedObject: \"selectedInstrument\",\r\n        primaryKeyField: \"ninstrumentcode\",\r\n        primaryKeyValue:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        methodUrl: \"Instrument\",\r\n        postParam,\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: operation.operation,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"master main\", this.props.Login.masterData);\r\n    let mandatoryFields = [];\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTCATEGORY\",\r\n          dataField: \"ninstrumentcatcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTID\",\r\n          dataField: \"sinstrumentid\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTNAME\",\r\n          dataField: \"sinstrumentname\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SUPPLIER\",\r\n          dataField: \"nsuppliercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SUPPLIER\",\r\n          dataField: \"nsuppliercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_MANUFACTURERNAME\",\r\n          dataField: \"nmanufcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_MANUFACTURERDATE\",\r\n          dataField: \"dmanufacdate\",\r\n          mandatoryLabel: \"IDS_CHOOSE\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SERIALNO\",\r\n          dataField: \"sserialno\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        \r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTSTATUS\",\r\n          dataField: \"ntranscode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.state.selectedRecord[\"validation\"]) {\r\n        mandatoryFields.push({\r\n         \r\n          mandatory: true,\r\n          idsName: \"IDS_VALIDATIONSTATUS\",\r\n          dataField: \"validation\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.state.selectedRecord[\"calibration\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_CALIBRATIONSTATUS\",\r\n          dataField: \"calibration\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.state.selectedRecord[\"maintenance\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_MAINTENANCESTATUS\",\r\n          dataField: \"maintenance\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\")\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SECTION\",\r\n          dataField: \"nsectioncode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n    else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      mandatoryFields.push({\r\n        idsName: \"IDS_FILE\",\r\n        dataField: \"sfilename\",\r\n        mandatory: true,\r\n        mandatoryLabel: \"IDS_CHOOSE\",\r\n        controlType: \"file\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    }\r\n\r\n    const addId =\r\n      this.state.controlMap.has(\"AddInstrument\") &&\r\n      this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditInstrument\") &&\r\n      this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeleteInstrument\") &&\r\n      this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\r\n\r\n    const { selectedInstrument } = this.props.Login.masterData;\r\n    const filterParam = {\r\n      inputListName: \"Instrument\",\r\n      selectedObject: \"selectedInstrument\",\r\n      primaryKeyField: \"ninstrumentcode\",\r\n      fetchUrl: \"instrument/getInstrument\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                formatMessage={this.props.intl.formatMessage}\r\n                screenName={\"Instrument\"}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.Instrument\r\n                }\r\n                getMasterDetail={(Instrument) =>\r\n                  this.props.getInstrumentDetail(\r\n                    Instrument,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.selectedInstrument}\r\n                primaryKeyField=\"ninstrumentcode\"\r\n                mainField=\"sinstrumentname\"\r\n                firstField=\"sinstrumentid\"\r\n                secondField=\"sinstrumentcatname\"\r\n                isIDSField=\"Yes\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                searchRef={this.searchRef}\r\n                addId={addId}\r\n                hidePaging={true}\r\n                reloadData={this.reloadData}\r\n                openModal={() =>\r\n                  this.props.getInstrumentCombo(\r\n                    \"IDS_INSTRUMENT\",\r\n                    \"create\",\r\n                    \"ninstrumentcode\",\r\n                    this.props.Login.masterData,\r\n                    this.props.Login.userInfo,\r\n                    addId\r\n                  )\r\n                }\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    IDS_INSTRUMENTCATEGORYFILTER: (\r\n                      <InstrumentCategoryFilter\r\n                        filterInstrumentCategory={\r\n                          this.state.filterInstrumentCategory || []\r\n                        }\r\n                        nfilterInstrumentCategory={\r\n                          this.state.nfilterInstrumentCategory || {}\r\n                        }\r\n                        onComboChange={this.onComboChange}\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ContentPanel className=\"panel-main-content\">\r\n                    <Card className=\"border-0\">\r\n                      {this.props.Login.masterData.selectedInstrument ? (\r\n                        <>\r\n                          <Card.Header>\r\n                            <ReactTooltip\r\n                              place=\"bottom\"\r\n                              globalEventOff=\"click\"\r\n                              id=\"tooltip_list_wrap\"\r\n                            />\r\n                            <Card.Title className=\"product-title-main\">\r\n                              {\r\n                                this.props.Login.masterData.selectedInstrument\r\n                                  .sinstrumentname\r\n                              }\r\n                            </Card.Title>\r\n                            <Card.Subtitle>\r\n                              <div className=\"d-flex product-category\">\r\n                                <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                <div className=\"d-inline\">\r\n                                  <Nav.Link\r\n                                    name=\"editInstrument\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_EDIT\",\r\n                                    })}\r\n                                    data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        editId\r\n                                      ) === -1\r\n                                    }\r\n                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                    onClick={(e) =>\r\n                                      this.props.getInstrumentCombo(\r\n                                        \"IDS_INSTRUMENT\",\r\n                                        \"update\",\r\n                                        \"ninstrumentcode\",\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        editId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                  </Nav.Link>\r\n                                  <Nav.Link\r\n                                    name=\"deleteInstrument\"\r\n                                    className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_DELETE\",\r\n                                    })}\r\n                                    data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        deleteId\r\n                                      ) === -1\r\n                                    }\r\n                                    onClick={() =>\r\n                                      this.ConfirmDelete(\r\n                                        {\r\n                                          operation: \"delete\",\r\n                                          screenName: \"IDS_INSTRUMENT\",\r\n                                        },\r\n                                        deleteId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                  </Nav.Link>\r\n                                </div>\r\n                              </div>\r\n                            </Card.Subtitle>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTNAME\"\r\n                                      message=\"Instrumentname\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentname\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTID\"\r\n                                      message=\"Instrument Id\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentid\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_DEFAULTSTATUS\"\r\n                                      message=\"Default Status\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sdefaultstatus\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MODELNO\"\r\n                                      message=\"Modelno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smodelnumber ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PONO\"\r\n                                      message=\"PO No.\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.spono === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.spono.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spono}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MANUFACTURERDATE\"\r\n                                      message=\"ManufactureDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smanufacdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.smanufacdate) : this.props.Login.masterData\r\n                                              .selectedInstrument.smanufacdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PODATE\"\r\n                                      message=\"PoDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.dpodate === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.dpodate === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spodate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.spodate) : this.props.Login.spodate\r\n                                              .selectedInstrument.spodate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_RECEIVEDDATE\"\r\n                                      message=\"ReceiveDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sreceiveddate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate\r\n                                              .selectedInstrument.sreceiveddate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTALLATIONDATE\"\r\n                                      message=\"InstallationDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sinstallationdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate\r\n                                              .selectedInstrument.sinstallationdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_EXPIRYDATE\"\r\n                                      message=\"ExpiryDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sexpirydate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate.length ===\r\n                                      0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sexpirydate) : this.props.Login.sexpirydate\r\n                                              .selectedInstrument.sexpirydate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERIALNO\"\r\n                                      message=\"Serialno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sserialno\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTSTATUS\"\r\n                                      message=\"Instrumentstatus\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sactivestatus ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sactivestatus\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sactivestatus}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_REMARKS\"\r\n                                      message=\"Remarks\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sremarks === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            {selectedInstrument && (\r\n                              <CustomTab\r\n                                tabDetail={this.tabDetail()}\r\n                                onTabChange={this.onTabChange}\r\n                              />\r\n                            )}\r\n                          </Card.Body>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Card>\r\n                  </ContentPanel>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {this.props.Login.openModal && (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? (\r\n                <AddInstrument\r\n                  onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                  Supplier={this.props.Login.Supplier}\r\n                  Manufacturer={this.props.Login.Manufacturer}\r\n                  InstrumentStatus={this.props.Login.InstrumentStatus}\r\n                  handleDateChange={this.handleDateChange}\r\n                  Lab={this.props.Login.Lab}\r\n                  Period={this.props.Login.Period}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  SectionUsers={this.props.Login.Users}\r\n                  operation={this.props.Login.operation}\r\n                  inputParam={this.props.inputParam}\r\n                  defaultValue={this.props.Login.edqmManufacturer}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  expiryDate={this.props.Login.expiryDate}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_SECTION\" ? (\r\n                <AddInstrumentSection\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  Lab={this.props.Login.Lab}\r\n                  Users={this.props.Login.Users}\r\n                  onComboChange={this.onComboChange}\r\n                  onSwitchChange={this.onSwitchChange}\r\n                  onInputOnChange={this.onInputOnChange}\r\n\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? (\r\n                <AddInstrumentValidation\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTVALIDATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATION\" ? (\r\n                <AddInstrumentCalibration\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCE\" ? (\r\n                <AddInstrumentMaintenance\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCEFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n        )}\r\n\r\n        {this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            esign={this.props.Login.loadEsign}\r\n            modalTitle={this.props.Login.modalTitle}\r\n            modalBody={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.modalTitle === \"IDS_OPENDATE\" ? (\r\n                <AddOpenDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              ) : (\r\n                <AddCloseDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onSaveInstrumentFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentCalibrationFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 2;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentCalibrationFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = 1;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 3;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 3;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentMaintenanceFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n  viewInstrumentFile = (filedata) => {\r\n    const inputParam = {\r\n      inputData: {\r\n        instrumentfile: filedata,\r\n        userinfo: this.props.Login.userInfo\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"view\",\r\n      methodUrl: \"AttachedInstrumentFile\",\r\n      screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\r\n    }\r\n    this.props.viewAttachment(inputParam);\r\n  }\r\n\r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    const deleteSecId =\r\n      this.state.controlMap.has(\"DeleteSection\") &&\r\n      this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n    const defaultSecId =\r\n      this.state.controlMap.has(\"DefaultSection\") &&\r\n      this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n    tabMap.set(\r\n      \"IDS_SECTION\",\r\n      <InstrumentSectionTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        dataState={this.props.Login.dataState}\r\n        masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        userInfo={this.props.Login.userInfo}\r\n        inputParam={this.props.Login.inputParam}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteSecId={deleteSecId}\r\n        defaultSecId={defaultSecId}\r\n        defaultRecord={this.defaultRecord}\r\n        getAvailableInstData={this.props.getAvailableInstData}\r\n        InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n        screenName=\"IDS_SECTION\"\r\n        selectedRecord={this.state.selectedRecord}\r\n        settings={this.props.Login.settings}\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTVALIDATION\",\r\n      <InstrumentValidationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.ValidationFileData}\r\n        InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        getDataForEdit={this.props.getDataForEdit}\r\n        addfilecllick={this.addInstrumentFile}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTCALIBRATION\",\r\n      <InstrumentCalibrationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.CalibrationFileData}\r\n        InstrumentCalibration={\r\n          this.props.Login.masterData.InstrumentCalibration\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentCalibrationFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTMAINTENANCE\",\r\n      <InstrumentMaintenanceTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.MaintenanceFileData}\r\n        InstrumentMaintenance={\r\n          this.props.Login.masterData.InstrumentMaintenance\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentMaintenanceFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n      />\r\n    );\r\n\r\n    return tabMap;\r\n  };\r\n\r\n  ConfirmDelete = (operation, deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteInstrument(\r\n          operation,\r\n          deleteId,\r\n          operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"\r\n        )\r\n    );\r\n  };\r\n  addInstrumentFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n  addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\r\n    openModal = true;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, screenName, inputData, operation },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (comboData !== null) {\r\n      switch (caseNo) {\r\n        case 1:\r\n          selectedRecord[fieldName] = comboData;\r\n          this.setState({ selectedRecord });\r\n          break;\r\n        case 2:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"nsectionusercode\"] = comboData.value;\r\n          this.props.getSectionUsers(\r\n            this.state.selectedRecord.nsectionusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n        case 3:\r\n          let nfilterInstrumentCategory =\r\n            this.state.nfilterInstrumentCategory || {};\r\n          nfilterInstrumentCategory = comboData;\r\n          this.searchRef.current.value = \"\";\r\n          this.setState({ nfilterInstrumentCategory });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    else {\r\n      if (selectedRecord[\"nsectioncode\"]) {\r\n        delete selectedRecord[\"nsectioncode\"];\r\n        delete selectedRecord[\"nusercode\"];\r\n\r\n      }\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { selectedRecord }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n      }\r\n    } else {\r\n      openModal = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId: null },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n  closeModalShow = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let modalShow = this.props.Login.modalShow;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n    } else {\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterInstrumentCategory,\r\n      filterInstrumentCategory,\r\n    } = this.state;\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      updateState = true;\r\n    }\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\r\n      if (\r\n        this.props.Login.masterData.SelectedInsCat &&\r\n        this.props.Login.masterData.SelectedInsCat !==\r\n        previousProps.Login.masterData.SelectedInsCat\r\n      ) {\r\n        nfilterInstrumentCategory = {\r\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\r\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n          item: this.props.Login.masterData.SelectedInsCat,\r\n        };\r\n      }\r\n      filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.masterData.filterInstrumentCategory !==\r\n      previousProps.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      const insCategoryMap = constructOptionList(\r\n        this.props.Login.masterData.filterInstrumentCategory || [],\r\n        \"ninstrumentcatcode\",\r\n        \"sinstrumentcatname\",\r\n        \"ntestcategorycode\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\r\n      if (insCategoryMap.get(\"DefaultValue\")) {\r\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\r\n      } else if (\r\n        filterInstrumentCategory &&\r\n        filterInstrumentCategory.length > 0\r\n      ) {\r\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n      }\r\n      updateState = true;\r\n    }\r\n    if (updateState) {\r\n      this.setState({\r\n        selectedRecord,\r\n        userRoleControlRights,\r\n        controlMap,\r\n        filterData,\r\n        nfilterInstrumentCategory,\r\n        filterInstrumentCategory,\r\n      });\r\n    }\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (\r\n      this.props.Login.masterData &&\r\n      this.props.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      breadCrumbData.push({\r\n        label: \"IDS_INSTRUMENTCATEGORY\",\r\n        value: this.props.Login.masterData.SelectedInsCat\r\n          ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n          : \"NA\",\r\n      });\r\n    }\r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  getInstrumentDetail,\r\n  filterColumnData,\r\n  getInstrumentCombo,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment\r\n})(injectIntl(Instrument));\r\n"]},"metadata":{},"sourceType":"module"}