{"ast":null,"code":"import React,{Component}from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import DataGridWithSelection from'../../components/data-grid/DataGridWithSelection';import FormInput from'../../components/form-input/form-input.component';var ExternalOrder=function ExternalOrder(props){function onOrderSearchEvent(event){if(event.keyCode===13){var inputValue=event.target.value;if(inputValue!==\"\"){props.onOrderSearch(inputValue);}}}var extractedColumnList=[];extractedColumnList.push({\"idsName\":\"IDS_ORDERSAMPLEID\",\"dataField\":\"sexternalsampleid\",\"width\":\"155px\"});extractedColumnList.push({\"idsName\":\"IDS_EXTERNALORDER\",\"dataField\":\"sexternalorderid\",\"width\":\"155px\"});return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_ORDERSAMPLEID\"}),name:\"sexternalorderid\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ENTERNALORDERSAMPLENO\"}),value:props.selectedRecord[\"sexternalorderid\"]?props.selectedRecord[\"sexternalorderid\"]:\"\",onKeyUp:onOrderSearchEvent,isMandatory:false,required:false,maxLength:100})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(DataGridWithSelection,{data:props.orders,selectAll:props.addSelectAll||false,title:props.intl.formatMessage({id:\"IDS_SELECTTOADD\"}),selectionChange:props.selectionChange,headerSelectionChange:props.headerSelectionChange,extractedColumnList:extractedColumnList})));};export default injectIntl(ExternalOrder);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/ExternalOrder.jsx"],"names":["React","Component","Col","Row","injectIntl","DataGridWithSelection","FormInput","ExternalOrder","props","onOrderSearchEvent","event","keyCode","inputValue","target","value","onOrderSearch","extractedColumnList","push","intl","formatMessage","id","onInputOnChange","selectedRecord","orders","addSelectAll","selectionChange","headerSelectionChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,kDAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAS,CAE3B,QAASC,CAAAA,kBAAT,CAA6BC,KAA7B,CAAmC,CAC/B,GAAIA,KAAK,CAACC,OAAN,GAAkB,EAAtB,CAA0B,CACtB,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,MAAN,CAAaC,KAAhC,CACA,GAAIF,UAAU,GAAK,EAAnB,CAAuB,CACnBJ,KAAK,CAACO,aAAN,CAAoBH,UAApB,EACH,CACJ,CACJ,CAEe,GAAMI,CAAAA,mBAAmB,CAAG,EAA5B,CAEQA,mBAAmB,CAACC,IAApB,CAAyB,CAAC,UAAU,mBAAX,CAA+B,YAAY,mBAA3C,CAAgE,QAAS,OAAzE,CAAzB,EACAD,mBAAmB,CAACC,IAApB,CAAyB,CAAC,UAAU,mBAAX,CAA+B,YAAY,kBAA3C,CAA+D,QAAS,OAAxE,CAAzB,EACR,mBACA,oBAAC,GAAD,mBACG,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACH,oBAAC,SAAD,EACI,KAAK,CAAET,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,mBAAN,CAAzB,CADX,CAEI,IAAI,CAAE,kBAFV,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACV,KAAD,QAAWF,CAAAA,KAAK,CAACa,eAAN,CAAsBX,KAAtB,CAAX,EAJd,CAKI,WAAW,CAAEF,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,2BAAN,CAAzB,CALjB,CAMI,KAAK,CAAEZ,KAAK,CAACc,cAAN,CAAqB,kBAArB,EAA2Cd,KAAK,CAACc,cAAN,CAAqB,kBAArB,CAA3C,CAAsF,EANjG,CAOI,OAAO,CAAEb,kBAPb,CAQI,WAAW,CAAE,KARjB,CASI,QAAQ,CAAE,KATd,CAUI,SAAS,CAAE,GAVf,EADG,CADH,cAgBI,oBAAC,GAAD,mBACA,oBAAC,qBAAD,EACQ,IAAI,CAAED,KAAK,CAACe,MADpB,CAEQ,SAAS,CAAEf,KAAK,CAACgB,YAAN,EAAqB,KAFxC,CAGQ,KAAK,CAAEhB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB,CAACC,EAAE,CAAC,iBAAJ,CAAzB,CAHf,CAIQ,eAAe,CAAEZ,KAAK,CAACiB,eAJ/B,CAKQ,qBAAqB,CAAEjB,KAAK,CAACkB,qBALrC,CAMQ,mBAAmB,CAAEV,mBAN7B,EADA,CAhBJ,CADA,CA6BP,CA5Cb,CA+CA,cAAgBZ,CAAAA,UAAU,CAACG,aAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\n\r\n\r\n\r\nconst ExternalOrder = (props)=>{\r\n\r\n    function onOrderSearchEvent (event){\r\n        if (event.keyCode === 13) {\r\n            const inputValue = event.target.value;\r\n            if (inputValue !== \"\") {\r\n                props.onOrderSearch(inputValue);\r\n            }\r\n        }\r\n    }\r\n   \r\n                    const extractedColumnList = [];\r\n                           \r\n                            extractedColumnList.push({\"idsName\":\"IDS_ORDERSAMPLEID\",\"dataField\":\"sexternalsampleid\", \"width\": \"155px\"});\r\n                            extractedColumnList.push({\"idsName\":\"IDS_EXTERNALORDER\",\"dataField\":\"sexternalorderid\", \"width\": \"155px\"} );\r\n                    return (\r\n                    <Row>\r\n                       <Col md={12}>  \r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_ORDERSAMPLEID\" })}\r\n                        name= \"sexternalorderid\"\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_ENTERNALORDERSAMPLENO\" })}\r\n                        value={props.selectedRecord[\"sexternalorderid\"] ? props.selectedRecord[\"sexternalorderid\"] : \"\"}\r\n                        onKeyUp={onOrderSearchEvent}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={100}\r\n                    />   \r\n                        </Col>\r\n\r\n                        <Col>                     \r\n                        <DataGridWithSelection                               \r\n                                data={props.orders} \r\n                                selectAll={props.addSelectAll|| false}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTOADD\"})}\r\n                                selectionChange={props.selectionChange}\r\n                                headerSelectionChange={props.headerSelectionChange}\r\n                                extractedColumnList={extractedColumnList}                            \r\n                        /> \r\n                </Col>\r\n                    </Row>\r\n                    );\r\n            }\r\n            \r\n    \r\nexport default  injectIntl(ExternalOrder);"]},"metadata":{},"sourceType":"module"}