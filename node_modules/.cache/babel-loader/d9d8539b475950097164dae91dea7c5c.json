{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes'; //import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\n\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nexport function edqmProductFetchRecord(inputParam) {\n  return function (dispatch) {\n    const productDomainData = rsapi.post(\"edqmproductdomain/getEDQMProductDomain\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const productDescData = rsapi.post(\"edqmproductdescription/getEDQMProductDescription\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const productTypeData = rsapi.post(\"edqmproducttype/getAllEDQMProductType\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const bulkTypeData = rsapi.post(\"edqmbulktype/getAllEDQMBulkType\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const componentBulkData = rsapi.post(\"edqmcomponentbulkgroup/getAllEDQMComponentBulkGroup\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const masterFileData = rsapi.post(\"edqmmasterfiletype/getAllEDQMMasterFileType\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n\n    const safetyFileData = rsapi.post(\"edqmsafetymarker/getAllEDQMSafetyMarker\", {\n      \"userinfo\": inputParam.userInfo\n    }); //this.props.Login.userInfo\n    //this.props.Login.userInfo\n\n    let urlArray = [];\n    let selectedId = null;\n\n    if (inputParam.operation === \"update\") {\n      const productData = rsapi.post(\"edqmproduct/getActiveEDQMProductById\", {\n        [inputParam.primaryKeyField]: inputParam.primaryKeyValue,\n        \"userinfo\": inputParam.userInfo\n      });\n      const safetyFil = rsapi.post(\"edqmsafetymarker/getSafetyMarkersEdit\", {\n        [inputParam.primaryKeyField]: inputParam.primaryKeyValue,\n        \"userinfo\": inputParam.userInfo\n      });\n      urlArray = [productDomainData, productDescData, productTypeData, bulkTypeData, componentBulkData, masterFileData, safetyFileData, productData, safetyFil];\n      selectedId = inputParam.primaryKeyValue;\n    } else {\n      urlArray = [productDomainData, productDescData, productTypeData, bulkTypeData, componentBulkData, masterFileData, safetyFileData];\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(Axios.spread(function () {\n      let nproductdomaincode = [];\n      let nproductdesccode = [];\n      let nproducttypecode = [];\n      let nbulktypecode = [];\n      let ncomponentbulkgroupcode = [];\n      let nmasterfiletypecode = [];\n      let nsafetymarkercode = [];\n      let safetyFileData = []; //let selectedRecord = {};\n\n      for (var _len = arguments.length, response = new Array(_len), _key = 0; _key < _len; _key++) {\n        response[_key] = arguments[_key];\n      }\n\n      if (inputParam.operation === \"update\") {\n        nproductdomaincode.push({\n          label: response[7].data[\"sproductdomain\"],\n          value: response[7].data[\"nproductdomaincode\"]\n        });\n        nproductdesccode.push({\n          label: response[7].data[\"sproductclass\"],\n          value: response[7].data[\"nproductdesccode\"]\n        });\n\n        if (response[7].data[\"nproducttypecode\"] !== -1) {\n          nproducttypecode.push({\n            label: response[7].data[\"sproducttype\"],\n            value: response[7].data[\"nproducttypecode\"]\n          });\n        }\n\n        if (response[7].data[\"nbulktypecode\"] !== -1) {\n          nbulktypecode.push({\n            label: response[7].data[\"sbulktype\"],\n            value: response[7].data[\"nbulktypecode\"]\n          });\n        }\n\n        if (response[7].data[\"ncomponentbulkgroupcode\"] !== -1) {\n          ncomponentbulkgroupcode.push({\n            label: response[7].data[\"scomponentbulkgroup\"],\n            value: response[7].data[\"ncomponentbulkgroupcode\"]\n          });\n        }\n\n        if (response[7].data[\"nmasterfiletypecode\"] !== -1) {\n          nmasterfiletypecode.push({\n            label: response[7].data[\"smasterfiletype\"],\n            value: response[7].data[\"nmasterfiletypecode\"]\n          });\n        }\n\n        if (response[7].data[\"nsafetymarkercode\"] !== -1) {\n          nsafetymarkercode.push({\n            label: response[7].data[\"ssafetymarkername\"],\n            value: response[7].data[\"nsafetymarkercode\"]\n          });\n        }\n\n        safetyFileData = response[8].data;\n      } else {\n        safetyFileData = response[6].data;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          productDomainData: response[0].data,\n          productDescData: response[1].data,\n          productTypeData: response[2].data,\n          bulkTypeData: response[3].data,\n          componentBulkData: response[4].data,\n          masterFileData: response[5].data,\n          safetyFileData: safetyFileData,\n          nproductdomaincode,\n          nproductdesccode,\n          nproducttypecode,\n          nbulktypecode,\n          ncomponentbulkgroupcode,\n          nmasterfiletypecode,\n          nsafetymarkercode,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          selectedRecord: inputParam.operation === \"update\" ? response[7].data : {},\n          openModal: true,\n          ncontrolCode: inputParam.ncontrolCode,\n          loading: false,\n          selectedId\n        }\n      });\n    })).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  }; //\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/EDQMProductAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","intl","edqmProductFetchRecord","inputParam","dispatch","productDomainData","post","userInfo","productDescData","productTypeData","bulkTypeData","componentBulkData","masterFileData","safetyFileData","urlArray","selectedId","operation","productData","primaryKeyField","primaryKeyValue","safetyFil","all","then","spread","nproductdomaincode","nproductdesccode","nproducttypecode","nbulktypecode","ncomponentbulkgroupcode","nmasterfiletypecode","nsafetymarkercode","response","push","label","data","value","type","payload","screenName","selectedRecord","openModal","ncontrolCode","loading","catch","error","status","formatMessage","id","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\n//import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\nexport function edqmProductFetchRecord(inputParam) {\r\n\r\n    return function (dispatch) {\r\n\r\n        const productDomainData = rsapi.post(\"edqmproductdomain/getEDQMProductDomain\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const productDescData = rsapi.post(\"edqmproductdescription/getEDQMProductDescription\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const productTypeData = rsapi.post(\"edqmproducttype/getAllEDQMProductType\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const bulkTypeData = rsapi.post(\"edqmbulktype/getAllEDQMBulkType\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const componentBulkData = rsapi.post(\"edqmcomponentbulkgroup/getAllEDQMComponentBulkGroup\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const masterFileData = rsapi.post(\"edqmmasterfiletype/getAllEDQMMasterFileType\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n        const safetyFileData = rsapi.post(\"edqmsafetymarker/getAllEDQMSafetyMarker\", { \"userinfo\": inputParam.userInfo });//this.props.Login.userInfo\r\n//this.props.Login.userInfo\r\n        let urlArray = [];\r\n        let selectedId = null;\r\n        if (inputParam.operation === \"update\") {\r\n\r\n            const productData = rsapi.post(\"edqmproduct/getActiveEDQMProductById\", { [inputParam.primaryKeyField]: inputParam.primaryKeyValue, \"userinfo\": inputParam.userInfo });\r\n            const safetyFil= rsapi.post(\"edqmsafetymarker/getSafetyMarkersEdit\",  { [inputParam.primaryKeyField]: inputParam.primaryKeyValue, \"userinfo\": inputParam.userInfo });\r\n\r\n            urlArray = [productDomainData, productDescData, productTypeData, bulkTypeData, componentBulkData, masterFileData, safetyFileData, productData,safetyFil];\r\n            selectedId = inputParam.primaryKeyValue;\r\n        }\r\n        else {\r\n            urlArray = [productDomainData, productDescData, productTypeData, bulkTypeData, componentBulkData, masterFileData, safetyFileData];\r\n\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(Axios.spread((...response) => {\r\n\r\n                let nproductdomaincode = [];\r\n                let nproductdesccode = [];\r\n                let nproducttypecode = [];\r\n                let nbulktypecode = [];\r\n                let ncomponentbulkgroupcode = [];\r\n                let nmasterfiletypecode = [];\r\n                let nsafetymarkercode = [];\r\n               let safetyFileData=[];\r\n                //let selectedRecord = {};\r\n                if (inputParam.operation === \"update\") {\r\n\r\n                    nproductdomaincode.push({\r\n                        label: response[7].data[\"sproductdomain\"],\r\n                        value: response[7].data[\"nproductdomaincode\"]\r\n                    });\r\n\r\n                    nproductdesccode.push({\r\n                        label: response[7].data[\"sproductclass\"],\r\n                        value: response[7].data[\"nproductdesccode\"]\r\n                    });\r\n\r\n                    if (response[7].data[\"nproducttypecode\"] !== -1)\r\n                    {\r\n                        nproducttypecode.push({\r\n                            label: response[7].data[\"sproducttype\"],\r\n                            value: response[7].data[\"nproducttypecode\"]\r\n                        });\r\n                    }\r\n                    if (response[7].data[\"nbulktypecode\"] !== -1)\r\n                    {\r\n                        nbulktypecode.push({\r\n                            label: response[7].data[\"sbulktype\"],\r\n                            value: response[7].data[\"nbulktypecode\"]\r\n                        });\r\n                    }\r\n\r\n                    if (response[7].data[\"ncomponentbulkgroupcode\"] !== -1)\r\n                    {\r\n                        ncomponentbulkgroupcode.push({\r\n                            label: response[7].data[\"scomponentbulkgroup\"],\r\n                            value: response[7].data[\"ncomponentbulkgroupcode\"]\r\n                        });\r\n                    }\r\n\r\n                    if (response[7].data[\"nmasterfiletypecode\"] !== -1)\r\n                    {\r\n                        nmasterfiletypecode.push({\r\n                            label: response[7].data[\"smasterfiletype\"],\r\n                            value: response[7].data[\"nmasterfiletypecode\"]\r\n                        });\r\n                    }\r\n\r\n                    if (response[7].data[\"nsafetymarkercode\"] !== -1)\r\n                    {\r\n                        nsafetymarkercode.push({\r\n                            label: response[7].data[\"ssafetymarkername\"],\r\n                            value: response[7].data[\"nsafetymarkercode\"]\r\n                        });\r\n                    }\r\n                    safetyFileData=response[8].data;\r\n                }else{\r\n                    safetyFileData=response[6].data;\r\n                }\r\n\r\n              \r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        productDomainData: response[0].data, productDescData: response[1].data,\r\n                        productTypeData: response[2].data, bulkTypeData: response[3].data,\r\n                        componentBulkData: response[4].data, masterFileData: response[5].data,\r\n                        safetyFileData: safetyFileData,\r\n                        nproductdomaincode, nproductdesccode, nproducttypecode, nbulktypecode,\r\n                        ncomponentbulkgroupcode, nmasterfiletypecode, nsafetymarkercode,\r\n                        operation: inputParam.operation, screenName: inputParam.screenName,\r\n\r\n                        selectedRecord: inputParam.operation === \"update\" ? response[7].data : {},\r\n                        openModal: true,\r\n                        ncontrolCode: inputParam.ncontrolCode, loading: false, selectedId\r\n                    }\r\n                });\r\n\r\n\r\n            }))\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n\r\n    }//\r\n}"]},"metadata":{},"sourceType":"module"}