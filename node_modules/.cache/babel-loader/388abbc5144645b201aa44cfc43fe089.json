{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Nav,FormGroup,FormLabel,Card,Modal,Image,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faCheckCircle,faCopy,faEye,faPlay,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import reject from\"../../assets/image/reject.svg\";import elnimage from\"../../assets/image/sheet-view.svg\";import{callService,crudMaster,updateStore,getTestInstrumentComboService,getTestInstrumentCategory,getProductBasedInstrument,getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction,validateEsignforBatch//,batchTAT\n}from'../../actions';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType,SampleType}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,getStartOfDay,getEndOfDay,formatInputDate,constructOptionList,rearrangeDateFormat,convertDateValuetoString,CF_encryptionData}from'../../components/CommonScript';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import Esign from'../audittrail/Esign';import{ProductList}from'../product/product.styled';import CustomPopover from'../../components/customPopover';import BatchCreationFilter from'./BatchCreationFilter';import AddBatchCreation from'./AddBatchCreation';import AddBatchinitiate from'./AddBatchinitiate';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import SampleTab from'./SampleTab';import BatchhistoryTab from'./BatchhistoryTab';import{process}from'@progress/kendo-data-query';import AddSample from'./AddSample';import ListMaster from'../../components/list-master/list-master.component';import ViewInfo from'./ViewInfo';import{Affix}from'rsuite';import AddMaterialIqc from'./AddMaterialIqc';import BatchIqcSampleTab from'./BatchIqcSampleTab';import BatchResultTab from'./BatchResultTab';import PortalModal from'../../PortalModal';import Iframe from'react-iframe';import ReactTooltip from'react-tooltip';import{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var BatchCreation=/*#__PURE__*/function(_React$Component){_inherits(BatchCreation,_React$Component);var _super=_createSuper(BatchCreation);function BatchCreation(props){var _this;_classCallCheck(this,BatchCreation);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.completeMandatoryFields=[{\"idsName\":\"IDS_BATCHCOMPLETEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.initiateMandatoryFields=[{\"idsName\":\"IDS_BATCHINITIATEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.materialIqcMandatory=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"smaterialtypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"smaterialcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"smaterialname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"sinventoryid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.getSamples=function(selectedbatchmaster){var addSampleID=_this.state.controlMap.has(\"AddSamples\")&&_this.state.controlMap.get(\"AddSamples\").ncontrolcode;if(selectedbatchmaster.ntransactionstatus==transactionStatus.INITIATED||selectedbatchmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedbatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else{_this.props.getSamplesForGrid(_this.props.Login.masterData.SelectedBatchmaster.ntestcode,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,addSampleID);}};_this.createBatchValidation=function(addParam){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){_this.props.getBatchSection(addParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.getIqcSamples=function(SelectedBatchmaster){if(SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED||SelectedBatchmaster.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOADDIQC\"}));}else{var addcontrolcode=_this.state.controlMap.has(\"AddBatchCreation\")&&_this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var inputData={};inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData['naddcontrolCode']=addcontrolcode;// inputData['section']={\n//         nsectioncode: SelectedBatchmaster.nsectioncode\n// };\ninputData['nsectioncode']=SelectedBatchmaster.nsectioncode;inputData['userInfo']=_this.props.Login.userInfo;inputData['nbatchmastercode']=SelectedBatchmaster.nbatchmastercode;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;_this.props.getIqcSamples(inputData,_this.props.Login.masterData);}};_this.deleteRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.selectedRecord.nbatchsampleCode,fetchUrl:\"batchcreation/getSampleTabDetails\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var jsondata=inputData.selectedRecord;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Sample\",postParam:postParam,inputData:{Sample:{\"sarno\":inputData.selectedRecord.sarno,\"ssamplearno\":inputData.selectedRecord.ssamplearno,\"stestname\":inputData.selectedRecord.stestname,\"nbatchsamplecode\":inputData.selectedRecord.nbatchsamplecode},\"userInfo\":_this.props.Login.userInfo,nbatchsamplecode:inputData.selectedRecord.nbatchsamplecode,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"samples\":[]}),nbatchmastercode:inputData.selectedRecord.nbatchmastercode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteSampleAction(inputParam.inputData);}}};_this.cancelRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.nbatchsampleiqccode,fetchUrl:\"batchcreation/getBatchIqcSampleAction\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"batchcreation\",methodUrl:\"IQCSample\",postParam:postParam,inputData:{iqcSample:inputData.selectedRecord,nbatchsampleiqccode:inputData.selectedRecord.nbatchsampleiqccode,masterData:_this.props.Login.masterData,nbatchmastercode:inputData.selectedRecord.nbatchmastercode,nmaterialinventtranscode:inputData.selectedRecord.nmaterialinventtranscode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.cancelIQCSampleAction(inputParam.inputData);}}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;if(screenName==\"IDS_BATCHHISTORY\"){var inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchhistoryAction(inputData,true);}else if(screenName==\"IDS_BATCHIQCSAMPLE\"){var _inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchIqcSampleAction(_inputData,true);}else if(screenName==\"IDS_RESULTS\"){var _inputData2={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchViewResultAction(_inputData2,true);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,batchactiveKey:screenName}};_this.props.updateStore(updateInfo);}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Samples,event.dataState),sampleState:event.dataState});};_this.dataStateBatchHistoryChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Batchhistory,event.dataState),histortState:event.dataState});};_this.dataStateBatchIqcChangeChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.iqcsample,event.dataState),iqcsampleState:event.dataState});};_this.dataStateViewChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Resultview,event.dataState),viewstate:event.dataState});};_this.getApprovalVersion=function(data){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.fromDate||_this.props.Login.masterData.realFromDate,_this.props.Login.masterData.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:data.item.nregtypecode,userInfo:_this.props.Login.userInfo,nregsubtypecode:data.item.nregsubtypecode,masterData:_this.props.Login.masterData,isneedapprovalfilter:true,defaultRegistrationSubType:data.item,isneedrealFilterStatus:\"false\",// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate};_this.props.getBCApprovalConfigVersion(inputData);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_SAMPLE\",/*#__PURE__*/React.createElement(SampleTab,{sample:_this.props.Login.masterData.Samples||[],dataResult:process(_this.props.Login.masterData.Samples||[],_this.state.sampleState),dataState:_this.state.sampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,deleteRecord:_this.deleteRecord,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumn(_this.state.DynamicGridMoreItem)||[],methodUrl:\"Samples\",getSamples:function getSamples(){return _this.getSamples(_this.props.Login.masterData.SelectedBatchmaster);}// getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\n//inputParam={this.props.Login.inputParam}\n,screenName:\"IDS_SAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHIQCSAMPLE\",/*#__PURE__*/React.createElement(BatchIqcSampleTab,{iqcsample:_this.props.Login.masterData.iqcsample||[],dataResult:process(_this.props.Login.masterData.iqcsample||[],_this.state.iqcsampleState),dataState:_this.state.iqcsampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateBatchIqcChangeChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,cancelRecord:_this.cancelRecord,methodUrl:\"IQCSample\",getIqcSamples:function getIqcSamples(){return _this.getIqcSamples(_this.props.Login.masterData.SelectedBatchmaster);},screenName:\"IDS_BATCHIQCSAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));//     if (this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.INITIATED\n//         || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.COMPLETED)\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(BatchResultTab,{ELNTest:_this.props.Login.masterData.ELNTest||[],resultview:_this.props.Login.masterData.Resultview||[],dataResult:process(_this.props.Login.masterData.Resultview||[],_this.state.viewstate),dataState:_this.state.viewstate,dataStateChange:_this.dataStateViewChange,userInfo:_this.props.Login.userInfo,methodUrl:\"BatchViewResult\",screenName:\"IDS_RESULTS\",intl:_this.props.intl,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,selectedfilename:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno}));}tabMap.set(\"IDS_BATCHHISTORY\",/*#__PURE__*/React.createElement(BatchhistoryTab,{batchhistory:_this.props.Login.masterData.Batchhistory||[],dataResult:process(_this.props.Login.masterData.Batchhistory||[],_this.state.histortState),dataState:_this.state.histortState,dataStateChange:_this.dataStateBatchHistoryChange,userInfo:_this.props.Login.userInfo,methodUrl:\"Batchhistory\",screenName:\"IDS_BATCHHISTORY\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));return tabMap;};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntoDate:dateObj.toDate,//this.props.Login.masterData.toDate,\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate};_this.props.getBCApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntoDate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate};_this.props.getBCApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",nsampletypecode:parseInt(event.value),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData,isneedrealFilterStatus:\"false\",// realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n//  realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n//realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion};_this.props.getBCRegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:3,needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userInfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,defaultSampleType:_this.props.Login.masterData.defaultSampleType,isneedrealFilterStatus:\"false\",// realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,//ALPD-3571--Vignesh R(05-09-2024)                   \nrealndesigntemplatemappingcode:_this.props.Login.masterData.realndesigntemplatemappingcode,napprovalversioncode:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA,napprovalconfigcode:_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA};_this.props.getBCRegistrationSubType(inputData,_this.props.Login.masterData);}else if(fieldname===\"nregsubtypecode\"){var nregsubtypecode=_this.state;//this.setState({ nregsubtypecode:event });\n_this.getApprovalVersion(event);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={nflag:3,needFilterSubmit:\"false\",fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.nneedsubsample||4,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};//this.props.getREFilterTestData(inputParamData)\n_this.props.getBCFilterTemplate(inputParamData);}else if(fieldname===\"version\"){// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\n//     this.props.Login.masterData.toDate, this.props.Login.userInfo);\n// inputData = {\n//     nflag: 4,\n//     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\n//     todate: obj.toDate,//this.props.Login.masterData.toDate,\n//     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\n//     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\n//     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\n//     napprovalversioncode: event.value,\n//     userinfo: this.props.Login.userInfo,\n//     defaultApprovalConfigVersion: event.item,\n//     masterData: this.props.Login.masterData,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n// }\n// this.props.getBCJobStatus(inputData)\nvar ApprovalVersionValue=_this.state;_this.setState({ApprovalVersionValue:event});}else if(fieldname===\"jobstatus\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,needFilterSubmit:\"false\",fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCFilterStatus(inputData);}else if(fieldname===\"filter\"){var FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else if(fieldname===\"test\"){var _FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else{var selectedRecord=_this.state;_this.setState({selectedRecord:event});}}};_this.handleFilterDateChange=function(dateValue,dateName){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var sampleList=_this.state.samples||[];var addedSamplesList=[];checked=checked==false&&_this.state.samples.length>0?false:_this.state.samples.length==0?false:true;if(checked){//const data = event.dataItems.map(item => {\nvar data=event.target.props.data.map(function(item){if(sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})===-1){sampleList.push(_objectSpread(_objectSpread({},item),{},{selected:false}));item.selected=checked;var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);return item;}else{var olditem=JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})]));olditem.selected=checked;var _newItem=JSON.parse(JSON.stringify(olditem));_newItem.selected=false;_newItem[\"jsondata\"]={};_newItem[\"jsonuidata\"]={};_newItem[\"jsondata\"]['samplelist']=olditem;_newItem[\"jsonuidata\"]['samplelist']=olditem;addedSamplesList.push(_newItem);return olditem;}});_this.setState({samples:data,addedSamplesList:addedSamplesList,sampleList:sampleList,addSelectAll:checked,deleteSelectAll:false});}else{// let sampleListData = this.state.sampleList || [];\n// let deletedListdData = this.state.sampleList || [];\nvar sampleListData=_this.state.samples||[];var deletedListdData=_this.state.samples||[];var _data=_this.state.samples.map(function(item){sampleListData=sampleListData.filter(function(item1){return item1.npreregno!==item.npreregno;});deletedListdData=deletedListdData.filter(function(item1){return item1.npreregno!==item.npreregno;});item.selected=checked;return item;});// console.log(\"data:\",data1, data2);\n_this.setState({samples:_data,addedSamplesList:sampleListData,deletedList:deletedListdData,addSelectAll:checked,deleteSelectAll:false});}// const data = this.state.addComponentDataList.map(item=>{\n//     if (checked){\n//         addedComponentList.push({...item, selected:false});\n//     }\n//     else{\n//         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\n//         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \n//     }  \n//     item.selected = checked;\n//     return item;\n// });\n};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}};_this.selectionChange=function(event){var addedSamplesList=_this.state.addedSamplesList||[];//let addedSamplesList= [];\nvar samples=_this.state.samples||[];var samplesList=_this.state.samples.map(function(item){if(item.ntransactiontestcode===event.dataItem.ntransactiontestcode){item.selected=!event.dataItem.selected;//  item={...item,\"selected\":!event.dataItem.selected};\nif(item.selected){var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);}else{// if(addedSamplesList.length === 0){\naddedSamplesList=addedSamplesList.filter(function(item1){return item1.ntransactiontestcode!==item.ntransactiontestcode;});//   }else{\n//     this.state.samples.map((item1,index) => { \n//         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\n//             if(this.state.samples.length == 1){\n//                 addedSamplesList=[];\n//             }else{\n//                 const newItem = JSON.parse(JSON.stringify(item1));\n//                 newItem.selected = false;\n//                 newItem[\"jsondata\"]={};\n//                 newItem[\"jsonuidata\"]={};\n//                 newItem[\"jsondata\"]['samplelist'] = item1\n//                 newItem[\"jsonuidata\"]['samplelist'] = item1\n//                 //addedSamplesList.push(newItem);\n//                 addedSamplesList = item1;\n//             }  \n//         }\n//     } \n//   )\n}}return item;});///samplesList = addedSamplesList;\n_this.setState({samplesList:samplesList,addedSamplesList:addedSamplesList,samples:samples,initialList:addedSamplesList,addSelectAll:_this.valiateCheckAll(samplesList),deleteSelectAll:_this.valiateCheckAll(samplesList)});};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;console.log(\"handle save:\",selectedRecord);mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];var selectedSpec=_this.props.Login.selectedSpec;if(selectedRecord&&selectedRecord.nallottedspeccode!==\"\"){selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedSpec:selectedSpec,openModal:true,openSpecModal:false}};_this.props.updateStore(updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.ConfirmDelete=function(selectedBatch,deleteId,operation){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteBatchCreation(selectedBatch,deleteId,operation);});};_this.completePopUpStartActions=function(completeId){// if(this.props.Login.masterData.nneedtestinitiate === true){\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}//    }else \nelse if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: true, \n//         completeId : completeId,\n//         masterData: this.props.Login.masterData,\n//        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n//         operation: \"complete\"\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar inputData={};inputData[\"openModal\"]=true;inputData[\"completeId\"]=completeId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"complete\";_this.props.batchCompleteDatePopup(inputData,_this.props.Login.masterData);}};_this.AddSpec=function(e){if(_this.state.selectedMaterial!==undefined&&_this.state.selectedMaterialCategory!==undefined){var inputData={};inputData[\"nmaterialcode\"]=_this.state.selectedMaterial.value;inputData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory.value;inputData[\"ncategorybasedflow\"]=_this.state.selectedMaterialCategory.item.ncategorybasedflow;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;// inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \n// inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \n// inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \n// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\n// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\n// inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\n_this.props.getTreeByMaterial(inputData,_this.state.selectedRecord,_this.props.Login.masterData);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_FILLALLDETAILSTOADDSPEC\"}));}};_this.testPopUpStartActions=function(testStartId){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}// else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};inputData[\"openModal\"]=true;inputData[\"testStartId\"]=testStartId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"initiate\";_this.props.batchInitiateDatePopup(inputData,_this.props.Login.masterData);//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: {\n//                 openModal: true, \n//                 testStartId : testStartId,\n//                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\n//                 masterData: this.props.Login.masterData,\n//                 operation: \"initiate\"\n//             }\n//         }\n// this.props.updateStore(updateInfo);\n}};_this.testStartActions=function(selectedmaster,testStartId){if(selectedmaster.ntransactionstatus==transactionStatus.INITIATED||selectedmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}//else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};var jsonuidata=[];var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/initiateBatchcreation\",isSingleGet:true,fecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});if(_this.props.Login.masterData.iqcsample.length>0){var totalSample=_this.props.Login.masterData.Samples.concat(_this.props.Login.masterData.iqcsample);inputData[\"npreregno\"]=_this.props.Login.masterData.iqcsample.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=totalSample.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"nneedjoballocationiqc\"]=true;inputData[\"isiqcdata\"]=true;}else{inputData[\"npreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"isiqcdata\"]=false;inputData[\"nneedjoballocationiqc\"]=false;}inputData[\"nbatchsampleCode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.nbatchsamplecode;}).join(\",\");inputData[\"muluserpreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"mulusertransactionsamplecode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactionsamplecode;}).join(\",\");inputData[\"mulusertransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"batchsample\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"nneedmyjob\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedmyjob;inputData[\"nneedjoballocation\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedjoballocation;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napproveconfversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.INITIATED||transactionStatus.DRAFT;inputData[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;inputData[\"testStartId\"]=testStartId;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1];inputData[\"sample\"]=_this.props.Login.masterData?_this.props.Login.masterData.sample:\"\";inputData[\"iqcsample\"]=_this.props.Login.masterData?_this.props.Login.masterData.iqcsample:\"\";var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"initiate\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,testStartId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread({},masterData)},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchInitiateAction(inputData,_this.props.Login.masterData,_this.confirmMessage);}}};_this.batchSaveIQCActions=function(selectedmaster){if(_this.state.selectedRecord.savailablequatity!==\"0.00\"){if(parseFloat(_this.state.selectedRecord.susedquantity)<=parseFloat(_this.props.Login.masterData.inventoryTransaction.savailablequatity)){if(_this.props.Login.selectedSpec.nallottedspeccode!==undefined&&_this.props.Login.selectedSpec.nallottedspeccode!==\"\"){var userInfo={};var inputRegistrationData={};var inputMaterialInventoryData={};var inputBatchData={};var map={};var batchCreationSampleData={};var batchCreationTestData={};var batchCreationSampleArray=[];var batchCreationTestArray=[];var samplecombinationuniqueArray=[];var inputMaterialInventoryArrData=[];batchCreationSampleData[\"nspecsampletypecode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode:transactionStatus.NA;batchCreationSampleData[\"ncomponentcode\"]=transactionStatus.NA;batchCreationSampleData[\"slno\"]=1;batchCreationSampleArray.push(batchCreationSampleData);inputRegistrationData[\"nallottedspeccode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.value:transactionStatus.NA;inputRegistrationData[\"ntemplatemanipulationcode\"]=_this.props.Login.ntemplatemanipulationcode||transactionStatus.NA;inputRegistrationData[\"nregsubtypeversioncode\"]=_this.props.Login.masterData.nregsubtypeversioncode;inputRegistrationData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;// inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputRegistrationData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputRegistrationData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputRegistrationData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputRegistrationData[\"nproductcatcode\"]=transactionStatus.NA;inputRegistrationData[\"nproductcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcatcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcode\"]=transactionStatus.NA;inputRegistrationData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;inputRegistrationData[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;inputRegistrationData[\"jsondata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};inputRegistrationData[\"jsonuidata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};// inputMaterialInventoryData = {\n//     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\n// }\n//  inputMaterialInventoryData = {\n//         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\n//         jsondata : {\n//             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         jsonuidata : {\n//             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\n//  };\ninputMaterialInventoryData[\"nmaterialinventorycode\"]=_this.state.selectedMaterialInventory.item.nmaterialinventorycode;inputMaterialInventoryData[\"jsondata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsondata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\ninputMaterialInventoryData[\"nsectioncode\"]=_this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];inputMaterialInventoryData[\"jsonuidata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsonuidata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryArrData.push(inputMaterialInventoryData);\nbatchCreationTestData[\"ntestgrouptestcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode:transactionStatus.NA;//     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\nbatchCreationTestData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;batchCreationTestData[\"nsectioncode\"]=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;batchCreationTestData[\"nmethodcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;//   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\nbatchCreationTestData[\"nrepeatcountno\"]=1;//--\n//    batchCreationTestData[\"ntestretestno\"]=0;\nbatchCreationTestData[\"nparametercount\"]=1;//--\nbatchCreationTestData[\"slno\"]=1;//--\nbatchCreationTestArray.push(batchCreationTestData);map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;map[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;userInfo=_this.props.Login.userInfo;map[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;map[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;map[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;map[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;map[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;map[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;map[\"nmaterialtypecode\"]=_this.state.selectedMaterialType?_this.state.selectedMaterialType.value:transactionStatus.NA;inputBatchData=_this.props.Login.masterData.SelectedBatchmaster;map['Registration']=inputRegistrationData;map['Batchsampleiqc']=inputBatchData;map['RegistrationSample']=batchCreationSampleArray;map['testgrouptest']=batchCreationTestArray;map['userInfo']=userInfo;map['samplecombinationunique']=samplecombinationuniqueArray;map['inputMaterialInventoryArrData']=inputMaterialInventoryData;var inputParam={inputData:map,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHIQCSAVE\",operation:\"createiqc\"};_this.props.batchSaveIQCActions(inputParam.inputData,_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSPECIFICATIONS\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_NOAVAILABLEQUANTITY\"}));}};_this.cancelBatch=function(selectedmaster,cancelId){if(selectedmaster.ntransactionstatus==transactionStatus.DRAFT||selectedmaster.ntransactionstatus==transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHINITIATEDRECORD\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/cancelBatch\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.CANCELLED||transactionStatus.DRAFT;// inputData[\"Batchhistory\"] ={\n//     dtransactiondate : formatInputDate(new Date(),true),\n//     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\n//     };\n//inputData[\"completeId\"] = completeId;\ninputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[3];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batch\",displayName:\"IDS_BATCHCREATION\",operation:\"cancel\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,cancelId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCancelAction(inputData,_this.props.Login.masterData);}}};_this.batchCompleteActions=function(selectedmaster,completeId){if(selectedmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/completeBatchcreation\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;//  inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=transactionStatus.COMPLETED;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"completeId\"]=completeId;inputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"complete\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread({},masterData)},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCompleteAction(inputData,_this.props.Login.masterData);}}};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var openSpecModal=_this.props.Login.openSpecModal;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"cancel\"){//    this.props.Login.operation === \"complete\") {\nloadEsign=false;openModal=false;}else{loadEsign=false;}selectedRecord[\"esigncomments\"]=\"\";selectedRecord[\"esignpassword\"]=\"\";}else if(_this.props.Login.openSpecModal){loadEsign=false;openSpecModal=false;}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,openSpecModal:openSpecModal,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var _this$state=_this.state,selectedInstCategory=_this$state.selectedInstCategory,selectedInstrumentId=_this$state.selectedInstrumentId,InstrumentCategory=_this$state.InstrumentCategory,selectedInstrument=_this$state.selectedInstrument,Instrument=_this$state.Instrument,InstrumentID=_this$state.InstrumentID;var inputData={};if(comboData==null){selectedInstCategory=undefined;selectedInstrumentId=undefined;Instrument=undefined;InstrumentID=undefined;selectedInstrument=undefined;selectedRecord['sinstrumentcatname']=undefined;selectedRecord['sinstrumentname']=undefined;selectedRecord['sinstrumentid']=undefined;_this.setState({selectedInstCategory:selectedInstCategory,selectedInstrumentId:selectedInstrumentId,selectedInstrument:selectedInstrument,selectedRecord:selectedRecord,Instrument:Instrument,InstrumentID:InstrumentID});}else{selectedRecord[fieldName]=comboData.item;if(fieldName===\"sproductname\"){selectedRecord[\"nproductcode\"]=comboData.value;selectedRecord[\"userInfo\"]=_this.props.Login.userInfo;selectedRecord[\"stestname\"]=_this.state.selectedRecord['stestname'];selectedRecord[\"ntestcode\"]=_this.state.selectedRecord['stestname']['ntestcode'];selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;//this.setState({ selectedProduct:comboData });\n_this.props.getProductBasedInstrument(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"ssectionname\"){inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=_this.props.Login.naddcontrolCode;inputData['section']=selectedRecord.ssectionname;inputData['userInfo']=_this.props.Login.userInfo;inputData['nneedmyjob']=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.nneedmyjob:false;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;_this.props.getTestInstrumentComboService(inputData,_this.props.Login.masterData);// this.setState({ selectedSection:comboData });\n}else if(fieldName===\"stestname\"){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nprevioustestcode\"]=_this.state.selectedTestSynonym.value;}selectedRecord[\"ntestcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nprojectmastercode\"]=comboData.item.nprojectmastercode;selectedRecord['sinstrumentcatname']=undefined;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;_this.props.getTestInstrumentCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sinstrumentcatname\"){selectedRecord[\"ninstrumentcatcode\"]=comboData.value;selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;selectedRecord[\"ntestcode\"]=_this.state.selectedTestSynonym.value;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['sinstrumentname']=undefined;_this.props.getInstrumentForInstCategory(selectedRecord,_this.props.Login.masterData);//this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\n}else if(fieldName===\"smaterialcatname\"){selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterialCategory:comboData});_this.props.getMaterialBasedOnMaterialCategory(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"smaterialname\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=comboData.item.needsection;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterial:comboData});_this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinventoryid\"){selectedRecord[\"nmaterialcode\"]=_this.state.selectedMaterial.value;selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=_this.props.Login.masterData.selectedMaterial.needsection;_this.setState({selectedMaterialInventory:comboData});// if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\n//     selectedRecord['nsectioncode']=transactionStatus.NA;\n// }else{\nselectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;//}\n_this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinstrumentname\"){selectedRecord[\"ninstrumentnamecode\"]=comboData.value;selectedRecord[\"sinstrumentname\"]=comboData.label;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['selectedInstrument']=comboData.item;selectedRecord['ninstrumentcatcode']=comboData.item.ninstrumentcatcode;selectedRecord['ninstrumentcode']=comboData.item.ninstrumentcode;_this.props.getInstrumentID(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sprojectcode\"){_this.setState({selectedProjectcode:comboData});}else{_this.setState({selectedInstrumentId:comboData});}// else{\n//    // let nInstrumentCategory=\"\",nInstrument=\"\",nInstrumentID=\"\";\n//     this.setState=({InstrumentCategory:{},Instrument:{},\n//         InstrumentID:})\n//   }\n}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getBatchManufacturerComboChange(selectedRecord,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.clearComponentInput=function(){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nproductcode\"]=undefined;selectedRecord[\"ncomponentcode\"]=undefined;selectedRecord[\"smanuflotno\"]=\"\";selectedRecord[\"dateprompt\"]=transactionStatus.NO;selectedRecord[\"transdatefrom\"]=_this.props.Login.componentDefaultSearchDate;selectedRecord[\"transdateto\"]=_this.props.Login.componentDefaultSearchDate;_this.setState({selectedRecord:selectedRecord});};_this.openClosePortal=function(){if(_this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode!==transactionStatus.NA){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED){if(_this.props.Login.openELNSheet===undefined||!_this.props.Login.openELNSheet){if(_this.props.Login.elnUserInfo!==null||_this.props.Login.elnUserInfo!=undefined){_this.props.Login.masterData.enlLink=\"\";var integrationSettings=_this.props.Login.integrationSettings;var inputParam={userInfo:_this.props.Login.userInfo,elnUserInfo:_this.props.Login.elnUserInfo,elnSite:_this.props.Login.elnSite,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno,ntestcode:_this.props.Login.masterData.ntestcode};var link=\"\";var detail=CF_encryptionData(\"-1//Sheet\").EncryptData;var settedId=inputParam.nbatchmastercode;//console.log(settedId);\nvar encryptedbatchid=CF_encryptionData(settedId).EncryptData;var userObject={usercode:inputParam.elnUserInfo.nelncode,username:inputParam.elnUserInfo.selnuserid,userfullname:inputParam.elnUserInfo.selnusername,lsusergroup:{usergroupcode:inputParam.elnUserInfo.nelnusergroupcode,usergroupname:inputParam.elnUserInfo.nelnusergroupcode},lssitemaster:{sitecode:inputParam.elnSite.nelnsitecode}};var encrypteduser=CF_encryptionData(userObject).EncryptData;var baseURL=integrationSettings[1].slinkname;link=baseURL+\"/vieworder\"+'#{\"d\":\"'+settedId+'\",\"user\":\"'+encrypteduser+'\",\"batchid\":\"'+encryptedbatchid+'\"}';// this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \nvar updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:true,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:link,baseURL:baseURL})}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ELNSHEETNOTFOUND\"}));}}else{var _updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:\"\"})}};_this.props.updateStore(_updateInfo);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHWITHINSTRUMENT\"}));}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord={};if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onDropImage=function(attachedFiles,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=attachedFiles;_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.saveSample=function(addedsamplelist){if(addedsamplelist===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}else if(addedsamplelist.length>0){var sampleArray=[];addedsamplelist.map(function(item){return sampleArray.push({npreregno:item.npreregno,ntransactionsamplecode:item.ntransactionsamplecode,ntransactiontestcode:item.ntransactiontestcode,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster?_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode:transactionStatus.NA,sarno:item.jsonuidata.samplelist.sarno,ssamplearno:item.jsonuidata.samplelist.ssamplearno,stestname:item.jsonuidata.samplelist.stestname,jsonuidata:{samplelist:item.jsonuidata.samplelist},jsondata:{samplelist:item.jsondata.samplelist}});});var nbatchmastercode=_this.props.Login.masterData.SelectedBatchmaster&&_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;// batchSample = {\n//     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\n//     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\n//     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\n//     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\n// }\n//jsondata : \nvar inputParam={inputData:{batchSample:nbatchmastercode,sampleArray:sampleArray,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,nregtypecode:_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA}};_this.props.createSampleAction(inputParam.inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"createSample\"){_this.saveSample(_this.state.addedSamplesList);}else if(_this.props.Login.operation===\"initiate\"){_this.testStartActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.testStartId);}else if(_this.props.Login.operation===\"complete\"){_this.batchCompleteActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.completeId);}else if(_this.props.Login.operation===\"createiqcsample\"){_this.batchSaveIQCActions(_this.props.Login.masterData.SelectedBatchmaster);}else{var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);if(_this.props.Login.operation===\"create\"){inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;}inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedcombodataforFilter\"]=\"true\";inputData[\"needFilterSubmit\"]=\"false\";inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nprevioustestcode\"]=_this.state.selectedRecord&&_this.state.selectedRecord.nprevioustestcode!=undefined?_this.state.selectedRecord.nprevioustestcode:_this.state.selectedTestSynonym.value;inputData[\"ntestcode\"]=_this.state.selectedTestSynonym?_this.state.selectedTestSynonym.value:transactionStatus.NA;inputData[\"nsectioncode\"]=_this.state.selectedSection?_this.state.selectedSection.item.nsectioncode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\n//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\ninputData[\"ninstrumentcatcode\"]=_this.state.selectedInstCategory?_this.state.selectedInstCategory.value:transactionStatus.NA;inputData[\"ninstrumentcode\"]=_this.state.selectedInstrument?_this.state.selectedInstrument.value:transactionStatus.NA;inputData[\"nproductcode\"]=_this.state.selectedProduct?_this.state.selectedProduct.value:transactionStatus.NA;inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;inputData[\"sbatcharno\"]='-';// inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \n// this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \n// this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \n// this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\ninputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=transactionStatus.DRAFT;inputData[\"sinstrumentid\"]=_this.state.selectedInstrumentId?_this.state.selectedInstrumentId.label:\"NA\";// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \n// this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;inputData[\"nprojectmastercode\"]=_this.state.selectedProjectcode?_this.state.selectedProjectcode.value:transactionStatus.NA;var postParam=undefined;postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\"};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};if(_this.props.Login.operation===\"create\"){_this.searchRef.current.value=\"\";_this.props.createBatchmasterAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}else{inputData[\"nbatchmastercode\"]=_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;inputData[\"SelectedBatchmaster\"]=_this.props.Login.masterData.SelectedBatchmaster;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.editId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.updateBatchcreationAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}}}// const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n// if (esignNeeded) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n//             openModal: true, screenName: \"IDS_BATCHCREATION\",\n//             operation: this.props.Login.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\n//     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n// }\n};_this.deleteBatchCreation=function(selectedBatch,deleteId,operation){if(selectedBatch.ntransactionstatus===transactionStatus.COMPLETED||selectedBatch.ntransactionstatus===transactionStatus.INITIATED||selectedBatch.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedBatch.nbatchmastercode,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userInfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.defaultSampleType.nsampletypecode}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"currentdate\"]=formatInputDate(new Date(),true);inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedBatch.nbatchmastercode;//inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"selectedBatch\"]=selectedBatch;inputData[\"samples\"]=_this.props.Login.masterData.Samples;var inputParam={postParam:postParam,inputData:inputData,operation:operation,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.fetchEditData=function(editParam){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){_this.props.getActiveBatchCreationService(editParam,_this.props.Login.masterData.SelectedBatchmaster);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};//ALPD-3399\nif(_this.props.Login.operation==\"complete\"||_this.props.Login.operation==\"initiate\"){_this.props.validateEsignforBatch(inputParam);}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.closeFilter=function(){var inputValues={fromDate:_this.props.Login.masterData.realFromDate||new Date(),//this.state.selectedFilter[\"fromDate\"] != undefined ?\n//rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"fromDate\"]) : this.fromDate,\ntoDate:_this.props.Login.masterData.realToDate||new Date(),//this.state.selectedFilter[\"toDate\"] != undefined ?\n// rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"toDate\"]) : this.toDate,\nSampleType:_this.props.Login.masterData.realSampleTypeList||[],SampleTypeValue:_this.props.Login.masterData.realSampleTypeValue||{},defaultSampleType:_this.props.Login.masterData.realSampleTypeValue||{},RegistrationType:_this.props.Login.masterData.realRegistrationTypeList||[],RegTypeValue:_this.props.Login.masterData.realRegTypeValue||{},defaultRegistrationType:_this.props.Login.masterData.realRegTypeValue||{},RegistrationSubType:_this.props.Login.masterData.realRegistrationSubTypeList||[],RegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue||{},//ALPD-3571--Vignesh R(05-09-2024)\nBCFilterStatus:_this.props.Login.masterData.realBCFilterStatusList||[],FilterStatusValue:_this.props.Login.masterData.realdefaultFilterStatus||{},ApprovalConfigVersion:_this.props.Login.masterData.realApprovalConfigVersionList||[],ApprovalVersionValue:_this.props.Login.masterData.realApproveConfigVersion||{},defaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus||{},defaultApprovalConfigVersion:_this.props.Login.masterData.realApproveConfigVersion||{},defaultRegistrationSubType:_this.props.Login.masterData.realRegSubTypeValue||{},ndesigntemplatemappingcode:_this.props.Login.masterData.realndesigntemplatemappingcode||-1};var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),inputValues)}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.fromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"realFromDate\"]=obj.fromDate;inputData[\"realToDate\"]=obj.toDate;inputData[\"needFilterSubmit\"]=\"true\";inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;// inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===0 ? this.state.BCFilterStatus.map(item1=>\"'\"+item1.item.ntransactionstatus+\"'\").join(\",\") : this.state.FilterStatusValue.value;\n//ALPD-3399          \ninputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;//  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;// inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\ninputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;//inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\n// inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"realRegistrationTypeList\"]=_this.props.Login.masterData.RegistrationType;inputData[\"realRegTypeValue\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"realRegistrationSubTypeList\"]=_this.props.Login.masterData.RegistrationSubType;inputData[\"realRegSubTypeValue\"]=_this.props.Login.masterData.defaultRegistrationSubType;inputData[\"realBCFilterStatusList\"]=_this.props.Login.masterData.BCFilterStatus;inputData[\"realdefaultFilterStatus\"]=_this.state.FilterStatusValue!==undefined?_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item:_this.props.Login.masterData.defaultFilterStatus;inputData[\"realApprovalConfigVersionList\"]=_this.props.Login.masterData.ApprovalConfigVersion;//inputData[\"realApproveConfigVersion\"] = this.props.Login.masterData.defaultApprovalConfigVersion;\ninputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue!==undefined?_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item:_this.props.Login.masterData.defaultApprovalConfigVersion;inputData[\"realndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;inputData[\"operation\"]=\"filtersubmit\";var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\nif(_this.props.Login.masterData.realRegTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegTypeValue!==null&&_this.props.Login.masterData.realRegSubTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegSubTypeValue!==null&&_this.props.Login.masterData.realApproveConfigVersion!==transactionStatus.NA||_this.props.Login.masterData.realApproveConfigVersion!==null&&_this.props.Login.masterData.defaultFilterStatus!==transactionStatus.NA||_this.props.Login.masterData.defaultFilterStatus!==null){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:transactionStatus.NA;inputData[\"defaultRegistrationSubType\"]=_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:transactionStatus.NA;//inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\ninputData[\"ntranscode\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA;//inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"realRegistrationTypeList\"]=_this.props.Login.masterData.realRegistrationTypeList;inputData[\"realRegTypeValue\"]=_this.props.Login.masterData.realRegTypeValue;inputData[\"realRegistrationSubTypeList\"]=_this.props.Login.masterData.realRegistrationSubTypeList;inputData[\"realRegSubTypeValue\"]=_this.props.Login.masterData.realRegSubTypeValue;inputData[\"realBCFilterStatusList\"]=_this.props.Login.masterData.realBCFilterStatusList;inputData[\"realdefaultFilterStatus\"]=_this.state.FilterStatusValue!==undefined?_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item:_this.props.Login.masterData.realdefaultFilterStatus;inputData[\"realApprovalConfigVersionList\"]=_this.props.Login.masterData.realApprovalConfigVersionList;inputData[\"realApproveConfigVersion\"]=_this.props.Login.masterData.realApproveConfigVersion;inputData[\"realndesigntemplatemappingcode\"]=_this.props.Login.masterData.realndesigntemplatemappingcode;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onClickReport=function(selectedRecord,flag,ncontrolcode){var reportParam={classUrl:\"certificategeneration\",methodUrl:\"reportGeneration\",screenName:\"CertificateGeneration\",operation:\"previewReport\",primaryKeyField:\"nreleasebatchcode\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:-1,inputData:{sprimarykeyname:'nreleasebatchcode',nprimarykey:selectedRecord.nreleasebatchcode,nreleasebatchcode:selectedRecord.nreleasebatchcode,ncertificatetypecode:selectedRecord.ndecision===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,ndecisionstatus:selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\nnreporttypecode:flag===2?reportTypeEnum.SCREENWISE:reportTypeEnum.BATCH,ncontrolcode:ncontrolcode,ncoareporttypecode:flag===2?-1:reportCOAType.BATCHPREVIEW,userinfo:_this.props.Login.userInfo,nflag:flag,skipbatchvalidation:true}};_this.props.onClickReport(reportParam);};_this.reportMethod=function(value){if(value.method===1){_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,2,value.controlId);}else{_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,1,value.controlId);}};var sampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var histortState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var iqcsampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var viewstate={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],userRoleControlRights:[],controlMap:new Map(),selectedFilter:{},sampleState:sampleState,histortState:histortState,iqcsampleState:iqcsampleState,viewstate:viewstate,selectedRecord:{},//confirmmsg:this.ConfirmMessage.bind(this),\ndataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},sidebarview:false};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stestname\",\"sinstrumentcatname\",\"sinstrumentname\",\"sproductname\",\"smanufname\",\"stransactiondate\",\"username\",\"stransactionstatus\",\"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];_this.sampleMandatoryFields=[];_this.copyMandatoryFields=[];return _this;}_createClass(BatchCreation,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;var temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE]==\"null\"?'-':option[designProperties.VALUE],\"width\":\"150px\",\"columnSize\":\"4\"};});return temparray;}},{key:\"valiateCheckAll\",value:// headerSelectionChange = (event) => {\n//     const checked = event.syntheticEvent.target.checked;\n//     let addedComponentList = this.state.addedComponentList || [];\n//     if (checked) {\n//         const data = this.state.addComponentDataList.map(item => {\n//             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\n//                 addedComponentList.push({ ...item, selected: false });\n//                 item.selected = checked;\n//                 return item;\n//             } else {\n//                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\n//                 olditem.selected = checked;\n//                 return olditem;\n//             }\n//         });\n//         this.setState({\n//             addComponentDataList: data, addedComponentList,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n//     else {\n//         let addedComponentData = this.state.addedComponentList || [];\n//         let deletedListdData = this.state.deletedList || [];\n//         const data = this.state.addComponentDataList.map(item => {\n//             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\n//             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\n//             item.selected = checked;\n//             return item;\n//         });\n//         // console.log(\"data:\",data1, data2);\n//         this.setState({\n//             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n// }\nfunction valiateCheckAll(data){var selectAll=true;// let checkRepeatComponent;\n//  let addedComponentList = this.state.addedComponentList || [];\nif(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;// checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\n// if(checkRepeatComponent.length>0){\n//     selectAll = true;\n// }else{\n//     selectAll = false;\n// }\n}});}else{//if (gridType === \"originalgrid\"){\nselectAll=false;// }\n}return selectAll;}},{key:\"render\",value:function render(){var _this3=this;var reportActionList=[];var batchMandatoryFields=[];//commenting as its done in below code by rukshana\n// if (this.props.Login.operation === \"update\") {\n//     batchMandatoryFields.push(\n//         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\n//     );\n// }\n// else {\n//     batchMandatoryFields.push(\n//         { idsName: \"IDS_SECTION\", dataField: \"ssectionname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_TEST\", dataField: \"stestname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\n//     );\n// }\n//let mandatoryFields =[];\nif(this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"){var selectedRecord=this.state.selectedRecord;batchMandatoryFields.push({\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n// { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n// { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});if(selectedRecord&&selectedRecord.sinstrumentcatname!==undefined&&selectedRecord.ninstrumentcatcode>0){batchMandatoryFields.push(// { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n{\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"sinstrumentname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENTID\",\"dataField\":\"sinstrumentid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}}var getBatch={screenName:\"IDS_BATCHCREATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"Batchcreation\",keyName:\"batchcreation\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):undefined;this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):undefined;var addId=this.state.controlMap.has(\"AddBatchCreation\")&&this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditBatchcreation\")&&this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteBatchcreation\")&&this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;var testStartId=this.state.controlMap.has(\"BatchInitiate\")&&this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;var completeId=this.state.controlMap.has(\"BatchComplete\")&&this.state.controlMap.get(\"BatchComplete\").ncontrolcode;var cancelId=this.state.controlMap.has(\"CancelBatch\")&&this.state.controlMap.get(\"CancelBatch\").ncontrolcode;var elnSheetId=this.state.controlMap.has(\"ELNSheet\")&&this.state.controlMap.get(\"ELNSheet\").ncontrolcode;var addParam={screenName:\"IDS_BATCHCREATION\",primaryeyField:\"nreleasebatchcode\",primaryKeyValue:undefined,operation:\"create\",//inputParam: this.props.Login.inputParam,\nuserInfo:this.props.Login.userInfo,ncontrolCode:addId,nneedtestinitiate:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedtestinitiate,masterData:this.props.Login.masterData,fromdate:this.props.Login.masterData.fromDate,todate:this.props.Login.masterData.toDate,nregtypecode:this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,napprovalconfigcode:this.state.ApprovalVersionValue&&this.state.ApprovalVersionValue.item||transactionStatus.NA,ntranscode:this.props.Login.masterData.realdefaultFilterStatus?this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode};var viewInfoFields=[];viewInfoFields.push({\"fieldName\":\"sbatcharno\",\"label\":\"IDS_BATCHARNO\"},{\"fieldName\":\"ssectionname\",\"label\":\"IDS_SECTION\"},{\"fieldName\":\"stestname\",\"label\":\"IDS_TESTNAME\"},{\"fieldName\":\"sinstrumentcatname\",\"label\":\"IDS_INSTRUMENTCATEGORY\"},{\"fieldName\":\"sinstrumentid\",\"label\":\"IDS_INSTRUMENTID\"},{\"fieldName\":\"sinstrumentname\",\"label\":\"IDS_INSTRUMENTNAME\"},{\"fieldName\":\"sproductname\",\"label\":\"IDS_SAMPLETYPE\"},{\"fieldName\":\"stransdisplaystatus\",\"label\":\"IDS_STATUS\"},{\"fieldName\":\"username\",\"label\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED?\"IDS_BATCHINITIATEDBY\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED?\"IDS_BATCHCOMPLETEDBY\":\"IDS_BATCHCREATEDBY\"});if(this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode===SampleType.PROJECTSAMPLETYPE){viewInfoFields.push({\"fieldName\":\"sprojectcode\",\"label\":\"IDS_PROJECTCODE\"});}var stransactionstatuscode=this.props.Login.masterData.SelectedFilterStatus?String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus):null;if(this.state.selectedRecord&&this.state.selectedRecord[\"nfiltertransstatus\"]!==undefined){stransactionstatuscode=this.state.selectedRecord[\"nfiltertransstatus\"].value===String(0)?null:String(this.state.selectedRecord[\"nfiltertransstatus\"].value);}var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);var editParam={screenName:\"IDS_BATCHCREATION\",operation:\"update\",primaryKeyField:\"nbatchmastercode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,masterData:this.props.Login.masterData,naddcontrolCode:addId,nprojectmastercode:this.props.Login.masterData.selectedTestSynonym&&this.props.Login.masterData.selectedTestSynonym.nprojectmastercode,nsampletypecode:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA};var filterParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",fecthInputObject:{fromDate:obj.fromDate,toDate:obj.toDate,userInfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,napprovalconfigcode:this.state.ApprovalVersionValue?this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA,ntranscode:this.state.FilterStatusValue?this.state.FilterStatusValue.value:transactionStatus.DRAFT,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA//fromDate, toDate, \n//stransactionstatuscode,\n//activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\n},masterData:this.props.Login.masterData,//unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\nsearchFieldList:this.searchFieldList};this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},{\"label\":\"IDS_BATCHSTATUS\",\"value\":this.props.Login.masterData.realdefaultFilterStatus&&this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus?this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus:\"NA\"}// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// }\n];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData})),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(ListMaster,{masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Batchmaster||[],selectedMaster:this.props.Login.masterData.SelectedBatchmaster,primaryKeyField:\"nbatchmastercode\",userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData//getMasterDetail={this.props.getSelectedBatchCreationDetail}\n,getMasterDetail:function getMasterDetail(batch){return _this3.props.getSelectedBatchCreationDetail(batch,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:getBatch,screenName:this.props.intl.formatMessage({id:\"IDS_BATCHCREATION\"})//mainField=\"stestname\"\n,mainField:\"sbatcharno\",firstField:\"stestname\",secondField:\"sinstrumentname\",selectedListName:\"SelectedBatchmaster\",objectName:\"BatchCreation\",listName:\"IDS_BATCHCREATION\",needValidation:false,hidePaging:false// subFields={\n//     [\n//         { [designProperties.VALUE]: \"sinstrumentcatname\" },\n//         { [designProperties.VALUE]: \"sinstrumentname\" },\n//         // { [designProperties.VALUE]: \"smahname\" },\n//         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\n//     ]\n// }\n,needFilter:true,needMultiSelect:false,subFieldsLabel:true,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,isClearSearch:this.props.Login.isClearSearch// skip={this.state.skip}\n// take={this.state.take}\n// handlePageChange={this.handlePageChange}\n,addId:addId,showFilterIcon:true,userRoleControlRights:this.state.userRoleControlRights,reloadData:this.reloadData,openModal:function openModal(){return _this3.createBatchValidation(addParam);},callCloseFunction:true// openModal={() => this.props.getTestInstrumentComboService(addParam)}\n,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this3.props.getTestInstrumentComboService(addParam);}// onClick={() => this.createBatchValidation(addParam)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2 p-0\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\"//onClick={() => this.reloadData(false)} \n},/*#__PURE__*/React.createElement(RefreshIcon,{className:\"custom_icons\"})))// </Tooltip>\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(BatchCreationFilter,{fromDate:this.state.selectedFilter[\"fromDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"]):this.fromDate,toDate:this.state.selectedFilter[\"toDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]):this.toDate,SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.state.nregsubtypecode||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.BCFilterStatus||[],FilterStatusValue:this.state.FilterStatusValue||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.selectedTestSynonym||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,handleFilterDateChange:this.handleFilterDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'8':\"10\"),className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn \",onClick:this.props.parentFunction},!this.props.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"}))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster.length>0&&this.props.Login.masterData.SelectedBatchmaster?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedBatchmaster.sbatcharno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},this.props.Login.masterData.SelectedBatchTestTAT&&this.props.Login.masterData.SelectedBatchTestTAT.Deviation&&this.props.intl.formatMessage({id:\"IDS_DEVIATION\"})+\" : \"+this.props.Login.masterData.SelectedBatchTestTAT.Deviation,/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED?\"outline-initiate\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED?\"outline-success\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED?\"outline-danger\":\"outline-secondary\",\" btn-sm ml-3\")},this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"openelnsheet\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(elnSheetId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_OPENELNSHEET\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:elnimage,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this3.openClosePortal(_this3.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"view\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEWINFO\"})// hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\n,onClick:function onClick(){return _this3.props.viewInfo(_this3.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"editBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this3.fetchEditData(editParam);}// onClick={() => this.props.getActiveBatchCreationService(editParam,\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\n})),/*#__PURE__*/ // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\nReact.createElement(Nav.Link,{name:\"initiateBatchCreation\"//  data-for=\"tooltip-common-wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_BATCHINITIATE\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey mr-2\"//role=\"button\"\n,onClick:function onClick(){return _this3.testPopUpStartActions(testStartId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay}))// :\"\"\n,/*#__PURE__*/React.createElement(Nav.Link,{name:\"completeBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(completeId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),onClick:function onClick(){return _this3.completePopUpStartActions(completeId);}//onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\n// onClick={() => this.props.validateBatchComplete({\n//     masterData: this.props.Login.masterData,\n//     userInfo: this.props.Login.userInfo,\n//     userRoleControlRights: this.props.Login.userRoleControlRights,\n//     ncontrolCode: completeId,\n//     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\n// })}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle// title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\n})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this3.ConfirmDelete(_this3.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this3.cancelBatch(_this3.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),reportActionList.length>0?/*#__PURE__*/React.createElement(CustomPopover,{nav:true,data:reportActionList,Button:true,hideIcon:true,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"value\",dynamicButton:function dynamicButton(value){return _this3.reportMethod(value);},userRoleControlRights:this.state.userRoleControlRights}):\"\")))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(CustomTab,{activeKey:this.props.Login.batchactiveKey?this.props.Login.batchactiveKey:\"IDS_SAMPLE\",tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))))):\"\"))))),/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{centered:true,scrollable:true,bsPrefix:\"model model_zindex\",show:this.props.Login.openELNSheet// show={this.state.openELNSheet}\n,onHide:this.openClosePortal,dialogClassName:\"\".concat(this.props.nflag&&this.props.nflag===2?'alert-popup':'',\" modal-fullscreen\"),backdrop:\"static\",keyboard:false,enforceFocus:false,\"aria-labelledby\":\"example-custom-modal-styling-title\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{style:{\"line-height\":\"1.0\"},id:\"example-custom-modal-styling-title\"},this.props.intl.formatMessage({id:\"IDS_ELNSHEET\"})),/*#__PURE__*/React.createElement(ReactTooltip,{globalEventOff:\"true\"})),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal-inner-content\"},/*#__PURE__*/React.createElement(Iframe// url={\"http://agl69:8080/QuaLISWeb/#/login\"}\n,{url:this.props.Login.masterData.enlLink,width:\"98%\",height:\"1000px\",id:\"reportviewID\",className:\"reportview\"//display=\"initial\"\n/// position=\"relative\" \n})))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:\"lg\",closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.operation===\"createSample\"?this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"view\"||this.props.Login.operation===\"complete\"?this.props.intl.formatMessage({id:\"IDS_BATCH\"}):this.props.Login.operation===\"createiqcsample\"?this.props.intl.formatMessage({id:\"IDS_BATCHIQCSAMPLE\"}):this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?batchMandatoryFields//  : this.props.Login.operation === \"initiate\"  ?\n//    this.initiateMandatoryFields \n//  : this.props.Login.operation === \"complete\" ?\n//    this.completeMandatoryFields\n:this.props.Login.operation===\"createiqcsample\"?this.materialIqcMandatory:[],showSaveContinue:this.state.showSaveContinue,noSave:this.props.Login.operation===\"view\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?/*#__PURE__*/React.createElement(AddBatchCreation,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onNumericInputOnChange:this.onNumericInputOnChange,handleDateChange:this.handleDateChange,sampleType:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,Test:this.state.Testvalues||[],selectedInstrumentCategory:this.state.selectedInstCategory,InstrumentCategory:this.state.InstrumentCategory,Instrument:this.state.Instrument,selectedInstrument:this.state.selectedInstrument,productCategory:this.state.ProductCategory,selectedProductCategory:this.state.selectedProductCategory,TestValue:this.state.selectedTestSynonym||[],product:this.state.Product||[],instrumentID:this.state.InstrumentID||[],selectedProduct:this.state.selectedProduct||[],studyPlanList:this.props.Login.studyPlanList||[],manufacturerList:this.props.Login.productManufacturerList||[],maHolderList:this.props.Login.maHolderList||[],timeZoneList:this.props.Login.timeZoneList||[],selectedBacthCreation:this.props.Login.masterData.SelectedBatchmaster||{},operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,selectedInstrumentId:this.state.selectedInstrumentId,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,batchCreationEditStatusList:this.props.Login.batchCreationEditStatusList,Section:this.state.Section,selectedSection:this.state.selectedSection,ProjectCode:this.state.ProjectCode,selectedProjectcode:this.state.selectedProjectcode}):this.props.Login.operation===\"createSample\"?/*#__PURE__*/React.createElement(AddSample,{onInputOnChange:this.onInputOnChange,getProductByCategory:this.getProductByCategory,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo,productCategoryList:this.props.productCategoryList,productList:this.props.productList,componentList:this.props.componentList,getDataForAddComponent:this.getDataForAddComponent,clearComponentInput:this.props.clearComponentInput,samples:this.state.samples||[],headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,addedComponentList:this.state.addedComponentList||[],addedHeaderSelectionChange:this.addedHeaderSelectionChange,addedSelectionChange:this.addedSelectionChange//dataStateChange={this.dataStateChange} \n,userRoleControlRights:this.props.userRoleControlRights,controlMap:this.props.controlMap,inputParam:this.props.inputParam,screenName:this.props.screenName,addSelectAll:this.state.addSelectAll,deleteSelectAll:this.state.deleteSelectAll,onDeleteSelectedComponent:this.onDeleteSelectedComponent,componentPopupSkip:this.props.componentPopupSkip,componentPopupTake:this.props.componentPopupTake,componentPageSizes:this.props.componentPageSizes,nneedsubsample:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedsubsample}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"complete\"?/*#__PURE__*/React.createElement(AddBatchinitiate,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,handleDateChange:this.handleDateChange,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[]}):this.props.Login.operation===\"view\"?/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ViewInfo,{userInfo:this.props.Login.userInfo,selectedRecordView:this.props.Login.masterData.selectedRecordView,viewInfoFields:viewInfoFields}))):this.props.Login.operation===\"createiqcsample\"?/*#__PURE__*/React.createElement(AddMaterialIqc,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,materialCategory:this.state.MaterialCategory,selectedMaterialType:this.state.selectedMaterialType,selectedMaterialCategory:this.state.selectedMaterialCategory,onComboChange:this.onComboChange,selectedMaterial:this.state.selectedMaterial,screenName:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),handleSaveClick:this.handleSaveClick,material:this.state.Material,materialInventory:this.state.MaterialInventory,AddSpec:this.AddSpec,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[],loadSpec:this.props.Login.loadSpec,selectedMaterialInventory:this.state.selectedMaterialInventory,selectedInventoryUnit:this.props.Login.masterData.selectedInventoryUnit,AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,onTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.batchactiveKey,Specification:this.props.Login.Specification,selectedSpec:this.props.Login.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange,openSpecModal:this.props.Login.openSpecModal,closeModal:this.closeModal}):\"\"}):\"\",this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state2=this.state,userRoleControlRights=_this$state2.userRoleControlRights,controlMap=_this$state2.controlMap,selectedRecord=_this$state2.selectedRecord,filterData=_this$state2.filterData,addedComponentList=_this$state2.addedComponentList,filterStatusList=_this$state2.filterStatusList,dataState=_this$state2.dataState,sahDataState=_this$state2.sahDataState,bahDataState=_this$state2.bahDataState,chDataState=_this$state2.chDataState,testCommentDataState=_this$state2.testCommentDataState,SampleType=_this$state2.SampleType,RegistrationType=_this$state2.RegistrationType,RegistrationSubType=_this$state2.RegistrationSubType,BCFilterStatus=_this$state2.BCFilterStatus,REJobStatus=_this$state2.REJobStatus,Testvalues=_this$state2.Testvalues,ApprovalConfigVersion=_this$state2.ApprovalConfigVersion,skip=_this$state2.skip,take=_this$state2.take,testskip=_this$state2.testskip,testtake=_this$state2.testtake,selectedFilter=_this$state2.selectedFilter,InstrumentCategory=_this$state2.InstrumentCategory,selectedInstCategory=_this$state2.selectedInstCategory,ProductCategory=_this$state2.ProductCategory,Instrument=_this$state2.Instrument,selectedInstrument=_this$state2.selectedInstrument,selectedTestSynonym=_this$state2.selectedTestSynonym,nregsubtypecode=_this$state2.nregsubtypecode,selectedProductCategory=_this$state2.selectedProductCategory,Product=_this$state2.Product,selectedProduct=_this$state2.selectedProduct,samples=_this$state2.samples,addSelectAll=_this$state2.addSelectAll,deleteSelectAll=_this$state2.deleteSelectAll,ApprovalVersionValue=_this$state2.ApprovalVersionValue,FilterStatusValue=_this$state2.FilterStatusValue,Section=_this$state2.Section,selectedSection=_this$state2.selectedSection,sampleGridItem=_this$state2.sampleGridItem,subsampleGridItem=_this$state2.subsampleGridItem,_this$state2$testGrid=_this$state2.testGridItem,testGridItem=_this$state2$testGrid===void 0?[]:_this$state2$testGrid,DynamicGridItem=_this$state2.DynamicGridItem,samplegridmoreitem=_this$state2.samplegridmoreitem,DynamicGridMoreItem=_this$state2.DynamicGridMoreItem,MaterialCategory=_this$state2.MaterialCategory,selectedMaterialType=_this$state2.selectedMaterialType,Material=_this$state2.Material,selectedMaterial=_this$state2.selectedMaterial,selectedMaterialCategory=_this$state2.selectedMaterialCategory,MaterialInventory=_this$state2.MaterialInventory,selectedMaterialInventory=_this$state2.selectedMaterialInventory,Specification=_this$state2.Specification,selectedSpec=_this$state2.selectedSpec,addedSamplesList=_this$state2.addedSamplesList,testGridArnoItems=_this$state2.testGridArnoItems,InstrumentID=_this$state2.InstrumentID,selectedInstrumentId=_this$state2.selectedInstrumentId,sinstrumentid=_this$state2.sinstrumentid,selectedProjectcode=_this$state2.selectedProjectcode,ProjectCode=_this$state2.ProjectCode;var isStateChanged=false;var bool=false;addedSamplesList=[];// samples = [];\nif(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var _dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;isStateChanged=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);BCFilterStatus=constructOptionList(this.props.Login.masterData.BCFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestname','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory||[],'ninstrumentcatcode','sinstrumentcatname','ascending','ninstrumentcatcode',false);Instrument=constructOptionList(this.props.Login.masterData.instrument||[],'ninstrumentnamecode','sinstrumentname','ascending','ninstrumentcode',false);ProductCategory=constructOptionList(this.props.Login.masterData.productcategory||[],'nproductcatcode','sproductcatname','ascending','nproductcatcode',false);Product=constructOptionList(this.props.Login.masterData.product||[],'nproductcode','sproductname','ascending','nproductcode',false);Section=constructOptionList(this.props.Login.masterData.Section||[],'nsectioncode','ssectionname','ascending','nsectioncode',false);MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory||[],'nmaterialcatcode','smaterialcatname','ascending','nmaterialcatcode',false);Material=constructOptionList(this.props.Login.masterData.Material||[],'nmaterialcode','smaterialname','ascending','nmaterialcode',false);MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory||[],'nmaterialinventtranscode','sinventoryid','ascending','nmaterialinventtranscode',false);InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID||[],'ninstrumentcode','sinstrumentid','ascending','ninstrumentcode',false);ProjectCode=constructOptionList(this.props.Login.masterData.ProjectCode||[],'nprojectmastercode','sprojectcode','ascending','nprojectmastercode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.BCFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;SampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");BCFilterStatus=BCFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");InstrumentCategory=InstrumentCategory.get(\"OptionList\");Instrument=Instrument.get(\"OptionList\");ProductCategory=ProductCategory.get(\"OptionList\");Product=Product.get(\"OptionList\");Section=Section.get(\"OptionList\");MaterialCategory=MaterialCategory.get(\"OptionList\");Material=Material.get(\"OptionList\");MaterialInventory=MaterialInventory.get(\"OptionList\");InstrumentID=InstrumentID.get(\"OptionList\");ProjectCode=ProjectCode.get(\"OptionList\");//selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\nsamples=this.props.Login.masterData.samples;addSelectAll=false;deleteSelectAll=true;nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType?{label:this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,value:this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,item:this.props.Login.masterData.defaultRegistrationSubType}:\"\";if(this.props.Login.masterData.selectedTestSynonym!==previousProps.Login.masterData.selectedTestSynonym){selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym?{label:this.props.Login.masterData.selectedTestSynonym.stestname,value:this.props.Login.masterData.selectedTestSynonym.ntestcode,item:this.props.Login.masterData.selectedTestSynonym}:\"\";var stestname=selectedTestSynonym.item;//selectedRecord = {...this.state.selectedRecord,stestname,...selectedRecord};\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{stestname:stestname});isStateChanged=true;}if(this.props.Login.masterData.selectedProductcategory!==previousProps.Login.masterData.selectedProductcategory){selectedProductCategory=this.props.Login.masterData.selectedProductcategory?{label:this.props.Login.masterData.selectedProductcategory.sproductcatname,value:this.props.Login.masterData.selectedProductcategory.nproductcatcode,item:this.props.Login.masterData.selectedProductcategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProduct!==previousProps.Login.masterData.selectedProduct){selectedProduct=this.props.Login.masterData.selectedProduct?{label:this.props.Login.masterData.selectedProduct.sproductname,value:this.props.Login.masterData.selectedProduct.nproductcode,item:this.props.Login.masterData.selectedProduct}:\"\";var sproductname=selectedProduct.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sproductname:sproductname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentCategory!==previousProps.Login.masterData.selectedInstrumentCategory){selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory?{label:this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,value:this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,item:this.props.Login.masterData.selectedInstrumentCategory}:\"\";var sinstrumentcatname=selectedInstCategory.item;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentcatname:sinstrumentcatname});// selectedRecord = {...this.state.selectedRecord,sinstrumentcatname,...selectedRecord};\nisStateChanged=true;}if(this.props.Login.masterData.selectedInstrument!==previousProps.Login.masterData.selectedInstrument){selectedInstrument=this.props.Login.masterData.selectedInstrument?{label:this.props.Login.masterData.selectedInstrument.sinstrumentname,value:this.props.Login.masterData.selectedInstrument.ninstrumentcode,item:this.props.Login.masterData.selectedInstrument}:\"\";var sinstrumentname=selectedInstrument.item;//selectedRecord = { ...this.state.selectedRecord, sinstrumentname, ...selectedRecord };\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentname:sinstrumentname});isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentId!==previousProps.Login.masterData.selectedInstrumentId){selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId?{label:this.props.Login.masterData.selectedInstrumentId.sinstrumentid,value:this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,item:this.props.Login.masterData.selectedInstrumentId}:undefined;var _sinstrumentid=selectedInstrumentId&&selectedInstrumentId.item;//selectedRecord = { ...this.state.selectedRecord, sinstrumentid, ...selectedRecord };\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentid:_sinstrumentid});isStateChanged=true;}if(this.props.Login.masterData.ProjectCode!==previousProps.Login.masterData.ProjectCode){selectedProjectcode=this.props.Login.masterData.selectedProjectedCode?{label:this.props.Login.masterData.selectedProjectedCode.sprojectcode,value:this.props.Login.masterData.selectedProjectedCode.nprojectmastercode,item:this.props.Login.masterData.selectedProjectedCode}:undefined;var sprojectcode=selectedProjectcode&&selectedProjectcode.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sprojectcode:sprojectcode},selectedRecord);isStateChanged=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});isStateChanged=true;}if(this.props.Login.selectedComponentList!==previousProps.Login.selectedComponentList){addedComponentList=this.props.Login.selectedComponentList;isStateChanged=true;// this.setState({ addedComponentList });\n}if(this.props.Login.masterData.defaultApprovalConfigVersion!==previousProps.Login.masterData.defaultApprovalConfigVersion){ApprovalVersionValue=this.props.Login.masterData.defaultApprovalConfigVersion?{label:this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,value:this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,item:this.props.Login.masterData.defaultApprovalConfigVersion}:\"\";isStateChanged=true;}if(this.props.Login.masterData.defaultFilterStatus!==previousProps.Login.masterData.defaultFilterStatus){FilterStatusValue=this.props.Login.masterData.defaultFilterStatus?{label:this.props.Login.masterData.defaultFilterStatus.sfilterstatus,value:this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,item:this.props.Login.masterData.defaultFilterStatus}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedSection!==previousProps.Login.masterData.selectedSection){selectedSection=this.props.Login.masterData.selectedSection?{label:this.props.Login.masterData.selectedSection.ssectionname,value:this.props.Login.masterData.selectedSection.nsectioncode,item:this.props.Login.masterData.selectedSection}:\"\";var ssectionname=selectedSection.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{ssectionname:ssectionname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialType!==previousProps.Login.masterData.selectedMaterialType){selectedMaterialType=this.props.Login.masterData.selectedMaterialType?{label:this.props.Login.masterData.selectedMaterialType.smaterialtypename,value:this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,item:this.props.Login.masterData.selectedMaterialType}:\"\";selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialCategory!==previousProps.Login.masterData.selectedMaterialCategory){selectedMaterialCategory=this.props.Login.masterData.selectedMaterialCategory?{label:this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,value:this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,item:this.props.Login.masterData.selectedMaterialCategory}:\"\";selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterial!==previousProps.Login.masterData.selectedMaterial){selectedMaterial=this.props.Login.masterData.selectedMaterial?{label:this.props.Login.masterData.selectedMaterial.smaterialname,value:this.props.Login.masterData.selectedMaterial.nmaterialcode,item:this.props.Login.masterData.selectedMaterial}:\"\";selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialInventory!==previousProps.Login.masterData.selectedMaterialInventory){selectedMaterialInventory=this.props.Login.masterData.selectedMaterialInventory?{label:this.props.Login.masterData.selectedMaterialInventory.sinventoryid,value:this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,item:this.props.Login.masterData.selectedMaterialInventory}:\"\";selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory&&this.props.Login.masterData.selectedMaterialInventory.sinventoryid!=null?this.props.Login.masterData.selectedMaterialInventory.sinventoryid:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInventoryUnit!==previousProps.Login.masterData.selectedInventoryUnit){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nselectedRecord[\"savailablequatity\"]=this.props.Login.masterData.selectedInventoryUnit&&this.props.Login.masterData.selectedInventoryUnit.savailablequatity!=null?this.props.Login.masterData.selectedInventoryUnit.savailablequatity:\"\";selectedRecord[\"susedquantity\"]=\"\";selectedRecord[\"sremarks\"]=\"\";isStateChanged=true;}if(this.props.Login.isselectedrecordempty){selectedRecord={};isStateChanged=true;}if(this.props.Login.masterData.Specification!==previousProps.Login.masterData.Specification){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nSpecification=this.props.Login.masterData.Specification&&this.props.Login.masterData.Specification!=null?this.props.Login.masterData.Specification:\"\";isStateChanged=true;}if(this.props.Login.selectedSpec!==previousProps.Login.selectedSpec){selectedRecord[\"selectedSpec\"]=this.props.Login.selectedSpec&&this.props.Login.selectedSpec!=null?this.props.Login.selectedSpec:\"\";isStateChanged=true;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);testGridArnoItems=dynamicColumn.testListFields.testlistitem?dynamicColumn.testListFields.testlistitem:[];testGridItem[0]=dynamicColumn.testListFields.releasetestfields[0]?dynamicColumn.testListFields.releasetestfields[0]:[];sampleGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];subsampleGridItem=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];samplegridmoreitem=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];DynamicGridMoreItem=_toConsumableArray(samplegridmoreitem);DynamicGridItem=[].concat(_toConsumableArray(sampleGridItem),_toConsumableArray(subsampleGridItem),_toConsumableArray(testGridArnoItems.slice(1)),_toConsumableArray(testGridItem));isStateChanged=true;}}// if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\n//     // let selectedRecord = {};\n//     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\n//     'ascending', 'nmaterialcatcode', false);\n//     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\n//     'ascending', 'nmaterialcode', false);\n//     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\n//     'ascending', 'nmaterialinventorycode', false);\n//      MaterialCategory = MaterialCategory.get(\"OptionList\")\n//      Material = Material.get(\"OptionList\")\n//      MaterialInventory = MaterialInventory.get(\"OptionList\")\n//      selectedRecord[\"MaterialCategory\"]=MaterialCategory\n//      selectedRecord[\"Material\"]=Material\n//      selectedRecord[\"MaterialInventory\"]=MaterialInventory\n//  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\n//         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\n//             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\n//             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\n//         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\n//         isStateChanged = true;\n//     }\n//  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\n//         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\n//             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\n//             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \n//         }:\"\"\n//         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\n//         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\n//          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\n//             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\n//             item: this.props.Login.selectedRecord.selectedMaterial\n//         }:\"\"\n//         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\n//         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\n//         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\n//             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\n//             item: this.props.Login.selectedRecord.selectedMaterialInventory\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\n//         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\n//         isStateChanged = true;\n//     }\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){isStateChanged=true;selectedRecord=this.props.Login.selectedRecord;//this.setState({ selectedRecord: this.props.Login.selectedRecord });\n}if(isStateChanged){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterData:filterData,addedComponentList:addedComponentList,filterStatusList:filterStatusList,dataState:dataState,sahDataState:sahDataState,bahDataState:bahDataState,chDataState:chDataState,testCommentDataState:testCommentDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,BCFilterStatus:BCFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,selectedInstCategory:selectedInstCategory,InstrumentCategory:InstrumentCategory,Instrument:Instrument,selectedInstrument:selectedInstrument,selectedTestSynonym:selectedTestSynonym,nregsubtypecode:nregsubtypecode,ProductCategory:ProductCategory,selectedProductCategory:selectedProductCategory,Product:Product,selectedProduct:selectedProduct,samples:samples,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll,ApprovalVersionValue:ApprovalVersionValue,FilterStatusValue:FilterStatusValue,Section:Section,selectedSection:selectedSection,sampleGridItem:sampleGridItem,subsampleGridItem:subsampleGridItem,testGridItem:testGridItem,DynamicGridItem:DynamicGridItem,samplegridmoreitem:samplegridmoreitem,DynamicGridMoreItem:DynamicGridMoreItem,MaterialCategory:MaterialCategory,selectedMaterialType:selectedMaterialType,Material:Material,selectedMaterial:selectedMaterial,selectedMaterialCategory:selectedMaterialCategory,MaterialInventory:MaterialInventory,selectedMaterialInventory:selectedMaterialInventory,Specification:Specification,selectedSpec:selectedSpec,addedSamplesList:addedSamplesList,testGridArnoItems:testGridArnoItems,InstrumentID:InstrumentID,selectedInstrumentId:selectedInstrumentId,sinstrumentid:sinstrumentid,selectedProjectcode:selectedProjectcode,ProjectCode:ProjectCode});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){// if (props.Login.masterStatus !== \"\") {\n//     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n//        if(props.Login.operation == \"initiate\"){\n//         toast.warn(props.Login.masterStatus);\n//         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\n//        }\n//     }\n// }\nif(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\n}// const sampleColumnList = [];\n// if (props.nneedsubsample){\n//     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\n// }\n// else{\n//     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\n// }\n}]);return BatchCreation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getTestInstrumentComboService:getTestInstrumentComboService,getTestInstrumentCategory:getTestInstrumentCategory,getInstrumentForInstCategory:getInstrumentForInstCategory,getProductBasedInstrument:getProductBasedInstrument,getBatchCreationDetails:getBatchCreationDetails,onActionFilterSubmit:onActionFilterSubmit,getProductcategoryAction:getProductcategoryAction,createBatchmasterAction:createBatchmasterAction,getSamplesForGrid:getSamplesForGrid,getSelectedBatchCreationDetail:getSelectedBatchCreationDetail,createSampleAction:createSampleAction,deleteSampleAction:deleteSampleAction,getActiveBatchCreationService:getActiveBatchCreationService,updateBatchcreationAction:updateBatchcreationAction,deleteBatchCreation:deleteBatchCreation,batchInitiateAction:batchInitiateAction,getBCRegistrationSubType:getBCRegistrationSubType,batchCompleteAction:batchCompleteAction,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getBatchhistoryAction:getBatchhistoryAction,getBatchSection:getBatchSection,viewInfo:viewInfo,getIqcSamples:getIqcSamples,getMaterialBasedOnMaterialCategory:getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial:getMaterialInventoryBasedOnMaterial,batchSaveIQCActions:batchSaveIQCActions,getMaterialAvailQtyBasedOnInv:getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction:getBatchIqcSampleAction,getBCApprovalConfigVersion:getBCApprovalConfigVersion,getBCRegistrationType:getBCRegistrationType,getTreeByMaterial:getTreeByMaterial,getNewRegSpecification:getNewRegSpecification,cancelIQCSampleAction:cancelIQCSampleAction,batchCancelAction:batchCancelAction,batchInitiateDatePopup:batchInitiateDatePopup,batchCompleteDatePopup:batchCompleteDatePopup,getInstrumentID:getInstrumentID,getBatchViewResultAction:getBatchViewResultAction,validateEsignforBatch:validateEsignforBatch//,batchTAT\n})(injectIntl(BatchCreation));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/batchruncreation/BatchCreation.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Nav","FormGroup","FormLabel","Card","Modal","Image","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faEye","faPlay","faPlus","faSync","callService","crudMaster","updateStore","getTestInstrumentComboService","getTestInstrumentCategory","getProductBasedInstrument","getInstrumentForInstCategory","getBatchCreationDetails","onActionFilterSubmit","getProductcategoryAction","createBatchmasterAction","getSamplesForGrid","getSelectedBatchCreationDetail","createSampleAction","deleteSampleAction","getActiveBatchCreationService","updateBatchcreationAction","deleteBatchCreation","batchInitiateAction","getBCRegistrationSubType","batchCompleteAction","validateEsignCredential","filterColumnData","getBatchhistoryAction","getBatchSection","viewInfo","getIqcSamples","getMaterialBasedOnMaterialCategory","getMaterialInventoryBasedOnMaterial","batchSaveIQCActions","getMaterialAvailQtyBasedOnInv","getBatchIqcSampleAction","getBCApprovalConfigVersion","getBCRegistrationType","getTreeByMaterial","getNewRegSpecification","cancelIQCSampleAction","batchCancelAction","batchInitiateDatePopup","batchCompleteDatePopup","getInstrumentID","getBatchViewResultAction","validateEsignforBatch","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","SampleType","DEFAULT_RETURN","showEsign","getControlMap","getStartOfDay","getEndOfDay","formatInputDate","constructOptionList","rearrangeDateFormat","convertDateValuetoString","CF_encryptionData","ConfirmMessage","SlideOutModal","ReadOnlyText","ContentPanel","MediaLabel","ListWrapper","BreadcrumbComponent","Esign","ProductList","CustomPopover","BatchCreationFilter","AddBatchCreation","AddBatchinitiate","CustomTab","SampleTab","BatchhistoryTab","process","AddSample","ListMaster","ViewInfo","Affix","AddMaterialIqc","BatchIqcSampleTab","BatchResultTab","PortalModal","Iframe","ReactTooltip","mapStateToProps","state","Login","BatchCreation","props","sidebarExpandCollapse","setState","sidebarview","completeMandatoryFields","initiateMandatoryFields","materialIqcMandatory","getSamples","selectedbatchmaster","addSampleID","controlMap","has","get","ncontrolcode","ntransactionstatus","INITIATED","COMPLETED","CANCELLED","warn","intl","formatMessage","id","masterData","SelectedBatchmaster","ntestcode","nbatchmastercode","userInfo","realRegTypeValue","nregtypecode","NA","realRegSubTypeValue","nregsubtypecode","createBatchValidation","addParam","defaultRegistrationType","undefined","FilterStatusValue","item","ApprovalVersionValue","Samples","length","addcontrolcode","inputData","realSampleTypeValue","nsampletypecode","nsectioncode","deleteRecord","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","selectedRecord","nbatchsampleCode","fetchUrl","isSingleGet","fecthInputObject","userinfo","jsondata","inputParam","classUrl","methodUrl","Sample","sarno","ssamplearno","stestname","nbatchsamplecode","ndesigntemplatemappingcode","operation","displayName","dataState","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","cancelRecord","nbatchsampleiqccode","iqcSample","nmaterialinventtranscode","onTabChange","tabProps","nneedsubsample","batchactiveKey","dataStateChange","event","dataResult","sampleState","dataStateBatchHistoryChange","Batchhistory","histortState","dataStateBatchIqcChangeChange","iqcsample","iqcsampleState","dataStateViewChange","Resultview","viewstate","getApprovalVersion","obj","fromDate","realFromDate","toDate","realToDate","needFilterSubmit","parseInt","defaultSampleType","isneedapprovalfilter","defaultRegistrationSubType","isneedrealFilterStatus","realRegistrationTypeList","realRegistrationSubTypeList","realApprovalConfigVersionList","realBCFilterStatusList","realdefaultFilterStatus","realApproveConfigVersion","tabDetail","tabMap","Map","set","gridfillingColumn","DynamicGridItem","DynamicGridMoreItem","ELNTest","sbatcharno","onFilterComboChange","fieldname","dateObj","nflag","ntranscode","value","selectedFilter","realndesigntemplatemappingcode","napprovalversioncode","napprovalconfigversioncode","napprovalconfigcode","inputParamData","fromdate","todate","ApprovalConfigVersion","String","defaultFilterStatus","DesignTemplateMappingValue","getBCFilterTemplate","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","getBCFilterStatus","handleFilterDateChange","dateValue","dateName","Date","headerSelectionChange","checked","syntheticEvent","target","sampleList","samples","addedSamplesList","map","findIndex","x","ntransactiontestcode","push","selected","newItem","JSON","parse","stringify","olditem","addSelectAll","deleteSelectAll","sampleListData","deletedListdData","filter","item1","npreregno","deletedList","onTreeClick","activeKey","key","focusKey","keyName","selectedNode","primaryKey","selectionChange","samplesList","dataItem","initialList","valiateCheckAll","handleSaveClick","saveType","failedControls","startLabel","label","mandatoryFields","console","log","selectedSpec","nallottedspeccode","loadSpec","openSpecModal","info","handlePageChange","e","skip","take","ConfirmDelete","selectedBatch","deleteId","confirmMessage","confirm","completePopUpStartActions","completeId","DRAFT","AddSpec","selectedMaterial","selectedMaterialCategory","ncategorybasedflow","testPopUpStartActions","testStartId","testStartActions","selectedmaster","jsonuidata","totalSample","concat","join","sample","ntransactionsamplecode","nneedmyjob","nneedjoballocation","nneedtestinitiate","dtransactiondate","currentTime","scomments","BCFilterStatus","savailablequatity","parseFloat","susedquantity","inventoryTransaction","inputRegistrationData","inputMaterialInventoryData","inputBatchData","batchCreationSampleData","batchCreationTestData","batchCreationSampleArray","batchCreationTestArray","samplecombinationuniqueArray","inputMaterialInventoryArrData","nspecsampletypecode","ntemplatemanipulationcode","nregsubtypeversioncode","nmaterialcode","nmaterialcatcode","smaterialcatname","sinventoryid","selectedMaterialInventory","nmaterialinventorycode","smaterial","smaterialname","smaterialtype","selectedMaterialType","smaterialtypename","nmaterialtypecode","sunitname","sremarks","selectedInventoryUnit","nqtyused","selectedTestDetails","ntestgrouptestcode","nmethodcode","PREREGISTER","cancelBatch","cancelId","batchCompleteActions","closeAlert","showConfirmAlert","loading","closeModal","selectedId","onComboChange","comboData","fieldName","selectedInstCategory","selectedInstrumentId","InstrumentCategory","selectedInstrument","Instrument","InstrumentID","naddcontrolCode","sregsubtypename","ssectionname","selectedTestSynonym","nprojectmastercode","ncalibrationreq","needSectionwise","needsection","ninstrumentcatcode","ninstrumentcode","selectedProjectcode","onNumericInputOnChange","name","onInputOnChange","type","ACTIVE","DEACTIVE","YES","NO","onMultiColumnValue","flag","keys","forEach","objarray","objkey","index","getBatchManufacturerComboChange","onMultiColumnMAHChange","clearComponentInput","componentDefaultSearchDate","openClosePortal","openELNSheet","elnUserInfo","enlLink","integrationSettings","elnSite","link","detail","EncryptData","settedId","encryptedbatchid","userObject","usercode","nelncode","username","selnuserid","userfullname","selnusername","lsusergroup","usergroupcode","nelnusergroupcode","usergroupname","lssitemaster","sitecode","nelnsitecode","encrypteduser","baseURL","slinkname","handleDateChange","onDropImage","attachedFiles","actionType","saveSample","addedsamplelist","sampleArray","samplelist","batchSample","onSaveClick","formRef","nprevioustestcode","selectedSection","selectedProduct","unchangeList","searchRef","current","editId","ALL","fetchEditData","editParam","validateEsign","sreason","password","closeFilter","inputValues","realSampleTypeList","SampleTypeValue","RegistrationType","RegTypeValue","RegSubTypeValue","showFilter","onFilterSubmit","reloadData","isFilterSubmit","onClickReport","reportParam","sprimarykeyname","nprimarykey","nreleasebatchcode","ncertificatetypecode","ndecision","PASS","ndecisionstatus","nreporttypecode","SCREENWISE","BATCH","ncoareporttypecode","BATCHPREVIEW","skipbatchvalidation","reportMethod","method","SelectedBatchCreation","controlId","settings","createRef","searchFieldList","sampleMandatoryFields","copyMandatoryFields","temparray","option","LABEL","slanguagetypecode","VALUE","selectAll","reportActionList","batchMandatoryFields","sinstrumentcatname","getBatch","addId","elnSheetId","primaryeyField","viewInfoFields","PROJECTSAMPLETYPE","stransactionstatuscode","SelectedFilterStatus","filterParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sfilterstatus","searchedData","Batchmaster","batch","openFilter","isClearSearch","indexOf","REJobStatus","Testvalues","onDesignTemplateChange","stateDynamicDesign","parentFunction","SelectedBatchTestTAT","Deviation","stransdisplaystatus","elnimage","reject","masterStatus","showSaveContinue","ProductCategory","selectedProductCategory","Product","studyPlanList","productManufacturerList","maHolderList","timeZoneList","batchCreationEditStatusList","Section","ProjectCode","getProductByCategory","productCategoryList","productList","componentList","getDataForAddComponent","addedComponentList","addedHeaderSelectionChange","addedSelectionChange","onDeleteSelectedComponent","componentPopupSkip","componentPopupTake","componentPageSizes","selectedRecordView","MaterialCategory","Material","MaterialInventory","AgaramTree","OpenNodes","FocusKey","Specification","onspecChange","confirmAlert","previousProps","filterData","filterStatusList","sahDataState","bahDataState","chDataState","testCommentDataState","testskip","testtake","sampleGridItem","subsampleGridItem","testGridItem","samplegridmoreitem","testGridArnoItems","sinstrumentid","isStateChanged","bool","instrumentCategory","instrument","productcategory","product","instrumentID","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","selectedProductcategory","sproductcatname","nproductcatcode","sproductname","nproductcode","selectedInstrumentCategory","sinstrumentname","selectedProjectedCode","sprojectcode","Object","values","selectedComponentList","sversionname","isselectedrecordempty","DynamicDesign","dynamicColumn","testListFields","testlistitem","releasetestfields","samplegriditem","subsamplelistitem","slice","error","Component"],"mappings":"mlCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,CAAwBC,SAAxB,CAAmCC,SAAnC,CAA8CC,IAA9C,CAAoDC,KAApD,CAA2DC,KAA3D,CAAkEC,MAAlE,KAAgF,iBAAhF,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,aAD7B,CAC4CC,MAD5C,CACoDC,KADpD,CAC2DC,MAD3D,CACmEC,MADnE,CAC2EC,MAD3E,KAEO,mCAFP,C,0GAKA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,WAD7B,CAEIC,6BAFJ,CAEmCC,yBAFnC,CAE8DC,yBAF9D,CAGIC,4BAHJ,CAGkCC,uBAHlC,CAG2DC,oBAH3D,CAIIC,wBAJJ,CAI8BC,uBAJ9B,CAIuDC,iBAJvD,CAKIC,8BALJ,CAKoCC,kBALpC,CAKwDC,kBALxD,CAMIC,6BANJ,CAMmCC,yBANnC,CAM8DC,mBAN9D,CAOIC,mBAPJ,CAOyBC,wBAPzB,CAOmDC,mBAPnD,CAQIC,uBARJ,CAQ6BC,gBAR7B,CAQ+CC,qBAR/C,CAQsEC,eARtE,CASIC,QATJ,CAScC,aATd,CAS6BC,kCAT7B,CAUIC,mCAVJ,CAUyCC,mBAVzC,CAU8DC,6BAV9D,CAWIC,uBAXJ,CAW6BC,0BAX7B,CAWyDC,qBAXzD,CAWgFC,iBAXhF,CAYIC,sBAZJ,CAY4BC,qBAZ5B,CAYmDC,iBAZnD,CAYsEC,sBAZtE,CAaIC,sBAbJ,CAa4BC,eAb5B,CAa6CC,wBAb7C,CAasEC,qBAClE;AAdJ,KAeO,eAfP,CAgBA,OACIC,iBADJ,CACuBC,gBADvB,CACyCC,cADzC,CACyDC,aADzD,CAEIC,mBAFJ,CAEyBC,UAFzB,KAGO,8BAHP,CAIA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OACIC,SADJ,CACeC,aADf,CAC8BC,aAD9B,CAC6CC,WAD7C,CAEIC,eAFJ,CAEqBC,mBAFrB,CAE0CC,mBAF1C,CAE+DC,wBAF/D,CAEyFC,iBAFzF,KAGO,+BAHP,CAIA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAqCC,UAArC,KAAuD,6BAAvD,CACA,OAASC,WAAT,KAA4B,sCAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uCAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oDAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,KAAT,KAAsB,QAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,8GAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAIMC,CAAAA,a,0HACF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EADe,MA+CnBC,qBA/CmB,CA+CK,UAAM,CAC1B,MAAKC,QAAL,CAAc,CACVC,WAAW,CAAE,IADH,CAAd,EAGH,CAnDkB,OA0FnBC,uBA1FmB,CA0FO,CACtB,CACI,UAAW,uBADf,CAEI;AACA,YAAa,kBAHjB,CAGqC,iBAAkB,YAHvD,CAGqE,cAAe,WAHpF,CADsB,CA1FP,OAkGnBC,uBAlGmB,CAkGO,CACtB,CACI,UAAW,uBADf,CAEI;AACA,YAAa,kBAHjB,CAGqC,iBAAkB,YAHvD,CAGqE,cAAe,WAHpF,CADsB,CAlGP,OA4GnBC,oBA5GmB,CA4GI,CAEnB,CAAE,UAAW,kBAAb,CAAiC,YAAa,mBAA9C,CAAmE,iBAAkB,YAArF,CAAmG,cAAe,WAAlH,CAFmB,CAGnB,CAAE,UAAW,sBAAb,CAAqC,YAAa,kBAAlD,CAAsE,iBAAkB,YAAxF,CAAsG,cAAe,WAArH,CAHmB,CAInB,CAAE,UAAW,cAAb,CAA6B,YAAa,eAA1C,CAA2D,iBAAkB,YAA7E,CAA2F,cAAe,WAA1G,CAJmB,CAKnB,CAAE,UAAW,uBAAb,CAAsC,YAAa,cAAnD,CAAmE,iBAAkB,YAArF,CAAmG,cAAe,WAAlH,CALmB,CAMnB;AACA,CAAE,UAAW,aAAb,CAA4B,YAAa,eAAzC,CAA0D,iBAAkB,WAA5E,CAAyF,cAAe,SAAxG,CAPmB,CA5GJ,OAsHnBC,UAtHmB,CAsHN,SAACC,mBAAD,CAAyB,CAClC,GAAMC,CAAAA,WAAW,CAAG,MAAKZ,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,GAA2C,MAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCC,YAAvG,CACA,GAAIL,mBAAmB,CAACM,kBAApB,EAA0C7D,iBAAiB,CAAC8D,SAA5D,EACAP,mBAAmB,CAACM,kBAApB,EAA0C7D,iBAAiB,CAAC+D,SAD5D,EAEAR,mBAAmB,CAACM,kBAApB,EAA0C7D,iBAAiB,CAACgE,SAFhE,CAE2E,CACvEhI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAAX,EACH,CAJD,IAIO,CACH,MAAKrB,KAAL,CAAW/E,iBAAX,CAA6B,MAAK+E,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDC,SAA7E,CAAwF,MAAKxB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAAxI,CACI,MAAKzB,KAAL,CAAWF,KAAX,CAAiB4B,QADrB,CAC+B,MAAK1B,KAAL,CAAWF,KAAX,CAAiBwB,UADhD,CAEI,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA7F,CACI,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADjD,CACgE3E,iBAAiB,CAAC4E,EAHtF,CAII,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CACI,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADpD,CACsE9E,iBAAiB,CAAC4E,EAL5F,CAKgGpB,WALhG,EAMH,CACJ,CApIkB,OAsInBuB,qBAtImB,CAsIK,SAACC,QAAD,CAAc,CAClC,GAAI,MAAKjC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,EAAuDC,SAAvD,EAAoE,MAAKtC,KAAL,CAAWuC,iBAAX,CAA6BC,IAA7B,EAAqCF,SAAzG,EAAsH,MAAKtC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,EAAmCF,SAAzJ,EACA,MAAKtC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,EAAwCF,SAD5C,CAEE,CACE,MAAKnC,KAAL,CAAWlE,eAAX,CAA2BmG,QAA3B,EACH,CAJD,IAIO,CACHhJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACJ,CA9IkB,OAgJnBrF,aAhJmB,CAgJH,SAACuF,mBAAD,CAAyB,CACrC,GAAIA,mBAAmB,CAACT,kBAApB,EAA0C7D,iBAAiB,CAAC8D,SAA5D,EACAQ,mBAAmB,CAACT,kBAApB,GAA2C7D,iBAAiB,CAAC+D,SAD7D,EAEAO,mBAAmB,CAACT,kBAApB,GAA2C7D,iBAAiB,CAACgE,SAFjE,CAE4E,CACxEhI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAAX,EACH,CAJD,IAIO,IAAI,MAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoCC,MAApC,EAA8C,CAAlD,CAAqD,CACxDvJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,0BAAN,CAA9B,CAAX,EACH,CAFM,IAEA,CACH,GAAIoB,CAAAA,cAAc,CAAG,MAAK5C,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,kBAA1B,GAAiD,MAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,kBAA1B,EAA8CC,YAApH,CACA,GAAI6B,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA7F,CACxB,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADrB,CACoC3E,iBAAiB,CAAC4E,EADlF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEA;AACA;AACAa,SAAS,CAAC,iBAAD,CAAT,CAA+BD,cAA/B,CACA;AACA;AACA;AACAC,SAAS,CAAC,cAAD,CAAT,CAA4BnB,mBAAmB,CAACsB,YAAhD,CACAH,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,kBAAD,CAAT,CAAgCnB,mBAAmB,CAACE,gBAApD,CACAiB,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDC,SAAzE,CACA,MAAKxB,KAAL,CAAWhE,aAAX,CAAyB0G,SAAzB,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAArD,EACH,CACJ,CA5KkB,OA8KnBwB,YA9KmB,CA8KJ,SAACJ,SAAD,CAAe,CAE1B,GAAI,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC8D,SAAxF,EACA,MAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC+D,SAD7F,CACwG,CACpG/H,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAHD,IAGO,CACH,GAAM0B,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAET,SAAS,CAACU,cAAV,CAAyBC,gBAJ5B,CAKdC,QAAQ,CAAE,mCALI,CAMdC,WAAW,CAAE,IANC,CAOd;AACAC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAA7B,CARJ,CAAlB,CAUA,GAAIgC,CAAAA,QAAQ,CAAGhB,SAAS,CAACU,cAAzB,CACA,GAAMO,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,QAFI,CAGfd,SAAS,CAATA,SAHe,CAIfL,SAAS,CAAE,CACPoB,MAAM,CAAE,CACJ,QAASpB,SAAS,CAACU,cAAV,CAAyBW,KAD9B,CAEJ,cAAerB,SAAS,CAACU,cAAV,CAAyBY,WAFpC,CAGJ,YAAatB,SAAS,CAACU,cAAV,CAAyBa,SAHlC,CAIJ,mBAAoBvB,SAAS,CAACU,cAAV,CAAyBc,gBAJzC,CADD,CAQP,WAAY,MAAKlE,KAAL,CAAWF,KAAX,CAAiB4B,QARtB,CASPwC,gBAAgB,CAAExB,SAAS,CAACU,cAAV,CAAyBc,gBATpC,CAUP5C,UAAU,gCACH,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADd,MAEN,UAAW,EAFL,EAVH,CAcPG,gBAAgB,CAAEiB,SAAS,CAACU,cAAV,CAAyB3B,gBAdpC,CAePgC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAfpB,CAgBPyC,0BAA0B,CAAE,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAhBjD,CAiBP;AACA;AACAvC,YAAY,CAAE,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAnBpL,CAoBPE,eAAe,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CACb,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADnC,CACqD9E,iBAAiB,CAAC4E,EArBjF,CAJI,CA2BfuC,SAAS,CAAE1B,SAAS,CAAC0B,SA3BN,CA4BfC,WAAW,CAAE,MAAKrE,KAAL,CAAWF,KAAX,CAAiB6D,UAAjB,CAA4BU,WA5B1B,CA6BfC,SAAS,CAAE,MAAKzE,KAAL,CAAWyE,SA7BP,CAAnB,CA+BA,GAAI9G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8E9B,SAAS,CAAC+B,YAAxF,CAAb,CAAoH,CAChH,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEnB,UAAU,CAAVA,UAAF,CAAcrC,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAA3C,CAD3B,CAEFyD,SAAS,CAAE,IAFT,CAEeC,UAAU,CAAE,MAAKhF,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAKrB,KAAL,CAAWF,KAAX,CAAiB6D,UAAjB,CAA4BU,WAAlC,CAA9B,CAF3B,CAGFD,SAAS,CAAE1B,SAAS,CAAC0B,SAHnB,CAFS,CAAnB,CAQA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CAVD,IAWK,CACD,MAAK1E,KAAL,CAAW5E,kBAAX,CAA8BuI,UAAU,CAACjB,SAAzC,EACH,CACJ,CACJ,CA7OkB,OA+OnBuC,YA/OmB,CA+OJ,SAACvC,SAAD,CAAe,CAE1B,GAAI,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC8D,SAAxF,EACA,MAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC+D,SAD7F,CACwG,CACpG/H,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAHD,IAGO,CACH,GAAM0B,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAET,SAAS,CAACwC,mBAJb,CAKd5B,QAAQ,CAAE,uCALI,CAMdC,WAAW,CAAE,IANC,CAOd;AACAC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAA7B,CARJ,CAAlB,CAUA,GAAMiC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,WAFI,CAGfd,SAAS,CAATA,SAHe,CAIfL,SAAS,CAAE,CACPyC,SAAS,CAAEzC,SAAS,CAACU,cADd,CAEP8B,mBAAmB,CAAExC,SAAS,CAACU,cAAV,CAAyB8B,mBAFvC,CAGP5D,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAHtB,CAIPG,gBAAgB,CAAEiB,SAAS,CAACU,cAAV,CAAyB3B,gBAJpC,CAKP2D,wBAAwB,CAAE1C,SAAS,CAACU,cAAV,CAAyBgC,wBAL5C,CAMP3B,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QANpB,CAOPyC,0BAA0B,CAAE,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAPjD,CAQP;AACA;AACAvC,YAAY,CAAE,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAVpL,CAWPE,eAAe,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CACb,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADnC,CACqD9E,iBAAiB,CAAC4E,EAZjF,CAaPe,eAAe,CAAE,MAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CACb,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADnC,CACqD3F,iBAAiB,CAAC4E,EAdjF,CAJI,CAoBfuC,SAAS,CAAE1B,SAAS,CAAC0B,SApBN,CAqBfC,WAAW,CAAE,MAAKrE,KAAL,CAAWF,KAAX,CAAiB6D,UAAjB,CAA4BU,WArB1B,CAsBfC,SAAS,CAAE,MAAKzE,KAAL,CAAWyE,SAtBP,CAAnB,CAwBA,GAAI9G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8E9B,SAAS,CAAC+B,YAAxF,CAAb,CAAoH,CAChH,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CAEFC,UAAU,CAAE,CACRnB,UAAU,CAAVA,UADQ,CAERrC,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAFrB,CAFV,CAMFyD,SAAS,CAAE,IANT,CAMeC,UAAU,CAAE,MAAKhF,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAKrB,KAAL,CAAWF,KAAX,CAAiB6D,UAAjB,CAA4BU,WAAlC,CAA9B,CAN3B,CAOFD,SAAS,CAAE1B,SAAS,CAAC0B,SAPnB,CAFS,CAAnB,CAYA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CAdD,IAeK,CACD,MAAK1E,KAAL,CAAWtD,qBAAX,CAAiCiH,UAAU,CAACjB,SAA5C,EACH,CACJ,CACJ,CA1SkB,OA4SnB2C,WA5SmB,CA4SL,SAACC,QAAD,CAAc,CACxB,GAAMN,CAAAA,UAAU,CAAGM,QAAQ,CAACN,UAA5B,CAEA,GAAIA,UAAU,EAAI,kBAAlB,CAAsC,CAElC,GAAItC,CAAAA,SAAS,CAAG,CACZpB,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADjB,CAEZI,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAFf,CAGZD,gBAAgB,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAHtD,CAAhB,CAKA,MAAKzB,KAAL,CAAWnE,qBAAX,CAAiC6G,SAAjC,CAA4C,IAA5C,EACH,CARD,IAQO,IAAIsC,UAAU,EAAI,oBAAlB,CAAwC,CAE3C,GAAItC,CAAAA,UAAS,CAAG,CACZpB,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADjB,CAEZI,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAFf,CAGZD,gBAAgB,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAHtD,CAAhB,CAKA,MAAKzB,KAAL,CAAW3D,uBAAX,CAAmCqG,UAAnC,CAA8C,IAA9C,EACH,CARM,IAQA,IAAIsC,UAAU,EAAI,aAAlB,CAAiC,CACpC,GAAItC,CAAAA,WAAS,CAAG,CACZpB,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADjB,CAEZI,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAFf,CAGZ6D,cAAc,CAAE,MAAK1F,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAHlE,CAIZ9D,gBAAgB,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAJtD,CAAhB,CAMA,MAAKzB,KAAL,CAAWjD,wBAAX,CAAoC2F,WAApC,CAA+C,IAA/C,EACH,CARM,IAQA,CACH,GAAMgC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CAAEI,UAAU,CAAVA,UAAF,CAAcQ,cAAc,CAAER,UAA9B,CAFS,CAAnB,CAIA,MAAKhF,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CACJ,CA9UkB,OAkVnBe,eAlVmB,CAkVD,SAACC,KAAD,CAAW,CACzB,MAAKxF,QAAL,CAAc,CACVyF,UAAU,CAAE1G,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA7B,CAAsCmD,KAAK,CAACpB,SAA5C,CADT,CAEVsB,WAAW,CAAEF,KAAK,CAACpB,SAFT,CAAd,EAIH,CAvVkB,OAyVnBuB,2BAzVmB,CAyVW,SAACH,KAAD,CAAW,CACrC,MAAKxF,QAAL,CAAc,CACVyF,UAAU,CAAE1G,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwE,YAA7B,CAA2CJ,KAAK,CAACpB,SAAjD,CADT,CAEVyB,YAAY,CAAEL,KAAK,CAACpB,SAFV,CAAd,EAIH,CA9VkB,OAgWnB0B,6BAhWmB,CAgWa,SAACN,KAAD,CAAW,CACvC,MAAKxF,QAAL,CAAc,CACVyF,UAAU,CAAE1G,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA7B,CAAwCP,KAAK,CAACpB,SAA9C,CADT,CAEV4B,cAAc,CAAER,KAAK,CAACpB,SAFZ,CAAd,EAIH,CArWkB,OAuWnB6B,mBAvWmB,CAuWG,SAACT,KAAD,CAAW,CAC7B,MAAKxF,QAAL,CAAc,CACVyF,UAAU,CAAE1G,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8E,UAA7B,CAAyCV,KAAK,CAACpB,SAA/C,CADT,CAEV+B,SAAS,CAAEX,KAAK,CAACpB,SAFP,CAAd,EAIH,CA5WkB,OA2XnBgC,kBA3XmB,CA2XE,SAAC1B,IAAD,CAAU,CAC3B,GAAIlC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAI6D,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAKiC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAA5B,EAAwC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAArE,CAC9B,MAAKzG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MAA5B,EAAsC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADpC,CACgD,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QADjE,CAAlC,CAGAgB,SAAS,CAAG,CACRkE,gBAAgB,CAAE,OADV,CAERhE,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CAFjB,CAGR4D,QAAQ,CAAED,GAAG,CAACC,QAHN,CAGe;AACvBE,MAAM,CAAEH,GAAG,CAACG,MAJJ,CAIW;AACnB9E,YAAY,CAAEgD,IAAI,CAACvC,IAAL,CAAUT,YALhB,CAMRF,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QANnB,CAORK,eAAe,CAAE6C,IAAI,CAACvC,IAAL,CAAUN,eAPnB,CAQRT,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UARrB,CASRyF,oBAAoB,CAAE,IATd,CAURC,0BAA0B,CAAEpC,IAAI,CAACvC,IAVzB,CAWR4E,sBAAsB,CAAE,OAXhB,CAYR;AACA;AACA;AACA;AACAC,wBAAwB,CAAE,MAAKlH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAhB9C,CAiBRC,2BAA2B,CAAE,MAAKnH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BAjBjD,CAkBRC,6BAA6B,CAAE,MAAKpH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BAlBnD,CAmBRC,sBAAsB,CAAE,MAAKrH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAnB5C,CAoBR1F,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBApBtC,CAqBRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBArBzC,CAsBRwF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAtB7C,CAuBRC,wBAAwB,CAAE,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAvB9C,CAwBRd,YAAY,CAAC,MAAKzG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAxBjC,CAyBRE,UAAU,CAAC,MAAK3G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UAzB/B,CAAZ,CA4BA,MAAK3G,KAAL,CAAW1D,0BAAX,CAAsCoG,SAAtC,EAEH,CA/ZkB,OAianB8E,SAjamB,CAiaP,UAAM,CACd,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,GAAJ,EAAf,CACAD,MAAM,CAACE,GAAP,CAAW,YAAX,cACI,oBAAC,SAAD,EACI,MAAM,CAAE,MAAK3H,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,EAAuC,EADnD,CAEI,UAAU,CAAEtD,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,EAAuC,EAAxC,CAA4C,MAAK1C,KAAL,CAAW+F,WAAvD,CAFvB,CAGI,SAAS,CAAE,MAAK/F,KAAL,CAAW+F,WAH1B,CAII,UAAU,CAAE,MAAK/F,KAAL,CAAWa,UAJ3B,CAKI,eAAe,CAAE,MAAK+E,eAL1B,CAMI,qBAAqB,CAAE,MAAK5F,KAAL,CAAW0E,qBANtC,CAOI,QAAQ,CAAE,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAP/B,CAQI,YAAY,CAAE,MAAKoB,YARvB,CASI,mBAAmB,CAAE,MAAK8E,iBAAL,CAAuB,MAAK/H,KAAL,CAAWgI,eAAlC,GAAsD,EAT/E,CAUI,iBAAiB,CAAE,MAAKD,iBAAL,CAAuB,MAAK/H,KAAL,CAAWiI,mBAAlC,GAA0D,EAVjF,CAWI,SAAS,CAAE,SAXf,CAYI,UAAU,CAAE,4BAAM,OAAKvH,UAAL,CAAgB,MAAKP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5C,CAAN,EACZ;AACA;AACA;AAfJ,CAgBI,UAAU,CAAC,YAhBf,CAiBI,cAAc,CAAE,MAAK1B,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAjBlF,EADJ,EAqBAkC,MAAM,CAACE,GAAP,CAAW,oBAAX,cACI,oBAAC,iBAAD,EACI,SAAS,CAAE,MAAK3H,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA5B,EAAyC,EADxD,CAEI,UAAU,CAAEhH,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA5B,EAAyC,EAA1C,CAA8C,MAAKpG,KAAL,CAAWqG,cAAzD,CAFvB,CAGI,SAAS,CAAE,MAAKrG,KAAL,CAAWqG,cAH1B,CAII,UAAU,CAAE,MAAKrG,KAAL,CAAWa,UAJ3B,CAKI,eAAe,CAAE,MAAKsF,6BAL1B,CAMI,qBAAqB,CAAE,MAAKnG,KAAL,CAAW0E,qBANtC,CAOI,QAAQ,CAAE,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAP/B,CAQI,YAAY,CAAE,MAAKuD,YARvB,CASI,SAAS,CAAE,WATf,CAUI,aAAa,CAAE,+BAAM,OAAKjJ,aAAL,CAAmB,MAAKgE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA/C,CAAN,EAVnB,CAWI,UAAU,CAAC,oBAXf,CAYI,cAAc,CAAE,MAAK1B,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAZlF,EADJ,EAgBJ;AACA;AACI,GAAG,MAAKvF,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAqE7D,iBAAiB,CAAC8D,SAAvF,EAAmG,MAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC+D,SAA/L,CACA,CACIyG,MAAM,CAACE,GAAP,CAAW,aAAX,cACI,oBAAC,cAAD,EACI,OAAO,CAAE,MAAK3H,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByG,OAA5B,EAAuC,EADpD,CAEI,UAAU,CAAE,MAAK/H,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8E,UAA5B,EAA0C,EAF1D,CAGI,UAAU,CAAEnH,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8E,UAA5B,EAA0C,EAA3C,CAA+C,MAAKvG,KAAL,CAAWwG,SAA1D,CAHvB,CAII,SAAS,CAAE,MAAKxG,KAAL,CAAWwG,SAJ1B,CAKI,eAAe,CAAE,MAAKF,mBAL1B,CAMI,QAAQ,CAAE,MAAKnG,KAAL,CAAWF,KAAX,CAAiB4B,QAN/B,CAOI,SAAS,CAAE,iBAPf,CAQI,UAAU,CAAC,aARf,CASI,IAAI,CAAE,MAAK1B,KAAL,CAAWmB,IATrB,CAUI,cAAc,CAAE,MAAKtB,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAVlF,CAWI,gBAAgB,CAAE,MAAKvF,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDyG,UAXtE,EADJ,EAgBH,CAEDP,MAAM,CAACE,GAAP,CAAW,kBAAX,cACI,oBAAC,eAAD,EACI,YAAY,CAAE,MAAK3H,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwE,YAA5B,EAA4C,EAD9D,CAEI,UAAU,CAAE7G,OAAO,CAAC,MAAKe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwE,YAA5B,EAA4C,EAA7C,CAAiD,MAAKjG,KAAL,CAAWkG,YAA5D,CAFvB,CAGI,SAAS,CAAE,MAAKlG,KAAL,CAAWkG,YAH1B,CAII,eAAe,CAAE,MAAKF,2BAJ1B,CAKI,QAAQ,CAAE,MAAK7F,KAAL,CAAWF,KAAX,CAAiB4B,QAL/B,CAMI,SAAS,CAAE,cANf,CAOI,UAAU,CAAC,kBAPf,CAQI,cAAc,CAAE,MAAK7B,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cARlF,EADJ,EAeA,MAAOkC,CAAAA,MAAP,CACH,CA9ekB,OAifnBQ,mBAjfmB,CAifG,SAACvC,KAAD,CAAQwC,SAAR,CAAsB,CACxC,GAAIxC,KAAK,GAAK,IAAd,CAAoB,CAChB,GAAIhD,CAAAA,SAAS,CAAG,EAAhB,CAGA,GAAIwF,SAAS,GAAK,UAAlB,CAA8B,CAC1B,GAAIC,CAAAA,OAAO,CAAGpK,wBAAwB,CAAC2H,KAAD,CAAQ,MAAK1F,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MAApC,CAA4C,MAAK1G,KAAL,CAAWF,KAAX,CAAiB4B,QAA7D,CAAtC,CACAgB,SAAS,CAAG,CACR0F,KAAK,CAAE,CADC,CAERxB,gBAAgB,CAAE,OAFV,CAGRJ,QAAQ,CAAE2B,OAAO,CAAC3B,QAHV,CAGmB;AAC3BE,MAAM,CAAEyB,OAAO,CAACzB,MAJR,CAIe;AACvBxE,uBAAuB,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAL7C,CAMR8E,0BAA0B,CAAE,MAAKnH,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EANrG,CAORiF,iBAAiB,CAAE,MAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAPvC,CAQRlE,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CARjB,CASRhB,YAAY,CAAEiF,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAArD,CATd,CAURG,eAAe,CAAE,MAAKlC,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCN,eAA7D,CAA+E9E,iBAAiB,CAAC4E,EAV1G,CAWRwG,UAAU,CAAE,MAAKxI,KAAL,CAAWuC,iBAAX,CAA+B,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA5D,CAAoErL,iBAAiB,CAAC4E,EAX1F,CAYR;AACAH,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAbnB,CAcRJ,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAdrB,CAeR;AACA;AACA;AACA;AACA4F,wBAAwB,CAAE,MAAKlH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAnB9C,CAoBRC,2BAA2B,CAAE,MAAKnH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BApBjD,CAqBRC,6BAA6B,CAAE,MAAKpH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BArBnD,CAsBRC,sBAAsB,CAAE,MAAKrH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAtB5C,CAuBR1F,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAvBtC,CAwBRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAxBzC,CAyBRwF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAzB7C,CA0BRC,wBAAwB,CAAE,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBA1B9C,CA2BRd,YAAY,CAAC,MAAKzG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YA3BjC,CA4BRE,UAAU,CAAC,MAAK3G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UA5B/B,CAAZ,CA8BA,MAAK3G,KAAL,CAAW1D,0BAAX,CAAsCoG,SAAtC,EACH,CACD,GAAIwF,SAAS,GAAK,QAAlB,CAA4B,CAExB,GAAIC,CAAAA,QAAO,CAAGpK,wBAAwB,CAAC,MAAKiC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAA7B,CAAuCd,KAAvC,CAA8C,MAAK1F,KAAL,CAAWF,KAAX,CAAiB4B,QAA/D,CAAtC,CAEAgB,SAAS,CAAG,CACR0F,KAAK,CAAE,CADC,CAERxB,gBAAgB,CAAE,OAFV,CAGRJ,QAAQ,CAAE2B,QAAO,CAAC3B,QAHV,CAGmB;AAC3BE,MAAM,CAAEyB,QAAO,CAACzB,MAJR,CAIe;AACvBxE,uBAAuB,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAL7C,CAMR8E,0BAA0B,CAAE,MAAKnH,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EANrG,CAORiF,iBAAiB,CAAE,MAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAPvC,CAQRlE,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CARjB,CASRhB,YAAY,CAAEiF,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAArD,CATd,CAURG,eAAe,CAAE,MAAKlC,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCN,eAA7D,CAA+E9E,iBAAiB,CAAC4E,EAV1G,CAWRwG,UAAU,CAAE,MAAKxI,KAAL,CAAWuC,iBAAX,CAA+B,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA5D,CAAoErL,iBAAiB,CAAC4E,EAX1F,CAYR;AACAH,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAbnB,CAcRJ,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAdrB,CAeR;AACA;AACA;AACA;AACA4F,wBAAwB,CAAE,MAAKlH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAnB9C,CAoBRC,2BAA2B,CAAE,MAAKnH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BApBjD,CAqBRC,6BAA6B,CAAE,MAAKpH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BArBnD,CAsBRC,sBAAsB,CAAE,MAAKrH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAtB5C,CAuBR1F,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAvBtC,CAwBRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAxBzC,CAyBRwF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAzB7C,CA0BRC,wBAAwB,CAAE,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBA1B9C,CA2BRd,YAAY,CAAC,MAAKzG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YA3BjC,CA4BRE,UAAU,CAAC,MAAK3G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UA5B/B,CAAZ,CA8BA,MAAK3G,KAAL,CAAW1D,0BAAX,CAAsCoG,SAAtC,EACH,CAED;AACA;AAEA,GAAIwF,SAAS,GAAK,iBAAlB,CAAqC,CAEjC,GAAI3B,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAGAgB,SAAS,CAAG,CACR0F,KAAK,CAAE,CADC,CAERxB,gBAAgB,CAAE,OAFV,CAGRhE,eAAe,CAAEiE,QAAQ,CAACnB,KAAK,CAAC4C,KAAP,CAHjB,CAIR9B,QAAQ,CAAED,GAAG,CAACC,QAJN,CAIe;AACvBE,MAAM,CAAEH,GAAG,CAACG,MALJ,CAKW;AACnBjD,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QANnB,CAORoF,iBAAiB,CAAEpB,KAAK,CAACrD,IAPjB,CAQRf,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UARrB,CASR2F,sBAAsB,CAAE,OAThB,CAUR;AACA;AACA;AACA;AACAC,wBAAwB,CAAE,MAAKlH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAd9C,CAeRC,2BAA2B,CAAE,MAAKnH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BAfjD,CAgBRC,6BAA6B,CAAE,MAAKpH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BAhBnD,CAiBRC,sBAAsB,CAAE,MAAKrH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAjB5C,CAkBR1F,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAlBtC,CAmBRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAnBzC,CAoBRwF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBApB7C,CAqBRC,wBAAwB,CAAE,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBArB9C,CAAZ,CAuBA,MAAKvH,KAAL,CAAWzD,qBAAX,CAAiCmG,SAAjC,EACH,CA7BD,IA8BK,IAAIwF,SAAS,GAAK,cAAlB,CAAkC,CAEnC,GAAI3B,CAAAA,IAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAIAgB,SAAS,CAAG,CACR0F,KAAK,CAAE,CADC,CAERxB,gBAAgB,CAAE,OAFV,CAGRhE,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CAHjB,CAIR4D,QAAQ,CAAED,IAAG,CAACC,QAJN,CAIe;AACvBE,MAAM,CAAEH,IAAG,CAACG,MALJ,CAKW;AACnB9E,YAAY,CAAEiF,QAAQ,CAACnB,KAAK,CAAC4C,KAAP,CANd,CAOR5G,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAPnB,CAQRQ,uBAAuB,CAAEwD,KAAK,CAACrD,IARvB,CASRyE,iBAAiB,CAAE,MAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBATvC,CAURG,sBAAsB,CAAE,OAVhB,CAWR;AACA;AACA;AACA;AACAC,wBAAwB,CAAE,MAAKlH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAf9C,CAgBRC,2BAA2B,CAAE,MAAKnH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BAhBjD,CAiBRC,6BAA6B,CAAE,MAAKpH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BAjBnD,CAkBRC,sBAAsB,CAAE,MAAKrH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAlB5C,CAmBR1F,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAnBtC,CAoBRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBApBzC,CAqBRwF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBArB7C,CAsBRC,wBAAwB,CAAE,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAtB9C,CAuBvB;AACAiB,8BAA8B,CAAE,MAAKxI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkH,8BAxBrC,CAyBRC,oBAAoB,CAAE,MAAK5I,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BAAxE,EAAsGzL,iBAAiB,CAAC4E,EAzBtI,CA0BR8G,mBAAmB,CAAE,MAAK3I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAAwD,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBAA7G,EAAoI1L,iBAAiB,CAAC4E,EA1BnK,CAAZ,CA6BA,MAAK7B,KAAL,CAAWvE,wBAAX,CAAoCiH,SAApC,CAA+C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAhE,EACH,CApCI,IAqCA,IAAI4G,SAAS,GAAK,iBAAlB,CAAqC,CACtC,GAAMnG,CAAAA,eAAe,CAAG,MAAKlC,KAA7B,CACA;AACA,MAAKyG,kBAAL,CAAwBZ,KAAxB,EAEH,CALI,IAOA,IAAIwC,SAAS,GAAK,4BAAlB,CAAgD,CACjD,GAAI3B,CAAAA,KAAG,CAAGxI,wBAAwB,CAAC,MAAKiC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAA7B,CAC9B,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MADE,CACM,MAAK1G,KAAL,CAAWF,KAAX,CAAiB4B,QADvB,CAAlC,CAGA,GAAMkH,CAAAA,cAAc,CAAG,CACnBR,KAAK,CAAE,CADY,CAEnBxB,gBAAgB,CAAE,OAFC,CAGnBiC,QAAQ,CAAEtC,KAAG,CAACC,QAHK,CAGI;AACvBsC,MAAM,CAAEvC,KAAG,CAACG,MAJO,CAKnB9D,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CALN,CAMnBhB,YAAY,CAAEiF,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAArD,CANH,CAOnBG,eAAe,CAAE8E,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA5B,CAAuDjF,eAAxD,CAPN,CAQnB0G,oBAAoB,CAAE,MAAKzI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByH,qBAA5B,CAAkD,CAAlD,EAAqDL,0BARxD,CASnBjF,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QATR,CAUnBJ,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAVV,CAWnB;AACA0F,0BAA0B,CAAE,MAAKhH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAZrC,CAanBqB,UAAU,CAAEW,MAAM,CAAC,MAAKhJ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,CAAgDnI,kBAAjD,CAbC,CAcnByE,cAAc,CAAE,MAAKvF,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiE,cAA5B,EAA8C,CAd3C,CAenB;AACA;AACApB,0BAA0B,CAAEuB,KAAK,CAAC4C,KAjBf,CAkBnBY,0BAA0B,CAAExD,KAAK,CAACrD,IAlBf,CAmBnB4E,sBAAsB,CAAE,OAnBL,CAoBnBtF,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA+C,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA3E,CAA8F,IApB7F,CAqBnBG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAkD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA9E,CAAoG,IArBtG,CAsBnByF,wBAAwB,CAAE,MAAK1H,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAnE,EAA2EpF,iBAAiB,CAAC4E,EAtBpG,CAuBnByF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAsD,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAAlF,CAA4G,IAvBlH,CAAvB,CAyBA;AACA,MAAKtH,KAAL,CAAWmJ,mBAAX,CAA+BP,cAA/B,EAEH,CAhCI,IAkCA,IAAIV,SAAS,GAAK,SAAlB,CAA6B,CAE9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAM5F,CAAAA,oBAAoB,CAAG,MAAKzC,KAAlC,CACA,MAAKK,QAAL,CAAc,CAAEoC,oBAAoB,CAAEoD,KAAxB,CAAd,EACH,CArBI,IAsBA,IAAIwC,SAAS,GAAK,WAAlB,CAA+B,CAEhC,GAAI3B,CAAAA,KAAG,CAAGxI,wBAAwB,CAAC,MAAKiC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAA7B,CAC9B,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MADE,CACM,MAAK1G,KAAL,CAAWF,KAAX,CAAiB4B,QADvB,CAAlC,CAGAgB,SAAS,CAAG,CACR0F,KAAK,CAAE,CADC,CAERxB,gBAAgB,CAAE,OAFV,CAGRiC,QAAQ,CAAEtC,KAAG,CAACC,QAHN,CAGe;AACvBsC,MAAM,CAAEvC,KAAG,CAACG,MAJJ,CAIW;AACnB9D,eAAe,CAAEiE,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA/C,CALjB,CAMRhB,YAAY,CAAEiF,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAArD,CANd,CAORG,eAAe,CAAE8E,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA5B,CAAuDjF,eAAxD,CAPjB,CAQR0G,oBAAoB,CAAE5B,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA5B,CAAyDV,0BAA1D,CARtB,CASRW,cAAc,CAAE3D,KAAK,CAAC4C,KATd,CAUR7E,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAVnB,CAWR4H,gBAAgB,CAAE5D,KAAK,CAACrD,IAXhB,CAYRf,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAZrB,CAaRK,gBAAgB,CAAE,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA+C,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA3E,CAA8F,IAbxG,CAcRG,mBAAmB,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAkD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA9E,CAAoG,IAdjH,CAeRyF,wBAAwB,CAAE,MAAK1H,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAnE,EAA2EpF,iBAAiB,CAAC4E,EAf/G,CAgBRyF,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAsD,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAAlF,CAA4G,IAhB7H,CAAZ,CAkBA,MAAKtH,KAAL,CAAWuJ,iBAAX,CAA6B7G,SAA7B,EACH,CAxBI,IAyBA,IAAIwF,SAAS,GAAK,QAAlB,CAA4B,CAC7B,GAAM9F,CAAAA,iBAAiB,CAAG,MAAKvC,KAA/B,CACA,MAAKK,QAAL,CAAc,CAAEkC,iBAAiB,CAAEsD,KAArB,CAAd,EAEH,CAJI,IAKA,IAAIwC,SAAS,GAAK,MAAlB,CAA0B,CAE3B,GAAM9F,CAAAA,kBAAiB,CAAG,MAAKvC,KAA/B,CACA,MAAKK,QAAL,CAAc,CAAEkC,iBAAiB,CAAEsD,KAArB,CAAd,EACH,CAJI,IAIE,CACH,GAAMtC,CAAAA,cAAc,CAAG,MAAKvD,KAA5B,CACA,MAAKK,QAAL,CAAc,CAAEkD,cAAc,CAAEsC,KAAlB,CAAd,EACH,CACJ,CACJ,CAzuBkB,OA2uBnB8D,sBA3uBmB,CA2uBM,SAACC,SAAD,CAAYC,QAAZ,CAAyB,CAC9C,GAAQnB,CAAAA,cAAR,CAA2B,MAAK1I,KAAhC,CAAQ0I,cAAR,CACA,GAAIkB,SAAS,GAAK,IAAlB,CAAwB,CACpBA,SAAS,CAAG,GAAIE,CAAAA,IAAJ,EAAZ,CACH,CACDpB,cAAc,CAACmB,QAAD,CAAd,CAA2BD,SAA3B,CACA,MAAKvJ,QAAL,CAAc,CAAEqI,cAAc,CAAdA,cAAF,CAAd,EAEH,CAnvBkB,OAg0BnBqB,qBAh0BmB,CAg0BK,SAAClE,KAAD,CAAW,CAC/B,GAAImE,CAAAA,OAAO,CAAGnE,KAAK,CAACoE,cAAN,CAAqBC,MAArB,CAA4BF,OAA1C,CACA,GAAIG,CAAAA,UAAU,CAAG,MAAKnK,KAAL,CAAWoK,OAAX,EAAsB,EAAvC,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACAL,OAAO,CAAGA,OAAO,EAAI,KAAX,EAAoB,MAAKhK,KAAL,CAAWoK,OAAX,CAAmBzH,MAAnB,CAA4B,CAAhD,CAAoD,KAApD,CAA4D,MAAK3C,KAAL,CAAWoK,OAAX,CAAmBzH,MAAnB,EAA6B,CAA7B,CAAiC,KAAjC,CAAyC,IAA/G,CACA,GAAIqH,OAAJ,CAAa,CACT;AACA,GAAMjF,CAAAA,IAAI,CAAGc,KAAK,CAACqE,MAAN,CAAa/J,KAAb,CAAmB4E,IAAnB,CAAwBuF,GAAxB,CAA4B,SAAA9H,IAAI,CAAI,CAC7C,GAAI2H,UAAU,CAACI,SAAX,CAAqB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,oBAAF,GAA2BjI,IAAI,CAACiI,oBAApC,EAAtB,IAAoF,CAAC,CAAzF,CAA4F,CACxFN,UAAU,CAACO,IAAX,gCAAqBlI,IAArB,MAA2BmI,QAAQ,CAAE,KAArC,IACAnI,IAAI,CAACmI,QAAL,CAAgBX,OAAhB,CACA,GAAIY,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAevI,IAAf,CAAX,CAAd,CACA;AACA,MAAOoI,CAAAA,OAAO,CAAC,UAAD,CAAd,CACAA,OAAO,CAAC,UAAD,CAAP,CAAsB,EAAtB,CACAA,OAAO,CAAC,YAAD,CAAP,CAAwB,EAAxB,CACAA,OAAO,CAAC,UAAD,CAAP,CAAoB,YAApB,EAAoCpI,IAApC,CACAoI,OAAO,CAAC,YAAD,CAAP,CAAsB,YAAtB,EAAsCpI,IAAtC,CACA6H,gBAAgB,CAACK,IAAjB,CAAsBE,OAAtB,EACA,MAAOpI,CAAAA,IAAP,CACH,CAZD,IAYO,CACH,GAAIwI,CAAAA,OAAO,CAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,UAAU,CAACA,UAAU,CAACI,SAAX,CAAqB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,oBAAF,GAA2BjI,IAAI,CAACiI,oBAApC,EAAtB,CAAD,CAAzB,CAAX,CAAd,CACAO,OAAO,CAACL,QAAR,CAAmBX,OAAnB,CACA,GAAIY,CAAAA,QAAO,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeC,OAAf,CAAX,CAAd,CACAJ,QAAO,CAACD,QAAR,CAAmB,KAAnB,CACAC,QAAO,CAAC,UAAD,CAAP,CAAsB,EAAtB,CACAA,QAAO,CAAC,YAAD,CAAP,CAAwB,EAAxB,CACAA,QAAO,CAAC,UAAD,CAAP,CAAoB,YAApB,EAAoCI,OAApC,CACAJ,QAAO,CAAC,YAAD,CAAP,CAAsB,YAAtB,EAAsCI,OAAtC,CACAX,gBAAgB,CAACK,IAAjB,CAAsBE,QAAtB,EACA,MAAOI,CAAAA,OAAP,CAEH,CAEJ,CA3BY,CAAb,CA8BA,MAAK3K,QAAL,CAAc,CACV+J,OAAO,CAAErF,IADC,CAEVsF,gBAAgB,CAAEA,gBAFR,CAGVF,UAAU,CAAVA,UAHU,CAIVc,YAAY,CAAEjB,OAJJ,CAKVkB,eAAe,CAAE,KALP,CAAd,EAOH,CAvCD,IAwCK,CACD;AACA;AAEA,GAAIC,CAAAA,cAAc,CAAG,MAAKnL,KAAL,CAAWoK,OAAX,EAAsB,EAA3C,CACA,GAAIgB,CAAAA,gBAAgB,CAAG,MAAKpL,KAAL,CAAWoK,OAAX,EAAsB,EAA7C,CAEA,GAAMrF,CAAAA,KAAI,CAAG,MAAK/E,KAAL,CAAWoK,OAAX,CAAmBE,GAAnB,CAAuB,SAAA9H,IAAI,CAAI,CACxC2I,cAAc,CAAGA,cAAc,CAACE,MAAf,CAAsB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,SAAN,GAAoB/I,IAAI,CAAC+I,SAA7B,EAA3B,CAAjB,CACAH,gBAAgB,CAAGA,gBAAgB,CAACC,MAAjB,CAAwB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,SAAN,GAAoB/I,IAAI,CAAC+I,SAA7B,EAA7B,CAAnB,CACA/I,IAAI,CAACmI,QAAL,CAAgBX,OAAhB,CACA,MAAOxH,CAAAA,IAAP,CACH,CALY,CAAb,CAOA;AACA,MAAKnC,QAAL,CAAc,CACV+J,OAAO,CAAErF,KADC,CAEVsF,gBAAgB,CAAEc,cAFR,CAGVK,WAAW,CAAEJ,gBAHH,CAIVH,YAAY,CAAEjB,OAJJ,CAKVkB,eAAe,CAAE,KALP,CAAd,EAOH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAj5BkB,OAm5BnBO,WAn5BmB,CAm5BL,SAAC5F,KAAD,CAAW,CACrB,GAAM/B,CAAAA,UAAU,CAAG,CACfE,SAAS,CAAE,wBADI,CAEfmB,UAAU,CAAE,kBAFG,CAGfZ,SAAS,CAAE,KAHI,CAIfmH,SAAS,CAAE7F,KAAK,CAAC8F,GAJF,CAKfC,QAAQ,CAAE/F,KAAK,CAAC8F,GALD,CAMfE,OAAO,CAAE,0BANM,CAOfjI,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAPZ,CAQfiK,YAAY,CAAEjG,KAAK,CAACrD,IARL,CASfe,cAAc,CAAE,MAAKvD,KAAL,CAAWuD,cATZ,CAWfwI,UAAU,CAAElG,KAAK,CAACkG,UAXH,CAAnB,CAaA,GAAIlG,KAAK,CAACkG,UAAN,GAAqB,MAAK/L,KAAL,CAAWuD,cAAX,CAA0B,2BAA1B,CAAzB,CAAiF,CAC7E,MAAKpD,KAAL,CAAWvD,sBAAX,CAAkCkH,UAAlC,CAA8C,MAAK3D,KAAL,CAAWF,KAAX,CAAiBwB,UAA/D,EACH,CACJ,CAp6BkB,OAu6BnBuK,eAv6BmB,CAu6BD,SAACnG,KAAD,CAAW,CACzB,GAAIwE,CAAAA,gBAAgB,CAAG,MAAKrK,KAAL,CAAWqK,gBAAX,EAA+B,EAAtD,CACA;AACA,GAAID,CAAAA,OAAO,CAAG,MAAKpK,KAAL,CAAWoK,OAAX,EAAsB,EAApC,CACA,GAAM6B,CAAAA,WAAW,CAAG,MAAKjM,KAAL,CAAWoK,OAAX,CAAmBE,GAAnB,CAAuB,SAAA9H,IAAI,CAAI,CAC/C,GAAIA,IAAI,CAACiI,oBAAL,GAA8B5E,KAAK,CAACqG,QAAN,CAAezB,oBAAjD,CAAuE,CACpEjI,IAAI,CAACmI,QAAL,CAAgB,CAAC9E,KAAK,CAACqG,QAAN,CAAevB,QAAhC,CACD;AACE,GAAInI,IAAI,CAACmI,QAAT,CAAmB,CACf,GAAMC,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAevI,IAAf,CAAX,CAAhB,CACA;AACA,MAAOoI,CAAAA,OAAO,CAAC,UAAD,CAAd,CACAA,OAAO,CAAC,UAAD,CAAP,CAAsB,EAAtB,CACAA,OAAO,CAAC,YAAD,CAAP,CAAwB,EAAxB,CACAA,OAAO,CAAC,UAAD,CAAP,CAAoB,YAApB,EAAoCpI,IAApC,CACAoI,OAAO,CAAC,YAAD,CAAP,CAAsB,YAAtB,EAAsCpI,IAAtC,CACA6H,gBAAgB,CAACK,IAAjB,CAAsBE,OAAtB,EACH,CATD,IAUK,CACD;AACAP,gBAAgB,CAAGA,gBAAgB,CAACgB,MAAjB,CAAwB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACb,oBAAN,GAA+BjI,IAAI,CAACiI,oBAAxC,EAA7B,CAAnB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CACJ,CACD,MAAOjI,CAAAA,IAAP,CACH,CAtCmB,CAApB,CAuCA;AACA,MAAKnC,QAAL,CAAc,CACV4L,WAAW,CAAXA,WADU,CAEV5B,gBAAgB,CAAhBA,gBAFU,CAGVD,OAAO,CAAPA,OAHU,CAIV+B,WAAW,CAAE9B,gBAJH,CAKVY,YAAY,CAAE,MAAKmB,eAAL,CAAqBH,WAArB,CALJ,CAMVf,eAAe,CAAE,MAAKkB,eAAL,CAAqBH,WAArB,CANP,CAAd,EAQH,CA39BkB,OA69BnBI,eA79BmB,CA69BD,SAACC,QAAD,CAAc,CAC5B,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAIC,CAAAA,KAAK,CAAG,WAAZ,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAInJ,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAhC,CACAoJ,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BrJ,cAA5B,EACAmJ,eAAe,CAAG,CACd,CAAE,UAAW,mBAAb,CAAkC,YAAa,mBAA/C,CAAoE,iBAAkB,YAAtF,CAAoG,cAAe,OAAnH,CADc,CAAlB,CAGA,GAAIG,CAAAA,YAAY,CAAG,MAAK1M,KAAL,CAAWF,KAAX,CAAiB4M,YAApC,CAEA,GAAItJ,cAAc,EAAIA,cAAc,CAACuJ,iBAAf,GAAqC,EAA3D,CAA+D,CAC3DD,YAAY,CAAC,mBAAD,CAAZ,CAAoC,MAAK7M,KAAL,CAAWuD,cAAX,CAA0B,mBAA1B,CAApC,CACAsJ,YAAY,CAAC,UAAD,CAAZ,CAA2B,MAAK7M,KAAL,CAAWuD,cAAX,CAA0B,UAA1B,CAA3B,CACAsJ,YAAY,CAAC,2BAAD,CAAZ,CAA4C,MAAK7M,KAAL,CAAWuD,cAAX,CAA0B,2BAA1B,CAA5C,CAEA,GAAMsB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFgI,QAAQ,CAAE,KADR,CAEFF,YAAY,CAAZA,YAFE,CAGF3H,SAAS,CAAE,IAHT,CAIF8H,aAAa,CAAE,KAJb,CAFS,CAAnB,CASA,MAAK7M,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CAfD,IAeO,CACHzL,KAAK,CAAC6T,IAAN,CAAW,MAAK9M,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CAAX,EACH,CAEJ,CA5/BkB,OA6rDnB0L,gBA7rDmB,CA6rDA,SAAAC,CAAC,CAAI,CACpB,MAAK9M,QAAL,CAAc,CACV+M,IAAI,CAAED,CAAC,CAACC,IADE,CAEVC,IAAI,CAAEF,CAAC,CAACE,IAFE,CAAd,EAIH,CAlsDkB,OAqsDnBC,aArsDmB,CAqsDH,SAACC,aAAD,CAAgBC,QAAhB,CAA0BjJ,SAA1B,CAAwC,CACpD,MAAKkJ,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,CAA6C,MAAKvN,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAA7C,CAAkG,MAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,uBAAN,CAA9B,CAAlG,CACI,MAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CADJ,CACqD,MAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CADrD,CAEI,iBAAM,OAAK9F,mBAAL,CAAyB6R,aAAzB,CAAwCC,QAAxC,CAAkDjJ,SAAlD,CAAN,EAFJ,EAGH,CAzsDkB,OA4sDnBoJ,yBA5sDmB,CA4sDS,SAACC,UAAD,CAAgB,CACxC;AACA,GAAI,MAAKzN,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC+D,SAAxF,EACA,MAAKhB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAACyQ,KADxF,EAEA,MAAK1N,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAACgE,SAF5F,CAGE,CACEhI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,0BAAN,CAA9B,CAAX,EACH,CACD;AANA,IAOK,IAAI,MAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoCC,MAApC,EAA8C,CAAlD,CAAqD,CACtDvJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CAFI,IAEE,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,WAAD,CAAT,CAAyB,IAAzB,CACAA,SAAS,CAAC,YAAD,CAAT,CAA0B+K,UAA1B,CACA/K,SAAS,CAAC,gBAAD,CAAT,CAA8B,MAAK7C,KAAL,CAAWuD,cAAX,EAA6B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,CAA7B,CAA6E,EAA7E,CAAkF,MAAKvD,KAAL,CAAWuD,cAA3H,CACAV,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,WAAD,CAAT,CAAyB,UAAzB,CACA,MAAK1C,KAAL,CAAWnD,sBAAX,CAAkC6F,SAAlC,CAA6C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAA9D,EACH,CACJ,CA5uDkB,OA8uDnBqM,OA9uDmB,CA8uDT,SAACX,CAAD,CAAO,CACb,GAAI,MAAKnN,KAAL,CAAW+N,gBAAX,GAAgCzL,SAAhC,EACA,MAAKtC,KAAL,CAAWgO,wBAAX,GAAwC1L,SAD5C,CACuD,CACnD,GAAIO,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,eAAD,CAAT,CAA6B,MAAK7C,KAAL,CAAW+N,gBAAX,CAA4BtF,KAAzD,CACA5F,SAAS,CAAC,kBAAD,CAAT,CAAgC,MAAK7C,KAAL,CAAWgO,wBAAX,CAAoCvF,KAApE,CACA5F,SAAS,CAAC,oBAAD,CAAT,CAAkC,MAAK7C,KAAL,CAAWgO,wBAAX,CAAoCxL,IAApC,CAAyCyL,kBAA3E,CACApL,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDC,SAAzE,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAKxB,KAAL,CAAWxD,iBAAX,CAA6BkG,SAA7B,CAAwC,MAAK7C,KAAL,CAAWuD,cAAnD,CAAmE,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAApF,EACH,CAhBD,IAgBO,CACHrI,KAAK,CAAC6T,IAAN,CAAW,MAAK9M,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACJ,CAlwDkB,OAqwDnB0M,qBArwDmB,CAqwDK,SAACC,WAAD,CAAiB,CACrC,GAAI,MAAKhO,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC8D,SAAxF,EAAqG,MAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC+D,SAAlM,CAA6M,CACzM/H,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAAX,EACH,CAFD,IAEO,IAAI,MAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoCC,MAApC,EAA8C,CAAlD,CAAqD,CACxDvJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACD;AACA;AACA;AALO,IAMF,CACD,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,WAAD,CAAT,CAAyB,IAAzB,CACAA,SAAS,CAAC,aAAD,CAAT,CAA2BsL,WAA3B,CACAtL,SAAS,CAAC,gBAAD,CAAT,CAA8B,MAAK7C,KAAL,CAAWuD,cAAX,EAA6B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,CAA7B,CAA6E,EAA7E,CAAkF,MAAKvD,KAAL,CAAWuD,cAA3H,CACAV,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,WAAD,CAAT,CAAyB,UAAzB,CACA,MAAK1C,KAAL,CAAWpD,sBAAX,CAAkC8F,SAAlC,CAA6C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAA9D,EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAEJ,CAryDkB,OAuyDnB2M,gBAvyDmB,CAuyDA,SAACC,cAAD,CAAiBF,WAAjB,CAAiC,CAChD,GAAIE,cAAc,CAACpN,kBAAf,EAAqC7D,iBAAiB,CAAC8D,SAAvD,EAAoEmN,cAAc,CAACpN,kBAAf,GAAsC7D,iBAAiB,CAAC+D,SAAhI,CAA2I,CACvI/H,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAFD,IAEO,IAAI,MAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoCC,MAApC,EAA8C,CAAlD,CAAqD,CACxDvJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACD;AACA;AACA;AALO,IAMF,CACD,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIyL,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAM7M,CAAAA,UAAU,CAAG,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAApC,CACA,GAAMyB,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAE+K,cAAc,CAACzM,gBAJlB,CAKd6B,QAAQ,CAAE,qCALI,CAMdC,WAAW,CAAE,IANC,CAOdC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAA7B,CAPJ,CAAlB,CASA,GAAI6E,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAEA,GAAIgC,CAAAA,QAAQ,CAAG,MAAK1D,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAA9H,IAAI,CAAI,CAC3D,MAAO,CAAE8L,UAAU,CAAE9L,IAAd,CAAP,CACH,CAFc,CAAf,CAGA,GAAI,MAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA5B,CAAsCzD,MAAtC,CAA+C,CAAnD,CAAsD,CAClD,GAAI4L,CAAAA,WAAW,CAAG,MAAKpO,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC8L,MAApC,CAA2C,MAAKrO,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAAvE,CAAlB,CACAvD,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA5B,CAAsCkE,GAAtC,CAA0C,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACmB,SAAZ,EAAjD,EAAwEkD,IAAxE,CAA6E,GAA7E,CAAzB,CACA5L,SAAS,CAAC,sBAAD,CAAT,CAAoC0L,WAAW,CAACjE,GAAZ,CAAgB,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACK,oBAAZ,EAAvB,EAAyDgE,IAAzD,CAA8D,GAA9D,CAApC,CACA5L,SAAS,CAAC,uBAAD,CAAT,CAAqC,IAArC,CACAA,SAAS,CAAC,WAAD,CAAT,CAAyB,IAAzB,CACH,CAND,IAMO,CACHA,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACmB,SAAZ,EAA/C,EAAsEkD,IAAtE,CAA2E,GAA3E,CAAzB,CACA5L,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACK,oBAAZ,EAA/C,EAAiFgE,IAAjF,CAAsF,GAAtF,CAApC,CACA5L,SAAS,CAAC,WAAD,CAAT,CAAyB,KAAzB,CACAA,SAAS,CAAC,uBAAD,CAAT,CAAqC,KAArC,CACH,CACDA,SAAS,CAAC,kBAAD,CAAT,CAAgC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAoE,MAAM,QAAIA,CAAAA,MAAM,CAACrK,gBAAX,EAA9C,EAA2EoK,IAA3E,CAAgF,GAAhF,CAAhC,CACA5L,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACmB,SAAZ,EAA/C,EAAsEkD,IAAtE,CAA2E,GAA3E,CAA/B,CACA5L,SAAS,CAAC,8BAAD,CAAT,CAA4C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACuE,sBAAZ,EAA/C,EAAmFF,IAAnF,CAAwF,GAAxF,CAA5C,CACA5L,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACK,oBAAZ,EAA/C,EAAiFgE,IAAjF,CAAsF,GAAtF,CAA1C,CACA5L,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAAzM,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAAqH,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAArK,CAAuL9E,iBAAiB,CAAC4E,EAAxO,CACAa,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACApE,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,EAAmD,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eAAnG,CAAqH,MAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eAArK,CAAuL3F,iBAAiB,CAAC4E,EAAxO,CACA;AACA;AACAa,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACA;AACAa,SAAS,CAAC,kBAAD,CAAT,CAAgCwL,cAAc,CAACzM,gBAA/C,CACAiB,SAAS,CAAC,aAAD,CAAT,CAA2BgB,QAA3B,CACAhB,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,gBAAD,CAAT,CAA8B,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAA5F,CACA7C,SAAS,CAAC,YAAD,CAAT,CAA0B,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCoM,UAAxF,CACA/L,SAAS,CAAC,oBAAD,CAAT,CAAkC,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCqM,kBAAhG,CACAhM,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK7C,KAAL,CAAWyC,oBAAX,CAChC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BADL,CACkCzL,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAC/B,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADtB,CAC4C,MAAK3I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADjG,CACuH1L,iBAAiB,CAAC4E,EAD5K,CAEAa,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EACnC,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BADlB,CAC+C,MAAK1I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BADpG,CACiIzL,iBAAiB,CAAC4E,EAD1L,CAEAa,SAAS,CAAC,YAAD,CAAT,CAA0BzF,iBAAiB,CAAC8D,SAAlB,EAA+B9D,iBAAiB,CAACyQ,KAA3E,CACAhL,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCsM,iBAA/F,CACAjM,SAAS,CAAC,cAAD,CAAT,CAA4B,CACxBkM,gBAAgB,CAAEhR,eAAe,CAAC,MAAKiC,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,GAAiDjB,SAAjD,CAC9B,MAAKtC,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,CAD8B,CACkB,MAAKpD,KAAL,CAAWF,KAAX,CAAiB+O,WADpC,CACiD,KADjD,CADT,CAGxBC,SAAS,CAAE,MAAKjP,KAAL,CAAWuD,cAAX,EAA6B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B0L,SAH1C,CAA5B,CAKApM,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDC,SAAzE,CACAkB,SAAS,CAAC,aAAD,CAAT,CAA2BsL,WAA3B,CACAtL,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EAA0DlH,iBAAiB,CAAC4E,EAAtH,CACAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAA8C,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,CAA2C,CAA3C,CAAjF,CACArM,SAAS,CAAC,QAAD,CAAT,CAAsB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA8B,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiN,MAA1D,CAAmE,EAAzF,CACA7L,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA8B,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2E,SAA1D,CAAsE,EAA/F,CACA,GAAMtC,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAATA,SADe,CAEfL,SAAS,CAAEA,SAFI,CAGfkB,QAAQ,CAAE,eAHK,CAIfC,SAAS,CAAE,eAJI,CAKfQ,WAAW,CAAE,mBALE,CAMfD,SAAS,CAAE,UANI,CAAnB,CASA,GAAI5G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8EwJ,WAA9E,CAAb,CAAyG,CACrG,GAAMtJ,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CACzBnB,UAAU,CAAVA,UADyB,CAEzBrC,UAAU,kBACHA,UADG,CAFe,CAD3B,CAYFyD,SAAS,CAAE,IAZT,CAYeC,UAAU,CAAE,mBAZ3B,CAaFZ,SAAS,CAAET,UAAU,CAACS,SAbpB,CAFS,CAAnB,CAkBA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CApBD,IAoBO,CACH,MAAK1E,KAAL,CAAWxE,mBAAX,CAA+BkH,SAA/B,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAA3D,CAAuE,MAAKgM,cAA5E,EACH,CACJ,CACJ,CAv5DkB,OAy5DnBnR,mBAz5DmB,CAy5DG,SAAC+R,cAAD,CAAoB,CACtC,GAAI,MAAKrO,KAAL,CAAWuD,cAAX,CAA0B4L,iBAA1B,GAAgD,MAApD,CAA4D,CACxD,GAAIC,UAAU,CAAC,MAAKpP,KAAL,CAAWuD,cAAX,CAA0B8L,aAA3B,CAAV,EAAuDD,UAAU,CAAC,MAAKjP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6N,oBAA5B,CAAiDH,iBAAlD,CAArE,CAA2I,CACvI,GAAI,MAAKhP,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA9B,GAAoDxK,SAApD,EAAiE,MAAKnC,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA9B,GAAoD,EAAzH,CAA6H,CACzH,GAAIjL,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAI0N,CAAAA,qBAAqB,CAAG,EAA5B,CACA,GAAIC,CAAAA,0BAA0B,CAAG,EAAjC,CACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACA,GAAMnF,CAAAA,GAAG,CAAG,EAAZ,CACA,GAAIoF,CAAAA,uBAAuB,CAAG,EAA9B,CACA,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CACA,GAAIC,CAAAA,wBAAwB,CAAG,EAA/B,CACA,GAAIC,CAAAA,sBAAsB,CAAG,EAA7B,CACA,GAAIC,CAAAA,4BAA4B,CAAG,EAAnC,CACA,GAAIC,CAAAA,6BAA6B,CAAG,EAApC,CAEAL,uBAAuB,CAAC,qBAAD,CAAvB,CAAiD,MAAKvP,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,EAAiC,MAAK1M,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA/D,CAC7C,MAAK3M,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA9B,CAAgDkD,mBADH,CACyB5S,iBAAiB,CAAC4E,EAD5F,CAEA0N,uBAAuB,CAAC,gBAAD,CAAvB,CAA4CtS,iBAAiB,CAAC4E,EAA9D,CACA0N,uBAAuB,CAAC,MAAD,CAAvB,CAAkC,CAAlC,CACAE,wBAAwB,CAAClF,IAAzB,CAA8BgF,uBAA9B,EAEAH,qBAAqB,CAAC,mBAAD,CAArB,CAA6C,MAAKpP,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,EAAiC,MAAK1M,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA/D,CACzC,MAAK3M,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,CAA8BC,iBAA9B,CAAgDrE,KADP,CACerL,iBAAiB,CAAC4E,EAD9E,CAEAuN,qBAAqB,CAAC,2BAAD,CAArB,CAAqD,MAAKpP,KAAL,CAAWF,KAAX,CAAiBgQ,yBAAjB,EAA8C7S,iBAAiB,CAAC4E,EAArH,CACAuN,qBAAqB,CAAC,wBAAD,CAArB,CAAkD,MAAKpP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByO,sBAA9E,CACAX,qBAAqB,CAAC,4BAAD,CAArB,CAAsD,MAAKpP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAAlF,CACA;AACA;AACA;AAEAiL,qBAAqB,CAAC,cAAD,CAArB,CAAwC,MAAKpP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EACpC,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBADQ,CACW,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADxD,CACuE3E,iBAAiB,CAAC4E,EADjI,CAEAuN,qBAAqB,CAAC,iBAAD,CAArB,CAA2C,MAAKpP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CACvC,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADT,CAC2B9E,iBAAiB,CAAC4E,EADxF,CAEAuN,qBAAqB,CAAC,iBAAD,CAArB,CAA2C,MAAKpP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CACvC,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADT,CAC2B3F,iBAAiB,CAAC4E,EADxF,CAGAuN,qBAAqB,CAAC,iBAAD,CAArB,CAA2CnS,iBAAiB,CAAC4E,EAA7D,CACAuN,qBAAqB,CAAC,cAAD,CAArB,CAAwCnS,iBAAiB,CAAC4E,EAA1D,CACAuN,qBAAqB,CAAC,oBAAD,CAArB,CAA8CnS,iBAAiB,CAAC4E,EAAhE,CACAuN,qBAAqB,CAAC,iBAAD,CAArB,CAA2CnS,iBAAiB,CAAC4E,EAA7D,CACAuN,qBAAqB,CAAC,kBAAD,CAArB,CAA4C,MAAKvP,KAAL,CAAWgO,wBAAX,CAAsC,MAAKhO,KAAL,CAAWgO,wBAAX,CAAoCvF,KAA1E,CAAkFrL,iBAAiB,CAAC4E,EAAhJ,CACAuN,qBAAqB,CAAC,eAAD,CAArB,CAAyC,MAAKvP,KAAL,CAAW+N,gBAAX,CAA8B,MAAK/N,KAAL,CAAW+N,gBAAX,CAA4BtF,KAA1D,CAAkErL,iBAAiB,CAAC4E,EAA7H,CAEAuN,qBAAqB,CAAC,UAAD,CAArB,CAAoC,CAChCY,aAAa,CAAE,MAAKnQ,KAAL,CAAW+N,gBAAX,CAA4BtF,KADX,CAEhC2H,gBAAgB,CAAE,MAAKpQ,KAAL,CAAWgO,wBAAX,CAAoCvF,KAFtB,CAGhC4H,gBAAgB,CAAE,MAAKrQ,KAAL,CAAWgO,wBAAX,CAAoCvB,KAHtB,CAIhC6D,YAAY,CAAE,MAAKtQ,KAAL,CAAWuQ,yBAAX,CAAqC/N,IAArC,CAA0C8N,YAJxB,CAKhCE,sBAAsB,CAAE,MAAKxQ,KAAL,CAAWuQ,yBAAX,CAAqC/N,IAArC,CAA0CgO,sBALlC,CAMhCC,SAAS,CAAE,MAAKzQ,KAAL,CAAW+N,gBAAX,CAA4BvL,IAA5B,CAAiCkO,aANZ,CAOhCC,aAAa,CAAE,MAAK3Q,KAAL,CAAW4Q,oBAAX,CAAgCpO,IAAhC,CAAqCqO,iBAPpB,CAQhCC,iBAAiB,CAAE,MAAK9Q,KAAL,CAAW4Q,oBAAX,CAAgCnI,KARnB,CAShC4G,aAAa,CAAE,MAAKrP,KAAL,CAAWuD,cAAX,CAA0B8L,aATT,CAUhC0B,SAAS,CAAE,MAAK5Q,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6N,oBAA5B,CAAiDyB,SAV5B,CAWhC5B,iBAAiB,CAAE,MAAKhP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6N,oBAA5B,CAAiDH,iBAXpC,CAYhC;AACA6B,QAAQ,CAAE,MAAKhR,KAAL,CAAWuD,cAAX,CAA0ByN,QAbJ,CAchChO,YAAY,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,cAAlD,CAdkB,CAApC,CAgBA1B,qBAAqB,CAAC,YAAD,CAArB,CAAsC,CAClCY,aAAa,CAAE,MAAKnQ,KAAL,CAAW+N,gBAAX,CAA4BtF,KADT,CAElC2H,gBAAgB,CAAE,MAAKpQ,KAAL,CAAWgO,wBAAX,CAAoCvF,KAFpB,CAGlC4H,gBAAgB,CAAE,MAAKrQ,KAAL,CAAWgO,wBAAX,CAAoCvB,KAHpB,CAIlC6D,YAAY,CAAE,MAAKtQ,KAAL,CAAWuQ,yBAAX,CAAqC/N,IAArC,CAA0C8N,YAJtB,CAKlCE,sBAAsB,CAAE,MAAKxQ,KAAL,CAAWuQ,yBAAX,CAAqC/N,IAArC,CAA0CgO,sBALhC,CAMlCC,SAAS,CAAE,MAAKzQ,KAAL,CAAW+N,gBAAX,CAA4BvL,IAA5B,CAAiCkO,aANV,CAOlCC,aAAa,CAAE,MAAK3Q,KAAL,CAAW4Q,oBAAX,CAAgCpO,IAAhC,CAAqCqO,iBAPlB,CAQlCC,iBAAiB,CAAE,MAAK9Q,KAAL,CAAW4Q,oBAAX,CAAgCnI,KARjB,CASlC4G,aAAa,CAAE,MAAKrP,KAAL,CAAWuD,cAAX,CAA0B8L,aATP,CAUlC0B,SAAS,CAAE,MAAK5Q,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6N,oBAA5B,CAAiDyB,SAV1B,CAWlC5B,iBAAiB,CAAE,MAAKhP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6N,oBAA5B,CAAiDH,iBAXlC,CAYlC;AACA6B,QAAQ,CAAE,MAAKhR,KAAL,CAAWuD,cAAX,CAA0ByN,QAbF,CAclChO,YAAY,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,cAAlD,CAdoB,CAAtC,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAzB,0BAA0B,CAAC,wBAAD,CAA1B,CAAuD,MAAKxP,KAAL,CAAWuQ,yBAAX,CAAqC/N,IAArC,CAA0CgO,sBAAjG,CACAhB,0BAA0B,CAAC,UAAD,CAA1B,gCACO,MAAKrP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,UAAlD,CADP,MAEIC,QAAQ,CAAE,MAAKlR,KAAL,CAAWuD,cAAX,CAA0B8L,aAFxC,CAGIF,iBAAiB,CAAE,MAAKnP,KAAL,CAAWuD,cAAX,CAA0B4L,iBAHjD,CAIInM,YAAY,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,cAAlD,CAJlB,GAMA;AACAzB,0BAA0B,CAAC,cAAD,CAA1B,CAA6C,MAAKrP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,cAAlD,CAA7C,CACAzB,0BAA0B,CAAC,YAAD,CAA1B,gCACO,MAAKrP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,YAAlD,CADP,MAEIC,QAAQ,CAAE,MAAKlR,KAAL,CAAWuD,cAAX,CAA0B8L,aAFxC,CAGIF,iBAAiB,CAAE,MAAKnP,KAAL,CAAWuD,cAAX,CAA0B4L,iBAHjD,CAIInM,YAAY,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD,cAAlD,CAJlB,GAQA;AAEAtB,qBAAqB,CAAC,oBAAD,CAArB,CAA8C,MAAKxP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0P,mBAA5B,CAAkD,MAAKhR,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0P,mBAA5B,CAAgDC,kBAAlG,CAAuHhU,iBAAiB,CAAC4E,EAAvL,CACA;AACA2N,qBAAqB,CAAC,WAAD,CAArB,CAAqC,MAAKxP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDC,SAArF,CACAgO,qBAAqB,CAAC,cAAD,CAArB,CAAwC,MAAKxP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDsB,YAAxF,CACA2M,qBAAqB,CAAC,aAAD,CAArB,CAAuC,MAAKxP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0P,mBAA5B,CAAkD,MAAKhR,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0P,mBAA5B,CAAgDE,WAAlG,CAAgHjU,iBAAiB,CAAC4E,EAAzK,CACA;AACA2N,qBAAqB,CAAC,gBAAD,CAArB,CAA0C,CAA1C,CAA4C;AAC5C;AACAA,qBAAqB,CAAC,iBAAD,CAArB,CAA2C,CAA3C,CAA8C;AAC9CA,qBAAqB,CAAC,MAAD,CAArB,CAAgC,CAAhC,CAAmC;AAEnCE,sBAAsB,CAACnF,IAAvB,CAA4BiF,qBAA5B,EAGArF,GAAG,CAAC,eAAD,CAAH,CAAuBlN,iBAAiB,CAACkU,WAAzC,CACAhH,GAAG,CAAC,kBAAD,CAAH,CAA0B+D,cAAc,CAACzM,gBAAzC,CACAC,QAAQ,CAAG,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAA5B,CACAyI,GAAG,CAAC,gBAAD,CAAH,CAAwB,MAAKtK,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAAtF,CACA4E,GAAG,CAAC,yBAAD,CAAH,CAAiC,MAAKtK,KAAL,CAAWyC,oBAAX,CAAkC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BAAvE,CAAoGzL,iBAAiB,CAAC4E,EAAvJ,CACAsI,GAAG,CAAC,YAAD,CAAH,CAAoB,MAAKtK,KAAL,CAAWuC,iBAAX,CAA+B,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA5D,CAAoErL,iBAAiB,CAACyQ,KAA1G,CACAvD,GAAG,CAAC,mBAAD,CAAH,CAA2B,MAAKtK,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCsM,iBAAzF,CACAxE,GAAG,CAAC,kBAAD,CAAH,CAA0B,MAAKtK,KAAL,CAAWgO,wBAAX,CAAsC,MAAKhO,KAAL,CAAWgO,wBAAX,CAAoCvF,KAA1E,CAAkFrL,iBAAiB,CAAC4E,EAA9H,CACAsI,GAAG,CAAC,eAAD,CAAH,CAAuB,MAAKtK,KAAL,CAAW+N,gBAAX,CAA8B,MAAK/N,KAAL,CAAW+N,gBAAX,CAA4BtF,KAA1D,CAAkErL,iBAAiB,CAAC4E,EAA3G,CACAsI,GAAG,CAAC,mBAAD,CAAH,CAA2B,MAAKtK,KAAL,CAAW4Q,oBAAX,CAAkC,MAAK5Q,KAAL,CAAW4Q,oBAAX,CAAgCnI,KAAlE,CAA0ErL,iBAAiB,CAAC4E,EAAvH,CAEAyN,cAAc,CAAG,MAAKtP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA7C,CAEA4I,GAAG,CAAC,cAAD,CAAH,CAAsBiF,qBAAtB,CACAjF,GAAG,CAAC,gBAAD,CAAH,CAAwBmF,cAAxB,CACAnF,GAAG,CAAC,oBAAD,CAAH,CAA4BsF,wBAA5B,CACAtF,GAAG,CAAC,eAAD,CAAH,CAAuBuF,sBAAvB,CACAvF,GAAG,CAAC,UAAD,CAAH,CAAkBzI,QAAlB,CACAyI,GAAG,CAAC,yBAAD,CAAH,CAAiCwF,4BAAjC,CACAxF,GAAG,CAAC,+BAAD,CAAH,CAAuCkF,0BAAvC,CAEA,GAAM1L,CAAAA,UAAU,CAAG,CACfjB,SAAS,CAAEyH,GADI,CAEfvG,QAAQ,CAAE,eAFK,CAGfC,SAAS,CAAE,eAHI,CAIfQ,WAAW,CAAE,kBAJE,CAKfD,SAAS,CAAE,WALI,CAAnB,CAQA,MAAKpE,KAAL,CAAW7D,mBAAX,CAA+BwH,UAAU,CAACjB,SAA1C,CAAqD,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAtE,EAEH,CA5JD,IA4JO,CACHrI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,uBAAN,CAA9B,CAAX,EACH,CACJ,CAhKD,IAgKO,CACHpI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sCAAN,CAA9B,CAAX,EACH,CACJ,CApKD,IAoKO,CACHpI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,yBAAN,CAA9B,CAAX,EACH,CACJ,CAjkEkB,OAmkEnB+P,WAnkEmB,CAmkEL,SAAClD,cAAD,CAAiBmD,QAAjB,CAA8B,CACxC,GAAInD,cAAc,CAACpN,kBAAf,EAAqC7D,iBAAiB,CAACyQ,KAAvD,EAAgEQ,cAAc,CAACpN,kBAAf,EAAqC7D,iBAAiB,CAAC+D,SAA3H,CAAsI,CAClI/H,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gCAAN,CAA9B,CAAX,EACH,CAFD,IAEO,CACH,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAMpB,CAAAA,UAAU,CAAG,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAApC,CACA,GAAMyB,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAE+K,cAAc,CAACzM,gBAJlB,CAKd6B,QAAQ,CAAE,2BALI,CAMdC,WAAW,CAAE,IANC,CAOd;AACAC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAA7B,CARJ,CAAlB,CAUA,GAAI6E,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAGA,GAAIgC,CAAAA,QAAQ,CAAG,MAAK1D,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAA9H,IAAI,CAAI,CAC3D,MAAO,CAAE8L,UAAU,CAAE9L,IAAd,CAAP,CACH,CAFc,CAAf,CAIAK,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EACxB,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBADJ,CACuB,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADpE,CACmF3E,iBAAiB,CAAC4E,EADjI,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACA;AACA;AACApE,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACA;AACAa,SAAS,CAAC,kBAAD,CAAT,CAAgCwL,cAAc,CAACzM,gBAA/C,CACAiB,SAAS,CAAC,SAAD,CAAT,CAAuBgB,QAAvB,CACAhB,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,YAAD,CAAT,CAA0BwL,cAAc,CAAClG,UAAzC,CACAtF,SAAS,CAAC,gBAAD,CAAT,CAA8B,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAA5F,CACA7C,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK7C,KAAL,CAAWyC,oBAAX,CAC/B,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCsG,mBADN,CAC4B1L,iBAAiB,CAAC4E,EADjF,CAEAa,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK7C,KAAL,CAAWyC,oBAAX,CAChC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BADL,CACkCzL,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,YAAD,CAAT,CAA0BzF,iBAAiB,CAACgE,SAAlB,EAA+BhE,iBAAiB,CAACyQ,KAA3E,CACA;AACA;AACA;AACA;AACA;AACAhL,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,EAA+B,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqN,iBAA5F,CACAjM,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EACtClH,iBAAiB,CAAC4E,EADtB,CAEAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAC5B,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,CAA2C,CAA3C,CADP,CAEA,GAAMpL,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAATA,SADe,CAEfL,SAAS,CAAEA,SAFI,CAGfkB,QAAQ,CAAE,eAHK,CAIfC,SAAS,CAAE,OAJI,CAKfQ,WAAW,CAAE,mBALE,CAMfD,SAAS,CAAE,QANI,CAAnB,CASA,GAAI5G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8E6M,QAA9E,CAAb,CAAsG,CAClG,GAAM3M,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CAEFC,UAAU,CAAE,CACRnB,UAAU,CAAVA,UADQ,CAERrC,UAAU,gCACHA,UADG,MAEN2H,mBAAmB,CAAE,MAAKjJ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EACd,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,CAA2C,CAA3C,CAHD,CAINzH,uBAAuB,CAAE,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAClB,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,CAA2C,CAA3C,CALD,EAFF,CAFV,CAaFhK,SAAS,CAAE,IAbT,CAaeC,UAAU,CAAE,mBAb3B,CAcFZ,SAAS,CAAET,UAAU,CAACS,SAdpB,CAFS,CAAnB,CAmBA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CArBD,IAqBO,CACH,MAAK1E,KAAL,CAAWrD,iBAAX,CAA6B+F,SAA7B,CAAwC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAzD,EACH,CAEJ,CACJ,CA/pEkB,OAiqEnBgQ,oBAjqEmB,CAiqEI,SAACpD,cAAD,CAAiBT,UAAjB,CAAgC,CACnD,GAAIS,cAAc,CAACpN,kBAAf,EAAqC7D,iBAAiB,CAAC+D,SAAvD,EAAoEkN,cAAc,CAACpN,kBAAf,EAAqC7D,iBAAiB,CAACyQ,KAA/H,CAAsI,CAClIzU,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,0BAAN,CAA9B,CAAX,EACH,CAFD,IAEO,CACH,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAMpB,CAAAA,UAAU,CAAG,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAApC,CACA,GAAMyB,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAE+K,cAAc,CAACzM,gBAJlB,CAKd6B,QAAQ,CAAE,qCALI,CAMdC,WAAW,CAAE,IANC,CAOd;AACAC,gBAAgB,CAAE,CAAEC,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QAA7B,CARJ,CAAlB,CAUA,GAAI6E,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAGA,GAAIgC,CAAAA,QAAQ,CAAG,MAAK1D,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAA9H,IAAI,CAAI,CAC3D,MAAO,CAAE8L,UAAU,CAAE9L,IAAd,CAAP,CACH,CAFc,CAAf,CAIAK,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAAzM,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACA;AACA;AACApE,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACA;AACAa,SAAS,CAAC,kBAAD,CAAT,CAAgCwL,cAAc,CAACzM,gBAA/C,CACAiB,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAA5B,CAAoC4H,GAApC,CAAwC,SAAAoE,MAAM,QAAIA,CAAAA,MAAM,CAACjE,oBAAX,EAA9C,EAA+EgE,IAA/E,CAAoF,GAApF,CAApC,CACA5L,SAAS,CAAC,SAAD,CAAT,CAAuBgB,QAAvB,CACAhB,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,YAAD,CAAT,CAA0BwL,cAAc,CAAClG,UAAzC,CACAtF,SAAS,CAAC,gBAAD,CAAT,CAA8B,MAAK7C,KAAL,CAAWkC,eAAX,EAA8B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cAA5F,CACA7C,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAC/B,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADtB,CAC4C,MAAK3I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADjG,CACuH1L,iBAAiB,CAAC4E,EAD5K,CAEAa,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK7C,KAAL,CAAWyC,oBAAX,CAChC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BADL,CACkCzL,iBAAiB,CAAC4E,EADxF,CAEF;AACAa,SAAS,CAAC,YAAD,CAAT,CAA0BzF,iBAAiB,CAAC+D,SAA5C,CAEA0B,SAAS,CAAC,cAAD,CAAT,CAA4B,CACtBkM,gBAAgB,CAAEhR,eAAe,CAAC,MAAKiC,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,GAAiDjB,SAAjD,CAC9B,MAAKtC,KAAL,CAAWuD,cAAX,CAA0B,kBAA1B,CAD8B,CACkB,MAAKpD,KAAL,CAAWF,KAAX,CAAiB+O,WADpC,CACiD,KADjD,CADX,CAGtBC,SAAS,CAAE,MAAKjP,KAAL,CAAWuD,cAAX,EAA6B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B0L,SAH5C,CAA5B,CAKEpM,SAAS,CAAC,YAAD,CAAT,CAA0B+K,UAA1B,CACA/K,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,EAA+B,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqN,iBAA5F,CACAjM,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EACtClH,iBAAiB,CAAC4E,EADtB,CAEAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAC5B,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,CAA2C,CAA3C,CADP,CAEA,GAAMpL,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAATA,SADe,CAEfL,SAAS,CAAEA,SAFI,CAGfkB,QAAQ,CAAE,eAHK,CAIfC,SAAS,CAAE,eAJI,CAKfQ,WAAW,CAAE,mBALE,CAMfD,SAAS,CAAE,UANI,CAAnB,CASA,GAAI5G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8EiJ,UAA9E,CAAb,CAAwG,CACpG,GAAM/I,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CACzBnB,UAAU,CAAVA,UADyB,CAEzBrC,UAAU,kBACHA,UADG,CAFe,CAD3B,CAYFyD,SAAS,CAAE,IAZT,CAYeC,UAAU,CAAE,mBAZ3B,CAaFZ,SAAS,CAAET,UAAU,CAACS,SAbpB,CAFS,CAAnB,CAkBA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CApBD,IAoBO,CACH,MAAK1E,KAAL,CAAWtE,mBAAX,CAA+BgH,SAA/B,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAA3D,EACH,CAEJ,CACJ,CA/vEkB,OAyyEnBiQ,UAzyEmB,CAyyEN,UAAM,CACf,GAAM7M,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CAAE4M,gBAAgB,CAAE,KAApB,CAA2BC,OAAO,CAAE,KAApC,CAFS,CAAnB,CAIA,MAAKzR,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CA/yEkB,OAuvFnBgN,UAvvFmB,CAuvFN,UAAM,CACf,GAAI7M,CAAAA,SAAS,CAAG,MAAK7E,KAAL,CAAWF,KAAX,CAAiB+E,SAAjC,CACA,GAAIE,CAAAA,SAAS,CAAG,MAAK/E,KAAL,CAAWF,KAAX,CAAiBiF,SAAjC,CACA,GAAI3B,CAAAA,cAAc,CAAG,MAAKpD,KAAL,CAAWF,KAAX,CAAiBsD,cAAtC,CACA,GAAIyJ,CAAAA,aAAa,CAAG,MAAK7M,KAAL,CAAWF,KAAX,CAAiB+M,aAArC,CAEA,GAAI,MAAK7M,KAAL,CAAWF,KAAX,CAAiB+E,SAArB,CAAgC,CAC5B,GAAI,MAAK7E,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA/B,EAA2C,MAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA9E,CAAwF,CACpF;AACAS,SAAS,CAAG,KAAZ,CACAE,SAAS,CAAG,KAAZ,CACH,CAJD,IAKK,CACDF,SAAS,CAAG,KAAZ,CACH,CACDzB,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACH,CAXD,IAWO,IAAI,MAAKpD,KAAL,CAAWF,KAAX,CAAiB+M,aAArB,CAAoC,CACvChI,SAAS,CAAG,KAAZ,CACAgI,aAAa,CAAG,KAAhB,CACH,CAHM,IAIF,CACD9H,SAAS,CAAG,KAAZ,CACA3B,cAAc,CAAG,EAAjB,CACH,CAED,GAAMsB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CAAEG,SAAS,CAATA,SAAF,CAAaF,SAAS,CAATA,SAAb,CAAwBzB,cAAc,CAAdA,cAAxB,CAAwCyJ,aAAa,CAAbA,aAAxC,CAAuD8E,UAAU,CAAE,IAAnE,CAFS,CAAnB,CAIA,MAAK3R,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EAEH,CAvxFkB,OAyxFnBkN,aAzxFmB,CAyxFH,SAACC,SAAD,CAAYC,SAAZ,CAA0B,CACtC,GAAM1O,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CACA,gBACqD,MAAKvD,KAD1D,CAAMkS,oBAAN,aAAMA,oBAAN,CAA4BC,oBAA5B,aAA4BA,oBAA5B,CAAkDC,kBAAlD,aAAkDA,kBAAlD,CACIC,kBADJ,aACIA,kBADJ,CACwBC,UADxB,aACwBA,UADxB,CACoCC,YADpC,aACoCA,YADpC,CAEA,GAAI1P,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAImP,SAAS,EAAI,IAAjB,CAAuB,CACnBE,oBAAoB,CAAG5P,SAAvB,CACA6P,oBAAoB,CAAG7P,SAAvB,CACAgQ,UAAU,CAAGhQ,SAAb,CACAiQ,YAAY,CAAGjQ,SAAf,CACA+P,kBAAkB,CAAG/P,SAArB,CACAiB,cAAc,CAAC,oBAAD,CAAd,CAAuCjB,SAAvC,CACAiB,cAAc,CAAC,iBAAD,CAAd,CAAoCjB,SAApC,CACAiB,cAAc,CAAC,eAAD,CAAd,CAAkCjB,SAAlC,CAEA,MAAKjC,QAAL,CAAc,CACV6R,oBAAoB,CAApBA,oBADU,CACYC,oBAAoB,CAApBA,oBADZ,CACkCE,kBAAkB,CAAlBA,kBADlC,CAEV9O,cAAc,CAAdA,cAFU,CAEM+O,UAAU,CAAVA,UAFN,CAEkBC,YAAY,CAAZA,YAFlB,CAAd,EAIH,CAdD,IAcO,CACHhP,cAAc,CAAC0O,SAAD,CAAd,CAA4BD,SAAS,CAACxP,IAAtC,CACA,GAAIyP,SAAS,GAAK,cAAlB,CAAkC,CAC9B1O,cAAc,CAAC,cAAD,CAAd,CAAiCyO,SAAS,CAACvJ,KAA3C,CACAlF,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA0B,cAAc,CAAC,WAAD,CAAd,CAA8B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B,WAA1B,CAA9B,CACAA,cAAc,CAAC,WAAD,CAAd,CAA8B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0B,WAA1B,EAAuC,WAAvC,CAA9B,CACAA,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAChC,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADhB,CACkC3F,iBAAiB,CAAC4E,EADxF,CAEA;AACAuB,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBuS,eAArD,CACAjP,cAAc,CAAC,cAAD,CAAd,CAAiC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAA9M,CACAuB,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDwQ,eAAnG,CAAqH,MAAKtS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAArK,CAAuL9E,iBAAiB,CAAC4E,EAA7O,CACA;AACA,MAAK7B,KAAL,CAAWrF,yBAAX,CAAqCyI,cAArC,CAAqD,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAtE,EACH,CAbD,IAaO,IAAIwQ,SAAS,GAAK,cAAlB,CAAkC,CACrCpP,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAAzM,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAAqH,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAArK,CAAuL9E,iBAAiB,CAAC4E,EAAxO,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBuS,eAAhD,CACA3P,SAAS,CAAC,SAAD,CAAT,CAAuBU,cAAc,CAACmP,YAAtC,CACA7P,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,YAAD,CAAT,CAA0B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA/E,CAAqG,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgD2M,UAArJ,CAAkK,KAA5L,CACA/L,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEA,MAAK7B,KAAL,CAAWvF,6BAAX,CAAyCiI,SAAzC,CAAoD,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAArE,EACA;AAEH,CAZM,IAYA,IAAIwQ,SAAS,GAAK,WAAlB,CAA+B,CAClC,GAAI,MAAK9R,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAAnC,CAA6C,CACzChB,cAAc,CAAC,mBAAD,CAAd,CAAsC,MAAKvD,KAAL,CAAW2S,mBAAX,CAA+BlK,KAArE,CACH,CACDlF,cAAc,CAAC,WAAD,CAAd,CAA8ByO,SAAS,CAACvJ,KAAxC,CACAlF,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA0B,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAChC,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADhB,CACkC3F,iBAAiB,CAAC4E,EADxF,CAEA;AACAuB,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBuS,eAArD,CACAjP,cAAc,CAAC,oBAAD,CAAd,CAAuCyO,SAAS,CAACxP,IAAV,CAAeoQ,kBAAtD,CACArP,cAAc,CAAC,oBAAD,CAAd,CAAuCjB,SAAvC,CACAiB,cAAc,CAAC,cAAD,CAAd,CAAiC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAA9M,CACAuB,cAAc,CAAC,iBAAD,CAAd,CAAoC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDwQ,eAAnG,CAAqH,MAAKtS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAArK,CAAuL9E,iBAAiB,CAAC4E,EAA7O,CACA,MAAK7B,KAAL,CAAWtF,yBAAX,CAAqC0I,cAArC,CAAqD,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAtE,EACH,CAfM,IAeA,IAAIwQ,SAAS,GAAK,oBAAlB,CAAwC,CAC3C1O,cAAc,CAAC,oBAAD,CAAd,CAAuCyO,SAAS,CAACvJ,KAAjD,CACAlF,cAAc,CAAC,iBAAD,CAAd,CAAoCyO,SAAS,CAACxP,IAAV,CAAeqQ,eAAnD,CACAtP,cAAc,CAAC,WAAD,CAAd,CAA8B,MAAKvD,KAAL,CAAW2S,mBAAX,CAA+BlK,KAA7D,CACAlF,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA;AACA0B,cAAc,CAAC,iBAAD,CAAd,CAAoCjB,SAApC,CACA,MAAKnC,KAAL,CAAWpF,4BAAX,CAAwCwI,cAAxC,CAAwD,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAzE,EACA;AACH,CATM,IASA,IAAIwQ,SAAS,GAAK,kBAAlB,CAAsC,CACzC1O,cAAc,CAAC,kBAAD,CAAd,CAAqCyO,SAAS,CAACvJ,KAA/C,CACAlF,cAAc,CAAC,iBAAD,CAAd,CAAoCyO,SAAS,CAACxP,IAAV,CAAesQ,eAAnD,CACAvP,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA0B,cAAc,CAAC,cAAD,CAAd,CAAiC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDsB,YAAjF,CACA,MAAK3C,QAAL,CAAc,CAAE2N,wBAAwB,CAAEgE,SAA5B,CAAd,EACA,MAAK7R,KAAL,CAAW/D,kCAAX,CAA8CmH,cAA9C,CAA8D,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAA/E,CAA2F,MAAKzB,KAAL,CAAWgO,wBAAtG,EACH,CAPM,IAOA,IAAIiE,SAAS,GAAK,eAAlB,CAAmC,CACtC1O,cAAc,CAAC,eAAD,CAAd,CAAkCyO,SAAS,CAACvJ,KAA5C,CACAlF,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA0B,cAAc,CAAC,aAAD,CAAd,CAAgCyO,SAAS,CAACxP,IAAV,CAAeuQ,WAA/C,CACAxP,cAAc,CAAC,cAAD,CAAd,CAAiC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDsB,YAAjF,CACA,MAAK3C,QAAL,CAAc,CAAE0N,gBAAgB,CAAEiE,SAApB,CAAd,EACA,MAAK7R,KAAL,CAAW9D,mCAAX,CAA+CkH,cAA/C,CAA+D,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAhF,CAA4F,MAAKzB,KAAL,CAAWgO,wBAAvG,EAEH,CARM,IAQA,IAAIiE,SAAS,GAAK,cAAlB,CAAkC,CACrC1O,cAAc,CAAC,eAAD,CAAd,CAAkC,MAAKvD,KAAL,CAAW+N,gBAAX,CAA4BtF,KAA9D,CACAlF,cAAc,CAAC,iBAAD,CAAd,CAAoCyO,SAAS,CAACxP,IAAV,CAAegO,sBAAnD,CACAjN,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA0B,cAAc,CAAC,aAAD,CAAd,CAAgC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,CAA6CgF,WAA7E,CACA,MAAK1S,QAAL,CAAc,CAAEkQ,yBAAyB,CAAEyB,SAA7B,CAAd,EACA;AACA;AACA;AACAzO,cAAc,CAAC,cAAD,CAAd,CAAiC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDsB,YAAjF,CACA;AACA,MAAK7C,KAAL,CAAW5D,6BAAX,CAAyCgH,cAAzC,CAAyD,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAA1E,CAAsF,MAAKzB,KAAL,CAAWgO,wBAAjG,EACH,CAZM,IAYA,IAAIiE,SAAS,GAAK,iBAAlB,CAAqC,CACxC1O,cAAc,CAAC,qBAAD,CAAd,CAAwCyO,SAAS,CAACvJ,KAAlD,CACAlF,cAAc,CAAC,iBAAD,CAAd,CAAoCyO,SAAS,CAACvF,KAA9C,CACAlJ,cAAc,CAAC,UAAD,CAAd,CAA6B,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA9C,CACA;AACA0B,cAAc,CAAC,oBAAD,CAAd,CAAuCyO,SAAS,CAACxP,IAAjD,CACAe,cAAc,CAAC,oBAAD,CAAd,CAAuCyO,SAAS,CAACxP,IAAV,CAAewQ,kBAAtD,CACAzP,cAAc,CAAC,iBAAD,CAAd,CAAoCyO,SAAS,CAACxP,IAAV,CAAeyQ,eAAnD,CACA,MAAK9S,KAAL,CAAWlD,eAAX,CAA2BsG,cAA3B,CAA2C,MAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAA5D,EACH,CATM,IASA,IAAIwQ,SAAS,GAAK,cAAlB,CAAkC,CACrC,MAAK5R,QAAL,CAAc,CAAE6S,mBAAmB,CAAElB,SAAvB,CAAd,EACH,CAFM,IAEA,CACH,MAAK3R,QAAL,CAAc,CAAE8R,oBAAoB,CAAEH,SAAxB,CAAd,EACH,CACD;AACA;AACA;AACA;AACA;AACH,CACJ,CA94FkB,OAg5FnBmB,sBAh5FmB,CAg5FM,SAAC1K,KAAD,CAAQ2K,IAAR,CAAiB,CACtC,GAAM7P,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CACAA,cAAc,CAAC6P,IAAD,CAAd,CAAuB3K,KAAvB,CACA,MAAKpI,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAd,EACH,CAp5FkB,OAs5FnB8P,eAt5FmB,CAs5FD,SAACxN,KAAD,CAAW,CACzB,GAAMtC,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CAEA,GAAIsC,KAAK,CAACqE,MAAN,CAAaoJ,IAAb,GAAsB,UAA1B,CAAsC,CAClC,GAAIzN,KAAK,CAACqE,MAAN,CAAakJ,IAAb,GAAsB,oBAA1B,CACI7P,cAAc,CAACsC,KAAK,CAACqE,MAAN,CAAakJ,IAAd,CAAd,CAAoCvN,KAAK,CAACqE,MAAN,CAAaF,OAAb,GAAyB,IAAzB,CAAgC5M,iBAAiB,CAACmW,MAAlD,CAA2DnW,iBAAiB,CAACoW,QAAjH,CADJ,IAGIjQ,CAAAA,cAAc,CAACsC,KAAK,CAACqE,MAAN,CAAakJ,IAAd,CAAd,CAAoCvN,KAAK,CAACqE,MAAN,CAAaF,OAAb,GAAyB,IAAzB,CAAgC5M,iBAAiB,CAACqW,GAAlD,CAAwDrW,iBAAiB,CAACsW,EAA9G,CAEP,CAND,IAOK,CACDnQ,cAAc,CAACsC,KAAK,CAACqE,MAAN,CAAakJ,IAAd,CAAd,CAAoCvN,KAAK,CAACqE,MAAN,CAAazB,KAAjD,CAEH,CACD,MAAKpI,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAd,EACH,CAr6FkB,OAu6FnBoQ,kBAv6FmB,CAu6FE,SAAClL,KAAD,CAAQkD,GAAR,CAAaiI,IAAb,CAAmBnH,KAAnB,CAA0BoH,IAA1B,CAAmC,CACpD,GAAMtQ,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CACA,GAAIkF,KAAK,CAAC9F,MAAN,CAAe,CAAnB,CAAsB,CAClBgJ,GAAG,CAACmI,OAAJ,CAAY,SAAAC,QAAQ,CAAI,CACpBxQ,cAAc,CAACwQ,QAAD,CAAd,CAA2BtL,KAAK,CAAC,CAAD,CAAL,CAASsL,QAAT,CAA3B,CACH,CAFD,EAGA,GAAIH,IAAJ,CAAU,CACNC,IAAI,CAACvJ,GAAL,CAAS,SAAC0J,MAAD,CAASC,KAAT,CAAmB,CACxB,MAAO1Q,CAAAA,cAAc,CAACyQ,MAAD,CAAd,CAAyB,CAAE,QAASvL,KAAK,CAAC,CAAD,CAAL,CAASgE,KAAK,CAACwH,KAAD,CAAd,CAAX,CAAmC,QAASxL,KAAK,CAAC,CAAD,CAAL,CAASuL,MAAT,CAA5C,CAAhC,CACH,CAFD,EAGH,CACJ,CATD,IASO,CACHrI,GAAG,CAACmI,OAAJ,CAAY,SAAAC,QAAQ,CAAI,CACpBxQ,cAAc,CAACwQ,QAAD,CAAd,CAA2B,EAA3B,CACH,CAFD,EAGAF,IAAI,CAACvJ,GAAL,CAAS,SAAC0J,MAAD,CAASC,KAAT,CAAmB,CACxB,MAAO1Q,CAAAA,cAAc,CAACyQ,MAAD,CAAd,CAAyB,EAAhC,CACH,CAFD,EAGH,CACD,MAAK7T,KAAL,CAAW+T,+BAAX,CAA2C3Q,cAA3C,CAA2D,MAAKpD,KAAL,CAAWF,KAAX,CAAiB4B,QAA5E,EACH,CA37FkB,OA67FnBsS,sBA77FmB,CA67FM,SAAC1L,KAAD,CAAQkD,GAAR,CAAgB,CACrC,GAAMpI,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CACA,GAAIkF,KAAK,CAAC9F,MAAN,CAAe,CAAnB,CAAsB,CAClBgJ,GAAG,CAACmI,OAAJ,CAAY,SAAAC,QAAQ,CAAI,CACpBxQ,cAAc,CAACwQ,QAAD,CAAd,CAA2BtL,KAAK,CAAC,CAAD,CAAL,CAASsL,QAAT,CAA3B,CACH,CAFD,EAGH,CACD,MAAK1T,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAd,EACH,CAr8FkB,OAu8FnB6Q,mBAv8FmB,CAu8FG,UAAM,CACxB,GAAM7Q,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAApD,CACAA,cAAc,CAAC,cAAD,CAAd,CAAiCjB,SAAjC,CACAiB,cAAc,CAAC,gBAAD,CAAd,CAAmCjB,SAAnC,CACAiB,cAAc,CAAC,aAAD,CAAd,CAAgC,EAAhC,CACAA,cAAc,CAAC,YAAD,CAAd,CAA+BnG,iBAAiB,CAACsW,EAAjD,CACAnQ,cAAc,CAAC,eAAD,CAAd,CAAkC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBoU,0BAAnD,CACA9Q,cAAc,CAAC,aAAD,CAAd,CAAgC,MAAKpD,KAAL,CAAWF,KAAX,CAAiBoU,0BAAjD,CACA,MAAKhU,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAd,EACH,CAh9FkB,OAk9FnB+Q,eAl9FmB,CAk9FD,UAAM,CACpB,GAAI,MAAKnU,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDuR,eAAhD,GAAoE7V,iBAAiB,CAAC4E,EAA1F,CAA8F,CAC1F,GAAI,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC8D,SAA5F,CAAuG,CACnG,GAAI,MAAKf,KAAL,CAAWF,KAAX,CAAiBsU,YAAjB,GAAkCjS,SAAlC,EAA+C,CAAC,MAAKnC,KAAL,CAAWF,KAAX,CAAiBsU,YAArE,CAAmF,CAC/E,GAAI,MAAKpU,KAAL,CAAWF,KAAX,CAAiBuU,WAAjB,GAAiC,IAAjC,EAAyC,MAAKrU,KAAL,CAAWF,KAAX,CAAiBuU,WAAjB,EAAgClS,SAA7E,CAAwF,CACpF,MAAKnC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgT,OAA5B,CAAsC,EAAtC,CACA,GAAIC,CAAAA,mBAAmB,CAAG,MAAKvU,KAAL,CAAWF,KAAX,CAAiByU,mBAA3C,CACA,GAAI5Q,CAAAA,UAAU,CAAG,CACbjC,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QADd,CAEb2S,WAAW,CAAE,MAAKrU,KAAL,CAAWF,KAAX,CAAiBuU,WAFjB,CAGbG,OAAO,CAAE,MAAKxU,KAAL,CAAWF,KAAX,CAAiB0U,OAHb,CAIb/S,gBAAgB,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDyG,UAJrD,CAKbxG,SAAS,CAAE,MAAKxB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BE,SAL1B,CAAjB,CAOA,GAAIiT,CAAAA,IAAI,CAAG,EAAX,CAEA,GAAIC,CAAAA,MAAM,CAAG1W,iBAAiB,CAAC,WAAD,CAAjB,CAA+B2W,WAA5C,CAEA,GAAMC,CAAAA,QAAQ,CAAGjR,UAAU,CAAClC,gBAA5B,CACA;AACA,GAAIoT,CAAAA,gBAAgB,CAAG7W,iBAAiB,CAAC4W,QAAD,CAAjB,CAA4BD,WAAnD,CACA,GAAMG,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpR,UAAU,CAAC0Q,WAAX,CAAuBW,QADlB,CAEfC,QAAQ,CAAEtR,UAAU,CAAC0Q,WAAX,CAAuBa,UAFlB,CAGfC,YAAY,CAAExR,UAAU,CAAC0Q,WAAX,CAAuBe,YAHtB,CAIfC,WAAW,CAAE,CACTC,aAAa,CAAE3R,UAAU,CAAC0Q,WAAX,CAAuBkB,iBAD7B,CAETC,aAAa,CAAE7R,UAAU,CAAC0Q,WAAX,CAAuBkB,iBAF7B,CAJE,CAQfE,YAAY,CAAE,CACVC,QAAQ,CAAE/R,UAAU,CAAC6Q,OAAX,CAAmBmB,YADnB,CARC,CAAnB,CAYA,GAAIC,CAAAA,aAAa,CAAG5X,iBAAiB,CAAC8W,UAAD,CAAjB,CAA8BH,WAAlD,CACA,GAAMkB,CAAAA,OAAO,CAAGtB,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,SAAvC,CAEArB,IAAI,CAAGoB,OAAO,CAAG,YAAV,CAAyB,SAAzB,CAAqCjB,QAArC,CAAgD,YAAhD,CAA+DgB,aAA/D,CAA+E,eAA/E,CAAiGf,gBAAjG,CAAoH,IAA3H,CACA;AACA,GAAMnQ,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFwP,YAAY,CAAE,IADZ,CAEF9S,UAAU,gCACH,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADd,MAENgT,OAAO,CAAEG,IAFH,CAGNoB,OAAO,CAAEA,OAHH,EAFR,CAFS,CAAnB,CAWA,MAAK7V,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CA9CD,IA8CO,CACHzL,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAAX,EACH,CACJ,CAlDD,IAkDO,CACH,GAAMqD,CAAAA,WAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFwP,YAAY,CAAE,KADZ,CAEF9S,UAAU,gCACH,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UADd,MAENgT,OAAO,CAAE,EAFH,EAFR,CAFS,CAAnB,CAUA,MAAKtU,KAAL,CAAWxF,WAAX,CAAuBkK,WAAvB,EACH,CACJ,CAhED,IAgEO,CACHzL,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,0BAAN,CAA9B,CAAX,EACH,CACJ,CApED,IAoEO,CACHpI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,+BAAN,CAA9B,CAAX,EACH,CACJ,CA1hGkB,OA4hGnB0U,gBA5hGmB,CA4hGA,SAACrM,QAAD,CAAWD,SAAX,CAAyB,CACxC,GAAIrG,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIqG,SAAS,GAAK,IAAlB,CAAwB,CACpBA,SAAS,CAAG,GAAIE,CAAAA,IAAJ,EAAZ,CACH,CACDvG,cAAc,CAACsG,QAAD,CAAd,CAA2BD,SAA3B,CACA,MAAKvJ,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAd,EACH,CAniGkB,OAqiGnB4S,WAriGmB,CAqiGL,SAACC,aAAD,CAAgBnE,SAAhB,CAA8B,CACxC,GAAI1O,CAAAA,cAAc,CAAG,MAAKvD,KAAL,CAAWuD,cAAX,EAA6B,EAAlD,CACAA,cAAc,CAAC0O,SAAD,CAAd,CAA4BmE,aAA5B,CACA,MAAK/V,QAAL,CAAc,CAAEkD,cAAc,CAAdA,cAAF,CAAkB8S,UAAU,CAAE,KAA9B,CAAd,EACH,CAziGkB,OA2iGnBC,UA3iGmB,CA2iGN,SAACC,eAAD,CAAqB,CAC9B,GAAIA,eAAe,GAAKjU,SAAxB,CAAmC,CAC/BlJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,2BAAN,CAA9B,CAAX,EACH,CAFD,IAEO,IAAI+U,eAAe,CAAC5T,MAAhB,CAAyB,CAA7B,CAAgC,CACnC,GAAI6T,CAAAA,WAAW,CAAG,EAAlB,CACAD,eAAe,CAACjM,GAAhB,CAAoB,SAAA9H,IAAI,QACpBgU,CAAAA,WAAW,CAAC9L,IAAZ,CAAiB,CACba,SAAS,CAAE/I,IAAI,CAAC+I,SADH,CAEboD,sBAAsB,CAAEnM,IAAI,CAACmM,sBAFhB,CAGblE,oBAAoB,CAAEjI,IAAI,CAACiI,oBAHd,CAIb7I,gBAAgB,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CACd,MAAKvB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBADlC,CACqDxE,iBAAiB,CAAC4E,EAL5E,CAMbkC,KAAK,CAAE1B,IAAI,CAAC8L,UAAL,CAAgBmI,UAAhB,CAA2BvS,KANrB,CAObC,WAAW,CAAE3B,IAAI,CAAC8L,UAAL,CAAgBmI,UAAhB,CAA2BtS,WAP3B,CAQbC,SAAS,CAAE5B,IAAI,CAAC8L,UAAL,CAAgBmI,UAAhB,CAA2BrS,SARzB,CASbkK,UAAU,CAAE,CACRmI,UAAU,CAAEjU,IAAI,CAAC8L,UAAL,CAAgBmI,UADpB,CATC,CAYb5S,QAAQ,CAAE,CACN4S,UAAU,CAAEjU,IAAI,CAACqB,QAAL,CAAc4S,UADpB,CAZG,CAAjB,CADoB,EAAxB,EAoBA,GAAI7U,CAAAA,gBAAgB,CAAG,MAAKzB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,EACnB,MAAKvB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBADpD,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMkC,CAAAA,UAAU,CAAG,CACfjB,SAAS,CAAE,CACP6T,WAAW,CAAE9U,gBADN,CAEP4U,WAAW,CAAXA,WAFO,CAGP3U,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAHpB,CAIPJ,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAJtB,CAKPM,YAAY,CAAE,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CACV,MAAKlC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAD1C,CACyD3E,iBAAiB,CAAC4E,EANlF,CAOPE,eAAe,CAAE,MAAKlC,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCN,eAA7D,CACX9E,iBAAiB,CAAC4E,EARjB,CASPsC,0BAA0B,CAAE,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EAA0DlH,iBAAiB,CAAC4E,EATjG,CADI,CAAnB,CAaA,MAAK7B,KAAL,CAAW7E,kBAAX,CAA8BwI,UAAU,CAACjB,SAAzC,EACH,CAlDM,IAkDA,CACHzJ,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,2BAAN,CAA9B,CAAX,EACH,CAEJ,CApmGkB,OAsmGnBmV,WAtmGmB,CAsmGL,SAACrK,QAAD,CAAWsK,OAAX,CAAuB,CAEjC,GAAI,MAAKzW,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,cAAnC,CAAmD,CAC/C,MAAK+R,UAAL,CAAgB,MAAKtW,KAAL,CAAWqK,gBAA3B,EACH,CAFD,IAEO,IAAI,MAAKlK,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAAnC,CAA+C,CAClD,MAAK6J,gBAAL,CAAsB,MAAKjO,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAAlD,CAAuE,MAAKvB,KAAL,CAAWF,KAAX,CAAiBkO,WAAxF,EACH,CAFM,IAEA,IAAI,MAAKhO,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAAnC,CAA+C,CAClD,MAAKkN,oBAAL,CAA0B,MAAKtR,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAAtD,CAA2E,MAAKvB,KAAL,CAAWF,KAAX,CAAiB2N,UAA5F,EACH,CAFM,IAEA,IAAI,MAAKzN,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,iBAAnC,CAAsD,CACzD,MAAKjI,mBAAL,CAAyB,MAAK6D,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAArD,EACH,CAFM,IAEA,CACH,GAAImB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAI6D,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAEA,GAAI,MAAK1B,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAAnC,CAA6C,CACzC1B,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACH,CAEDhE,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAvC,CACAA,SAAS,CAAC,kBAAD,CAAT,CAAgC,OAAhC,CACAA,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAAzM,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK7C,KAAL,CAAWuD,cAAX,EAA6B,MAAKvD,KAAL,CAAWuD,cAAX,CAA0BsT,iBAA1B,EAA+CvU,SAA5E,CAAwF,MAAKtC,KAAL,CAAWuD,cAAX,CAA0BsT,iBAAlH,CAAsI,MAAK7W,KAAL,CAAW2S,mBAAX,CAA+BlK,KAAtM,CACA5F,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAK7C,KAAL,CAAW2S,mBAAX,CAAiC,MAAK3S,KAAL,CAAW2S,mBAAX,CAA+BlK,KAAhE,CAAwErL,iBAAiB,CAAC4E,EAAnH,CACAa,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK7C,KAAL,CAAW8W,eAAX,CAA6B,MAAK9W,KAAL,CAAW8W,eAAX,CAA2BtU,IAA3B,CAAgCQ,YAA7D,CAA4E5F,iBAAiB,CAAC4E,EAA1H,CACA;AACA;AACA;AACAa,SAAS,CAAC,oBAAD,CAAT,CAAkC,MAAK7C,KAAL,CAAWkS,oBAAX,CAAkC,MAAKlS,KAAL,CAAWkS,oBAAX,CAAgCzJ,KAAlE,CAA0ErL,iBAAiB,CAAC4E,EAA9H,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK7C,KAAL,CAAWqS,kBAAX,CAAgC,MAAKrS,KAAL,CAAWqS,kBAAX,CAA8B5J,KAA9D,CAAsErL,iBAAiB,CAAC4E,EAAvH,CACAa,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK7C,KAAL,CAAW+W,eAAX,CAA6B,MAAK/W,KAAL,CAAW+W,eAAX,CAA2BtO,KAAxD,CAAgErL,iBAAiB,CAAC4E,EAA9G,CACAa,SAAS,CAAC,oBAAD,CAAT,CAAkCzF,iBAAiB,CAACyQ,KAApD,CACAhL,SAAS,CAAC,YAAD,CAAT,CAA0B,GAA1B,CACA;AACA;AACA;AACA;AACA;AACA;AACAA,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACApE,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACD;AACDa,SAAS,CAAC,YAAD,CAAT,CAA0BzF,iBAAiB,CAACyQ,KAA5C,CAGChL,SAAS,CAAC,eAAD,CAAT,CAA6B,MAAK7C,KAAL,CAAWmS,oBAAX,CAAkC,MAAKnS,KAAL,CAAWmS,oBAAX,CAAgC1F,KAAlE,CAAwE,IAArG,CACC;AACA;AACA;AACA;AACA5J,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAChC,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BADrB,CACkD,MAAK1I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BADvG,CACoIzL,iBAAiB,CAAC4E,EAD1L,CAEAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAC/B,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADtB,CAC4C,MAAK3I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADjG,CACuH1L,iBAAiB,CAAC4E,EAD5K,CAEAa,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,CAAyD,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAArF,CAAkHlH,iBAAiB,CAAC4E,EAA9K,CACAa,SAAS,CAAC,oBAAD,CAAT,CAAkC,MAAK7C,KAAL,CAAWkT,mBAAX,CAAiC,MAAKlT,KAAL,CAAWkT,mBAAX,CAA+BzK,KAAhE,CAAwErL,iBAAiB,CAAC4E,EAA5H,CACA,GAAIkB,CAAAA,SAAS,CAAGZ,SAAhB,CACAY,SAAS,CAAG,CACRC,aAAa,CAAE,aADP,CAERC,cAAc,CAAE,qBAFR,CAGRC,eAAe,CAAE,kBAHT,CAIR2T,YAAY,CAAE,CAAC,UAAD,CAAa,QAAb,CAJN,CAI8BtT,WAAW,CAAE,IAJ3C,CAKRD,QAAQ,CAAE,4CALF,CAAZ,CAOA,GAAMK,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,eAFI,CAGfQ,WAAW,CAAE,mBAHE,CAIf3B,SAAS,CAAEA,SAJI,CAKfK,SAAS,CAATA,SALe,CAMf+T,SAAS,CAAE,MAAKA,SAND,CAOf1S,SAAS,CAAE,MAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAPb,CAQf+H,QAAQ,CAARA,QARe,CASfsK,OAAO,CAAPA,OATe,CAAnB,CAWA,GAAI,MAAKzW,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAAnC,CAA6C,CACzC,MAAK0S,SAAL,CAAeC,OAAf,CAAuBzO,KAAvB,CAA+B,EAA/B,CACA,MAAKtI,KAAL,CAAWhF,uBAAX,CAAmC2I,UAAU,CAAC,WAAD,CAA7C,CAA4D,MAAK3D,KAAL,CAAWF,KAAX,CAAiBwB,UAA7E,CAAyFqC,UAAU,CAAC,WAAD,CAAnG,EACH,CAHD,IAGO,CACHjB,SAAS,CAAC,kBAAD,CAAT,CAAgC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAAhF,CACAiB,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA/D,CACA,GAAI/D,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8E,MAAKxE,KAAL,CAAWF,KAAX,CAAiBkX,MAA/F,CAAb,CAAqH,CACjH,GAAMtS,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CACzBnB,UAAU,CAAVA,UADyB,CAEzBrC,UAAU,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAFJ,CAD3B,CAKFyD,SAAS,CAAE,IALT,CAMFC,UAAU,CAAE,mBANV,CAOFZ,SAAS,CAAET,UAAU,CAACS,SAPpB,CAFS,CAAnB,CAYA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CAdD,IAcO,CACH,MAAK1E,KAAL,CAAW1E,yBAAX,CAAqCqI,UAAU,CAAC,WAAD,CAA/C,CAA8D,MAAK3D,KAAL,CAAWF,KAAX,CAAiBwB,UAA/E,CAA2FqC,UAAU,CAAC,WAAD,CAArG,EACH,CACJ,CACJ,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhuGkB,OAkuGnBpI,mBAluGmB,CAkuGG,SAAC6R,aAAD,CAAgBC,QAAhB,CAA0BjJ,SAA1B,CAAwC,CAC1D,GAAIgJ,aAAa,CAACtM,kBAAd,GAAqC7D,iBAAiB,CAAC+D,SAAvD,EACAoM,aAAa,CAACtM,kBAAd,GAAqC7D,iBAAiB,CAAC8D,SADvD,EAEAqM,aAAa,CAACtM,kBAAd,GAAqC7D,iBAAiB,CAACgE,SAF3D,CAEsE,CAClEhI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oCAAN,CAA9B,CAAX,EACH,CAJD,IAKK,CACD,GAAIqB,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAMpB,CAAAA,UAAU,CAAG,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAApC,CACA,GAAMyB,CAAAA,SAAS,CAAG,CACdC,aAAa,CAAE,aADD,CAEdC,cAAc,CAAE,qBAFF,CAGdC,eAAe,CAAE,kBAHH,CAIdC,eAAe,CAAEiK,aAAa,CAAC3L,gBAJjB,CAKd6B,QAAQ,CAAE,4CALI,CAMdC,WAAW,CAAE,IANC,CAOd;AACAC,gBAAgB,CAAE,CACd9B,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QADb,CAEdyC,0BAA0B,CAAE,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,CAAyD,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAArF,CAAkHlH,iBAAiB,CAAC4E,EAFlJ,CAGde,eAAe,CAAE,MAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAHjD,CARJ,CAAlB,CAcA,GAAI2D,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAEAgB,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,aAAD,CAAT,CAA2B9E,eAAe,CAAC,GAAI+L,CAAAA,IAAJ,EAAD,CAAa,IAAb,CAA1C,CACAjH,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACApE,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CAA+F,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5I,CAA2J3E,iBAAiB,CAAC4E,EAAzM,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAEAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC3F,iBAAiB,CAAC4E,EADxF,CAEA;AACA;AACAa,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACA;AACAa,SAAS,CAAC,kBAAD,CAAT,CAAgC0K,aAAa,CAAC3L,gBAA9C,CACA;AACAiB,SAAS,CAAC,YAAD,CAAT,CAA0B,MAAK7C,KAAL,CAAWuC,iBAAX,EAAgC,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA7B,GAAqCrL,iBAAiB,CAACga,GAAvF,CAA6F,MAAKpX,KAAL,CAAWkP,cAAX,CAA0B7D,MAA1B,CAAiC,SAAAC,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAX,GAAgC7D,iBAAiB,CAACga,GAApD,EAAtC,EAA+F9M,GAA/F,CAAmG,SAAAgB,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAb,EAAxG,EAAyIwN,IAAzI,CAA8I,GAA9I,CAA7F,CAAkP,MAAKzO,KAAL,CAAWuC,iBAAX,CAA6BkG,KAAzS,CAEA;AACA;AACA5F,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAChC,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BADrB,CAEhC,MAAK1I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDmB,0BAFrB,CAEkDzL,iBAAiB,CAAC4E,EAFxG,CAGAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAC/B,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADtB,CAC4C,MAAK3I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBADjG,CACuH1L,iBAAiB,CAAC4E,EAD5K,CAEAa,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EAA0DlH,iBAAiB,CAAC4E,EAAtH,CACAa,SAAS,CAAC,eAAD,CAAT,CAA6B0K,aAA7B,CACA1K,SAAS,CAAC,SAAD,CAAT,CAAuB,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiB,OAAnD,CACA,GAAMoB,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAATA,SADe,CAEfL,SAAS,CAAEA,SAFI,CAGf0B,SAAS,CAATA,SAHe,CAIfR,QAAQ,CAAE,eAJK,CAKfC,SAAS,CAAE,eALI,CAMfQ,WAAW,CAAE,mBANE,CAAnB,CASA,GAAI7G,SAAS,CAAC,MAAKwC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,MAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA8E6I,QAA9E,CAAb,CAAsG,CAClG,GAAM3I,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEnB,UAAU,CAAVA,UAAF,CAAcrC,UAAU,CAAVA,UAAd,CAD3B,CAEFyD,SAAS,CAAE,IAFT,CAEeC,UAAU,CAAE,mBAF3B,CAEgDZ,SAAS,CAATA,SAFhD,CAFS,CAAnB,CAOA,MAAKpE,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CATD,IAUK,CACD,MAAK1E,KAAL,CAAWzF,UAAX,CAAsBoJ,UAAtB,CAAkCrC,UAAlC,CAA8C,WAA9C,EACH,CACJ,CACJ,CA/yGkB,OAizGnB4V,aAjzGmB,CAizGH,SAACC,SAAD,CAAe,CAC3B,GAAI,MAAKnX,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAACyQ,KAA5F,CAAmG,CAC/F,MAAK1N,KAAL,CAAW3E,6BAAX,CAAyC8b,SAAzC,CACI,MAAKnX,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBADhC,EAEH,CAHD,IAGO,CACHtI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAAX,EACH,CACJ,CAxzGkB,OA2zGnB+V,aA3zGmB,CA2zGH,UAAM,CAClB,GAAMzT,CAAAA,UAAU,CAAG,CACfjB,SAAS,CAAE,CACP,0CACO,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QADxB,MAEI2V,OAAO,CAAE,MAAKxX,KAAL,CAAWuD,cAAX,CAA0B,eAA1B,CAFb,EADO,CAKPkU,QAAQ,CAAE,MAAKzX,KAAL,CAAWuD,cAAX,CAA0B,eAA1B,CALH,CADI,CAQf0B,UAAU,CAAE,MAAK9E,KAAL,CAAWF,KAAX,CAAiBgF,UARd,CAAnB,CAUN;AACM,GAAG,MAAK9E,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,EAA4B,UAA5B,EAAyC,MAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,EAA4B,UAAxE,CAAmF,CAC/E,MAAKpE,KAAL,CAAWhD,qBAAX,CAAiC2G,UAAjC,EACH,CAFD,IAEK,CACD,MAAK3D,KAAL,CAAWrE,uBAAX,CAAmCgI,UAAnC,CAA+C,WAA/C,EACH,CAEJ,CA70GkB,OA80GnB4T,WA90GmB,CA80GL,UAAM,CAChB,GAAIC,CAAAA,WAAW,CAAG,CACdhR,QAAQ,CAAC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAA5B,EAA0C,GAAIkD,CAAAA,IAAJ,EADrC,CACgD;AAC1D;AACJjD,MAAM,CAAG,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UAA5B,EAAwC,GAAIgD,CAAAA,IAAJ,EAHnC,CAG+C;AAC1D;AACHrM,UAAU,CAAE,MAAK0C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmW,kBAA5B,EAAkD,EALhD,CAMdC,eAAe,CAAE,MAAK1X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,EAAmD,EANtD,CAOdmE,iBAAiB,CAAE,MAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,EAAmD,EAPxD,CAQdgV,gBAAgB,CAAE,MAAK3X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAA5B,EAAwD,EAR5D,CASd0Q,YAAY,CAAE,MAAK5X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,EAThD,CAUdO,uBAAuB,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,EAV3D,CAWdtE,mBAAmB,CAAE,MAAK2C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BAA5B,EAA2D,EAXlE,CAYd0Q,eAAe,CAAE,MAAK7X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,EAZtD,CAad;AACTiN,cAAc,CAAE,MAAK/O,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAA5B,EAAsD,EAd/C,CAedjF,iBAAiB,CAAE,MAAKpC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,EAf5D,CAgBdyB,qBAAqB,CAAE,MAAK/I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BAA5B,EAA6D,EAhBtE,CAiBd9E,oBAAoB,CAAE,MAAKtC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAAwD,EAjBhE,CAkBd0B,mBAAmB,CAAC,MAAKjJ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,EAlB7D,CAmBd8B,4BAA4B,CAAC,MAAKpJ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAAwD,EAnBvE,CAoBdP,0BAA0B,CAAC,MAAKhH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,EApBhE,CAqBdqC,0BAA0B,CAAC,MAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkH,8BAA5B,EAA8D,CAAC,CArB5E,CAAlB,CAuBA,GAAM9D,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpH,cADK,CAEfqH,IAAI,CAAE,CAAEkT,UAAU,CAAE,KAAd,CAAqBxW,UAAU,gCAAO,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAxB,EAAuCkW,WAAvC,CAA/B,CAFS,CAAnB,CAIA,MAAKxX,KAAL,CAAWxF,WAAX,CAAuBkK,UAAvB,EACH,CA32GkB,OA42GnBqT,cA52GmB,CA42GF,UAAM,CAEnB,GAAI,MAAK/X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,EAAuDC,SAAvD,EAAoE,MAAKtC,KAAL,CAAWuC,iBAAX,CAA6BC,IAA7B,EAAqCF,SAAzG,EAAsH,MAAKtC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,EAAmCF,SAAzJ,EACA,MAAKtC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,EAAwCF,SAD5C,CAEE,CACE,GAAIO,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAI6D,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAAnE,CAC9B,MAAK3G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MADlC,CAC0C,MAAK1G,KAAL,CAAWF,KAAX,CAAiB4B,QAD3D,CAAlC,CAEAgB,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,cAAD,CAAT,CAA4B6D,GAAG,CAACC,QAAhC,CACA9D,SAAS,CAAC,YAAD,CAAT,CAA0B6D,GAAG,CAACG,MAA9B,CACAhE,SAAS,CAAC,kBAAD,CAAT,CAAgC,MAAhC,CACAA,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CACAgB,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CACApE,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAAgD,MAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA9F,CAAgH3F,iBAAiB,CAAC4E,EAAjK,CACAa,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAsD,MAAKlC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,CAAoDN,YAA1G,CAAyH3E,iBAAiB,CAAC4E,EAAvK,CACAa,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAAnE,CACAQ,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAAxD,CAA+DpF,iBAAiB,CAAC4E,EAA3H,CACAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK7C,KAAL,CAAWkC,eAAX,CAA6B,MAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCN,eAA7D,CAA+E9E,iBAAiB,CAAC4E,EAAhI,CACD;AACR;AACCa,SAAS,CAAC,YAAD,CAAT,CAA0B,MAAK7C,KAAL,CAAWuC,iBAAX,EAAgC,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA7B,GAAqCrL,iBAAiB,CAACga,GAAvF,CAA6F,MAAKpX,KAAL,CAAWkP,cAAX,CAA0B7D,MAA1B,CAAiC,SAAAC,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAX,GAAgC7D,iBAAiB,CAACga,GAApD,EAAtC,EAA+F9M,GAA/F,CAAmG,SAAAgB,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAb,EAAxG,EAAyIwN,IAAzI,CAA8I,GAA9I,CAA7F,CAAkP,MAAKzO,KAAL,CAAWuC,iBAAX,CAA6BkG,KAAzS,CAEO5F,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK7C,KAAL,CAAWyC,oBAAX,CAC9B,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCsG,mBADP,CAC6B1L,iBAAiB,CAAC4E,EADlF,CAEC;AACA;AACAa,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK7C,KAAL,CAAWyC,oBAAX,CAChC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BADL,CACkCzL,iBAAiB,CAAC4E,EADxF,CAEA;AACA;AACA;AACAa,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EAC1ClH,iBAAiB,CAAC4E,EADlB,CAEJ;AACD;AAECa,SAAS,CAAC,0BAAD,CAAT,CAAwC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqW,gBAApE,CACAjV,SAAS,CAAC,kBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA3D,CACAQ,SAAS,CAAC,6BAAD,CAAT,CAA2C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BjE,mBAAvE,CACAqF,SAAS,CAAC,qBAAD,CAAT,CAAkC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA9D,CACAtE,SAAS,CAAC,wBAAD,CAAT,CAAqC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAAjE,CACArM,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK7C,KAAL,CAAWuC,iBAAX,GAA+BD,SAA/B,CAA0C,MAAKtC,KAAL,CAAWuC,iBAAX,EAAgC,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BC,IAAvG,CAA6G,MAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAAhL,CACAvG,SAAS,CAAC,+BAAD,CAAT,CAA6C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByH,qBAAzE,CACA;AACArG,SAAS,CAAC,0BAAD,CAAT,CAAwC,MAAK7C,KAAL,CAAWyC,oBAAX,GAAkCH,SAAlC,CAA6C,MAAKtC,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhH,CAAsH,MAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA1L,CAEA1G,SAAS,CAAC,gCAAD,CAAT,CAA8C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA1E,CACAzB,SAAS,CAAC,WAAD,CAAT,CAAuB,cAAvB,CAEI,GAAMiB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,aAFI,CAGfQ,WAAW,CAAE,mBAHE,CAIf3B,SAAS,CAAEA,SAJI,CAKfoU,SAAS,CAAE,MAAKA,SALD,CAAnB,CAOA,MAAK9W,KAAL,CAAWlF,oBAAX,CAAgC6I,UAAU,CAAC,WAAD,CAA1C,CAAyD,MAAK3D,KAAL,CAAWF,KAAX,CAAiBwB,UAA1E,EACH,CA1DD,IA0DO,CACHrI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACJ,CA36GkB,OA66GnB2W,UA76GmB,CA66GN,SAACC,cAAD,CAAoB,CAC7B,MAAKnB,SAAL,CAAeC,OAAf,CAAuBzO,KAAvB,CAA+B,EAA/B,CACA;AACA,GAAI,MAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,GAAiD1E,iBAAiB,CAAC4E,EAAnE,EACA,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,GAAiD,IAAjD,EACA,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,GAAoD7E,iBAAiB,CAAC4E,EAFtE,EAGA,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,GAAoD,IAApD,EACA,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,GAAyDtK,iBAAiB,CAAC4E,EAJ3E,EAKA,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,GAAyD,IAAzD,EACA,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,GAAoDhM,iBAAiB,CAAC4E,EANtE,EAOA,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,GAAoD,IAPxD,CAO8D,CAE1D,GAAIvG,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAI6D,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,MAAK8B,KAAL,CAAW0I,cAAX,CAA0B/B,QAA1B,EAAsC,MAAKxG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAAnE,CAC9B,MAAK5G,KAAL,CAAW0I,cAAX,CAA0B7B,MAA1B,EAAoC,MAAK1G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UADlC,CAC8C,MAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QAD/D,CAAlC,CAEAgB,SAAS,CAAC,UAAD,CAAT,CAAwB6D,GAAG,CAACC,QAA5B,CACA9D,SAAS,CAAC,QAAD,CAAT,CAAsB6D,GAAG,CAACG,MAA1B,CACAhE,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAK1C,KAAL,CAAWF,KAAX,CAAiB4B,QAAzC,CAEAgB,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,EAC3B,MAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADrB,CACuC,MAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADvF,CACyG3F,iBAAiB,CAAC4E,EAD1J,CAGAa,SAAS,CAAC,cAAD,CAAT,CAA4B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA7F,CACxB,MAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADrB,CACoC3E,iBAAiB,CAAC4E,EADlF,CAGAa,SAAS,CAAC,iBAAD,CAAT,CAA+B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CAC3B,MAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADrB,CACuC9E,iBAAiB,CAAC4E,EADxF,CAGAa,SAAS,CAAC,mBAAD,CAAT,CAAiC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA7D,CAEApE,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA+C,MAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA3E,CAA8F1E,iBAAiB,CAAC4E,EAAvJ,CAEAa,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAkD,MAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA9E,CAAoG7E,iBAAiB,CAAC4E,EAAhK,CAEA;AACAa,SAAS,CAAC,YAAD,CAAT,CAA0B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAoDxG,kBAApD,GAAyE7D,iBAAiB,CAACga,GAAlJ,CAAwJ,MAAKpX,KAAL,CAAWkP,cAAX,CAA0B7D,MAA1B,CAAiC,SAAAC,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAX,GAAgC7D,iBAAiB,CAACga,GAApD,EAAtC,EAA+F9M,GAA/F,CAAmG,SAAAgB,KAAK,QAAEA,CAAAA,KAAK,CAAC9I,IAAN,CAAWvB,kBAAb,EAAxG,EAAyIwN,IAAzI,CAA8I,GAA9I,CAAxJ,CAA4S,MAAKtO,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAoDxG,kBAA1X,CAEA4B,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,EAAwD,MAAKvH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAA5B,CAAqDoB,mBAA7G,EAAoI1L,iBAAiB,CAAC4E,EAAzL,CAEAa,SAAS,CAAC,0BAAD,CAAT,CAAwC,MAAK7C,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAnE,EAA2EpF,iBAAiB,CAAC4E,EAArI,CAEAa,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAK7C,KAAL,CAAWyC,oBAAX,EAAmC,MAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCqG,0BAAxE,EAAsGzL,iBAAiB,CAAC4E,EAA5J,CAEA;AACAa,SAAS,CAAC,qBAAD,CAAT,CAAmC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAAnF,EAA8GrK,iBAAiB,CAAC4E,EAAnK,CACAa,SAAS,CAAC,yBAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,MAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAAnF,EAA8GrK,iBAAiB,CAAC4E,EAAvK,CACAa,SAAS,CAAC,4BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAA5B,EAA0DlH,iBAAiB,CAAC4E,EAAtH,CACAa,SAAS,CAAC,0BAAD,CAAT,CAAuC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4F,wBAAnE,CACAxE,SAAS,CAAC,kBAAD,CAAT,CAA8B,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA1D,CACAe,SAAS,CAAC,6BAAD,CAAT,CAA0C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6F,2BAAtE,CACAzE,SAAS,CAAC,qBAAD,CAAT,CAAkC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA9D,CACAY,SAAS,CAAC,wBAAD,CAAT,CAAoC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+F,sBAAhE,CACA3E,SAAS,CAAC,yBAAD,CAAT,CAAsC,MAAK7C,KAAL,CAAWuC,iBAAX,GAA+BD,SAA/B,CAA0C,MAAKtC,KAAL,CAAWuC,iBAAX,EAAgC,MAAKvC,KAAL,CAAWuC,iBAAX,CAA6BC,IAAvG,CAA6G,MAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA/K,CACA5E,SAAS,CAAC,+BAAD,CAAT,CAA4C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8F,6BAAxE,CACA1E,SAAS,CAAC,0BAAD,CAAT,CAAsC,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BiG,wBAAlE,CACA7E,SAAS,CAAC,gCAAD,CAAT,CAA4C,MAAK1C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkH,8BAAxE,CACA,GAAM7E,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,aAFI,CAGfQ,WAAW,CAAE,mBAHE,CAIf3B,SAAS,CAAEA,SAJI,CAKfoU,SAAS,CAAE,MAAKA,SALD,CAAnB,CAQA,MAAK9W,KAAL,CAAWlF,oBAAX,CAAgC6I,UAAU,CAAC,WAAD,CAA1C,CAAyD,MAAK3D,KAAL,CAAWF,KAAX,CAAiBwB,UAA1E,EACH,CA9DD,IA8DO,CAEHrI,KAAK,CAACiI,IAAN,CAAW,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,6BAAN,CAA9B,CAAX,EACH,CACJ,CAl/GkB,OA6gHnB6W,aA7gHmB,CA6gHH,SAAC9U,cAAD,CAAiBqQ,IAAjB,CAAuB5S,YAAvB,CAAwC,CACpD,GAAMsX,CAAAA,WAAW,CAAG,CAChBvU,QAAQ,CAAE,uBADM,CAEhBC,SAAS,CAAE,kBAFK,CAGhBmB,UAAU,CAAE,uBAHI,CAIhBZ,SAAS,CAAE,eAJK,CAKhBlB,eAAe,CAAE,mBALD,CAMhBS,UAAU,CAAE,MAAK3D,KAAL,CAAWF,KAAX,CAAiB6D,UANb,CAOhBjC,QAAQ,CAAE,MAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAPX,CAQhB+C,YAAY,CAAE,CAAC,CARC,CAShB/B,SAAS,CAAE,CACP0V,eAAe,CAAE,mBADV,CAEPC,WAAW,CAAEjV,cAAc,CAACkV,iBAFrB,CAGPA,iBAAiB,CAAElV,cAAc,CAACkV,iBAH3B,CAIPC,oBAAoB,CAAEnV,cAAc,CAACoV,SAAf,GAA6Bvb,iBAAiB,CAACwb,IAA/C,EAAuDhF,IAAI,GAAK,CAAhE,CAAoErQ,cAAc,CAACmV,oBAAnF,CAA0G,CAAC,CAJ1H,CAKPG,eAAe,CAAEtV,cAAc,CAACoV,SALzB,CAKmC;AAC1CG,eAAe,CAAElF,IAAI,GAAK,CAAT,CAAatW,cAAc,CAACyb,UAA5B,CAAyCzb,cAAc,CAAC0b,KANlE,CAOPhY,YAAY,CAAZA,YAPO,CAQPiY,kBAAkB,CAAErF,IAAI,GAAK,CAAT,CAAa,CAAC,CAAd,CAAkBrW,aAAa,CAAC2b,YAR7C,CASPtV,QAAQ,CAAE,MAAKzD,KAAL,CAAWF,KAAX,CAAiB4B,QATpB,CAUP0G,KAAK,CAAEqL,IAVA,CAWPuF,mBAAmB,CAAE,IAXd,CATK,CAApB,CAuBA,MAAKhZ,KAAL,CAAWkY,aAAX,CAAyBC,WAAzB,EACH,CAtiHkB,OAwiHnBc,YAxiHmB,CAwiHJ,SAAC3Q,KAAD,CAAW,CACtB,GAAIA,KAAK,CAAC4Q,MAAN,GAAiB,CAArB,CAAwB,CACpB,MAAKhB,aAAL,CAAmB,MAAKlY,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6X,qBAA/C,CAAsE,CAAtE,CAAyE7Q,KAAK,CAAC8Q,SAA/E,EACH,CAFD,IAGK,CACD,MAAKlB,aAAL,CAAmB,MAAKlY,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6X,qBAA/C,CAAsE,CAAtE,CAAyE7Q,KAAK,CAAC8Q,SAA/E,EACH,CACJ,CA/iHkB,CAEf,GAAMxT,CAAAA,WAAW,CAAG,CAChBqH,IAAI,CAAE,CADU,CACPC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CACXxS,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CADG,CAC+B,CAF9B,CAApB,CAKA,GAAMtT,CAAAA,YAAY,CAAG,CACjBkH,IAAI,CAAE,CADW,CACRC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CACXxS,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CADG,CAC+B,CAF7B,CAArB,CAKA,GAAMnT,CAAAA,cAAc,CAAG,CACnB+G,IAAI,CAAE,CADa,CACVC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CACXxS,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CADG,CAC+B,CAF3B,CAAvB,CAKA,GAAMhT,CAAAA,SAAS,CAAG,CACd4G,IAAI,CAAE,CADQ,CACLC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CACXxS,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CADG,CAC+B,CAFhC,CAAlB,CAKA,MAAKxZ,KAAL,CAAa,CACToN,IAAI,CAAE,CADG,CAETC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,EAA6B,MAAKrZ,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,CAA1B,CAF1B,CAGT9U,qBAAqB,CAAE,EAHd,CAIT7D,UAAU,CAAE,GAAIgH,CAAAA,GAAJ,EAJH,CAKTa,cAAc,CAAE,EALP,CAMT3C,WAAW,CAAXA,WANS,CAOTG,YAAY,CAAZA,YAPS,CAQTG,cAAc,CAAdA,cARS,CASTG,SAAS,CAATA,SATS,CAUTjD,cAAc,CAAE,EAVP,CAWT;AACAkB,SAAS,CAAE,CAAE2I,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA4BxS,QAAQ,CAAC,MAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAvF,CAZF,CAaTlZ,WAAW,CAAE,KAbJ,CAAb,CAgBA,MAAK2W,SAAL,CAAiB/d,KAAK,CAACugB,SAAN,EAAjB,CACA,MAAKhM,cAAL,CAAsB,GAAIrP,CAAAA,cAAJ,EAAtB,CAEA,MAAKsb,eAAL,CAAuB,CAAC,WAAD,CAAc,oBAAd,CAAoC,iBAApC,CAAuD,cAAvD,CAAuE,YAAvE,CAAqF,kBAArF,CAAyG,UAAzG,CACnB,oBADmB,CACG,WADH,CACgB,YADhB,CAC8B,qBAD9B,CAAvB,CAGA,MAAKC,qBAAL,CAA6B,EAA7B,CACA,MAAKC,mBAAL,CAA2B,EAA3B,CA7Ce,aA8ClB,C,2DAgUD,2BAAkB7U,IAAlB,CAAwB,iBACpB,GAAM8U,CAAAA,SAAS,CAAG9U,IAAI,EAAIA,IAAI,CAACuF,GAAL,CAAS,SAACwP,MAAD,CAAY,CAC3C,MAAO,CACH,UAAWA,MAAM,CAACzc,gBAAgB,CAAC0c,KAAlB,CAAN,CAA+B,MAAI,CAAC5Z,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0BmY,iBAAzD,CADR,CAEH,YAAaF,MAAM,CAACzc,gBAAgB,CAAC4c,KAAlB,CAAN,EAAkC,MAAlC,CAA2C,GAA3C,CAAiDH,MAAM,CAACzc,gBAAgB,CAAC4c,KAAlB,CAFjE,CAGH,QAAS,OAHN,CAGe,aAAc,GAH7B,CAAP,CAMH,CAPyB,CAA1B,CAQA,MAAOJ,CAAAA,SAAP,CAEH,C,+BA4XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,yBAAgB9U,IAAhB,CAAsB,CAClB,GAAImV,CAAAA,SAAS,CAAG,IAAhB,CACA;AACA;AACA,GAAInV,IAAI,EAAIA,IAAI,CAACpC,MAAL,CAAc,CAA1B,CAA6B,CACzBoC,IAAI,CAAC+O,OAAL,CAAa,SAAA5H,QAAQ,CAAI,CACrB,GAAIA,QAAQ,CAACvB,QAAb,CAAuB,CACnB,GAAIuB,QAAQ,CAACvB,QAAT,GAAsB,KAA1B,CAAiC,CAC7BuP,SAAS,CAAG,KAAZ,CACH,CACJ,CAJD,IAKK,CACDA,SAAS,CAAG,KAAZ,CACA;AACA;AACA;AACA;AACA;AACA;AACH,CACJ,CAfD,EAgBH,CAjBD,IAkBK,CACD;AACAA,SAAS,CAAG,KAAZ,CACA;AACH,CACD,MAAOA,CAAAA,SAAP,CACH,C,sBAkMD,iBAAS,iBACL,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,KAAKja,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA/B,EAA2C,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA9E,CAAwF,CACpF,GAAMhB,CAAAA,cAAN,CAAyB,KAAKvD,KAA9B,CAAMuD,cAAN,CACA6W,oBAAoB,CAAC1P,IAArB,CACI,CAAE,UAAW,aAAb,CAA4B,YAAa,cAAzC,CAAyD,iBAAkB,YAA3E,CAAyF,cAAe,WAAxG,CADJ,CAEI,CAAE,UAAW,UAAb,CAAyB,YAAa,WAAtC,CAAmD,iBAAkB,YAArE,CAAmF,cAAe,WAAlG,CAFJ,CAGI;AACA;AACA;AACA,CAAE,UAAW,aAAb,CAA4B,YAAa,cAAzC,CAAyD,iBAAkB,YAA3E,CAAyF,cAAe,WAAxG,CANJ,EASA,GAAInH,cAAc,EAAIA,cAAc,CAAC8W,kBAAf,GAAsC/X,SAAxD,EAAqEiB,cAAc,CAACyP,kBAAf,CAAoC,CAA7G,CAAgH,CAC5GoH,oBAAoB,CAAC1P,IAArB,CACI;AACA,CAAE,UAAW,gBAAb,CAA+B,YAAa,iBAA5C,CAA+D,iBAAkB,YAAjF,CAA+F,cAAe,WAA9G,CAFJ,CAGI,CAAE,UAAW,kBAAb,CAAiC,YAAa,eAA9C,CAA+D,iBAAkB,YAAjF,CAA+F,cAAe,WAA9G,CAHJ,EAKH,CACJ,CACD,GAAM4P,CAAAA,QAAQ,CAAG,CACbnV,UAAU,CAAE,mBADC,CAEbZ,SAAS,CAAE,KAFE,CAGb9C,UAAU,CAAE,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAHhB,CAIbI,QAAQ,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAJd,CAIwBmC,SAAS,CAAE,eAJnC,CAIoD6H,OAAO,CAAE,eAJ7D,CAAjB,CAMA,KAAKlF,QAAL,CAAiB,KAAK3G,KAAL,CAAW0I,cAAX,CAA0B,UAA1B,GAAyC,KAAK1I,KAAL,CAAW0I,cAAX,CAA0B,UAA1B,CAA1C,EAAoF,KAAKvI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,EAA+B,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAA/I,CAA0J1I,mBAAmB,CAAC,KAAKkC,KAAL,CAAWF,KAAX,CAAiB4B,QAAlB,CAA4B,KAAK1B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAAxD,CAA7K,CAAiPrE,SAAjQ,CACA,KAAKuE,MAAL,CAAe,KAAK7G,KAAL,CAAW0I,cAAX,CAA0B,QAA1B,GAAuC,KAAK1I,KAAL,CAAW0I,cAAX,CAA0B,QAA1B,CAAxC,EAAgF,KAAKvI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,EAA+B,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MAA3I,CAAoJ5I,mBAAmB,CAAC,KAAKkC,KAAL,CAAWF,KAAX,CAAiB4B,QAAlB,CAA4B,KAAK1B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MAAxD,CAAvK,CAAyOvE,SAAvP,CACA,GAAMiY,CAAAA,KAAK,CAAG,KAAKva,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,kBAA1B,GAAiD,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,kBAA1B,EAA8CC,YAA7G,CACA,GAAMmW,CAAAA,MAAM,CAAG,KAAKnX,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,mBAA1B,GAAkD,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,mBAA1B,EAA+CC,YAAhH,CACA,GAAMwM,CAAAA,QAAQ,CAAG,KAAKxN,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,qBAA1B,GAAoD,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,qBAA1B,EAAiDC,YAAtH,CACA,GAAMmN,CAAAA,WAAW,CAAG,KAAKnO,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,GAA8C,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CC,YAA7G,CACA,GAAM4M,CAAAA,UAAU,CAAG,KAAK5N,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,GAA8C,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CC,YAA5G,CACA,GAAMwQ,CAAAA,QAAQ,CAAG,KAAKxR,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,aAA1B,GAA4C,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,aAA1B,EAAyCC,YAAtG,CACA,GAAMwZ,CAAAA,UAAU,CAAG,KAAKxa,KAAL,CAAWa,UAAX,CAAsBC,GAAtB,CAA0B,UAA1B,GAAyC,KAAKd,KAAL,CAAWa,UAAX,CAAsBE,GAAtB,CAA0B,UAA1B,EAAsCC,YAAlG,CAEA,GAAMoB,CAAAA,QAAQ,CAAG,CACb+C,UAAU,CAAE,mBADC,CAEbsV,cAAc,CAAE,mBAFH,CAGbnX,eAAe,CAAEhB,SAHJ,CAIbiC,SAAS,CAAE,QAJE,CAKb;AACA1C,QAAQ,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QANd,CAOb+C,YAAY,CAAE2V,KAPD,CAQbzL,iBAAiB,CAAE,KAAK9O,KAAL,CAAWkC,eAAX,EAA8B,KAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCsM,iBARpE,CASbrN,UAAU,CAAE,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAThB,CAUbuH,QAAQ,CAAE,KAAK7I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkF,QAVzB,CAWbsC,MAAM,CAAE,KAAK9I,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoF,MAXvB,CAYb9E,YAAY,CAAE,KAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA+C,KAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YAA5F,CAA2G3E,iBAAiB,CAAC4E,EAZ9H,CAabE,eAAe,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAkD,KAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAlG,CAAoH9E,iBAAiB,CAAC4E,EAb1I,CAcb8G,mBAAmB,CAAE,KAAK9I,KAAL,CAAWyC,oBAAX,EAAmC,KAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAnE,EAA2EpF,iBAAiB,CAAC4E,EAdrG,CAebwG,UAAU,CAAE,KAAKrI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAsD,KAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAoDxG,kBAA1G,CAA+H7D,iBAAiB,CAAC4E,EAfhJ,CAgBbsC,0BAA0B,CAAE,KAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAhB3C,CAAjB,CAmBA,GAAMoW,CAAAA,cAAc,CAAG,EAAvB,CAEAA,cAAc,CAAChQ,IAAf,CACI,CAAE,YAAa,YAAf,CAA6B,QAAS,eAAtC,CADJ,CAEI,CAAE,YAAa,cAAf,CAA+B,QAAS,aAAxC,CAFJ,CAGI,CAAE,YAAa,WAAf,CAA4B,QAAS,cAArC,CAHJ,CAII,CAAE,YAAa,oBAAf,CAAqC,QAAS,wBAA9C,CAJJ,CAKI,CAAE,YAAa,eAAf,CAAgC,QAAS,kBAAzC,CALJ,CAMI,CAAE,YAAa,iBAAf,CAAkC,QAAS,oBAA3C,CANJ,CAOI,CAAE,YAAa,cAAf,CAA+B,QAAS,gBAAxC,CAPJ,CAQI,CAAE,YAAa,qBAAf,CAAsC,QAAS,YAA/C,CARJ,CASI,CACI,YAAa,UADjB,CAC6B,QACrB,KAAKvK,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,EAAmD,KAAKvB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC8D,SAA5I,CAAwJ,sBAAxJ,CACI,KAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,EAAmD,KAAKvB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,GAAuE7D,iBAAiB,CAAC+D,SAA5I,CAAwJ,sBAAxJ,CACM,oBAJlB,CATJ,EAiBA,GAAI,KAAKhB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,EACA,KAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eAAhD,GAAoEtF,UAAU,CAACkd,iBADnF,CACsG,CAClGD,cAAc,CAAChQ,IAAf,CACI,CAAE,YAAa,cAAf,CAA+B,QAAS,iBAAxC,CADJ,EAGH,CAMD,GAAIkQ,CAAAA,sBAAsB,CAAG,KAAKza,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoZ,oBAA5B,CAAmD1R,MAAM,CAAC,KAAKhJ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BoZ,oBAA5B,CAAiD5Z,kBAAlD,CAAzD,CAAiI,IAA9J,CAEA,GAAI,KAAKjB,KAAL,CAAWuD,cAAX,EAA6B,KAAKvD,KAAL,CAAWuD,cAAX,CAA0B,oBAA1B,IAAoDjB,SAArF,CAAgG,CAC5FsY,sBAAsB,CAAG,KAAK5a,KAAL,CAAWuD,cAAX,CAA0B,oBAA1B,EAAgDkF,KAAhD,GAA0DU,MAAM,CAAC,CAAD,CAAhE,CAAsE,IAAtE,CAA6EA,MAAM,CAAC,KAAKnJ,KAAL,CAAWuD,cAAX,CAA0B,oBAA1B,EAAgDkF,KAAjD,CAA5G,CACH,CAGD,GAAI/B,CAAAA,GAAG,CAAGxI,wBAAwB,CAAC,KAAKiC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmF,YAA7B,CAA2C,KAAKzG,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqF,UAAvE,CAC9B,KAAK3G,KAAL,CAAWF,KAAX,CAAiB4B,QADa,CAAlC,CAGA,GAAMyV,CAAAA,SAAS,CAAG,CACdnS,UAAU,CAAE,mBADE,CAEdZ,SAAS,CAAE,QAFG,CAGdlB,eAAe,CAAE,kBAHH,CAIdS,UAAU,CAAE,KAAK3D,KAAL,CAAWF,KAAX,CAAiB6D,UAJf,CAKdjC,QAAQ,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QALb,CAMd+C,YAAY,CAAEuS,MANA,CAOd1V,UAAU,CAAE,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAPf,CAQd+Q,eAAe,CAAE+H,KARH,CASd3H,kBAAkB,CAAE,KAAKzS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,EAAmD,KAAKxS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,CAAgDC,kBATzG,CAUd7P,eAAe,CAAE,KAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CACb,KAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADnC,CACqD3F,iBAAiB,CAAC4E,EAX1E,CAYdD,YAAY,CAAE,KAAK5B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,KAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5E,CACV,KAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CC,YADnC,CACkD3E,iBAAiB,CAAC4E,EAbpE,CAcdE,eAAe,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,KAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eAAnG,CACb,KAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDC,eADnC,CACqD9E,iBAAiB,CAAC4E,EAf1E,CAAlB,CAmBA,GAAM8Y,CAAAA,WAAW,CAAG,CAChB3X,aAAa,CAAE,aADC,CAEhBC,cAAc,CAAE,qBAFA,CAGhBC,eAAe,CAAE,kBAHD,CAIhBI,QAAQ,CAAE,4CAJM,CAMhBE,gBAAgB,CAAE,CACdgD,QAAQ,CAAED,GAAG,CAACC,QADA,CAEdE,MAAM,CAAEH,GAAG,CAACG,MAFE,CAGdhF,QAAQ,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiB4B,QAHb,CAIdyC,0BAA0B,CAAE,KAAKnE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6C,0BAJ1C,CAKdwE,mBAAmB,CAAE,KAAK9I,KAAL,CAAWyC,oBAAX,CAAkC,KAAKzC,KAAL,CAAWyC,oBAAX,CAAgCD,IAAhC,CAAqCsG,mBAAvE,CAA6F1L,iBAAiB,CAAC4E,EALtH,CAMdwG,UAAU,CAAE,KAAKxI,KAAL,CAAWuC,iBAAX,CAA+B,KAAKvC,KAAL,CAAWuC,iBAAX,CAA6BkG,KAA5D,CAAoErL,iBAAiB,CAACyQ,KANpF,CAOd9K,eAAe,CAAE,KAAK5C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAAgD,KAAK9G,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,CAA8ClE,eAA9F,CAAgH3F,iBAAiB,CAAC4E,EACnJ;AACA;AACA;AAVc,CANF,CAkBhBP,UAAU,CAAE,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,UAlBb,CAmBhB;AACAiY,eAAe,CAAE,KAAKA,eApBN,CAApB,CAuBA,KAAKqB,cAAL,CAAsB,CAClB,CACI,QAAS,UADb,CAEI,QAASrU,GAAG,CAACsU,cAFjB,CADkB,CAIf,CACC,QAAS,QADV,CAEC,QAAStU,GAAG,CAACuU,YAFd,CAJe,CAQlB;AACA;AACA;AACA;AACA,CACI,QAAS,sBADb,CAEI,QAAS,KAAK9a,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,EAAgD,KAAK3B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CoZ,YAA7F,CAA4G,KAAK/a,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BK,gBAA5B,CAA6CoZ,YAAzJ,CAAwK,IACjL;AACA;AAJJ,CAZkB,CAkBlB,CACI,QAAS,yBADb,CAEI,QAAS,KAAK/a,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,EAAmD,KAAK9B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDwQ,eAAnG,CAAqH,KAAKtS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BQ,mBAA5B,CAAgDwQ,eAArK,CAAuL,IAFpM,CAlBkB,CAsBlB,CACI,QAAS,iBADb,CAEI,QAAS,KAAKtS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,EAAuD,KAAKtH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAoD0T,aAA3G,CAA2H,KAAKhb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgG,uBAA5B,CAAoD0T,aAA/K,CAA+L,IAF5M,CAIA;AACA;AACA;AACA;AA7BkB,CAAtB,CAgCA,mBACI,qDAOI,2BAAK,SAAS,CAAC,6DAAf,eACI,oBAAC,KAAD,EAAO,GAAG,CAAE,EAAZ,eACI,oBAAC,mBAAD,EAAqB,cAAc,CAAE,KAAKJ,cAA1C,EADJ,CADJ,cAKI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,WAAK,CAAC,KAAK5a,KAAL,CAAWG,WAAZ,CAA0B,GAA1B,CAAgC,GAArC,CAAP,eACI,oBAAC,UAAD,EACI,UAAU,CAAE,KAAKH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2Z,YAA5B,EAA6C,KAAKjb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Z,WAA5B,EAA2C,EADxG,CAEI,cAAc,CAAE,KAAKlb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAFhD,CAGI,eAAe,CAAC,kBAHpB,CAII,QAAQ,CAAE,KAAKvB,KAAL,CAAWF,KAAX,CAAiB4B,QAJ/B,CAKI,UAAU,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiBwB,UAC7B;AANJ,CAOI,eAAe,CAAE,yBAAC6Z,KAAD,QAAW,CAAA,MAAI,CAACnb,KAAL,CAAW9E,8BAAX,CAA0CigB,KAA1C,CAAiD,MAAI,CAACnb,KAAL,CAAWF,KAAX,CAAiB4B,QAAlE,CAA4E,MAAI,CAAC1B,KAAL,CAAWF,KAAX,CAAiBwB,UAA7F,CAAX,EAPrB,CAQI,UAAU,CAAE6Y,QARhB,CASI,UAAU,CAAE,KAAKna,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CACZ;AAVJ,CAWI,SAAS,CAAC,YAXd,CAYI,UAAU,CAAC,WAZf,CAaI,WAAW,CAAC,iBAbhB,CAcI,gBAAgB,CAAC,qBAdrB,CAeI,UAAU,CAAC,eAff,CAgBI,QAAQ,CAAC,mBAhBb,CAiBI,cAAc,CAAE,KAjBpB,CAkBI,UAAU,CAAE,KACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BJ,CA2BI,UAAU,CAAE,IA3BhB,CA4BI,eAAe,CAAE,KA5BrB,CA6BI,cAAc,CAAE,IA7BpB,CA8BI,UAAU,CAAE,KAAK+Z,UA9BrB,CA+BI,WAAW,CAAE,KAAK7D,WA/BtB,CAgCI,cAAc,CAAE,KAAKQ,cAhCzB,CAiCI,gBAAgB,CAAE,KAAK/X,KAAL,CAAWpE,gBAjCjC,CAkCI,cAAc,CAAC,cAlCnB,CAmCI,SAAS,CAAE,KAAKkb,SAnCpB,CAoCI,WAAW,CAAE6D,WApCjB,CAqCI,aAAa,CAAE,KAAK3a,KAAL,CAAWF,KAAX,CAAiBub,aAChC;AACA;AACA;AAxCJ,CAyCI,KAAK,CAAEjB,KAzCX,CA0CI,cAAc,CAAE,IA1CpB,CA2CI,qBAAqB,CAAE,KAAKva,KAAL,CAAW0E,qBA3CtC,CA4CI,UAAU,CAAE,KAAKyT,UA5CrB,CA6CI,SAAS,CAAE,2BAAM,CAAA,MAAI,CAAChW,qBAAL,CAA2BC,QAA3B,CAAN,EA7Cf,CA8CI,iBAAiB,CAAE,IACnB;AA/CJ,CAgDI,aAAa,eACT;AACA,oBAAC,WAAD,EAAa,SAAS,CAAC,qCAAvB,eAEI,oBAAC,MAAD,EAAQ,SAAS,CAAC,4CAAlB,CAA+D,IAAI,CAAC,QAApE,CACI,WAAU,KAAKjC,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,SAAN,CAA9B,CADd,CAEI,WAAS,qBAFb,CAGI,MAAM,CAAE,KAAKxB,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyClB,KAAzC,IAAoD,CAAC,CAHjE,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACpa,KAAL,CAAWvF,6BAAX,CAAyCwH,QAAzC,CAAN,EACb;AALA,eAOI,oBAAC,eAAD,EAAiB,IAAI,CAAE7H,MAAvB,EAPJ,CAFJ,cAWI,oBAAC,MAAD,EAAQ,SAAS,CAAC,sCAAlB,CAAyD,OAAO,CAAC,MAAjE,CACI,WAAU,KAAK4F,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,aAAN,CAA9B,CADd,CAEI,WAAS,qBACb;AAHA,eAKI,oBAAC,WAAD,EAAa,SAAS,CAAC,cAAvB,EALJ,CAXJ,CAoBA;AAtER,CAwEI,eAAe,CAAE,CACb,CACI,0BAAc,oBAAC,mBAAD,EACV,QAAQ,CAAE,KAAKxB,KAAL,CAAW0I,cAAX,CAA0B,UAA1B,GAAyCpG,SAAzC,CACNrE,mBAAmB,CAAC,KAAKkC,KAAL,CAAWF,KAAX,CAAiB4B,QAAlB,CAA4B,KAAK7B,KAAL,CAAW0I,cAAX,CAA0B,UAA1B,CAA5B,CADb,CACkF,KAAK/B,QAFvF,CAGV,MAAM,CAAE,KAAK3G,KAAL,CAAW0I,cAAX,CAA0B,QAA1B,GAAuCpG,SAAvC,CACJrE,mBAAmB,CAAC,KAAKkC,KAAL,CAAWF,KAAX,CAAiB4B,QAAlB,CAA4B,KAAK7B,KAAL,CAAW0I,cAAX,CAA0B,QAA1B,CAA5B,CADf,CACkF,KAAK7B,MAJrF,CAKV,UAAU,CAAE,KAAK7G,KAAL,CAAWvC,UAAX,EAAyB,EAL3B,CAMV,eAAe,CAAE,KAAK0C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwF,iBAA5B,EAAiD,EANxD,CAOV,OAAO,CAAE,KAAKjH,KAAL,CAAW8X,gBAAX,EAA+B,EAP9B,CAQV,YAAY,CAAE,KAAK3X,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BY,uBAA5B,EAAuD,EAR3D,CASV,UAAU,CAAE,KAAKrC,KAAL,CAAWxC,mBAAX,EAAkC,EATpC,CAUV,eAAe,CAAE,KAAKwC,KAAL,CAAWkC,eAAX,EAA8B,EAVrC,CAWV,0BAA0B,CAAE,KAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4H,0BAA5B,EAA0D,EAX5E,CAYV,YAAY,CAAE,KAAKrJ,KAAL,CAAWkP,cAAX,EAA6B,EAZjC,CAaV,iBAAiB,CAAE,KAAKlP,KAAL,CAAWuC,iBAAX,EAAgC,EAbzC,CAcV,eAAe,CAAE,KAAKvC,KAAL,CAAWkJ,qBAAX,EAAoC,EAd3C,CAeV,oBAAoB,CAAE,KAAKlJ,KAAL,CAAWyC,oBAAX,EAAmC,EAf/C,CAgBV,WAAW,CAAE,KAAKzC,KAAL,CAAW0b,WAAX,EAA0B,EAhB7B,CAiBV,cAAc,CAAE,KAAKvb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgI,gBAA5B,EAAgD,EAjBtD,CAkBV,IAAI,CAAE,KAAKzJ,KAAL,CAAW2b,UAAX,EAAyB,EAlBrB,CAmBV,SAAS,CAAE,KAAKxb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,EAAmD,EAnBpD,CAoBV,mBAAmB,CAAE,KAAKvK,mBApBhB,CAqBV,gBAAgB,CAAE,KAAK8N,gBArBb,CAsBV,sBAAsB,CAAE,KAAKvM,sBAtBnB,CAuBV,QAAQ,CAAE,KAAKxJ,KAAL,CAAWF,KAAX,CAAiB4B,QAvBjB,CAwBV,sBAAsB,CAAE,KAAK+Z,sBAxBnB,CAyBV,oBAAoB,CAAE,KAAK5b,KAAL,CAAW6b,kBAAX,EAAiC,EAzB7C,EADlB,CADa,CAxErB,EADJ,CADJ,cA2GI,oBAAC,GAAD,EAAK,EAAE,WAAK,CAAC,KAAK1b,KAAL,CAAWG,WAAZ,CAA0B,GAA1B,CAAgC,IAArC,CAAP,CAAoD,SAAS,CAAC,mBAA9D,eACI,2BAAK,SAAS,CAAC,wBAAf,eACI,2BAAK,SAAS,CAAC,mBAAf,CAAmC,OAAO,CAAE,KAAKH,KAAL,CAAW2b,cAAvD,EACK,CAAC,KAAK3b,KAAL,CAAWG,WAAZ,cACG,yBAAG,KAAK,CAAC,iBAAT,EADH,cAEG,yBAAG,KAAK,CAAC,oBAAT,EAHR,CADJ,CADJ,cAWI,oBAAC,YAAD,EAAc,SAAS,CAAC,oBAAxB,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,EACK,KAAKH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Z,WAA5B,EAA2C,KAAKlb,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Z,WAA5B,CAAwC1Y,MAAxC,CAAiD,CAA5F,EACM,KAAKxC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBADlC,cAEG,qDACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,EACK,KAAKvB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDyG,UADrD,CADJ,cAII,oBAAC,IAAD,CAAM,QAAN,mBACI,2BAAK,SAAS,CAAC,yBAAf,eACI,0BAAI,SAAS,CAAC,+BAAd,EAEQ,KAAKhI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsa,oBAA5B,EAAoD,KAAK5b,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsa,oBAA5B,CAAiDC,SAArG,EAAkH,KAAK7b,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,eAAN,CAA9B,EAAyD,KAAzD,CAAiE,KAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsa,oBAA5B,CAAiDC,SAF5O,cAKI,oBAAC,UAAD,EAAY,SAAS,4BAAsB,KAAK7b,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC8D,SAAxF,CAAoG,kBAApG,CACrC,KAAKf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAAC+D,SAAxF,CAAoG,iBAApG,CACI,KAAKhB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDT,kBAAhD,EAAsE7D,iBAAiB,CAACgE,SAAxF,CAAoG,gBAApG,CACI,mBAHO,gBAArB,EAIK,KAAKjB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDua,mBAJrD,CALJ,CADJ,cAcI,2BAAK,SAAS,CAAC,UAAf,eAUI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,cAAf,CAA8B,SAAS,CAAC,oDAAxC,CACI,MAAM,CAAE,KAAKjc,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyCjB,UAAzC,IAAyD,CAAC,CADtE,CAEI,WAAU,KAAKra,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CACd;AAHA,eAKI,oBAAC,KAAD,EAAO,GAAG,CAAE0a,QAAZ,CAAsB,GAAG,CAAC,8BAA1B,CACI,KAAK,CAAC,IADV,CACe,MAAM,CAAC,IADtB,CAC2B,SAAS,CAAC,+BADrC,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC5H,eAAL,CAAqB,MAAI,CAACnU,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAAjD,CAAsE8P,QAAtE,CAAN,EAFb,CAGI,aAAW,MAHf,EALJ,CAVJ,cAsBI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,MAAf,CAAsB,SAAS,CAAC,oDAAhC,CACI,WAAU,KAAKrR,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CACV;AAFJ,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACrB,KAAL,CAAWjE,QAAX,CAAoB,MAAI,CAACiE,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,CAAgDE,gBAApE,CAAsF,MAAI,CAACzB,KAAL,CAAWF,KAAX,CAAiB4B,QAAvG,CAAiH,MAAI,CAAC1B,KAAL,CAAWF,KAAX,CAAiBwB,UAAlI,CAAN,EAHb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAEpH,KAAvB,EALJ,CAtBJ,cA8BI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,mBAAf,CACI,MAAM,CAAE,KAAK2F,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyCtE,MAAzC,IAAqD,CAAC,CADlE,CAEI,SAAS,CAAC,kCAFd,CAGI,WAAU,KAAKhX,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAHd,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC6V,aAAL,CAAmBC,SAAnB,CAAN,EACb;AACA;AANA,eAQI,oBAAC,eAAD,EAAiB,IAAI,CAAErd,WACvB;AADA,EARJ,CA9BJ,eA2CQ;AACA,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,uBAA+E;AAA9F,CACI,WAAU,KAAKkG,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CADd,CAEI,MAAM,CAAE,KAAKxB,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyCtN,WAAzC,IAA0D,CAAC,CAFvE,CAGI,SAAS,CAAC,kCACV;AAJJ,CAKI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,qBAAL,CAA2BC,WAA3B,CAAN,EALb,eAOI,oBAAC,eAAD,EAAiB,IAAI,CAAE7T,MAAvB,EAPJ,CAWA;AAvDR,cA0DI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,uBAAf,CACI,MAAM,CAAE,KAAK0F,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyC7N,UAAzC,IAAyD,CAAC,CADtE,CAEI,SAAS,CAAC,kCAFd,CAGI,WAAU,KAAKzN,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CAHd,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACmM,yBAAL,CAA+BC,UAA/B,CAAN,EACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,eAcI,oBAAC,eAAD,EAAiB,IAAI,CAAEzT,aACvB;AADA,EAdJ,CA1DJ,cA6EI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,qBAAf,CAAqC,SAAS,CAAC,kCAA/C,CACI,MAAM,CAAE,KAAK6F,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyCjO,QAAzC,IAAuD,CAAC,CADpE,CAEI,WAAU,KAAKrN,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAFd,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC8L,aAAL,CAAmB,MAAI,CAACnN,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA/C,CAAoE8L,QAApE,CAA8E,QAA9E,CAAN,EAHb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAEtT,UAAvB,EANJ,CA7EJ,cAuFI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,qBAAf,CAAqC,SAAS,CAAC,oDAA/C,CACI,MAAM,CAAE,KAAK8F,KAAL,CAAW0E,qBAAX,CAAiC+W,OAAjC,CAAyCjK,QAAzC,IAAuD,CAAC,CADpE,CAEI,WAAU,KAAKrR,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CACd;AAHA,eAKI,oBAAC,KAAD,EAAO,GAAG,CAAE2a,MAAZ,CAAoB,GAAG,CAAC,8BAAxB,CACI,KAAK,CAAC,IADV,CACe,MAAM,CAAC,IADtB,CAC2B,SAAS,CAAC,+BADrC,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC5K,WAAL,CAAiB,MAAI,CAACpR,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA7C,CAAkE8P,QAAlE,CAAN,EAFb,CAGI,aAAW,MAHf,EALJ,CAvFJ,CAmGK2I,gBAAgB,CAACxX,MAAjB,CAA0B,CAA1B,cACG,oBAAC,aAAD,EACI,GAAG,CAAE,IADT,CAEI,IAAI,CAAEwX,gBAFV,CAGI,MAAM,CAAE,IAHZ,CAII,QAAQ,CAAE,IAJd,CAKI,UAAU,CAAC,0BALf,CAMI,OAAO,CAAC,OANZ,CAOI,aAAa,CAAE,uBAAC1R,KAAD,QAAW,CAAA,MAAI,CAAC2Q,YAAL,CAAkB3Q,KAAlB,CAAX,EAPnB,CAQI,qBAAqB,CAAE,KAAKzI,KAAL,CAAW0E,qBARtC,EADH,CAYG,EA/GR,CAdJ,CADJ,CAJJ,CADJ,cA2II,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAC,YAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,eACI,oBAAC,SAAD,EACI,SAAS,CAAE,KAAKvE,KAAL,CAAWF,KAAX,CAAiB0F,cAAjB,CAAkC,KAAKxF,KAAL,CAAWF,KAAX,CAAiB0F,cAAnD,CAAoE,YADnF,CAEI,SAAS,CAAE,KAAKgC,SAAL,EAFf,CAEiC,WAAW,CAAE,KAAKnC,WAFnD,EADJ,CADJ,CADJ,CADJ,CA3IJ,CAFH,CA6JK,EA9JV,CADJ,CAXJ,CA3GJ,CALJ,CAPJ,cA2SI,oBAAC,WAAD,mBACI,4CACI,oBAAC,KAAD,EACI,QAAQ,KADZ,CAEI,UAAU,KAFd,CAGI,QAAQ,CAAC,oBAHb,CAII,IAAI,CAAE,KAAKrF,KAAL,CAAWF,KAAX,CAAiBsU,YACvB;AALJ,CAMI,MAAM,CAAE,KAAKD,eANjB,CAOI,eAAe,WAAK,KAAKnU,KAAL,CAAWoI,KAAX,EAAoB,KAAKpI,KAAL,CAAWoI,KAAX,GAAqB,CAAzC,CAA6C,aAA7C,CAA6D,EAAlE,qBAPnB,CAQI,QAAQ,CAAC,QARb,CASI,QAAQ,CAAE,KATd,CAUI,YAAY,CAAE,KAVlB,CAWI,kBAAgB,oCAXpB,eAaI,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,eACI,oBAAC,KAAD,CAAO,KAAP,EAAa,KAAK,CAAE,CAAE,cAAe,KAAjB,CAApB,CAA8C,EAAE,CAAC,oCAAjD,EACK,KAAKpI,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CADL,CADJ,cAII,oBAAC,YAAD,EAAc,cAAc,CAAC,MAA7B,EAJJ,CAbJ,cAoBI,oBAAC,KAAD,CAAO,IAAP,mBACI,2BAAK,SAAS,CAAC,qBAAf,eAEI,oBAAC,MACG;AADJ,EAEI,GAAG,CAAE,KAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BgT,OAFrC,CAGI,KAAK,CAAC,KAHV,CAII,MAAM,CAAC,QAJX,CAKI,EAAE,CAAC,cALP,CAMI,SAAS,CAAC,YACd;AACA;AARA,EAFJ,CADJ,CApBJ,CADJ,CADJ,CA3SJ,CA0VQ,KAAKtU,KAAL,CAAWF,KAAX,CAAiBiF,SAAjB,cACI,oBAAC,aAAD,EACI,IAAI,CAAE,KAAK/E,KAAL,CAAWF,KAAX,CAAiBiF,SAD3B,CAEI,IAAI,CAAE,IAFV,CAGI,UAAU,CAAE,KAAK2M,UAHrB,CAII,SAAS,CAAE,KAAK1R,KAAL,CAAWF,KAAX,CAAiBsE,SAJhC,CAKI,UAAU,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB6D,UALjC,CAMI,UAAU,CAAE,KAAK3D,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,cAA/B,CAAgD,KAAKpE,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAAhD,CACN,KAAKrB,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAA/B,EAA6C,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,MAA5E,EAAsF,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAArH,CAAkI,KAAKpE,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAAlI,CACI,KAAKrB,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,iBAA/B,CAAmD,KAAKpE,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CAAnD,CACI,KAAKrB,KAAL,CAAWF,KAAX,CAAiBkF,UATnC,CAUI,WAAW,CAAE,KAAKwR,WAVtB,CAWI,KAAK,CAAE,KAAKxW,KAAL,CAAWF,KAAX,CAAiB+E,SAX5B,CAYI,aAAa,CAAE,KAAKuS,aAZxB,CAaI,YAAY,CAAE,KAAKpX,KAAL,CAAWF,KAAX,CAAiBmc,YAbnC,CAcI,WAAW,CAAE,KAAKjc,KAAL,CAAWxF,WAd5B,CAeI,cAAc,CAAE,KAAKqF,KAAL,CAAWuD,cAAX,EAA6B,EAfjD,CAgBI,eAAe,CAAE,KAAKpD,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA/B,EAA2C,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA1E,CACb6V,oBACA;AACA;AACA;AACA;AALa,CAMX,KAAKja,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,iBAA/B,CACE,KAAK9D,oBADP,CAEI,EAxBd,CA0BI,gBAAgB,CAAE,KAAKT,KAAL,CAAWqc,gBA1BjC,CA2BI,MAAM,CAAE,KAAKlc,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,MAA/B,CAAwC,IAAxC,CAA+C,KA3B3D,CA4BI,YAAY,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB+E,SAAjB,cACV,oBAAC,KAAD,EAAO,SAAS,CAAE,KAAK7E,KAAL,CAAWF,KAAX,CAAiBsE,SAAnC,CACI,eAAe,CAAE,KAAK8O,eAD1B,CAEI,UAAU,CAAE,KAAKlT,KAAL,CAAWF,KAAX,CAAiB6D,UAFjC,CAGI,cAAc,CAAE,KAAK9D,KAAL,CAAWuD,cAAX,EAA6B,EAHjD,EADU,CAMR,KAAKpD,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA/B,EAA2C,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,QAA1E,cACE,oBAAC,gBAAD,EACI,cAAc,CAAE,KAAKvE,KAAL,CAAWuD,cAAX,EAA6B,EADjD,CAEI,eAAe,CAAE,KAAK8P,eAF1B,CAGI,aAAa,CAAE,KAAKtB,aAHxB,CAII,sBAAsB,CAAE,KAAKoB,sBAJjC,CAKI,gBAAgB,CAAE,KAAK+C,gBAL3B,CAMI,UAAU,CAAE,KAAK/V,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CACR,KAAK3C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqB,mBAA5B,CAAgDC,eADxC,CAC0D3F,iBAAiB,CAAC4E,EAP5F,CAQI,IAAI,CAAE,KAAKhC,KAAL,CAAW2b,UAAX,EAAyB,EARnC,CASI,0BAA0B,CAAE,KAAK3b,KAAL,CAAWkS,oBAT3C,CAUI,kBAAkB,CAAE,KAAKlS,KAAL,CAAWoS,kBAVnC,CAWI,UAAU,CAAE,KAAKpS,KAAL,CAAWsS,UAX3B,CAYI,kBAAkB,CAAE,KAAKtS,KAAL,CAAWqS,kBAZnC,CAaI,eAAe,CAAE,KAAKrS,KAAL,CAAWsc,eAbhC,CAcI,uBAAuB,CAAE,KAAKtc,KAAL,CAAWuc,uBAdxC,CAeI,SAAS,CAAE,KAAKvc,KAAL,CAAW2S,mBAAX,EAAkC,EAfjD,CAgBI,OAAO,CAAE,KAAK3S,KAAL,CAAWwc,OAAX,EAAsB,EAhBnC,CAiBI,YAAY,CAAE,KAAKxc,KAAL,CAAWuS,YAAX,EAA2B,EAjB7C,CAkBI,eAAe,CAAE,KAAKvS,KAAL,CAAW+W,eAAX,EAA8B,EAlBnD,CAmBI,aAAa,CAAE,KAAK5W,KAAL,CAAWF,KAAX,CAAiBwc,aAAjB,EAAkC,EAnBrD,CAoBI,gBAAgB,CAAE,KAAKtc,KAAL,CAAWF,KAAX,CAAiByc,uBAAjB,EAA4C,EApBlE,CAqBI,YAAY,CAAE,KAAKvc,KAAL,CAAWF,KAAX,CAAiB0c,YAAjB,EAAiC,EArBnD,CAsBI,YAAY,CAAE,KAAKxc,KAAL,CAAWF,KAAX,CAAiB2c,YAAjB,EAAiC,EAtBnD,CAuBI,qBAAqB,CAAE,KAAKzc,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BC,mBAA5B,EAAmD,EAvB9E,CAwBI,SAAS,CAAE,KAAKvB,KAAL,CAAWF,KAAX,CAAiBsE,SAxBhC,CAyBI,UAAU,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB6D,UAzBjC,CA0BI,QAAQ,CAAE,KAAK3D,KAAL,CAAWF,KAAX,CAAiB4B,QA1B/B,CA2BI,oBAAoB,CAAE,KAAK7B,KAAL,CAAWmS,oBA3BrC,CA4BI,kBAAkB,CAAE,KAAKwB,kBA5B7B,CA6BI,sBAAsB,CAAE,KAAKQ,sBA7BjC,CA8BI,2BAA2B,CAAE,KAAKhU,KAAL,CAAWF,KAAX,CAAiB4c,2BA9BlD,CA+BI,OAAO,CAAE,KAAK7c,KAAL,CAAW8c,OA/BxB,CAgCI,eAAe,CAAE,KAAK9c,KAAL,CAAW8W,eAhChC,CAiCI,WAAW,CAAE,KAAK9W,KAAL,CAAW+c,WAjC5B,CAkCI,mBAAmB,CAAE,KAAK/c,KAAL,CAAWkT,mBAlCpC,EADF,CAqCI,KAAK/S,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,cAA/B,cACE,oBAAC,SAAD,EACI,eAAe,CAAE,KAAK8O,eAD1B,CAEI,oBAAoB,CAAE,KAAK2J,oBAF/B,CAGI,aAAa,CAAE,KAAKjL,aAHxB,CAII,gBAAgB,CAAE,KAAKmE,gBAJ3B,CAKI,QAAQ,CAAE,KAAK/V,KAAL,CAAWF,KAAX,CAAiB4B,QAL/B,CAMI,mBAAmB,CAAE,KAAK1B,KAAL,CAAW8c,mBANpC,CAOI,WAAW,CAAE,KAAK9c,KAAL,CAAW+c,WAP5B,CAQI,aAAa,CAAE,KAAK/c,KAAL,CAAWgd,aAR9B,CASI,sBAAsB,CAAE,KAAKC,sBATjC,CAUI,mBAAmB,CAAE,KAAKjd,KAAL,CAAWiU,mBAVpC,CAWI,OAAO,CAAE,KAAKpU,KAAL,CAAWoK,OAAX,EAAsB,EAXnC,CAYI,qBAAqB,CAAE,KAAKL,qBAZhC,CAaI,eAAe,CAAE,KAAKiC,eAb1B,CAcI,kBAAkB,CAAE,KAAKhM,KAAL,CAAWqd,kBAAX,EAAiC,EAdzD,CAeI,0BAA0B,CAAE,KAAKC,0BAfrC,CAgBI,oBAAoB,CAAE,KAAKC,oBAC3B;AAjBJ,CAkBI,qBAAqB,CAAE,KAAKpd,KAAL,CAAWuE,qBAlBtC,CAmBI,UAAU,CAAE,KAAKvE,KAAL,CAAWU,UAnB3B,CAoBI,UAAU,CAAE,KAAKV,KAAL,CAAW2D,UApB3B,CAqBI,UAAU,CAAE,KAAK3D,KAAL,CAAWgF,UArB3B,CAsBI,YAAY,CAAE,KAAKnF,KAAL,CAAWiL,YAtB7B,CAuBI,eAAe,CAAE,KAAKjL,KAAL,CAAWkL,eAvBhC,CAwBI,yBAAyB,CAAE,KAAKsS,yBAxBpC,CAyBI,kBAAkB,CAAE,KAAKrd,KAAL,CAAWsd,kBAzBnC,CA0BI,kBAAkB,CAAE,KAAKtd,KAAL,CAAWud,kBA1BnC,CA2BI,kBAAkB,CAAE,KAAKvd,KAAL,CAAWwd,kBA3BnC,CA4BI,cAAc,CAAE,KAAK3d,KAAL,CAAWkC,eAAX,EAA8B,KAAKlC,KAAL,CAAWkC,eAAX,CAA2BM,IAA3B,CAAgCkD,cA5BlF,EADF,CA+BI,KAAKvF,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAA/B,EAA6C,KAAKpE,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,UAA5E,cACE,oBAAC,gBAAD,EACI,QAAQ,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB4B,QAD/B,CAEI,SAAS,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiBsE,SAFhC,CAGI,gBAAgB,CAAE,KAAK2R,gBAH3B,CAII,cAAc,CAAE,KAAKlW,KAAL,CAAWuD,cAJ/B,CAKI,eAAe,CAAE,KAAK8P,eAL1B,CAMI,WAAW,CAAE,KAAKlT,KAAL,CAAWF,KAAX,CAAiB+O,WAAjB,EAAgC,EANjD,EADF,CASI,KAAK7O,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,MAA/B,cACE,oBAAC,IAAD,EAAM,SAAS,CAAC,KAAhB,eACI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,QAAD,EACI,QAAQ,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB4B,QAD/B,CAEI,kBAAkB,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bmc,kBAFpD,CAGI,cAAc,CAAElD,cAHpB,EADJ,CADJ,CADF,CAUI,KAAKva,KAAL,CAAWF,KAAX,CAAiBsE,SAAjB,GAA+B,iBAA/B,cACE,oBAAC,cAAD,EACI,QAAQ,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB4B,QAD/B,CAEI,SAAS,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiBsE,SAFhC,CAGI,gBAAgB,CAAE,KAAKvE,KAAL,CAAW6d,gBAHjC,CAII,oBAAoB,CAAE,KAAK7d,KAAL,CAAW4Q,oBAJrC,CAKI,wBAAwB,CAAE,KAAK5Q,KAAL,CAAWgO,wBALzC,CAMI,aAAa,CAAE,KAAK+D,aANxB,CAOI,gBAAgB,CAAE,KAAK/R,KAAL,CAAW+N,gBAPjC,CAQI,UAAU,CAAE,KAAK5N,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CARhB,CASI,eAAe,CAAE,KAAK6K,eAT1B,CAUI,QAAQ,CAAE,KAAKrM,KAAL,CAAW8d,QAVzB,CAWI,iBAAiB,CAAE,KAAK9d,KAAL,CAAW+d,iBAXlC,CAYI,OAAO,CAAE,KAAKjQ,OAZlB,CAaI,eAAe,CAAE,KAAKuF,eAb1B,CAcI,WAAW,CAAE,KAAKlT,KAAL,CAAWF,KAAX,CAAiB+O,WAAjB,EAAgC,EAdjD,CAeI,QAAQ,CAAE,KAAK7O,KAAL,CAAWF,KAAX,CAAiB8M,QAf/B,CAgBI,yBAAyB,CAAE,KAAK/M,KAAL,CAAWuQ,yBAhB1C,CAiBI,qBAAqB,CAAE,KAAKpQ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAjBvD,CAkBI,UAAU,CAAE,KAAK9Q,KAAL,CAAWF,KAAX,CAAiB+d,UAlBjC,CAmBI,SAAS,CAAE,KAAK7d,KAAL,CAAWF,KAAX,CAAiBge,SAnBhC,CAoBI,WAAW,CAAE,KAAKxS,WApBtB,CAqBI,QAAQ,CAAE,KAAKtL,KAAL,CAAWF,KAAX,CAAiBie,QArB/B,CAsBI,SAAS,CAAE,KAAK/d,KAAL,CAAWF,KAAX,CAAiB0F,cAtBhC,CAuBI,aAAa,CAAE,KAAKxF,KAAL,CAAWF,KAAX,CAAiBke,aAvBpC,CAwBI,YAAY,CAAE,KAAKhe,KAAL,CAAWF,KAAX,CAAiB4M,YAxBnC,CAyBI,cAAc,CAAE,KAAK7M,KAAL,CAAWuD,cAzB/B,CA0BI,YAAY,CAAE,KAAK6a,YA1BvB,CA2BI,aAAa,CAAE,KAAKje,KAAL,CAAWF,KAAX,CAAiB+M,aA3BpC,CA4BI,UAAU,CAAE,KAAK6E,UA5BrB,EADF,CA8BO,EAvJjC,EADJ,CA2JM,EArfd,CAwfK,KAAK7R,KAAL,CAAW2R,gBAAX,CAA8B,KAAK0M,YAAL,EAA9B,CAAoD,EAxfzD,CADJ,CA4fH,C,kCAunBD,4BAAmBC,aAAnB,CAAkC,CAE9B,iBAe8E,KAAKte,KAfnF,CAAM0E,qBAAN,cAAMA,qBAAN,CAA6B7D,UAA7B,cAA6BA,UAA7B,CAAyC0C,cAAzC,cAAyCA,cAAzC,CAAyDgb,UAAzD,cAAyDA,UAAzD,CACIlB,kBADJ,cACIA,kBADJ,CAEImB,gBAFJ,cAEIA,gBAFJ,CAEsB/Z,SAFtB,cAEsBA,SAFtB,CAEiCga,YAFjC,cAEiCA,YAFjC,CAE+CC,YAF/C,cAE+CA,YAF/C,CAGIC,WAHJ,cAGIA,WAHJ,CAGiBC,oBAHjB,cAGiBA,oBAHjB,CAGuCnhB,UAHvC,cAGuCA,UAHvC,CAGmDqa,gBAHnD,cAGmDA,gBAHnD,CAIIta,mBAJJ,cAIIA,mBAJJ,CAIyB0R,cAJzB,cAIyBA,cAJzB,CAIyCwM,WAJzC,cAIyCA,WAJzC,CAIsDC,UAJtD,cAIsDA,UAJtD,CAKIzS,qBALJ,cAKIA,qBALJ,CAK2BkE,IAL3B,cAK2BA,IAL3B,CAKiCC,IALjC,cAKiCA,IALjC,CAMIwR,QANJ,cAMIA,QANJ,CAMcC,QANd,cAMcA,QANd,CAMwBpW,cANxB,cAMwBA,cANxB,CAMwC0J,kBANxC,cAMwCA,kBANxC,CAM4DF,oBAN5D,cAM4DA,oBAN5D,CAOIoK,eAPJ,cAOIA,eAPJ,CAOqBhK,UAPrB,cAOqBA,UAPrB,CAOiCD,kBAPjC,cAOiCA,kBAPjC,CAOqDM,mBAPrD,cAOqDA,mBAPrD,CAO0EzQ,eAP1E,cAO0EA,eAP1E,CAQIqa,uBARJ,cAQIA,uBARJ,CAQ6BC,OAR7B,cAQ6BA,OAR7B,CAQsCzF,eARtC,cAQsCA,eARtC,CAQuD3M,OARvD,cAQuDA,OARvD,CAQgEa,YARhE,cAQgEA,YARhE,CASIC,eATJ,cASIA,eATJ,CASqBzI,oBATrB,cASqBA,oBATrB,CAS2CF,iBAT3C,cAS2CA,iBAT3C,CAS8Dua,OAT9D,cAS8DA,OAT9D,CAUIhG,eAVJ,cAUIA,eAVJ,CAUqBiI,cAVrB,cAUqBA,cAVrB,CAUqCC,iBAVrC,cAUqCA,iBAVrC,oCAUwDC,YAVxD,CAUwDA,YAVxD,gCAUuE,EAVvE,uBAWIjX,eAXJ,cAWIA,eAXJ,CAWqBkX,kBAXrB,cAWqBA,kBAXrB,CAWyCjX,mBAXzC,cAWyCA,mBAXzC,CAW8D4V,gBAX9D,cAW8DA,gBAX9D,CAYIjN,oBAZJ,cAYIA,oBAZJ,CAY0BkN,QAZ1B,cAY0BA,QAZ1B,CAYoC/P,gBAZpC,cAYoCA,gBAZpC,CAYsDC,wBAZtD,cAYsDA,wBAZtD,CAaI+P,iBAbJ,cAaIA,iBAbJ,CAauBxN,yBAbvB,cAauBA,yBAbvB,CAakD4N,aAblD,cAakDA,aAblD,CAcItR,YAdJ,cAcIA,YAdJ,CAckBxC,gBAdlB,cAckBA,gBAdlB,CAcoC8U,iBAdpC,cAcoCA,iBAdpC,CAcuD5M,YAdvD,cAcuDA,YAdvD,CAeIJ,oBAfJ,cAeIA,oBAfJ,CAe0BiN,aAf1B,cAe0BA,aAf1B,CAeyClM,mBAfzC,cAeyCA,mBAfzC,CAe8D6J,WAf9D,cAe8DA,WAf9D,CAgBA,GAAIsC,CAAAA,cAAc,CAAG,KAArB,CACA,GAAIC,CAAAA,IAAI,CAAG,KAAX,CACAjV,gBAAgB,CAAG,EAAnB,CACA;AAEA,GAAI,KAAKlK,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BjE,mBAA5B,EACA,KAAK2C,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BjE,mBAA5B,GAAoD8gB,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BjE,mBADvF,CAC4G,CACxG,GAAIiH,CAAAA,UAAS,CAAG,CACZ2I,IAAI,CAAE,CADM,CACHC,IAAI,CAAE,KAAKlN,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA4BxS,QAAQ,CAAC,KAAK7G,KAAL,CAAWF,KAAX,CAAiBuZ,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CACrF;AAFY,CAAhB,CAIA8F,IAAI,CAAG,IAAP,CACH,CAED,GAAI,KAAKnf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,GAAgC6c,aAAa,CAACre,KAAd,CAAoBwB,UAAxD,CAAoE,CAChE6d,IAAI,CAAG,IAAP,CACAD,cAAc,CAAG,IAAjB,CAGA5hB,UAAU,CAAGO,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BhE,UAA5B,EAA0C,EAA3C,CAA+C,iBAA/C,CAAkE,iBAAlE,CAAqF,iBAArF,CAAwG,WAAxG,CAAqH,iBAArH,CAAwI,KAAxI,CAAhC,CACAqa,gBAAgB,CAAG9Z,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqW,gBAA5B,EAAgD,EAAjD,CAAqD,cAArD,CAAqE,cAArE,CAAqF,SAArF,CAAgG,WAAhG,CAA6G,cAA7G,CAA6H,KAA7H,CAAtC,CACAta,mBAAmB,CAAGQ,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BjE,mBAA5B,EAAmD,EAApD,CAAwD,iBAAxD,CAA2E,iBAA3E,CAA8F,SAA9F,CAAyG,WAAzG,CAAsH,iBAAtH,CAAyI,KAAzI,CAAzC,CACA0R,cAAc,CAAGlR,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAA8C,EAA/C,CAAmD,oBAAnD,CAAyE,eAAzE,CAA0F,SAA1F,CAAqG,WAArG,CAAkH,oBAAlH,CAAwI,KAAxI,CAApC,CACAwM,WAAW,CAAG1d,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bia,WAA5B,EAA2C,EAA5C,CAAgD,gBAAhD,CAAkE,mBAAlE,CAAuF,WAAvF,CAAoG,gBAApG,CAAsH,KAAtH,CAAjC,CACAC,UAAU,CAAG3d,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bka,UAA5B,EAA0C,EAA3C,CAA+C,WAA/C,CAA4D,WAA5D,CAAyE,WAAzE,CAAsF,WAAtF,CAAmG,KAAnG,CAAhC,CACAzS,qBAAqB,CAAGlL,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByH,qBAA5B,EAAqD,EAAtD,CAA0D,4BAA1D,CAAwF,cAAxF,CACvC,WADuC,CAC1B,4BAD0B,CACI,KADJ,CAA3C,CAEAkJ,kBAAkB,CAAGpU,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8d,kBAA5B,EAAkD,EAAnD,CAAuD,oBAAvD,CAA6E,oBAA7E,CACpC,WADoC,CACvB,oBADuB,CACD,KADC,CAAxC,CAEAjN,UAAU,CAAGtU,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+d,UAA5B,EAA0C,EAA3C,CAA+C,qBAA/C,CAAsE,iBAAtE,CAC5B,WAD4B,CACf,iBADe,CACI,KADJ,CAAhC,CAEAlD,eAAe,CAAGte,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bge,eAA5B,EAA+C,EAAhD,CAAoD,iBAApD,CAAuE,iBAAvE,CACjC,WADiC,CACpB,iBADoB,CACD,KADC,CAArC,CAEAjD,OAAO,CAAGxe,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bie,OAA5B,EAAuC,EAAxC,CAA4C,cAA5C,CAA4D,cAA5D,CACzB,WADyB,CACZ,cADY,CACI,KADJ,CAA7B,CAEA5C,OAAO,CAAG9e,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bqb,OAA5B,EAAuC,EAAxC,CAA4C,cAA5C,CAA4D,cAA5D,CACzB,WADyB,CACZ,cADY,CACI,KADJ,CAA7B,CAEAe,gBAAgB,CAAG7f,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Boc,gBAA5B,EAAgD,EAAjD,CAAqD,kBAArD,CAAyE,kBAAzE,CAClC,WADkC,CACrB,kBADqB,CACD,KADC,CAAtC,CAEAC,QAAQ,CAAG9f,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bqc,QAA5B,EAAwC,EAAzC,CAA6C,eAA7C,CAA8D,eAA9D,CAC1B,WAD0B,CACb,eADa,CACI,KADJ,CAA9B,CAEAC,iBAAiB,CAAG/f,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsc,iBAA5B,EAAiD,EAAlD,CAAsD,0BAAtD,CAAkF,cAAlF,CACnC,WADmC,CACtB,0BADsB,CACM,KADN,CAAvC,CAEAxL,YAAY,CAAGvU,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bke,YAA5B,EAA4C,EAA7C,CAAiD,iBAAjD,CAAoE,eAApE,CAC9B,WAD8B,CACjB,iBADiB,CACE,KADF,CAAlC,CAEA5C,WAAW,CAAG/e,mBAAmB,CAAC,KAAKmC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsb,WAA5B,EAA2C,EAA5C,CAAgD,oBAAhD,CAAsE,cAAtE,CAC7B,WAD6B,CAChB,oBADgB,CACM,KADN,CAAjC,CAGA3P,IAAI,CAAG,KAAKjN,KAAL,CAAWF,KAAX,CAAiBmN,IAAjB,GAA0B9K,SAA1B,CAAsC8K,IAAtC,CAA6C,KAAKjN,KAAL,CAAWF,KAAX,CAAiBmN,IAArE,CACAC,IAAI,CAAG,KAAKlN,KAAL,CAAWF,KAAX,CAAiBoN,IAAjB,EAAyBA,IAAhC,CACAwR,QAAQ,CAAG,KAAK1e,KAAL,CAAWF,KAAX,CAAiB4e,QAAjB,GAA8Bvc,SAA9B,CAA0Cuc,QAA1C,CAAqD,KAAK1e,KAAL,CAAWF,KAAX,CAAiB4e,QAAjF,CACAC,QAAQ,CAAG,KAAK3e,KAAL,CAAWF,KAAX,CAAiB6e,QAAjB,EAA6BA,QAAxC,CACA,GAAIc,CAAAA,kBAAkB,CAAG,CACrB3e,kBAAkB,CAAE7D,iBAAiB,CAACyiB,OADjB,CAErB1E,aAAa,CAAE,KAAKhb,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,aAAN,CAA9B,CAFM,CAGrBse,aAAa,CAAE,SAHM,CAAzB,CAKA,GAAMC,CAAAA,eAAe,CAAG,KAAK5f,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4ByN,cAA5B,EAA8C,EAAtE,CAEA,GAAM8Q,CAAAA,kBAAkB,CAAGnV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAegV,eAAf,CAAX,CAA3B,CAEA,GAAM9L,CAAAA,KAAK,CAAG+L,kBAAkB,CAACzV,SAAnB,CAA6B,SAAA/H,IAAI,QAAIA,CAAAA,IAAI,CAACvB,kBAAL,GAA4B7D,iBAAiB,CAACyiB,OAAlD,EAAjC,CAAd,CACA,GAAIG,kBAAkB,CAACrd,MAAnB,CAA4B,CAA5B,EAAiCsR,KAAK,GAAK,CAAC,CAAhD,CAAmD,CAC/C+L,kBAAkB,CAACtV,IAAnB,CAAwBkV,kBAAxB,EACH,CAEDlX,cAAc,CAAGsX,kBAAjB,CACAviB,UAAU,CAAGA,UAAU,CAACsD,GAAX,CAAe,YAAf,CAAb,CACA+W,gBAAgB,CAAGA,gBAAgB,CAAC/W,GAAjB,CAAqB,YAArB,CAAnB,CACAvD,mBAAmB,CAAGA,mBAAmB,CAACuD,GAApB,CAAwB,YAAxB,CAAtB,CACAmO,cAAc,CAAGA,cAAc,CAACnO,GAAf,CAAmB,YAAnB,CAAjB,CACA2a,WAAW,CAAGA,WAAW,CAAC3a,GAAZ,CAAgB,YAAhB,CAAd,CACA4a,UAAU,CAAGA,UAAU,CAAC5a,GAAX,CAAe,YAAf,CAAb,CACAmI,qBAAqB,CAAGA,qBAAqB,CAACnI,GAAtB,CAA0B,YAA1B,CAAxB,CACAqR,kBAAkB,CAAGA,kBAAkB,CAACrR,GAAnB,CAAuB,YAAvB,CAArB,CACAuR,UAAU,CAAGA,UAAU,CAACvR,GAAX,CAAe,YAAf,CAAb,CACAub,eAAe,CAAGA,eAAe,CAACvb,GAAhB,CAAoB,YAApB,CAAlB,CACAyb,OAAO,CAAGA,OAAO,CAACzb,GAAR,CAAY,YAAZ,CAAV,CACA+b,OAAO,CAAGA,OAAO,CAAC/b,GAAR,CAAY,YAAZ,CAAV,CACA8c,gBAAgB,CAAGA,gBAAgB,CAAC9c,GAAjB,CAAqB,YAArB,CAAnB,CACA+c,QAAQ,CAAGA,QAAQ,CAAC/c,GAAT,CAAa,YAAb,CAAX,CACAgd,iBAAiB,CAAGA,iBAAiB,CAAChd,GAAlB,CAAsB,YAAtB,CAApB,CACAwR,YAAY,CAAGA,YAAY,CAACxR,GAAb,CAAiB,YAAjB,CAAf,CACAgc,WAAW,CAAGA,WAAW,CAAChc,GAAZ,CAAgB,YAAhB,CAAd,CACA;AAEAqJ,OAAO,CAAG,KAAKjK,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2I,OAAtC,CAGAa,YAAY,CAAG,KAAf,CACAC,eAAe,CAAG,IAAlB,CACAhJ,eAAe,CAAG,KAAK/B,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA5B,CACd,CACIsF,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA5B,CAAuDsL,eADlE,CAEIhK,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAA5B,CAAuDjF,eAFlE,CAGIM,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0F,0BAHtC,CADc,CAKV,EALR,CAOA,GAAI,KAAKhH,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,GAAoD2L,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BkR,mBAAvF,CAA4G,CACxGA,mBAAmB,CAAG,KAAKxS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,CAClB,CACIlG,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,CAAgDvO,SAD3D,CAEIqE,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAA5B,CAAgDhR,SAF3D,CAGIa,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BkR,mBAHtC,CADkB,CAKd,EALR,CAMA,GAAIvO,CAAAA,SAAS,CAAGuO,mBAAmB,CAACnQ,IAApC,CACA;AACAe,cAAc,gCAAQA,cAAR,MAAwBa,SAAS,CAATA,SAAxB,EAAd,CACAib,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bwe,uBAA5B,GAAwD3B,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+Bwe,uBAA3F,CAAoH,CAChH1D,uBAAuB,CAAG,KAAKpc,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bwe,uBAA5B,CACtB,CACIxT,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bwe,uBAA5B,CAAoDC,eAD/D,CAEIzX,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bwe,uBAA5B,CAAoDE,eAF/D,CAGI3d,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bwe,uBAHtC,CADsB,CAKlB,EALR,CAMAZ,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsV,eAA5B,GAAgDuH,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BsV,eAAnF,CAAoG,CAChGA,eAAe,CAAG,KAAK5W,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsV,eAA5B,CACd,CACItK,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsV,eAA5B,CAA4CqJ,YADvD,CAEI3X,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsV,eAA5B,CAA4CsJ,YAFvD,CAGI7d,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsV,eAHtC,CADc,CAKV,EALR,CAMA,GAAIqJ,CAAAA,YAAY,CAAGrJ,eAAe,CAACvU,IAAnC,CACAe,cAAc,gCAAQ,KAAKvD,KAAL,CAAWuD,cAAnB,MAAmC6c,YAAY,CAAZA,YAAnC,EAAoD7c,cAApD,CAAd,CACA8b,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6e,0BAA5B,GAA2DhC,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B6e,0BAA9F,CAA0H,CACtHpO,oBAAoB,CAAG,KAAK/R,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6e,0BAA5B,CACnB,CACI7T,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6e,0BAA5B,CAAuDjG,kBADlE,CAEI5R,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6e,0BAA5B,CAAuDtN,kBAFlE,CAGIxQ,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B6e,0BAHtC,CADmB,CAKf,EALR,CAMA,GAAIjG,CAAAA,kBAAkB,CAAGnI,oBAAoB,CAAC1P,IAA9C,CACAe,cAAc,gCAAQA,cAAR,MAAwB8W,kBAAkB,CAAlBA,kBAAxB,EAAd,CACA;AACAgF,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Q,kBAA5B,GAAmDiM,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B4Q,kBAAtF,CAA0G,CACtGA,kBAAkB,CAAG,KAAKlS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Q,kBAA5B,CACjB,CACI5F,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Q,kBAA5B,CAA+CkO,eAD1D,CAEI9X,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Q,kBAA5B,CAA+CY,eAF1D,CAGIzQ,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B4Q,kBAHtC,CADiB,CAKb,EALR,CAMA,GAAIkO,CAAAA,eAAe,CAAGlO,kBAAkB,CAAC7P,IAAzC,CACA;AACAe,cAAc,gCAAOA,cAAP,MAAsBgd,eAAe,CAAfA,eAAtB,EAAd,CACAlB,cAAc,CAAG,IAAjB,CAGH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0Q,oBAA5B,GAAqDmM,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B0Q,oBAAxF,CAA8G,CAC1GA,oBAAoB,CAAG,KAAKhS,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0Q,oBAA5B,CACnB,CACI1F,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0Q,oBAA5B,CAAiDiN,aAD5D,CAEI3W,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0Q,oBAA5B,CAAiDc,eAF5D,CAGIzQ,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0Q,oBAHtC,CADmB,CAKf7P,SALR,CAMA,GAAI8c,CAAAA,cAAa,CAAGjN,oBAAoB,EAAIA,oBAAoB,CAAC3P,IAAjE,CACA;AACAe,cAAc,gCAAOA,cAAP,MAAsB6b,aAAa,CAAbA,cAAtB,EAAd,CACAC,cAAc,CAAG,IAAjB,CAGH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsb,WAA5B,GAA4CuB,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+Bsb,WAA/E,CAA4F,CACxF7J,mBAAmB,CAAG,KAAK/S,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+e,qBAA5B,CAClB,CACI/T,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+e,qBAA5B,CAAkDC,YAD7D,CAEIhY,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+e,qBAA5B,CAAkD5N,kBAF7D,CAGIpQ,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B+e,qBAHtC,CADkB,CAKdle,SALR,CAMA,GAAIme,CAAAA,YAAY,CAAGvN,mBAAmB,EAAIA,mBAAmB,CAAC1Q,IAA9D,CACAe,cAAc,gCAAQ,KAAKvD,KAAL,CAAWuD,cAAnB,MAAmCkd,YAAY,CAAZA,YAAnC,EAAoDld,cAApD,CAAd,CACA8b,cAAc,CAAG,IAAjB,CAGH,CAGD,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAA1B,GAAwC2Z,aAAa,CAACre,KAAd,CAAoB4B,QAApB,CAA6B8C,SAAzE,CAAoF,CAChFD,qBAAqB,CAAG,EAAxB,CACA,GAAI,KAAKvE,KAAL,CAAWF,KAAX,CAAiByE,qBAArB,CAA4C,CACxC,KAAKvE,KAAL,CAAWF,KAAX,CAAiByE,qBAAjB,CAAuC,KAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAjE,GAA+E+b,MAAM,CAACC,MAAP,CAAc,KAAKxgB,KAAL,CAAWF,KAAX,CAAiByE,qBAAjB,CAAuC,KAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAjE,CAAd,EAA2F2F,GAA3F,CAA+F,SAAA9H,IAAI,QAC9KkC,CAAAA,qBAAqB,CAACgG,IAAtB,CAA2BlI,IAAI,CAACxB,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACDH,UAAU,CAAGjD,aAAa,CAAC,KAAKuC,KAAL,CAAWF,KAAX,CAAiByE,qBAAlB,CAAyC,KAAKvE,KAAL,CAAWF,KAAX,CAAiB4B,QAAjB,CAA0B8C,SAAnE,CAA1B,CACA,KAAKtE,QAAL,CAAc,CAAEqE,qBAAqB,CAArBA,qBAAF,CAAyB7D,UAAU,CAAVA,UAAzB,CAAd,EACAwe,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiB2gB,qBAAjB,GAA2CtC,aAAa,CAACre,KAAd,CAAoB2gB,qBAAnE,CAA0F,CACtFvD,kBAAkB,CAAG,KAAKld,KAAL,CAAWF,KAAX,CAAiB2gB,qBAAtC,CACAvB,cAAc,CAAG,IAAjB,CACA;AACH,CAGD,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA5B,GAA6D+U,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B8H,4BAAhG,CAA8H,CAC1H9G,oBAAoB,CAAG,KAAKtC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA5B,CACnB,CACIkD,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA5B,CAAyDsX,YADpE,CAEIpY,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAA5B,CAAyDV,0BAFpE,CAGIrG,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8H,4BAHtC,CADmB,CAKf,EALR,CAMA8V,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,GAAoDkV,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B2H,mBAAvF,CAA4G,CACxG7G,iBAAiB,CAAG,KAAKpC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,CAChB,CACIqD,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,CAAgD+R,aAD3D,CAEI1S,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAA5B,CAAgDnI,kBAF3D,CAGIuB,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B2H,mBAHtC,CADgB,CAKZ,EALR,CAMAiW,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqV,eAA5B,GAAgDwH,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BqV,eAAnF,CAAoG,CAChGA,eAAe,CAAG,KAAK3W,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqV,eAA5B,CACd,CACIrK,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqV,eAA5B,CAA4CpE,YADvD,CAEIjK,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqV,eAA5B,CAA4C9T,YAFvD,CAGIR,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BqV,eAHtC,CADc,CAKV,EALR,CAMA,GAAIpE,CAAAA,YAAY,CAAGoE,eAAe,CAACtU,IAAnC,CACAe,cAAc,gCAAQ,KAAKvD,KAAL,CAAWuD,cAAnB,MAAmCmP,YAAY,CAAZA,YAAnC,EAAoDnP,cAApD,CAAd,CACA8b,cAAc,CAAG,IAAjB,CAEH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAA5B,GAAqD0N,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BmP,oBAAxF,CAA8G,CAC1GA,oBAAoB,CAAG,KAAKzQ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAA5B,CACnB,CACInE,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAA5B,CAAiDC,iBAD5D,CAEIpI,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAA5B,CAAiDE,iBAF5D,CAGItO,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAHtC,CADmB,CAKf,EALR,CAMArN,cAAc,CAAC,mBAAD,CAAd,CAAsC,KAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BmP,oBAA5B,CAAiDC,iBAAvF,CACAwO,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAA5B,GAAyDsQ,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BuM,wBAA5F,CAAsH,CAClHA,wBAAwB,CAAG,KAAK7N,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAA5B,CACvB,CACIvB,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAA5B,CAAqDqC,gBADhE,CAEI5H,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAA5B,CAAqDoC,gBAFhE,CAGI5N,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAHtC,CADuB,CAKnB,EALR,CAMAzK,cAAc,CAAC,kBAAD,CAAd,CAAqC,KAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BuM,wBAA5B,CAAqDqC,gBAA1F,CACAgP,cAAc,CAAG,IAAjB,CAEH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,GAAiDuQ,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BsM,gBAApF,CAAsG,CAClGA,gBAAgB,CAAG,KAAK5N,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,CACf,CACItB,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,CAA6C2C,aADxD,CAEIjI,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,CAA6CoC,aAFxD,CAGI3N,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAHtC,CADe,CAKX,EALR,CAMAxK,cAAc,CAAC,eAAD,CAAd,CAAkC,KAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BsM,gBAA5B,CAA6C2C,aAA/E,CACA2O,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,GAA0D+N,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B8O,yBAA7F,CAAwH,CACpHA,yBAAyB,CAAG,KAAKpQ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,CACxB,CACI9D,KAAK,CAAE,KAAKtM,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,CAAsDD,YADjE,CAEI7H,KAAK,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,CAAsDhL,wBAFjE,CAGI/C,IAAI,CAAE,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAHtC,CADwB,CAKpB,EALR,CAMAhN,cAAc,CAAC,cAAD,CAAd,CAAiC,KAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,EAAyD,KAAKpQ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,CAAsDD,YAAtD,EAAsE,IAA/H,CAC7B,KAAKnQ,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B8O,yBAA5B,CAAsDD,YADzB,CACwC,EADzE,CAEA+O,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,GAAsDqN,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+BwP,qBAAzF,CAAgH,CAC5G;AACA1N,cAAc,CAAC,mBAAD,CAAd,CAAsC,KAAKpD,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,EAClC,KAAK9Q,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD9B,iBAAlD,EAAuE,IADrC,CAC4C,KAAKhP,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4BwP,qBAA5B,CAAkD9B,iBAD9F,CACkH,EADxJ,CAEA5L,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,UAAD,CAAd,CAA6B,EAA7B,CACA8b,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiB6gB,qBAArB,CAA4C,CACxCvd,cAAc,CAAG,EAAjB,CACA8b,cAAc,CAAG,IAAjB,CACH,CAGD,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0c,aAA5B,GAA8CG,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+B0c,aAAjF,CAAgG,CAC5F;AACAA,aAAa,CAAG,KAAKhe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0c,aAA5B,EACZ,KAAKhe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0c,aAA5B,EAA6C,IADjC,CACwC,KAAKhe,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4B0c,aADpE,CACoF,EADpG,CAEAkB,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,GAAkCyR,aAAa,CAACre,KAAd,CAAoB4M,YAA1D,CAAwE,CACpEtJ,cAAc,CAAC,cAAD,CAAd,CAAiC,KAAKpD,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,EAC7B,KAAK1M,KAAL,CAAWF,KAAX,CAAiB4M,YAAjB,EAAiC,IADJ,CACW,KAAK1M,KAAL,CAAWF,KAAX,CAAiB4M,YAD5B,CAC2C,EAD5E,CAEAwS,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBsD,cAAjB,GAAoC+a,aAAa,CAACre,KAAd,CAAoBsD,cAA5D,CAA4E,CACxEA,cAAc,CAAG,KAAKpD,KAAL,CAAWF,KAAX,CAAiBsD,cAAlC,CACA8b,cAAc,CAAG,IAAjB,CACH,CAED,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsf,aAA5B,EAA6C,KAAK5gB,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsf,aAA5B,GAA8CzC,aAAa,CAACre,KAAd,CAAoBwB,UAApB,CAA+Bsf,aAA9H,CAA6I,CACzI,GAAMC,CAAAA,aAAa,CAAGnW,IAAI,CAACC,KAAL,CAAW,KAAK3K,KAAL,CAAWF,KAAX,CAAiBwB,UAAjB,CAA4Bsf,aAA5B,CAC7Bld,QAD6B,CACpB4E,KADS,CAAtB,CAEA0W,iBAAiB,CAAG6B,aAAa,CAACC,cAAd,CAA6BC,YAA7B,CAA4CF,aAAa,CAACC,cAAd,CAA6BC,YAAzE,CAAwF,EAA5G,CACAjC,YAAY,CAAC,CAAD,CAAZ,CAAkB+B,aAAa,CAACC,cAAd,CAA6BE,iBAA7B,CAA+C,CAA/C,EAAoDH,aAAa,CAACC,cAAd,CAA6BE,iBAA7B,CAA+C,CAA/C,CAApD,CAAwG,EAA1H,CACApC,cAAc,CAAGiC,aAAa,CAACI,cAAd,CAA+BJ,aAAa,CAACI,cAA7C,CAA8D,EAA/E,CACApC,iBAAiB,CAAGgC,aAAa,CAACK,iBAAd,CAAkCL,aAAa,CAACK,iBAAhD,CAAoE,EAAxF,CACAnC,kBAAkB,CAAG8B,aAAa,CAAC9B,kBAAd,CAAmC8B,aAAa,CAAC9B,kBAAjD,CAAsE,EAA3F,CACAjX,mBAAmB,oBAAOiX,kBAAP,CAAnB,CACAlX,eAAe,8BAAO+W,cAAP,qBAA0BC,iBAA1B,qBAAgDG,iBAAiB,CAACmC,KAAlB,CAAwB,CAAxB,CAAhD,qBAA+ErC,YAA/E,EAAf,CACAI,cAAc,CAAG,IAAjB,CACH,CACJ,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,GAAI,KAAKlf,KAAL,CAAWF,KAAX,CAAiBsD,cAAjB,GAAoC+a,aAAa,CAACre,KAAd,CAAoBsD,cAA5D,CAA4E,CACxE8b,cAAc,CAAG,IAAjB,CACD9b,cAAc,CAAG,KAAKpD,KAAL,CAAWF,KAAX,CAAiBsD,cAAlC,CACC;AACH,CAID,GAAI8b,cAAJ,CAAoB,CAChB,KAAKhf,QAAL,CAAc,CACVqE,qBAAqB,CAArBA,qBADU,CACa7D,UAAU,CAAVA,UADb,CACyB0C,cAAc,CAAdA,cADzB,CAEVgb,UAAU,CAAVA,UAFU,CAEElB,kBAAkB,CAAlBA,kBAFF,CAGVmB,gBAAgB,CAAhBA,gBAHU,CAGQ/Z,SAAS,CAATA,SAHR,CAGmBga,YAAY,CAAZA,YAHnB,CAGiCC,YAAY,CAAZA,YAHjC,CAG+CC,WAAW,CAAXA,WAH/C,CAIVC,oBAAoB,CAApBA,oBAJU,CAIYnhB,UAAU,CAAVA,UAJZ,CAIwBqa,gBAAgB,CAAhBA,gBAJxB,CAI0Cta,mBAAmB,CAAnBA,mBAJ1C,CAKV0R,cAAc,CAAdA,cALU,CAKMwM,WAAW,CAAXA,WALN,CAKmBC,UAAU,CAAVA,UALnB,CAK+BzS,qBAAqB,CAArBA,qBAL/B,CAKsDkE,IAAI,CAAJA,IALtD,CAK4DC,IAAI,CAAJA,IAL5D,CAMVwR,QAAQ,CAARA,QANU,CAMAC,QAAQ,CAARA,QANA,CAMUpW,cAAc,CAAdA,cANV,CAM0BwJ,oBAAoB,CAApBA,oBAN1B,CAMgDE,kBAAkB,CAAlBA,kBANhD,CAOVE,UAAU,CAAVA,UAPU,CAOED,kBAAkB,CAAlBA,kBAPF,CAOsBM,mBAAmB,CAAnBA,mBAPtB,CAO2CzQ,eAAe,CAAfA,eAP3C,CAQVoa,eAAe,CAAfA,eARU,CAQOC,uBAAuB,CAAvBA,uBARP,CAQgCC,OAAO,CAAPA,OARhC,CAQyCzF,eAAe,CAAfA,eARzC,CAQ0D3M,OAAO,CAAPA,OAR1D,CASVa,YAAY,CAAZA,YATU,CASIC,eAAe,CAAfA,eATJ,CASqBzI,oBAAoB,CAApBA,oBATrB,CAS2CF,iBAAiB,CAAjBA,iBAT3C,CAS8Dua,OAAO,CAAPA,OAT9D,CAUVhG,eAAe,CAAfA,eAVU,CAUOiI,cAAc,CAAdA,cAVP,CAUuBC,iBAAiB,CAAjBA,iBAVvB,CAU0CC,YAAY,CAAZA,YAV1C,CAUwDjX,eAAe,CAAfA,eAVxD,CAWVkX,kBAAkB,CAAlBA,kBAXU,CAWUjX,mBAAmB,CAAnBA,mBAXV,CAW+B4V,gBAAgB,CAAhBA,gBAX/B,CAWiDjN,oBAAoB,CAApBA,oBAXjD,CAYVkN,QAAQ,CAARA,QAZU,CAYA/P,gBAAgB,CAAhBA,gBAZA,CAYkBC,wBAAwB,CAAxBA,wBAZlB,CAY4C+P,iBAAiB,CAAjBA,iBAZ5C,CAaVxN,yBAAyB,CAAzBA,yBAbU,CAaiB4N,aAAa,CAAbA,aAbjB,CAagCtR,YAAY,CAAZA,YAbhC,CAa8CxC,gBAAgB,CAAhBA,gBAb9C,CAcV8U,iBAAiB,CAAjBA,iBAdU,CAcS5M,YAAY,CAAZA,YAdT,CAcuBJ,oBAAoB,CAApBA,oBAdvB,CAc6CiN,aAAa,CAAbA,aAd7C,CAeVlM,mBAAmB,CAAnBA,mBAfU,CAeW6J,WAAW,CAAXA,WAfX,CAAd,EAiBH,CACJ,C,0CAhsFD,kCAAgC5c,KAAhC,CAAuCH,KAAvC,CAA8C,CAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIG,KAAK,CAACF,KAAN,CAAYmc,YAAZ,GAA6B,EAA7B,EAAmCjc,KAAK,CAACF,KAAN,CAAYmc,YAAZ,GAA6Bpc,KAAK,CAACoc,YAA1E,CAAwF,CACpFhjB,KAAK,CAACiI,IAAN,CAAWlB,KAAK,CAACF,KAAN,CAAYmc,YAAvB,EACAjc,KAAK,CAACF,KAAN,CAAYmc,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAIjc,KAAK,CAACF,KAAN,CAAYshB,KAAZ,GAAsB,EAAtB,EAA4BphB,KAAK,CAACF,KAAN,CAAYshB,KAAZ,GAAsBvhB,KAAK,CAACuhB,KAA5D,CAAmE,CAC/DnoB,KAAK,CAACmoB,KAAN,CAAYphB,KAAK,CAACF,KAAN,CAAYshB,KAAxB,EACAphB,KAAK,CAACF,KAAN,CAAYshB,KAAZ,CAAoB,EAApB,CACH,CACD,GAAIphB,KAAK,CAACF,KAAN,CAAYsD,cAAZ,GAA+BjB,SAAnC,CAA8C,CAC1C,MAAO,CAAEiB,cAAc,CAAE,EAAlB,CAAP,CACH,CACD,MAAO,KAAP,CACA;AACA;AACA;AACH,CAGD;AAEA;AACA;AACA;AACA;AACA;AACA;2BAzFwBrK,KAAK,CAACsoB,S,EAkjHlC,cAAeroB,CAAAA,OAAO,CAAC4G,eAAD,CAAkB,CACpCtF,WAAW,CAAXA,WADoC,CACvBC,UAAU,CAAVA,UADuB,CACXC,WAAW,CAAXA,WADW,CAEpCC,6BAA6B,CAA7BA,6BAFoC,CAELC,yBAAyB,CAAzBA,yBAFK,CAEsBE,4BAA4B,CAA5BA,4BAFtB,CAGpCD,yBAAyB,CAAzBA,yBAHoC,CAIpCE,uBAAuB,CAAvBA,uBAJoC,CAIXC,oBAAoB,CAApBA,oBAJW,CAIWC,wBAAwB,CAAxBA,wBAJX,CAKpCC,uBAAuB,CAAvBA,uBALoC,CAKXC,iBAAiB,CAAjBA,iBALW,CAKQC,8BAA8B,CAA9BA,8BALR,CAMpCC,kBAAkB,CAAlBA,kBANoC,CAMhBC,kBAAkB,CAAlBA,kBANgB,CAMIC,6BAA6B,CAA7BA,6BANJ,CAOpCC,yBAAyB,CAAzBA,yBAPoC,CAOTC,mBAAmB,CAAnBA,mBAPS,CAOYC,mBAAmB,CAAnBA,mBAPZ,CAQpCC,wBAAwB,CAAxBA,wBARoC,CAQVC,mBAAmB,CAAnBA,mBARU,CAQWC,uBAAuB,CAAvBA,uBARX,CASpCC,gBAAgB,CAAhBA,gBAToC,CASlBC,qBAAqB,CAArBA,qBATkB,CAUpCC,eAAe,CAAfA,eAVoC,CAUnBC,QAAQ,CAARA,QAVmB,CAUTC,aAAa,CAAbA,aAVS,CAUMC,kCAAkC,CAAlCA,kCAVN,CAWpCC,mCAAmC,CAAnCA,mCAXoC,CAWCC,mBAAmB,CAAnBA,mBAXD,CAWsBC,6BAA6B,CAA7BA,6BAXtB,CAYpCC,uBAAuB,CAAvBA,uBAZoC,CAYXC,0BAA0B,CAA1BA,0BAZW,CAYiBC,qBAAqB,CAArBA,qBAZjB,CAapCC,iBAAiB,CAAjBA,iBAboC,CAajBC,sBAAsB,CAAtBA,sBAbiB,CAaOC,qBAAqB,CAArBA,qBAbP,CAa8BC,iBAAiB,CAAjBA,iBAb9B,CAcpCC,sBAAsB,CAAtBA,sBAdoC,CAcZC,sBAAsB,CAAtBA,sBAdY,CAcYC,eAAe,CAAfA,eAdZ,CAc6BC,wBAAwB,CAAxBA,wBAd7B,CAcsDC,qBAAqB,CAArBA,qBAC1F;AAfoC,CAAlB,CAAP,CAgBZ9D,UAAU,CAAC6G,aAAD,CAhBE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Nav, FormGroup, FormLabel, Card, Modal, Image, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faEye, faPlay, faPlus, faSync\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport elnimage from '../../assets/image/sheet-view.svg'\r\nimport {\r\n    callService, crudMaster, updateStore,\r\n    getTestInstrumentComboService, getTestInstrumentCategory, getProductBasedInstrument,\r\n    getInstrumentForInstCategory, getBatchCreationDetails, onActionFilterSubmit,\r\n    getProductcategoryAction, createBatchmasterAction, getSamplesForGrid,\r\n    getSelectedBatchCreationDetail, createSampleAction, deleteSampleAction,\r\n    getActiveBatchCreationService, updateBatchcreationAction, deleteBatchCreation,\r\n    batchInitiateAction, getBCRegistrationSubType, batchCompleteAction,\r\n    validateEsignCredential, filterColumnData, getBatchhistoryAction, getBatchSection,\r\n    viewInfo, getIqcSamples, getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial, batchSaveIQCActions, getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction, getBCApprovalConfigVersion, getBCRegistrationType, getTreeByMaterial,\r\n    getNewRegSpecification, cancelIQCSampleAction, batchCancelAction, batchInitiateDatePopup,\r\n    batchCompleteDatePopup, getInstrumentID, getBatchViewResultAction,validateEsignforBatch\r\n    //,batchTAT\r\n} from '../../actions';\r\nimport {\r\n    transactionStatus, designProperties, reportTypeEnum, reportCOAType,\r\n    RegistrationSubType, SampleType\r\n} from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    showEsign, getControlMap, getStartOfDay, getEndOfDay,\r\n    formatInputDate, constructOptionList, rearrangeDateFormat, convertDateValuetoString, CF_encryptionData\r\n} from '../../components/CommonScript';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport BatchCreationFilter from './BatchCreationFilter';\r\nimport AddBatchCreation from './AddBatchCreation';\r\nimport AddBatchinitiate from './AddBatchinitiate';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleTab from './SampleTab';\r\nimport BatchhistoryTab from './BatchhistoryTab';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AddSample from './AddSample';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport ViewInfo from './ViewInfo';\r\nimport { Affix } from 'rsuite';\r\nimport AddMaterialIqc from './AddMaterialIqc';\r\nimport BatchIqcSampleTab from './BatchIqcSampleTab';\r\nimport BatchResultTab from './BatchResultTab';\r\nimport PortalModal from '../../PortalModal';\r\nimport Iframe from 'react-iframe';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BatchCreation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sampleState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const histortState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const iqcsampleState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const viewstate = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        this.state = {\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedFilter: {},\r\n            sampleState,\r\n            histortState,\r\n            iqcsampleState,\r\n            viewstate,\r\n            selectedRecord: {},\r\n            //confirmmsg:this.ConfirmMessage.bind(this),\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sidebarview: false\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.searchFieldList = [\"stestname\", \"sinstrumentcatname\", \"sinstrumentname\", \"sproductname\", \"smanufname\", \"stransactiondate\", \"username\",\r\n            \"stransactionstatus\", \"sdecision\", \"sbatcharno\", \"stransdisplaystatus\"];\r\n\r\n        this.sampleMandatoryFields = [];\r\n        this.copyMandatoryFields = [];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // if (props.Login.masterStatus !== \"\") {\r\n        //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        //        if(props.Login.operation == \"initiate\"){\r\n        //         toast.warn(props.Login.masterStatus);\r\n        //         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\r\n        //        }\r\n        //     }\r\n        // }\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n        // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n        //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n        // }\r\n    }\r\n\r\n\r\n    // const sampleColumnList = [];\r\n\r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n\r\n    completeMandatoryFields = [\r\n        {\r\n            \"idsName\": \"IDS_BATCHCOMPLETEDATE\",\r\n            //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n            \"dataField\": \"dtransactiondate\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n    initiateMandatoryFields = [\r\n        {\r\n            \"idsName\": \"IDS_BATCHINITIATEDATE\",\r\n            //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n            \"dataField\": \"dtransactiondate\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    materialIqcMandatory = [\r\n\r\n        { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"smaterialtypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"smaterialcatname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"smaterialname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"sinventoryid\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n    ]\r\n\r\n    getSamples = (selectedbatchmaster) => {\r\n        const addSampleID = this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get(\"AddSamples\").ncontrolcode\r\n        if (selectedbatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.COMPLETED ||\r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else {\r\n            this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode, this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                this.props.Login.userInfo, this.props.Login.masterData,\r\n                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                    this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                    this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA, addSampleID)\r\n        }\r\n    }\r\n\r\n    createBatchValidation = (addParam) => {\r\n        if (this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined\r\n        ) {\r\n            this.props.getBatchSection(addParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    getIqcSamples = (SelectedBatchmaster) => {\r\n        if (SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDIQC\" }));\r\n        } else {\r\n            let addcontrolcode = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n            let inputData = {};\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            // inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode'] = addcontrolcode;\r\n            // inputData['section']={\r\n            //         nsectioncode: SelectedBatchmaster.nsectioncode\r\n            // };\r\n            inputData['nsectioncode'] = SelectedBatchmaster.nsectioncode;\r\n            inputData['userInfo'] = this.props.Login.userInfo;\r\n            inputData['nbatchmastercode'] = SelectedBatchmaster.nbatchmastercode;\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            this.props.getIqcSamples(inputData, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    deleteRecord = (inputData) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: inputData.selectedRecord.nbatchsampleCode,\r\n                fetchUrl: \"batchcreation/getSampleTabDetails\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let jsondata = inputData.selectedRecord;\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Sample\",\r\n                postParam,\r\n                inputData: {\r\n                    Sample: {\r\n                        \"sarno\": inputData.selectedRecord.sarno,\r\n                        \"ssamplearno\": inputData.selectedRecord.ssamplearno,\r\n                        \"stestname\": inputData.selectedRecord.stestname,\r\n                        \"nbatchsamplecode\": inputData.selectedRecord.nbatchsamplecode,\r\n\r\n                    },\r\n                    \"userInfo\": this.props.Login.userInfo,\r\n                    nbatchsamplecode: inputData.selectedRecord.nbatchsamplecode,\r\n                    masterData: {\r\n                        ...this.props.Login.masterData,\r\n                        \"samples\": []\r\n                    },\r\n                    nbatchmastercode: inputData.selectedRecord.nbatchmastercode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                    //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                },\r\n                operation: inputData.operation,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: inputData.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.deleteSampleAction(inputParam.inputData);\r\n            }\r\n        }\r\n    }\r\n\r\n    cancelRecord = (inputData) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: inputData.nbatchsampleiqccode,\r\n                fetchUrl: \"batchcreation/getBatchIqcSampleAction\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"IQCSample\",\r\n                postParam,\r\n                inputData: {\r\n                    iqcSample: inputData.selectedRecord,\r\n                    nbatchsampleiqccode: inputData.selectedRecord.nbatchsampleiqccode,\r\n                    masterData: this.props.Login.masterData,\r\n                    nbatchmastercode: inputData.selectedRecord.nbatchmastercode,\r\n                    nmaterialinventtranscode: inputData.selectedRecord.nmaterialinventtranscode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                    //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue ?\r\n                        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA\r\n                },\r\n                operation: inputData.operation,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: {\r\n                            inputParam,\r\n                            masterData: this.props.Login.masterData\r\n                        },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: inputData.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.cancelIQCSampleAction(inputParam.inputData);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n\r\n        if (screenName == \"IDS_BATCHHISTORY\") {\r\n\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchhistoryAction(inputData, true);\r\n        } else if (screenName == \"IDS_BATCHIQCSAMPLE\") {\r\n\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchIqcSampleAction(inputData, true);\r\n        } else if (screenName == \"IDS_RESULTS\") {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nneedsubsample: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchViewResultAction(inputData, true);\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { screenName, batchactiveKey: screenName }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Samples, event.dataState),\r\n            sampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Batchhistory, event.dataState),\r\n            histortState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchIqcChangeChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.iqcsample, event.dataState),\r\n            iqcsampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateViewChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Resultview, event.dataState),\r\n            viewstate: event.dataState\r\n        });\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return {\r\n                \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                \"dataField\": option[designProperties.VALUE] == \"null\" ? '-' : option[designProperties.VALUE],\r\n                \"width\": \"150px\", \"columnSize\": \"4\"\r\n            };\r\n\r\n        });\r\n        return temparray;\r\n\r\n    }\r\n\r\n    getApprovalVersion = (data) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.props.Login.masterData.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n        inputData = {\r\n            needFilterSubmit: \"false\",\r\n            nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n            fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n            toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n            nregtypecode: data.item.nregtypecode,\r\n            userInfo: this.props.Login.userInfo,\r\n            nregsubtypecode: data.item.nregsubtypecode,\r\n            masterData: this.props.Login.masterData,\r\n            isneedapprovalfilter: true,\r\n            defaultRegistrationSubType: data.item,\r\n            isneedrealFilterStatus: \"false\",\r\n            // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n            // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n            // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\",\r\n            realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n            realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n            realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n            realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n            realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n            realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n            realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n            realFromDate:this.props.Login.masterData.realFromDate,\r\n            realToDate:this.props.Login.masterData.realToDate\r\n           \r\n        }\r\n        this.props.getBCApprovalConfigVersion(inputData)\r\n\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SAMPLE\",\r\n            <SampleTab\r\n                sample={this.props.Login.masterData.Samples || []}\r\n                dataResult={process(this.props.Login.masterData.Samples || [], this.state.sampleState)}\r\n                dataState={this.state.sampleState}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={this.dataStateChange}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteRecord={this.deleteRecord}\r\n                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreItem) || []}\r\n                methodUrl={\"Samples\"}\r\n                getSamples={() => this.getSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n                // getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                //     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\r\n                //inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_SAMPLE\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            />\r\n        )\r\n        tabMap.set(\"IDS_BATCHIQCSAMPLE\",\r\n            <BatchIqcSampleTab\r\n                iqcsample={this.props.Login.masterData.iqcsample || []}\r\n                dataResult={process(this.props.Login.masterData.iqcsample || [], this.state.iqcsampleState)}\r\n                dataState={this.state.iqcsampleState}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={this.dataStateBatchIqcChangeChange}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                cancelRecord={this.cancelRecord}\r\n                methodUrl={\"IQCSample\"}\r\n                getIqcSamples={() => this.getIqcSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n                screenName=\"IDS_BATCHIQCSAMPLE\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            />\r\n        )\r\n    //     if (this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.INITIATED\r\n    //         || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.COMPLETED)\r\n        if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED|| this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED )\r\n        {\r\n            tabMap.set(\"IDS_RESULTS\",\r\n                <BatchResultTab\r\n                    ELNTest={this.props.Login.masterData.ELNTest || []}\r\n                    resultview={this.props.Login.masterData.Resultview || []}\r\n                    dataResult={process(this.props.Login.masterData.Resultview || [], this.state.viewstate)}\r\n                    dataState={this.state.viewstate}\r\n                    dataStateChange={this.dataStateViewChange}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    methodUrl={\"BatchViewResult\"}\r\n                    screenName=\"IDS_RESULTS\"\r\n                    intl={this.props.intl}\r\n                    nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                    selectedfilename={this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n\r\n                />\r\n            )\r\n        }\r\n\r\n        tabMap.set(\"IDS_BATCHHISTORY\",\r\n            <BatchhistoryTab\r\n                batchhistory={this.props.Login.masterData.Batchhistory || []}\r\n                dataResult={process(this.props.Login.masterData.Batchhistory || [], this.state.histortState)}\r\n                dataState={this.state.histortState}\r\n                dataStateChange={this.dataStateBatchHistoryChange}\r\n                userInfo={this.props.Login.userInfo}\r\n                methodUrl={\"Batchhistory\"}\r\n                screenName=\"IDS_BATCHHISTORY\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n\r\n            />\r\n        )\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n\r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    fromDate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    toDate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    defaultRegistrationType: this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType: this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n                    realFromDate:this.props.Login.masterData.realFromDate,\r\n                    realToDate:this.props.Login.masterData.realToDate\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    fromDate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    toDate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    defaultRegistrationType: this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType: this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n                    realFromDate:this.props.Login.masterData.realFromDate,\r\n                    realToDate:this.props.Login.masterData.realToDate\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    // realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    //  realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    //realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion\r\n                }\r\n                this.props.getBCRegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit: \"false\",\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    // realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n\t\t\t\t\t//ALPD-3571--Vignesh R(05-09-2024)                   \r\n\t\t\t\t\trealndesigntemplatemappingcode: this.props.Login.masterData.realndesigntemplatemappingcode,\r\n                    napprovalversioncode: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA,\r\n\r\n                }\r\n                this.props.getBCRegistrationSubType(inputData, this.props.Login.masterData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n                const nregsubtypecode = this.state;\r\n                //this.setState({ nregsubtypecode:event });\r\n                this.getApprovalVersion(event);\r\n\r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit: \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getBCFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                //     this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                // inputData = {\r\n                //     nflag: 4,\r\n                //     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                //     todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                //     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                //     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                //     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                //     napprovalversioncode: event.value,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     defaultApprovalConfigVersion: event.item,\r\n                //     masterData: this.props.Login.masterData,\r\n                //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                // }\r\n                // this.props.getBCJobStatus(inputData)\r\n                const ApprovalVersionValue = this.state;\r\n                this.setState({ ApprovalVersionValue: event });\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    needFilterSubmit: \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                }\r\n                this.props.getBCFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue: event });\r\n\r\n            }\r\n            else if (fieldname === \"test\") {\r\n\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue: event });\r\n            } else {\r\n                const selectedRecord = this.state;\r\n                this.setState({ selectedRecord: event });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilterDateChange = (dateValue, dateName) => {\r\n        const { selectedFilter } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedFilter[dateName] = dateValue;\r\n        this.setState({ selectedFilter });\r\n\r\n    }\r\n\r\n    // headerSelectionChange = (event) => {\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let addedComponentList = this.state.addedComponentList || [];\r\n    //     if (checked) {\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n    //                 addedComponentList.push({ ...item, selected: false });\r\n    //                 item.selected = checked;\r\n    //                 return item;\r\n    //             } else {\r\n    //                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n    //                 olditem.selected = checked;\r\n    //                 return olditem;\r\n    //             }\r\n\r\n    //         });\r\n\r\n\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         let addedComponentData = this.state.addedComponentList || [];\r\n    //         let deletedListdData = this.state.deletedList || [];\r\n\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             item.selected = checked;\r\n    //             return item;\r\n    //         });\r\n\r\n    //         // console.log(\"data:\",data1, data2);\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        // let checkRepeatComponent;\r\n        //  let addedComponentList = this.state.addedComponentList || [];\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                    // checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\r\n                    // if(checkRepeatComponent.length>0){\r\n                    //     selectAll = true;\r\n                    // }else{\r\n                    //     selectAll = false;\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            //if (gridType === \"originalgrid\"){\r\n            selectAll = false;\r\n            // }\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n\r\n\r\n    headerSelectionChange = (event) => {\r\n        let checked = event.syntheticEvent.target.checked;\r\n        let sampleList = this.state.samples || [];\r\n        let addedSamplesList = [];\r\n        checked = checked == false && this.state.samples.length > 0 ? false : this.state.samples.length == 0 ? false : true\r\n        if (checked) {\r\n            //const data = event.dataItems.map(item => {\r\n            const data = event.target.props.data.map(item => {\r\n                if (sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    sampleList.push({ ...item, selected: false });\r\n                    item.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n\r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: addedSamplesList,\r\n                sampleList,\r\n                addSelectAll: checked,\r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let sampleListData = this.state.samples || [];\r\n            let deletedListdData = this.state.samples || [];\r\n\r\n            const data = this.state.samples.map(item => {\r\n                sampleListData = sampleListData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: sampleListData,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: checked,\r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n\r\n    selectionChange = (event) => {\r\n        let addedSamplesList = this.state.addedSamplesList || [];\r\n        //let addedSamplesList= [];\r\n        let samples = this.state.samples || [];\r\n        const samplesList = this.state.samples.map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n               item.selected = !event.dataItem.selected;\r\n              //  item={...item,\"selected\":!event.dataItem.selected};\r\n                if (item.selected) {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                }\r\n                else {\r\n                    // if(addedSamplesList.length === 0){\r\n                    addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                    //   }else{\r\n                    //     this.state.samples.map((item1,index) => { \r\n                    //         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\r\n                    //             if(this.state.samples.length == 1){\r\n                    //                 addedSamplesList=[];\r\n                    //             }else{\r\n                    //                 const newItem = JSON.parse(JSON.stringify(item1));\r\n                    //                 newItem.selected = false;\r\n                    //                 newItem[\"jsondata\"]={};\r\n                    //                 newItem[\"jsonuidata\"]={};\r\n                    //                 newItem[\"jsondata\"]['samplelist'] = item1\r\n                    //                 newItem[\"jsonuidata\"]['samplelist'] = item1\r\n                    //                 //addedSamplesList.push(newItem);\r\n                    //                 addedSamplesList = item1;\r\n                    //             }  \r\n                    //         }\r\n                    //     } \r\n                    //   )\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        ///samplesList = addedSamplesList;\r\n        this.setState({\r\n            samplesList,\r\n            addedSamplesList,\r\n            samples,\r\n            initialList: addedSamplesList,\r\n            addSelectAll: this.valiateCheckAll(samplesList),\r\n            deleteSelectAll: this.valiateCheckAll(samplesList)\r\n        });\r\n    }\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord;\r\n        console.log(\"handle save:\", selectedRecord);\r\n        mandatoryFields = [\r\n            { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n        ]\r\n        let selectedSpec = this.props.Login.selectedSpec;\r\n\r\n        if (selectedRecord && selectedRecord.nallottedspeccode !== \"\") {\r\n            selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"];\r\n            selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"];\r\n            selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"];\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadSpec: false,\r\n                    selectedSpec,\r\n                    openModal: true,\r\n                    openSpecModal: false\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let reportActionList = [];\r\n        let batchMandatoryFields = [];\r\n        //commenting as its done in below code by rukshana\r\n        // if (this.props.Login.operation === \"update\") {\r\n        //     batchMandatoryFields.push(\r\n\r\n        //         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n        //     );\r\n\r\n        // }\r\n        // else {\r\n        //     batchMandatoryFields.push(\r\n        //         { idsName: \"IDS_SECTION\", dataField: \"ssectionname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_TEST\", dataField: \"stestname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n        //     );\r\n        // }\r\n        //let mandatoryFields =[];\r\n        if (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") {\r\n            let { selectedRecord } = this.state;\r\n            batchMandatoryFields.push(\r\n                { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                //{ \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                // { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                // { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            );\r\n\r\n            if (selectedRecord && selectedRecord.sinstrumentcatname !== undefined && selectedRecord.ninstrumentcatcode > 0) {\r\n                batchMandatoryFields.push(\r\n                    // { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                )\r\n            }\r\n        }\r\n        const getBatch = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            operation: \"get\",\r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"Batchcreation\", keyName: \"batchcreation\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || this.props.Login.masterData && this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : undefined;\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || this.props.Login.masterData && this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : undefined;\r\n        const addId = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBatchcreation\") && this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBatchcreation\") && this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;\r\n        const testStartId = this.state.controlMap.has(\"BatchInitiate\") && this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;\r\n        const completeId = this.state.controlMap.has(\"BatchComplete\") && this.state.controlMap.get(\"BatchComplete\").ncontrolcode;\r\n        const cancelId = this.state.controlMap.has(\"CancelBatch\") && this.state.controlMap.get(\"CancelBatch\").ncontrolcode;\r\n        const elnSheetId = this.state.controlMap.has(\"ELNSheet\") && this.state.controlMap.get(\"ELNSheet\").ncontrolcode;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            primaryeyField: \"nreleasebatchcode\",\r\n            primaryKeyValue: undefined,\r\n            operation: \"create\",\r\n            //inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: addId,\r\n            nneedtestinitiate: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate,\r\n            masterData: this.props.Login.masterData,\r\n            fromdate: this.props.Login.masterData.fromDate,\r\n            todate: this.props.Login.masterData.toDate,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n            napprovalconfigcode: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            ntranscode: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus : transactionStatus.NA,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n        };\r\n\r\n        const viewInfoFields = [];\r\n\r\n        viewInfoFields.push(\r\n            { \"fieldName\": \"sbatcharno\", \"label\": \"IDS_BATCHARNO\" },\r\n            { \"fieldName\": \"ssectionname\", \"label\": \"IDS_SECTION\" },\r\n            { \"fieldName\": \"stestname\", \"label\": \"IDS_TESTNAME\" },\r\n            { \"fieldName\": \"sinstrumentcatname\", \"label\": \"IDS_INSTRUMENTCATEGORY\" },\r\n            { \"fieldName\": \"sinstrumentid\", \"label\": \"IDS_INSTRUMENTID\" },\r\n            { \"fieldName\": \"sinstrumentname\", \"label\": \"IDS_INSTRUMENTNAME\" },\r\n            { \"fieldName\": \"sproductname\", \"label\": \"IDS_SAMPLETYPE\" },\r\n            { \"fieldName\": \"stransdisplaystatus\", \"label\": \"IDS_STATUS\" },\r\n            {\r\n                \"fieldName\": \"username\", \"label\":\r\n                    this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED ? \"IDS_BATCHINITIATEDBY\" :\r\n                        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ? \"IDS_BATCHCOMPLETEDBY\"\r\n                            : \"IDS_BATCHCREATEDBY\"\r\n            }\r\n        );\r\n\r\n        if (this.props.Login.masterData.realSampleTypeValue &&\r\n            this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n            viewInfoFields.push(\r\n                { \"fieldName\": \"sprojectcode\", \"label\": \"IDS_PROJECTCODE\" },\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        let stransactionstatuscode = this.props.Login.masterData.SelectedFilterStatus ? String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus) : null;\r\n\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nfiltertransstatus\"] !== undefined) {\r\n            stransactionstatuscode = this.state.selectedRecord[\"nfiltertransstatus\"].value === String(0) ? null : String(this.state.selectedRecord[\"nfiltertransstatus\"].value);\r\n        }\r\n\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate,\r\n            this.props.Login.userInfo);\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            operation: \"update\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            naddcontrolCode: addId,\r\n            nprojectmastercode: this.props.Login.masterData.selectedTestSynonym && this.props.Login.masterData.selectedTestSynonym.nprojectmastercode,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Batchmaster\",\r\n            selectedObject: \"SelectedBatchmaster\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n\r\n            fecthInputObject: {\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                userInfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                napprovalconfigcode: this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA,\r\n                ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT,\r\n                nsampletypecode: this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n                //fromDate, toDate, \r\n                //stransactionstatuscode,\r\n                //activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            //unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_BATCHSTATUS\",\r\n                \"value\": this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus ? this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus : \"NA\"\r\n            }\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // }\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                {/* <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"> */}\r\n                {/* <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\"> */}\r\n                {/* <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"> */}\r\n                {/* <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"> */}\r\n                {/* //</><div className=\"client-listing-wrap mtop-4\"> */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \">\r\n                    <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    </Affix>\r\n\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster || [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster}\r\n                                primaryKeyField=\"nbatchmastercode\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                //getMasterDetail={this.props.getSelectedBatchCreationDetail}\r\n                                getMasterDetail={(batch) => this.props.getSelectedBatchCreationDetail(batch, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                inputParam={getBatch}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_BATCHCREATION\" })}\r\n                                //mainField=\"stestname\"\r\n                                mainField=\"sbatcharno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sinstrumentname\"\r\n                                selectedListName=\"SelectedBatchmaster\"\r\n                                objectName=\"BatchCreation\"\r\n                                listName=\"IDS_BATCHCREATION\"\r\n                                needValidation={false}\r\n                                hidePaging={false}\r\n                                // subFields={\r\n                                //     [\r\n                                //         { [designProperties.VALUE]: \"sinstrumentcatname\" },\r\n                                //         { [designProperties.VALUE]: \"sinstrumentname\" },\r\n                                //         // { [designProperties.VALUE]: \"smahname\" },\r\n                                //         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                //     ]\r\n                                // }\r\n                                needFilter={true}\r\n                                needMultiSelect={false}\r\n                                subFieldsLabel={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                isClearSearch={this.props.Login.isClearSearch}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                                // handlePageChange={this.handlePageChange}\r\n                                addId={addId}\r\n                                showFilterIcon={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.createBatchValidation(addParam)}\r\n                                callCloseFunction={true}\r\n                                // openModal={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                commonActions={\r\n                                    // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                            onClick={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                        // onClick={() => this.createBatchValidation(addParam)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                        //onClick={() => this.reloadData(false)} \r\n                                        >\r\n                                            <RefreshIcon className='custom_icons'/>\r\n                                        </Button>\r\n\r\n                                    </ProductList>\r\n                                    // </Tooltip>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\": <BatchCreationFilter\r\n                                            fromDate={this.state.selectedFilter[\"fromDate\"] != undefined ?\r\n                                                rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"fromDate\"]) : this.fromDate}\r\n                                            toDate={this.state.selectedFilter[\"toDate\"] != undefined ?\r\n                                                rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"toDate\"]) : this.toDate}\r\n                                            SampleType={this.state.SampleType || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                            RegType={this.state.RegistrationType || []}\r\n                                            RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                            RegSubType={this.state.RegistrationSubType || []}\r\n                                            RegSubTypeValue={this.state.nregsubtypecode || []}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                            FilterStatus={this.state.BCFilterStatus || []}\r\n                                            FilterStatusValue={this.state.FilterStatusValue || []}\r\n                                            ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                            ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                            REJobStatus={this.state.REJobStatus || []}\r\n                                            JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                            Test={this.state.Testvalues || []}\r\n                                            TestValue={this.props.Login.masterData.selectedTestSynonym || []}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            handleFilterDateChange={this.handleFilterDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div> \r\n                            {/* <Row> */}\r\n                            {/* <Col md={12}> */}\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster.length > 0\r\n                                        && this.props.Login.masterData.SelectedBatchmaster ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                            {\r\n                                                                this.props.Login.masterData.SelectedBatchTestTAT && this.props.Login.masterData.SelectedBatchTestTAT.Deviation && this.props.intl.formatMessage({ id: \"IDS_DEVIATION\" }) + \" : \" + this.props.Login.masterData.SelectedBatchTestTAT.Deviation\r\n                                                            }\r\n\r\n                                                            <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ? \"outline-initiate\"\r\n                                                                : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ? \"outline-success\"\r\n                                                                    : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED ? \"outline-danger\"\r\n                                                                        : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                                {this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus}\r\n                                                            </MediaLabel>\r\n                                                        </h2>\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"d-inline\">\r\n\r\n                                                            {/* <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHTAT\" })}\r\n                                                                            // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                            onClick={() => this.props.batchTAT(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>      */}\r\n\r\n                                                            <Nav.Link name=\"openelnsheet\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(elnSheetId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_OPENELNSHEET\" })}\r\n                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                            >\r\n                                                                <Image src={elnimage} alt=\"filer-icon action-icons-wrap\"\r\n                                                                    width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                    onClick={() => this.openClosePortal(this.props.Login.masterData.SelectedBatchmaster, cancelId)}\r\n                                                                    data-place=\"left\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                                // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                onClick={() => this.props.viewInfo(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEye} />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"editBatchCreation\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                onClick={() => this.fetchEditData(editParam)}\r\n                                                            // onClick={() => this.props.getActiveBatchCreationService(editParam,\r\n                                                            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                //  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\r\n                                                                />\r\n                                                            </Nav.Link>\r\n                                                            {\r\n                                                                // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\r\n                                                                <Nav.Link name=\"initiateBatchCreation\"                                                        //  data-for=\"tooltip-common-wrap\" \r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHINITIATE\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    //role=\"button\"\r\n                                                                    onClick={() => this.testPopUpStartActions(testStartId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPlay}\r\n                                                                    />\r\n                                                                    {/* </FontIconWrap>  */}\r\n                                                                </Nav.Link>\r\n                                                                // :\"\"\r\n                                                            }\r\n\r\n                                                            <Nav.Link name=\"completeBatchCreation\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                onClick={() => this.completePopUpStartActions(completeId)}\r\n                                                            //onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\r\n                                                            // onClick={() => this.props.validateBatchComplete({\r\n                                                            //     masterData: this.props.Login.masterData,\r\n                                                            //     userInfo: this.props.Login.userInfo,\r\n                                                            //     userRoleControlRights: this.props.Login.userRoleControlRights,\r\n                                                            //     ncontrolCode: completeId,\r\n                                                            //     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n                                                            // })}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCheckCircle}\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.ConfirmDelete(this.props.Login.masterData.SelectedBatchmaster, deleteId, \"delete\")}\r\n\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Nav.Link>\r\n\r\n\r\n                                                            <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                            >\r\n                                                                <Image src={reject} alt=\"filer-icon action-icons-wrap\"\r\n                                                                    width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                    onClick={() => this.cancelBatch(this.props.Login.masterData.SelectedBatchmaster, cancelId)}\r\n                                                                    data-place=\"left\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            {reportActionList.length > 0 ?\r\n                                                                <CustomPopover\r\n                                                                    nav={true}\r\n                                                                    data={reportActionList}\r\n                                                                    Button={true}\r\n                                                                    hideIcon={true}\r\n                                                                    btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                    textKey=\"value\"\r\n                                                                    dynamicButton={(value) => this.reportMethod(value)}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                />\r\n                                                                :\r\n                                                                \"\"}\r\n\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row className=\"no-gutters\">\r\n                                                    <Col md={12}>\r\n                                                        <Card className=\"at-tabs\">\r\n                                                            <CustomTab\r\n                                                                activeKey={this.props.Login.batchactiveKey ? this.props.Login.batchactiveKey : \"IDS_SAMPLE\"}\r\n                                                                tabDetail={this.tabDetail()} onTabChange={this.onTabChange}\r\n                                                            />\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* <CustomTab \r\n                                                            activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                            tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                            {/* </Col> */}\r\n                            {/* </Row> */}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <PortalModal>\r\n                    <div>\r\n                        <Modal\r\n                            centered\r\n                            scrollable\r\n                            bsPrefix=\"model model_zindex\"\r\n                            show={this.props.Login.openELNSheet}\r\n                            // show={this.state.openELNSheet}\r\n                            onHide={this.openClosePortal}\r\n                            dialogClassName={`${this.props.nflag && this.props.nflag === 2 ? 'alert-popup' : ''} modal-fullscreen`}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            enforceFocus={false}\r\n                            aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title style={{ \"line-height\": \"1.0\" }} id=\"example-custom-modal-styling-title\">\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_ELNSHEET\" })}\r\n                                </Modal.Title>\r\n                                <ReactTooltip globalEventOff=\"true\" />\r\n\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\"modal-inner-content\">\r\n                                    {/* <Iframe url={this.state.enlLink} */}\r\n                                    <Iframe\r\n                                        // url={\"http://agl69:8080/QuaLISWeb/#/login\"}\r\n                                        url={this.props.Login.masterData.enlLink}\r\n                                        width=\"98%\"\r\n                                        height=\"1000px\"\r\n                                        id=\"reportviewID\"\r\n                                        className=\"reportview\"\r\n                                    //display=\"initial\"\r\n                                    /// position=\"relative\" \r\n                                    />\r\n                                </div>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </div>\r\n                </PortalModal>\r\n                {/* </ListWrapper> */}\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {\r\n                    this.props.Login.openModal ?\r\n                        <SlideOutModal\r\n                            show={this.props.Login.openModal}\r\n                            size={\"lg\"}\r\n                            closeModal={this.closeModal}\r\n                            operation={this.props.Login.operation}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            screenName={this.props.Login.operation === \"createSample\" ? this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })\r\n                                : this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"view\" || this.props.Login.operation === \"complete\" ? this.props.intl.formatMessage({ id: \"IDS_BATCH\" })\r\n                                    : this.props.Login.operation === \"createiqcsample\" ? this.props.intl.formatMessage({ id: \"IDS_BATCHIQCSAMPLE\" })\r\n                                        : this.props.Login.screenName}\r\n                            onSaveClick={this.onSaveClick}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            mandatoryFields={this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                                batchMandatoryFields\r\n                                //  : this.props.Login.operation === \"initiate\"  ?\r\n                                //    this.initiateMandatoryFields \r\n                                //  : this.props.Login.operation === \"complete\" ?\r\n                                //    this.completeMandatoryFields\r\n                                : this.props.Login.operation === \"createiqcsample\" ?\r\n                                    this.materialIqcMandatory\r\n                                    : []\r\n                            }\r\n                            showSaveContinue={this.state.showSaveContinue}\r\n                            noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                            addComponent={this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                : this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                                    <AddBatchCreation\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        sampleType={this.props.Login.masterData.realSampleTypeValue ?\r\n                                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA}\r\n                                        Test={this.state.Testvalues || []}\r\n                                        selectedInstrumentCategory={this.state.selectedInstCategory}\r\n                                        InstrumentCategory={this.state.InstrumentCategory}\r\n                                        Instrument={this.state.Instrument}\r\n                                        selectedInstrument={this.state.selectedInstrument}\r\n                                        productCategory={this.state.ProductCategory}\r\n                                        selectedProductCategory={this.state.selectedProductCategory}\r\n                                        TestValue={this.state.selectedTestSynonym || []}\r\n                                        product={this.state.Product || []}\r\n                                        instrumentID={this.state.InstrumentID || []}\r\n                                        selectedProduct={this.state.selectedProduct || []}\r\n                                        studyPlanList={this.props.Login.studyPlanList || []}\r\n                                        manufacturerList={this.props.Login.productManufacturerList || []}\r\n                                        maHolderList={this.props.Login.maHolderList || []}\r\n                                        timeZoneList={this.props.Login.timeZoneList || []}\r\n                                        selectedBacthCreation={this.props.Login.masterData.SelectedBatchmaster || {}}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        selectedInstrumentId={this.state.selectedInstrumentId}\r\n                                        onMultiColumnValue={this.onMultiColumnValue}\r\n                                        onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                        batchCreationEditStatusList={this.props.Login.batchCreationEditStatusList}\r\n                                        Section={this.state.Section}\r\n                                        selectedSection={this.state.selectedSection}\r\n                                        ProjectCode={this.state.ProjectCode}\r\n                                        selectedProjectcode={this.state.selectedProjectcode}\r\n                                    />\r\n                                    : this.props.Login.operation === \"createSample\" ?\r\n                                        <AddSample\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            getProductByCategory={this.getProductByCategory}\r\n                                            onComboChange={this.onComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            productCategoryList={this.props.productCategoryList}\r\n                                            productList={this.props.productList}\r\n                                            componentList={this.props.componentList}\r\n                                            getDataForAddComponent={this.getDataForAddComponent}\r\n                                            clearComponentInput={this.props.clearComponentInput}\r\n                                            samples={this.state.samples || []}\r\n                                            headerSelectionChange={this.headerSelectionChange}\r\n                                            selectionChange={this.selectionChange}\r\n                                            addedComponentList={this.state.addedComponentList || []}\r\n                                            addedHeaderSelectionChange={this.addedHeaderSelectionChange}\r\n                                            addedSelectionChange={this.addedSelectionChange}\r\n                                            //dataStateChange={this.dataStateChange} \r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            controlMap={this.props.controlMap}\r\n                                            inputParam={this.props.inputParam}\r\n                                            screenName={this.props.screenName}\r\n                                            addSelectAll={this.state.addSelectAll}\r\n                                            deleteSelectAll={this.state.deleteSelectAll}\r\n                                            onDeleteSelectedComponent={this.onDeleteSelectedComponent}\r\n                                            componentPopupSkip={this.props.componentPopupSkip}\r\n                                            componentPopupTake={this.props.componentPopupTake}\r\n                                            componentPageSizes={this.props.componentPageSizes}\r\n                                            nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                                        />\r\n                                        : this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"complete\" ?\r\n                                            <AddBatchinitiate\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                operation={this.props.Login.operation}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                currentTime={this.props.Login.currentTime || []}\r\n                                            />\r\n                                            : this.props.Login.operation === \"view\" ?\r\n                                                <Card className='one' >\r\n                                                    <Card.Body>\r\n                                                        <ViewInfo\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                                                            viewInfoFields={viewInfoFields}\r\n                                                        />\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                                : this.props.Login.operation === \"createiqcsample\" ?\r\n                                                    <AddMaterialIqc\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        operation={this.props.Login.operation}\r\n                                                        materialCategory={this.state.MaterialCategory}\r\n                                                        selectedMaterialType={this.state.selectedMaterialType}\r\n                                                        selectedMaterialCategory={this.state.selectedMaterialCategory}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        selectedMaterial={this.state.selectedMaterial}\r\n                                                        screenName={this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                                        handleSaveClick={this.handleSaveClick}\r\n                                                        material={this.state.Material}\r\n                                                        materialInventory={this.state.MaterialInventory}\r\n                                                        AddSpec={this.AddSpec}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        currentTime={this.props.Login.currentTime || []}\r\n                                                        loadSpec={this.props.Login.loadSpec}\r\n                                                        selectedMaterialInventory={this.state.selectedMaterialInventory}\r\n                                                        selectedInventoryUnit={this.props.Login.masterData.selectedInventoryUnit}\r\n                                                        AgaramTree={this.props.Login.AgaramTree}\r\n                                                        openNodes={this.props.Login.OpenNodes}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        focusKey={this.props.Login.FocusKey}\r\n                                                        activeKey={this.props.Login.batchactiveKey}\r\n                                                        Specification={this.props.Login.Specification}\r\n                                                        selectedSpec={this.props.Login.selectedSpec}\r\n                                                        selectedRecord={this.state.selectedRecord}\r\n                                                        onSpecChange={this.onspecChange}\r\n                                                        openSpecModal={this.props.Login.openSpecModal}\r\n                                                        closeModal={this.closeModal}\r\n                                                    /> : \"\"\r\n                            }\r\n                        />\r\n                        : \"\"\r\n                }\r\n                {/* End of Modal Sideout for Creation */}\r\n                {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n\r\n    ConfirmDelete = (selectedBatch, deleteId, operation) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBatchCreation(selectedBatch, deleteId, operation));\r\n    };\r\n\r\n\r\n    completePopUpStartActions = (completeId) => {\r\n        // if(this.props.Login.masterData.nneedtestinitiate === true){\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED\r\n        ) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n        }\r\n        //    }else \r\n        else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        } else {\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         openModal: true, \r\n            //         completeId : completeId,\r\n            //         masterData: this.props.Login.masterData,\r\n            //        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n            //         operation: \"complete\"\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n\r\n            let inputData = {};\r\n            inputData[\"openModal\"] = true;\r\n            inputData[\"completeId\"] = completeId;\r\n            inputData[\"selectedRecord\"] = this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"operation\"] = \"complete\";\r\n            this.props.batchCompleteDatePopup(inputData, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    AddSpec = (e) => {\r\n        if (this.state.selectedMaterial !== undefined &&\r\n            this.state.selectedMaterialCategory !== undefined) {\r\n            let inputData = {};\r\n            inputData[\"nmaterialcode\"] = this.state.selectedMaterial.value;\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory.value;\r\n            inputData[\"ncategorybasedflow\"] = this.state.selectedMaterialCategory.item.ncategorybasedflow;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            // inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n            // inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n            // inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n            // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            // inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            // inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n            this.props.getTreeByMaterial(inputData, this.state.selectedRecord, this.props.Login.masterData);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_FILLALLDETAILSTOADDSPEC\" }));\r\n        }\r\n    }\r\n\r\n\r\n    testPopUpStartActions = (testStartId) => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        }\r\n        // else if (this.props.Login.masterData.iqcsample.length==0){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n        // }\r\n        else {\r\n            let inputData = {};\r\n            inputData[\"openModal\"] = true;\r\n            inputData[\"testStartId\"] = testStartId;\r\n            inputData[\"selectedRecord\"] = this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"operation\"] = \"initiate\";\r\n            this.props.batchInitiateDatePopup(inputData, this.props.Login.masterData);\r\n\r\n\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 openModal: true, \r\n            //                 testStartId : testStartId,\r\n            //                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\r\n            //                 masterData: this.props.Login.masterData,\r\n            //                 operation: \"initiate\"\r\n            //             }\r\n            //         }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n\r\n    }\r\n\r\n    testStartActions = (selectedmaster, testStartId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.INITIATED || selectedmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        }\r\n        //else if (this.props.Login.masterData.iqcsample.length==0){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n        // }\r\n        else {\r\n            let inputData = {};\r\n            let jsonuidata = [];\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/initiateBatchcreation\",\r\n                isSingleGet: true,\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n            if (this.props.Login.masterData.iqcsample.length > 0) {\r\n                let totalSample = this.props.Login.masterData.Samples.concat(this.props.Login.masterData.iqcsample);\r\n                inputData[\"npreregno\"] = this.props.Login.masterData.iqcsample.map(samples => samples.npreregno).join(\",\");\r\n                inputData[\"ntransactiontestcode\"] = totalSample.map(samples => samples.ntransactiontestcode).join(\",\");\r\n                inputData[\"nneedjoballocationiqc\"] = true\r\n                inputData[\"isiqcdata\"] = true\r\n            } else {\r\n                inputData[\"npreregno\"] = this.props.Login.masterData.Samples.map(samples => samples.npreregno).join(\",\");\r\n                inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactiontestcode).join(\",\");\r\n                inputData[\"isiqcdata\"] = false\r\n                inputData[\"nneedjoballocationiqc\"] = false\r\n            }\r\n            inputData[\"nbatchsampleCode\"] = this.props.Login.masterData.Samples.map(sample => sample.nbatchsamplecode).join(\",\");\r\n            inputData[\"muluserpreregno\"] = this.props.Login.masterData.Samples.map(samples => samples.npreregno).join(\",\");\r\n            inputData[\"mulusertransactionsamplecode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactionsamplecode).join(\",\");\r\n            inputData[\"mulusertransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactiontestcode).join(\",\");\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            // inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"batchsample\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"nneedmyjob\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob;\r\n            inputData[\"nneedjoballocation\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = transactionStatus.INITIATED || transactionStatus.DRAFT;\r\n            inputData[\"nneedtestinitiate\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n            inputData[\"Batchhistory\"] = {\r\n                dtransactiondate: formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] != undefined ?\r\n                    this.state.selectedRecord[\"dtransactiondate\"] : this.props.Login.currentTime, false),\r\n                scomments: this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            };\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            inputData[\"testStartId\"] = testStartId;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus && this.props.Login.masterData.BCFilterStatus[1];\r\n            inputData[\"sample\"] = this.props.Login.masterData ? this.props.Login.masterData.sample : \"\";\r\n            inputData[\"iqcsample\"] = this.props.Login.masterData ? this.props.Login.masterData.iqcsample : \"\";\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"initiate\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, testStartId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData\r\n                                // defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[1],\r\n                                // realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[1],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchInitiateAction(inputData, this.props.Login.masterData, this.confirmMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    batchSaveIQCActions = (selectedmaster) => {\r\n        if (this.state.selectedRecord.savailablequatity !== \"0.00\") {\r\n            if (parseFloat(this.state.selectedRecord.susedquantity) <= parseFloat(this.props.Login.masterData.inventoryTransaction.savailablequatity)) {\r\n                if (this.props.Login.selectedSpec.nallottedspeccode !== undefined && this.props.Login.selectedSpec.nallottedspeccode !== \"\") {\r\n                    let userInfo = {};\r\n                    let inputRegistrationData = {};\r\n                    let inputMaterialInventoryData = {};\r\n                    let inputBatchData = {};\r\n                    const map = {}\r\n                    let batchCreationSampleData = {};\r\n                    let batchCreationTestData = {};\r\n                    let batchCreationSampleArray = [];\r\n                    let batchCreationTestArray = [];\r\n                    let samplecombinationuniqueArray = [];\r\n                    let inputMaterialInventoryArrData = [];\r\n\r\n                    batchCreationSampleData[\"nspecsampletypecode\"] = this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ?\r\n                        this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode : transactionStatus.NA;\r\n                    batchCreationSampleData[\"ncomponentcode\"] = transactionStatus.NA;\r\n                    batchCreationSampleData[\"slno\"] = 1;\r\n                    batchCreationSampleArray.push(batchCreationSampleData);\r\n\r\n                    inputRegistrationData[\"nallottedspeccode\"] = this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ?\r\n                        this.props.Login.selectedSpec.nallottedspeccode.value : transactionStatus.NA;\r\n                    inputRegistrationData[\"ntemplatemanipulationcode\"] = this.props.Login.ntemplatemanipulationcode || transactionStatus.NA;\r\n                    inputRegistrationData[\"nregsubtypeversioncode\"] = this.props.Login.masterData.nregsubtypeversioncode;\r\n                    inputRegistrationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode;\r\n                    // inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    // inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    // inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue &&\r\n                        this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputRegistrationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputRegistrationData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"nproductcatcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"nproductcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"ninstrumentcatcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"ninstrumentcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n                    inputRegistrationData[\"nmaterialcode\"] = this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"jsondata\"] = {\r\n                        nmaterialcode: this.state.selectedMaterial.value,\r\n                        nmaterialcatcode: this.state.selectedMaterialCategory.value,\r\n                        smaterialcatname: this.state.selectedMaterialCategory.label,\r\n                        sinventoryid: this.state.selectedMaterialInventory.item.sinventoryid,\r\n                        nmaterialinventorycode: this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                        smaterial: this.state.selectedMaterial.item.smaterialname,\r\n                        smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n                        nmaterialtypecode: this.state.selectedMaterialType.value,\r\n                        susedquantity: this.state.selectedRecord.susedquantity,\r\n                        sunitname: this.props.Login.masterData.inventoryTransaction.sunitname,\r\n                        savailablequatity: this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n                        //materialtype:this.state.selectedMaterialType.label,\r\n                        sremarks: this.state.selectedRecord.sremarks,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    };\r\n                    inputRegistrationData[\"jsonuidata\"] = {\r\n                        nmaterialcode: this.state.selectedMaterial.value,\r\n                        nmaterialcatcode: this.state.selectedMaterialCategory.value,\r\n                        smaterialcatname: this.state.selectedMaterialCategory.label,\r\n                        sinventoryid: this.state.selectedMaterialInventory.item.sinventoryid,\r\n                        nmaterialinventorycode: this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                        smaterial: this.state.selectedMaterial.item.smaterialname,\r\n                        smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n                        nmaterialtypecode: this.state.selectedMaterialType.value,\r\n                        susedquantity: this.state.selectedRecord.susedquantity,\r\n                        sunitname: this.props.Login.masterData.inventoryTransaction.sunitname,\r\n                        savailablequatity: this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n                        //materialtype:this.state.selectedMaterialType.label,\r\n                        sremarks: this.state.selectedRecord.sremarks,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n\r\n                    };\r\n\r\n                    // inputMaterialInventoryData = {\r\n                    //     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\r\n                    // }\r\n                    //  inputMaterialInventoryData = {\r\n                    //         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                    //         jsondata : {\r\n                    //             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n                    //             nqtyused: this.state.selectedRecord.susedquantity\r\n                    //         },\r\n                    //         jsonuidata : {\r\n                    //             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n                    //             nqtyused: this.state.selectedRecord.susedquantity\r\n                    //         },\r\n                    //         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    //  };\r\n\r\n                    inputMaterialInventoryData[\"nmaterialinventorycode\"] = this.state.selectedMaterialInventory.item.nmaterialinventorycode;\r\n                    inputMaterialInventoryData[\"jsondata\"] = {\r\n                        ...this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n                        nqtyused: this.state.selectedRecord.susedquantity,\r\n                        savailablequatity: this.state.selectedRecord.savailablequatity,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    }\r\n                    //inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\r\n                    inputMaterialInventoryData[\"nsectioncode\"] = this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];\r\n                    inputMaterialInventoryData[\"jsonuidata\"] = {\r\n                        ...this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n                        nqtyused: this.state.selectedRecord.susedquantity,\r\n                        savailablequatity: this.state.selectedRecord.savailablequatity,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    }\r\n\r\n\r\n                    //inputMaterialInventoryArrData.push(inputMaterialInventoryData);\r\n\r\n                    batchCreationTestData[\"ntestgrouptestcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode : transactionStatus.NA;\r\n                    //     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    batchCreationTestData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                    batchCreationTestData[\"nsectioncode\"] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                    batchCreationTestData[\"nmethodcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nmethodcode : transactionStatus.NA;\r\n                    //   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\r\n                    batchCreationTestData[\"nrepeatcountno\"] = 1;//--\r\n                    //    batchCreationTestData[\"ntestretestno\"]=0;\r\n                    batchCreationTestData[\"nparametercount\"] = 1; //--\r\n                    batchCreationTestData[\"slno\"] = 1; //--\r\n\r\n                    batchCreationTestArray.push(batchCreationTestData);\r\n\r\n\r\n                    map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n                    map[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    userInfo = this.props.Login.userInfo;\r\n                    map[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n                    map[\"napproveconfversioncode\"] = this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    map[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                    map[\"nneedtestinitiate\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                    map[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n                    map[\"nmaterialcode\"] = this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n                    map[\"nmaterialtypecode\"] = this.state.selectedMaterialType ? this.state.selectedMaterialType.value : transactionStatus.NA;\r\n\r\n                    inputBatchData = this.props.Login.masterData.SelectedBatchmaster;\r\n\r\n                    map['Registration'] = inputRegistrationData;\r\n                    map['Batchsampleiqc'] = inputBatchData;\r\n                    map['RegistrationSample'] = batchCreationSampleArray;\r\n                    map['testgrouptest'] = batchCreationTestArray;\r\n                    map['userInfo'] = userInfo;\r\n                    map['samplecombinationunique'] = samplecombinationuniqueArray;\r\n                    map['inputMaterialInventoryArrData'] = inputMaterialInventoryData;\r\n\r\n                    const inputParam = {\r\n                        inputData: map,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHIQCSAVE\",\r\n                        operation: \"createiqc\"\r\n                    }\r\n\r\n                    this.props.batchSaveIQCActions(inputParam.inputData, this.props.Login.masterData);\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSPECIFICATIONS\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOAVAILABLEQUANTITY\" }));\r\n        }\r\n    }\r\n\r\n    cancelBatch = (selectedmaster, cancelId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.DRAFT || selectedmaster.ntransactionstatus == transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHINITIATEDRECORD\" }));\r\n        } else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/cancelBatch\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue &&\r\n                this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"samples\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = transactionStatus.CANCELLED || transactionStatus.DRAFT;\r\n            // inputData[\"Batchhistory\"] ={\r\n            //     dtransactiondate : formatInputDate(new Date(),true),\r\n            //     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            //     };\r\n            //inputData[\"completeId\"] = completeId;\r\n            inputData[\"nneedtestinitiate\"] = this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus\r\n                && this.props.Login.masterData.BCFilterStatus[3];\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batch\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"cancel\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData,\r\n                                defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                    && this.props.Login.masterData.BCFilterStatus[2],\r\n                                realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                    && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchCancelAction(inputData, this.props.Login.masterData);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    batchCompleteActions = (selectedmaster, completeId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.COMPLETED || selectedmaster.ntransactionstatus == transactionStatus.DRAFT) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n        } else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/completeBatchcreation\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample => sample.ntransactiontestcode).join(\",\");\r\n            inputData[\"samples\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n          //  inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\r\n          inputData[\"ntranscode\"] = transactionStatus.COMPLETED\r\n \r\n          inputData[\"Batchhistory\"] = {\r\n                dtransactiondate: formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] != undefined ?\r\n                    this.state.selectedRecord[\"dtransactiondate\"] : this.props.Login.currentTime, false),\r\n                scomments: this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            };\r\n            inputData[\"completeId\"] = completeId;\r\n            inputData[\"nneedtestinitiate\"] = this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus\r\n                && this.props.Login.masterData.BCFilterStatus[2];\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"complete\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData\r\n                                // defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[2],\r\n                                // realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchCompleteAction(inputData, this.props.Login.masterData);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // completeBatchCreation = () => {\r\n    //     const postParam = {\r\n    //         inputListName: \"Batchmaster\", selectedObject: \"SelectedBatchCreation\",\r\n    //         primaryKeyField: \"nreleasebatchcode\",\r\n    //         primaryKeyValue: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n    //         fetchUrl: \"batchcreation/getBatchCreation\",\r\n    //         fecthInputObject: this.props.Login.userInfo,\r\n    //     }\r\n    //     const inputParam = {\r\n    //         classUrl: \"batchcreation\",\r\n    //         methodUrl: \"BatchCreation\", postParam,\r\n    //         inputData: {\r\n    //             ncontrolcode: this.props.Login.ncontrolCode,\r\n    //             \"userinfo\": this.props.Login.userInfo,\r\n    //             nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n    //         },\r\n    //         operation: \"complete\", showConfirmAlert: false\r\n    //     }\r\n    //     //this.props.updateStore({ typeName: DEFAULT_RETURN, data: { showConfirmAlert: false } });  \r\n\r\n    //     const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n\r\n    //     if (esignNeeded) {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n    //                 openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n    //                 operation: this.props.Login.operation,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n\r\n    //         this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n    //     }\r\n\r\n    // }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let { userRoleControlRights, controlMap, selectedRecord, filterData,\r\n            addedComponentList,\r\n            filterStatusList, dataState, sahDataState, bahDataState,\r\n            chDataState, testCommentDataState, SampleType, RegistrationType,\r\n            RegistrationSubType, BCFilterStatus, REJobStatus, Testvalues,\r\n            ApprovalConfigVersion, skip, take,\r\n            testskip, testtake, selectedFilter, InstrumentCategory, selectedInstCategory,\r\n            ProductCategory, Instrument, selectedInstrument, selectedTestSynonym, nregsubtypecode,\r\n            selectedProductCategory, Product, selectedProduct, samples, addSelectAll,\r\n            deleteSelectAll, ApprovalVersionValue, FilterStatusValue, Section,\r\n            selectedSection, sampleGridItem, subsampleGridItem, testGridItem = [],\r\n            DynamicGridItem, samplegridmoreitem, DynamicGridMoreItem, MaterialCategory,\r\n            selectedMaterialType, Material, selectedMaterial, selectedMaterialCategory,\r\n            MaterialInventory, selectedMaterialInventory, Specification,\r\n            selectedSpec, addedSamplesList, testGridArnoItems, InstrumentID,\r\n            selectedInstrumentId, sinstrumentid, selectedProjectcode, ProjectCode } = this.state;\r\n        let isStateChanged = false;\r\n        let bool = false;\r\n        addedSamplesList = [];\r\n        // samples = [];\r\n\r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            isStateChanged = true;\r\n            \r\n\r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            BCFilterStatus = constructOptionList(this.props.Login.masterData.BCFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", \"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestname', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            InstrumentCategory = constructOptionList(this.props.Login.masterData.instrumentCategory || [], 'ninstrumentcatcode', 'sinstrumentcatname',\r\n                'ascending', 'ninstrumentcatcode', false);\r\n            Instrument = constructOptionList(this.props.Login.masterData.instrument || [], 'ninstrumentnamecode', 'sinstrumentname',\r\n                'ascending', 'ninstrumentcode', false);\r\n            ProductCategory = constructOptionList(this.props.Login.masterData.productcategory || [], 'nproductcatcode', 'sproductcatname',\r\n                'ascending', 'nproductcatcode', false);\r\n            Product = constructOptionList(this.props.Login.masterData.product || [], 'nproductcode', 'sproductname',\r\n                'ascending', 'nproductcode', false);\r\n            Section = constructOptionList(this.props.Login.masterData.Section || [], 'nsectioncode', 'ssectionname',\r\n                'ascending', 'nsectioncode', false);\r\n            MaterialCategory = constructOptionList(this.props.Login.masterData.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n                'ascending', 'nmaterialcatcode', false);\r\n            Material = constructOptionList(this.props.Login.masterData.Material || [], 'nmaterialcode', 'smaterialname',\r\n                'ascending', 'nmaterialcode', false);\r\n            MaterialInventory = constructOptionList(this.props.Login.masterData.MaterialInventory || [], 'nmaterialinventtranscode', 'sinventoryid',\r\n                'ascending', 'nmaterialinventtranscode', false);\r\n            InstrumentID = constructOptionList(this.props.Login.masterData.instrumentID || [], 'ninstrumentcode', 'sinstrumentid',\r\n                'ascending', 'ninstrumentcode', false);\r\n            ProjectCode = constructOptionList(this.props.Login.masterData.ProjectCode || [], 'nprojectmastercode', 'sprojectcode',\r\n                'ascending', 'nprojectmastercode', false);\r\n\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = {\r\n                ntransactionstatus: transactionStatus.PARTIAL,\r\n                sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }),\r\n                scolorhexcode: \"#800000\"\r\n            }\r\n            const selectedFilters = this.props.Login.masterData.BCFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n\r\n            selectedFilter = selectedFiltersNew;\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            BCFilterStatus = BCFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n            InstrumentCategory = InstrumentCategory.get(\"OptionList\")\r\n            Instrument = Instrument.get(\"OptionList\")\r\n            ProductCategory = ProductCategory.get(\"OptionList\")\r\n            Product = Product.get(\"OptionList\")\r\n            Section = Section.get(\"OptionList\")\r\n            MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n            Material = Material.get(\"OptionList\")\r\n            MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n            InstrumentID = InstrumentID.get(\"OptionList\")\r\n            ProjectCode = ProjectCode.get(\"OptionList\")\r\n            //selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\r\n\r\n            samples = this.props.Login.masterData.samples;\r\n            \r\n          \r\n            addSelectAll = false;\r\n            deleteSelectAll = true;\r\n            nregsubtypecode = this.props.Login.masterData.defaultRegistrationSubType ?\r\n                {\r\n                    label: this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,\r\n                    value: this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n                    item: this.props.Login.masterData.defaultRegistrationSubType\r\n                } : \"\"\r\n\r\n            if (this.props.Login.masterData.selectedTestSynonym !== previousProps.Login.masterData.selectedTestSynonym) {\r\n                selectedTestSynonym = this.props.Login.masterData.selectedTestSynonym ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedTestSynonym.stestname,\r\n                        value: this.props.Login.masterData.selectedTestSynonym.ntestcode,\r\n                        item: this.props.Login.masterData.selectedTestSynonym\r\n                    } : \"\"\r\n                let stestname = selectedTestSynonym.item;\r\n                //selectedRecord = {...this.state.selectedRecord,stestname,...selectedRecord};\r\n                selectedRecord = { ...selectedRecord, stestname };\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedProductcategory !== previousProps.Login.masterData.selectedProductcategory) {\r\n                selectedProductCategory = this.props.Login.masterData.selectedProductcategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProductcategory.sproductcatname,\r\n                        value: this.props.Login.masterData.selectedProductcategory.nproductcatcode,\r\n                        item: this.props.Login.masterData.selectedProductcategory\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedProduct !== previousProps.Login.masterData.selectedProduct) {\r\n                selectedProduct = this.props.Login.masterData.selectedProduct ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProduct.sproductname,\r\n                        value: this.props.Login.masterData.selectedProduct.nproductcode,\r\n                        item: this.props.Login.masterData.selectedProduct\r\n                    } : \"\"\r\n                let sproductname = selectedProduct.item;\r\n                selectedRecord = { ...this.state.selectedRecord, sproductname, ...selectedRecord };\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrumentCategory !== previousProps.Login.masterData.selectedInstrumentCategory) {\r\n                selectedInstCategory = this.props.Login.masterData.selectedInstrumentCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,\r\n                        value: this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentCategory\r\n                    } : \"\"\r\n                let sinstrumentcatname = selectedInstCategory.item;\r\n                selectedRecord = { ...selectedRecord, sinstrumentcatname };\r\n                // selectedRecord = {...this.state.selectedRecord,sinstrumentcatname,...selectedRecord};\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrument !== previousProps.Login.masterData.selectedInstrument) {\r\n                selectedInstrument = this.props.Login.masterData.selectedInstrument ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrument.sinstrumentname,\r\n                        value: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrument\r\n                    } : \"\"\r\n                let sinstrumentname = selectedInstrument.item;\r\n                //selectedRecord = { ...this.state.selectedRecord, sinstrumentname, ...selectedRecord };\r\n                selectedRecord = {...selectedRecord,sinstrumentname };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrumentId !== previousProps.Login.masterData.selectedInstrumentId) {\r\n                selectedInstrumentId = this.props.Login.masterData.selectedInstrumentId ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentId.sinstrumentid,\r\n                        value: this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentId\r\n                    } : undefined\r\n                let sinstrumentid = selectedInstrumentId && selectedInstrumentId.item;\r\n                //selectedRecord = { ...this.state.selectedRecord, sinstrumentid, ...selectedRecord };\r\n                selectedRecord = {...selectedRecord,sinstrumentid };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.ProjectCode !== previousProps.Login.masterData.ProjectCode) {\r\n                selectedProjectcode = this.props.Login.masterData.selectedProjectedCode ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProjectedCode.sprojectcode,\r\n                        value: this.props.Login.masterData.selectedProjectedCode.nprojectmastercode,\r\n                        item: this.props.Login.masterData.selectedProjectedCode\r\n                    } : undefined\r\n                let sprojectcode = selectedProjectcode && selectedProjectcode.item;\r\n                selectedRecord = { ...this.state.selectedRecord, sprojectcode, ...selectedRecord };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({ userRoleControlRights, controlMap });\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedComponentList !== previousProps.Login.selectedComponentList) {\r\n                addedComponentList = this.props.Login.selectedComponentList;\r\n                isStateChanged = true;\r\n                // this.setState({ addedComponentList });\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.defaultApprovalConfigVersion !== previousProps.Login.masterData.defaultApprovalConfigVersion) {\r\n                ApprovalVersionValue = this.props.Login.masterData.defaultApprovalConfigVersion ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,\r\n                        value: this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.defaultApprovalConfigVersion\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.defaultFilterStatus !== previousProps.Login.masterData.defaultFilterStatus) {\r\n                FilterStatusValue = this.props.Login.masterData.defaultFilterStatus ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultFilterStatus.sfilterstatus,\r\n                        value: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                        item: this.props.Login.masterData.defaultFilterStatus\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedSection !== previousProps.Login.masterData.selectedSection) {\r\n                selectedSection = this.props.Login.masterData.selectedSection ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedSection.ssectionname,\r\n                        value: this.props.Login.masterData.selectedSection.nsectioncode,\r\n                        item: this.props.Login.masterData.selectedSection\r\n                    } : \"\"\r\n                let ssectionname = selectedSection.item;\r\n                selectedRecord = { ...this.state.selectedRecord, ssectionname, ...selectedRecord };\r\n                isStateChanged = true;\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialType !== previousProps.Login.masterData.selectedMaterialType) {\r\n                selectedMaterialType = this.props.Login.masterData.selectedMaterialType ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialType.smaterialtypename,\r\n                        value: this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,\r\n                        item: this.props.Login.masterData.selectedMaterialType\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialtypename\"] = this.props.Login.masterData.selectedMaterialType.smaterialtypename;\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialCategory !== previousProps.Login.masterData.selectedMaterialCategory) {\r\n                selectedMaterialCategory = this.props.Login.masterData.selectedMaterialCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,\r\n                        value: this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,\r\n                        item: this.props.Login.masterData.selectedMaterialCategory\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialcatname\"] = this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;\r\n                isStateChanged = true;\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterial !== previousProps.Login.masterData.selectedMaterial) {\r\n                selectedMaterial = this.props.Login.masterData.selectedMaterial ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterial.smaterialname,\r\n                        value: this.props.Login.masterData.selectedMaterial.nmaterialcode,\r\n                        item: this.props.Login.masterData.selectedMaterial\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialname\"] = this.props.Login.masterData.selectedMaterial.smaterialname;\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialInventory !== previousProps.Login.masterData.selectedMaterialInventory) {\r\n                selectedMaterialInventory = this.props.Login.masterData.selectedMaterialInventory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialInventory.sinventoryid,\r\n                        value: this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,\r\n                        item: this.props.Login.masterData.selectedMaterialInventory\r\n                    } : \"\"\r\n                selectedRecord[\"sinventoryid\"] = this.props.Login.masterData.selectedMaterialInventory && this.props.Login.masterData.selectedMaterialInventory.sinventoryid != null ?\r\n                    this.props.Login.masterData.selectedMaterialInventory.sinventoryid : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInventoryUnit !== previousProps.Login.masterData.selectedInventoryUnit) {\r\n                //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                selectedRecord[\"savailablequatity\"] = this.props.Login.masterData.selectedInventoryUnit &&\r\n                    this.props.Login.masterData.selectedInventoryUnit.savailablequatity != null ? this.props.Login.masterData.selectedInventoryUnit.savailablequatity : \"\";\r\n                selectedRecord[\"susedquantity\"] = \"\";\r\n                selectedRecord[\"sremarks\"] = \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.isselectedrecordempty) {\r\n                selectedRecord = {};\r\n                isStateChanged = true;\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.Specification !== previousProps.Login.masterData.Specification) {\r\n                //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                Specification = this.props.Login.masterData.Specification &&\r\n                    this.props.Login.masterData.Specification != null ? this.props.Login.masterData.Specification : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedSpec !== previousProps.Login.selectedSpec) {\r\n                selectedRecord[\"selectedSpec\"] = this.props.Login.selectedSpec &&\r\n                    this.props.Login.selectedSpec != null ? this.props.Login.selectedSpec : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                selectedRecord = this.props.Login.selectedRecord\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.\r\n                    jsondata.value)\r\n                testGridArnoItems = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n                testGridItem[0] = dynamicColumn.testListFields.releasetestfields[0] ? dynamicColumn.testListFields.releasetestfields[0] : [];\r\n                sampleGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                subsampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n                samplegridmoreitem = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                DynamicGridMoreItem = [...samplegridmoreitem]\r\n                DynamicGridItem = [...sampleGridItem, ...subsampleGridItem, ...testGridArnoItems.slice(1), ...testGridItem]\r\n                isStateChanged = true;\r\n            }\r\n        }\r\n\r\n\r\n        // if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\r\n        //     // let selectedRecord = {};\r\n        //     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n        //     'ascending', 'nmaterialcatcode', false);\r\n        //     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\r\n        //     'ascending', 'nmaterialcode', false);\r\n        //     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\r\n        //     'ascending', 'nmaterialinventorycode', false);\r\n        //      MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n        //      Material = Material.get(\"OptionList\")\r\n        //      MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n\r\n        //      selectedRecord[\"MaterialCategory\"]=MaterialCategory\r\n        //      selectedRecord[\"Material\"]=Material\r\n        //      selectedRecord[\"MaterialInventory\"]=MaterialInventory\r\n\r\n        //  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\r\n        //         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\r\n        //         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\r\n        //         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\r\n        //         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\r\n        //          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterial\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\r\n        //         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\r\n        //         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterialInventory\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\r\n        //         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            isStateChanged = true;\r\n           selectedRecord = this.props.Login.selectedRecord;\r\n            //this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n\r\n\r\n        if (isStateChanged) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord,\r\n                filterData, addedComponentList,\r\n                filterStatusList, dataState, sahDataState, bahDataState, chDataState,\r\n                testCommentDataState, SampleType, RegistrationType, RegistrationSubType,\r\n                BCFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion, skip, take,\r\n                testskip, testtake, selectedFilter, selectedInstCategory, InstrumentCategory,\r\n                Instrument, selectedInstrument, selectedTestSynonym, nregsubtypecode,\r\n                ProductCategory, selectedProductCategory, Product, selectedProduct, samples,\r\n                addSelectAll, deleteSelectAll, ApprovalVersionValue, FilterStatusValue, Section,\r\n                selectedSection, sampleGridItem, subsampleGridItem, testGridItem, DynamicGridItem,\r\n                samplegridmoreitem, DynamicGridMoreItem, MaterialCategory, selectedMaterialType,\r\n                Material, selectedMaterial, selectedMaterialCategory, MaterialInventory,\r\n                selectedMaterialInventory, Specification, selectedSpec, addedSamplesList,\r\n                testGridArnoItems, InstrumentID, selectedInstrumentId, sinstrumentid,\r\n                selectedProjectcode, ProjectCode\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openSpecModal = this.props.Login.openSpecModal;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"cancel\") {\r\n                //    this.props.Login.operation === \"complete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n        } else if (this.props.Login.openSpecModal) {\r\n            loadEsign = false;\r\n            openSpecModal = false\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, openSpecModal, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let { selectedInstCategory, selectedInstrumentId, InstrumentCategory,\r\n            selectedInstrument, Instrument, InstrumentID } = this.state;\r\n        let inputData = {};\r\n        if (comboData == null) {\r\n            selectedInstCategory = undefined;\r\n            selectedInstrumentId = undefined;\r\n            Instrument = undefined;\r\n            InstrumentID = undefined;\r\n            selectedInstrument = undefined;\r\n            selectedRecord['sinstrumentcatname'] = undefined;\r\n            selectedRecord['sinstrumentname'] = undefined;\r\n            selectedRecord['sinstrumentid'] = undefined;\r\n\r\n            this.setState({\r\n                selectedInstCategory, selectedInstrumentId, selectedInstrument,\r\n                selectedRecord, Instrument, InstrumentID\r\n            });\r\n        } else {\r\n            selectedRecord[fieldName] = comboData.item;\r\n            if (fieldName === \"sproductname\") {\r\n                selectedRecord[\"nproductcode\"] = comboData.value;\r\n                selectedRecord[\"userInfo\"] = this.props.Login.userInfo;\r\n                selectedRecord[\"stestname\"] = this.state.selectedRecord['stestname'];\r\n                selectedRecord[\"ntestcode\"] = this.state.selectedRecord['stestname']['ntestcode'];\r\n                selectedRecord[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                selectedRecord['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                selectedRecord[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                selectedRecord[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                //this.setState({ selectedProduct:comboData });\r\n                this.props.getProductBasedInstrument(selectedRecord, this.props.Login.masterData);\r\n            } else if (fieldName === \"ssectionname\") {\r\n                inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                inputData['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                inputData['section'] = selectedRecord.ssectionname;\r\n                inputData['userInfo'] = this.props.Login.userInfo;\r\n                inputData['nneedmyjob'] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.nneedmyjob : false\r\n                inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                this.props.getTestInstrumentComboService(inputData, this.props.Login.masterData);\r\n                // this.setState({ selectedSection:comboData });\r\n\r\n            } else if (fieldName === \"stestname\") {\r\n                if (this.props.Login.operation === \"update\") {\r\n                    selectedRecord[\"nprevioustestcode\"] = this.state.selectedTestSynonym.value\r\n                }\r\n                selectedRecord[\"ntestcode\"] = comboData.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                selectedRecord['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                selectedRecord[\"nprojectmastercode\"] = comboData.item.nprojectmastercode;\r\n                selectedRecord['sinstrumentcatname'] = undefined;\r\n                selectedRecord[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                selectedRecord[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                this.props.getTestInstrumentCategory(selectedRecord, this.props.Login.masterData);\r\n            } else if (fieldName === \"sinstrumentcatname\") {\r\n                selectedRecord[\"ninstrumentcatcode\"] = comboData.value;\r\n                selectedRecord[\"ncalibrationreq\"] = comboData.item.ncalibrationreq;\r\n                selectedRecord[\"ntestcode\"] = this.state.selectedTestSynonym.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                //selectedRecord['sinstrumentid']=undefined;\r\n                selectedRecord['sinstrumentname'] = undefined;\r\n                this.props.getInstrumentForInstCategory(selectedRecord, this.props.Login.masterData);\r\n                //this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n            } else if (fieldName === \"smaterialcatname\") {\r\n                selectedRecord[\"nmaterialcatcode\"] = comboData.value;\r\n                selectedRecord[\"needsectionwise\"] = comboData.item.needSectionwise;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                this.setState({ selectedMaterialCategory: comboData });\r\n                this.props.getMaterialBasedOnMaterialCategory(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n            } else if (fieldName === \"smaterialname\") {\r\n                selectedRecord[\"nmaterialcode\"] = comboData.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['needsection'] = comboData.item.needsection;\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                this.setState({ selectedMaterial: comboData });\r\n                this.props.getMaterialInventoryBasedOnMaterial(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n\r\n            } else if (fieldName === \"sinventoryid\") {\r\n                selectedRecord[\"nmaterialcode\"] = this.state.selectedMaterial.value;\r\n                selectedRecord[\"materialInvCode\"] = comboData.item.nmaterialinventorycode;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['needsection'] = this.props.Login.masterData.selectedMaterial.needsection;\r\n                this.setState({ selectedMaterialInventory: comboData });\r\n                // if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\r\n                //     selectedRecord['nsectioncode']=transactionStatus.NA;\r\n                // }else{\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                //}\r\n                this.props.getMaterialAvailQtyBasedOnInv(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n            } else if (fieldName === \"sinstrumentname\") {\r\n                selectedRecord[\"ninstrumentnamecode\"] = comboData.value;\r\n                selectedRecord[\"sinstrumentname\"] = comboData.label;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                //selectedRecord['sinstrumentid']=undefined;\r\n                selectedRecord['selectedInstrument'] = comboData.item;\r\n                selectedRecord['ninstrumentcatcode'] = comboData.item.ninstrumentcatcode;\r\n                selectedRecord['ninstrumentcode'] = comboData.item.ninstrumentcode;\r\n                this.props.getInstrumentID(selectedRecord, this.props.Login.masterData);\r\n            } else if (fieldName === \"sprojectcode\") {\r\n                this.setState({ selectedProjectcode: comboData });\r\n            } else {\r\n                this.setState({ selectedInstrumentId: comboData });\r\n            }\r\n            // else{\r\n            //    // let nInstrumentCategory=\"\",nInstrument=\"\",nInstrumentID=\"\";\r\n            //     this.setState=({InstrumentCategory:{},Instrument:{},\r\n            //         InstrumentID:})\r\n            //   }\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getBatchManufacturerComboChange(selectedRecord, this.props.Login.userInfo);\r\n    }\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    clearComponentInput = () => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"nproductcode\"] = undefined;\r\n        selectedRecord[\"ncomponentcode\"] = undefined;\r\n        selectedRecord[\"smanuflotno\"] = \"\";\r\n        selectedRecord[\"dateprompt\"] = transactionStatus.NO;\r\n        selectedRecord[\"transdatefrom\"] = this.props.Login.componentDefaultSearchDate;\r\n        selectedRecord[\"transdateto\"] = this.props.Login.componentDefaultSearchDate;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    openClosePortal = () => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode !== transactionStatus.NA) {\r\n            if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED) {\r\n                if (this.props.Login.openELNSheet === undefined || !this.props.Login.openELNSheet) {\r\n                    if (this.props.Login.elnUserInfo !== null || this.props.Login.elnUserInfo != undefined) {\r\n                        this.props.Login.masterData.enlLink = \"\";\r\n                        let integrationSettings = this.props.Login.integrationSettings;\r\n                        let inputParam = {\r\n                            userInfo: this.props.Login.userInfo,\r\n                            elnUserInfo: this.props.Login.elnUserInfo,\r\n                            elnSite: this.props.Login.elnSite,\r\n                            nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.sbatcharno,\r\n                            ntestcode: this.props.Login.masterData.ntestcode\r\n                        }\r\n                        let link = \"\";\r\n\r\n                        let detail = CF_encryptionData(\"-1//Sheet\").EncryptData;\r\n\r\n                        const settedId = inputParam.nbatchmastercode;\r\n                        //console.log(settedId);\r\n                        let encryptedbatchid = CF_encryptionData(settedId).EncryptData;\r\n                        const userObject = {\r\n                            usercode: inputParam.elnUserInfo.nelncode,\r\n                            username: inputParam.elnUserInfo.selnuserid,\r\n                            userfullname: inputParam.elnUserInfo.selnusername,\r\n                            lsusergroup: {\r\n                                usergroupcode: inputParam.elnUserInfo.nelnusergroupcode,\r\n                                usergroupname: inputParam.elnUserInfo.nelnusergroupcode,\r\n                            },\r\n                            lssitemaster: {\r\n                                sitecode: inputParam.elnSite.nelnsitecode\r\n                            }\r\n                        }\r\n                        let encrypteduser = CF_encryptionData(userObject).EncryptData;\r\n                        const baseURL = integrationSettings[1].slinkname\r\n\r\n                        link = baseURL + \"/vieworder\" + '#{\"d\":\"' + settedId + '\",\"user\":\"' + encrypteduser + '\",\"batchid\":\"' + encryptedbatchid + '\"}';\r\n                        // this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                openELNSheet: true,\r\n                                masterData: {\r\n                                    ...this.props.Login.masterData,\r\n                                    enlLink: link,\r\n                                    baseURL: baseURL\r\n                                }\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_ELNSHEETNOTFOUND\" }));\r\n                    }\r\n                } else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openELNSheet: false,\r\n                            masterData: {\r\n                                ...this.props.Login.masterData,\r\n                                enlLink: \"\"\r\n                            }\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHWITHINSTRUMENT\" }));\r\n        }\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        let selectedRecord = {};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = attachedFiles;\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    saveSample = (addedsamplelist) => {\r\n        if (addedsamplelist === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n        } else if (addedsamplelist.length > 0) {\r\n            let sampleArray = [];\r\n            addedsamplelist.map(item =>\r\n                sampleArray.push({\r\n                    npreregno: item.npreregno,\r\n                    ntransactionsamplecode: item.ntransactionsamplecode,\r\n                    ntransactiontestcode: item.ntransactiontestcode,\r\n                    nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster ?\r\n                        this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode : transactionStatus.NA,\r\n                    sarno: item.jsonuidata.samplelist.sarno,\r\n                    ssamplearno: item.jsonuidata.samplelist.ssamplearno,\r\n                    stestname: item.jsonuidata.samplelist.stestname,\r\n                    jsonuidata: {\r\n                        samplelist: item.jsonuidata.samplelist,\r\n                    },\r\n                    jsondata: {\r\n                        samplelist: item.jsondata.samplelist,\r\n                    }\r\n                }\r\n                )\r\n            )\r\n\r\n            let nbatchmastercode = this.props.Login.masterData.SelectedBatchmaster &&\r\n                this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n            // batchSample = {\r\n            //     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n            //     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\r\n            //     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\r\n            //     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n            //     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\r\n            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n            //     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\r\n            //     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\r\n            // }\r\n            //jsondata : \r\n\r\n            const inputParam = {\r\n                inputData: {\r\n                    batchSample: nbatchmastercode,\r\n                    sampleArray,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    nregtypecode: this.props.Login.masterData.defaultRegistrationType ?\r\n                        this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode\r\n                        : transactionStatus.NA,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA\r\n                }\r\n            }\r\n            this.props.createSampleAction(inputParam.inputData);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        if (this.props.Login.operation === \"createSample\") {\r\n            this.saveSample(this.state.addedSamplesList)\r\n        } else if (this.props.Login.operation === \"initiate\") {\r\n            this.testStartActions(this.props.Login.masterData.SelectedBatchmaster, this.props.Login.testStartId)\r\n        } else if (this.props.Login.operation === \"complete\") {\r\n            this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster, this.props.Login.completeId)\r\n        } else if (this.props.Login.operation === \"createiqcsample\") {\r\n            this.batchSaveIQCActions(this.props.Login.masterData.SelectedBatchmaster)\r\n        } else {\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            if (this.props.Login.operation === \"create\") {\r\n                inputData[\"fromDate\"] = obj.fromDate;\r\n                inputData[\"toDate\"] = obj.toDate;\r\n            }\r\n\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nneedcombodataforFilter\"] = \"true\"\r\n            inputData[\"needFilterSubmit\"] = \"false\"\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nprevioustestcode\"] = this.state.selectedRecord && this.state.selectedRecord.nprevioustestcode != undefined ? this.state.selectedRecord.nprevioustestcode : this.state.selectedTestSynonym.value;\r\n            inputData[\"ntestcode\"] = this.state.selectedTestSynonym ? this.state.selectedTestSynonym.value : transactionStatus.NA;\r\n            inputData[\"nsectioncode\"] = this.state.selectedSection ? this.state.selectedSection.item.nsectioncode : transactionStatus.NA;\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\r\n            inputData[\"ninstrumentcatcode\"] = this.state.selectedInstCategory ? this.state.selectedInstCategory.value : transactionStatus.NA;\r\n            inputData[\"ninstrumentcode\"] = this.state.selectedInstrument ? this.state.selectedInstrument.value : transactionStatus.NA;\r\n            inputData[\"nproductcode\"] = this.state.selectedProduct ? this.state.selectedProduct.value : transactionStatus.NA;\r\n            inputData[\"ntransactionstatus\"] = transactionStatus.DRAFT;\r\n            inputData[\"sbatcharno\"] = '-';\r\n            // inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n            // this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\r\n            // inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n            // this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n            // inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \r\n            // this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n           // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n          inputData[\"ntranscode\"] = transactionStatus.DRAFT;\r\n\r\n           \r\n           inputData[\"sinstrumentid\"] = this.state.selectedInstrumentId ? this.state.selectedInstrumentId.label:\"NA\";\r\n            // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n            // this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n            // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : transactionStatus.NA;\r\n            inputData[\"nprojectmastercode\"] = this.state.selectedProjectcode ? this.state.selectedProjectcode.value : transactionStatus.NA;\r\n            let postParam = undefined;\r\n            postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\"\r\n            };\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                postParam,\r\n                searchRef: this.searchRef,\r\n                operation: this.props.Login.operation,\r\n                saveType,\r\n                formRef,\r\n            }\r\n            if (this.props.Login.operation === \"create\") {\r\n                this.searchRef.current.value = \"\";\r\n                this.props.createBatchmasterAction(inputParam[\"inputData\"], this.props.Login.masterData, inputParam[\"operation\"]);\r\n            } else {\r\n                inputData[\"nbatchmastercode\"] = this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n                inputData[\"SelectedBatchmaster\"] = this.props.Login.masterData.SelectedBatchmaster;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.editId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: {\r\n                                inputParam,\r\n                                masterData: this.props.Login.masterData\r\n                            },\r\n                            openModal: true,\r\n                            screenName: \"IDS_BATCHCREATION\",\r\n                            operation: inputParam.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.updateBatchcreationAction(inputParam[\"inputData\"], this.props.Login.masterData, inputParam[\"operation\"]);\r\n                }\r\n            }\r\n        }\r\n        // const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        // if (esignNeeded) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n        //             operation: this.props.Login.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\r\n        //     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        // }\r\n    }\r\n\r\n    deleteBatchCreation = (selectedBatch, deleteId, operation) => {\r\n        if (selectedBatch.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.INITIATED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }\r\n        else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedBatch.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : transactionStatus.NA,\r\n                    nsampletypecode: this.props.Login.masterData.defaultSampleType.nsampletypecode\r\n                },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"currentdate\"] = formatInputDate(new Date(), true)\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedBatch.nbatchmastercode;\r\n            //inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1=>item1.item.ntransactionstatus!==transactionStatus.ALL).map(item1=>item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n\r\n            // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n            // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ?\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"selectedBatch\"] = selectedBatch;\r\n            inputData[\"samples\"] = this.props.Login.masterData.Samples;\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                operation,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchEditData = (editParam) => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT) {\r\n            this.props.getActiveBatchCreationService(editParam,\r\n                this.props.Login.masterData.SelectedBatchmaster)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\t\t//ALPD-3399\r\n        if(this.props.Login.operation==\"complete\"|| this.props.Login.operation==\"initiate\"){\r\n            this.props.validateEsignforBatch(inputParam,);\r\n        }else{\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n       \r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            fromDate:this.props.Login.masterData.realFromDate||new Date(),//this.state.selectedFilter[\"fromDate\"] != undefined ?\r\n                //rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"fromDate\"]) : this.fromDate,\r\n            toDate:  this.props.Login.masterData.realToDate||new Date(), //this.state.selectedFilter[\"toDate\"] != undefined ?\r\n               // rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"toDate\"]) : this.toDate,\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            defaultSampleType: this.props.Login.masterData.realSampleTypeValue || {},\r\n            RegistrationType: this.props.Login.masterData.realRegistrationTypeList || [],\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            defaultRegistrationType: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegistrationSubType: this.props.Login.masterData.realRegistrationSubTypeList || [],\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            //ALPD-3571--Vignesh R(05-09-2024)\r\n\t\t\tBCFilterStatus: this.props.Login.masterData.realBCFilterStatusList || [],\r\n            FilterStatusValue: this.props.Login.masterData.realdefaultFilterStatus || {},\r\n            ApprovalConfigVersion: this.props.Login.masterData.realApprovalConfigVersionList || [],\r\n            ApprovalVersionValue: this.props.Login.masterData.realApproveConfigVersion || {},\r\n            defaultFilterStatus:this.props.Login.masterData.realdefaultFilterStatus || {},\r\n            defaultApprovalConfigVersion:this.props.Login.masterData.realApproveConfigVersion || {},\r\n            defaultRegistrationSubType:this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.realndesigntemplatemappingcode || -1\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n\r\n        if (this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined\r\n        ) {\r\n            let inputData = {};\r\n\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.fromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"realFromDate\"] = obj.fromDate;\r\n            inputData[\"realToDate\"] = obj.toDate;\r\n            inputData[\"needFilterSubmit\"] = \"true\";\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n           // inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===0 ? this.state.BCFilterStatus.map(item1=>\"'\"+item1.item.ntransactionstatus+\"'\").join(\",\") : this.state.FilterStatusValue.value;\r\n\t\t\t//ALPD-3399          \r\n \t\t\tinputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1=>item1.item.ntransactionstatus!==transactionStatus.ALL).map(item1=>item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n\r\n           inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            //  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n            transactionStatus.NA;\r\n        //inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n       // inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n\r\n        inputData[\"realRegistrationTypeList\"] = this.props.Login.masterData.RegistrationType;\r\n        inputData[\"realRegTypeValue\"] =this.props.Login.masterData.defaultRegistrationType;\r\n        inputData[\"realRegistrationSubTypeList\"] = this.props.Login.masterData.RegistrationSubType;\r\n        inputData[\"realRegSubTypeValue\"] =this.props.Login.masterData.defaultRegistrationSubType;\r\n        inputData[\"realBCFilterStatusList\"] =this.props.Login.masterData.BCFilterStatus;\r\n        inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue!==undefined? this.state.FilterStatusValue && this.state.FilterStatusValue.item :this.props.Login.masterData.defaultFilterStatus;\r\n        inputData[\"realApprovalConfigVersionList\"] = this.props.Login.masterData.ApprovalConfigVersion;\r\n        //inputData[\"realApproveConfigVersion\"] = this.props.Login.masterData.defaultApprovalConfigVersion;\r\n        inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue!==undefined? this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item :this.props.Login.masterData.defaultApprovalConfigVersion;\r\n\r\n        inputData[\"realndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode;\r\n        inputData[\"operation\"]=\"filtersubmit\";\r\n            \r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n            this.props.onActionFilterSubmit(inputParam[\"inputData\"], this.props.Login.masterData);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n        if (this.props.Login.masterData.realRegTypeValue !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realRegTypeValue !== null &&\r\n            this.props.Login.masterData.realRegSubTypeValue !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realRegSubTypeValue !== null &&\r\n            this.props.Login.masterData.realApproveConfigVersion !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realApproveConfigVersion !== null &&\r\n            this.props.Login.masterData.defaultFilterStatus !== transactionStatus.NA ||\r\n            this.props.Login.masterData.defaultFilterStatus !== null) {\r\n\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue &&\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType;\r\n\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n\r\n            inputData[\"defaultRegistrationSubType\"] = this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n\r\n            //inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1=>item1.item.ntransactionstatus!==transactionStatus.ALL).map(item1=>item1.item.ntransactionstatus).join(\",\") :this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus;\r\n\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA;\r\n\r\n            inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA;\r\n\r\n            //inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n            inputData[\"realdefaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"realRegistrationTypeList\"] =this.props.Login.masterData.realRegistrationTypeList;\r\n            inputData[\"realRegTypeValue\"]=this.props.Login.masterData.realRegTypeValue ;\r\n            inputData[\"realRegistrationSubTypeList\"] =this.props.Login.masterData.realRegistrationSubTypeList;\r\n            inputData[\"realRegSubTypeValue\"] =this.props.Login.masterData.realRegSubTypeValue;\r\n            inputData[\"realBCFilterStatusList\"]=this.props.Login.masterData.realBCFilterStatusList;\r\n            inputData[\"realdefaultFilterStatus\"] =this.state.FilterStatusValue!==undefined? this.state.FilterStatusValue && this.state.FilterStatusValue.item :this.props.Login.masterData.realdefaultFilterStatus;\r\n            inputData[\"realApprovalConfigVersionList\"] =this.props.Login.masterData.realApprovalConfigVersionList;\r\n            inputData[\"realApproveConfigVersion\"]=this.props.Login.masterData.realApproveConfigVersion ;\r\n            inputData[\"realndesigntemplatemappingcode\"]=this.props.Login.masterData.realndesigntemplatemappingcode;\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n\r\n            this.props.onActionFilterSubmit(inputParam[\"inputData\"], this.props.Login.masterData);\r\n        } else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n\r\n    // addtest=(addParam)=>{\r\n    //     if(this.props.Login.masterData.Batchmaster == undefined ){\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" })); \r\n    //     }else{\r\n    //         this.props.getTestInstrumentComboService(addParam)\r\n    //     }\r\n    // }\r\n\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    onClickReport = (selectedRecord, flag, ncontrolcode) => {\r\n        const reportParam = {\r\n            classUrl: \"certificategeneration\",\r\n            methodUrl: \"reportGeneration\",\r\n            screenName: \"CertificateGeneration\",\r\n            operation: \"previewReport\",\r\n            primaryKeyField: \"nreleasebatchcode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: -1,\r\n            inputData: {\r\n                sprimarykeyname: 'nreleasebatchcode',\r\n                nprimarykey: selectedRecord.nreleasebatchcode,\r\n                nreleasebatchcode: selectedRecord.nreleasebatchcode,\r\n                ncertificatetypecode: selectedRecord.ndecision === transactionStatus.PASS && flag === 1 ? selectedRecord.ncertificatetypecode : -1,\r\n                ndecisionstatus: selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\r\n                nreporttypecode: flag === 2 ? reportTypeEnum.SCREENWISE : reportTypeEnum.BATCH,\r\n                ncontrolcode,\r\n                ncoareporttypecode: flag === 2 ? -1 : reportCOAType.BATCHPREVIEW,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                skipbatchvalidation: true,\r\n            }\r\n        };\r\n        this.props.onClickReport(reportParam)\r\n    }\r\n\r\n    reportMethod = (value) => {\r\n        if (value.method === 1) {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 2, value.controlId);\r\n        }\r\n        else {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 1, value.controlId);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,\r\n    getTestInstrumentComboService, getTestInstrumentCategory, getInstrumentForInstCategory,\r\n    getProductBasedInstrument,\r\n    getBatchCreationDetails, onActionFilterSubmit, getProductcategoryAction,\r\n    createBatchmasterAction, getSamplesForGrid, getSelectedBatchCreationDetail,\r\n    createSampleAction, deleteSampleAction, getActiveBatchCreationService,\r\n    updateBatchcreationAction, deleteBatchCreation, batchInitiateAction,\r\n    getBCRegistrationSubType, batchCompleteAction, validateEsignCredential,\r\n    filterColumnData, getBatchhistoryAction,\r\n    getBatchSection, viewInfo, getIqcSamples, getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial, batchSaveIQCActions, getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction, getBCApprovalConfigVersion, getBCRegistrationType,\r\n    getTreeByMaterial, getNewRegSpecification, cancelIQCSampleAction, batchCancelAction,\r\n    batchInitiateDatePopup, batchCompleteDatePopup, getInstrumentID, getBatchViewResultAction,validateEsignforBatch\r\n    //,batchTAT\r\n})(injectIntl(BatchCreation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}