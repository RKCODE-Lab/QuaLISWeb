{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{transactionStatus,attachmentType}from'../components/Enumeration';import{intl}from\"../components/App\";import{modalSave}from'./ServiceAction';export var changeProjectTypeFilter=function changeProjectTypeFilter(inputParam,filterProjectType){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/projectmaster/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,dataState:undefined,masterData:_objectSpread(_objectSpread({},masterData),{},{filterProjectType:filterProjectType,nfilterProjectType:inputParam.inputData.nfilterProjectType})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getuserComboServices(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getUsers\",{\"userinfo\":methodParam.inputData.userinfo,\"nuserrolecode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var userList;var userMap=constructOptionList(response[0].data||[],\"nusercode\",\"susername\",undefined,undefined,false);userList=userMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{userList:userList,selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}//Add Project Master\nexport var addProjectMaster=function addProjectMaster(operation,nfilterProjectMaster,userInfo,ncontrolCode,selectedRecordvalue,SelectedProjectType){return function(dispatch){// if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\nif(selectedRecordvalue&&selectedRecordvalue.nprojecttypecodevalue!==undefined){if(Object.values(selectedRecordvalue.nprojecttypecodevalue).length>0&&selectedRecordvalue.nprojecttypecodevalue!==undefined&&operation==='create'||nfilterProjectMaster&&nfilterProjectMaster.nprojecttypecode>0&&operation==='update'&&nfilterProjectMaster.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));var urlArray=[];var selectedRecord={};// selectedRecord = selectedRecordvalue ;\nif(operation===\"create\"||operation===\"update\"){urlArray.push(rsapi.post(\"projecttype/getProjectType\",{\"userinfo\":userInfo}));/*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                               \"userinfo\": userInfo\r\n                           })); */urlArray.push(rsapi.post(\"projectmaster/getUserrole\",{\"userinfo\":userInfo}));// urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\n//     \"userinfo\": userInfo //,\n//     // \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\n// })); \nurlArray.push(rsapi.post(\"projectmaster/getTeammembers\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\",{\"userinfo\":userInfo,\"ncontrolcode\":ncontrolCode}));urlArray.push(rsapi.post(\"clientcategory/getClientCategory\",{\"userinfo\":userInfo}));}if(operation===\"update\"){urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\",{\"userinfo\":userInfo,\"nprojectmastercode\":nfilterProjectMaster.nprojectmastercode}));urlArray.push(rsapi.post(\"projectmaster/getUsers\",{\"userinfo\":userInfo,\"nuserrolecode\":nfilterProjectMaster.nuserrolecode}));urlArray.push(rsapi.post(\"client/getClientByCategory\",{\"nclientcatcode\":nfilterProjectMaster.nclientcatcode,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projectmaster/getQuotaionNoByClient\",{\"nclientcatcode\":nfilterProjectMaster.nclientcatcode,\"nclientcode\":nfilterProjectMaster.nclientcode,\"userinfo\":userInfo}));}Axios.all(urlArray).then(function(response){var testData={};var _ref=[],ProjectType=_ref.ProjectType,Userrole=_ref.Userrole,userList=_ref.userList,TeamMembers=_ref.TeamMembers,PeriodByControl=_ref.PeriodByControl,ClientCategory=_ref.ClientCategory,Client=_ref.Client,QuotationNo=_ref.QuotationNo;if(operation===\"create\"){ProjectType=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");Userrole=constructOptionList(response[1].data||[],\"nuserrolecode\",\"suserrolename\",false,false,true).get(\"OptionList\");//                Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\nTeamMembers=constructOptionList(response[2].data||[],\"nusercode\",\"steammembername\",false,false,true).get(\"OptionList\");PeriodByControl=constructOptionList(response[3].data||[],\"nperiodcode\",\"speriodname\",false,false,true).get(\"OptionList\");ClientCategory=constructOptionList(response[4].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");selectedRecord={\"nprojecttypecode\":{\"value\":SelectedProjectType.nprojecttypecode,\"label\":SelectedProjectType.sprojecttypename}};}else if(operation===\"update\"){var editData=response[5].data.SelectedProjectMaster;selectedRecord[\"sprojectcode\"]=editData.sprojectcode;selectedRecord[\"sprojecttitle\"]=editData.sprojecttitle;selectedRecord[\"sprojectdescription\"]=editData.sprojectdescription;selectedRecord[\"nprojectduration\"]=editData.nprojectduration;selectedRecord[\"sprojectname\"]=editData.sprojectname;selectedRecord[\"srfwid\"]=editData.srfwid;selectedRecord=_objectSpread({},selectedRecord);ProjectType=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");Userrole=constructOptionList(response[1].data||[],\"nuserrolecode\",\"suserrolename\",false,false,true).get(\"OptionList\");userList=constructOptionList(response[6].data||[],\"nusercode\",\"susername\",false,false,true).get(\"OptionList\");TeamMembers=constructOptionList(response[2].data||[],\"nusercode\",\"steammembername\",false,false,true).get(\"OptionList\");PeriodByControl=constructOptionList(response[3].data||[],\"nperiodcode\",\"speriodname\",false,false,true).get(\"OptionList\");ClientCategory=constructOptionList(response[4].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");Client=constructOptionList(response[7].data.Client||[],\"nclientcode\",\"sclientname\",false,false,true).get(\"OptionList\");QuotationNo=constructOptionList(response[8].data||[],\"nquotationcode\",\"squotationno\",false,false,true).get(\"OptionList\");selectedRecord[\"nprojecttypecode\"]={\"value\":editData[\"nprojecttypecode\"],\"label\":editData[\"sprojecttypename\"]};selectedRecord[\"nuserrolecode\"]={\"value\":editData[\"nuserrolecode\"],\"label\":editData[\"suserrolename\"]};selectedRecord[\"nusercode\"]={\"value\":editData[\"nusercode\"],\"label\":editData[\"susername\"]};selectedRecord[\"nteammembercode\"]={\"value\":editData[\"nteammembercode\"],\"label\":editData[\"steammembername\"]};selectedRecord[\"nperiodcode\"]={\"value\":editData[\"nperiodcode\"],\"label\":editData[\"speriodname\"]};selectedRecord[\"nclientcatcode\"]={\"value\":editData[\"nclientcatcode\"],\"label\":editData[\"sclientcatname\"]};selectedRecord[\"nclientcode\"]={\"value\":editData[\"nclientcode\"],\"label\":editData[\"sclientname\"]};if(editData[\"nquotationcode\"]!=-1)selectedRecord[\"nquotationcode\"]={\"value\":editData[\"nquotationcode\"],\"label\":editData[\"squotationno\"]};// selectedRecord[\"nstudydirectorcode\"] = response[1].data;\n// selectedRecord[\"nteammembercode\"] = response[2].data;\n//  selectedRecord[\"nperiodcode\"] = response[3].data;\n// selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\n// selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\nif(editData.srfwdate!=\"-\"){selectedRecord[\"drfwdate\"]=rearrangeDateFormat(userInfo,editData.srfwdate);}if(editData.sexpectcompletiondate!=\"-\"){selectedRecord[\"dexpectcompletiondate\"]=rearrangeDateFormat(userInfo,editData.sexpectcompletiondate);}selectedRecord[\"dprojectstartdate\"]=rearrangeDateFormat(userInfo,editData.sprojectstartdate);}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,ProjectType:ProjectType,Userrole:Userrole,userList:userList,TeamMembers:TeamMembers,PeriodByControl:PeriodByControl,ClientCategory:ClientCategory,Client:Client,QuotationNo:QuotationNo,operation:operation,screenName:\"IDS_PROJECTMASTER\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,testData:testData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}}else{//  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\nif(nfilterProjectMaster!==null&&operation===\"update\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_PROJECTTYPENOTAVAILABLE\"}));}}};};export var addProjectMasterFile=function addProjectMasterFile(inputParam){return function(dispatch){if(inputParam.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo})];if(inputParam.operation===\"update\"){urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\",{userinfo:inputParam.userInfo,projectmasterfile:inputParam.selectedRecord}));}Axios.all(urlArray).then(function(response){var _payload;var linkMap=constructOptionList(response[0].data.LinkMaster,\"nlinkcode\",\"slinkname\",false,false,true);var linkmaster=linkMap.get(\"OptionList\");var selectedRecord={};var defaultLink=linkmaster.filter(function(items){return items.item.ndefaultlink===transactionStatus.YES;});var disabled=false;var editObject={};if(inputParam.operation===\"update\"){editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?defaultLink[0]:\"\";//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\nlink={slinkfilename:'',slinkdescription:'',nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}selectedRecord=_objectSpread(_objectSpread(_objectSpread({},link),{},{nprojectmasterfilecode:editObject.nprojectmasterfilecode,nattachmenttypecode:editObject.nattachmenttypecode},editObject),{},{nlinkcode:nlinkcode// disabled: true\n});}else{selectedRecord={nattachmenttypecode:response[0].data.AttachmentType.length>0?response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,nlinkcode:defaultLink.length>0?defaultLink[0]:\"\",//{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\ndisabled:disabled};}dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"operation\",inputParam.operation),_defineProperty(_payload,\"screenName\",inputParam.screenName),_defineProperty(_payload,\"ncontrolCode\",inputParam.ncontrolCode),_defineProperty(_payload,\"selectedRecord\",selectedRecord),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"linkMaster\",linkmaster),_defineProperty(_payload,\"showSaveContinue\",false),_defineProperty(_payload,\"editFiles\",editObject.nattachmenttypecode===attachmentType.FTP?editObject:{}),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};};//ProjectMaster Click\nexport var getProjectMaster=function getProjectMaster(projectmasterItem,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/projectmaster/getActiveProjectMasterById\",{nprojectmastercode:projectmasterItem.nprojectmastercode,nprojecttypecode:projectmasterItem.nprojecttypecode,userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);// ...masterData,\n// ...response.data\nmasterData=masterData1;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,dataState:undefined,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getProjectmasterAddMemberService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){// if (masterData.SelectedProjectMaster.ntransactionstatus !== transactionStatus.RETIRED) {\ndispatch(initRequest(true));rsapi.post(\"projectmaster/getProjectUnmappedTeammember\",{\"nprojectmastercode\":masterData.SelectedProjectMaster[\"nprojectmastercode\"],userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);masterData=masterData1;dispatch({type:DEFAULT_RETURN,payload:{MembersList:response.data,masterData:masterData,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//}\n// else {\n//     toast.warn(intl.formatMessage({ id: \"IDS_SELECTNONRETIEDPROJECTMASTERVERSION\" }));\n// }\n};}export function ReportInfo(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolCode,needjsontemplate){return function(dispatch){var Status=masterData.SelectedProjectMaster.ntransactionstatus;if(Status===transactionStatus.DRAFT||Status===transactionStatus.APPROVED){var _rsapi$post,_rsapi$post2;var urlArray=[];// const Submitter = rsapi.post(\"/projectmaster/getEditReportInfoProject\", {\n//                                   [primaryKeyName]: masterData.SelectedProjectMaster[primaryKeyName],needjsontemplate:needjsontemplate!=4?3:4,\n//                                   \"userinfo\": userInfo\n//                 });\nurlArray.push(rsapi.post(\"/projectmaster/getEditReportInfoProject\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,masterData.SelectedProjectMaster[primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post)));if(needjsontemplate!=4)urlArray.push(rsapi.post(\"/projectmaster/getReportTemplate\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"/projectmaster/getActiveReportTemplate\",(_rsapi$post2={},_defineProperty(_rsapi$post2,primaryKeyName,masterData.SelectedProjectMaster[primaryKeyName]),_defineProperty(_rsapi$post2,\"userinfo\",userInfo),_rsapi$post2)));// const ReportTemplate=rsapi.post(\"/projectmaster/getReportTemplate\", {\n//     \"userinfo\": userInfo});\n//urlArray = [Submitter,ReportTemplate];\ndispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var reportTemplateList=[];if(needjsontemplate!=4){reportTemplateList=constructOptionList(response[1].data||[],\"nreporttemplatecode\",\"stemplatename\",undefined,undefined,false).get(\"OptionList\");}selectedRecord[\"sreporttemplateversion\"]=response[0].data.ReportInfoProject.sreporttemplateversion;selectedRecord[\"srevision\"]=response[0].data.ReportInfoProject.srevision;selectedRecord[\"srevisionauthor\"]=response[0].data.ReportInfoProject.srevisionauthor;selectedRecord[\"sintroduction\"]=response[0].data.ReportInfoProject.sintroduction;selectedRecord[\"stestproductheadercomments\"]=response[0].data.ReportInfoProject.stestproductheadercomments;selectedRecord[\"stestproductfootercomments1\"]=response[0].data.ReportInfoProject.stestproductfootercomments1;selectedRecord[\"stestproductfootercomments2\"]=response[0].data.ReportInfoProject.stestproductfootercomments2;selectedRecord[\"stestproductfootercomments3\"]=response[0].data.ReportInfoProject.stestproductfootercomments3;selectedRecord[\"stestproductfootercomments4\"]=response[0].data.ReportInfoProject.stestproductfootercomments4;selectedRecord[\"ssamplingdetails\"]=response[0].data.ReportInfoProject.ssamplingdetails;selectedRecord[\"suncertainitymeasurement\"]=response[0].data.ReportInfoProject.suncertainitymeasurement;if(needjsontemplate!=4){if(response[2].data.ReportTemplate!=null){selectedRecord[\"nreporttemplatecode\"]={\"value\":response[2].data.ReportTemplate[\"nreporttemplatecode\"],\"label\":response[2].data.ReportTemplate[\"stemplatename\"]};}}dispatch({type:DEFAULT_RETURN,payload:{isOpen:true,masterData:masterData,selectedRecord:selectedRecord,operation:operation,screenName:screenName,openModal:true,ncontrolCode:ncontrolCode,loading:false,reportTemplateList:reportTemplateList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.info(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORD\"}));}};}export function getClientByCategory(methodParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/client/getClientByCategory\",{\"nclientcatcode\":methodParam.inputData.primarykey,\"userinfo\":methodParam.inputData.userinfo}).then(function(response){var Client=[];Client=constructOptionList(response.data.Client||[],\"nclientcode\",\"sclientname\",undefined,undefined,false).get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,Client:Client,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getQuotationByClient(methodParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/projectmaster/getQuotaionNoByClient\",{\"nclientcatcode\":methodParam.inputData.nclientcatcode,\"nclientcode\":methodParam.inputData.nclientcode,\"userinfo\":methodParam.inputData.userinfo}).then(function(response){var QuotationNo=[];QuotationNo=constructOptionList(response.data||[],\"nquotationcode\",\"squotationno\",undefined,undefined,false).get(\"OptionList\");QuotationNo.map(function(key){});dispatch({type:DEFAULT_RETURN,payload:{loading:false,QuotationNo:QuotationNo,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function closureProjectMaster(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var formData=inputParam.formData;formData.append(\"userinfo\",JSON.stringify(inputParam.inputData.userinfo));rsapi.post(inputParam.classUrl+\"/\"+\"closure\"+inputParam.methodUrl,formData).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);// const foundIndex = masterData[\"ProjectMaster\"].findIndex(\n//     x => x[\"nprojectmastercode\"] === masterData[\"SelectedProjectMaster\"][\"nprojectmastercode\"]\n//   );\nif(masterData[\"searchedData\"]){var foundIndex1=masterData[\"searchedData\"].findIndex(function(x){return x[\"nprojectmastercode\"]===masterData[\"SelectedProjectMaster\"][\"nprojectmastercode\"];});// masterData[\"ProjectMaster\"][foundIndex] = masterData[\"SelectedProjectMaster\"];\n}masterData=sortData(masterData);//  })             \ndispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,openModal:false,operation:inputParam.operation,ncontrolCode:inputParam.ncontrolCode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignforModal(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}// ALPD-2437 added for Type3 Component. Use selected record to clear esign values\nif(inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];}dispatch(modalSave(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function projectMasterModal(selectedProjecmaster,operation,screenName,ncontrolcode,sdate,userInfo){return function(dispatch){var alertMsg;var check;if(operation===\"complete\"||operation===\"retire\"){check=selectedProjecmaster.ntransactionstatus===transactionStatus.APPROVED;alertMsg=\"IDS_SELECTAPPROVEVERSION\";}if(operation===\"closure\"){alertMsg=\"IDS_SELECTCOMPLETEORRETIREACTION\";check=selectedProjecmaster.ntransactionstatus===transactionStatus.COMPLETED||selectedProjecmaster.ntransactionstatus===transactionStatus.RETIRED;}if(check){dispatch(initRequest(true));var selectedRecord={};var ntimezonedate;var stimezonedate;var openModal=false;var modalShow=false;if(operation===\"complete\"){ntimezonedate=\"ntzprojectcompletiondate\";stimezonedate=\"stzprojectcompletiondate\";modalShow=true;}if(operation===\"retire\"){ntimezonedate=\"ntzprojectretiredate\";stimezonedate=\"stzprojectretiredate\";modalShow=true;}if(operation===\"closure\"){ntimezonedate=\"ntzprojectclosuredate\";stimezonedate=\"stzprojectclosuredate\";openModal=true;}var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var UTCtimeZoneService=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userInfo});urlArray=[timeZoneService,UTCtimeZoneService];Axios.all(urlArray).then(function(response){var timezoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,false);var TimeZoneList=timezoneMap.get(\"OptionList\");var date=rearrangeDateFormat(userInfo,response[1].data);selectedRecord={ntimezonedate:{\"value\":userInfo.ntimezonecode,\"label\":userInfo.stimezoneid},stimezonedate:userInfo.stimezoneid};selectedRecord[sdate]=date;dispatch({type:DEFAULT_RETURN,payload:{loading:false,selectedRecord:selectedRecord,modalShow:modalShow,operation:operation,screenName:screenName,TimeZoneList:TimeZoneList,ncontrolcode:ncontrolcode,openModal:openModal}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:alertMsg}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ProjectMasterAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","sortData","constructOptionList","rearrangeDateFormat","transactionStatus","attachmentType","intl","modalSave","changeProjectTypeFilter","inputParam","filterProjectType","dispatch","post","methodUrl","inputData","then","response","masterData","data","type","payload","loading","dataState","undefined","nfilterProjectType","catch","error","message","getuserComboServices","methodParam","selectedRecord","URL","userinfo","primarykey","all","userList","userMap","get","status","warn","addProjectMaster","operation","nfilterProjectMaster","userInfo","ncontrolCode","selectedRecordvalue","SelectedProjectType","nprojecttypecodevalue","Object","values","length","nprojecttypecode","ntransactionstatus","DRAFT","urlArray","push","nprojectmastercode","nuserrolecode","nclientcatcode","nclientcode","testData","ProjectType","Userrole","TeamMembers","PeriodByControl","ClientCategory","Client","QuotationNo","sprojecttypename","editData","SelectedProjectMaster","sprojectcode","sprojecttitle","sprojectdescription","nprojectduration","sprojectname","srfwid","srfwdate","sexpectcompletiondate","sprojectstartdate","openModal","screenName","formatMessage","id","addProjectMasterFile","projectmasterfile","linkMap","LinkMaster","linkmaster","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","nprojectmasterfilecode","AttachmentType","FTP","modalName","getProjectMaster","projectmasterItem","masterData1","getProjectmasterAddMemberService","MembersList","openChildModal","ReportInfo","primaryKeyName","needjsontemplate","Status","APPROVED","reportTemplateList","ReportInfoProject","sreporttemplateversion","srevision","srevisionauthor","sintroduction","stestproductheadercomments","stestproductfootercomments1","stestproductfootercomments2","stestproductfootercomments3","stestproductfootercomments4","ssamplingdetails","suncertainitymeasurement","ReportTemplate","isOpen","info","getClientByCategory","getQuotationByClient","map","key","closureProjectMaster","formData","append","JSON","stringify","classUrl","foundIndex1","findIndex","x","validateEsignforModal","toLowerCase","projectMasterModal","selectedProjecmaster","ncontrolcode","sdate","alertMsg","check","COMPLETED","RETIRED","ntimezonedate","stimezonedate","modalShow","timeZoneService","UTCtimeZoneService","timezoneMap","TimeZoneList","date","ntimezonecode","stimezoneid"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\nimport { modalSave } from './ServiceAction';\r\n\r\nexport const changeProjectTypeFilter = (inputParam, filterProjectType) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterProjectType,\r\n                            nfilterProjectType: inputParam.inputData.nfilterProjectType\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getuserComboServices(methodParam, selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n        URL = rsapi.post(\"/projectmaster/getUsers\", { \"userinfo\": methodParam.inputData.userinfo, \"nuserrolecode\": methodParam.inputData.primarykey })\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let userList;\r\n\r\n                const userMap = constructOptionList(response[0].data || [], \"nusercode\",\r\n\r\n                    \"susername\", undefined, undefined, false);\r\n\r\n                userList = userMap.get(\"OptionList\");\r\n\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n\r\n                        { userList, selectedRecord, loading: false, data: undefined, dataState: undefined }\r\n                })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//Add Project Master\r\nexport const addProjectMaster = (operation, nfilterProjectMaster, userInfo, ncontrolCode, selectedRecordvalue, SelectedProjectType) => {\r\n    return function (dispatch) {\r\n        // if (nfilterProjectMaster && Object.values(nfilterProjectMaster).length > 0) {\r\n        if (selectedRecordvalue && selectedRecordvalue.nprojecttypecodevalue !== undefined) {\r\n            if ((Object.values(selectedRecordvalue.nprojecttypecodevalue).length > 0 && selectedRecordvalue.nprojecttypecodevalue !== undefined && operation === 'create') || (nfilterProjectMaster && nfilterProjectMaster.nprojecttypecode > 0 && operation === 'update' && nfilterProjectMaster.ntransactionstatus === transactionStatus.DRAFT)) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                ];\r\n                let selectedRecord = {};\r\n                // selectedRecord = selectedRecordvalue ;\r\n                if (operation === \"create\" || operation === \"update\") {\r\n\r\n                    urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\r\n                        \"userinfo\": userInfo\r\n                    }));\r\n\r\n                    /*       urlArray.push(rsapi.post(\"projectmaster/getStudyDirector\", {\r\n                               \"userinfo\": userInfo\r\n                           })); */\r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getUserrole\", {\r\n                        \"userinfo\": userInfo\r\n                    }));\r\n\r\n                    // urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\r\n                    //     \"userinfo\": userInfo //,\r\n                    //     // \"nuserrolecode\" : nfilterProjectMaster.nuserrolecode\r\n                    // })); \r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getTeammembers\", {\r\n                        \"userinfo\": userInfo\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getPeriodByControl\", {\r\n                        \"userinfo\": userInfo,\r\n                        \"ncontrolcode\": ncontrolCode\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"clientcategory/getClientCategory\", { \"userinfo\": userInfo }));\r\n\r\n                }\r\n                if (operation === \"update\") {\r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getActiveProjectMasterById\", {\r\n                        \"userinfo\": userInfo,\r\n                        \"nprojectmastercode\": nfilterProjectMaster.nprojectmastercode\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getUsers\", {\r\n                        \"userinfo\": userInfo,\r\n                        \"nuserrolecode\": nfilterProjectMaster.nuserrolecode\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"client/getClientByCategory\", {\r\n                        \"nclientcatcode\": nfilterProjectMaster.nclientcatcode,\r\n                        \"userinfo\": userInfo\r\n\r\n                    }));\r\n\r\n                    urlArray.push(rsapi.post(\"projectmaster/getQuotaionNoByClient\", {\r\n                        \"nclientcatcode\": nfilterProjectMaster.nclientcatcode,\r\n                        \"nclientcode\": nfilterProjectMaster.nclientcode,\r\n                        \"userinfo\": userInfo\r\n                    }));\r\n\r\n\r\n                }\r\n\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n\r\n\r\n                        let testData = {};\r\n\r\n                        let { ProjectType, Userrole, userList, TeamMembers, PeriodByControl, ClientCategory, Client, QuotationNo } = []\r\n\r\n\r\n                        if (operation === \"create\") {\r\n\r\n                            ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                            Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                            //                Users = constructOptionList(response[2].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                            TeamMembers = constructOptionList(response[2].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n\r\n\r\n                            PeriodByControl = constructOptionList(response[3].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n\r\n                            ClientCategory = constructOptionList(response[4].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n\r\n                            selectedRecord = {\r\n                                \"nprojecttypecode\": {\r\n                                    \"value\": SelectedProjectType.nprojecttypecode,\r\n                                    \"label\": SelectedProjectType.sprojecttypename\r\n                                }\r\n                            };\r\n\r\n                        } else if (operation === \"update\") {\r\n\r\n\r\n\r\n                            const editData = response[5].data.SelectedProjectMaster;\r\n\r\n                            selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n                            selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                            selectedRecord[\"sprojectdescription\"] = editData.sprojectdescription;\r\n                            selectedRecord[\"nprojectduration\"] = editData.nprojectduration;\r\n                            selectedRecord[\"sprojectname\"] = editData.sprojectname;\r\n                            selectedRecord[\"srfwid\"] = editData.srfwid;\r\n\r\n\r\n\r\n                            selectedRecord = { ...selectedRecord }\r\n\r\n                            ProjectType = constructOptionList(response[0].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                            Userrole = constructOptionList(response[1].data || [], \"nuserrolecode\", \"suserrolename\", false, false, true).get(\"OptionList\");\r\n                            userList = constructOptionList(response[6].data || [], \"nusercode\", \"susername\", false, false, true).get(\"OptionList\");\r\n                            TeamMembers = constructOptionList(response[2].data || [], \"nusercode\", \"steammembername\", false, false, true).get(\"OptionList\");\r\n                            PeriodByControl = constructOptionList(response[3].data || [], \"nperiodcode\", \"speriodname\", false, false, true).get(\"OptionList\");\r\n                            ClientCategory = constructOptionList(response[4].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n                            Client = constructOptionList(response[7].data.Client || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\r\n                            QuotationNo = constructOptionList(response[8].data || [], \"nquotationcode\", \"squotationno\", false, false, true).get(\"OptionList\");\r\n\r\n                            selectedRecord[\"nprojecttypecode\"] = {\r\n                                \"value\": editData[\"nprojecttypecode\"],\r\n                                \"label\": editData[\"sprojecttypename\"]\r\n                            };\r\n\r\n                            selectedRecord[\"nuserrolecode\"] = {\r\n                                \"value\": editData[\"nuserrolecode\"],\r\n                                \"label\": editData[\"suserrolename\"]\r\n                            };\r\n\r\n                            selectedRecord[\"nusercode\"] = {\r\n                                \"value\": editData[\"nusercode\"],\r\n                                \"label\": editData[\"susername\"]\r\n                            };\r\n\r\n\r\n                            selectedRecord[\"nteammembercode\"] = {\r\n                                \"value\": editData[\"nteammembercode\"],\r\n                                \"label\": editData[\"steammembername\"]\r\n                            };\r\n\r\n                            selectedRecord[\"nperiodcode\"] = {\r\n                                \"value\": editData[\"nperiodcode\"],\r\n                                \"label\": editData[\"speriodname\"]\r\n                            };\r\n                            selectedRecord[\"nclientcatcode\"] = {\r\n                                \"value\": editData[\"nclientcatcode\"],\r\n                                \"label\": editData[\"sclientcatname\"]\r\n                            };\r\n\r\n                            selectedRecord[\"nclientcode\"] = {\r\n                                \"value\": editData[\"nclientcode\"],\r\n                                \"label\": editData[\"sclientname\"]\r\n                            };\r\n                            if (editData[\"nquotationcode\"] != -1)\r\n                                selectedRecord[\"nquotationcode\"] = {\r\n                                    \"value\": editData[\"nquotationcode\"],\r\n                                    \"label\": editData[\"squotationno\"]\r\n                                };\r\n\r\n\r\n                            // selectedRecord[\"nstudydirectorcode\"] = response[1].data;\r\n                            // selectedRecord[\"nteammembercode\"] = response[2].data;\r\n                            //  selectedRecord[\"nperiodcode\"] = response[3].data;\r\n                            // selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                            // selectedRecord[\"sprojectcode\"] = editData.sprojectcode;\r\n\r\n                            if (editData.srfwdate != \"-\") {\r\n                                selectedRecord[\"drfwdate\"] = rearrangeDateFormat(userInfo, editData.srfwdate);\r\n\r\n                            }\r\n                            if (editData.sexpectcompletiondate != \"-\") {\r\n                                selectedRecord[\"dexpectcompletiondate\"] = rearrangeDateFormat(userInfo, editData.sexpectcompletiondate);\r\n\r\n                            }\r\n                            selectedRecord[\"dprojectstartdate\"] = rearrangeDateFormat(userInfo, editData.sprojectstartdate);\r\n\r\n                        }\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n\r\n                                openModal: true,\r\n                                ProjectType, Userrole, userList, TeamMembers, PeriodByControl, ClientCategory, Client, QuotationNo,\r\n                                operation: operation,\r\n                                screenName: \"IDS_PROJECTMASTER\",\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                testData,\r\n\r\n\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n            }\r\n        } else {\r\n            //  if(nfilterProjectMaster.ntransactionstatus !== transactionStatus.DRAFT){ nfilterProjectMaster\r\n            if (nfilterProjectMaster !== null && operation === \"update\") {\r\n\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\" }))\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const addProjectMasterFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        if (inputParam.ntransactionstatus === transactionStatus.DRAFT) {\r\n            dispatch(initRequest(true));\r\n            let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                userinfo: inputParam.userInfo\r\n            })];\r\n            if (inputParam.operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"/projectmaster/editProjectMasterFile\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    projectmasterfile: inputParam.selectedRecord\r\n                }))\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                    const linkmaster = linkMap.get(\"OptionList\");\r\n                    let selectedRecord = {};\r\n                    const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                    let disabled = false;\r\n                    let editObject = {};\r\n                    if (inputParam.operation === \"update\") {\r\n                        editObject = response[1].data;\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = {\r\n                                \"label\": editObject.slinkname,\r\n                                \"value\": editObject.nlinkcode\r\n                            }\r\n\r\n                            link = {\r\n                                slinkfilename: editObject.sfilename,\r\n                                slinkdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                                sfilesize: '',\r\n                                nfilesize: 0,\r\n                                ndefaultstatus: 4,\r\n                                sfilename: '',\r\n                            }\r\n\r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                            link = {\r\n                                slinkfilename: '',\r\n                                slinkdescription: '',\r\n                                nlinkdefaultstatus: 4,\r\n                                sfilesize: editObject.sfilesize,\r\n                                nfilesize: editObject.nfilesize,\r\n                                ndefaultstatus: editObject.ndefaultstatus,\r\n                                sfilename: editObject.sfilename,\r\n                            }\r\n                        }\r\n                        selectedRecord = {\r\n                            ...link,\r\n                            nprojectmasterfilecode: editObject.nprojectmasterfilecode,\r\n                            nattachmenttypecode: editObject.nattachmenttypecode,\r\n                            ...editObject,\r\n                            nlinkcode,\r\n\r\n                            // disabled: true\r\n                        };\r\n                    } else {\r\n                        selectedRecord = {\r\n                            nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                                response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                            nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                            disabled\r\n                        };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            [inputParam.modalName]: true,\r\n                            operation: inputParam.operation,\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            selectedRecord,\r\n                            loading: false,\r\n                            linkMaster: linkmaster,\r\n                            showSaveContinue: false,\r\n\r\n                            editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n        }\r\n    }\r\n}\r\n\r\n//ProjectMaster Click\r\nexport const getProjectMaster = (projectmasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/getActiveProjectMasterById\", {\r\n            nprojectmastercode: projectmasterItem.nprojectmastercode,\r\n            nprojecttypecode: projectmasterItem.nprojecttypecode,\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n\r\n\r\n                let masterData1 = {\r\n                    ...masterData,\r\n\r\n                    ...response.data\r\n                }\r\n\r\n                // ...masterData,\r\n                // ...response.data\r\n                masterData = masterData1\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        // masterData,\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getProjectmasterAddMemberService(screenName, operation, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        // if (masterData.SelectedProjectMaster.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"projectmaster/getProjectUnmappedTeammember\", {\r\n            \"nprojectmastercode\": masterData.SelectedProjectMaster[\"nprojectmastercode\"],\r\n            userinfo: userInfo\r\n        })\r\n\r\n            .then(response => {\r\n\r\n                let masterData1 = {\r\n                    ...masterData,\r\n\r\n                    ...response.data\r\n                }\r\n                masterData = masterData1\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        MembersList: response.data,\r\n                        masterData,\r\n                        openChildModal: true,\r\n                        operation, screenName, ncontrolCode,\r\n                        //selectedRecord, \r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        //}\r\n        // else {\r\n        //     toast.warn(intl.formatMessage({ id: \"IDS_SELECTNONRETIEDPROJECTMASTERVERSION\" }));\r\n        // }\r\n    }\r\n}\r\n\r\n\r\nexport function ReportInfo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode, needjsontemplate) {\r\n    return function (dispatch) {\r\n\r\n        const Status = masterData.SelectedProjectMaster.ntransactionstatus;\r\n        if (Status === transactionStatus.DRAFT || Status === transactionStatus.APPROVED) {\r\n            let urlArray = [];\r\n            // const Submitter = rsapi.post(\"/projectmaster/getEditReportInfoProject\", {\r\n            //                                   [primaryKeyName]: masterData.SelectedProjectMaster[primaryKeyName],needjsontemplate:needjsontemplate!=4?3:4,\r\n            //                                   \"userinfo\": userInfo\r\n            //                 });\r\n\r\n            urlArray.push(rsapi.post(\"/projectmaster/getEditReportInfoProject\", {\r\n                [primaryKeyName]: masterData.SelectedProjectMaster[primaryKeyName],\r\n                \"userinfo\": userInfo\r\n            }));\r\n\r\n\r\n            if (needjsontemplate != 4)\r\n                urlArray.push(rsapi.post(\"/projectmaster/getReportTemplate\", {\r\n                    \"userinfo\": userInfo\r\n                })\r\n                );\r\n            urlArray.push(rsapi.post(\"/projectmaster/getActiveReportTemplate\", {\r\n                [primaryKeyName]: masterData.SelectedProjectMaster[primaryKeyName],\r\n                \"userinfo\": userInfo\r\n            }));\r\n\r\n\r\n            // const ReportTemplate=rsapi.post(\"/projectmaster/getReportTemplate\", {\r\n            //     \"userinfo\": userInfo});\r\n            //urlArray = [Submitter,ReportTemplate];\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    let reportTemplateList = [];\r\n                    if (needjsontemplate != 4) {\r\n                        reportTemplateList = constructOptionList(response[1].data || [], \"nreporttemplatecode\", \"stemplatename\", undefined, undefined, false).get(\"OptionList\");\r\n\r\n                    }\r\n\r\n                    selectedRecord[\"sreporttemplateversion\"] = response[0].data.ReportInfoProject.sreporttemplateversion;\r\n                    selectedRecord[\"srevision\"] = response[0].data.ReportInfoProject.srevision;\r\n                    selectedRecord[\"srevisionauthor\"] = response[0].data.ReportInfoProject.srevisionauthor;\r\n                    selectedRecord[\"sintroduction\"] = response[0].data.ReportInfoProject.sintroduction;\r\n                    selectedRecord[\"stestproductheadercomments\"] = response[0].data.ReportInfoProject.stestproductheadercomments;\r\n                    selectedRecord[\"stestproductfootercomments1\"] = response[0].data.ReportInfoProject.stestproductfootercomments1;\r\n                    selectedRecord[\"stestproductfootercomments2\"] = response[0].data.ReportInfoProject.stestproductfootercomments2;\r\n                    selectedRecord[\"stestproductfootercomments3\"] = response[0].data.ReportInfoProject.stestproductfootercomments3;\r\n                    selectedRecord[\"stestproductfootercomments4\"] = response[0].data.ReportInfoProject.stestproductfootercomments4;\r\n                    selectedRecord[\"ssamplingdetails\"] = response[0].data.ReportInfoProject.ssamplingdetails;\r\n                    selectedRecord[\"suncertainitymeasurement\"] = response[0].data.ReportInfoProject.suncertainitymeasurement;\r\n                    if (needjsontemplate != 4) {\r\n                        if (response[2].data.ReportTemplate != null) {\r\n                            selectedRecord[\"nreporttemplatecode\"] = {\r\n                                \"value\": response[2].data.ReportTemplate[\"nreporttemplatecode\"],\r\n                                \"label\": response[2].data.ReportTemplate[\"stemplatename\"]\r\n                            };\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            isOpen: true,\r\n                            masterData: masterData,\r\n                            selectedRecord,\r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            openModal: true,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n                            reportTemplateList\r\n\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        } else {\r\n            toast.info(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }));\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\nexport function getClientByCategory(methodParam, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/client/getClientByCategory\", { \"nclientcatcode\": methodParam.inputData.primarykey, \"userinfo\": methodParam.inputData.userinfo }).then(response => {\r\n            let Client = [];\r\n            Client = constructOptionList(response.data.Client || [], \"nclientcode\", \"sclientname\", undefined, undefined, false).get(\"OptionList\");\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false, Client, selectedRecord\r\n                }\r\n            }\r\n\r\n\r\n            );\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getQuotationByClient(methodParam, selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/projectmaster/getQuotaionNoByClient\", { \"nclientcatcode\": methodParam.inputData.nclientcatcode, \"nclientcode\": methodParam.inputData.nclientcode, \"userinfo\": methodParam.inputData.userinfo }).then(response => {\r\n            let QuotationNo = [];\r\n            QuotationNo = constructOptionList(response.data || [], \"nquotationcode\", \"squotationno\", undefined, undefined, false).get(\"OptionList\");\r\n            QuotationNo.map(key => {\r\n\r\n            })\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false, QuotationNo, selectedRecord\r\n                }\r\n            }\r\n\r\n\r\n            )\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function closureProjectMaster(inputParam, masterData) {\r\n\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        const formData = inputParam.formData;\r\n        formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));\r\n        rsapi.post(inputParam.classUrl + \"/\" + \"closure\" + inputParam.methodUrl, formData).then(response => {\r\n            masterData = {\r\n                ...masterData,\r\n                ...response.data\r\n            }\r\n            \r\n            // const foundIndex = masterData[\"ProjectMaster\"].findIndex(\r\n            //     x => x[\"nprojectmastercode\"] === masterData[\"SelectedProjectMaster\"][\"nprojectmastercode\"]\r\n            //   );\r\n            if (masterData[\"searchedData\"]) {\r\n                const foundIndex1 = masterData[\"searchedData\"].findIndex(\r\n                    x => x[\"nprojectmastercode\"] === masterData[\"SelectedProjectMaster\"][\"nprojectmastercode\"]\r\n                );\r\n             // masterData[\"ProjectMaster\"][foundIndex] = masterData[\"SelectedProjectMaster\"];\r\n\r\n            }\r\n            masterData = sortData(masterData);\r\n\r\n            //  })             \r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false, masterData, openModal: false, operation: inputParam.operation,\r\n                    ncontrolCode: inputParam.ncontrolCode,\r\n                }\r\n            }\r\n\r\n\r\n            )\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\nexport function validateEsignforModal(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    const methodUrl = inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];\r\n\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    // ALPD-2437 added for Type3 Component. Use selected record to clear esign values\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]) {\r\n\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];\r\n                    }\r\n                    dispatch(modalSave(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function projectMasterModal(selectedProjecmaster, operation, screenName, ncontrolcode, sdate, userInfo) {\r\n    return (dispatch) => {\r\n        let alertMsg;\r\n        let check;\r\n        if (operation === \"complete\" || operation === \"retire\") {\r\n            check = selectedProjecmaster.ntransactionstatus === transactionStatus.APPROVED;\r\n            alertMsg = \"IDS_SELECTAPPROVEVERSION\";\r\n        }\r\n        if (operation === \"closure\") {\r\n            alertMsg = \"IDS_SELECTCOMPLETEORRETIREACTION\";\r\n            check = selectedProjecmaster.ntransactionstatus === transactionStatus.COMPLETED || selectedProjecmaster.ntransactionstatus === transactionStatus.RETIRED;\r\n\r\n        }\r\n\r\n\r\n        if (check) {\r\n            dispatch(initRequest(true));\r\n            let selectedRecord = {};\r\n            let ntimezonedate;\r\n            let stimezonedate;\r\n            let openModal = false;\r\n            let modalShow = false;\r\n            if (operation === \"complete\") {\r\n                ntimezonedate = \"ntzprojectcompletiondate\";\r\n                stimezonedate = \"stzprojectcompletiondate\";\r\n                modalShow = true;\r\n            }\r\n            if (operation === \"retire\") {\r\n                ntimezonedate = \"ntzprojectretiredate\";\r\n                stimezonedate = \"stzprojectretiredate\";\r\n                modalShow = true;\r\n\r\n            }\r\n            if (operation === \"closure\") {\r\n\r\n                ntimezonedate = \"ntzprojectclosuredate\";\r\n                stimezonedate = \"stzprojectclosuredate\";\r\n                openModal = true;\r\n            }\r\n            let urlArray = [];\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            const UTCtimeZoneService = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                userinfo: userInfo\r\n            });\r\n            urlArray = [timeZoneService, UTCtimeZoneService]\r\n            Axios.all(urlArray).then(response => {\r\n                const timezoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, false);\r\n\r\n                const TimeZoneList = timezoneMap.get(\"OptionList\");\r\n                let date = rearrangeDateFormat(userInfo, response[1].data);\r\n\r\n                selectedRecord = {\r\n                    ntimezonedate: {\r\n                        \"value\": userInfo.ntimezonecode,\r\n                        \"label\": userInfo.stimezoneid\r\n                    },\r\n                    stimezonedate: userInfo.stimezoneid,\r\n                };\r\n\r\n                selectedRecord[sdate] = date;\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, selectedRecord, modalShow: modalShow, operation: operation,\r\n                        screenName: screenName, TimeZoneList,\r\n                        ncontrolcode: ncontrolcode,\r\n                        openModal: openModal\r\n                    }\r\n                }\r\n\r\n\r\n                )\r\n            })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n\r\n        else {\r\n\r\n            toast.warn(intl.formatMessage({ id: alertMsg }));\r\n\r\n        }\r\n\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}