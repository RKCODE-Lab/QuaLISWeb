{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\components\\\\ListAttachment.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, Media, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudDownloadAlt, faTrashAlt, faPencilAlt, faExternalLinkAlt, faThumbtack, faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl } from 'react-intl';\nimport { attachmentType, designProperties } from './Enumeration';\nimport ConfirmDialog from './confirm-alert/confirm-alert.component';\nimport { Attachments } from './dropzone/dropzone.styles';\nimport { getAttachedFileIcon } from './FileIcon';\nimport { MediaLabel, MediaSubHeader } from './App.styles';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Nav } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport '../pages/registration/registration.css';\nimport { bytesToSize } from './CommonScript'; // import ReactTooltip from 'react-tooltip';\n\nimport CustomPager from './CustomPager';\nimport { FontIconWrap } from './data-grid/data-grid.styles';\n\nclass ListAttachment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showHideDetails = (event, index) => {\n      event.stopPropagation();\n      let showMore = { ...this.state.showMore,\n        [index]: !this.state.showMore[index]\n      };\n      this.setState({\n        showMore\n      });\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.state = {\n      showMore: {},\n      buttonCount: 2,\n      info: true,\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n  }\n\n  render() {\n    const {\n      fileName,\n      deleteId,\n      editId,\n      defaultId,\n      viewId,\n      isjsonfield,\n      jsonfield\n    } = this.props;\n    let data = this.props.hidePaging ? this.props.attachmentList : this.props.attachmentList.slice(this.state.skip, this.state.skip + this.state.take);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spec-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, data.length > 0 ? data.map((file, index) => {\n      let fileExtension = \"\";\n      let attachmentTypeCode = file.nattachmenttypecode || file[this.props.jsonfield].nattachmenttypecode;\n\n      if (this.props.isjsonfield) {\n        if (attachmentTypeCode === attachmentType.FTP) {\n          const splittedFileName = file[this.props.jsonfield][fileName].split('.');\n          fileExtension = file[this.props.jsonfield][fileName].split('.')[splittedFileName.length - 1];\n        }\n      } else {\n        if (attachmentTypeCode === attachmentType.FTP) {\n          const splittedFileName = file[fileName].split('.');\n          fileExtension = file[fileName].split('.')[splittedFileName.length - 1];\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: `file_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Attachments, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"block-view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Media.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-icon-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-0 attatchment-title\" // data-for=\"tooltip_attachment_wrap\"\n        ,\n        \"data-tip-disable\": this.props.isjsonfield ? file[this.props.jsonfield][fileName].length < 50 : file[fileName].length < 50,\n        \"data-tip\": this.props.isjsonfield ? file[this.props.jsonfield][fileName] : file[fileName],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        width: 25,\n        height: 25,\n        className: \"attachment-img-icon mr-2\",\n        src: getAttachedFileIcon(fileExtension),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 57\n        }\n      }), this.props.isjsonfield ? file[this.props.jsonfield][fileName] : file[fileName]), /*#__PURE__*/React.createElement(Nav.Link, {\n        style: {\n          display: \"inherit\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }\n      }, attachmentTypeCode === attachmentType.FTP ? /*#__PURE__*/React.createElement(FontIconWrap, {\n        icon: faCloudDownloadAlt,\n        className: \"mr-3 className action-icons-wrap\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(viewId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOAD\"\n        }) //data-for=\"tooltip_attachment_wrap\"\n        ,\n        onClick: () => this.props.viewFile(file),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCloudDownloadAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 65\n        }\n      })) //Added by sonia on 18-04-2022 \n      : /*#__PURE__*/React.createElement(FontIconWrap, {\n        icon: faExternalLinkAlt,\n        className: \"mr-3 action-icons-wrap\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(viewId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_LINK\"\n        }) //data-for=\"tooltip_attachment_wrap\"\n        ,\n        onClick: () => this.props.viewFile(file),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 63\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faExternalLinkAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 65\n        }\n      })) //Commented by sonia on 18-04-2022 \n      // : <FontAwesomeIcon icon={faExternalLinkAlt} className=\"mr-3\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\n      //     data-tip={this.props.intl.formatMessage({ id: \"IDS_LINK\" })}\n      //     data-for=\"tooltip_attachment_wrap\"\n      //     onClick={() => this.props.viewFile(file)} />\n      , /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faThumbtack,\n        className: \"mr-3 action-icons-wrap\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(defaultId) === -1,\n        onClick: () => this.props.defaultRecord({ ...this.props.defaultParam,\n          selectedRecord: file\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(FontIconWrap, {\n        className: \"mr-3 action-icons-wrap d-font-icon\",\n        size: \"lg\",\n        hidden: this.props.userRoleControlRights.indexOf(editId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDIT\"\n        }) //data-for=\"tooltip_attachment_wrap\"\n        ,\n        onClick: () => this.props.fetchRecord({ ...this.props.editParam,\n          selectedRecord: file,\n          operation: \"update\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(ConfirmDialog, {\n        name: \"deleteMessage\",\n        className: \"action-icons-wrap\",\n        message: this.props.intl.formatMessage({\n          id: \"IDS_DELETECONFIRMMSG\"\n        }),\n        cardTitle: this.props.intl.formatMessage({\n          id: \"IDS_CONFIRMATION\"\n        }),\n        doLabel: this.props.intl.formatMessage({\n          id: \"IDS_OK\"\n        }),\n        doNotLabel: this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }) //dataforprops=\"tooltip_attachment_wrap\"\n        ,\n        icon: faTrashAlt,\n        size: \"lg\",\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        hidden: this.props.userRoleControlRights.indexOf(deleteId) === -1,\n        handleClickDelete: () => this.props.deleteRecord({ ...this.props.deleteParam,\n          selectedRecord: file,\n          ncontrolCode: deleteId,\n          data,\n          skip: this.props.skip ? this.props.skip : this.state.skip,\n          take: this.props.take ? this.props.take : this.state.take\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 57\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attatchment-details pad-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 49\n        }\n      }, this.props.subFields && this.props.subFields.map((field, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          fontWeight: \"normal\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 62\n        }\n      }, field[1] ? this.props.intl.formatMessage({\n        id: field[designProperties.LABEL]\n      }) + \": \" : \"\"), this.props.isjsonfield ? field['fieldType'] === 'size' ? /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 77\n        }\n      }, bytesToSize(file[this.props.jsonfield][field[designProperties.VALUE]])) : /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 79\n        }\n      }, file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]]) : field['fieldType'] === 'size' ? /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 77\n        }\n      }, bytesToSize(file[field[designProperties.VALUE]])) : /*#__PURE__*/React.createElement(MediaLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 79\n        }\n      }, file[field[designProperties.VALUE]]), field[2] && i !== this.props.subFields.length - 1 ? /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"seperator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 118\n        }\n      }, \"|\") : \"\")), this.props.moreField && this.props.moreField.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n        className: \"show-more-action-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: `show-wrap_${index}`,\n        className: `show-more-action showmore primarycolor`,\n        onClick: event => this.showHideDetails(event, index),\n        style: {\n          display: \"inline\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        size: \"sm\",\n        htmlFor: `show-wrap_${index}`,\n        icon: this.state.showMore[index] ? faChevronUp : faChevronDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 69\n        }\n      }))), /*#__PURE__*/React.createElement(Media.Body, {\n        className: `show-more-wrap ${this.state.showMore[index] ? \"showmore\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(MediaSubHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 69\n        }\n      }, this.props.moreField.map((field, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"media-label-split blocked-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(MediaLabel, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 81\n        }\n      }, field[1] ? this.props.intl.formatMessage({\n        id: field[designProperties.LABEL]\n      }) + \": \" : \"\"), /*#__PURE__*/React.createElement(MediaLabel, {\n        \"data-tip-disable\": false,\n        \"data-for\": \"tooltip_attachment_wrap\",\n        \"data-tip\": this.props.isjsonfield ? file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]] : file[field[designProperties.VALUE]],\n        className: \"media-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 81\n        }\n      }, this.props.isjsonfield ? file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]] : file[field[designProperties.VALUE]]), field['fieldType'] === 'size' ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", \" bytes\") : \"\"))))) : \"\"))))));\n    }) : /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Attachments, {\n      className: \"norecordtxt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    })))))), this.props.hidePaging ? \"\" : /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.state.skip,\n      take: this.state.take,\n      userInfo: this.props.userInfo // width={20}\n      ,\n      pagershowwidth: 33,\n      handlePageChange: this.handlePageChange,\n      total: this.props.attachmentList ? this.props.attachmentList.length : 0,\n      buttonCount: this.state.buttonCount,\n      info: this.state.info,\n      pageSize: this.props.settings ? this.props.settings[15].split(\",\").map(setting => parseInt(setting)) : [5, 10, 15],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }));\n  } // ConfirmDelete = (deleteParam,file,deleteId,data,skip,take) => {\n  //     this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\n  //         this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\n  //         //() => this.DeleteManufacturer(\"delete\", deleteId)\n  //         () => this.props.deleteRecord({ ...deleteParam, selectedRecord: file, ncontrolCode: deleteId, data, skip: skip,  take: take })\n  //         );\n  // }\n\n\n  componentDidUpdate(previousProps) {\n    if (this.props.attachmentList !== previousProps.attachmentList) {\n      if (this.props.skip === undefined && this.props.attachmentList && this.props.attachmentList.length <= this.state.skip) {\n        this.setState({\n          skip: 0\n        });\n      }\n    }\n\n    if (this.props.skip !== undefined && this.props.skip !== previousProps.skip) {\n      this.setState({\n        skip: this.props.skip,\n        take: this.props.take\n      });\n    }\n  }\n\n}\n\nexport default injectIntl(ListAttachment);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/components/ListAttachment.jsx"],"names":["React","Component","ListGroup","Media","Image","FontAwesomeIcon","faCloudDownloadAlt","faTrashAlt","faPencilAlt","faExternalLinkAlt","faThumbtack","faChevronUp","faChevronDown","injectIntl","attachmentType","designProperties","ConfirmDialog","Attachments","getAttachedFileIcon","MediaLabel","MediaSubHeader","PerfectScrollbar","Nav","Form","bytesToSize","CustomPager","FontIconWrap","ListAttachment","constructor","props","showHideDetails","event","index","stopPropagation","showMore","state","setState","handlePageChange","e","skip","take","buttonCount","info","settings","parseInt","render","fileName","deleteId","editId","defaultId","viewId","isjsonfield","jsonfield","data","hidePaging","attachmentList","slice","length","map","file","fileExtension","attachmentTypeCode","nattachmenttypecode","FTP","splittedFileName","split","display","userRoleControlRights","indexOf","intl","formatMessage","id","viewFile","defaultRecord","defaultParam","selectedRecord","fetchRecord","editParam","operation","deleteRecord","deleteParam","ncontrolCode","subFields","field","i","fontWeight","LABEL","VALUE","moreField","userInfo","setting","componentDidUpdate","previousProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, Media, Image } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudDownloadAlt, faTrashAlt, faPencilAlt, faExternalLinkAlt, faThumbtack, faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl } from 'react-intl';\r\nimport { attachmentType, designProperties } from './Enumeration';\r\nimport ConfirmDialog from './confirm-alert/confirm-alert.component';\r\nimport { Attachments } from './dropzone/dropzone.styles';\r\nimport { getAttachedFileIcon } from './FileIcon';\r\nimport { MediaLabel, MediaSubHeader } from './App.styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport '../pages/registration/registration.css'\r\nimport { bytesToSize } from './CommonScript';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport CustomPager from './CustomPager';\r\nimport { FontIconWrap } from './data-grid/data-grid.styles';\r\nclass ListAttachment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: {},\r\n            buttonCount: 2,\r\n            info: true,\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { fileName, deleteId, editId, defaultId, viewId, isjsonfield, jsonfield } = this.props;\r\n        let data = this.props.hidePaging ? this.props.attachmentList : this.props.attachmentList.slice(this.state.skip, ((this.state.skip) + (this.state.take)))\r\n\r\n        return (\r\n            <>\r\n             <div className='spec-list'>\r\n            <PerfectScrollbar>\r\n            <ListGroup variant=\"flush\">\r\n                {data.length > 0 ?\r\n                    data.map((file, index) => {\r\n                        let fileExtension = \"\";\r\n                        let attachmentTypeCode = file.nattachmenttypecode || file[this.props.jsonfield].nattachmenttypecode\r\n\r\n                        if (this.props.isjsonfield) {\r\n                            if (attachmentTypeCode === attachmentType.FTP) {\r\n                                const splittedFileName = file[this.props.jsonfield][fileName].split('.');\r\n                                fileExtension = file[this.props.jsonfield][fileName].split('.')[splittedFileName.length - 1];\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (attachmentTypeCode === attachmentType.FTP) {\r\n                                const splittedFileName = file[fileName].split('.');\r\n                                fileExtension = file[fileName].split('.')[splittedFileName.length - 1];\r\n                            }\r\n                        }\r\n                        return (\r\n                            <>\r\n                                {/* <ReactTooltip place=\"bottom\" globalEventOff=\"true\" id=\"tooltip_attachment_wrap\" /> */}\r\n                                <ListGroup.Item key={`file_${index}`}>\r\n                                    <Attachments>\r\n                                        <Media className='block-view'>\r\n                                            <Media.Body>\r\n                                                <div className=\"left-icon-header\">\r\n                                                    <h5 className=\"mt-0 attatchment-title\"\r\n                                                        // data-for=\"tooltip_attachment_wrap\"\r\n                                                        data-tip-disable={this.props.isjsonfield\r\n                                                            ? file[this.props.jsonfield][fileName].length < 50\r\n                                                            : file[fileName].length < 50}\r\n                                                        data-tip={this.props.isjsonfield\r\n                                                            ? file[this.props.jsonfield][fileName]\r\n                                                            : file[fileName]}>\r\n                                                        <Image\r\n                                                            width={25}\r\n                                                            height={25}\r\n                                                            className=\"attachment-img-icon mr-2\"\r\n                                                            src={getAttachedFileIcon(fileExtension)}\r\n                                                        />\r\n                                                        {this.props.isjsonfield\r\n                                                            ? file[this.props.jsonfield][fileName]\r\n                                                            : file[fileName]}</h5>\r\n                                                    <Nav.Link style={{display:\"inherit\"}}>\r\n\r\n                                                        {attachmentTypeCode === attachmentType.FTP ?\r\n\r\n\r\n                                                            <FontIconWrap icon={faCloudDownloadAlt} className=\"mr-3 className action-icons-wrap\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                //data-for=\"tooltip_attachment_wrap\"\r\n                                                                onClick={() => this.props.viewFile(file)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                            </FontIconWrap>\r\n                                                            //Added by sonia on 18-04-2022 \r\n                                                            : <FontIconWrap icon={faExternalLinkAlt} className=\"mr-3 action-icons-wrap\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                                 data-tip={this.props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                                                                 //data-for=\"tooltip_attachment_wrap\"\r\n                                                                 onClick={() => this.props.viewFile(file)}\r\n                                                              >\r\n                                                                <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n                                                              </FontIconWrap>\r\n\r\n                                                            //Commented by sonia on 18-04-2022 \r\n                                                            // : <FontAwesomeIcon icon={faExternalLinkAlt} className=\"mr-3\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                            //     data-tip={this.props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                                                            //     data-for=\"tooltip_attachment_wrap\"\r\n                                                            //     onClick={() => this.props.viewFile(file)} />\r\n                                                        }\r\n                                                        <FontAwesomeIcon icon={faThumbtack} className=\"mr-3 action-icons-wrap\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(defaultId) === -1}\r\n                                                            onClick={() => this.props.defaultRecord({ ...this.props.defaultParam, selectedRecord: file })} />\r\n                    \r\n\r\n                                                        <FontIconWrap className=\"mr-3 action-icons-wrap d-font-icon\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //data-for=\"tooltip_attachment_wrap\"\r\n                                                            onClick={() => this.props.fetchRecord({ ...this.props.editParam, selectedRecord: file, operation: \"update\" })}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </FontIconWrap>\r\n                                                       \r\n{/* \r\n                                                        <FontIconWrap className=\"mr-3 action-icons-wrap d-font-icon\" size=\"lg\" hidden={this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //data-for=\"tooltip_attachment_wrap\"\r\n                                                            onClick={this.ConfirmDelete(this.props.deleteParam, file, deleteId, data, this.props.skip ? this.props.skip : this.state.skip, this.props.take ? this.props.take : this.state.take)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </FontIconWrap> */}\r\n\r\n                                                        <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            className = \"action-icons-wrap\"\r\n                                                            message={this.props.intl.formatMessage({ id: \"IDS_DELETECONFIRMMSG\" })}\r\n                                                            cardTitle={this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" })}\r\n                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            //dataforprops=\"tooltip_attachment_wrap\"\r\n                                                            icon={faTrashAlt}\r\n                                                            size=\"lg\"\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            handleClickDelete={() => this.props.deleteRecord({ ...this.props.deleteParam, selectedRecord: file, ncontrolCode: deleteId, data, skip: this.props.skip ? this.props.skip : this.state.skip, take: this.props.take ? this.props.take : this.state.take })}\r\n                                                        />\r\n                                                    </Nav.Link>\r\n                                                </div>\r\n                                                <div className=\"attatchment-details pad-5\">\r\n                                                    {/* {file[this.props.mainField]?<>{file[this.props.mainField]}<span className=\"seperator\">|</span></>:\"\"}{file.screateddate} \r\n                                        {\r\n                                            file.nattachmenttypecode === attachmentType.FTP?\r\n                                                <>\r\n                                                    {file[filesize]?<><span className=\"seperator\">|</span>{file[filesize]} bytes</>:\"\"}\r\n                                                    {file[defaultStatusName]?<><span className=\"seperator\">|</span>{file[defaultStatusName]} </>:\"\"}\r\n                                                </>\r\n                                            :\r\n                                                <>\r\n                                                    {file[linkname]?<><span className=\"seperator\">|</span>{file[linkname]}</>:\"\"}\r\n                                                    {file[defaultStatusName]?<><span className=\"seperator\">|</span>{file[defaultStatusName]}</>:\"\"}\r\n                                                </>\r\n                                        } */}\r\n                                                    {\r\n                                                        this.props.subFields && this.props.subFields.map((field, i) =>\r\n                                                            <>\r\n                                                             <MediaLabel style={{ fontWeight: \"normal\" }}>{field[1] ?\r\n                                                                        this.props.intl.formatMessage({ id: field[designProperties.LABEL] })\r\n                                                                        + \": \" : \"\"}\r\n                                                            </MediaLabel>\r\n                                                                {   \r\n                                                                    this.props.isjsonfield ?\r\n                                                                        field['fieldType'] === 'size' ?\r\n                                                                            <MediaLabel>{bytesToSize(file[this.props.jsonfield][field[designProperties.VALUE]])}</MediaLabel>\r\n                                                                            : <MediaLabel>{file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]]}</MediaLabel>\r\n                                                                        :\r\n                                                                        field['fieldType'] === 'size' ?\r\n                                                                            <MediaLabel>{bytesToSize(file[field[designProperties.VALUE]])}</MediaLabel>\r\n                                                                            : <MediaLabel>{file[field[designProperties.VALUE]]}</MediaLabel>}\r\n                                                                {/* {this.props.subFields.length > 1 && i % 2 === 0 ?<MediaLabel className=\"seperator\">|</MediaLabel>: \"\"} */}\r\n                                                                {field[2] && i !== this.props.subFields.length - 1 ? <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                            </>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        this.props.moreField && this.props.moreField.length > 0 ?\r\n                                                            <>\r\n                                                                <MediaLabel className=\"show-more-action-wrap\">\r\n                                                                    <Nav.Link name={`show-wrap_${index}`} className={`show-more-action showmore primarycolor`} onClick={(event) => this.showHideDetails(event, index)} style={{ display: \"inline\" }}\r\n                                                                    >\r\n                                                                        {/* <Form.Label className={`show-more-link showmore`} for={`show-wrap_${index}`}>\r\n                                                                            {` ...${this.props.intl.formatMessage({ id: this.state.showMore[index] ? \"IDS_SHOWLESS\" : \"IDS_SHOWMORE\" })}`}\r\n                                                                            </Form.Label> */}\r\n                                                                    <FontAwesomeIcon size=\"sm\" htmlFor={`show-wrap_${index}`} icon={this.state.showMore[index] ? faChevronUp : faChevronDown} />\r\n                                                                    </Nav.Link>\r\n                                                                </MediaLabel>\r\n                                                                <Media.Body className={`show-more-wrap ${this.state.showMore[index] ? \"showmore\" : \"\"}`}>\r\n                                                                    <MediaSubHeader>\r\n\r\n\r\n                                                                        {this.props.moreField.map((field, i) =>\r\n                                                                            <div className=\"media-label-split blocked-flex\">\r\n                                                                                <MediaLabel style={{ fontWeight: \"bold\" }}>{field[1] ?\r\n                                                                                    this.props.intl.formatMessage({ id: field[designProperties.LABEL] })\r\n                                                                                    + \": \" : \"\"}\r\n                                                                                </MediaLabel>\r\n                                                                                <MediaLabel\r\n                                                                                    data-tip-disable={false}\r\n                                                                                    data-for=\"tooltip_attachment_wrap\"\r\n                                                                                    data-tip={this.props.isjsonfield ? file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]] : file[field[designProperties.VALUE]]} className='media-value' >\r\n                                                                                    {this.props.isjsonfield ?\r\n                                                                                        file[this.props.jsonfield][field[designProperties.VALUE]] || file[field[designProperties.VALUE]]\r\n                                                                                        : file[field[designProperties.VALUE]]}</MediaLabel>\r\n                                                                                {field['fieldType'] === 'size' ? <>{\" \"} bytes</> : \"\"}\r\n                                                                                {/* {i % 2 === 0 && i !== this.props.moreField.length - 1 ?\r\n                                                                                        <MediaLabel className=\"seperator\">|</MediaLabel> : \"\"}\r\n                                                                                    {(i + 1) % 2 === 0 ? <br></br> : \"\"} */}\r\n\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    </MediaSubHeader>\r\n                                                                </Media.Body>\r\n                                                            </>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                </div>\r\n                                            </Media.Body>\r\n                                        </Media>\r\n                                    </Attachments>\r\n                                </ListGroup.Item>\r\n                            </>\r\n                        );\r\n                    }) : <ListGroup.Item>\r\n                        <Attachments className=\"norecordtxt\">\r\n                            {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                        </Attachments>\r\n                    </ListGroup.Item>\r\n                }\r\n            </ListGroup>\r\n            </PerfectScrollbar>\r\n            </div>\r\n            {this.props.hidePaging ? \"\" :\r\n                    <CustomPager\r\n                        skip={this.state.skip}\r\n                        take={this.state.take}\r\n                        userInfo={this.props.userInfo}\r\n                        // width={20}\r\n                        pagershowwidth={33}\r\n                        handlePageChange={this.handlePageChange}\r\n                        total={this.props.attachmentList ? this.props.attachmentList.length : 0}\r\n                        buttonCount={this.state.buttonCount}\r\n                        info={this.state.info}\r\n                        pageSize={this.props.settings ? this.props.settings[15].split(\",\").map(setting => parseInt(setting)) : [5, 10, 15]}\r\n\r\n                    >\r\n                    </CustomPager>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    // ConfirmDelete = (deleteParam,file,deleteId,data,skip,take) => {\r\n    //     this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n    //         this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n    //         //() => this.DeleteManufacturer(\"delete\", deleteId)\r\n    //         () => this.props.deleteRecord({ ...deleteParam, selectedRecord: file, ncontrolCode: deleteId, data, skip: skip,  take: take })\r\n    //         );\r\n    // }\r\n    showHideDetails = (event, index) => {\r\n\r\n        event.stopPropagation();\r\n        let showMore = { ...this.state.showMore, [index]: !this.state.showMore[index] }\r\n        this.setState({ showMore })\r\n\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.attachmentList !== previousProps.attachmentList) {\r\n            if (this.props.skip === undefined && this.props.attachmentList && this.props.attachmentList.length <= this.state.skip) {\r\n                this.setState({ skip: 0 });\r\n            }\r\n        }\r\n        if (this.props.skip !== undefined && this.props.skip !== previousProps.skip) {\r\n            this.setState({ skip: this.props.skip, take: this.props.take });\r\n        }\r\n    }\r\n}\r\nexport default injectIntl(ListAttachment);"]},"metadata":{},"sourceType":"module"}