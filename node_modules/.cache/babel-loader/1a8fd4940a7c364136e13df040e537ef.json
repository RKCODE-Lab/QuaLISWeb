{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\Manufacturer.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { ContentPanel } from '../../pages/product/product.styled';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { showEsign, getControlMap, Lims_JSON_stringify } from '../../components/CommonScript';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { transactionStatus } from '../../components/Enumeration'; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getManfacturerCombo, selectCheckBoxManufacturer, getContactInfo, getSiteManufacturerLoadEdit, getContactManufacturerLoadEdit, filterColumnData, addManufacturerFile, viewAttachment } from '../../actions';\nimport ManufacturerSiteTab from '../../pages/contactmaster/ManufacturerSiteTab'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport AddManufacturer from '../../pages/contactmaster/AddManufacturer'; // import ReactTooltip from 'react-tooltip';\n\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ManufacturerFileTab from './ManufacturerFileTab';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Manufacturer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        } // data: {openModal, loadEsign, selectedRecord}\n\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteManufacturer(\"delete\", deleteId));\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      inputData[\"manufacturersiteaddress\"] = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n      let fieldList = [\"nmanufcode\", \"smanufname\", \"sdescription\", \"nmanufsitecode\", \"smanufsitename\", \"nmanufcontactcode\", \"scontactname\", \"ntransactionstatus\"];\n      let fieldUpdateList = [\"nmanufcode\", \"smanufname\", \"sdescription\", \"ntransactionstatus\"];\n\n      if (this.props.Login.operation === \"update\") {\n        postParam = {\n          inputListName: \"Manufacturer\",\n          selectedObject: \"selectedManufacturer\",\n          primaryKeyField: \"nmanufcode\"\n        }; // inputData[\"manufacturer\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n\n        inputData[\"manufacturer\"] = {};\n        fieldUpdateList.map(item => {\n          if (item === \"nofficialmanufcode\") {\n            return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item].value : \"\";\n          } else {\n            return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          }\n        });\n\n        if (inputData[\"manufacturer\"].hasOwnProperty('nofficialmanufcode')) {\n          delete inputData[\"manufacturer\"]['nofficialmanufcode'];\n        }\n      } else {\n        inputData[\"manufacturer\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        fieldList.map(item => {\n          if (item === \"nofficialmanufcode\") {\n            return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item].value;\n          } else {\n            return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item];\n          }\n        });\n        inputData[\"manufacturer\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n        inputData[\"manufacturersiteaddress\"][\"smanufsitename\"] = this.state.selectedRecord[\"smanufsitename\"] ? this.state.selectedRecord[\"smanufsitename\"] : \"\";\n        inputData[\"manufacturersiteaddress\"][\"scontactname\"] = this.state.selectedRecord[\"scontactname\"] ? this.state.selectedRecord[\"scontactname\"] : \"\";\n        inputData[\"manufacturersiteaddress\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n        inputData[\"manufacturersiteaddress\"][\"saddress1\"] = this.state.selectedRecord[\"saddress1\"] ? this.state.selectedRecord[\"saddress1\"] : \"\";\n        inputData[\"manufacturersiteaddress\"][\"saddress2\"] = this.state.selectedRecord[\"saddress2\"] ? this.state.selectedRecord[\"saddress2\"] : \"\";\n        inputData[\"manufacturersiteaddress\"][\"saddress3\"] = this.state.selectedRecord[\"saddress3\"] ? this.state.selectedRecord[\"saddress3\"] : \"\";\n        inputData[\"manufacturersiteaddress\"][\"ndefaultstatus\"] = transactionStatus.YES;\n      }\n\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Manufacturer\",\n        inputData: inputData,\n        selectedRecord: { ...this.state.selectedRecord\n        },\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      } // this.props.crudMaster(inputParam);\n\n    };\n\n    this.DeleteManufacturer = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"manufacturer\"] = this.props.Login.masterData.selectedManufacturer;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"Manufacturer\",\n        selectedObject: \"selectedManufacturer\",\n        primaryKeyField: \"nmanufcode\",\n        primaryKeyValue: this.props.Login.masterData.selectedManufacturer.nmanufcode,\n        fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Manufacturer\",\n        postParam,\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\"\n      };\n      const masterData = this.props.Login.masterData; // this.props.crudMaster(inputParam, this.props.Login.masterData);\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Manufacturer\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"agree\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData; //comboData.value;\n\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"manufacturer\",\n        methodUrl: \"Manufacturer\",\n        userInfo: this.props.Login.userInfo,\n        displayName: \"Manufacturer\"\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      tabMap.set(\"IDS_SITECONTACT\", /*#__PURE__*/React.createElement(ManufacturerSiteTab, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        screenName: this.props.Login.screenName,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        crudMaster: this.props.crudMaster,\n        errorCode: this.props.Login.errorCode,\n        masterStatus: this.props.Login.masterStatus,\n        openChildModal: this.props.Login.openChildModal,\n        updateStore: this.props.updateStore,\n        selectedRecord: this.props.Login.selectedRecord,\n        getContactInfo: this.props.getContactInfo,\n        getSiteManufacturerLoadEdit: this.props.getSiteManufacturerLoadEdit,\n        getContactManufacturerLoadEdit: this.props.getContactManufacturerLoadEdit,\n        ncontrolCode: this.props.Login.ncontrolCode,\n        userRoleControlRights: this.state.userRoleControlRights,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenData: this.props.Login.screenData,\n        validateEsignCredential: this.props.validateEsignCredential,\n        loadEsign: this.props.Login.loadEsign,\n        controlMap: this.state.controlMap,\n        Country: this.props.Login.Country,\n        countryCode: this.props.Login.countryCode,\n        SiteCode: this.props.Login.SiteCode,\n        selectedId: this.props.Login.selectedId,\n        dataState: this.props.Login.dataState,\n        settings: this.props.Login.settings,\n        linkMaster: this.props.Login.linkMaster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 40\n        }\n      }));\n      tabMap.set(\"IDS_FILE\", /*#__PURE__*/React.createElement(ManufacturerFileTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.deleteRecord,\n        manufacturerFile: this.props.Login.masterData.manufacturerFile || [],\n        getAvailableData: this.props.getAvailableData,\n        addManufacturerFile: this.props.addManufacturerFile,\n        viewManufacturerFile: this.viewManufacturerFile,\n        defaultRecord: this.defaultRecord,\n        screenName: \"IDS_MANUFACTURERFILE\" //ALPD-898 Fix\n        ,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 9\n        }\n      }));\n      return tabMap;\n    };\n\n    this.viewManufacturerFile = filedata => {\n      const inputParam = {\n        inputData: {\n          manufacturerfile: filedata,\n          userinfo: { ...this.props.Login.userInfo,\n            //ALPD-1621(while saving the file and link,audit trail is not captured respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        classUrl: \"manufacturer\",\n        operation: \"view\",\n        methodUrl: \"AttachedManufacturerFile\",\n        screenName: \"Manufacturer File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.deleteRecord = manufacturerparam => {\n      let inputParam = {};\n\n      if (this.props.Login.screenName === 'IDS_MANUFACTURERFILE') {\n        //ALPD-898 Fix\n        inputParam = {\n          classUrl: \"manufacturer\",\n          methodUrl: manufacturerparam.methodUrl,\n          inputData: {\n            [manufacturerparam.methodUrl.toLowerCase()]: manufacturerparam.selectedRecord,\n            \"userinfo\": { ...this.props.Login.userInfo,\n              //ALPD-1621(while saving the file and link,audit trail is not captured respective language)\n              slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n            }\n          },\n          operation: manufacturerparam.operation,\n          //dataState: this.state.dataState,\n          //dataStateMaterial: this.state.dataStateMaterial\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, manufacturerparam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: this.props.Login.screenName,\n              operation: manufacturerparam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      selectedRecord: {},\n      dataResult: [],\n      dataState: dataState,\n      masterStatus: \"\",\n      error: \"\",\n      Manufacturer: [],\n      operation: \"\",\n      selectedManufacturer: undefined,\n      screenName: \"Manufacturer\",\n      EDQMManufacturer: [],\n      SiteCode: 0,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_MANUFACTURERNAME\",\n      \"mandatory\": true,\n      \"dataField\": \"smanufname\",\n      \"width\": \"200px\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MANUFSITENAME\",\n      \"mandatory\": true,\n      \"dataField\": \"smanufsitename\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MANUFCONTACTNAME\",\n      \"mandatory\": true,\n      \"dataField\": \"scontactname\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_ADDRESS1\",\n      \"mandatory\": true,\n      \"dataField\": \"saddress1\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_COUNTRY\",\n      \"dataField\": \"ncountrycode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    } // { \"idsName\": \"IDS_EDQMOFFICIALNAME\", \"mandatory\": true, \"dataField\": \"nofficialmanufcode\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\n    ];\n    this.extractedUpdateColumnList = [{\n      \"idsName\": \"IDS_MANUFACTURERNAME\",\n      \"mandatory\": true,\n      \"dataField\": \"smanufname\",\n      \"width\": \"200px\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n\n    if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.DEACTIVE) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.ACTIVE) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddManufacturer\") && this.state.controlMap.get(\"AddManufacturer\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditManufacturer\") && this.state.controlMap.get(\"EditManufacturer\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteManufacturer\") && this.state.controlMap.get(\"DeleteManufacturer\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Manufacturer\",\n      selectedObject: \"selectedManufacturer\",\n      primaryKeyField: \"nmanufcode\",\n      fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"smanufname\", \"sdescription\", \"stransdisplaystatus\"]\n    };\n    const mandatoryFields = [];\n    this.props.Login.operation == \"create\" ? this.extractedColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\") : this.extractedUpdateColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\n    , {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Manufacturer\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Manufacturer,\n      getMasterDetail: Manufacturer => this.props.selectCheckBoxManufacturer(Manufacturer, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedManufacturer,\n      primaryKeyField: \"nmanufcode\",\n      mainField: \"smanufname\",\n      firstField: \"stransdisplaystatus\" //secondField=\"stransdisplaystatus\"\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getManfacturerCombo(\"IDS_MANUFACTURER\", \"create\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, 75),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.Manufacturer && this.props.Login.masterData.Manufacturer.length > 0 && this.props.Login.masterData.selectedManufacturer ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.selectedManufacturer.smanufname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 65\n      }\n    }), this.props.Login.masterData.selectedManufacturer.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"  //ALPD-898 Fix\n      ,\n      onClick: e => this.props.getManfacturerCombo(\"IDS_MANUFACTURER\", \"update\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_DESCRIPTION',\n      message: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 61\n      }\n    }, \" \", this.props.Login.masterData.selectedManufacturer.sdescription === null || this.props.Login.masterData.selectedManufacturer.sdescription.length === 0 ? '-' : this.props.Login.masterData.selectedManufacturer.sdescription)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 57\n      }\n    })))))) : \"\")))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation // formatMessage={this.props.intl.formatMessage}\n        ,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddManufacturer, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange // formatMessage={this.props.intl.formatMessage}\n        ,\n        edqmManufacturerList: this.props.Login.edqmManufacturerList || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        Country: this.props.Login.Country // defaultValue={this.props.Login.edqmManufacturer}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    // if (this.props.Login.masterData !== previousProps.Login.masterData) {\n    //     this.setState(\n    //         {\n    //             Manufacturer: this.props.Login.masterData.Manufacturer ?\n    //                 this.props.Login.masterData.Manufacturer : this.state.Manufacturer,\n    //             selectedManufacturer: this.props.Login.masterData.selectedManufacturer ?\n    //                 this.props.Login.masterData.selectedManufacturer : this.state.selectedManufacturer,\n    //             ManufacturerSiteAddress: this.props.Login.masterData.ManufacturerSiteAddress ?\n    //                 this.props.Login.masterData.ManufacturerSiteAddress : {},\n    //             ManufacturerContactInfo: this.props.Login.masterData.ManufacturerContactInfo ?\n    //                 this.props.Login.masterData.ManufacturerContactInfo : {},\n    //             SiteCode: this.props.Login.masterData.SiteCode ? this.props.Login.masterData.SiteCode : 0,\n    //             isOpen: false\n    //         });\n    // }\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getManfacturerCombo,\n  selectCheckBoxManufacturer,\n  getContactInfo,\n  getSiteManufacturerLoadEdit,\n  getContactManufacturerLoadEdit,\n  filterColumnData,\n  addManufacturerFile,\n  viewAttachment\n})(injectIntl(Manufacturer));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/Manufacturer.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","ReadOnlyText","ContentPanel","connect","injectIntl","ListMaster","SlideOutModal","showEsign","getControlMap","Lims_JSON_stringify","Esign","DEFAULT_RETURN","transactionStatus","ConfirmMessage","callService","crudMaster","validateEsignCredential","updateStore","getManfacturerCombo","selectCheckBoxManufacturer","getContactInfo","getSiteManufacturerLoadEdit","getContactManufacturerLoadEdit","filterColumnData","addManufacturerFile","viewAttachment","ManufacturerSiteTab","AddManufacturer","CustomTabs","ManufacturerFileTab","mapStateToProps","state","Login","Manufacturer","constructor","props","sidebarExpandCollapse","setState","sidebarview","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","DeleteManufacturer","onSaveClick","saveType","formRef","inputData","userInfo","postParam","undefined","fieldList","fieldUpdateList","inputListName","selectedObject","primaryKeyField","map","item","value","hasOwnProperty","nmastersitecode","YES","inputParam","classUrl","methodUrl","searchRef","masterData","userRoleControlRights","nformcode","ncontrolCode","screenData","selectedManufacturer","primaryKeyValue","nmanufcode","fetchUrl","fecthInputObject","userinfo","screenName","onInputOnChange","event","target","type","name","checked","NO","ACTIVE","DEACTIVE","onComboChange","comboData","fieldName","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","current","displayName","onTabChange","tabProps","tabDetail","tabMap","Map","set","errorCode","masterStatus","openChildModal","controlMap","Country","countryCode","SiteCode","dataState","settings","linkMaster","deleteRecord","manufacturerFile","getAvailableData","viewManufacturerFile","defaultRecord","filedata","manufacturerfile","slanguagename","manufacturerparam","toLowerCase","skip","take","parseInt","dataResult","error","EDQMManufacturer","createRef","getDerivedStateFromProps","warn","render","userStatusCSS","activeIconCSS","extractedColumnList","extractedUpdateColumnList","ntransactionstatus","addId","has","get","ncontrolcode","editId","filterParam","searchFieldList","mandatoryFields","forEach","mandatory","push","searchedData","length","smanufname","stransdisplaystatus","indexOf","e","sdescription","edqmManufacturerList","componentDidUpdate","previousProps","Object","values","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ContentPanel } from '../../pages/product/product.styled';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap,Lims_JSON_stringify } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getManfacturerCombo, selectCheckBoxManufacturer,\r\n    getContactInfo,\r\n    getSiteManufacturerLoadEdit, getContactManufacturerLoadEdit, filterColumnData, addManufacturerFile, viewAttachment\r\n} from '../../actions';\r\nimport ManufacturerSiteTab from '../../pages/contactmaster/ManufacturerSiteTab';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport AddManufacturer from '../../pages/contactmaster/AddManufacturer';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ManufacturerFileTab from './ManufacturerFileTab';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass Manufacturer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            selectedRecord: {}, dataResult: [],\r\n            dataState: dataState,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            Manufacturer: [],\r\n            operation: \"\",\r\n            selectedManufacturer: undefined,\r\n            screenName: \"Manufacturer\",\r\n            EDQMManufacturer: [],\r\n            SiteCode: 0,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            sidebarview: false\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_MANUFACTURERNAME\", \"mandatory\": true, \"dataField\": \"smanufname\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MANUFSITENAME\", \"mandatory\": true, \"dataField\": \"smanufsitename\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_MANUFCONTACTNAME\", \"mandatory\": true, \"dataField\": \"scontactname\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_ADDRESS1\", \"mandatory\": true, \"dataField\": \"saddress1\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_COUNTRY\", \"dataField\": \"ncountrycode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            // { \"idsName\": \"IDS_EDQMOFFICIALNAME\", \"mandatory\": true, \"dataField\": \"nofficialmanufcode\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n\r\n        this.extractedUpdateColumnList = [\r\n            { \"idsName\": \"IDS_MANUFACTURERNAME\", \"mandatory\": true, \"dataField\": \"smanufname\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        ];\r\n\r\n        if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.DEACTIVE) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        const addId = this.state.controlMap.has(\"AddManufacturer\") && this.state.controlMap.get(\"AddManufacturer\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditManufacturer\") && this.state.controlMap.get(\"EditManufacturer\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteManufacturer\") && this.state.controlMap.get(\"DeleteManufacturer\").ncontrolcode\r\n\r\n        const filterParam = {\r\n            inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\", primaryKeyField: \"nmanufcode\",\r\n            fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"smanufname\", \"sdescription\", \"stransdisplaystatus\"]\r\n        };\r\n        const mandatoryFields = [];\r\n        this.props.Login.operation == \"create\" ?\r\n        this.extractedColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        ):\r\n        this.extractedUpdateColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        )\r\n        ;\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Manufacturer\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Manufacturer}\r\n                                getMasterDetail={(Manufacturer) => this.props.selectCheckBoxManufacturer(Manufacturer, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedManufacturer}\r\n                                primaryKeyField=\"nmanufcode\"\r\n                                mainField=\"smanufname\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                //secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getManfacturerCombo(\"IDS_MANUFACTURER\", \"create\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, 75)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            <Row><Col md={12}>\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    {this.props.Login.masterData.Manufacturer && this.props.Login.masterData.Manufacturer.length > 0 && this.props.Login.masterData.selectedManufacturer ?\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedManufacturer.smanufname}</Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                <i className={activeIconCSS}></i>\r\n                                                                {this.props.Login.masterData.selectedManufacturer.stransdisplaystatus}\r\n                                                            </span>\r\n                                                        </h2>\r\n                                                        <div className=\"d-inline \">\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n\r\n                                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />  <ProductList className=\"d-inline dropdown badget_menu\"> */}\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                             //   data-for=\"tooltip_list_wrap\"  //ALPD-898 Fix\r\n                                                                onClick={(e) => this.props.getManfacturerCombo(\"IDS_MANUFACTURER\", \"update\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, editId)} >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                             //   data-for=\"tooltip_list_wrap\"\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <FontAwesomeIcon icon={faTrashAlt} className=\"ActionIconColor\" onClick={(e) => this.DeleteManufacturer(\"delete\", deleteId)} /> */}\r\n                                                                {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        handleClickDelete={() => this.DeleteManufacturer(\"delete\", deleteId)}\r\n                                                                    /> */}\r\n                                                            </Nav.Link>\r\n                                                            {/* </Tooltip> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row>\r\n                                                    {/* <Col md='4'>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id={'IDS_EDQMOFFICIALNAME'} message=\"EDQM Official Name\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.selectedManufacturer.sofficialmanufname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> */}\r\n                                                    <Col md='4'>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id={'IDS_DESCRIPTION'} message=\"Description\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.selectedManufacturer.sdescription === null || this.props.Login.masterData.selectedManufacturer.sdescription.length === 0 ? '-' :\r\n                                                               this.props.Login.masterData.selectedManufacturer.sdescription}</ReadOnlyText>\r\n                                                           \r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* </Card.Body>\r\n                                            <Card.Body> */}\r\n\r\n                                            <Row className=\"no-gutters\">\r\n                                                <Col md={12}>\r\n                                                    <Card className=\"at-tabs\">\r\n                                                        <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            </Card.Body>\r\n                                        </Card> : \"\"}\r\n                                </ContentPanel>\r\n                            </Col></Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <AddManufacturer\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                edqmManufacturerList={this.props.Login.edqmManufacturerList || []}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.inputParam}\r\n                                Country = {this.props.Login.Country}\r\n                            // defaultValue={this.props.Login.edqmManufacturer}\r\n                            /> \r\n                            \r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n            // data: {openModal, loadEsign, selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteManufacturer(\"delete\", deleteId));\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        inputData[\"manufacturersiteaddress\"] = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        let postParam = undefined;\r\n\r\n        let fieldList = [\"nmanufcode\", \"smanufname\", \"sdescription\",\"nmanufsitecode\",\"smanufsitename\",\"nmanufcontactcode\",\"scontactname\",\"ntransactionstatus\"];\r\n            \r\n        let fieldUpdateList = [\"nmanufcode\", \"smanufname\", \"sdescription\",\"ntransactionstatus\"];\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n\r\n            postParam = { inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\", primaryKeyField: \"nmanufcode\" };\r\n           \r\n           // inputData[\"manufacturer\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            inputData[\"manufacturer\"] = {};\r\n            fieldUpdateList.map(item => {\r\n                if (item === \"nofficialmanufcode\") {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item].value : \"\";\r\n                }\r\n                else {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n                }\r\n\r\n            })\r\n            if (inputData[\"manufacturer\"].hasOwnProperty('nofficialmanufcode')) {\r\n                    delete inputData[\"manufacturer\"]['nofficialmanufcode']\r\n            }\r\n        }\r\n        else {\r\n            inputData[\"manufacturer\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            fieldList.map(item => {\r\n                if (item === \"nofficialmanufcode\") {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item].value\r\n                }\r\n                else {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item]\r\n                }\r\n            })\r\n            inputData[\"manufacturer\"][\"ncountrycode\"]=this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value:-1;\r\n            inputData[\"manufacturersiteaddress\"][\"smanufsitename\"]=this.state.selectedRecord[\"smanufsitename\"] ? this.state.selectedRecord[\"smanufsitename\"]:\"\";\r\n            inputData[\"manufacturersiteaddress\"][\"scontactname\"]=this.state.selectedRecord[\"scontactname\"] ? this.state.selectedRecord[\"scontactname\"]:\"\";\r\n            inputData[\"manufacturersiteaddress\"][\"ncountrycode\"]=this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value:-1;\r\n            inputData[\"manufacturersiteaddress\"][\"saddress1\"]=this.state.selectedRecord[\"saddress1\"] ? this.state.selectedRecord[\"saddress1\"]:\"\";\r\n            inputData[\"manufacturersiteaddress\"][\"saddress2\"]=this.state.selectedRecord[\"saddress2\"] ? this.state.selectedRecord[\"saddress2\"]:\"\";\r\n            inputData[\"manufacturersiteaddress\"][\"saddress3\"]=this.state.selectedRecord[\"saddress3\"] ? this.state.selectedRecord[\"saddress3\"]:\"\";\r\n            inputData[\"manufacturersiteaddress\"][\"ndefaultstatus\"]=transactionStatus.YES;\r\n\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Manufacturer\",\r\n            inputData: inputData,\r\n            selectedRecord:{...this.state.selectedRecord},\r\n            operation: this.props.Login.operation, saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n        // this.props.crudMaster(inputParam);\r\n    }\r\n    DeleteManufacturer = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"manufacturer\"] = this.props.Login.masterData.selectedManufacturer;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        const postParam = {\r\n            inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\",\r\n            primaryKeyField: \"nmanufcode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedManufacturer.nmanufcode,\r\n            fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: \"Manufacturer\", postParam,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\"\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        // this.props.crudMaster(inputParam, this.props.Login.masterData);\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Manufacturer\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;//comboData.value;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n        //     this.setState(\r\n        //         {\r\n        //             Manufacturer: this.props.Login.masterData.Manufacturer ?\r\n        //                 this.props.Login.masterData.Manufacturer : this.state.Manufacturer,\r\n        //             selectedManufacturer: this.props.Login.masterData.selectedManufacturer ?\r\n        //                 this.props.Login.masterData.selectedManufacturer : this.state.selectedManufacturer,\r\n        //             ManufacturerSiteAddress: this.props.Login.masterData.ManufacturerSiteAddress ?\r\n        //                 this.props.Login.masterData.ManufacturerSiteAddress : {},\r\n        //             ManufacturerContactInfo: this.props.Login.masterData.ManufacturerContactInfo ?\r\n        //                 this.props.Login.masterData.ManufacturerContactInfo : {},\r\n        //             SiteCode: this.props.Login.masterData.SiteCode ? this.props.Login.masterData.SiteCode : 0,\r\n        //             isOpen: false\r\n        //         });\r\n\r\n\r\n        // }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"manufacturer\",\r\n            methodUrl: \"Manufacturer\",\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: \"Manufacturer\"\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    tabDetail = () => {\r\n      \r\n        const tabMap = new Map();\r\n\r\n        tabMap.set(\"IDS_SITECONTACT\",  <ManufacturerSiteTab\r\n        operation={this.props.Login.operation}\r\n        inputParam={this.props.Login.inputParam}\r\n        screenName={this.props.Login.screenName}\r\n        userInfo={this.props.Login.userInfo}\r\n        masterData={this.props.Login.masterData}\r\n        crudMaster={this.props.crudMaster}\r\n        errorCode={this.props.Login.errorCode}\r\n        masterStatus={this.props.Login.masterStatus}\r\n        openChildModal={this.props.Login.openChildModal}\r\n        updateStore={this.props.updateStore}\r\n        selectedRecord={this.props.Login.selectedRecord}\r\n        getContactInfo={this.props.getContactInfo}\r\n        getSiteManufacturerLoadEdit={this.props.getSiteManufacturerLoadEdit}\r\n        getContactManufacturerLoadEdit={this.props.getContactManufacturerLoadEdit}\r\n        ncontrolCode={this.props.Login.ncontrolCode}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        esignRights={this.props.Login.userRoleControlRights}\r\n        screenData={this.props.Login.screenData}\r\n        validateEsignCredential={this.props.validateEsignCredential}\r\n        loadEsign={this.props.Login.loadEsign}\r\n        controlMap={this.state.controlMap}\r\n        Country={this.props.Login.Country}\r\n        countryCode={this.props.Login.countryCode}\r\n        SiteCode={this.props.Login.SiteCode}\r\n        selectedId={this.props.Login.selectedId}\r\n        dataState={this.props.Login.dataState}\r\n        settings = {this.props.Login.settings}\r\n        linkMaster = {this.props.Login.linkMaster}\r\n\r\n    />)\r\n\r\n        tabMap.set(\"IDS_FILE\",\r\n        <ManufacturerFileTab\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            inputParam={this.props.Login.inputParam}\r\n            deleteRecord={this.deleteRecord}\r\n            manufacturerFile={this.props.Login.masterData.manufacturerFile || []}\r\n            getAvailableData={this.props.getAvailableData}\r\n            addManufacturerFile={this.props.addManufacturerFile}\r\n            viewManufacturerFile={this.viewManufacturerFile}\r\n            defaultRecord={this.defaultRecord}\r\n            screenName=\"IDS_MANUFACTURERFILE\"       //ALPD-898 Fix\r\n            settings={this.props.Login.settings}\r\n        />);\r\n        return tabMap;\r\n    }\r\n\r\n    viewManufacturerFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                manufacturerfile: filedata,\r\n                userinfo: {...this.props.Login.userInfo,\r\n                    //ALPD-1621(while saving the file and link,audit trail is not captured respective language)\r\n                    slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)}\r\n            },\r\n            classUrl: \"manufacturer\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedManufacturerFile\",\r\n            screenName: \"Manufacturer File\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    deleteRecord = (manufacturerparam) => {\r\n       \r\n            let inputParam = {};\r\n            if (this.props.Login.screenName === 'IDS_MANUFACTURERFILE') {       //ALPD-898 Fix\r\n                inputParam = {\r\n                    classUrl: \"manufacturer\",\r\n                    methodUrl: manufacturerparam.methodUrl,\r\n                    inputData: {\r\n                        [manufacturerparam.methodUrl.toLowerCase()]: manufacturerparam.selectedRecord,\r\n                        \"userinfo\": {...this.props.Login.userInfo,\r\n                            //ALPD-1621(while saving the file and link,audit trail is not captured respective language)\r\n                            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                        }\r\n                    },\r\n                    operation: manufacturerparam.operation,\r\n                    //dataState: this.state.dataState,\r\n                    //dataStateMaterial: this.state.dataStateMaterial\r\n                    dataState: this.state.dataState\r\n                }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, manufacturerparam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true, screenName: this.props.Login.screenName, operation: manufacturerparam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, validateEsignCredential, updateStore,\r\n        getManfacturerCombo, selectCheckBoxManufacturer, getContactInfo,\r\n        getSiteManufacturerLoadEdit, getContactManufacturerLoadEdit, filterColumnData, addManufacturerFile, viewAttachment\r\n    })(injectIntl(Manufacturer));"]},"metadata":{},"sourceType":"module"}