{"ast":null,"code":"import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';//import { intl } from '../components/App';\nimport{getComboLabelValue}from\"../components/CommonScript\";export function getprojectytpe(addAliqutoplanId,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"aliquotplan/getProjectType\",{\"addAliqutoplanId\":addAliqutoplanId,userinfo:userInfo}).then(function(response){var constructType=constructOptionList(response.data||[],\"nprojectcode\",\"sprojecttypename\",undefined,undefined,false);var projecttypeList=constructType.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,projecttypeList:projecttypeList,processtypeList:[],sampletypeList:[],collectiontubeList:[],patientcatgoryList:[],visitnameList:[],selectedRecord:{},screenName:\"IDS_ALIQUOTPLAN\",operation:\"create\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSampleTypeandPatientCatgeroy(sampletypevalue,sampletypename,userInfo){return function(dispatch){var getPatientCatgory=rsapi.post(\"aliquotplan/getPatientCatgory\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo});var getSampleType=rsapi.post(\"aliquotplan/getSampleType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo});var collectiontubeList=rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo});var getVisitName=rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo});var getUnitList=rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo});// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nvar getSampleDonarList=rsapi.post(\"aliquotplan/getSampleDonor\",{\"sampletypevalue\":sampletypevalue,userinfo:userInfo});var urlArray=[];urlArray=[getPatientCatgory,getSampleType,collectiontubeList,getVisitName,getUnitList,getSampleDonarList];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var patientcatgoryconstructType=constructOptionList(response[0].data||[],\"npatientcode\",\"spatientcatname\",undefined,undefined,false);var sampletypeconstructType=constructOptionList(response[1].data||[],\"nproductsamplecode\",\"sproductname\",undefined,undefined,false);var collectiontubeListconstruct=constructOptionList(response[2].data||[],\"ncollectiontubecode\",\"stubename\",undefined,undefined,false);var VisitNameconstruct=constructOptionList(response[3].data||[],\"nvisitcode\",\"svisitnumber\",undefined,undefined,false);var getUnitList=constructOptionList(response[4].data||[],\"nunitbasiccode\",\"sunitname\",undefined,undefined,false);// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nvar getSampleDonarList=constructOptionList(response[5].data||[],\"nsampledonorcode\",\"ssampledonor\",undefined,undefined,false);var patientcatgoryList=patientcatgoryconstructType.get(\"OptionList\");var sampletypeList=sampletypeconstructType.get(\"OptionList\");var collectiontubeListconstructList=collectiontubeListconstruct.get(\"OptionList\");var visitnameList=VisitNameconstruct.get(\"OptionList\");var unitList=getUnitList.get(\"OptionList\");var sampledonarList=getSampleDonarList.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,sampletypeList:sampletypeList,patientcatgoryList:patientcatgoryList,collectiontubeList:collectiontubeListconstructList,visitnameList:visitnameList,unitList:unitList,sampledonarList:sampledonarList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function getCollectionTubeType(sampletypevalue,sampletypename,userInfo) {\n//     return function (dispatch) {\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo})\n//             .then(response => {\n//                 const constructType = constructOptionList(response.data || [], \"ncollectiontubecode\",\n//                 \"stubename\", undefined, undefined, false);\n//                 const collectiontubeList = constructType.get(\"OptionList\");\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         loading: false, openModal:true,\n//                         collectiontubeList:collectiontubeList,\n//                         patientcatgoryList: [],\n//                         visitnameList:[]\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }  \n// }\n// export function getVisitName(sampletypevalue,sampletypename,userInfo) {\n//     return function (dispatch) {\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo})\n//         .then(response => {\n//             const constructType = constructOptionList(response.data || [], \"nvisitcode\",\n//             \"svisitnumber\", undefined, undefined, false);\n//                 const visitnameList=constructType.get(\"OptionList\");\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         loading: false, openModal:true,\n//                         visitnameList:visitnameList\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }  \n// }\nexport function getUnit(sampletypevalue,sampletypename,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfo}).then(function(response){var constructType=constructOptionList(response.data||[],\"nunitbasiccode\",\"sunitname\",undefined,undefined,false);var unitList=constructType.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,unitList:unitList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveAliquotPlanById(editParam,userInfo){return function(dispatch){dispatch(initRequest(true));var ncontrolCode=editParam.ncontrolCode;var sampletypevalue=editParam.editRow.nprojectcode;var sampletypename=editParam.editRow.sprojecttypename;var userInfoPass=editParam.userInfo;var projectytpe=rsapi.post(\"aliquotplan/getProjectType\",{\"editAliquotplan\":ncontrolCode,userinfo:userInfoPass});var sampletypeList=rsapi.post(\"aliquotplan/getSampleType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfoPass});var collectiontubeList=rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfoPass});var getPatientCatgory=rsapi.post(\"aliquotplan/getPatientCatgory\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfoPass});var getVisitName=rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfoPass});var getUnitList=rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo:userInfoPass});// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nvar getSampleDonarList=rsapi.post(\"aliquotplan/getSampleDonor\",{\"sampletypevalue\":sampletypevalue,userinfo:userInfoPass});var getActiveAliquotplanById=rsapi.post(\"aliquotplan/getActiveAliquotPlanById\",{naliquotplancode:editParam.editRow.naliquotplancode,userinfo:userInfoPass});var urlArray=[];urlArray=[getActiveAliquotplanById,projectytpe,sampletypeList,collectiontubeList,getPatientCatgory,getVisitName,getUnitList,getSampleDonarList];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord=response[0].data;var projectytpeconstruct=constructOptionList(response[1].data||[],\"nprojectcode\",\"sprojecttypename\",undefined,undefined,false);var sampletypeListconstruct=constructOptionList(response[2].data||[],\"nproductsamplecode\",\"sproductname\",undefined,undefined,false);var collectiontubeListconstruct=constructOptionList(response[3].data||[],\"ncollectiontubecode\",\"stubename\",undefined,undefined,false);var patientcatgoryconstruct=constructOptionList(response[4].data||[],\"npatientcode\",\"spatientcatname\",undefined,undefined,false);var VisitNameconstruct=constructOptionList(response[5].data||[],\"nvisitcode\",\"svisitnumber\",undefined,undefined,false);var Unitconstruct=constructOptionList(response[6].data||[],\"nunitbasiccode\",\"sunitname\",undefined,undefined,false);// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nvar SampleDonarconstruct=constructOptionList(response[7].data||[],\"nsampledonorcode\",\"ssampledonor\",undefined,undefined,false);selectedRecord[\"sprojecttypename\"]=getComboLabelValue(response[0].data,response[1].data,\"nprojectcode\",\"sprojecttypename\");selectedRecord[\"sproductname\"]=getComboLabelValue(response[0].data,response[2].data,\"nproductsamplecode\",\"sproductname\");selectedRecord[\"stubename\"]=getComboLabelValue(response[0].data,response[3].data,\"ncollectiontubecode\",\"stubename\");selectedRecord[\"spatientcatname\"]=getComboLabelValue(response[0].data,response[4].data,\"npatientcode\",\"spatientcatname\");selectedRecord[\"svisitnumber\"]=getComboLabelValue(response[0].data,response[5].data,\"nvisitcode\",\"svisitnumber\");selectedRecord[\"sunitname\"]=getComboLabelValue(response[0].data,response[6].data,\"nunitbasiccode\",\"sunitname\");// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nselectedRecord[\"ssampledonor\"]=getComboLabelValue(response[0].data,response[7].data,\"nsampledonorcode\",\"ssampledonor\");selectedRecord[\"saliquotno\"]=response[0].data.saliquotno;selectedRecord[\"squantity\"]=response[0].data.squantity;selectedRecord[\"sdescription\"]=response[0].data.sdescription;//selectedRecord[\"spatientcatname\"]=response[0].data.spatientcatname.label;\nvar projectytpeconstructList=projectytpeconstruct.get(\"OptionList\");var sampletypeListconstructList=sampletypeListconstruct.get(\"OptionList\");var collectiontubeListconstructList=collectiontubeListconstruct.get(\"OptionList\");var patientcatgoryList=patientcatgoryconstruct.get(\"OptionList\");var visitnameList=VisitNameconstruct.get(\"OptionList\");var unitList=Unitconstruct.get(\"OptionList\");// ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\nvar SampleDonarList=SampleDonarconstruct.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,projecttypeList:projectytpeconstructList,sampletypeList:sampletypeListconstructList,collectiontubeList:collectiontubeListconstructList,patientcatgoryList:patientcatgoryList,visitnameList:visitnameList,unitList:unitList,sampledonarList:SampleDonarList,selectedRecord:selectedRecord,selectedId:editParam.editRow.naliquotplancode,ncontrolCode:editParam.ncontrolCode,screenName:\"IDS_ALIQUOTPLAN\",operation:\"update\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/AliquotPlanAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","toast","Axios","initRequest","getComboLabelValue","getprojectytpe","addAliqutoplanId","userInfo","dispatch","post","userinfo","then","response","constructType","data","undefined","projecttypeList","get","type","payload","loading","openModal","processtypeList","sampletypeList","collectiontubeList","patientcatgoryList","visitnameList","selectedRecord","screenName","operation","catch","error","status","message","warn","getSampleTypeandPatientCatgeroy","sampletypevalue","sampletypename","getPatientCatgory","getSampleType","getVisitName","getUnitList","getSampleDonarList","urlArray","all","patientcatgoryconstructType","sampletypeconstructType","collectiontubeListconstruct","VisitNameconstruct","collectiontubeListconstructList","unitList","sampledonarList","getUnit","getActiveAliquotPlanById","editParam","ncontrolCode","editRow","nprojectcode","sprojecttypename","userInfoPass","projectytpe","getActiveAliquotplanById","naliquotplancode","projectytpeconstruct","sampletypeListconstruct","patientcatgoryconstruct","Unitconstruct","SampleDonarconstruct","saliquotno","squantity","sdescription","projectytpeconstructList","sampletypeListconstructList","SampleDonarList","selectedId"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\n//import { intl } from '../components/App';\r\nimport { getComboLabelValue } from \"../components/CommonScript\";\r\n\r\n\r\n\r\nexport function getprojectytpe(addAliqutoplanId,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"aliquotplan/getProjectType\",{\"addAliqutoplanId\":addAliqutoplanId,userinfo: userInfo})\r\n            .then(response => {\r\n                const constructType = constructOptionList(response.data || [], \"nprojectcode\",\r\n                \"sprojecttypename\", undefined, undefined, false);\r\n\r\n                const projecttypeList = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        projecttypeList:projecttypeList,\r\n                        processtypeList : [],\r\n                        sampletypeList : [],\r\n                        collectiontubeList : [],\r\n                        patientcatgoryList: [],\r\n                        visitnameList:[],\r\n                        selectedRecord : {},\r\n                        screenName:\"IDS_ALIQUOTPLAN\",\r\n                        operation: \"create\"\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getSampleTypeandPatientCatgeroy(sampletypevalue,sampletypename,userInfo) {\r\n    return function (dispatch) {\r\n\r\n        const getPatientCatgory = rsapi.post(\"aliquotplan/getPatientCatgory\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo});\r\n        \r\n        const getSampleType = rsapi.post(\"aliquotplan/getSampleType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo});\r\n\r\n        const collectiontubeList = rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo});\r\n                \r\n        const getVisitName = rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo});\r\n\r\n        const getUnitList= rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo});\r\n\r\n        // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n        const getSampleDonarList= rsapi.post(\"aliquotplan/getSampleDonor\",{\"sampletypevalue\":sampletypevalue, userinfo: userInfo});\r\n\r\n\r\n        let urlArray = [];\r\n        urlArray = [getPatientCatgory,getSampleType,collectiontubeList,getVisitName,getUnitList,getSampleDonarList];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                const patientcatgoryconstructType = constructOptionList(response[0].data || [], \"npatientcode\",\r\n                \"spatientcatname\", undefined, undefined, false);\r\n\r\n                const sampletypeconstructType = constructOptionList(response[1].data || [], \"nproductsamplecode\",\r\n                \"sproductname\", undefined, undefined, false);\r\n\r\n                const collectiontubeListconstruct = constructOptionList(response[2].data || [], \"ncollectiontubecode\",\r\n                    \"stubename\", undefined, undefined, false);\r\n    \r\n                const VisitNameconstruct = constructOptionList(response[3].data || [], \"nvisitcode\",\r\n                    \"svisitnumber\", undefined, undefined, false);\r\n\r\n                const getUnitList = constructOptionList(response[4].data || [], \"nunitbasiccode\",\r\n                        \"sunitname\", undefined, undefined, false);\r\n                \r\n                // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n                const getSampleDonarList = constructOptionList(response[5].data || [], \"nsampledonorcode\",\r\n                    \"ssampledonor\", undefined, undefined, false);\r\n\r\n                const patientcatgoryList = patientcatgoryconstructType.get(\"OptionList\");\r\n                const sampletypeList = sampletypeconstructType.get(\"OptionList\");\r\n                const collectiontubeListconstructList=collectiontubeListconstruct.get(\"OptionList\");\r\n                const visitnameList=VisitNameconstruct.get(\"OptionList\");\r\n                const unitList = getUnitList.get(\"OptionList\");\r\n                const sampledonarList = getSampleDonarList.get(\"OptionList\");\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        sampletypeList:sampletypeList,\r\n                        patientcatgoryList:patientcatgoryList,\r\n                        collectiontubeList:collectiontubeListconstructList,\r\n                        visitnameList:visitnameList,\r\n                        unitList:unitList,\r\n                        sampledonarList:sampledonarList\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }  \r\n}\r\n\r\n\r\n// export function getCollectionTubeType(sampletypevalue,sampletypename,userInfo) {\r\n//     return function (dispatch) {\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo})\r\n//             .then(response => {\r\n//                 const constructType = constructOptionList(response.data || [], \"ncollectiontubecode\",\r\n//                 \"stubename\", undefined, undefined, false);\r\n\r\n//                 const collectiontubeList = constructType.get(\"OptionList\");\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         loading: false, openModal:true,\r\n//                         collectiontubeList:collectiontubeList,\r\n//                         patientcatgoryList: [],\r\n//                         visitnameList:[]\r\n                        \r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n\r\n//             })\r\n//     }  \r\n// }\r\n\r\n// export function getVisitName(sampletypevalue,sampletypename,userInfo) {\r\n//     return function (dispatch) {\r\n//         dispatch(initRequest(true));\r\n        \r\n//         return rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo})\r\n//         .then(response => {\r\n//             const constructType = constructOptionList(response.data || [], \"nvisitcode\",\r\n//             \"svisitnumber\", undefined, undefined, false);\r\n\r\n//                 const visitnameList=constructType.get(\"OptionList\");\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         loading: false, openModal:true,\r\n//                         visitnameList:visitnameList\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n\r\n//             })\r\n//     }  \r\n// }\r\n\r\n\r\nexport function getUnit(sampletypevalue,sampletypename,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfo})\r\n            .then(response => {\r\n                const constructType = constructOptionList(response.data || [], \"nunitbasiccode\",\r\n                \"sunitname\", undefined, undefined, false);\r\n\r\n                const unitList = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        unitList:unitList\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }  \r\n} \r\n\r\n\r\nexport function getActiveAliquotPlanById(editParam,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const ncontrolCode=editParam.ncontrolCode;\r\n\r\n        const sampletypevalue=editParam.editRow.nprojectcode;\r\n\r\n        const sampletypename=editParam.editRow.sprojecttypename;\r\n\r\n        const userInfoPass=editParam.userInfo;\r\n\r\n        const projectytpe = rsapi.post(\"aliquotplan/getProjectType\",{\"editAliquotplan\":ncontrolCode,userinfo: userInfoPass});\r\n        \r\n        const sampletypeList = rsapi.post(\"aliquotplan/getSampleType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfoPass});\r\n\r\n        const collectiontubeList = rsapi.post(\"aliquotplan/getCollectionTubeType\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfoPass});\r\n        \r\n        const getPatientCatgory = rsapi.post(\"aliquotplan/getPatientCatgory\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfoPass});\r\n        \r\n        const getVisitName = rsapi.post(\"aliquotplan/getVisitName\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfoPass});\r\n\r\n        const getUnitList = rsapi.post(\"aliquotplan/getUnit\",{\"sampletypevalue\":sampletypevalue,\"sampletypename\":sampletypename,userinfo: userInfoPass});\r\n\r\n        // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n        const getSampleDonarList= rsapi.post(\"aliquotplan/getSampleDonor\",{\"sampletypevalue\":sampletypevalue, userinfo: userInfoPass});\r\n        \r\n        const getActiveAliquotplanById = rsapi.post(\"aliquotplan/getActiveAliquotPlanById\",\r\n        {naliquotplancode:editParam.editRow.naliquotplancode,userinfo: userInfoPass});\r\n\r\n        let urlArray = [];\r\n        urlArray = [getActiveAliquotplanById,projectytpe, sampletypeList, collectiontubeList, getPatientCatgory,getVisitName,getUnitList,getSampleDonarList];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                const selectedRecord =response[0].data; \r\n\r\n                const projectytpeconstruct = constructOptionList(response[1].data || [], \"nprojectcode\",\r\n                \"sprojecttypename\", undefined, undefined, false);\r\n\r\n                const sampletypeListconstruct = constructOptionList(response[2].data || [], \"nproductsamplecode\",\r\n                \"sproductname\", undefined, undefined, false);\r\n\r\n                const collectiontubeListconstruct = constructOptionList(response[3].data || [], \"ncollectiontubecode\",\r\n                \"stubename\", undefined, undefined, false);\r\n\r\n                const patientcatgoryconstruct = constructOptionList(response[4].data || [], \"npatientcode\",\r\n                \"spatientcatname\", undefined, undefined, false);\r\n\r\n                const VisitNameconstruct = constructOptionList(response[5].data || [], \"nvisitcode\",\r\n                \"svisitnumber\", undefined, undefined, false);\r\n\r\n                const Unitconstruct = constructOptionList(response[6].data|| [], \"nunitbasiccode\",\r\n                \"sunitname\", undefined, undefined, false);\r\n\r\n                // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n                const SampleDonarconstruct = constructOptionList(response[7].data || [], \"nsampledonorcode\",\r\n                \"ssampledonor\", undefined, undefined, false);\r\n\r\n                selectedRecord[\"sprojecttypename\"] = getComboLabelValue(response[0].data,response[1].data, \r\n                \"nprojectcode\", \"sprojecttypename\");  \r\n                    \r\n                selectedRecord[\"sproductname\"] = getComboLabelValue(response[0].data,response[2].data, \r\n                \"nproductsamplecode\", \"sproductname\");\r\n\r\n                selectedRecord[\"stubename\"] = getComboLabelValue(response[0].data,response[3].data, \r\n                \"ncollectiontubecode\", \"stubename\");\r\n\r\n                selectedRecord[\"spatientcatname\"] = getComboLabelValue(response[0].data,response[4].data, \r\n                \"npatientcode\", \"spatientcatname\");\r\n\r\n                selectedRecord[\"svisitnumber\"] = getComboLabelValue(response[0].data,response[5].data, \r\n                \"nvisitcode\", \"svisitnumber\");\r\n\r\n                selectedRecord[\"sunitname\"] = getComboLabelValue(response[0].data,response[6].data, \r\n                \"nunitbasiccode\", \"sunitname\");\r\n\r\n                // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n                selectedRecord[\"ssampledonor\"] = getComboLabelValue(response[0].data,response[7].data, \r\n                \"nsampledonorcode\", \"ssampledonor\");\r\n         \r\n                selectedRecord[\"saliquotno\"]=response[0].data.saliquotno;\r\n\r\n                selectedRecord[\"squantity\"]=response[0].data.squantity;\r\n\r\n                selectedRecord[\"sdescription\"]=response[0].data.sdescription;\r\n\r\n                //selectedRecord[\"spatientcatname\"]=response[0].data.spatientcatname.label;\r\n\r\n                const projectytpeconstructList=projectytpeconstruct.get(\"OptionList\");\r\n                const sampletypeListconstructList=sampletypeListconstruct.get(\"OptionList\");\r\n                const collectiontubeListconstructList=collectiontubeListconstruct.get(\"OptionList\");\r\n                const patientcatgoryList = patientcatgoryconstruct.get(\"OptionList\");\r\n                const visitnameList=VisitNameconstruct.get(\"OptionList\");\r\n                const unitList=Unitconstruct.get(\"OptionList\");\r\n                // ALPD-5513 - added by Gowtham R on 10/3/25 - added sample donor field from sampledonor table\r\n                const SampleDonarList=SampleDonarconstruct.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true, \r\n                        projecttypeList:projectytpeconstructList,\r\n                        sampletypeList:sampletypeListconstructList,\r\n                        collectiontubeList:collectiontubeListconstructList,\r\n                        patientcatgoryList:patientcatgoryList,\r\n                        visitnameList:visitnameList,\r\n                        unitList:unitList,\r\n                        sampledonarList:SampleDonarList,\r\n                        selectedRecord:selectedRecord,\r\n                        selectedId:editParam.editRow.naliquotplancode,\r\n                        ncontrolCode: editParam.ncontrolCode,\r\n                        screenName:\"IDS_ALIQUOTPLAN\",\r\n                        operation:\"update\"\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}