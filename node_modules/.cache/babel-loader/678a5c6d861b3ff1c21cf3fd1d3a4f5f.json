{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{intl}from'../../components/App';import{convertDateTimetoString,convertDateTimetoStringDBFormat,formatInputDate,rearrangeDateFormat}from'../../components/CommonScript';import{transactionStatus}from'../../components/Enumeration';export function fnCheckBatchComponentMandatory(Components){// Components.map(component => {\nfor(var i=0;i<Components.length;i++){if(Components[i].smanuflotno.length<=0){// alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\nreturn intl.formatMessage({id:\"IDS_ENTERMANUFLOTNOFOR\"})+Components[i].scomponentname;}else if(Components[i].nnoofcontainer&&Components[i].nnoofcontainer.length<=0){// alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\nreturn intl.formatMessage({id:\"IDS_ENTERNOOFCONTFOR\"})+Components[i].scomponentname;// return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n}else if(Components[i].dreceiveddate===null){// alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\nreturn intl.formatMessage({id:\"IDS_ENTERMANUFLOTNOFOR\"})+Components[i].scomponentname;// return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n}}return true;}export function fnCheckBatchProtocolComponentMandatory(Components){//Components.map(component => {\nfor(var i=0;i<Components.length;i++){if(Components[i].smanuflotno.length<=0){// alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\n//return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\nreturn intl.formatMessage({id:\"IDS_ENTERMANUFLOTNOFOR\"})+Components[i].scomponentname;}else if(Components[i].dreceiveddate===null){// alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\nreturn intl.formatMessage({id:\"IDS_ENTERMANUFLOTNOFOR\"})+Components[i].scomponentname;}//return null;\n//});\n}return true;}export function checkDuplicateComponentandManufLot(Components){var copiedArrays=_toConsumableArray(Components);var DuplicateComponent=[];var bReturnFlag=true;Components.map(function(component){copiedArrays.forEach(function(componentArray){component.slno!==componentArray.slno&&component.smanuflotno===componentArray.smanuflotno&&component.scomponentname===componentArray.scomponentname&&DuplicateComponent.push(component);});return null;});if(DuplicateComponent.length>0){var smanuflotno=DuplicateComponent[0].smanuflotno;var scomponentname=DuplicateComponent[0].scomponentname;// Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\nbReturnFlag=intl.formatMessage({id:'IDS_DUPLICATEMANFNO'})+\" \"+smanuflotno+\" \"+intl.formatMessage({id:'IDS_FOR'})+\" \"+scomponentname;}return bReturnFlag;}export function TestListManipulation(Components,Test){var ArrayList=[];Components.map(function(component){return ArrayList=Test&&Test[component.slno]?[].concat(_toConsumableArray(ArrayList),_toConsumableArray(Test[component.slno])):ArrayList;});//    ArrayList.map(item=>{\n//        item['jsondata']={}\n//       // if(item==='nsectioncode'||item==='nmethodcode'){\n//         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\n//         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\n//         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\n//         item['jsondata']['ntestcode']=item['ntestcode']\n//         item['jsondata']['ncost']=item['ncost']\n//       // }\n//    })\nreturn ArrayList?ArrayList:[];}export function getRegistration(masterData,selectedRecord,selectedSpec,templateList,userInfo,defaulttimezone,operation){var sampleRegistration={};var dateList=[];sampleRegistration[\"nsampletypecode\"]=masterData.RealSampleTypeValue.nsampletypecode;sampleRegistration[\"nregtypecode\"]=masterData.RealRegTypeValue.nregtypecode;sampleRegistration[\"nregsubtypecode\"]=masterData.RealRegSubTypeValue.nregsubtypecode;sampleRegistration[\"nproductcatcode\"]=selectedRecord['Product Category']?selectedRecord['Product Category'].value:-1;sampleRegistration[\"nproductcode\"]=selectedRecord['Product']?selectedRecord['Product'].value:-1;sampleRegistration[\"ntemplatemanipulationcode\"]=selectedSpec.ntemplatemanipulationcode;sampleRegistration[\"nallottedspeccode\"]=selectedSpec.nallottedspeccode.value;sampleRegistration[\"jsondata\"]={};templateList&&templateList.map(function(row){row.children.map(function(column){column.children.map(function(component){if(component.hasOwnProperty(\"children\")){var componentrowlabel='';var componentrowvalue='';component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){sampleRegistration[\"jsondata\"][componentrow.label]=selectedRecord[componentrow.label]?{value:selectedRecord[componentrow.label].value,label:selectedRecord[componentrow.label].label}:-1;if(componentrow.mandatory||selectedRecord[componentrow.label]){componentrowlabel=componentrowlabel+'&'+componentrow.label;componentrowvalue=componentrowvalue+' '+selectedRecord[componentrow.label].label;}}else if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){sampleRegistration[\"jsondata\"][componentrow.label]=typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\";}else{sampleRegistration[\"jsondata\"][componentrow.label]=componentrow.loadcurrentdate?typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\":selectedRecord[componentrow.label]?typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\":\"\";}if(componentrow.timezone){sampleRegistration[\"jsondata\"][\"tz\".concat(componentrow.label)]=selectedRecord[\"tz\".concat(componentrow.label)]?{value:selectedRecord[\"tz\".concat(componentrow.label)].value,label:selectedRecord[\"tz\".concat(componentrow.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(componentrow.label);}else{sampleRegistration[\"jsondata\"][componentrow.label]=selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\";if(selectedRecord[componentrow.label]){componentrowlabel=componentrowlabel+'&'+componentrow.label;componentrowvalue=componentrowvalue+' '+selectedRecord[componentrow.label];}}});sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)]=componentrowvalue;}else{if(component.inputtype===\"combo\"){sampleRegistration[\"jsondata\"][component.label]=selectedRecord[component.label]?{value:selectedRecord[component.label].value,label:selectedRecord[component.label].label}:-1;}else if(component.inputtype===\"date\"){if(component.mandatory){sampleRegistration[\"jsondata\"][component.label]=typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\";}else{sampleRegistration[\"jsondata\"][component.label]=component.loadcurrentdate?typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\":selectedRecord[component.label]?typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\":\"\";}if(component.timezone){sampleRegistration[\"jsondata\"][\"tz\".concat(component.label)]=selectedRecord[\"tz\".concat(component.label)]?{value:selectedRecord[\"tz\".concat(component.label)].value,label:selectedRecord[\"tz\".concat(component.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(component.label);}else{sampleRegistration[\"jsondata\"][component.label]=selectedRecord[component.label]?selectedRecord[component.label]:\"\";}}});});});var param={sampleRegistration:sampleRegistration,dateList:dateList};return param;}// export function getComponentListfromUnwantedAttr(Components) {\n//     Components.map(component => {\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\n//         //     component.ncomponentcode = component.ncomponentcode.value;\n//         // }\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\n//         return component;\n//     });\n//     return Components;\n// }\nexport function getRegistrationSubSample(masterData,selectedRecord,selectedSpec,templateList,userInfo,defaulttimezone,operation){var sampleRegistration={};var dateList=[];// sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\n// sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\nsampleRegistration[\"jsondata\"]={};templateList&&templateList.map(function(row){row.children.map(function(column){column.children.map(function(component){if(component.hasOwnProperty(\"children\")){var componentrowlabel='';var componentrowvalue='';component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){sampleRegistration[\"jsondata\"][componentrow.label]=selectedRecord[componentrow.label]?{value:selectedRecord[componentrow.label].value,label:selectedRecord[componentrow.label].label}:-1;if(componentrow.mandatory||selectedRecord[componentrow.label]){componentrowlabel=componentrowlabel+'&'+componentrow.label;componentrowvalue=componentrowvalue+' '+selectedRecord[componentrow.label].label;}}else if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){sampleRegistration[\"jsondata\"][componentrow.label]=typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\";}else{sampleRegistration[\"jsondata\"][componentrow.label]=componentrow.loadcurrentdate?typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\":selectedRecord[componentrow.label]?typeof selectedRecord[componentrow.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:new Date(),userInfo):selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\":\"\";}if(componentrow.timezone){sampleRegistration[\"jsondata\"][\"tz\".concat(componentrow.label)]=selectedRecord[\"tz\".concat(componentrow.label)]?{value:selectedRecord[\"tz\".concat(componentrow.label)].value,label:selectedRecord[\"tz\".concat(componentrow.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(componentrow.label);}else{sampleRegistration[\"jsondata\"][componentrow.label]=selectedRecord[componentrow.label]?selectedRecord[componentrow.label]:\"\";if(selectedRecord[componentrow.label]){componentrowlabel=componentrowlabel+'&'+componentrow.label;componentrowvalue=componentrowvalue+' '+selectedRecord[componentrow.label];}}});sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)]=componentrowvalue;}else{if(component.inputtype===\"combo\"){sampleRegistration[\"jsondata\"][component.label]=selectedRecord[component.label]?{value:selectedRecord[component.label].value,label:selectedRecord[component.label].label}:-1;}else if(component.inputtype===\"date\"){if(component.mandatory){sampleRegistration[\"jsondata\"][component.label]=typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\";}else{sampleRegistration[\"jsondata\"][component.label]=component.loadcurrentdate?typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\":selectedRecord[component.label]?typeof selectedRecord[component.label]===\"object\"?convertDateTimetoStringDBFormat(selectedRecord[component.label]?selectedRecord[component.label]:new Date(),userInfo):selectedRecord[component.label]?selectedRecord[component.label]:\"\":\"\";}if(component.timezone){sampleRegistration[\"jsondata\"][\"tz\".concat(component.label)]=selectedRecord[\"tz\".concat(component.label)]?{value:selectedRecord[\"tz\".concat(component.label)].value,label:selectedRecord[\"tz\".concat(component.label)].label}:defaulttimezone?defaulttimezone:-1;}dateList.push(component.label);}else{sampleRegistration[\"jsondata\"][component.label]=selectedRecord[component.label]?selectedRecord[component.label]:\"\";}}});});});var param={sampleRegistration:sampleRegistration,dateList:dateList};return param;}export function checkTestPresent(Test,Samples){var filterArray=Samples.filter(function(x){return!Test.some(function(y){return x[\"npreregno\"]===y[\"npreregno\"]&&y[\"ntransactionstatus\"]!==transactionStatus.REJECT&&y[\"ntransactionstatus\"]!==transactionStatus.CANCELLED;});});return filterArray.length>0?false:true;}// //added by perumalraj on 23/12/2020\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n//     const filterArray = firstArray.filter(function (x) {\n//         return secondArray.some(function (y) {\n//             return x[PrimaryKey] === y[PrimaryKey]\n//         })\n//     });\n//     return filterArray;\n// }\nexport function getRegistrationRoutine(selectedRecord){var sampleRegistrationRoutine={};sampleRegistrationRoutine[\"nclientcode\"]=selectedRecord.nclientcode?selectedRecord.nclientcode.value:-1;sampleRegistrationRoutine[\"nmanufcode\"]=selectedRecord.nmanufcode?selectedRecord.nmanufcode.value:-1;sampleRegistrationRoutine[\"nsuppliercode\"]=selectedRecord.nsuppliercode?selectedRecord.nsuppliercode.value:-1;sampleRegistrationRoutine[\"ssamplecondition\"]=selectedRecord.ssamplecondition?selectedRecord.ssamplecondition:'';sampleRegistrationRoutine[\"nstorageconditioncode\"]=selectedRecord.nstorageconditioncode?selectedRecord.nstorageconditioncode.value:-1;sampleRegistrationRoutine[\"dreceiveddate\"]=selectedRecord[\"dreceiveddate\"]?formatInputDate(selectedRecord[\"dreceiveddate\"],false):'null';sampleRegistrationRoutine[\"sreceiveddate\"]=selectedRecord[\"dreceiveddate\"]?formatInputDate(selectedRecord[\"dreceiveddate\"],false):'null';sampleRegistrationRoutine[\"ntzdreceivedate\"]=selectedRecord.ntzdreceivedate?selectedRecord.ntzdreceivedate.value:-1;sampleRegistrationRoutine[\"stzdreceivedate\"]=selectedRecord.stzdreceivedate?selectedRecord.stzdreceivedate.label:-1;sampleRegistrationRoutine[\"ncontainertypecode\"]=selectedRecord.ncontainertypecode?selectedRecord.ncontainertypecode.value:-1;sampleRegistrationRoutine[\"sourfile\"]=selectedRecord.sourfile?selectedRecord.sourfile:'';sampleRegistrationRoutine[\"sbatchno\"]=selectedRecord.sbatchno?selectedRecord.sbatchno:'';sampleRegistrationRoutine[\"slotno\"]=selectedRecord.slotno?selectedRecord.slotno:'';sampleRegistrationRoutine[\"ndisposition\"]=selectedRecord.ndisposition?selectedRecord.ndisposition.value:-1;sampleRegistrationRoutine[\"stotalqty\"]=selectedRecord.stotalqty?selectedRecord.stotalqty:'0';sampleRegistrationRoutine[\"ntotalunitcode\"]=selectedRecord.ntotalunitcode?selectedRecord.ntotalunitcode.value:-1;sampleRegistrationRoutine[\"npriority\"]=selectedRecord.npriority?selectedRecord.npriority.value:-1;sampleRegistrationRoutine[\"sdeadline\"]=selectedRecord.sdeadline?selectedRecord.sdeadline:'0';sampleRegistrationRoutine[\"nperiodconfigcode\"]=selectedRecord.nperiodconfigcode?selectedRecord.nperiodconfigcode.value:-1;sampleRegistrationRoutine[\"sremarks\"]=selectedRecord.sremarks?selectedRecord.sremarks:null;sampleRegistrationRoutine[\"sreportremarks\"]=selectedRecord.sreportremarks?selectedRecord.sreportremarks:null;sampleRegistrationRoutine[\"sdeviationcomments\"]=selectedRecord.sdeviationcomments?selectedRecord.sdeviationcomments:null;return sampleRegistrationRoutine;}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/RegistrationValidation.jsx"],"names":["intl","convertDateTimetoString","convertDateTimetoStringDBFormat","formatInputDate","rearrangeDateFormat","transactionStatus","fnCheckBatchComponentMandatory","Components","i","length","smanuflotno","formatMessage","id","scomponentname","nnoofcontainer","dreceiveddate","fnCheckBatchProtocolComponentMandatory","checkDuplicateComponentandManufLot","copiedArrays","DuplicateComponent","bReturnFlag","map","component","forEach","componentArray","slno","push","TestListManipulation","Test","ArrayList","getRegistration","masterData","selectedRecord","selectedSpec","templateList","userInfo","defaulttimezone","operation","sampleRegistration","dateList","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","value","ntemplatemanipulationcode","nallottedspeccode","row","children","column","hasOwnProperty","componentrowlabel","componentrowvalue","componentrow","inputtype","label","mandatory","Date","loadcurrentdate","timezone","substring","param","getRegistrationSubSample","checkTestPresent","Samples","filterArray","filter","x","some","y","REJECT","CANCELLED","getRegistrationRoutine","sampleRegistrationRoutine","nclientcode","nmanufcode","nsuppliercode","ssamplecondition","nstorageconditioncode","ntzdreceivedate","stzdreceivedate","ncontainertypecode","sourfile","sbatchno","slotno","ndisposition","stotalqty","ntotalunitcode","npriority","sdeadline","nperiodconfigcode","sremarks","sreportremarks","sdeviationcomments"],"mappings":"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","sourcesContent":["\r\nimport { intl } from '../../components/App';\r\nimport { convertDateTimetoString, convertDateTimetoStringDBFormat, formatInputDate, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nexport function fnCheckBatchComponentMandatory(Components) {\r\n    // Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((\r\n            Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n\r\n        } else if (Components[i].nnoofcontainer && (Components[i].nnoofcontainer).length <= 0) {\r\n            // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERNOOFCONTFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\r\n    //Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\r\n            //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        }\r\n        //return null;\r\n        //});\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkDuplicateComponentandManufLot(Components) {\r\n    let copiedArrays = [...Components];\r\n    let DuplicateComponent = [];\r\n    let bReturnFlag = true;\r\n    Components.map(component => {\r\n        copiedArrays.forEach(componentArray => {\r\n            (component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno &&\r\n                component.scomponentname === componentArray.scomponentname) && DuplicateComponent.push(component);\r\n        })\r\n        return null;\r\n    });\r\n    if (DuplicateComponent.length > 0) {\r\n        let smanuflotno = DuplicateComponent[0].smanuflotno;\r\n        let scomponentname = DuplicateComponent[0].scomponentname;\r\n        // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\r\n        bReturnFlag = intl.formatMessage({ id: 'IDS_DUPLICATEMANFNO' }) + \" \" + smanuflotno + \" \" + intl.formatMessage({ id: 'IDS_FOR' }) + \" \" + scomponentname;\r\n    }\r\n    return bReturnFlag;\r\n}\r\nexport function TestListManipulation(Components, Test) {\r\n    let ArrayList = [];\r\n    Components.map(component => {\r\n        return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\r\n    });\r\n\r\n    //    ArrayList.map(item=>{\r\n    //        item['jsondata']={}\r\n    //       // if(item==='nsectioncode'||item==='nmethodcode'){\r\n    //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\r\n    //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\r\n    //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\r\n    //         item['jsondata']['ntestcode']=item['ntestcode']\r\n    //         item['jsondata']['ncost']=item['ncost']\r\n    //       // }\r\n    //    })\r\n    return ArrayList ? ArrayList : [];\r\n}\r\n\r\n\r\nexport function getRegistration(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\r\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord['Product Category'] ? selectedRecord['Product Category'].value : -1;\r\n    sampleRegistration[\"nproductcode\"] = selectedRecord['Product'] ? selectedRecord['Product'].value : -1;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    templateList && templateList.map(row => {\r\n        row.children.map(column => {\r\n            column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    let componentrowlabel = ''\r\n                    let componentrowvalue = ''\r\n                    component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n                            if (componentrow.mandatory || selectedRecord[componentrow.label]) {\r\n                                componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                                componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n                            if (selectedRecord[componentrow.label]) {\r\n                                componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                                componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n                    }\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n// export function getComponentListfromUnwantedAttr(Components) {\r\n//     Components.map(component => {\r\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\r\n//         //     component.ncomponentcode = component.ncomponentcode.value;\r\n//         // }\r\n\r\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\r\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\r\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\r\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\r\n\r\n\r\n//         return component;\r\n//     });\r\n//     return Components;\r\n// }\r\n\r\n\r\nexport function getRegistrationSubSample(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\r\n    // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    templateList && templateList.map(row => {\r\n        row.children.map(column => {\r\n            column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    let componentrowlabel = ''\r\n                    let componentrowvalue = ''\r\n                    component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n                            if (componentrow.mandatory || selectedRecord[componentrow.label]) {\r\n                                componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                                componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n                            if (selectedRecord[componentrow.label]) {\r\n                                componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                                componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n                    }\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\nexport function checkTestPresent(Test, Samples) {\r\n\r\n    const filterArray = Samples.filter(function (x) {\r\n        return !Test.some(function (y) {\r\n            return x[\"npreregno\"] === y[\"npreregno\"] && (y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED)\r\n        });\r\n    });\r\n    return filterArray.length > 0 ? false : true\r\n}\r\n\r\n// //added by perumalraj on 23/12/2020\r\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\r\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n\r\n//     const filterArray = firstArray.filter(function (x) {\r\n//         return secondArray.some(function (y) {\r\n//             return x[PrimaryKey] === y[PrimaryKey]\r\n//         })\r\n//     });\r\n//     return filterArray;\r\n// }\r\n\r\nexport function getRegistrationRoutine(selectedRecord) {\r\n\r\n    let sampleRegistrationRoutine = {};\r\n    sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\r\n    sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\r\n    sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\r\n    sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\r\n    sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\r\n    sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\r\n    sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\r\n    sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\r\n    sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\r\n    sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\r\n    sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\r\n    sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\r\n    sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\r\n    sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\r\n    sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\r\n    sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\r\n    sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\r\n    sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\r\n    sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\r\n    sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\r\n\r\n    return sampleRegistrationRoutine;\r\n}"]},"metadata":{},"sourceType":"module"}