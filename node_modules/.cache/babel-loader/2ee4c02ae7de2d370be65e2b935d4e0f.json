{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from\"../rsapi\";import{toast}from\"react-toastify\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{intl}from'../components/App';import{constructOptionList,sortData}from'../components/CommonScript';import{transactionStatus}from\"../components/Enumeration\";import{initRequest}from'./LoginAction';export function addModel(operation,ncontrolCode,lstcategory,selectedInput){return function(dispatch){if(lstcategory&&Object.keys(lstcategory).length>0){if(selectedInput===undefined){selectedInput={};}selectedInput[\"sversiondescription\"]=\"\";dispatch({type:DEFAULT_RETURN,payload:{openModal:true,templateTreeData:[{input:\"\"}],totalLevel:1,operation:operation,selectedRecord:{},selectedInput:selectedInput,id:0,ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_CONFIGCATEGROYFORSAMPLETYPE\"}));}};}//to get the edit record\nexport function fetchRecordByTemplateID(primaryKeyName,primaryKeyValue,operation,selectedRecord,selectedInput,userInfo,ncontrolCode){return function(dispatch){if(selectedRecord[\"ntransactionstatus\"]===transactionStatus.APPROVED||selectedRecord[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}else{var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"templatemaster/getTemplateMasterTree\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post)).then(function(response){selectedInput[\"sversiondescription\"]=response.data.lstTemplateMasterlevel[0][\"sversiondescription\"];response.data.lstTemplateMasterlevel.map(function(item,i){return selectedRecord[i]=item[\"slabelname\"].toString();});dispatch({type:DEFAULT_RETURN,payload:{templateTreeData:response.data.lstTemplateMasterlevel,openModal:true,operation:operation,selectedRecord:selectedRecord,selectedInput:selectedInput,totalLevel:response.data.lstTemplateMasterlevel.length,id:response.data.lstTemplateMasterlevel.length-1,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function getTemplateMasterTree(TMvalue,masterData,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"templatemaster/getTemplateMasterTree\",{ntreeversiontempcode:TMvalue.ntreeversiontempcode,userinfo:userInfo}).then(function(response){masterData[\"lstTemplateMasterlevel\"]=response.data[\"lstTemplateMasterlevel\"];//masterData[\"selected\"] = TMvalue;\nmasterData[\"SelectedTreeVersionTemplate\"]=TMvalue;var selectedRecord={};var dummyNumber=-12;selectedRecord[\"ntransactionstatus\"]=response.data[\"lstTemplateMasterlevel\"]?response.data[\"lstTemplateMasterlevel\"].length>0?response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"]:dummyNumber:dummyNumber;// selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\n//     response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] :\n//     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : []\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getSampleTypeProductCategory(filterSelectedRecord,inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.url,inputParam.inputData).then(function(response){var categoryValuemember;var categoryDisplaymemeber;var categroyLable=response.data.lstcategory?Object.keys(response.data.lstcategory)[0]:filterSelectedRecord.categroyLable;if(Object.keys(response.data.lstcategory).length>0){if(response.data.lstcategory[categroyLable].length>0){categoryValuemember=response.data.lstcategory?Object.keys(response.data.lstcategory[categroyLable][0])[0]:filterSelectedRecord.categoryValuemember;categoryDisplaymemeber=response.data.lstcategory?Object.keys(response.data.lstcategory[categroyLable][0])[1]:filterSelectedRecord.categoryDisplaymemeber;}}// const lstCategory = response.data.lstcategory ? constructOptionList(response.data.lstcategory[categroyLable] || [], \n//             categoryValuemember, categoryDisplaymemeber, categoryValuemember,\n//             \"ascending\", undefined).get(\"OptionList\") : [];\nvar Taglstcategory=[];if(response.data.lstcategory&&response.data.lstcategory[categroyLable]){var categoryTypeMap=constructOptionList(response.data.lstcategory[categroyLable]||[],categoryValuemember,categoryDisplaymemeber,categoryValuemember,\"ascending\",undefined);Taglstcategory=categoryTypeMap.get(\"OptionList\");}masterData=_objectSpread(_objectSpread({},masterData),response.data);filterSelectedRecord[\"sampletype\"]={label:response.data[\"SelectedSampleFilter\"].ssampletypename,value:response.data[\"SelectedSampleFilter\"].nsampletypecode,item:response.data[\"SelectedSampleFilter\"]};filterSelectedRecord[\"categorytype\"]=Taglstcategory.length>0?Taglstcategory[0]// {\"value\": Taglstcategory[0][categoryValuemember],\n//     \"label\": Taglstcategory[0][categoryDisplaymemeber],\n//     \"item\":Taglstcategory[0]} \n:undefined;filterSelectedRecord[\"categroyLable\"]=categroyLable;dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,filterSelectedRecord:filterSelectedRecord,Taglstcategory:Taglstcategory}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function getStudyTemplateByCategoryType(inputParam,masterData,filterSelectedRecord,isFilterSubmit){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.url,inputParam.inputData).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);if(masterData.lstTemplateMasterlevel){sortData(masterData.lstTemplateMasterlevel,\"ascending\",\"nlevelno\");}if(masterData.lstTreeversionTemplate){sortData(masterData.lstTreeversionTemplate);}if(isFilterSubmit){masterData[\"SelectedSample\"]=filterSelectedRecord[\"sampletype\"]?filterSelectedRecord[\"sampletype\"].item:undefined;masterData[\"SelectedCategory\"]=filterSelectedRecord[\"categorytype\"]?filterSelectedRecord[\"categorytype\"].item:undefined;}dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/TemplateMasterAction.js"],"names":["rsapi","toast","DEFAULT_RETURN","intl","constructOptionList","sortData","transactionStatus","initRequest","addModel","operation","ncontrolCode","lstcategory","selectedInput","dispatch","Object","keys","length","undefined","type","payload","openModal","templateTreeData","input","totalLevel","selectedRecord","id","warn","formatMessage","fetchRecordByTemplateID","primaryKeyName","primaryKeyValue","userInfo","APPROVED","RETIRED","post","then","response","data","lstTemplateMasterlevel","map","item","i","toString","loading","catch","error","status","message","getTemplateMasterTree","TMvalue","masterData","ntreeversiontempcode","userinfo","dummyNumber","getSampleTypeProductCategory","filterSelectedRecord","inputParam","url","inputData","categoryValuemember","categoryDisplaymemeber","categroyLable","Taglstcategory","categoryTypeMap","get","label","ssampletypename","value","nsampletypecode","info","getStudyTemplateByCategoryType","isFilterSubmit","lstTreeversionTemplate"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport {constructOptionList, sortData} from '../components/CommonScript';\r\nimport {\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\nexport function addModel(operation, ncontrolCode, lstcategory, selectedInput) {\r\n    return function (dispatch) {\r\n        if (lstcategory && Object.keys(lstcategory).length > 0) {\r\n            if (selectedInput === undefined){\r\n                selectedInput = {};\r\n            }\r\n            selectedInput[\"sversiondescription\"] = \"\";\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    openModal: true,\r\n                    templateTreeData: [{\r\n                        input: \"\"\r\n                    }],\r\n                    totalLevel: 1,\r\n                    operation: operation,\r\n                    selectedRecord: {},\r\n                    selectedInput,\r\n                    id: 0,\r\n                    ncontrolCode\r\n                }\r\n            });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_CONFIGCATEGROYFORSAMPLETYPE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//to get the edit record\r\nexport function fetchRecordByTemplateID(primaryKeyName, primaryKeyValue, operation, selectedRecord, selectedInput, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\r\n            }));\r\n        } else {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"templatemaster/getTemplateMasterTree\", {\r\n                    [primaryKeyName]: primaryKeyValue,\r\n                    \"userinfo\": userInfo\r\n                })\r\n                .then(response => {\r\n                    selectedInput[\"sversiondescription\"] = response.data.lstTemplateMasterlevel[0][\"sversiondescription\"];\r\n                    response.data.lstTemplateMasterlevel.map((item, i) =>\r\n                        selectedRecord[i] = (item[\"slabelname\"]).toString(),\r\n                    )\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            templateTreeData: response.data.lstTemplateMasterlevel,\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            selectedRecord: selectedRecord,\r\n                            selectedInput,\r\n                            totalLevel: response.data.lstTemplateMasterlevel.length,\r\n                            id: response.data.lstTemplateMasterlevel.length - 1,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getTemplateMasterTree(TMvalue, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"templatemaster/getTemplateMasterTree\", {\r\n                ntreeversiontempcode: TMvalue.ntreeversiontempcode,\r\n                userinfo: userInfo,\r\n            })\r\n            .then(response => {\r\n                masterData[\"lstTemplateMasterlevel\"] = response.data[\"lstTemplateMasterlevel\"];\r\n                //masterData[\"selected\"] = TMvalue;\r\n                masterData[\"SelectedTreeVersionTemplate\"] = TMvalue;\r\n                const selectedRecord = {};\r\n                const dummyNumber = -12;\r\n                selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\r\n                    response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] : dummyNumber : dummyNumber;\r\n                 \r\n\r\n                // selectedRecord[\"ntransactionstatus\"] = response.data[\"lstTemplateMasterlevel\"] ? response.data[\"lstTemplateMasterlevel\"].length > 0 ?\r\n                //     response.data[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] :\r\n                //     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : []\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: { loading: false,\r\n                        masterData,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSampleTypeProductCategory(filterSelectedRecord, inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.url, inputParam.inputData)\r\n        .then(response => {\r\n            let categoryValuemember;\r\n            let categoryDisplaymemeber ;\r\n            const categroyLable = response.data.lstcategory ? Object.keys(response.data.lstcategory)[0] : filterSelectedRecord.categroyLable;\r\n           if(Object.keys(response.data.lstcategory).length>0){\r\n            if(response.data.lstcategory[categroyLable].length>0){\r\n                 categoryValuemember = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[0] : filterSelectedRecord.categoryValuemember;\r\n             categoryDisplaymemeber = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[1] : filterSelectedRecord.categoryDisplaymemeber;\r\n            }\r\n        }\r\n    \r\n            // const lstCategory = response.data.lstcategory ? constructOptionList(response.data.lstcategory[categroyLable] || [], \r\n            //             categoryValuemember, categoryDisplaymemeber, categoryValuemember,\r\n            //             \"ascending\", undefined).get(\"OptionList\") : [];\r\n            let Taglstcategory = [];\r\n            if (response.data.lstcategory && response.data.lstcategory[categroyLable]) {\r\n                const categoryTypeMap = constructOptionList(response.data.lstcategory[categroyLable]\r\n                            || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined) ;\r\n                Taglstcategory = categoryTypeMap.get(\"OptionList\");\r\n            }\r\n                        \r\n            masterData = {...masterData, ...response.data,\r\n                        //SelectedSampleFilter:response.data[\"SelectedSampleFilter\"],\r\n                        //SelectedCategoryFilter:response.data[\"SelectedCategoryFilter\"],\r\n                        //lstcategory:lstCategory, \r\n                       // categroyLable, \r\n                       // categoryValuemember, categoryDisplaymemeber,\r\n                      //  defaultCategoryType:{},\r\n                        // defaultsampletype:{label:response.data[\"SelectedSampleFilter\"].ssampletypename, \r\n                        //                     value:response.data[\"SelectedSampleFilter\"].nsampletypecode,\r\n                        //                     item:response.data[\"SelectedSampleFilter\"]}\r\n\r\n                        // selectedValues :{\"ncategorycode\": lstCategory.length > 0 ?  \r\n                        //                                 lstCategory[0].item[categoryValuemember] : -2,                                            \r\n                        //                 \"nsampletypecode\": filterSelectedRecord[\"sampleType\"].value,\r\n                        //                 \"nformcode\" :lstCategory.length >0? response.data[\"nformcode\"]:-2}\r\n                    };\r\n\r\n            filterSelectedRecord[\"sampletype\"] = {label:response.data[\"SelectedSampleFilter\"].ssampletypename, \r\n                                                    value:response.data[\"SelectedSampleFilter\"].nsampletypecode,\r\n                                                    item:response.data[\"SelectedSampleFilter\"]}\r\n           \r\n            filterSelectedRecord[\"categorytype\"] =  Taglstcategory.length > 0 ?  Taglstcategory[0] \r\n                                            // {\"value\": Taglstcategory[0][categoryValuemember],\r\n                                            //     \"label\": Taglstcategory[0][categoryDisplaymemeber],\r\n                                            //     \"item\":Taglstcategory[0]} \r\n                                                : undefined ;\r\n            filterSelectedRecord[\"categroyLable\"]= categroyLable;                                                  \r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false, masterData, filterSelectedRecord, Taglstcategory}});             \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.info(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function getStudyTemplateByCategoryType(inputParam, masterData, filterSelectedRecord, isFilterSubmit) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.url, inputParam.inputData)\r\n        .then(response => {\r\n            masterData = {...masterData, ...response.data};\r\n            if (masterData.lstTemplateMasterlevel) {\r\n                sortData(masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\r\n            }\r\n            if (masterData.lstTreeversionTemplate) {\r\n                sortData(masterData.lstTreeversionTemplate)\r\n            }\r\n            if (isFilterSubmit){\r\n                masterData[\"SelectedSample\"] = filterSelectedRecord[\"sampletype\"] ? filterSelectedRecord[\"sampletype\"].item :undefined;\r\n                masterData[\"SelectedCategory\"] = filterSelectedRecord[\"categorytype\"] ? filterSelectedRecord[\"categorytype\"].item :undefined;\r\n            }\r\n\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false,masterData}});             \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}});        \r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.info(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}