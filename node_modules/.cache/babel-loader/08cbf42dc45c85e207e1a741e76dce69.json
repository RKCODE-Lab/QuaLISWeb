{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Button,Nav,Image}from'react-bootstrap';import{Grid,GridColumn as Column,GridToolbar,GridColumnMenuFilter,GridNoRecords,getSelectedState}from'@progress/kendo-react-grid';import{GridPDFExport}from'@progress/kendo-react-pdf';import{ExcelExport}from'@progress/kendo-react-excel-export';import ConfirmDialog from'../confirm-alert/confirm-alert.component';import SimpleGrid from'./SimpleGrid';import{Row,Col,Card,FormGroup,FormLabel}from'react-bootstrap';import{AtTableWrap,FormControlStatic,FontIconWrap}from'../data-grid/data-grid.styles';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheck,faTrashAlt,faPencilAlt,faThumbsUp,faCopy,faPlus,faSync,faFileExcel,faFilePdf,faCloudDownloadAlt,faRedo,faEye,faRocket}from'@fortawesome/free-solid-svg-icons';import ColumnMenu from'./ColumnMenu';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport reject from\"../../assets/image/reject.svg\";import CustomSwitch from'../custom-switch/custom-switch.component';// import '../../assets/styles/unicode-font.css';\nimport parse from'html-react-parser';import{toast}from'react-toastify';import FormCheckbox from'../form-checkbox/form-checkbox.component';import messages_en from'../../assets/translations/en.json';import messages_de from'../../assets/translations/de.json';import{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import{connect}from'react-redux';import{process}from'@progress/kendo-data-query';import ReactTooltip from'react-tooltip';import{getActionIcon}from'../HoverIcons';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import messages_ru from'../../assets/translations/ru.json';import messages_tg from'../../assets/translations/tg.json';import SimpleGridWithSelection from'./SimpleGridWithSelection';var messages={'en-US':messages_en,'ko-KR':messages_de,'ru-RU':messages_ru,'tg-TG':messages_tg};var DataGridWithMultipleGrid=/*#__PURE__*/function(_React$Component){_inherits(DataGridWithMultipleGrid,_React$Component);var _super=_createSuper(DataGridWithMultipleGrid);function DataGridWithMultipleGrid(_props){var _this;_classCallCheck(this,DataGridWithMultipleGrid);_this=_super.call(this,_props);_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasChild?/*#__PURE__*/React.createElement(SimpleGridWithSelection,{extractedColumnList:_this.props.childColumnList,dataState:_this.props.dataState,childList:_this.props.childList[props.dataItem[_this.props.childMappingField]]||[],childDataResult:_this.props.childDataResult,childSelectionChange:_this.props.childSelectionChange,headerSelectionChange:_this.props.childHeaderSelectionChange,selectAll:_this.props.childSelectAll,hasSubChild:_this.props.hasSubChild,subChildDataResult:_this.props.subChildDataResult&&_this.props.subChildDataResult||[],subChildColumnList:_this.props.subChildColumnList//    expandField=\"expanded\"\n,childHandleExpandChange:_this.props.childHandleExpandChange,subChildSelectionChange:_this.props.subChildSelectionChange,subChildList:_this.props.subChildList||[],subChildMappingField:_this.props.subChildMappingField,subChildHeaderSelectionChange:_this.props.subChildHeaderSelectionChange,subChildSelectAll:_this.props.subChildSelectAll,selectedsubcild:_this.props.selectedsubcild}):\"\"),\" \");};_this.expandChange=function(event){var isExpanded=true;//     event.dataItem.expanded === undefined ?\n//         event.dataItem.aggregates : event.dataItem.expanded;\n// if (this.props.hasChild && event.value === true) {\nevent.dataItem.expanded=true;_this.props.handleExpandChange(event,_this.props.dataState);// }\n// else {\n//     event.dataItem.expanded = !isExpanded;\n_this.setState({isExpanded:isExpanded});// }\n};_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(DataGridWithMultipleGrid,[{key:\"columnProps\",value:function columnProps(field){if(!this.props.hideColumnFilter){return{field:field,columnMenu:ColumnMenu,headerClassName:this.isColumnActive(field,this.props.dataState)?'active':''};}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}},{key:\"render\",value:function render(){var _this2=this;var methodUrl=this.props.methodUrl?this.props.methodUrl:this.props.inputParam&&this.props.inputParam.methodUrl;var releaseId=this.props.controlMap&&this.props.controlMap.has(\"COA\".concat(methodUrl))&&this.props.controlMap.get(\"COA\".concat(methodUrl)).ncontrolcode;var pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",id:\"tooltip-grid-wrap\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(Grid,Object.assign({className:this.props.dataResult&&this.props.dataResult.length>0||this.props.extractedColumnList&&this.props.extractedColumnList.length>0?\"active-paging\":\"no-paging\",style:{height:this.props.gridHeight,width:this.props.gridWidth},sortable:true,resizable:true,reorderable:false,scrollable:this.props.scrollable,pageable:this.props.pageable?{buttonCount:5,pageSizes:pageSizes,previousNext:false}:\"\",groupable:this.props.groupable?true:false,detail:this.props.hideDetailBand?false:this.detailBand//    expandField=\"expanded\"\n//     onExpandChange={this.expandChange}\n,data:this.props.dataResult,total:this.props.total},this.props.dataState,{selectedField:\"selected\",onRowClick:this.props.handleRowClick,onSelectionChange:this.props.selectionChange,onHeaderSelectionChange:this.props.headerSelectionChange,onDataStateChange:this.props.dataStateChange,selectable:{enabled:true,drag:false,cell:false,mode:'multiple'}}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),this.props.isToolBarRequired?/*#__PURE__*/React.createElement(GridToolbar,null,this.props.isReleaseRequired===false?\"\":/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_RELEASE\"}),\"data-for\":\"tooltip-grid-wrap\",hidden:this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(releaseId)===-1,onClick:function onClick(){return _this2.props.releaseRecord(releaseId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faRocket})),this.props.isRefreshRequired===false?\"\":/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-grid-wrap\",onClick:function onClick(){return _this2.props.reloadData();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync}))):\"\",/*#__PURE__*/React.createElement(Column,{field:\"selected\",width:\"50px\",title:this.props.title// headerSelectionValue={this.props.selectAll}\n,headerSelectionValue:this.props.dataResult&&this.props.dataResult.every(function(dd){return dd.selected===true;})?true:false}),this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(Column,Object.assign({key:index,title:_this2.props.intl.formatMessage({id:item.idsName})},_this2.columnProps(item.dataField),{width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}}));})))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){ReactTooltip.rebuild();}}]);return DataGridWithMultipleGrid;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,undefined)(injectIntl(DataGridWithMultipleGrid));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/DataGridWithMultipleGrid.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Nav","Image","Grid","GridColumn","Column","GridToolbar","GridColumnMenuFilter","GridNoRecords","getSelectedState","GridPDFExport","ExcelExport","ConfirmDialog","SimpleGrid","Row","Col","Card","FormGroup","FormLabel","AtTableWrap","FormControlStatic","FontIconWrap","FontAwesomeIcon","faCheck","faTrashAlt","faPencilAlt","faThumbsUp","faCopy","faPlus","faSync","faFileExcel","faFilePdf","faCloudDownloadAlt","faRedo","faEye","faRocket","ColumnMenu","CustomSwitch","parse","toast","FormCheckbox","messages_en","messages_de","loadMessages","LocalizationProvider","connect","process","ReactTooltip","getActionIcon","ConfirmMessage","messages_ru","messages_tg","SimpleGridWithSelection","messages","DataGridWithMultipleGrid","props","detailBand","hasChild","childColumnList","dataState","childList","dataItem","childMappingField","childDataResult","childSelectionChange","childHeaderSelectionChange","childSelectAll","hasSubChild","subChildDataResult","subChildColumnList","childHandleExpandChange","subChildSelectionChange","subChildList","subChildMappingField","subChildHeaderSelectionChange","subChildSelectAll","selectedsubcild","expandChange","event","isExpanded","expanded","handleExpandChange","setState","confirmMessage","field","hideColumnFilter","columnMenu","headerClassName","isColumnActive","active","filter","methodUrl","inputParam","releaseId","controlMap","has","concat","get","ncontrolcode","pageSizes","Login","settings","split","map","setting","parseInt","actionColWidth","dataResult","length","extractedColumnList","height","gridHeight","width","gridWidth","scrollable","pageable","buttonCount","previousNext","groupable","hideDetailBand","total","handleRowClick","selectionChange","headerSelectionChange","dataStateChange","enabled","drag","cell","mode","intl","formatMessage","id","isToolBarRequired","isReleaseRequired","userRoleControlRights","indexOf","releaseRecord","isRefreshRequired","reloadData","title","every","dd","selected","item","index","idsName","columnProps","dataField","row","isIdsField","rebuild","Component","mapStateToProps","state","undefined"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,KAAtB,KAAmC,iBAAnC,CACA,OAASC,IAAT,CAAeC,UAAU,GAAIC,CAAAA,MAA7B,CAAqCC,WAArC,CAAkDC,oBAAlD,CAAwEC,aAAxE,CAAuFC,gBAAvF,KAA8G,4BAA9G,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,WAAT,KAA4B,oCAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,SAAzB,CAAoCC,SAApC,KAAqD,iBAArD,CACA,OAASC,WAAT,CAAsBC,iBAAtB,CAAyCC,YAAzC,KAA6D,+BAA7D,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACIC,OADJ,CACaC,UADb,CACyBC,WADzB,CACsCC,UADtC,CAEIC,MAFJ,CAEYC,MAFZ,CAEoBC,MAFpB,CAE4BC,WAF5B,CAEyCC,SAFzC,CAEoDC,kBAFpD,CAEwEC,MAFxE,CAEgFC,KAFhF,CAEuFC,QAFvF,KAGO,mCAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA;kDAEA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAAoE;AACpE,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,4BAAnD,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACb,QAASZ,WADI,CAEb,QAASC,WAFI,CAGb,QAASQ,WAHI,CAIb,QAASC,WAJI,CAAjB,C,GAOMG,CAAAA,wB,gJAIF,kCAAYC,MAAZ,CAAkB,0DACd,uBAAMA,MAAN,EADc,MAMlBC,UANkB,CAML,SAACD,KAAD,CAAW,CACpB,mBACI,oBAAC,GAAD,EAAK,QAAQ,CAAC,cAAd,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACC,MAAKA,KAAL,CAAWE,QAAX,cACO,oBAAC,uBAAD,EACI,mBAAmB,CAAE,MAAKF,KAAL,CAAWG,eADpC,CAEI,SAAS,CAAE,MAAKH,KAAL,CAAWI,SAF1B,CAGI,SAAS,CAAE,MAAKJ,KAAL,CAAWK,SAAX,CAAsBL,KAAK,CAACM,QAAN,CAAe,MAAKN,KAAL,CAAWO,iBAA1B,CAAtB,GAAwE,EAHvF,CAII,eAAe,CAAE,MAAKP,KAAL,CAAWQ,eAJhC,CAKI,oBAAoB,CAAE,MAAKR,KAAL,CAAWS,oBALrC,CAMI,qBAAqB,CAAE,MAAKT,KAAL,CAAWU,0BANtC,CAOI,SAAS,CAAE,MAAKV,KAAL,CAAWW,cAP1B,CAQI,WAAW,CAAE,MAAKX,KAAL,CAAWY,WAR5B,CASI,kBAAkB,CAAE,MAAKZ,KAAL,CAAWa,kBAAX,EAAiC,MAAKb,KAAL,CAAWa,kBAA5C,EAAkE,EAT1F,CAUI,kBAAkB,CAAE,MAAKb,KAAL,CAAWc,kBACnC;AAXA,CAYI,uBAAuB,CAAE,MAAKd,KAAL,CAAWe,uBAZxC,CAaI,uBAAuB,CAAE,MAAKf,KAAL,CAAWgB,uBAbxC,CAcI,YAAY,CAAE,MAAKhB,KAAL,CAAWiB,YAAX,EAA2B,EAd7C,CAeI,oBAAoB,CAAE,MAAKjB,KAAL,CAAWkB,oBAfrC,CAgBI,6BAA6B,CAAE,MAAKlB,KAAL,CAAWmB,6BAhB9C,CAiBI,iBAAiB,CAAE,MAAKnB,KAAL,CAAWoB,iBAjBlC,CAkBI,eAAe,CAAE,MAAKpB,KAAL,CAAWqB,eAlBhC,EADP,CAsBW,EAvBZ,CADJ,KADJ,CA4BH,CAnCiB,OAuClBC,YAvCkB,CAuCH,SAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,UAAU,CAAE,IAAlB,CACD;AACA;AAEA;AACID,KAAK,CAACjB,QAAN,CAAemB,QAAf,CAA0B,IAA1B,CACA,MAAKzB,KAAL,CAAW0B,kBAAX,CAA8BH,KAA9B,CAAqC,MAAKvB,KAAL,CAAWI,SAAhD,EACJ;AACA;AACA;AACK,MAAKuB,QAAL,CAAc,CAAEH,UAAU,CAAVA,UAAF,CAAd,EACL;AACH,CApDiB,CAEd,MAAKI,cAAL,CAAsB,GAAIlC,CAAAA,cAAJ,EAAtB,CAFc,aAGjB,C,gEAmDD,qBAAYmC,KAAZ,CAAmB,CACf,GAAI,CAAC,KAAK7B,KAAL,CAAW8B,gBAAhB,CAAkC,CAC9B,MAAO,CACHD,KAAK,CAAEA,KADJ,CAEHE,UAAU,CAAElD,UAFT,CAGHmD,eAAe,CAAE,KAAKC,cAAL,CAAoBJ,KAApB,CAA2B,KAAK7B,KAAL,CAAWI,SAAtC,EAAmD,QAAnD,CAA8D,EAH5E,CAAP,CAKH,CACJ,C,8BAED,wBAAeyB,KAAf,CAAsBzB,SAAtB,CAAiC,CAC7B,MAAOpD,CAAAA,oBAAoB,CAACkF,MAArB,CAA4BL,KAA5B,CAAmCzB,SAAS,CAAC+B,MAA7C,CAAP,CACH,C,sBAGD,iBAAS,iBACL,GAAMC,CAAAA,SAAS,CAAG,KAAKpC,KAAL,CAAWoC,SAAX,CAAuB,KAAKpC,KAAL,CAAWoC,SAAlC,CAA+C,KAAKpC,KAAL,CAAWqC,UAAX,EAAyB,KAAKrC,KAAL,CAAWqC,UAAX,CAAsBD,SAAhH,CAEA,GAAME,CAAAA,SAAS,CAAG,KAAKtC,KAAL,CAAWuC,UAAX,EAAyB,KAAKvC,KAAL,CAAWuC,UAAX,CAAsBC,GAAtB,CAA0B,MAAMC,MAAN,CAAaL,SAAb,CAA1B,CAAzB,EACf,KAAKpC,KAAL,CAAWuC,UAAX,CAAsBG,GAAtB,CAA0B,MAAMD,MAAN,CAAaL,SAAb,CAA1B,EAAmDO,YADtD,CAEA,GAAMC,CAAAA,SAAS,CAAG,KAAK5C,KAAL,CAAW4C,SAAX,CAAuB,KAAK5C,KAAL,CAAW4C,SAAlC,CAA8C,KAAK5C,KAAL,CAAW6C,KAAX,CAAiBC,QAAjB,EAA6B,KAAK9C,KAAL,CAAW6C,KAAX,CAAiBC,QAAjB,CAA0B,EAA1B,EAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,GAAzC,CAA6C,SAAAC,OAAO,QAAIC,CAAAA,QAAQ,CAACD,OAAD,CAAZ,EAApD,CAA7F,CACA,mBACI,qDACI,oBAAC,YAAD,EAAc,KAAK,CAAC,QAApB,CAA6B,EAAE,CAAC,mBAAhC,CAAoD,cAAc,CAAC,OAAnE,EADJ,cAEI,oBAAC,WAAD,EAAa,SAAS,CAAC,eAAvB,CAAuC,cAAc,CAAE,KAAKjD,KAAL,CAAWmD,cAAX,CAA4B,KAAKnD,KAAL,CAAWmD,cAAvC,CAAwD,OAA/G,eACI,oBAAC,oBAAD,EAAsB,QAAQ,CAAC,MAA/B,eAEQ,oBAAC,IAAD,gBACI,SAAS,CAAI,KAAKnD,KAAL,CAAWoD,UAAX,EAAyB,KAAKpD,KAAL,CAAWoD,UAAX,CAAsBC,MAAtB,CAA+B,CAAzD,EAAgE,KAAKrD,KAAL,CAAWsD,mBAAX,EAAkC,KAAKtD,KAAL,CAAWsD,mBAAX,CAA+BD,MAA/B,CAAwC,CAA3I,CAAiJ,eAAjJ,CAAmK,WADlL,CAEI,KAAK,CAAE,CAAEE,MAAM,CAAE,KAAKvD,KAAL,CAAWwD,UAArB,CAAiCC,KAAK,CAAE,KAAKzD,KAAL,CAAW0D,SAAnD,CAFX,CAGI,QAAQ,KAHZ,CAII,SAAS,KAJb,CAKI,WAAW,CAAE,KALjB,CAMI,UAAU,CAAE,KAAK1D,KAAL,CAAW2D,UAN3B,CAOI,QAAQ,CAAE,KAAK3D,KAAL,CAAW4D,QAAX,CAAsB,CAAEC,WAAW,CAAE,CAAf,CAAkBjB,SAAS,CAAEA,SAA7B,CAAwCkB,YAAY,CAAE,KAAtD,CAAtB,CAAsF,EAPpG,CAQI,SAAS,CAAE,KAAK9D,KAAL,CAAW+D,SAAX,CAAuB,IAAvB,CAA8B,KAR7C,CASI,MAAM,CAAE,KAAK/D,KAAL,CAAWgE,cAAX,CAA4B,KAA5B,CAAoC,KAAK/D,UACrD;AACD;AAXC,CAYI,IAAI,CAAE,KAAKD,KAAL,CAAWoD,UAZrB,CAaI,KAAK,CAAE,KAAKpD,KAAL,CAAWiE,KAbtB,EAcQ,KAAKjE,KAAL,CAAWI,SAdnB,EAeI,aAAa,CAAC,UAflB,CAgBI,UAAU,CAAE,KAAKJ,KAAL,CAAWkE,cAhB3B,CAiBI,iBAAiB,CAAE,KAAKlE,KAAL,CAAWmE,eAjBlC,CAkBI,uBAAuB,CAAE,KAAKnE,KAAL,CAAWoE,qBAlBxC,CAmBA,iBAAiB,CAAE,KAAKpE,KAAL,CAAWqE,eAnB9B,CAoBA,UAAU,CAAE,CACRC,OAAO,CAAE,IADD,CAERC,IAAI,CAAE,KAFE,CAGRC,IAAI,CAAE,KAHE,CAIRC,IAAI,CAAE,UAJE,CApBZ,gBA2BI,oBAAC,aAAD,MACC,KAAKzE,KAAL,CAAW0E,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,wBAAN,CAA9B,CADD,CA3BJ,CA8BC,KAAK5E,KAAL,CAAW6E,iBAAX,cACD,oBAAC,WAAD,MAEa,KAAK7E,KAAL,CAAW8E,iBAAX,GAAiC,KAAjC,CAAyC,EAAzC,cACG,oBAAC,MAAD,EAAQ,SAAS,CAAC,4CAAlB,CAA+D,OAAO,CAAC,MAAvE,CACI,WAAU,KAAK9E,KAAL,CAAW0E,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,aAAN,CAA9B,CADd,CAEI,WAAS,mBAFb,CAGI,MAAM,CAAE,KAAK5E,KAAL,CAAW+E,qBAAX,EAAoC,KAAK/E,KAAL,CAAW+E,qBAAX,CAAiCC,OAAjC,CAAyC1C,SAAzC,IAAwD,CAAC,CAHzG,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACtC,KAAL,CAAWiF,aAAX,CAAyB3C,SAAzB,CAAN,EAJb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAE1D,QAAvB,EALJ,CAHhB,CAWa,KAAKoB,KAAL,CAAWkF,iBAAX,GAAiC,KAAjC,CAAyC,EAAzC,cACG,oBAAC,MAAD,EAAQ,SAAS,CAAC,6BAAlB,CAAgD,OAAO,CAAC,MAAxD,CACI,WAAU,KAAKlF,KAAL,CAAW0E,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,aAAN,CAA9B,CADd,CAEI,WAAS,mBAFb,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC5E,KAAL,CAAWmF,UAAX,EAAN,EAHb,eAII,oBAAC,eAAD,EAAiB,IAAI,CAAE7G,MAAvB,EAJJ,CAZhB,CADC,CAqBC,EAnDF,cAqDI,oBAAC,MAAD,EACJ,KAAK,CAAC,UADF,CAEJ,KAAK,CAAC,MAFF,CAGJ,KAAK,CAAE,KAAK0B,KAAL,CAAWoF,KACpB;AAJM,CAKN,oBAAoB,CAAE,KAAKpF,KAAL,CAAWoD,UAAX,EAAuB,KAAKpD,KAAL,CAAWoD,UAAX,CAAsBiC,KAAtB,CAA4B,SAACC,EAAD,CAAQ,CAC/E,MAAOA,CAAAA,EAAE,CAACC,QAAH,GAAgB,IAAvB,CACH,CAF8C,CAAvB,CAEnB,IAFmB,CAEZ,KAPJ,EArDJ,CAiEK,KAAKvF,KAAL,CAAWsD,mBAAX,CAA+BN,GAA/B,CAAmC,SAACwC,IAAD,CAAOC,KAAP,qBAChC,oBAAC,MAAD,gBAAQ,GAAG,CAAEA,KAAb,CACA,KAAK,CAAE,MAAI,CAACzF,KAAL,CAAW0E,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEY,IAAI,CAACE,OAAX,CAA9B,CADP,EAEI,MAAI,CAACC,WAAL,CAAiBH,IAAI,CAACI,SAAtB,CAFJ,EAGJ,KAAK,CAAEJ,IAAI,CAAC/B,KAHR,CAIJ,IAAI,CAAE,cAACoC,GAAD,qBACF,0BAAI,WAAUA,GAAG,CAAC,UAAD,CAAH,CAAgBL,IAAI,CAACI,SAArB,CAAd,EACKJ,IAAI,CAACM,UAAL,cACG,oBAAC,gBAAD,EAAkB,EAAE,CAAED,GAAG,CAAC,UAAD,CAAH,CAAgBL,IAAI,CAACI,SAArB,CAAtB,CAAuD,cAAc,CAAEC,GAAG,CAAC,UAAD,CAAH,CAAgBL,IAAI,CAACI,SAArB,CAAvE,EADH,CAEKC,GAAG,CAAC,UAAD,CAAH,CAAgBL,IAAI,CAACI,SAArB,CAHV,CADE,EAJF,GADgC,EAAnC,CAjEL,CAFR,CADJ,CAFJ,CADJ,CA4FH,C,kCAED,6BAAqB,CACjBpG,YAAY,CAACuG,OAAb,GACH,C,sCA/KkCzJ,KAAK,CAAC0J,S,EAiL7C,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAErD,KAAK,CAAEqD,KAAK,CAACrD,KAAf,CAAR,CACH,CAFD,CAMA,cAAevD,CAAAA,OAAO,CAAC2G,eAAD,CAAkBE,SAAlB,CAAP,CAAoC3J,UAAU,CAACuD,wBAAD,CAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Nav, Image } from 'react-bootstrap';\r\nimport { Grid, GridColumn as Column, GridToolbar, GridColumnMenuFilter, GridNoRecords ,getSelectedState} from '@progress/kendo-react-grid';\r\nimport { GridPDFExport } from '@progress/kendo-react-pdf';\r\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\r\nimport ConfirmDialog from '../confirm-alert/confirm-alert.component';\r\nimport SimpleGrid from './SimpleGrid';\r\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../data-grid/data-grid.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faCheck, faTrashAlt, faPencilAlt, faThumbsUp,\r\n    faCopy, faPlus, faSync, faFileExcel, faFilePdf, faCloudDownloadAlt, faRedo, faEye, faRocket\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport ColumnMenu from './ColumnMenu';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';// import '../../assets/styles/unicode-font.css';\r\nimport parse from 'html-react-parser';\r\nimport { toast } from 'react-toastify';\r\nimport FormCheckbox from '../form-checkbox/form-checkbox.component';\r\nimport messages_en from '../../assets/translations/en.json';\r\nimport messages_de from '../../assets/translations/de.json';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { getActionIcon } from '../HoverIcons';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport messages_ru from '../../assets/translations/ru.json';\r\nimport messages_tg from '../../assets/translations/tg.json';\r\nimport SimpleGridWithSelection from './SimpleGridWithSelection';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg\r\n}\r\n\r\nclass DataGridWithMultipleGrid extends React.Component {\r\n\r\n    _pdfExport;\r\n    _excelExport;\r\n    constructor(props){\r\n        super(props);\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n\r\n    detailBand = (props) => {\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                {this.props.hasChild ?\r\n                        <SimpleGridWithSelection\r\n                            extractedColumnList={this.props.childColumnList}\r\n                            dataState={this.props.dataState}\r\n                            childList={this.props.childList[(props.dataItem[this.props.childMappingField])] || []}\r\n                            childDataResult={this.props.childDataResult}\r\n                            childSelectionChange={this.props.childSelectionChange}\r\n                            headerSelectionChange={this.props.childHeaderSelectionChange}\r\n                            selectAll={this.props.childSelectAll}\r\n                            hasSubChild={this.props.hasSubChild}\r\n                            subChildDataResult={this.props.subChildDataResult && this.props.subChildDataResult || []}\r\n                            subChildColumnList={this.props.subChildColumnList}\r\n                        //    expandField=\"expanded\"\r\n                            childHandleExpandChange={this.props.childHandleExpandChange}\r\n                            subChildSelectionChange={this.props.subChildSelectionChange}\r\n                            subChildList={this.props.subChildList || []}\r\n                            subChildMappingField={this.props.subChildMappingField}\r\n                            subChildHeaderSelectionChange={this.props.subChildHeaderSelectionChange}\r\n                            subChildSelectAll={this.props.subChildSelectAll}\r\n                            selectedsubcild={this.props.selectedsubcild}\r\n                             />\r\n                            :\r\n                            \"\"}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    expandChange = (event) => {\r\n         const isExpanded =true\r\n        //     event.dataItem.expanded === undefined ?\r\n        //         event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        // if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = true;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        // }\r\n        // else {\r\n        //     event.dataItem.expanded = !isExpanded;\r\n             this.setState({ isExpanded });\r\n        // }\r\n    }\r\n\r\n    columnProps(field) {\r\n        if (!this.props.hideColumnFilter) {\r\n            return {\r\n                field: field,\r\n                columnMenu: ColumnMenu,\r\n                headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n            };\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n\r\n    render() {\r\n        const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\r\n\r\n        const releaseId = this.props.controlMap && this.props.controlMap.has(\"COA\".concat(methodUrl))\r\n        && this.props.controlMap.get(\"COA\".concat(methodUrl)).ncontrolcode;\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <>\r\n                <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' />\r\n                <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                    <LocalizationProvider language=\"lang\">\r\n\r\n                            <Grid\r\n                                className={((this.props.dataResult && this.props.dataResult.length > 0) || (this.props.extractedColumnList && this.props.extractedColumnList.length > 0)) ? \"active-paging\" : \"no-paging\"}\r\n                                style={{ height: this.props.gridHeight, width: this.props.gridWidth }}\r\n                                sortable\r\n                                resizable\r\n                                reorderable={false}\r\n                                scrollable={this.props.scrollable}\r\n                                pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\r\n                                groupable={this.props.groupable ? true : false}\r\n                                detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                            //    expandField=\"expanded\"\r\n                           //     onExpandChange={this.expandChange}\r\n                                data={this.props.dataResult}\r\n                                total={this.props.total}\r\n                                {...this.props.dataState}\r\n                                selectedField=\"selected\"\r\n                                onRowClick={this.props.handleRowClick}\r\n                                onSelectionChange={this.props.selectionChange}\r\n                                onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                            onDataStateChange={this.props.dataStateChange}\r\n                            selectable={{\r\n                                enabled: true,\r\n                                drag: false,\r\n                                cell: false,\r\n                                mode: 'multiple'\r\n                              }} \r\n                        >\r\n                                <GridNoRecords>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                            </GridNoRecords>\r\n                            {this.props.isToolBarRequired ?\r\n                            <GridToolbar>\r\n\r\n                                        {this.props.isReleaseRequired === false ? \"\" :\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                                data-for=\"tooltip-grid-wrap\"\r\n                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(releaseId) === -1}\r\n                                                onClick={() => this.props.releaseRecord(releaseId)}>\r\n                                                <FontAwesomeIcon icon={faRocket} />\r\n                                            </Button>\r\n                                        }\r\n                                        {this.props.isRefreshRequired === false ? \"\" :\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.props.reloadData()}>\r\n                                                <FontAwesomeIcon icon={faSync} />\r\n                                            </Button>\r\n                                }\r\n                            </GridToolbar>\r\n                            : \"\"}\r\n                                \r\n                                <Column\r\n                            field=\"selected\"\r\n                            width=\"50px\"\r\n                            title={this.props.title}\r\n                          // headerSelectionValue={this.props.selectAll}\r\n                          headerSelectionValue={this.props.dataResult&&this.props.dataResult.every((dd) => {\r\n                            return dd.selected === true\r\n                        }) ? true : false\r\n                        }\r\n                                             \r\n                        />\r\n\r\n                                {this.props.extractedColumnList.map((item, index) =>\r\n                                    <Column key={index}\r\n                                    title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                    {...this.columnProps(item.dataField)}\r\n                                width={item.width}\r\n                                cell={(row) => (\r\n                                    <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                        {item.isIdsField ?\r\n                                            <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                            : row[\"dataItem\"][item.dataField]}\r\n                                    </td>\r\n                                )} />\r\n                        )}\r\n\r\n                            \r\n                            </Grid>\r\n                    </LocalizationProvider >\r\n                    \r\n                </AtTableWrap >\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, undefined)(injectIntl(DataGridWithMultipleGrid));"]},"metadata":{},"sourceType":"module"}