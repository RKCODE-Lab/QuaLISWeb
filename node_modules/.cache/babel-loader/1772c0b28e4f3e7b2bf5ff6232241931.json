{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\layout\\\\layout.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport IdleTimer from 'react-idle-timer';\nimport PropTypes from 'prop-types';\nimport IdleTimeOutModal from '../confirm-alert/IdleTimeOutModal';\nimport Sidebar from '../sidebar/sidebar.component';\nimport SidebarTablet from '../sidebar/sidebar.tablet';\nimport Header from '../header/header.component';\nimport routes from '../../routes';\nimport { navPage, updateStore, callService, getDashBoardForHome, getListAlert, submitChangeRole, changeOwner } from '../../actions';\nimport rsapi from '../../rsapi';\nimport { toast } from 'react-toastify';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { IDLE_LOGOUT, DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { injectIntl } from 'react-intl'; // import { updateStore } from '../../actions/LoginAction';\n\nimport ScrollToTop from '../../actions/ScrollToTop';\nimport SearchBar from '../searchbarcomponent/SearchBar';\nimport { formatInputDate } from '../CommonScript';\nimport iconScreenSize from '../../assets/image/product-image@3x.png';\nimport { PostgreSQLMaintenance } from '../Enumeration';\nimport { intl } from '../App';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onAction = e => {};\n\n    this._onActive = e => {};\n\n    this._onIdle = e => {\n      if (this.state.showIdleModal !== true) {\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/insertAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          // scomments: `UserName:${this.props.Login.userInfo.susername}, \n          // LoginID:${this.props.Login.userInfo.sloginid}`,\n          scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\n          sauditaction: \"IDS_IDLETIMELOCK\"\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          this.setState({\n            showIdleModal: true,\n            sessionExpired: Date.now() + 600000\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.handleLogin = event => {\n      if (event) {\n        if (this.password.current !== null && this.password.current.elements[0].value === \"\") {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERPASSWORD\"\n          }));\n          return;\n        } else {\n          let uRL = \"\";\n          let inputData = [];\n          uRL = 'login/idleTimeAuditAction';\n          inputData = {\n            userinfo: this.props.Login.userInfo,\n            //password: this.state.password,\n            password: this.password.current.elements[0].value,\n            flag: true,\n            nFlag: 1\n          };\n          rsapi.post(uRL, inputData).then(response => {\n            if (response.data['PassFlag'] === this.props.intl.formatMessage({\n              id: \"IDS_SUCCESS\"\n            })) {\n              this.password.current.elements[0].value = \"\";\n              this.setState({\n                showIdleModal: false,\n                openModal: false\n              });\n            } else {\n              toast.info(response.data['PassFlag']);\n            }\n          }).catch(error => {\n            if (error.response.status === 500) {\n              toast.warn(error.message);\n            } else {\n              toast.warn(error.response.data);\n            }\n          });\n        }\n      }\n    };\n\n    this.enterKeyLogin = event => {\n      if (event.keyCode === 13) {\n        this.handleLogin(event);\n        event.preventDefault();\n      }\n    };\n\n    this.handleLogout = event => {\n      if (event) {\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/idleTimeAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          //password: this.state.password,\n          //password: this.password.current.elements[0].value,\n          flag: false,\n          nFlag: 2\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          const updateInfo = {\n            typeName: IDLE_LOGOUT,\n            data: {\n              masterData: [],\n              inputParam: undefined,\n              idleneed: false\n            }\n          };\n          this.props.updateStore(updateInfo); //this.password.current.elements[0].value = \"\"\n          //this.setState({ showIdleModal: false })\n\n          this.props.navPage(\"login\");\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.renderer = event => {\n      // event.preventDefault();\n      const {\n        minutes,\n        seconds,\n        completed\n      } = event;\n\n      if (completed) {\n        // Render a completed state\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/insertAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          // scomments: `UserName:${this.props.Login.userInfo.susername}, \n          // LoginID:${this.props.Login.userInfo.sloginid}`,\n          scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\n          sauditaction: \"IDS_SESSIONEXPIRED\",\n          nFlag: 2\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          const updateInfo = {\n            typeName: IDLE_LOGOUT,\n            data: {\n              masterData: [],\n              inputParam: undefined,\n              idleneed: false\n            }\n          }; //this.props.navPage(\"login\");\n\n          this.props.updateStore(updateInfo);\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      } else {\n        // Render a countdown\n        console.log(\"minutes\" + minutes + \"seconds\" + seconds);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            'margin-left': '0.3rem',\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 20\n          }\n        }, minutes, \" minutes \", seconds, \" seconds..!\");\n      }\n\n      return null;\n    };\n\n    this.onInputChangeSearch = event => {\n      let defaultSearch = [];\n      this.props.Login.menuDesign.map((menuItem, index) => {\n        menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\n          moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\n            //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\n            if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\n              defaultSearch.push({ ...formItem,\n                smodulename: moduleItem.sdisplayname\n              });\n            }\n          });\n        });\n      });\n      this.setState({\n        defaultSearch,\n        searchText: event.target.value.toLowerCase(),\n        showSearch: true,\n        menuClick: false\n      });\n    };\n\n    this.onInputChangeSearch1 = event => {\n      this.setState({\n        showSearch: false,\n        defaultSearch: [],\n        menuClick: false,\n        nmenucode: undefined,\n        searchText: ''\n      });\n      this.myDiv.focus();\n    };\n\n    this.onClickBackToMenu = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        defaultSearch: [],\n        menuClick: false,\n        nmenucode: undefined\n      });\n    };\n\n    this.onClickSearchMenu = (menu, inputRef) => {\n      let defaultSearch = [];\n      this.props.Login.menuDesign.map((menuItem, index) => {\n        if (menu.nmenucode === menuItem.nmenucode) {\n          menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\n            moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\n              //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\n              //  if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\n              defaultSearch.push({ ...formItem,\n                smodulename: moduleItem.sdisplayname\n              }); //   }\n            });\n          });\n        }\n      });\n      this.setState({\n        defaultSearch,\n        menuClick: true,\n        nmenucode: menu.nmenucode\n      });\n    };\n\n    this.getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, nmenucode, smodulename) => {\n      if (this.props.Login.userInfo.nformcode !== formCode) {\n        const userInfo = { ...this.props.Login.userInfo,\n          \"nformcode\": formCode,\n          \"nmodulecode\": moduleCode,\n          \"sformname\": formname.sdisplayname,\n          smodulename: smodulename\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": userInfo,\n            settings: this.props.Login.settings,\n            currentdate: formatInputDate(new Date(), true)\n          },\n          classUrl,\n          methodUrl,\n          displayName,\n          key: \"MenuId_\" + nmenucode\n        };\n        this.props.callService(inputParam);\n      }\n    };\n\n    this.onClickButton = forms => {\n      const {\n        history\n      } = this.props;\n      history.push('/' + forms.sclassname);\n      if (this.inputRef.current) this.inputRef.current.value = \"\";\n      this.setState({\n        defaultSearch: [],\n        searchText: \"\",\n        menuClick: false,\n        showSearch: false,\n        fullView: false,\n        showAlertDashBoard: true\n      });\n      this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, forms.nmodulecode, forms, forms.nmenucode, forms.smodulename);\n    };\n\n    this.menuHide = () => {\n      this.setState({\n        fullView: false,\n        showAlertDashBoard: true\n      });\n    };\n\n    this.layOutGetHome = (updateInfo, form) => {\n      const {\n        history\n      } = this.props;\n      history.push('/' + updateInfo.data.shomename);\n      if (this.inputRef.current) this.inputRef.current.value = \"\";\n      this.setState({\n        defaultSearch: [],\n        searchText: \"\",\n        menuClick: false,\n        fullView: true,\n        showAlertDashBoard: false\n      });\n\n      if (updateInfo.data.shomename === 'dashboard') {\n        this.props.updateStore(updateInfo);\n        this.props.getDashBoardForHome(updateInfo);\n        this.props.getListAlert(updateInfo.data.userInfo, true);\n      } else if (updateInfo.data.shomename === 'apiservice') {\n        const inputParam = {\n          inputData: {\n            settings: this.props.Login.settings,\n            currentdate: formatInputDate(new Date(), true),\n            \"userinfo\": updateInfo.data.userInfo\n          },\n          serviceNeed: true,\n          ...updateInfo.data,\n          \"userinfo\": updateInfo.data.userInfo\n        };\n        this.props.callService(inputParam);\n        this.props.getListAlert(updateInfo.data.userInfo, true);\n      } else {\n        this.props.updateStore(updateInfo);\n        this.props.getListAlert(updateInfo.data.userInfo, true);\n      } // ALPD-4794- Changed by Neeraj\n\n\n      this.myDiv.addEventListener('onKeyPress', this.handleKey);\n      this.myDiv.focus();\n    };\n\n    this.layOutGetHomeCancel = () => {\n      const {\n        history\n      } = this.props;\n      let {\n        menuClick,\n        defaultSearch,\n        searchText\n      } = this.state;\n\n      if (this.inputRef.current && this.inputRef.current.value !== \"\") {\n        if (this.props.history.location.pathname === '/home') {\n          history.push('/home');\n        }\n\n        this.inputRef.current.value = \"\";\n        menuClick = false;\n        defaultSearch = [];\n        searchText = \"\";\n      } else {\n        if (menuClick) {\n          menuClick = true;\n        }\n\n        if (this.inputRef.current) {\n          this.inputRef.current.value = \"\";\n        }\n      }\n\n      this.setState({\n        defaultSearch,\n        searchText,\n        showSearch: false,\n        menuClick\n      }); //this.props.updateStore(updateInfo);\n      //  this.props.layOutGetHome(updateInfo)\n    };\n\n    this.menuFullview = () => {\n      let {\n        fullView\n      } = this.state;\n      this.setState({\n        fullView: !this.state.fullView\n      });\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.onChangeRol = roleItem => {\n      this.setState({\n        menuClick: false,\n        showAlertDashBoard: false,\n        showSearch: false,\n        searchText: \"\"\n      });\n      const parameterInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          menuDesign: [],\n          navigation: \"\"\n        }\n      };\n      this.props.updateStore(parameterInfo);\n      const userInfo = this.props.Login.userInfo;\n      const inputParam = {\n        nusermultisitecode: userInfo.nusersitecode,\n        slanguagetypecode: userInfo.slanguagetypecode,\n        nusermultirolecode: roleItem.nusermultirolecode,\n        nuserrolecode: roleItem.nuserrolecode,\n        nmastersitecode: userInfo.nmastersitecode,\n        nlogintypecode: userInfo.nlogintypecode,\n        userinfo: userInfo\n      };\n      this.props.submitChangeRole(inputParam);\n    };\n\n    this.onChangeOwer = (item, role) => {\n      this.setState({\n        menuClick: false,\n        showAlertDashBoard: false,\n        showSearch: false,\n        searchText: \"\"\n      });\n      const parameterInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          menuDesign: [],\n          navigation: \"\"\n        }\n      };\n      this.props.updateStore(parameterInfo);\n      const inputData = {\n        nuserrolecode: item.nuserrolecode,\n        suserrolename: item.suserrolename,\n        nusercode: item.nusercode,\n        sdeputyid: item.sdeputyid,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.changeOwner(inputData);\n    };\n\n    this.handleResize = () => {\n      this.setState({\n        isDesktop: window.innerWidth >= 1280,\n        isPortrait: window.innerWidth >= 1024\n      });\n    };\n\n    this.handleKey = e => {\n      if (this.props.history.location.pathname === \"/home\" && e.target.name === undefined) {\n        let defaultSearch = [];\n        this.props.Login.menuDesign.map((menuItem, index) => {\n          menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\n            moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\n              if (formItem.sdisplayname.toLowerCase().includes(e.key.toLowerCase())) {\n                defaultSearch.push({ ...formItem,\n                  smodulename: moduleItem.sdisplayname\n                });\n              }\n            });\n          });\n        }); // ALPD-5296    Modified code for Enter value display when click enter button in the home page search box by Vishakh\n\n        this.setState({\n          defaultSearch,\n          searchText: e.charCode === 13 ? '' : e.key.toLowerCase(),\n          menuClick: false,\n          showSearch: !this.state.showSearch\n        });\n      }\n    };\n\n    this.parentFunction = this.parentFunction.bind(this);\n    this.pinMenu = this.pinMenu.bind(this);\n    this.darkMode = this.darkMode.bind(this);\n    this.carRef = React.createRef();\n    this.carRef1 = React.createRef();\n    this.state = {\n      //timeout: this.props.Login.idleTimeout,\n      //added by Syed on 27-SEP-2024\n      timeout: this.props.Login.idleTimeout * (this.props.Login.settings && parseInt(this.props.Login.settings[1])),\n      showIdleModal: false,\n      userLoggedIn: false,\n      isTimedOut: false,\n      password: \"\",\n      sessionExpired: this.props.Login.sessionExpired,\n      defaultSearch: [],\n      searchText: '',\n      menuClick: false,\n      showSearch: false,\n      fullView: true,\n      lenghtDvv: null,\n      sidebarview: false,\n      isPinned: false,\n      isDark: false,\n      isDesktop: window.innerWidth >= 1280,\n      isPortrait: window.innerWidth >= 1024,\n      windowSize: window.innerWidth,\n      handleResize: this.handleResize.bind(this)\n    };\n    this.inputRef = React.createRef();\n    this.idleTimer = null;\n    this.password = React.createRef();\n    this.searchValue = null;\n  }\n\n  parentFunction() {\n    this.setState({\n      sidebarview: !this.state.sidebarview\n    });\n  }\n\n  pinMenu() {\n    this.setState({\n      isPinned: !this.state.isPinned\n    });\n  }\n\n  darkMode() {\n    this.setState({\n      isDark: !this.state.isDark\n    });\n\n    if (!this.state.isDark) {\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n  }\n\n  // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\n  maintenanceBreakPopUp(breakTime) {\n    this.confirmMessage.confirm(\"MaintainceBreakMessage\", intl.formatMessage({\n      id: \"IDS_MAINTAINCEBREAK\"\n    }), intl.formatMessage({\n      id: \"IDS_MAINTAINCEBREAKMESSAGE\"\n    }), undefined, undefined, undefined, false, undefined, breakTime);\n  } // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\n\n\n  maintenanceBreakTrigger() {\n    let MaintenanceBreak = 0;\n\n    if (PostgreSQLMaintenance.STARTHOUR > PostgreSQLMaintenance.ENDHOUR) {\n      const minutesLeftToday = 60 - PostgreSQLMaintenance.STARTMINUTE + (23 - PostgreSQLMaintenance.STARTHOUR) * 60;\n      const minutesNextDay = PostgreSQLMaintenance.ENDHOUR * 60 + PostgreSQLMaintenance.ENDMINUTE;\n      MaintenanceBreak = minutesLeftToday + minutesNextDay;\n    } else if (PostgreSQLMaintenance.STARTHOUR < PostgreSQLMaintenance.ENDHOUR) {\n      MaintenanceBreak = (PostgreSQLMaintenance.ENDHOUR - PostgreSQLMaintenance.STARTHOUR) * 60 - PostgreSQLMaintenance.STARTMINUTE + PostgreSQLMaintenance.ENDMINUTE;\n    } else {\n      MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - PostgreSQLMaintenance.STARTMINUTE;\n    }\n\n    rsapi.post(\"/login/getJavaTime\", {}).then(response => {\n      this.date.setHours(response.data.Hours);\n      this.date.setMinutes(response.data.Minutes);\n      this.date.setSeconds(response.data.Seconds);\n\n      const isMaintenanceTime = () => {\n        if ((this.date.getHours() > PostgreSQLMaintenance.STARTHOUR || this.date.getHours() === PostgreSQLMaintenance.STARTHOUR && this.date.getMinutes() >= PostgreSQLMaintenance.STARTMINUTE) && (this.date.getHours() < PostgreSQLMaintenance.ENDHOUR || this.date.getHours() === PostgreSQLMaintenance.ENDHOUR && this.date.getMinutes() < PostgreSQLMaintenance.ENDMINUTE)) {\n          MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - this.date.getMinutes();\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      const incrementTimeByMinute = () => {\n        this.date.setMinutes(this.date.getMinutes() + 1);\n\n        if (this.date.getMinutes() === 60) {\n          this.date.setMinutes(0);\n          this.date.setHours(this.date.getHours() + 1);\n        }\n\n        if (this.date.getHours() === 24) {\n          this.date.setHours(0);\n        }\n      };\n\n      const maintenanceCheck = () => {\n        if (isMaintenanceTime()) {\n          this.maintenanceBreakPopUp(60000 * MaintenanceBreak);\n        }\n      };\n\n      maintenanceCheck();\n      setTimeout(() => {\n        incrementTimeByMinute();\n        maintenanceCheck();\n        setInterval(() => {\n          incrementTimeByMinute();\n          maintenanceCheck();\n        }, 60000);\n      }, (60 - (this.date.getSeconds() + 1)) * 1000);\n    }).catch(e => {\n      console.error(\"Error fetching login info\", e);\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.isPortrait) {\n      this.myDiv.addEventListener('onKeyPress', this.handleKey);\n      this.myDiv.focus();\n    }\n\n    window.addEventListener(\"resize\", this.handleResize); // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\n\n    this.maintenanceBreakTrigger();\n  }\n\n  componentWillUnmount() {\n    if (this.state.isPortrait) {\n      this.myDiv.removeEventListener('onKeyPress', this.handleKey);\n      this.setState({\n        isDark: false\n      });\n      document.body.classList.remove('dark');\n    }\n\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    this.confirmMessage = new ConfirmMessage();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IdleTimer, {\n      ref: ref => {\n        this.idleTimer = ref;\n      },\n      element: document,\n      onActive: this._onActive,\n      onAction: this._onAction,\n      onIdle: this._onIdle,\n      debounce: 250,\n      timeout: this.state.timeout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 21\n      }\n    }), this.props.Login.idleneed ? /*#__PURE__*/React.createElement(IdleTimeOutModal, {\n      showIdleModal: this.state.showIdleModal,\n      handleLogin: this.handleLogin,\n      handleLogout: this.handleLogout,\n      UserInfo: this.props.Login.userInfo,\n      passwordref: this.password //selectInputOnChange={this.selectInputOnChange}\n      //commented by Syed on 27-SEP-2024\n      //idealTime={this.props.Login.idleTimeout}\n      //Added by Syed on 27-SEP-2024 - IDLE TIME OUT FROM SETTINGS TABLE\n      ,\n      idealTime: this.props.Login.idleTimeout * (this.props.Login.settings && parseInt(this.props.Login.settings[1])),\n      Login: this.props.Login,\n      sessionExpired: this.state.sessionExpired,\n      enterKeyLogin: this.enterKeyLogin,\n      renderer: this.renderer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 25\n      }\n    }) : \"\", this.state.isDesktop ? /*#__PURE__*/React.createElement(Sidebar, {\n      history: this.props,\n      layOutGetHome: this.layOutGetHome,\n      inputRef: this.inputRef,\n      fullView: this.state.fullView,\n      menuHide: this.menuHide,\n      menuFullview: this.menuFullview,\n      pinMenu: this.pinMenu,\n      data: this.state.lenghtDvv,\n      sidebarview: this.state.sidebarview,\n      isPinned: this.state.isPinned,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(SidebarTablet, {\n      history: this.props,\n      layOutGetHome: this.layOutGetHome,\n      inputRef: this.inputRef,\n      fullView: this.state.fullView,\n      menuHide: this.menuHide,\n      menuFullview: this.menuFullview,\n      pinMenu: this.pinMenu,\n      data: this.state.lenghtDvv,\n      sidebarview: this.state.sidebarview,\n      isPinned: this.state.isPinned,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content-wrapper\",\n      className: `d-flex flex-column`,\n      ref: ref => this.myDiv = ref,\n      tabIndex: \"0\" //// ALPD-4794- Changed by Neeraj\n      ,\n      onKeyPress: this.props.Login.screenName === \"IDS_CHANGEPASSWORD\" ? \"\" : this.handleKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      history: this.props,\n      layOutGetHomeCancel: this.layOutGetHomeCancel,\n      fullView: this.state.fullView,\n      darkMode: this.darkMode,\n      isDark: this.state.isDark,\n      isDesktop: this.state.isDesktop,\n      visible: this.state.visible,\n      menuFullview: this.menuFullview,\n      toggleSearch: this.toggleSearch,\n      showSearch: this.state.showSearch,\n      searchBar: /*#__PURE__*/React.createElement(SearchBar, {\n        options: this.state.defaultSearch,\n        optionDisplayMember: 'sdisplayname',\n        onClickButton: this.onClickButton,\n        onInputChange: this.onInputChangeSearch,\n        onInputChange1: this.onInputChangeSearch1,\n        pathname: this.props.history.location.pathname,\n        inputRef: this.inputRef,\n        intl: this.props.intl,\n        searchText: this.state.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 33\n        }\n      }),\n      onChangeRol: this.onChangeRol,\n      onChangeOwer: this.onChangeOwer,\n      showAlertDashBoard: this.state.showAlertDashBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `container-fluid px-0  ${!this.state.fullView ? 'sidebar-fullview' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ScrollToTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 37\n      }\n    }, routes.map((route, index) => {\n      return route.component ? /*#__PURE__*/React.createElement(Route, {\n        key: index,\n        path: route.path,\n        exact: route.exact,\n        name: route.name,\n        render: props => /*#__PURE__*/React.createElement(route.component, Object.assign({\n          onClickSearchMenu: this.onClickSearchMenu,\n          onClickSearchForm: this.onClickButton,\n          menuClick: this.state.menuClick,\n          onClickBackToMenu: this.onClickBackToMenu,\n          searchText: this.state.searchText,\n          defaultSearch: this.state.defaultSearch\n        }, props, {\n          parentFunction: this.parentFunction,\n          carRef: this.carRef,\n          carRef1: this.carRef1,\n          data: this.state.lenghtDvv,\n          sidebarview: this.state.sidebarview,\n          isPinned: this.state.isPinned,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 57\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 49\n        }\n      }) : null;\n    }))))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"align-items-center login-info-portrait\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconScreenSize,\n      className: \"img-fluid border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-4 p-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 21\n      }\n    }, \"\\\"This message typically indicates that the application or website you're trying to access requires a screen resolution of 1024 pixels or wider to display properly. If you're using a tablet, please turn it to landscape mode. This requirement ensures a good user experience and proper layout.\\\"\"))));\n  }\n\n}\n\nLayout.propTypes = {\n  match: PropTypes.any.isRequired,\n  history: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  navPage,\n  updateStore,\n  callService,\n  getDashBoardForHome,\n  getListAlert,\n  submitChangeRole,\n  changeOwner\n})(injectIntl(Layout));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/layout/layout.component.jsx"],"names":["React","connect","Route","Switch","IdleTimer","PropTypes","IdleTimeOutModal","Sidebar","SidebarTablet","Header","routes","navPage","updateStore","callService","getDashBoardForHome","getListAlert","submitChangeRole","changeOwner","rsapi","toast","ConfirmMessage","IDLE_LOGOUT","DEFAULT_RETURN","injectIntl","ScrollToTop","SearchBar","formatInputDate","iconScreenSize","PostgreSQLMaintenance","intl","mapStateToProps","state","Login","Layout","Component","constructor","props","_onAction","e","_onActive","_onIdle","showIdleModal","uRL","inputData","userinfo","userInfo","scomments","susername","suserrolename","sloginid","sauditaction","post","then","response","setState","sessionExpired","Date","now","catch","error","status","message","warn","data","handleLogin","event","password","current","elements","value","info","formatMessage","id","flag","nFlag","openModal","enterKeyLogin","keyCode","preventDefault","handleLogout","updateInfo","typeName","masterData","inputParam","undefined","idleneed","renderer","minutes","seconds","completed","console","log","color","onInputChangeSearch","defaultSearch","menuDesign","map","menuItem","index","lstmodule","moduleItem","moduleIndex","lstforms","formItem","formIndex","sdisplayname","toLowerCase","includes","target","push","smodulename","searchText","showSearch","menuClick","onInputChangeSearch1","nmenucode","myDiv","focus","onClickBackToMenu","stopPropagation","onClickSearchMenu","menu","inputRef","getDetail","classUrl","methodUrl","formCode","displayName","moduleCode","formname","nformcode","settings","currentdate","key","onClickButton","forms","history","sclassname","fullView","showAlertDashBoard","surl","nmodulecode","menuHide","layOutGetHome","form","shomename","serviceNeed","addEventListener","handleKey","layOutGetHomeCancel","location","pathname","menuFullview","toggleSearch","onChangeRol","roleItem","parameterInfo","navigation","nusermultisitecode","nusersitecode","slanguagetypecode","nusermultirolecode","nuserrolecode","nmastersitecode","nlogintypecode","onChangeOwer","item","role","nusercode","sdeputyid","handleResize","isDesktop","window","innerWidth","isPortrait","name","charCode","parentFunction","bind","pinMenu","darkMode","carRef","createRef","carRef1","timeout","idleTimeout","parseInt","userLoggedIn","isTimedOut","lenghtDvv","sidebarview","isPinned","isDark","windowSize","idleTimer","searchValue","document","body","classList","add","remove","maintenanceBreakPopUp","breakTime","confirmMessage","confirm","maintenanceBreakTrigger","MaintenanceBreak","STARTHOUR","ENDHOUR","minutesLeftToday","STARTMINUTE","minutesNextDay","ENDMINUTE","date","setHours","Hours","setMinutes","Minutes","setSeconds","Seconds","isMaintenanceTime","getHours","getMinutes","incrementTimeByMinute","maintenanceCheck","setTimeout","setInterval","getSeconds","componentDidMount","componentWillUnmount","removeEventListener","render","ref","screenName","visible","route","component","path","exact","propTypes","match","any","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,mBAA5C,EAAgEC,YAAhE,EAA8EC,gBAA9E,EAA+FC,WAA/F,QAAiH,eAAjH;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,SAASC,WAAT,EAAqBC,cAArB,QAA2C,0BAA3C;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMC,MAAN,SAAqBjC,KAAK,CAACkC,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqDnBC,SArDmB,GAqDNC,CAAD,IAAO,CAElB,CAvDkB;;AAAA,SAyDnBC,SAzDmB,GAyDND,CAAD,IAAO,CAElB,CA3DkB;;AAAA,SA6DnBE,OA7DmB,GA6DRF,CAAD,IAAO;AACb,UAAI,KAAKP,KAAL,CAAWU,aAAX,KAA6B,IAAjC,EAAuC;AACnC,YAAIC,GAAG,GAAG,EAAV;AACA,YAAIC,SAAS,GAAG,EAAhB;AACAD,QAAAA,GAAG,GAAG,yBAAN;AACAC,QAAAA,SAAS,GAAG;AACRC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,QADnB;AAER;AACA;AACAC,UAAAA,SAAS,EAAG,aAAY,KAAKV,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BE,SAAU,eAAc,KAAKX,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BG,aAAc,cAAa,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BI,QAAS,EAJ1J;AAKRC,UAAAA,YAAY,EAAE;AALN,SAAZ;AAOAhC,QAAAA,KAAK,CAACiC,IAAN,CAAWT,GAAX,EAAgBC,SAAhB,EACKS,IADL,CACUC,QAAQ,IAAI;AACd,eAAKC,QAAL,CAAc;AAAEb,YAAAA,aAAa,EAAE,IAAjB;AAAuBc,YAAAA,cAAc,EAAEC,IAAI,CAACC,GAAL,KAAa;AAApD,WAAd;AACH,SAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZ,cAAIA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC;AAC/BzC,YAAAA,KAAK,CAACwC,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,WAFD,MAGK;AACD1C,YAAAA,KAAK,CAAC2C,IAAN,CAAWH,KAAK,CAACN,QAAN,CAAeU,IAA1B;AACH;AACJ,SAXL;AAYH;AACJ,KAtFkB;;AAAA,SAyFnBC,WAzFmB,GAyFJC,KAAD,IAAW;AACrB,UAAIA,KAAJ,EAAW;AACP,YAAI,KAAKC,QAAL,CAAcC,OAAd,KAA0B,IAA1B,IAAkC,KAAKD,QAAL,CAAcC,OAAd,CAAsBC,QAAtB,CAA+B,CAA/B,EAAkCC,KAAlC,KAA4C,EAAlF,EAAsF;AAClFlD,UAAAA,KAAK,CAACmD,IAAN,CAAW,KAAKlC,KAAL,CAAWP,IAAX,CAAgB0C,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACA;AACH,SAHD,MAIK;AACD,cAAI9B,GAAG,GAAG,EAAV;AACA,cAAIC,SAAS,GAAG,EAAhB;AACAD,UAAAA,GAAG,GAAG,2BAAN;AACAC,UAAAA,SAAS,GAAG;AACRC,YAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,QADnB;AAER;AACAqB,YAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcC,OAAd,CAAsBC,QAAtB,CAA+B,CAA/B,EAAkCC,KAHpC;AAIRI,YAAAA,IAAI,EAAE,IAJE;AAIIC,YAAAA,KAAK,EAAE;AAJX,WAAZ;AAOAxD,UAAAA,KAAK,CAACiC,IAAN,CAAWT,GAAX,EAAgBC,SAAhB,EACKS,IADL,CACUC,QAAQ,IAAI;AACd,gBAAIA,QAAQ,CAACU,IAAT,CAAc,UAAd,MAA8B,KAAK3B,KAAL,CAAWP,IAAX,CAAgB0C,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CAAlC,EAAwF;AACpF,mBAAKN,QAAL,CAAcC,OAAd,CAAsBC,QAAtB,CAA+B,CAA/B,EAAkCC,KAAlC,GAA0C,EAA1C;AACA,mBAAKf,QAAL,CAAc;AAAEb,gBAAAA,aAAa,EAAE,KAAjB;AAAwBkC,gBAAAA,SAAS,EAAE;AAAnC,eAAd;AACH,aAHD,MAIK;AACDxD,cAAAA,KAAK,CAACmD,IAAN,CAAWjB,QAAQ,CAACU,IAAT,CAAc,UAAd,CAAX;AACH;AACJ,WATL,EAUKL,KAVL,CAUWC,KAAK,IAAI;AACZ,gBAAIA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC;AAC/BzC,cAAAA,KAAK,CAAC2C,IAAN,CAAWH,KAAK,CAACE,OAAjB;AACH,aAFD,MAGK;AACD1C,cAAAA,KAAK,CAAC2C,IAAN,CAAWH,KAAK,CAACN,QAAN,CAAeU,IAA1B;AACH;AACJ,WAjBL;AAkBH;AACJ;AACJ,KA9HkB;;AAAA,SAgInBa,aAhImB,GAgIFX,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACY,OAAN,KAAkB,EAAtB,EAA0B;AACtB,aAAKb,WAAL,CAAiBC,KAAjB;AACAA,QAAAA,KAAK,CAACa,cAAN;AACH;AACJ,KArIkB;;AAAA,SAwInBC,YAxImB,GAwIHd,KAAD,IAAW;AACtB,UAAIA,KAAJ,EAAW;AACP,YAAIvB,GAAG,GAAG,EAAV;AACA,YAAIC,SAAS,GAAG,EAAhB;AACAD,QAAAA,GAAG,GAAG,2BAAN;AACAC,QAAAA,SAAS,GAAG;AACRC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,QADnB;AAER;AACA;AACA4B,UAAAA,IAAI,EAAE,KAJE;AAIKC,UAAAA,KAAK,EAAE;AAJZ,SAAZ;AAOAxD,QAAAA,KAAK,CAACiC,IAAN,CAAWT,GAAX,EAAgBC,SAAhB,EACKS,IADL,CACUC,QAAQ,IAAI;AAEd,gBAAM2B,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE5D,WADK;AAEf0C,YAAAA,IAAI,EAAE;AACFmB,cAAAA,UAAU,EAAE,EADV;AACcC,cAAAA,UAAU,EAAEC,SAD1B;AACqCC,cAAAA,QAAQ,EAAE;AAD/C;AAFS,WAAnB;AAMA,eAAKjD,KAAL,CAAWxB,WAAX,CAAuBoE,UAAvB,EARc,CAUd;AACA;;AACA,eAAK5C,KAAL,CAAWzB,OAAX,CAAmB,OAAnB;AACH,SAdL,EAeK+C,KAfL,CAeWC,KAAK,IAAI;AACZ,cAAIA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC;AAC/BzC,YAAAA,KAAK,CAACwC,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,WAFD,MAGK;AACD1C,YAAAA,KAAK,CAAC2C,IAAN,CAAWH,KAAK,CAACN,QAAN,CAAeU,IAA1B;AACH;AACJ,SAtBL;AAuBH;AACJ,KA5KkB;;AAAA,SA8KnBuB,QA9KmB,GA8KPrB,KAAD,IAAW;AAClB;AACA,YAAM;AAAEsB,QAAAA,OAAF;AAAWC,QAAAA,OAAX;AAAoBC,QAAAA;AAApB,UAAkCxB,KAAxC;;AACA,UAAIwB,SAAJ,EAAe;AACX;AACA,YAAI/C,GAAG,GAAG,EAAV;AACA,YAAIC,SAAS,GAAG,EAAhB;AACAD,QAAAA,GAAG,GAAG,yBAAN;AACAC,QAAAA,SAAS,GAAG;AACRC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,QADnB;AAER;AACA;AACAC,UAAAA,SAAS,EAAG,aAAY,KAAKV,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BE,SAAU,eAAc,KAAKX,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BG,aAAc,cAAa,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BI,QAAS,EAJ1J;AAKRC,UAAAA,YAAY,EAAE,oBALN;AAK4BwB,UAAAA,KAAK,EAAE;AALnC,SAAZ;AAQAxD,QAAAA,KAAK,CAACiC,IAAN,CAAWT,GAAX,EAAgBC,SAAhB,EACKS,IADL,CACUC,QAAQ,IAAI;AAEd,gBAAM2B,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE5D,WADK;AAEf0C,YAAAA,IAAI,EAAE;AACFmB,cAAAA,UAAU,EAAE,EADV;AACcC,cAAAA,UAAU,EAAEC,SAD1B;AACqCC,cAAAA,QAAQ,EAAE;AAD/C;AAFS,WAAnB,CAFc,CAQd;;AACA,eAAKjD,KAAL,CAAWxB,WAAX,CAAuBoE,UAAvB;AAEH,SAZL,EAaKtB,KAbL,CAaWC,KAAK,IAAI;AACZ,cAAIA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC;AAC/BzC,YAAAA,KAAK,CAACwC,KAAN,CAAYA,KAAK,CAACE,OAAlB;AACH,WAFD,MAGK;AACD1C,YAAAA,KAAK,CAAC2C,IAAN,CAAWH,KAAK,CAACN,QAAN,CAAeU,IAA1B;AACH;AACJ,SApBL;AAqBH,OAlCD,MAkCO;AACH;AACA2B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,OAAZ,GAAsB,SAAtB,GAAkCC,OAA9C;AACA,4BAAO;AAAM,UAAA,KAAK,EAAE;AAAE,2BAAe,QAAjB;AAA2BI,YAAAA,KAAK,EAAE;AAAlC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyDL,OAAzD,eAA2EC,OAA3E,gBAAP;AAEH;;AACD,aAAO,IAAP;AACH,KA1NkB;;AAAA,SA6NnBK,mBA7NmB,GA6NI5B,KAAD,IAAW;AAC7B,UAAI6B,aAAa,GAAG,EAApB;AACA,WAAK1D,KAAL,CAAWJ,KAAX,CAAiB+D,UAAjB,CAA4BC,GAA5B,CAAgC,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjDD,QAAAA,QAAQ,CAACE,SAAT,IAAsBF,QAAQ,CAACE,SAAT,CAAmBH,GAAnB,CAAuB,CAACI,UAAD,EAAaC,WAAb,KAA6B;AACtED,UAAAA,UAAU,CAACE,QAAX,IAAuBF,UAAU,CAACE,QAAX,CAAoBN,GAApB,CAAwB,CAACO,QAAD,EAAWC,SAAX,KAAyB;AAEpE;AACA,gBAAID,QAAQ,CAACE,YAAT,CAAsBC,WAAtB,GAAoCC,QAApC,CAA6C1C,KAAK,CAAC2C,MAAN,CAAavC,KAAb,CAAmBqC,WAAnB,EAA7C,CAAJ,EAAoF;AAChFZ,cAAAA,aAAa,CAACe,IAAd,CAAmB,EAAE,GAAGN,QAAL;AAAeO,gBAAAA,WAAW,EAAEV,UAAU,CAACK;AAAvC,eAAnB;AACH;AACJ,WANsB,CAAvB;AAOH,SARqB,CAAtB;AASH,OAVD;AAWA,WAAKnD,QAAL,CAAc;AAAEwC,QAAAA,aAAF;AAAiBiB,QAAAA,UAAU,EAAE9C,KAAK,CAAC2C,MAAN,CAAavC,KAAb,CAAmBqC,WAAnB,EAA7B;AAA8DM,QAAAA,UAAU,EAAC,IAAzE;AAA+EC,QAAAA,SAAS,EAAE;AAA1F,OAAd;AACH,KA3OkB;;AAAA,SA4OnBC,oBA5OmB,GA4OKjD,KAAD,IAAW;AAC9B,WAAKX,QAAL,CAAc;AACV0D,QAAAA,UAAU,EAAC,KADD;AAEVlB,QAAAA,aAAa,EAAE,EAFL;AAGVmB,QAAAA,SAAS,EAAE,KAHD;AAIVE,QAAAA,SAAS,EAAE/B,SAJD;AAKV2B,QAAAA,UAAU,EAAC;AALD,OAAd;AAMA,WAAKK,KAAL,CAAWC,KAAX;AACH,KApPkB;;AAAA,SAqPnBC,iBArPmB,GAqPEhF,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACwC,cAAF;AACAxC,MAAAA,CAAC,CAACiF,eAAF;AACA,WAAKjE,QAAL,CAAc;AACVwC,QAAAA,aAAa,EAAE,EADL;AAEVmB,QAAAA,SAAS,EAAE,KAFD;AAEQE,QAAAA,SAAS,EAAE/B;AAFnB,OAAd;AAIH,KA5PkB;;AAAA,SA8PnBoC,iBA9PmB,GA8PC,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACpC,UAAI5B,aAAa,GAAG,EAApB;AACA,WAAK1D,KAAL,CAAWJ,KAAX,CAAiB+D,UAAjB,CAA4BC,GAA5B,CAAgC,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD,YAAIuB,IAAI,CAACN,SAAL,KAAmBlB,QAAQ,CAACkB,SAAhC,EAA2C;AACvClB,UAAAA,QAAQ,CAACE,SAAT,IAAsBF,QAAQ,CAACE,SAAT,CAAmBH,GAAnB,CAAuB,CAACI,UAAD,EAAaC,WAAb,KAA6B;AACtED,YAAAA,UAAU,CAACE,QAAX,IAAuBF,UAAU,CAACE,QAAX,CAAoBN,GAApB,CAAwB,CAACO,QAAD,EAAWC,SAAX,KAAyB;AACpE;AACA;AACAV,cAAAA,aAAa,CAACe,IAAd,CAAmB,EAAE,GAAGN,QAAL;AAAeO,gBAAAA,WAAW,EAAEV,UAAU,CAACK;AAAvC,eAAnB,EAHoE,CAIpE;AACH,aALsB,CAAvB;AAMH,WAPqB,CAAtB;AAQH;AACJ,OAXD;AAYA,WAAKnD,QAAL,CAAc;AACVwC,QAAAA,aADU;AAEVmB,QAAAA,SAAS,EAAE,IAFD;AAEOE,QAAAA,SAAS,EAAEM,IAAI,CAACN;AAFvB,OAAd;AAIH,KAhRkB;;AAAA,SAkRnBQ,SAlRmB,GAkRP,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,UAA7C,EAAyDC,QAAzD,EAAmEd,SAAnE,EAA8EL,WAA9E,KAA8F;AAEtG,UAAI,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBa,QAAjB,CAA0BqF,SAA1B,KAAwCJ,QAA5C,EAAsD;AAElD,cAAMjF,QAAQ,GAAG,EACb,GAAG,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,QADP;AACiB,uBAAaiF,QAD9B;AAEb,yBAAeE,UAFF;AAEc,uBAAaC,QAAQ,CAACxB,YAFpC;AAEkDK,UAAAA,WAAW,EAAEA;AAF/D,SAAjB;AAIA,cAAM3B,UAAU,GAAG;AACfxC,UAAAA,SAAS,EAAE;AAAE,wBAAYE,QAAd;AACXsF,YAAAA,QAAQ,EAAG,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBmG,QADjB;AAEXC,YAAAA,WAAW,EAAE1G,eAAe,CAAC,IAAI8B,IAAJ,EAAD,EAAa,IAAb;AAFjB,WADI;AAIfoE,UAAAA,QAJe;AAILC,UAAAA,SAJK;AAIME,UAAAA,WAJN;AAImBM,UAAAA,GAAG,EAAE,YAAYlB;AAJpC,SAAnB;AAOA,aAAK/E,KAAL,CAAWvB,WAAX,CAAuBsE,UAAvB;AACH;AACJ,KAnSkB;;AAAA,SAqSnBmD,aArSmB,GAqSFC,KAAD,IAAW;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKpG,KAAzB;AACAoG,MAAAA,OAAO,CAAC3B,IAAR,CAAa,MAAM0B,KAAK,CAACE,UAAzB;AACA,UAAI,KAAKf,QAAL,CAAcvD,OAAlB,EACI,KAAKuD,QAAL,CAAcvD,OAAd,CAAsBE,KAAtB,GAA8B,EAA9B;AACJ,WAAKf,QAAL,CAAc;AAAEwC,QAAAA,aAAa,EAAE,EAAjB;AAAqBiB,QAAAA,UAAU,EAAE,EAAjC;AAAqCE,QAAAA,SAAS,EAAE,KAAhD;AAAuDD,QAAAA,UAAU,EAAE,KAAnE;AAA0E0B,QAAAA,QAAQ,EAAE,KAApF;AAA2FC,QAAAA,kBAAkB,EAAC;AAA9G,OAAd;AACA,WAAKhB,SAAL,CAAeY,KAAK,CAACE,UAAN,CAAiB/B,WAAjB,EAAf,EAA+C6B,KAAK,CAACK,IAArD,EACIL,KAAK,CAACL,SADV,EACqBK,KAAK,CAAC9B,YAD3B,EACyC8B,KAAK,CAACM,WAD/C,EAC4DN,KAD5D,EACmEA,KAAK,CAACpB,SADzE,EACoFoB,KAAK,CAACzB,WAD1F;AAEH,KA7SkB;;AAAA,SA8SnBgC,QA9SmB,GA8SR,MAAM;AACb,WAAKxF,QAAL,CAAc;AAAEoF,QAAAA,QAAQ,EAAE,KAAZ;AAAkBC,QAAAA,kBAAkB,EAAC;AAArC,OAAd;AACH,KAhTkB;;AAAA,SAiTnBI,aAjTmB,GAiTH,CAAC/D,UAAD,EAAagE,IAAb,KAAsB;AAClC,YAAM;AAAER,QAAAA;AAAF,UAAc,KAAKpG,KAAzB;AACAoG,MAAAA,OAAO,CAAC3B,IAAR,CAAa,MAAM7B,UAAU,CAACjB,IAAX,CAAgBkF,SAAnC;AACA,UAAI,KAAKvB,QAAL,CAAcvD,OAAlB,EACI,KAAKuD,QAAL,CAAcvD,OAAd,CAAsBE,KAAtB,GAA8B,EAA9B;AACJ,WAAKf,QAAL,CAAc;AAAEwC,QAAAA,aAAa,EAAE,EAAjB;AAAqBiB,QAAAA,UAAU,EAAE,EAAjC;AAAqCE,QAAAA,SAAS,EAAE,KAAhD;AAAuDyB,QAAAA,QAAQ,EAAE,IAAjE;AAAsEC,QAAAA,kBAAkB,EAAC;AAAzF,OAAd;;AACA,UAAI3D,UAAU,CAACjB,IAAX,CAAgBkF,SAAhB,KAA8B,WAAlC,EAA+C;AAC3C,aAAK7G,KAAL,CAAWxB,WAAX,CAAuBoE,UAAvB;AACA,aAAK5C,KAAL,CAAWtB,mBAAX,CAA+BkE,UAA/B;AACA,aAAK5C,KAAL,CAAWrB,YAAX,CAAwBiE,UAAU,CAACjB,IAAX,CAAgBlB,QAAxC,EAAkD,IAAlD;AACH,OAJD,MAIO,IAAImC,UAAU,CAACjB,IAAX,CAAgBkF,SAAhB,KAA8B,YAAlC,EAAgD;AACnD,cAAM9D,UAAU,GAAG;AACfxC,UAAAA,SAAS,EAAE;AACVwF,YAAAA,QAAQ,EAAG,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBmG,QADlB;AAEVC,YAAAA,WAAW,EAAE1G,eAAe,CAAC,IAAI8B,IAAJ,EAAD,EAAa,IAAb,CAFlB;AAEsC,wBAAYwB,UAAU,CAACjB,IAAX,CAAgBlB;AAFlE,WADI;AAIdqG,UAAAA,WAAW,EAAE,IAJC;AAII,aAAGlE,UAAU,CAACjB,IAJlB;AAIwB,sBAAYiB,UAAU,CAACjB,IAAX,CAAgBlB;AAJpD,SAAnB;AAMA,aAAKT,KAAL,CAAWvB,WAAX,CAAuBsE,UAAvB;AACA,aAAK/C,KAAL,CAAWrB,YAAX,CAAwBiE,UAAU,CAACjB,IAAX,CAAgBlB,QAAxC,EAAkD,IAAlD;AACH,OATM,MAUF;AACD,aAAKT,KAAL,CAAWxB,WAAX,CAAuBoE,UAAvB;AACA,aAAK5C,KAAL,CAAWrB,YAAX,CAAwBiE,UAAU,CAACjB,IAAX,CAAgBlB,QAAxC,EAAkD,IAAlD;AACH,OAvBiC,CAwBlC;;;AACA,WAAKuE,KAAL,CAAW+B,gBAAX,CAA4B,YAA5B,EAA0C,KAAKC,SAA/C;AACA,WAAKhC,KAAL,CAAWC,KAAX;AACH,KA5UkB;;AAAA,SA6UnBgC,mBA7UmB,GA6UG,MAAM;AACxB,YAAM;AAAEb,QAAAA;AAAF,UAAc,KAAKpG,KAAzB;AACA,UAAI;AAAE6E,QAAAA,SAAF;AAAanB,QAAAA,aAAb;AAA4BiB,QAAAA;AAA5B,UAA2C,KAAKhF,KAApD;;AAEA,UAAI,KAAK2F,QAAL,CAAcvD,OAAd,IAAyB,KAAKuD,QAAL,CAAcvD,OAAd,CAAsBE,KAAtB,KAAgC,EAA7D,EAAiE;AAC7D,YAAI,KAAKjC,KAAL,CAAWoG,OAAX,CAAmBc,QAAnB,CAA4BC,QAA5B,KAAyC,OAA7C,EAAsD;AAClDf,UAAAA,OAAO,CAAC3B,IAAR,CAAa,OAAb;AACH;;AACD,aAAKa,QAAL,CAAcvD,OAAd,CAAsBE,KAAtB,GAA8B,EAA9B;AACA4C,QAAAA,SAAS,GAAG,KAAZ;AACAnB,QAAAA,aAAa,GAAG,EAAhB;AACAiB,QAAAA,UAAU,GAAG,EAAb;AACH,OARD,MAQO;AACH,YAAIE,SAAJ,EAAe;AACXA,UAAAA,SAAS,GAAG,IAAZ;AACH;;AAED,YAAI,KAAKS,QAAL,CAAcvD,OAAlB,EAA2B;AACvB,eAAKuD,QAAL,CAAcvD,OAAd,CAAsBE,KAAtB,GAA8B,EAA9B;AACH;AAEJ;;AACD,WAAKf,QAAL,CAAc;AAAEwC,QAAAA,aAAF;AAAiBiB,QAAAA,UAAjB;AAA6BC,QAAAA,UAAU,EAAE,KAAzC;AAAgDC,QAAAA;AAAhD,OAAd,EAtBwB,CAuBxB;AACA;AACH,KAtWkB;;AAAA,SAuWnBuC,YAvWmB,GAuWJ,MAAM;AACjB,UAAI;AAAEd,QAAAA;AAAF,UAAe,KAAK3G,KAAxB;AACA,WAAKuB,QAAL,CAAc;AAAEoF,QAAAA,QAAQ,EAAE,CAAC,KAAK3G,KAAL,CAAW2G;AAAxB,OAAd;AACH,KA1WkB;;AAAA,SA2WnBe,YA3WmB,GA2WJ,MAAM;AACjB,WAAKnG,QAAL,CAAc;AACV0D,QAAAA,UAAU,EAAE,CAAC,KAAKjF,KAAL,CAAWiF;AADd,OAAd;AAGH,KA/WkB;;AAAA,SAgXnB0C,WAhXmB,GAgXJC,QAAD,IAAc;AACxB,WAAKrG,QAAL,CAAc;AAAE2D,QAAAA,SAAS,EAAC,KAAZ;AAAkB0B,QAAAA,kBAAkB,EAAC,KAArC;AAA6C3B,QAAAA,UAAU,EAAC,KAAxD;AAA8DD,QAAAA,UAAU,EAAC;AAAzE,OAAd;AACA,YAAM6C,aAAa,GAAG;AAClB3E,QAAAA,QAAQ,EAAE3D,cADQ;AAElByC,QAAAA,IAAI,EAAE;AAAEgC,UAAAA,UAAU,EAAE,EAAd;AAAkB8D,UAAAA,UAAU,EAAE;AAA9B;AAFY,OAAtB;AAIE,WAAKzH,KAAL,CAAWxB,WAAX,CAAuBgJ,aAAvB;AACA,YAAM/G,QAAQ,GAAG,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,QAAlC;AACA,YAAMsC,UAAU,GAAG;AACjB2E,QAAAA,kBAAkB,EAAEjH,QAAQ,CAACkH,aADZ;AAEjBC,QAAAA,iBAAiB,EAAEnH,QAAQ,CAACmH,iBAFX;AAGjBC,QAAAA,kBAAkB,EAAEN,QAAQ,CAACM,kBAHZ;AAIjBC,QAAAA,aAAa,EAAEP,QAAQ,CAACO,aAJP;AAKjBC,QAAAA,eAAe,EAAEtH,QAAQ,CAACsH,eALT;AAMjBC,QAAAA,cAAc,EAAEvH,QAAQ,CAACuH,cANR;AAOjBxH,QAAAA,QAAQ,EAAEC;AAPO,OAAnB;AASA,WAAKT,KAAL,CAAWpB,gBAAX,CAA4BmE,UAA5B;AACL,KAlYkB;;AAAA,SAoYnBkF,YApYmB,GAoYN,CAACC,IAAD,EAAOC,IAAP,KAAc;AACvB,WAAKjH,QAAL,CAAc;AAAE2D,QAAAA,SAAS,EAAC,KAAZ;AAAmB0B,QAAAA,kBAAkB,EAAC,KAAtC;AAA4C3B,QAAAA,UAAU,EAAC,KAAvD;AAA6DD,QAAAA,UAAU,EAAC;AAAxE,OAAd;AACA,YAAM6C,aAAa,GAAG;AAClB3E,QAAAA,QAAQ,EAAE3D,cADQ;AAElByC,QAAAA,IAAI,EAAE;AAAEgC,UAAAA,UAAU,EAAE,EAAd;AAAkB8D,UAAAA,UAAU,EAAE;AAA9B;AAFY,OAAtB;AAIE,WAAKzH,KAAL,CAAWxB,WAAX,CAAuBgJ,aAAvB;AACA,YAAMjH,SAAS,GAAG;AAChBuH,QAAAA,aAAa,EAAEI,IAAI,CAACJ,aADJ;AAEhBlH,QAAAA,aAAa,EAAEsH,IAAI,CAACtH,aAFJ;AAGhBwH,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAHA;AAIhBC,QAAAA,SAAS,EAAEH,IAAI,CAACG,SAJA;AAKhB7H,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa;AALX,OAAlB;AAOA,WAAKT,KAAL,CAAWnB,WAAX,CAAuB0B,SAAvB;AACL,KAnZkB;;AAAA,SA6ZnB+H,YA7ZmB,GA6ZJ,MAAM;AACjB,WAAKpH,QAAL,CAAc;AACVqH,QAAAA,SAAS,EAAGC,MAAM,CAACC,UAAR,IAAuB,IADxB;AAEVC,QAAAA,UAAU,EAAGF,MAAM,CAACC,UAAR,IAAuB;AAFzB,OAAd;AAID,KAlagB;;AAAA,SAghBnBzB,SAhhBmB,GAghBP9G,CAAC,IAAI;AACb,UAAG,KAAKF,KAAL,CAAWoG,OAAX,CAAmBc,QAAnB,CAA4BC,QAA5B,KAAyC,OAAzC,IAAoDjH,CAAC,CAACsE,MAAF,CAASmE,IAAT,KAAkB3F,SAAzE,EAAoF;AAChF,YAAIU,aAAa,GAAG,EAApB;AACA,aAAK1D,KAAL,CAAWJ,KAAX,CAAiB+D,UAAjB,CAA4BC,GAA5B,CAAgC,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjDD,UAAAA,QAAQ,CAACE,SAAT,IAAsBF,QAAQ,CAACE,SAAT,CAAmBH,GAAnB,CAAuB,CAACI,UAAD,EAAaC,WAAb,KAA6B;AACtED,YAAAA,UAAU,CAACE,QAAX,IAAuBF,UAAU,CAACE,QAAX,CAAoBN,GAApB,CAAwB,CAACO,QAAD,EAAWC,SAAX,KAAyB;AACpE,kBAAID,QAAQ,CAACE,YAAT,CAAsBC,WAAtB,GAAoCC,QAApC,CAA6CrE,CAAC,CAAC+F,GAAF,CAAM3B,WAAN,EAA7C,CAAJ,EAAuE;AACnEZ,gBAAAA,aAAa,CAACe,IAAd,CAAmB,EAAE,GAAGN,QAAL;AAAeO,kBAAAA,WAAW,EAAEV,UAAU,CAACK;AAAvC,iBAAnB;AACH;AACJ,aAJsB,CAAvB;AAKH,WANqB,CAAtB;AAOH,SARD,EAFgF,CAWhF;;AACA,aAAKnD,QAAL,CAAc;AAAEwC,UAAAA,aAAF;AAAiBiB,UAAAA,UAAU,EAAEzE,CAAC,CAAC0I,QAAF,KAAe,EAAf,GAAoB,EAApB,GAAyB1I,CAAC,CAAC+F,GAAF,CAAM3B,WAAN,EAAtD;AAA2EO,UAAAA,SAAS,EAAE,KAAtF;AAA4FD,UAAAA,UAAU,EAAE,CAAC,KAAKjF,KAAL,CAAWiF;AAApH,SAAd;AACH;AACJ,KA/hBkB;;AAEf,SAAKiE,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,MAAL,GAAcrL,KAAK,CAACsL,SAAN,EAAd;AACA,SAAKC,OAAL,GAAevL,KAAK,CAACsL,SAAN,EAAf;AACA,SAAKvJ,KAAL,GAAa;AACT;AACA;AACAyJ,MAAAA,OAAO,EAAE,KAAKpJ,KAAL,CAAWJ,KAAX,CAAiByJ,WAAjB,IAAgC,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBmG,QAAjB,IAA6BuD,QAAQ,CAAC,KAAKtJ,KAAL,CAAWJ,KAAX,CAAiBmG,QAAjB,CAA0B,CAA1B,CAAD,CAArE,CAHA;AAIT1F,MAAAA,aAAa,EAAE,KAJN;AAKTkJ,MAAAA,YAAY,EAAE,KALL;AAMTC,MAAAA,UAAU,EAAE,KANH;AAOT1H,MAAAA,QAAQ,EAAE,EAPD;AAQTX,MAAAA,cAAc,EAAE,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBuB,cARxB;AASTuC,MAAAA,aAAa,EAAE,EATN;AAUTiB,MAAAA,UAAU,EAAE,EAVH;AAWTE,MAAAA,SAAS,EAAE,KAXF;AAYTD,MAAAA,UAAU,EAAE,KAZH;AAaT0B,MAAAA,QAAQ,EAAE,IAbD;AAcTmD,MAAAA,SAAS,EAAC,IAdD;AAeTC,MAAAA,WAAW,EAAE,KAfJ;AAgBTC,MAAAA,QAAQ,EAAE,KAhBD;AAiBTC,MAAAA,MAAM,EAAE,KAjBC;AAkBTrB,MAAAA,SAAS,EAAGC,MAAM,CAACC,UAAR,IAAuB,IAlBzB;AAmBTC,MAAAA,UAAU,EAAGF,MAAM,CAACC,UAAR,IAAuB,IAnB1B;AAoBToB,MAAAA,UAAU,EAAGrB,MAAM,CAACC,UApBX;AAsBTH,MAAAA,YAAY,EAAE,KAAKA,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB;AAtBL,KAAb;AAwBA,SAAKxD,QAAL,GAAgB1H,KAAK,CAACsL,SAAN,EAAhB;AACA,SAAKY,SAAL,GAAiB,IAAjB;AACA,SAAKhI,QAAL,GAAgBlE,KAAK,CAACsL,SAAN,EAAhB;AACA,SAAKa,WAAL,GAAmB,IAAnB;AACH;;AAEDlB,EAAAA,cAAc,GAAG;AACb,SAAK3H,QAAL,CAAc;AAACwI,MAAAA,WAAW,EAAC,CAAC,KAAK/J,KAAL,CAAW+J;AAAzB,KAAd;AACH;;AAEDX,EAAAA,OAAO,GAAG;AACN,SAAK7H,QAAL,CAAc;AAACyI,MAAAA,QAAQ,EAAC,CAAC,KAAKhK,KAAL,CAAWgK;AAAtB,KAAd;AACH;;AACDX,EAAAA,QAAQ,GAAG;AACP,SAAK9H,QAAL,CAAc;AAAC0I,MAAAA,MAAM,EAAC,CAAC,KAAKjK,KAAL,CAAWiK;AAApB,KAAd;;AACA,QAAG,CAAC,KAAKjK,KAAL,CAAWiK,MAAf,EAAsB;AAClBI,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,MAA5B;AACH,KAFD,MAEK;AACDH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,MAA/B;AACH;AACJ;;AAgXC;AACFC,EAAAA,qBAAqB,CAACC,SAAD,EAAW;AAC5B,SAAKC,cAAL,CAAoBC,OAApB,CACI,wBADJ,EAEI/K,IAAI,CAAC0C,aAAL,CAAmB;AACfC,MAAAA,EAAE,EAAE;AADW,KAAnB,CAFJ,EAKI3C,IAAI,CAAC0C,aAAL,CAAmB;AACfC,MAAAA,EAAE,EAAE;AADW,KAAnB,CALJ,EAQIY,SARJ,EASIA,SATJ,EAUIA,SAVJ,EAWI,KAXJ,EAYIA,SAZJ,EAaIsH,SAbJ;AAeH,GAtbgC,CAwbjC;;;AACAG,EAAAA,uBAAuB,GAAG;AACtB,QAAIC,gBAAgB,GAAG,CAAvB;;AACA,QAAIlL,qBAAqB,CAACmL,SAAtB,GAAkCnL,qBAAqB,CAACoL,OAA5D,EAAqE;AACjE,YAAMC,gBAAgB,GAAI,KAAKrL,qBAAqB,CAACsL,WAA5B,GAA4C,CAAC,KAAKtL,qBAAqB,CAACmL,SAA5B,IAAyC,EAA9G;AACA,YAAMI,cAAc,GAAIvL,qBAAqB,CAACoL,OAAtB,GAAgC,EAAjC,GAAuCpL,qBAAqB,CAACwL,SAApF;AACAN,MAAAA,gBAAgB,GAAGG,gBAAgB,GAAGE,cAAtC;AACH,KAJD,MAIO,IAAIvL,qBAAqB,CAACmL,SAAtB,GAAkCnL,qBAAqB,CAACoL,OAA5D,EAAqE;AACxEF,MAAAA,gBAAgB,GAAI,CAAClL,qBAAqB,CAACoL,OAAtB,GAAgCpL,qBAAqB,CAACmL,SAAvD,IAAoE,EAArE,GACbnL,qBAAqB,CAACsL,WADT,GACuBtL,qBAAqB,CAACwL,SADhE;AAEH,KAHM,MAGA;AACHN,MAAAA,gBAAgB,GAAGlL,qBAAqB,CAACwL,SAAtB,GAAkCxL,qBAAqB,CAACsL,WAA3E;AACH;;AAEDhM,IAAAA,KAAK,CAACiC,IAAN,CAAW,oBAAX,EAAiC,EAAjC,EACKC,IADL,CACUC,QAAQ,IAAI;AAEd,WAAKgK,IAAL,CAAUC,QAAV,CAAmBjK,QAAQ,CAACU,IAAT,CAAcwJ,KAAjC;AACA,WAAKF,IAAL,CAAUG,UAAV,CAAqBnK,QAAQ,CAACU,IAAT,CAAc0J,OAAnC;AACA,WAAKJ,IAAL,CAAUK,UAAV,CAAqBrK,QAAQ,CAACU,IAAT,CAAc4J,OAAnC;;AAEA,YAAMC,iBAAiB,GAAG,MAAM;AAC5B,YACI,CAAC,KAAKP,IAAL,CAAUQ,QAAV,KAAuBjM,qBAAqB,CAACmL,SAA7C,IACA,KAAKM,IAAL,CAAUQ,QAAV,OAAyBjM,qBAAqB,CAACmL,SAA/C,IAA4D,KAAKM,IAAL,CAAUS,UAAV,MAA0BlM,qBAAqB,CAACsL,WAD7G,MAEC,KAAKG,IAAL,CAAUQ,QAAV,KAAuBjM,qBAAqB,CAACoL,OAA7C,IACA,KAAKK,IAAL,CAAUQ,QAAV,OAAyBjM,qBAAqB,CAACoL,OAA/C,IAA0D,KAAKK,IAAL,CAAUS,UAAV,KAAyBlM,qBAAqB,CAACwL,SAH1G,CADJ,EAKE;AACEN,UAAAA,gBAAgB,GAAGlL,qBAAqB,CAACwL,SAAtB,GAAkC,KAAKC,IAAL,CAAUS,UAAV,EAArD;AACA,iBAAO,IAAP;AACH,SARD,MAQO;AACH,iBAAO,KAAP;AACH;AACJ,OAZD;;AAcA,YAAMC,qBAAqB,GAAG,MAAM;AAChC,aAAKV,IAAL,CAAUG,UAAV,CAAqB,KAAKH,IAAL,CAAUS,UAAV,KAAyB,CAA9C;;AACA,YAAI,KAAKT,IAAL,CAAUS,UAAV,OAA2B,EAA/B,EAAmC;AAC/B,eAAKT,IAAL,CAAUG,UAAV,CAAqB,CAArB;AACA,eAAKH,IAAL,CAAUC,QAAV,CAAmB,KAAKD,IAAL,CAAUQ,QAAV,KAAuB,CAA1C;AACH;;AACD,YAAI,KAAKR,IAAL,CAAUQ,QAAV,OAAyB,EAA7B,EAAiC;AAC7B,eAAKR,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AACH;AACJ,OATD;;AAWA,YAAMU,gBAAgB,GAAG,MAAM;AAC3B,YAAIJ,iBAAiB,EAArB,EAAyB;AACrB,eAAKnB,qBAAL,CAA2B,QAAQK,gBAAnC;AACH;AACJ,OAJD;;AAMAkB,MAAAA,gBAAgB;AAEhBC,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,qBAAqB;AACrBC,QAAAA,gBAAgB;AAEhBE,QAAAA,WAAW,CAAC,MAAM;AACdH,UAAAA,qBAAqB;AACrBC,UAAAA,gBAAgB;AACnB,SAHU,EAGR,KAHQ,CAAX;AAKH,OATS,EASP,CAAC,MAAM,KAAKX,IAAL,CAAUc,UAAV,KAAyB,CAA/B,CAAD,IAAsC,IAT/B,CAAV;AAUH,KAlDL,EAmDKzK,KAnDL,CAmDWpB,CAAC,IAAI;AACRoD,MAAAA,OAAO,CAAC/B,KAAR,CAAc,2BAAd,EAA2CrB,CAA3C;AACH,KArDL;AAuDH;;AACD8L,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKrM,KAAL,CAAW+I,UAAd,EAAyB;AACrB,WAAK1D,KAAL,CAAW+B,gBAAX,CAA4B,YAA5B,EAA0C,KAAKC,SAA/C;AACA,WAAKhC,KAAL,CAAWC,KAAX;AACH;;AACDuD,IAAAA,MAAM,CAACzB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKuB,YAAvC,EALgB,CAMf;;AACA,SAAKmC,uBAAL;AACJ;;AAGDwB,EAAAA,oBAAoB,GAAG;AACnB,QAAG,KAAKtM,KAAL,CAAW+I,UAAd,EAAyB;AACrB,WAAK1D,KAAL,CAAWkH,mBAAX,CAA+B,YAA/B,EAA6C,KAAKlF,SAAlD;AACA,WAAK9F,QAAL,CAAc;AAAC0I,QAAAA,MAAM,EAAC;AAAR,OAAd;AACAI,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,MAA/B;AACH;;AACD5B,IAAAA,MAAM,CAAC0D,mBAAP,CAA2B,QAA3B,EAAqC,KAAK5D,YAA1C;AACH;;AAmBD6D,EAAAA,MAAM,GAAG;AACL,SAAK5B,cAAL,GAAsB,IAAIvL,cAAJ,EAAtB;AACA,wBACI,uDAEI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEoN,GAAG,IAAI;AAAE,aAAKtC,SAAL,GAAiBsC,GAAjB;AAAsB,OADxC;AAEI,MAAA,OAAO,EAAEpC,QAFb;AAGI,MAAA,QAAQ,EAAE,KAAK7J,SAHnB;AAII,MAAA,QAAQ,EAAE,KAAKF,SAJnB;AAKI,MAAA,MAAM,EAAE,KAAKG,OALjB;AAMI,MAAA,QAAQ,EAAE,GANd;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWyJ,OAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASK,KAAKpJ,KAAL,CAAWJ,KAAX,CAAiBqD,QAAjB,gBACG,oBAAC,gBAAD;AACI,MAAA,aAAa,EAAE,KAAKtD,KAAL,CAAWU,aAD9B;AAEI,MAAA,WAAW,EAAE,KAAKuB,WAFtB;AAGI,MAAA,YAAY,EAAE,KAAKe,YAHvB;AAII,MAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBa,QAJ/B;AAKI,MAAA,WAAW,EAAE,KAAKqB,QALtB,CAMI;AACA;AACA;AACA;AATJ;AAUI,MAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiByJ,WAAjB,IAAgC,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBmG,QAAjB,IAA6BuD,QAAQ,CAAC,KAAKtJ,KAAL,CAAWJ,KAAX,CAAiBmG,QAAjB,CAA0B,CAA1B,CAAD,CAArE,CAVf;AAWI,MAAA,KAAK,EAAE,KAAK/F,KAAL,CAAWJ,KAXtB;AAYI,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWwB,cAZ/B;AAaI,MAAA,aAAa,EAAE,KAAKqB,aAbxB;AAcI,MAAA,QAAQ,EAAE,KAAKU,QAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAgBK,EAzBV,EA4BK,KAAKvD,KAAL,CAAW4I,SAAX,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKvI,KAAvB;AAA8B,MAAA,aAAa,EAAE,KAAK2G,aAAlD;AAAiE,MAAA,QAAQ,EAAE,KAAKrB,QAAhF;AAA0F,MAAA,QAAQ,EAAE,KAAK3F,KAAL,CAAW2G,QAA/G;AAAyH,MAAA,QAAQ,EAAE,KAAKI,QAAxI;AAAkJ,MAAA,YAAY,EAAE,KAAKU,YAArK;AACA,MAAA,OAAO,EAAE,KAAK2B,OADd;AACuB,MAAA,IAAI,EAAE,KAAKpJ,KAAL,CAAW8J,SADxC;AACmD,MAAA,WAAW,EAAE,KAAK9J,KAAL,CAAW+J,WAD3E;AACwF,MAAA,QAAQ,EAAE,KAAK/J,KAAL,CAAWgK,QAD7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAGO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAK3J,KAA7B;AAAoC,MAAA,aAAa,EAAE,KAAK2G,aAAxD;AAAuE,MAAA,QAAQ,EAAE,KAAKrB,QAAtF;AAAgG,MAAA,QAAQ,EAAE,KAAK3F,KAAL,CAAW2G,QAArH;AAA+H,MAAA,QAAQ,EAAE,KAAKI,QAA9I;AAAwJ,MAAA,YAAY,EAAE,KAAKU,YAA3K;AACJ,MAAA,OAAO,EAAE,KAAK2B,OADV;AACmB,MAAA,IAAI,EAAE,KAAKpJ,KAAL,CAAW8J,SADpC;AAC+C,MAAA,WAAW,EAAE,KAAK9J,KAAL,CAAW+J,WADvE;AACoF,MAAA,QAAQ,EAAE,KAAK/J,KAAL,CAAWgK,QADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BZ,eAmCI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,SAAS,EAAG,oBAAtC;AAA2D,MAAA,GAAG,EAAEyC,GAAG,IAAI,KAAKpH,KAAL,GAAaoH,GAApF;AAAyF,MAAA,QAAQ,EAAC,GAAlG,CACA;AADA;AAEA,MAAA,UAAU,EAAG,KAAKpM,KAAL,CAAWJ,KAAX,CAAiByM,UAAjB,KAA+B,oBAA/B,GAAoD,EAApD,GAAuD,KAAKrF,SAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKhH,KAAtB;AAA6B,MAAA,mBAAmB,EAAE,KAAKiH,mBAAvD;AAA4E,MAAA,QAAQ,EAAE,KAAKtH,KAAL,CAAW2G,QAAjG;AACA,MAAA,QAAQ,EAAE,KAAK0C,QADf;AACyB,MAAA,MAAM,EAAE,KAAKrJ,KAAL,CAAWiK,MAD5C;AACoD,MAAA,SAAS,EAAE,KAAKjK,KAAL,CAAW4I,SAD1E;AAEA,MAAA,OAAO,EAAE,KAAK5I,KAAL,CAAW2M,OAFpB;AAE6B,MAAA,YAAY,EAAE,KAAKlF,YAFhD;AAE8D,MAAA,YAAY,EAAE,KAAKC,YAFjF;AAE+F,MAAA,UAAU,EAAE,KAAK1H,KAAL,CAAWiF,UAFtH;AAEkI,MAAA,SAAS,eACvI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKjF,KAAL,CAAW+D,aAA/B;AACI,QAAA,mBAAmB,EAAE,cADzB;AAEI,QAAA,aAAa,EAAE,KAAKwC,aAFxB;AAGI,QAAA,aAAa,EAAE,KAAKzC,mBAHxB;AAII,QAAA,cAAc,EAAE,KAAKqB,oBAJzB;AAKI,QAAA,QAAQ,EAAE,KAAK9E,KAAL,CAAWoG,OAAX,CAAmBc,QAAnB,CAA4BC,QAL1C;AAMI,QAAA,QAAQ,EAAE,KAAK7B,QANnB;AAOI,QAAA,IAAI,EAAE,KAAKtF,KAAL,CAAWP,IAPrB;AAQI,QAAA,UAAU,EAAE,KAAKE,KAAL,CAAWgF,UAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAcI,MAAA,WAAW,EAAE,KAAK2C,WAdtB;AAeI,MAAA,YAAY,EAAE,KAAKW,YAfvB;AAgBI,MAAA,kBAAkB,EAAE,KAAKtI,KAAL,CAAW4G,kBAhBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAkBI;AAAK,MAAA,SAAS,EAAG,yBAAwB,CAAC,KAAK5G,KAAL,CAAW2G,QAAZ,GAAuB,kBAAvB,GAA0C,EAAG,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhI,MAAM,CAACsF,GAAP,CAAW,CAAC2I,KAAD,EAAQzI,KAAR,KAAkB;AAC1B,aAAOyI,KAAK,CAACC,SAAN,gBACH,oBAAC,KAAD;AACI,QAAA,GAAG,EAAE1I,KADT;AAEI,QAAA,IAAI,EAAEyI,KAAK,CAACE,IAFhB;AAGI,QAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAII,QAAA,IAAI,EAAEH,KAAK,CAAC5D,IAJhB;AAKI,QAAA,MAAM,EAAE3I,KAAK,iBACT,oBAAC,KAAD,CAAO,SAAP;AACI,UAAA,iBAAiB,EAAE,KAAKoF,iBAD5B;AAEI,UAAA,iBAAiB,EAAE,KAAKc,aAF5B;AAGI,UAAA,SAAS,EAAE,KAAKvG,KAAL,CAAWkF,SAH1B;AAII,UAAA,iBAAiB,EAAE,KAAKK,iBAJ5B;AAKI,UAAA,UAAU,EAAE,KAAKvF,KAAL,CAAWgF,UAL3B;AAKuC,UAAA,aAAa,EAAE,KAAKhF,KAAL,CAAW+D;AALjE,WAKoF1D,KALpF;AAMI,UAAA,cAAc,EAAE,KAAK6I,cANzB;AAOI,UAAA,MAAM,EAAE,KAAKI,MAPjB;AAQI,UAAA,OAAO,EAAE,KAAKE,OARlB;AASI,UAAA,IAAI,EAAE,KAAKxJ,KAAL,CAAW8J,SATrB;AAUI,UAAA,WAAW,EAAE,KAAK9J,KAAL,CAAW+J,WAV5B;AAWI,UAAA,QAAQ,EAAE,KAAK/J,KAAL,CAAWgK,QAXzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,GAqBF,IArBL;AAsBH,KAvBA,CADL,CADJ,CADJ,CAlBJ,CAJJ,CAnCJ,CAFJ,eA4FO,uDACD;AAAK,MAAA,KAAK,EAAC,wCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEpK,cAAV;AAA0B,MAAA,SAAS,EAAC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+SAFF,CADC,CA5FP,CADJ;AAuGH;;AA5oBgC;;AA+oBrCM,MAAM,CAAC8M,SAAP,GAAmB;AACfC,EAAAA,KAAK,EAAE3O,SAAS,CAAC4O,GAAV,CAAcC,UADN;AAEf1G,EAAAA,OAAO,EAAEnI,SAAS,CAAC8O,IAAV,CAAeD;AAFT,CAAnB;AAKA,eAAejP,OAAO,CAAC6B,eAAD,EAAkB;AAAEnB,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA,mBAArC;AAAyDC,EAAAA,YAAzD;AAAsEC,EAAAA,gBAAtE;AAAuFC,EAAAA;AAAvF,CAAlB,CAAP,CAA+HM,UAAU,CAACU,MAAD,CAAzI,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport IdleTimer from 'react-idle-timer';\r\nimport PropTypes from 'prop-types';\r\nimport IdleTimeOutModal from '../confirm-alert/IdleTimeOutModal';\r\nimport Sidebar from '../sidebar/sidebar.component';\r\nimport SidebarTablet from '../sidebar/sidebar.tablet';\r\nimport Header from '../header/header.component';\r\nimport routes from '../../routes';\r\nimport { navPage, updateStore, callService, getDashBoardForHome,getListAlert ,submitChangeRole,changeOwner} from '../../actions'\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { IDLE_LOGOUT,DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { injectIntl } from 'react-intl';\r\n// import { updateStore } from '../../actions/LoginAction';\r\nimport ScrollToTop from '../../actions/ScrollToTop';\r\nimport SearchBar from '../searchbarcomponent/SearchBar';\r\nimport { formatInputDate } from '../CommonScript';\r\nimport iconScreenSize from '../../assets/image/product-image@3x.png'\r\nimport { PostgreSQLMaintenance } from '../Enumeration';\r\nimport { intl } from '../App';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nclass Layout extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentFunction = this.parentFunction.bind(this);\r\n        this.pinMenu = this.pinMenu.bind(this);\r\n        this.darkMode = this.darkMode.bind(this);\r\n        this.carRef = React.createRef()\r\n        this.carRef1 = React.createRef()\r\n        this.state = {\r\n            //timeout: this.props.Login.idleTimeout,\r\n            //added by Syed on 27-SEP-2024\r\n            timeout: this.props.Login.idleTimeout * (this.props.Login.settings && parseInt(this.props.Login.settings[1])),\r\n            showIdleModal: false,\r\n            userLoggedIn: false,\r\n            isTimedOut: false,\r\n            password: \"\",\r\n            sessionExpired: this.props.Login.sessionExpired,\r\n            defaultSearch: [],\r\n            searchText: '',\r\n            menuClick: false,\r\n            showSearch: false,\r\n            fullView: true,\r\n            lenghtDvv:null,\r\n            sidebarview: false,\r\n            isPinned: false,\r\n            isDark: false,\r\n            isDesktop: (window.innerWidth) >= 1280,\r\n            isPortrait: (window.innerWidth) >= 1024,\r\n            windowSize : window.innerWidth,\r\n\r\n            handleResize: this.handleResize.bind(this)\r\n        }\r\n        this.inputRef = React.createRef();\r\n        this.idleTimer = null\r\n        this.password = React.createRef();\r\n        this.searchValue = null \r\n    }\r\n\r\n    parentFunction() {\r\n        this.setState({sidebarview:!this.state.sidebarview});\r\n    }\r\n    \r\n    pinMenu() {\r\n        this.setState({isPinned:!this.state.isPinned});\r\n    }\r\n    darkMode() {        \r\n        this.setState({isDark:!this.state.isDark});\r\n        if(!this.state.isDark){                \r\n            document.body.classList.add('dark'); \r\n        }else{\r\n            document.body.classList.remove('dark'); \r\n        }        \r\n    }\r\n\r\n    _onAction = (e) => {\r\n\r\n    }\r\n\r\n    _onActive = (e) => {\r\n\r\n    }\r\n\r\n    _onIdle = (e) => {\r\n        if (this.state.showIdleModal !== true) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/insertAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                // scomments: `UserName:${this.props.Login.userInfo.susername}, \r\n                // LoginID:${this.props.Login.userInfo.sloginid}`,\r\n                scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\r\n                sauditaction: \"IDS_IDLETIMELOCK\"\r\n            }\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n                    this.setState({ showIdleModal: true, sessionExpired: Date.now() + 600000 });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handleLogin = (event) => {\r\n        if (event) {\r\n            if (this.password.current !== null && this.password.current.elements[0].value === \"\") {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERPASSWORD\" }));\r\n                return;\r\n            }\r\n            else {\r\n                let uRL = \"\";\r\n                let inputData = [];\r\n                uRL = 'login/idleTimeAuditAction';\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    //password: this.state.password,\r\n                    password: this.password.current.elements[0].value,\r\n                    flag: true, nFlag: 1\r\n                }\r\n\r\n                rsapi.post(uRL, inputData)\r\n                    .then(response => {\r\n                        if (response.data['PassFlag'] === this.props.intl.formatMessage({ id: \"IDS_SUCCESS\" })) {\r\n                            this.password.current.elements[0].value = \"\"\r\n                            this.setState({ showIdleModal: false, openModal: false })\r\n                        }\r\n                        else {\r\n                            toast.info(response.data['PassFlag']);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.warn(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    enterKeyLogin = (event) => {\r\n        if (event.keyCode === 13) {\r\n            this.handleLogin(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    handleLogout = (event) => {\r\n        if (event) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/idleTimeAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                //password: this.state.password,\r\n                //password: this.password.current.elements[0].value,\r\n                flag: false, nFlag: 2\r\n            }\r\n\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n\r\n                    const updateInfo = {\r\n                        typeName: IDLE_LOGOUT,\r\n                        data: {\r\n                            masterData: [], inputParam: undefined, idleneed: false\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                    //this.password.current.elements[0].value = \"\"\r\n                    //this.setState({ showIdleModal: false })\r\n                    this.props.navPage(\"login\");\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    renderer = (event) => {\r\n        // event.preventDefault();\r\n        const { minutes, seconds, completed } = event;\r\n        if (completed) {\r\n            // Render a completed state\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/insertAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                // scomments: `UserName:${this.props.Login.userInfo.susername}, \r\n                // LoginID:${this.props.Login.userInfo.sloginid}`,\r\n                scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\r\n                sauditaction: \"IDS_SESSIONEXPIRED\", nFlag: 2\r\n            }\r\n\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n\r\n                    const updateInfo = {\r\n                        typeName: IDLE_LOGOUT,\r\n                        data: {\r\n                            masterData: [], inputParam: undefined, idleneed: false\r\n                        }\r\n                    }\r\n                    //this.props.navPage(\"login\");\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            // Render a countdown\r\n            console.log(\"minutes\" + minutes + \"seconds\" + seconds)\r\n            return <span style={{ 'margin-left': '0.3rem', color: 'red' }}>{minutes} minutes {seconds} seconds..!</span>;\r\n\r\n        }\r\n        return null;\r\n    };\r\n\r\n\r\n    onInputChangeSearch = (event) => {       \r\n        let defaultSearch = []\r\n        this.props.Login.menuDesign.map((menuItem, index) => {\r\n            menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\r\n                moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\r\n\r\n                    //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\r\n                    if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\r\n                        defaultSearch.push({ ...formItem, smodulename: moduleItem.sdisplayname })\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        this.setState({ defaultSearch, searchText: event.target.value.toLowerCase(),showSearch:true, menuClick: false })\r\n    }\r\n    onInputChangeSearch1 = (event) => {     \r\n        this.setState({ \r\n            showSearch:false,\r\n            defaultSearch: [],\r\n            menuClick: false, \r\n            nmenucode: undefined, \r\n            searchText:''});\r\n        this.myDiv.focus();\r\n    }\r\n    onClickBackToMenu = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation()\r\n        this.setState({\r\n            defaultSearch: [],\r\n            menuClick: false, nmenucode: undefined\r\n        })\r\n    }\r\n\r\n    onClickSearchMenu = (menu, inputRef) => {\r\n        let defaultSearch = []\r\n        this.props.Login.menuDesign.map((menuItem, index) => {\r\n            if (menu.nmenucode === menuItem.nmenucode) {\r\n                menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\r\n                    moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\r\n                        //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\r\n                        //  if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\r\n                        defaultSearch.push({ ...formItem, smodulename: moduleItem.sdisplayname })\r\n                        //   }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        this.setState({\r\n            defaultSearch,\r\n            menuClick: true, nmenucode: menu.nmenucode\r\n        })\r\n    }\r\n\r\n    getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, nmenucode, smodulename) => {\r\n\r\n        if (this.props.Login.userInfo.nformcode !== formCode) {\r\n           \r\n            const userInfo = {\r\n                ...this.props.Login.userInfo, \"nformcode\": formCode,\r\n                \"nmodulecode\": moduleCode, \"sformname\": formname.sdisplayname, smodulename: smodulename\r\n            }\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": userInfo,\r\n                settings : this.props.Login.settings,\r\n                currentdate: formatInputDate(new Date(), true) },\r\n                classUrl, methodUrl, displayName, key: \"MenuId_\" + nmenucode,\r\n            };\r\n\r\n            this.props.callService(inputParam);\r\n        }\r\n    }\r\n\r\n    onClickButton = (forms) => {\r\n        const { history } = this.props;\r\n        history.push('/' + forms.sclassname);\r\n        if (this.inputRef.current)\r\n            this.inputRef.current.value = \"\"\r\n        this.setState({ defaultSearch: [], searchText: \"\", menuClick: false, showSearch: false, fullView: false ,showAlertDashBoard:true})\r\n        this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n            forms.nformcode, forms.sdisplayname, forms.nmodulecode, forms, forms.nmenucode, forms.smodulename)\r\n    }\r\n    menuHide = () => {\r\n        this.setState({ fullView: false,showAlertDashBoard:true })\r\n    }\r\n    layOutGetHome = (updateInfo, form) => {\r\n        const { history } = this.props;\r\n        history.push('/' + updateInfo.data.shomename);\r\n        if (this.inputRef.current)\r\n            this.inputRef.current.value = \"\"\r\n        this.setState({ defaultSearch: [], searchText: \"\", menuClick: false, fullView: true,showAlertDashBoard:false })\r\n        if (updateInfo.data.shomename === 'dashboard') {\r\n            this.props.updateStore(updateInfo);\r\n            this.props.getDashBoardForHome(updateInfo);\r\n            this.props.getListAlert(updateInfo.data.userInfo, true)\r\n        } else if (updateInfo.data.shomename === 'apiservice') {\r\n            const inputParam = {\r\n                inputData: { \r\n                 settings : this.props.Login.settings,\r\n                 currentdate: formatInputDate(new Date(), true) ,\"userinfo\": updateInfo.data.userInfo},\r\n                 serviceNeed: true,...updateInfo.data, \"userinfo\": updateInfo.data.userInfo,\r\n            };\r\n            this.props.callService(inputParam);\r\n            this.props.getListAlert(updateInfo.data.userInfo, true)\r\n        }\r\n        else {\r\n            this.props.updateStore(updateInfo);\r\n            this.props.getListAlert(updateInfo.data.userInfo, true)\r\n        }\r\n        // ALPD-4794- Changed by Neeraj\r\n        this.myDiv.addEventListener('onKeyPress', this.handleKey);\r\n        this.myDiv.focus();\r\n    }\r\n    layOutGetHomeCancel = () => {\r\n        const { history } = this.props;\r\n        let { menuClick, defaultSearch, searchText } = this.state\r\n\r\n        if (this.inputRef.current && this.inputRef.current.value !== \"\") {\r\n            if (this.props.history.location.pathname === '/home') {\r\n                history.push('/home');\r\n            }\r\n            this.inputRef.current.value = \"\"\r\n            menuClick = false\r\n            defaultSearch = []\r\n            searchText = \"\"\r\n        } else {\r\n            if (menuClick) {\r\n                menuClick = true\r\n            }\r\n\r\n            if (this.inputRef.current) {\r\n                this.inputRef.current.value = \"\"\r\n            }\r\n\r\n        }\r\n        this.setState({ defaultSearch, searchText, showSearch: false, menuClick })\r\n        //this.props.updateStore(updateInfo);\r\n        //  this.props.layOutGetHome(updateInfo)\r\n    }\r\n    menuFullview = () => {\r\n        let { fullView } = this.state;\r\n        this.setState({ fullView: !this.state.fullView })\r\n    }\r\n    toggleSearch = () => {\r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n    onChangeRol = (roleItem) => {\r\n        this.setState({ menuClick:false,showAlertDashBoard:false  ,showSearch:false,searchText:\"\" })\r\n        const parameterInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { menuDesign: [], navigation: \"\" }\r\n          }\r\n          this.props.updateStore(parameterInfo);\r\n          const userInfo = this.props.Login.userInfo;\r\n          const inputParam = {\r\n            nusermultisitecode: userInfo.nusersitecode,\r\n            slanguagetypecode: userInfo.slanguagetypecode,\r\n            nusermultirolecode: roleItem.nusermultirolecode,\r\n            nuserrolecode: roleItem.nuserrolecode,\r\n            nmastersitecode: userInfo.nmastersitecode,\r\n            nlogintypecode: userInfo.nlogintypecode,\r\n            userinfo: userInfo\r\n          }\r\n          this.props.submitChangeRole(inputParam);\r\n    }\r\n\r\n    onChangeOwer=(item, role)=>{\r\n        this.setState({ menuClick:false ,showAlertDashBoard:false,showSearch:false,searchText:\"\" })\r\n        const parameterInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { menuDesign: [], navigation: \"\" }\r\n          }\r\n          this.props.updateStore(parameterInfo);\r\n          const inputData = {\r\n            nuserrolecode: item.nuserrolecode,\r\n            suserrolename: item.suserrolename,\r\n            nusercode: item.nusercode,\r\n            sdeputyid: item.sdeputyid,\r\n            userinfo: this.props.Login.userInfo\r\n          }\r\n          this.props.changeOwner(inputData);\r\n    }\r\n\r\n\r\n    // selectInputOnChange = (event) => {\r\n    //     let password = \"\"\r\n    //     if (event !== null) {\r\n    //         password = event.target.value\r\n    //     }\r\n    //     this.setState({ password: password })\r\n    // }\r\n    handleResize = () => {\r\n        this.setState({          \r\n            isDesktop: (window.innerWidth) >= 1280,\r\n            isPortrait: (window.innerWidth) >= 1024,\r\n        });\r\n      }\r\n      // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\r\n    maintenanceBreakPopUp(breakTime){\r\n        this.confirmMessage.confirm(\r\n            \"MaintainceBreakMessage\",\r\n            intl.formatMessage({\r\n                id: \"IDS_MAINTAINCEBREAK\"\r\n            }),\r\n            intl.formatMessage({\r\n                id: \"IDS_MAINTAINCEBREAKMESSAGE\"\r\n            }),\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            false,\r\n            undefined,\r\n            breakTime\r\n        );\r\n    }\r\n\r\n    // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\r\n    maintenanceBreakTrigger() {\r\n        let MaintenanceBreak = 0;\r\n        if (PostgreSQLMaintenance.STARTHOUR > PostgreSQLMaintenance.ENDHOUR) {\r\n            const minutesLeftToday = (60 - PostgreSQLMaintenance.STARTMINUTE) + ((23 - PostgreSQLMaintenance.STARTHOUR) * 60);\r\n            const minutesNextDay = (PostgreSQLMaintenance.ENDHOUR * 60) + PostgreSQLMaintenance.ENDMINUTE;\r\n            MaintenanceBreak = minutesLeftToday + minutesNextDay;\r\n        } else if (PostgreSQLMaintenance.STARTHOUR < PostgreSQLMaintenance.ENDHOUR) {\r\n            MaintenanceBreak = ((PostgreSQLMaintenance.ENDHOUR - PostgreSQLMaintenance.STARTHOUR) * 60)\r\n                - PostgreSQLMaintenance.STARTMINUTE + PostgreSQLMaintenance.ENDMINUTE;\r\n        } else {\r\n            MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - PostgreSQLMaintenance.STARTMINUTE;\r\n        }    \r\n    \r\n        rsapi.post(\"/login/getJavaTime\", {})\r\n            .then(response => {\r\n                \r\n                this.date.setHours(response.data.Hours);\r\n                this.date.setMinutes(response.data.Minutes);\r\n                this.date.setSeconds(response.data.Seconds);\r\n\r\n                const isMaintenanceTime = () => {\r\n                    if (\r\n                        (this.date.getHours() > PostgreSQLMaintenance.STARTHOUR || \r\n                        (this.date.getHours() === PostgreSQLMaintenance.STARTHOUR && this.date.getMinutes() >= PostgreSQLMaintenance.STARTMINUTE)) &&\r\n                        (this.date.getHours() < PostgreSQLMaintenance.ENDHOUR || \r\n                        (this.date.getHours() === PostgreSQLMaintenance.ENDHOUR && this.date.getMinutes() < PostgreSQLMaintenance.ENDMINUTE))\r\n                    ) {\r\n                        MaintenanceBreak = PostgreSQLMaintenance.ENDMINUTE - this.date.getMinutes();\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                };\r\n                \r\n                const incrementTimeByMinute = () => {\r\n                    this.date.setMinutes(this.date.getMinutes() + 1);\r\n                    if (this.date.getMinutes() === 60) {\r\n                        this.date.setMinutes(0);\r\n                        this.date.setHours(this.date.getHours() + 1);\r\n                    }\r\n                    if (this.date.getHours() === 24) {\r\n                        this.date.setHours(0);\r\n                    }\r\n                };\r\n                \r\n                const maintenanceCheck = () => {\r\n                    if (isMaintenanceTime()) {\r\n                        this.maintenanceBreakPopUp(60000 * MaintenanceBreak);\r\n                    }\r\n                };\r\n\r\n                maintenanceCheck();\r\n                \r\n                setTimeout(() => {\r\n                    incrementTimeByMinute();\r\n                    maintenanceCheck();\r\n\r\n                    setInterval(() => {\r\n                        incrementTimeByMinute();\r\n                        maintenanceCheck();\r\n                    }, 60000);\r\n\r\n                }, (60 - (this.date.getSeconds() + 1)) * 1000);\r\n            })\r\n            .catch(e => {\r\n                console.error(\"Error fetching login info\", e);\r\n            });\r\n    \r\n    }\r\n    componentDidMount() {\r\n        if(this.state.isPortrait){\r\n            this.myDiv.addEventListener('onKeyPress', this.handleKey);\r\n            this.myDiv.focus();\r\n        }  \r\n        window.addEventListener(\"resize\", this.handleResize);\r\n         // Gowtham R -- ALPD-5190 -- 14/12/2024 -- for Vacuum Start\r\n         this.maintenanceBreakTrigger();\r\n    }\r\n\r\n    \r\n    componentWillUnmount() {\r\n        if(this.state.isPortrait){\r\n            this.myDiv.removeEventListener('onKeyPress', this.handleKey);        \r\n            this.setState({isDark:false});\r\n            document.body.classList.remove('dark'); \r\n        }\r\n        window.removeEventListener(\"resize\", this.handleResize);\r\n    }\r\n    \r\n    handleKey = e => {\r\n        if(this.props.history.location.pathname === \"/home\" && e.target.name === undefined) {\r\n            let defaultSearch = [] \r\n            this.props.Login.menuDesign.map((menuItem, index) => {\r\n                menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\r\n                    moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {                    \r\n                        if (formItem.sdisplayname.toLowerCase().includes(e.key.toLowerCase())) {\r\n                            defaultSearch.push({ ...formItem, smodulename: moduleItem.sdisplayname })\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            // ALPD-5296    Modified code for Enter value display when click enter button in the home page search box by Vishakh\r\n            this.setState({ defaultSearch, searchText: e.charCode === 13 ? '' : e.key.toLowerCase(), menuClick: false,showSearch: !this.state.showSearch }) \r\n        }         \r\n    }\r\n\r\n    render() {\r\n        this.confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n              \r\n                <div id=\"app-wrapper\">\r\n                    <IdleTimer\r\n                        ref={ref => { this.idleTimer = ref }}\r\n                        element={document}\r\n                        onActive={this._onActive}\r\n                        onAction={this._onAction}\r\n                        onIdle={this._onIdle}\r\n                        debounce={250}\r\n                        timeout={this.state.timeout} />\r\n                    {this.props.Login.idleneed ?\r\n                        <IdleTimeOutModal\r\n                            showIdleModal={this.state.showIdleModal}\r\n                            handleLogin={this.handleLogin}\r\n                            handleLogout={this.handleLogout}\r\n                            UserInfo={this.props.Login.userInfo}\r\n                            passwordref={this.password}\r\n                            //selectInputOnChange={this.selectInputOnChange}\r\n                            //commented by Syed on 27-SEP-2024\r\n                            //idealTime={this.props.Login.idleTimeout}\r\n                            //Added by Syed on 27-SEP-2024 - IDLE TIME OUT FROM SETTINGS TABLE\r\n                            idealTime={this.props.Login.idleTimeout * (this.props.Login.settings && parseInt(this.props.Login.settings[1]))}\r\n                            Login={this.props.Login}\r\n                            sessionExpired={this.state.sessionExpired}\r\n                            enterKeyLogin={this.enterKeyLogin}\r\n                            renderer={this.renderer} />\r\n                        : \"\"}\r\n\r\n                    \r\n                    {this.state.isDesktop?\r\n                        <Sidebar history={this.props} layOutGetHome={this.layOutGetHome} inputRef={this.inputRef} fullView={this.state.fullView} menuHide={this.menuHide} menuFullview={this.menuFullview}\r\n                        pinMenu={this.pinMenu} data={this.state.lenghtDvv} sidebarview={this.state.sidebarview} isPinned={this.state.isPinned}\r\n                        />: <SidebarTablet history={this.props} layOutGetHome={this.layOutGetHome} inputRef={this.inputRef} fullView={this.state.fullView} menuHide={this.menuHide} menuFullview={this.menuFullview}\r\n                        pinMenu={this.pinMenu} data={this.state.lenghtDvv} sidebarview={this.state.sidebarview} isPinned={this.state.isPinned}/>\r\n                    }\r\n                  {/* change password by Neeraj */}\r\n                    <div id=\"content-wrapper\" className={`d-flex flex-column`} ref={ref => this.myDiv = ref} tabIndex=\"0\"  \r\n                    //// ALPD-4794- Changed by Neeraj\r\n                    onKeyPress={ this.props.Login.screenName ===\"IDS_CHANGEPASSWORD\"?\"\":this.handleKey} \r\n                        >\r\n                        <div id=\"content\">\r\n                            <Header history={this.props} layOutGetHomeCancel={this.layOutGetHomeCancel} fullView={this.state.fullView} \r\n                            darkMode={this.darkMode} isDark={this.state.isDark} isDesktop={this.state.isDesktop}\r\n                            visible={this.state.visible} menuFullview={this.menuFullview} toggleSearch={this.toggleSearch} showSearch={this.state.showSearch} searchBar={\r\n                                <SearchBar options={this.state.defaultSearch}\r\n                                    optionDisplayMember={'sdisplayname'}\r\n                                    onClickButton={this.onClickButton}\r\n                                    onInputChange={this.onInputChangeSearch}\r\n                                    onInputChange1={this.onInputChangeSearch1}\r\n                                    pathname={this.props.history.location.pathname}\r\n                                    inputRef={this.inputRef}\r\n                                    intl={this.props.intl}\r\n                                    searchText={this.state.searchText}\r\n\r\n                                /> } \r\n                                onChangeRol={this.onChangeRol} \r\n                                onChangeOwer={this.onChangeOwer} \r\n                                showAlertDashBoard={this.state.showAlertDashBoard}/>\r\n                            <div className={`container-fluid px-0  ${!this.state.fullView ? 'sidebar-fullview':''}`}>\r\n                                <ScrollToTop>\r\n                                    <Switch>\r\n                                        {routes.map((route, index) => {\r\n                                            return route.component ? (\r\n                                                <Route\r\n                                                    key={index}\r\n                                                    path={route.path}\r\n                                                    exact={route.exact}\r\n                                                    name={route.name}\r\n                                                    render={props => (\r\n                                                        <route.component\r\n                                                            onClickSearchMenu={this.onClickSearchMenu}\r\n                                                            onClickSearchForm={this.onClickButton}\r\n                                                            menuClick={this.state.menuClick}\r\n                                                            onClickBackToMenu={this.onClickBackToMenu}\r\n                                                            searchText={this.state.searchText} defaultSearch={this.state.defaultSearch} {...props}\r\n                                                            parentFunction={this.parentFunction}\r\n                                                            carRef={this.carRef}\r\n                                                            carRef1={this.carRef1}\r\n                                                            data={this.state.lenghtDvv}\r\n                                                            sidebarview={this.state.sidebarview} \r\n                                                            isPinned={this.state.isPinned}\r\n                                                              />\r\n                                                    )} />\r\n                                            ) : (null);\r\n                                        })}\r\n                                    </Switch>\r\n                                </ScrollToTop>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                   <>\r\n                  <div class=\"align-items-center login-info-portrait\">\r\n                    <img src={iconScreenSize} className=\"img-fluid border\"  />\r\n                    <h5 className='m-4 p-4 text-center'>\"This message typically indicates that the application or website you're trying to access requires a screen resolution of 1024 pixels or wider to display properly. If you're using a tablet, please turn it to landscape mode. This requirement ensures a good user experience and proper layout.\"</h5>\r\n                  </div>\r\n                  \r\n                  </>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLayout.propTypes = {\r\n    match: PropTypes.any.isRequired,\r\n    history: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { navPage, updateStore, callService, getDashBoardForHome,getListAlert,submitChangeRole,changeOwner })(injectIntl(Layout));"]},"metadata":{},"sourceType":"module"}