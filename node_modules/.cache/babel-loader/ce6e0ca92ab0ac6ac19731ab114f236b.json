{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\MAHContact.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { MediaLabel } from '../../components/add-client.styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { toast } from 'react-toastify';\nimport AddMAHContact from './AddMAHContact';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { showEsign, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { transactionStatus } from '../../components/Enumeration'; //import ReactTooltip from 'react-tooltip';\n\nclass MAHContact extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.mahDataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.masterData[\"MAHContact\"], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.expandChange = event => {\n      const isExpanded = event.dataItem.expanded === undefined ? event.dataItem.aggregates : event.dataItem.expanded;\n      event.dataItem.expanded = !isExpanded;\n      this.setState({ ...this.props\n      });\n    };\n\n    this.detailBand = props => {\n      const Dataitem = props.dataItem;\n      const OptionalFieldList = [{\n        datafield: \"sphoneno\",\n        Column: \"Phone No\"\n      }, {\n        datafield: \"smobileno\",\n        Column: \"Mobile No\"\n      }, {\n        datafield: \"sfaxno\",\n        Column: \"Fax No\"\n      }];\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, OptionalFieldList.map(fields => {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: fields.Column,\n          message: fields.Column,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 40\n          }\n        })), /*#__PURE__*/React.createElement(MediaLabel, {\n          className: \"readonly-text font-weight-normal\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }\n        }, Dataitem[fields.datafield])));\n      }));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord;\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openChildModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.getTabContent = event => {\n      this.setState({\n        activeTab: event.currentTarget.name\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n\n      if (fieldName === \"ndeputyusersitecode\") {\n        this.state.deputyUserList.map(item => {\n          if (item.nusersitecode === comboData.value) {\n            selectedRecord[\"sdeputyname\"] = item.sfirstname + \" \" + item.slastname;\n          }\n\n          return null;\n        });\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        // if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\n        //     event.target.value = validatePhoneNumber(event.target.value);\n        //     if (event.target.value !== \"\") {\n        //         selectedRecord[event.target.name] = event.target.value;\n        //     }\n        // }\n        // else {\n        //     selectedRecord[event.target.name] = event.target.value;\n        // }\n        if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.state.selectedRecord['semail'] ? validateEmail(this.state.selectedRecord['semail']) : true) {\n        //add / edit  \n        let inputParam = {};\n\n        if (this.props.screenName === \"MAH Contact\") {\n          inputParam = this.saveMAHContact(saveType, formRef);\n        }\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.deleteRecord = deleteparam => {\n      if (deleteparam.selectedRecord.expanded !== undefined) {\n        delete deleteparam.selectedRecord.expanded;\n      }\n\n      if (this.props.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.masterData.SelectedMAHolder.stranstatus\n        }));\n      } else {\n        const inputParam = {\n          classUrl: \"marketauthorisationholdercontact\",\n          methodUrl: deleteparam.methodUrl,\n          inputData: {\n            [deleteparam.methodUrl.toLowerCase()]: deleteparam.selectedRecord,\n            \"userinfo\": this.props.userInfo\n          },\n          operation: deleteparam.operation,\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, deleteparam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              openChildModal: true,\n              screenName: deleteparam.screenName,\n              operation: deleteparam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    this.detailedFieldList = [{\n      dataField: \"sphoneno\",\n      idsName: \"IDS_PHONENO\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"smobileno\",\n      idsName: \"IDS_MOBILENO\",\n      columnSize: \"4\"\n    }, {\n      dataField: \"sfaxno\",\n      idsName: \"IDS_FAXNO\",\n      columnSize: \"4\"\n    } //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\n    //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\n    ];\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      isOpen: false,\n      selectedRecord: {},\n      dataResult: [],\n      activeTab: 'MAHContact-tab',\n      dataState: dataState\n    };\n    this.holderFieldList = ['nmahcode', 'smahcontactname', 'sphoneno', 'smobileno', 'sfaxno', 'semail', 'ndefaultstatus']; //'nmahcode',\n\n    this.mahContactColumnList = [{\n      \"idsName\": \"IDS_MAHCONTACTNAME\",\n      \"dataField\": \"smahcontactname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_EMAIL\",\n      \"dataField\": \"semail\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"alertPreFix\": this.props.intl.formatMessage({\n        id: \"IDS_VALID\"\n      }),\n      \"validateFunction\": validateEmail,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_DEFAULT\",\n      \"dataField\": \"sdisplaystatus\",\n      \"width\": \"150px\",\n      \"isIdsField\": true,\n      \"controlName\": \"ndefaultstatus\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  render() {\n    const addMAHContactId = this.props.controlMap.has(\"AddMAHContact\") && this.props.controlMap.get(\"AddMAHContact\").ncontrolcode;\n    const editMAHContactId = this.props.controlMap.has(\"EditMAHContact\") && this.props.controlMap.get(\"EditMAHContact\").ncontrolcode;\n    const deleteMAHContactId = this.props.controlMap.has(\"DeleteMAHContact\") && this.props.controlMap.get(\"DeleteMAHContact\").ncontrolcode;\n    const mahAddParam = {\n      screenName: \"MAH Contact\",\n      operation: \"create\",\n      primaryKeyField: \"nmahcontactcode\",\n      masterData: this.props.masterData,\n      userInfo: this.props.userInfo,\n      ncontrolCode: addMAHContactId\n    };\n    const mahEditParam = {\n      screenName: \"MAH Contact\",\n      operation: \"update\",\n      primaryKeyField: \"nmahcontactcode\",\n      masterData: this.props.masterData,\n      userInfo: this.props.userInfo,\n      ncontrolCode: editMAHContactId\n    };\n    const mahDeleteParam = {\n      screenName: \"MAHolder\",\n      methodUrl: \"MarketAuthorisationHolderContact\",\n      operation: \"delete\",\n      ncontrolCode: deleteMAHContactId\n    };\n    const mandatoryFields = [];\n    this.mahContactColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card //className=\"at-tabs border-0\"\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"add-txt-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MAHCONTACT\",\n      defaultMessage: \"MAH Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 42\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        paddingTop: 'unset'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters text-right border-bottom pt-2 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addMAHContactId) === -1 // data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMAHCONTACT\" })}\n      ,\n      onClick: () => this.props.getMAHContactComboDataService(mahAddParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MAHCONTACT\",\n      defaultMessage: \"MAHContact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nmahcontactcode\",\n      expandField: \"expanded\",\n      detailedFieldList: this.detailedFieldList,\n      data: this.props.masterData[\"MAHContact\"],\n      dataResult: process(this.props.masterData[\"MAHContact\"], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.mahDataStateChange,\n      extractedColumnList: this.mahContactColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      methodUrl: \"MAHContact\" // methodUrl=\"MarketAuthorisationHolderContact\"\n      ,\n      fetchRecord: this.props.getMAHContactComboDataService,\n      editParam: mahEditParam,\n      deleteRecord: this.deleteRecord,\n      deleteParam: mahDeleteParam,\n      pageable: true,\n      scrollable: \"scrollable\" //gridHeight={\"600px\"}\n      //isComponent={false}\n      ,\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: this.props.selectedId,\n      hasDynamicColSize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }))))))), this.props.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.onSaveClick,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation,\n        formatMessage: this.props.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddMAHContact, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.formatMessage,\n        selectedMAHolder: this.props.masterData.SelectedMAHolder || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.masterData !== previousProps.masterData) {\n      let {\n        dataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        dataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      let isOpen = false;\n\n      if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\n        isOpen = true;\n      }\n\n      this.setState({\n        isOpen,\n        activeTab: 'MAHContact-tab',\n        dataState\n      });\n    }\n\n    if (this.props.selectedRecord !== previousProps.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.selectedRecord\n      });\n    }\n  } // getMAHContactComboDataService(screenName, operation, primaryKeyName, primaryKeyValue) {\n  //     if (this.props.masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\n  //         const contactData = {\n  //             \"nmahcontactcode\": primaryKeyValue, nmahcode: this.props.masterData.SelectedMAHolder.nmahcode, //nmastersitecode: maHolder.nsitecode,\n  //             \"userinfo\": this.props.userInfo\n  //         };\n  //         const contactService = rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\", contactData);\n  //         let urlArray = [];\n  //         if (operation === \"create\") {\n  //             urlArray = [contactService];\n  //         }\n  //         else {\n  //             const contactById = rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.userInfo });\n  //             urlArray = [contactService, contactById];\n  //         }\n  //         Axios.all(urlArray)\n  //             .then(response => {\n  //                 let selectedRecord = undefined;\n  //                 if (operation === \"update\") {\n  //                     selectedRecord = response[1].data;\n  //                     selectedRecord[\"nmahcontactcode\"] = response[1].data[\"nmahcontactcode\"];\n  //                 }\n  //                 this.setState({\n  //                     isOpen: true,\n  //                     operation, screenName,\n  //                     selectedRecord\n  //                 });\n  //             })\n  //             .catch(error => {\n  //                 if (error.response.status === 500) {\n  //                     toast.error(error.message);\n  //                 }\n  //                 else {\n  //                     toast.warn(this.props.formatMessage({ id: error.response.data }));\n  //                 }\n  //             })\n  //     }\n  //     else {\n  //         toast.warn(this.props.formatMessage({ id: this.props.masterData.SelectedUser.sactivestatus }));\n  //     }\n  // }\n\n\n  saveMAHContact(saveType, formRef) {\n    let inputData = [];\n    let dataState = undefined;\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"marketauthorisationholder\"] = this.props.masterData.SelectedMAHolder;\n    inputData[\"marketauthorisationholdercontact\"] = {};\n    let selectedId = null;\n\n    if (this.props.operation === \"update\") {\n      // edit\n      inputData[\"marketauthorisationholdercontact\"] = this.state.selectedRecord;\n      selectedId = this.state.selectedRecord.nmahcontactcode;\n      dataState = this.state.dataState;\n    }\n\n    this.holderFieldList.map(item => {\n      return inputData[\"marketauthorisationholdercontact\"][item] = this.state.selectedRecord[item];\n    });\n    inputData[\"marketauthorisationholdercontact\"][\"nmahcode\"] = this.props.masterData.SelectedMAHolder.nmahcode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n    const inputParam = {\n      classUrl: \"marketauthorisationholdercontact\",\n      methodUrl: \"MarketAuthorisationHolderContact\",\n      inputData: inputData,\n      selectedId,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState\n    };\n    return inputParam;\n  }\n\n}\n\nexport default injectIntl(MAHContact);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/MAHContact.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPlus","MediaLabel","FormattedMessage","injectIntl","process","SlideOutModal","toast","AddMAHContact","Esign","DEFAULT_RETURN","showEsign","validateEmail","validatePhoneNumber","DataGrid","transactionStatus","MAHContact","Component","constructor","props","mahDataStateChange","event","setState","dataResult","masterData","dataState","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","detailBand","Dataitem","OptionalFieldList","datafield","Column","map","fields","closeModal","loadEsign","openChildModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","updateStore","getTabContent","activeTab","currentTarget","name","onComboChange","comboData","fieldName","state","deputyUserList","item","nusersitecode","value","sfirstname","slastname","onInputOnChange","target","type","checked","ACTIVE","DEACTIVE","YES","NO","onSaveClick","saveType","formRef","inputParam","screenName","saveMAHContact","esignRights","userInfo","nformcode","ncontrolCode","screenData","crudMaster","warn","intl","formatMessage","id","deleteRecord","deleteparam","SelectedMAHolder","ntransactionstatus","RETIRED","stranstatus","classUrl","methodUrl","inputData","toLowerCase","validateEsign","sreason","password","validateEsignCredential","detailedFieldList","dataField","idsName","columnSize","skip","take","settings","parseInt","isOpen","holderFieldList","mahContactColumnList","render","addMAHContactId","controlMap","has","get","ncontrolcode","editMAHContactId","deleteMAHContactId","mahAddParam","primaryKeyField","mahEditParam","mahDeleteParam","mandatoryFields","forEach","mandatory","push","paddingTop","userRoleControlRights","indexOf","getMAHContactComboDataService","componentDidUpdate","previousProps","errorCode","nmahcontactcode","nmahcode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,SAA9B,EAAyCC,SAAzC,QAA0D,iBAA1D;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,mBAAnC,QAA8D,+BAA9D;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,iBAAT,QAAkC,8BAAlC,C,CACA;;AAEA,MAAMC,UAAN,SAAyBvB,KAAK,CAACwB,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;;AADe,SAoBnBC,kBApBmB,GAoBGC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAElB,OAAO,CAAC,KAAKc,KAAL,CAAWK,UAAX,CAAsB,YAAtB,CAAD,EAAsCH,KAAK,CAACI,SAA5C,CADT;AAEVA,QAAAA,SAAS,EAAEJ,KAAK,CAACI;AAFP,OAAd;AAIH,KAzBkB;;AAAA,SA4MnBC,YA5MmB,GA4MHL,KAAD,IAAW;AACtB,YAAMM,UAAU,GACZN,KAAK,CAACO,QAAN,CAAeC,QAAf,KAA4BC,SAA5B,GACIT,KAAK,CAACO,QAAN,CAAeG,UADnB,GACgCV,KAAK,CAACO,QAAN,CAAeC,QAFnD;AAGAR,MAAAA,KAAK,CAACO,QAAN,CAAeC,QAAf,GAA0B,CAACF,UAA3B;AACA,WAAKL,QAAL,CAAc,EAAE,GAAG,KAAKH;AAAV,OAAd;AACH,KAlNkB;;AAAA,SAmNnBa,UAnNmB,GAmNLb,KAAD,IAAW;AAEpB,YAAMc,QAAQ,GAAGd,KAAK,CAACS,QAAvB;AACA,YAAMM,iBAAiB,GAAG,CACtB;AAAEC,QAAAA,SAAS,EAAE,UAAb;AAAyBC,QAAAA,MAAM,EAAE;AAAjC,OADsB,EAEtB;AAAED,QAAAA,SAAS,EAAE,WAAb;AAA0BC,QAAAA,MAAM,EAAE;AAAlC,OAFsB,EAGtB;AAAED,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAHsB,CAA1B;AAMA,0BAAQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHF,iBAAiB,CAACG,GAAlB,CAAuBC,MAAD,IAAY;AAC/B,4BACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAW,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAEA,MAAM,CAACF,MAA7B;AAAqC,UAAA,OAAO,EAAEE,MAAM,CAACF,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX,CADJ,eAEI,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAC,kCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0DH,QAAQ,CAACK,MAAM,CAACH,SAAR,CAAlE,CAFJ,CADJ,CADJ;AAQH,OATA,CADG,CAAR;AAaH,KAzOkB;;AAAA,SA2OnBI,UA3OmB,GA2ON,MAAM;AACf,UAAIC,SAAS,GAAG,KAAKrB,KAAL,CAAWqB,SAA3B;AACA,UAAIC,cAAc,GAAG,KAAKtB,KAAL,CAAWsB,cAAhC;AACA,UAAIC,cAAc,GAAG,KAAKvB,KAAL,CAAWuB,cAAhC;;AACA,UAAI,KAAKvB,KAAL,CAAWqB,SAAf,EAA0B;AACtB,YAAI,KAAKrB,KAAL,CAAWwB,SAAX,KAAyB,QAA7B,EAAuC;AACnCH,UAAAA,SAAS,GAAG,KAAZ;AACAC,UAAAA,cAAc,GAAG,KAAjB;AACAC,UAAAA,cAAc,GAAG,EAAjB;AACH,SAJD,MAKK;AACDF,UAAAA,SAAS,GAAG,KAAZ;AACH;AACJ,OATD,MAUK;AACDC,QAAAA,cAAc,GAAG,KAAjB;AACAC,QAAAA,cAAc,GAAG,EAAjB;AACH;;AAED,YAAME,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEnC,cADK;AAEfoC,QAAAA,IAAI,EAAE;AAAEL,UAAAA,cAAF;AAAkBD,UAAAA,SAAlB;AAA6BE,UAAAA,cAA7B;AAA6CK,UAAAA,UAAU,EAAE;AAAzD;AAFS,OAAnB;AAIA,WAAK5B,KAAL,CAAW6B,WAAX,CAAuBJ,UAAvB;AAEH,KApQkB;;AAAA,SAsQnBK,aAtQmB,GAsQF5B,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAE4B,QAAAA,SAAS,EAAE7B,KAAK,CAAC8B,aAAN,CAAoBC;AAAjC,OAAd;AACH,KAxQkB;;AAAA,SA0QnBC,aA1QmB,GA0QH,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACtC,YAAMb,cAAc,GAAG,KAAKc,KAAL,CAAWd,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACa,SAAD,CAAd,GAA4BD,SAA5B;AAAsC;;AAEtC,UAAIC,SAAS,KAAK,qBAAlB,EAAyC;AACrC,aAAKC,KAAL,CAAWC,cAAX,CAA0BpB,GAA1B,CAA8BqB,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACC,aAAL,KAAuBL,SAAS,CAACM,KAArC,EAA4C;AACxClB,YAAAA,cAAc,CAAC,aAAD,CAAd,GAAgCgB,IAAI,CAACG,UAAL,GAAkB,GAAlB,GAAwBH,IAAI,CAACI,SAA7D;AACH;;AACD,iBAAO,IAAP;AACH,SALD;AAMH;;AACD,WAAKxC,QAAL,CAAc;AAAEoB,QAAAA;AAAF,OAAd;AAEH,KAxRkB;;AAAA,SA0RnBqB,eA1RmB,GA0RA1C,KAAD,IAAW;AACzB,YAAMqB,cAAc,GAAG,KAAKc,KAAL,CAAWd,cAAX,IAA6B,EAApD;;AACA,UAAIrB,KAAK,CAAC2C,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClC,YAAI5C,KAAK,CAAC2C,MAAN,CAAaZ,IAAb,KAAsB,oBAA1B,EACIV,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAd,GAAoC/B,KAAK,CAAC2C,MAAN,CAAaE,OAAb,KAAyB,IAAzB,GAAgCnD,iBAAiB,CAACoD,MAAlD,GAA2DpD,iBAAiB,CAACqD,QAAjH,CADJ,CAEA;AACA;AAHA,aAKI1B,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAd,GAAoC/B,KAAK,CAAC2C,MAAN,CAAaE,OAAb,KAAyB,IAAzB,GAAgCnD,iBAAiB,CAACsD,GAAlD,GAAwDtD,iBAAiB,CAACuD,EAA9G;AACP,OAPD,MAQK;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAIjD,KAAK,CAAC2C,MAAN,CAAaZ,IAAb,KAAsB,UAAtB,IAAoC/B,KAAK,CAAC2C,MAAN,CAAaZ,IAAb,KAAsB,WAA1D,IAAyE/B,KAAK,CAAC2C,MAAN,CAAaZ,IAAb,KAAsB,QAAnG,EAA6G;AACzG,cAAI/B,KAAK,CAAC2C,MAAN,CAAaJ,KAAb,KAAuB,EAA3B,EAA+B;AAC3BvC,YAAAA,KAAK,CAAC2C,MAAN,CAAaJ,KAAb,GAAqB/C,mBAAmB,CAACQ,KAAK,CAAC2C,MAAN,CAAaJ,KAAd,CAAxC;AACAlB,YAAAA,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAd,GAAoC/B,KAAK,CAAC2C,MAAN,CAAaJ,KAAb,KAAuB,EAAvB,GAA4BvC,KAAK,CAAC2C,MAAN,CAAaJ,KAAzC,GAAiDlB,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAnG;AACH,WAHD,MAGO;AACHV,YAAAA,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAd,GAAoC/B,KAAK,CAAC2C,MAAN,CAAaJ,KAAjD;AACH;AACJ,SAPD,MAQK;AACDlB,UAAAA,cAAc,CAACrB,KAAK,CAAC2C,MAAN,CAAaZ,IAAd,CAAd,GAAoC/B,KAAK,CAAC2C,MAAN,CAAaJ,KAAjD;AACH;AACJ;;AACD,WAAKtC,QAAL,CAAc;AAAEoB,QAAAA;AAAF,OAAd;AACH,KA3TkB;;AAAA,SAyYnB6B,WAzYmB,GAyYL,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjC,UAAI,KAAKjB,KAAL,CAAWd,cAAX,CAA0B,QAA1B,IAAsC9B,aAAa,CAAC,KAAK4C,KAAL,CAAWd,cAAX,CAA0B,QAA1B,CAAD,CAAnD,GAA2F,IAA/F,EAAqG;AACjG;AACA,YAAIgC,UAAU,GAAG,EAAjB;;AAEA,YAAI,KAAKvD,KAAL,CAAWwD,UAAX,KAA0B,aAA9B,EAA6C;AACzCD,UAAAA,UAAU,GAAG,KAAKE,cAAL,CAAoBJ,QAApB,EAA8BC,OAA9B,CAAb;AACH;;AAGD,YAAI9D,SAAS,CAAC,KAAKQ,KAAL,CAAW0D,WAAZ,EAAyB,KAAK1D,KAAL,CAAW2D,QAAX,CAAoBC,SAA7C,EAAwD,KAAK5D,KAAL,CAAW6D,YAAnE,CAAb,EAA+F;AAC3F,gBAAMpC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEnC,cADK;AAEfoC,YAAAA,IAAI,EAAE;AACFN,cAAAA,SAAS,EAAE,IADT;AACeyC,cAAAA,UAAU,EAAE;AAAEP,gBAAAA,UAAF;AAAclD,gBAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK;AAArC,eAD3B;AAC8EgD,cAAAA;AAD9E;AAFS,WAAnB;AAMA,eAAKrD,KAAL,CAAW6B,WAAX,CAAuBJ,UAAvB;AACH,SARD,MASK;AACD,eAAKzB,KAAL,CAAW+D,UAAX,CAAsBR,UAAtB,EAAkC,KAAKvD,KAAL,CAAWK,UAA7C,EAAyD,gBAAzD;AACH;AACJ,OArBD,MAqBO;AACHjB,QAAAA,KAAK,CAAC4E,IAAN,CAAW,KAAKhE,KAAL,CAAWiE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAlakB;;AAAA,SAmcnBC,YAncmB,GAmcHC,WAAD,IAAiB;AAC5B,UAAIA,WAAW,CAAC9C,cAAZ,CAA2Bb,QAA3B,KAAwCC,SAA5C,EAAuD;AACnD,eAAO0D,WAAW,CAAC9C,cAAZ,CAA2Bb,QAAlC;AACH;;AACD,UAAI,KAAKV,KAAL,CAAWK,UAAX,CAAsBiE,gBAAtB,CAAuCC,kBAAvC,KAA8D3E,iBAAiB,CAAC4E,OAApF,EAA6F;AACzFpF,QAAAA,KAAK,CAAC4E,IAAN,CAAW,KAAKhE,KAAL,CAAWiE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE,KAAKnE,KAAL,CAAWK,UAAX,CAAsBiE,gBAAtB,CAAuCG;AAA7C,SAA9B,CAAX;AACH,OAFD,MAGK;AACD,cAAMlB,UAAU,GAAG;AACfmB,UAAAA,QAAQ,EAAE,kCADK;AAEfC,UAAAA,SAAS,EAAEN,WAAW,CAACM,SAFR;AAGfC,UAAAA,SAAS,EAAE;AACP,aAACP,WAAW,CAACM,SAAZ,CAAsBE,WAAtB,EAAD,GAAuCR,WAAW,CAAC9C,cAD5C;AAEP,wBAAY,KAAKvB,KAAL,CAAW2D;AAFhB,WAHI;AAQfnC,UAAAA,SAAS,EAAE6C,WAAW,CAAC7C,SARR;AASflB,UAAAA,SAAS,EAAE,KAAK+B,KAAL,CAAW/B;AATP,SAAnB;;AAYA,YAAId,SAAS,CAAC,KAAKQ,KAAL,CAAW0D,WAAZ,EAAyB,KAAK1D,KAAL,CAAW2D,QAAX,CAAoBC,SAA7C,EAAwDS,WAAW,CAACR,YAApE,CAAb,EAAgG;AAC5F,gBAAMpC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEnC,cADK;AAEfoC,YAAAA,IAAI,EAAE;AACFN,cAAAA,SAAS,EAAE,IADT;AACeyC,cAAAA,UAAU,EAAE;AAAEP,gBAAAA,UAAF;AAAclD,gBAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK;AAArC,eAD3B;AAEFiB,cAAAA,cAAc,EAAE,IAFd;AAEoBkC,cAAAA,UAAU,EAAEa,WAAW,CAACb,UAF5C;AAEwDhC,cAAAA,SAAS,EAAE6C,WAAW,CAAC7C;AAF/E;AAFS,WAAnB;AAOA,eAAKxB,KAAL,CAAW6B,WAAX,CAAuBJ,UAAvB;AACH,SATD,MAUK;AACD,eAAKzB,KAAL,CAAW+D,UAAX,CAAsBR,UAAtB,EAAkC,KAAKvD,KAAL,CAAWK,UAA7C,EAAyD,gBAAzD;AACH;AACJ;AACJ,KArekB;;AAAA,SAuenByE,aAvemB,GAueH,MAAM;AAClB,YAAMvB,UAAU,GAAG;AACfqB,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAG,KAAK5E,KAAL,CAAW2D,QADN;AAERoB,YAAAA,OAAO,EAAE,KAAK1C,KAAL,CAAWd,cAAX,CAA0B,eAA1B;AAFD,WADL;AAKPyD,UAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWd,cAAX,CAA0B,eAA1B;AALH,SADI;AAQfuC,QAAAA,UAAU,EAAE,KAAK9D,KAAL,CAAW8D;AARR,OAAnB;AAUA,WAAK9D,KAAL,CAAWiF,uBAAX,CAAmC1B,UAAnC,EAA+C,gBAA/C;AACH,KAnfkB;;AAAA,SAqfnB2B,iBArfmB,GAqfC,CAChB;AAAEC,MAAAA,SAAS,EAAE,UAAb;AAAyBC,MAAAA,OAAO,EAAE,aAAlC;AAAkDC,MAAAA,UAAU,EAAC;AAA7D,KADgB,EAEhB;AAAEF,MAAAA,SAAS,EAAE,WAAb;AAA0BC,MAAAA,OAAO,EAAE,cAAnC;AAAoDC,MAAAA,UAAU,EAAC;AAA/D,KAFgB,EAGhB;AAAEF,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,OAAO,EAAE,WAAhC;AAA6CC,MAAAA,UAAU,EAAC;AAAxD,KAHgB,CAIhB;AACA;AALgB,KArfD;AAEf,UAAM/E,SAAS,GAAG;AACdgF,MAAAA,IAAI,EAAE,CADQ;AAEdC,MAAAA,IAAI,EAAG,KAAKvF,KAAL,CAAWwF,QAAX,GAAsBC,QAAQ,CAAC,KAAKzF,KAAL,CAAWwF,QAAX,CAAoB,EAApB,CAAD,CAA9B,GAA0D;AAFnD,KAAlB;AAIA,SAAKnD,KAAL,GAAa;AACTqD,MAAAA,MAAM,EAAE,KADC;AACMnE,MAAAA,cAAc,EAAE,EADtB;AAC0BnB,MAAAA,UAAU,EAAE,EADtC;AAET2B,MAAAA,SAAS,EAAE,gBAFF;AAGTzB,MAAAA,SAAS,EAAEA;AAHF,KAAb;AAKA,SAAKqF,eAAL,GAAuB,CAAC,UAAD,EAAa,iBAAb,EAAgC,UAAhC,EAA4C,WAA5C,EACnB,QADmB,EACT,QADS,EACC,gBADD,CAAvB,CAXe,CAY2B;;AAC1C,SAAKC,oBAAL,GACa,CAAC;AAAE,iBAAW,oBAAb;AAAmC,mBAAa,iBAAhD;AAAmE,eAAS,OAA5E;AAAqF,mBAAa,IAAlG;AAAyG,wBAAiB,WAA1H;AAAuI,qBAAe;AAAtJ,KAAD,EACC;AAAE,iBAAW,WAAb;AAA0B,mBAAa,QAAvC;AAAiD,eAAS,OAA1D;AAAmE,mBAAa,IAAhF;AAAsF,qBAAe,KAAK5F,KAAL,CAAWiE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAArG;AAAyJ,0BAAoB1E,aAA7K;AAA6L,wBAAiB,WAA9M;AAA2N,qBAAe;AAA1O,KADD,EAEC;AAAE,iBAAW,aAAb;AAA4B,mBAAa,gBAAzC;AAA2D,eAAS,OAApE;AAA6E,oBAAc,IAA3F;AAAiG,qBAAe,gBAAhH;AAAmI,wBAAiB,YAApJ;AAAkK,qBAAe;AAAjL,KAFD,CADb;AAKH;;AASDoG,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,KAAK9F,KAAL,CAAW+F,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KAA8C,KAAKhG,KAAL,CAAW+F,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CC,YAAjH;AACA,UAAMC,gBAAgB,GAAG,KAAKnG,KAAL,CAAW+F,UAAX,CAAsBC,GAAtB,CAA0B,gBAA1B,KAA+C,KAAKhG,KAAL,CAAW+F,UAAX,CAAsBE,GAAtB,CAA0B,gBAA1B,EAA4CC,YAApH;AACA,UAAME,kBAAkB,GAAG,KAAKpG,KAAL,CAAW+F,UAAX,CAAsBC,GAAtB,CAA0B,kBAA1B,KAAiD,KAAKhG,KAAL,CAAW+F,UAAX,CAAsBE,GAAtB,CAA0B,kBAA1B,EAA8CC,YAA1H;AAGA,UAAMG,WAAW,GAAG;AAChB7C,MAAAA,UAAU,EAAE,aADI;AACWhC,MAAAA,SAAS,EAAE,QADtB;AACgC8E,MAAAA,eAAe,EAAE,iBADjD;AAEhBjG,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK,UAFP;AAEmBsD,MAAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAW2D,QAFxC;AAEkDE,MAAAA,YAAY,EAAEiC;AAFhE,KAApB;AAKA,UAAMS,YAAY,GAAG;AACjB/C,MAAAA,UAAU,EAAE,aADK;AACUhC,MAAAA,SAAS,EAAE,QADrB;AAC+B8E,MAAAA,eAAe,EAAE,iBADhD;AAEjBjG,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK,UAFN;AAEkBsD,MAAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAW2D,QAFvC;AAEiDE,MAAAA,YAAY,EAAEsC;AAF/D,KAArB;AAKA,UAAMK,cAAc,GAAG;AAAEhD,MAAAA,UAAU,EAAE,UAAd;AAA0BmB,MAAAA,SAAS,EAAE,kCAArC;AAAyEnD,MAAAA,SAAS,EAAE,QAApF;AAA8FqC,MAAAA,YAAY,EAAEuC;AAA5G,KAAvB;AACA,UAAMK,eAAe,GAAG,EAAxB;AACA,SAAKb,oBAAL,CAA0Bc,OAA1B,CAAkCnE,IAAI,IAAIA,IAAI,CAACoE,SAAL,KAAmB,IAAnB,GACtCF,eAAe,CAACG,IAAhB,CAAqBrE,IAArB,CADsC,GACT,EADjC;AAGA,wBACI,uDACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM;AAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAS,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,gBAArB;AAAsC,MAAA,cAAc,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CADJ,CAFJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEsE,QAAAA,UAAU,EAAE;AAAd,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,aAApB;AAAkC,MAAA,MAAM,EAAE,KAAK7G,KAAL,CAAW8G,qBAAX,CAAiCC,OAAjC,CAAyCjB,eAAzC,MAA8D,CAAC,CAAzG,CACI;AADJ;AAEI,MAAA,OAAO,EAAE,MAAM,KAAK9F,KAAL,CAAWgH,6BAAX,CAAyCX,WAAzC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEvH,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,gBAArB;AAAsC,MAAA,cAAc,EAAC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ,CADJ,CADJ,eAcI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,eAAe,EAAE,iBADrB;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,iBAAiB,EAAE,KAAKoG,iBAH5B;AAII,MAAA,IAAI,EAAE,KAAKlF,KAAL,CAAWK,UAAX,CAAsB,YAAtB,CAJV;AAKI,MAAA,UAAU,EAAEnB,OAAO,CAAC,KAAKc,KAAL,CAAWK,UAAX,CAAsB,YAAtB,CAAD,EAAsC,KAAKgC,KAAL,CAAW/B,SAAjD,CALvB;AAMI,MAAA,SAAS,EAAE,KAAK+B,KAAL,CAAW/B,SAN1B;AAOI,MAAA,eAAe,EAAE,KAAKL,kBAP1B;AAQI,MAAA,mBAAmB,EAAE,KAAK2F,oBAR9B;AASI,MAAA,UAAU,EAAE,KAAK5F,KAAL,CAAW+F,UAT3B;AAUI,MAAA,qBAAqB,EAAE,KAAK/F,KAAL,CAAW8G,qBAVtC;AAWI,MAAA,UAAU,EAAE,KAAK9G,KAAL,CAAWuD,UAX3B;AAYI,MAAA,QAAQ,EAAE,KAAKvD,KAAL,CAAW2D,QAZzB;AAaI,MAAA,SAAS,EAAC,YAbd,CAcI;AAdJ;AAeI,MAAA,WAAW,EAAE,KAAK3D,KAAL,CAAWgH,6BAf5B;AAgBI,MAAA,SAAS,EAAET,YAhBf;AAiBI,MAAA,YAAY,EAAE,KAAKnC,YAjBvB;AAkBI,MAAA,WAAW,EAAEoC,cAlBjB;AAmBI,MAAA,QAAQ,EAAE,IAnBd;AAoBI,MAAA,UAAU,EAAE,YApBhB,CAqBI;AACA;AAtBJ;AAuBI,MAAA,gBAAgB,EAAE,IAvBtB;AAwBI,MAAA,iBAAiB,EAAE,KAxBvB;AAyBI,MAAA,UAAU,EAAE,KAAKxG,KAAL,CAAW4B,UAzB3B;AA0BI,MAAA,iBAAiB,EAAE,IA1BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAdJ,CALJ,CADJ,CADJ,CADJ,EAuHK,KAAK5B,KAAL,CAAWsB,cAAX,iBACG,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWsB,cAAhC;AACI,MAAA,UAAU,EAAE,KAAKF,UADrB;AAEI,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWwB,SAF1B;AAGI,MAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWuD,UAH3B;AAII,MAAA,UAAU,EAAE,KAAKvD,KAAL,CAAWwD,UAJ3B;AAKI,MAAA,WAAW,EAAE,KAAKJ,WALtB;AAMI,MAAA,WAAW,EAAE,KAAKpD,KAAL,CAAW6B,WAN5B;AAOI,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWqB,SAPtB;AAQI,MAAA,aAAa,EAAE,KAAKyD,aARxB;AASI,MAAA,cAAc,EAAE,KAAKzC,KAAL,CAAWd,cAAX,IAA6B,EATjD;AAUI,MAAA,eAAe,EAAEkF,eAVrB;AAWI,MAAA,YAAY,EAAE,KAAKzG,KAAL,CAAWqB,SAAX,gBACV,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWwB,SAA7B;AACI,QAAA,aAAa,EAAE,KAAKxB,KAAL,CAAWkE,aAD9B;AAEI,QAAA,eAAe,EAAE,KAAKtB,eAF1B;AAGI,QAAA,UAAU,EAAE,KAAK5C,KAAL,CAAWuD,UAH3B;AAII,QAAA,cAAc,EAAE,KAAKlB,KAAL,CAAWd,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,gBAOV,oBAAC,aAAD;AAAe,QAAA,cAAc,EAAE,KAAKc,KAAL,CAAWd,cAAX,IAA6B,EAA5D;AACI,QAAA,eAAe,EAAE,KAAKqB,eAD1B;AAEI,QAAA,aAAa,EAAE,KAAKV,aAFxB;AAGI,QAAA,aAAa,EAAE,KAAKlC,KAAL,CAAWkE,aAH9B;AAKI,QAAA,gBAAgB,EAAE,KAAKlE,KAAL,CAAWK,UAAX,CAAsBiE,gBAAtB,IAA0C,EALhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxHR,CADJ;AA0JH;;AAqHD2C,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAI,KAAKlH,KAAL,CAAWK,UAAX,KAA0B6G,aAAa,CAAC7G,UAA5C,EAAwD;AAEpD,UAAI;AAAEC,QAAAA;AAAF,UAAgB,KAAK+B,KAAzB;;AACA,UAAI,KAAKrC,KAAL,CAAWM,SAAX,KAAyBK,SAA7B,EAAwC;AACpCL,QAAAA,SAAS,GAAG;AAAEgF,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,IAAI,EAAG,KAAKvF,KAAL,CAAWwF,QAAX,GAAsBC,QAAQ,CAAC,KAAKzF,KAAL,CAAWwF,QAAX,CAAoB,EAApB,CAAD,CAA9B,GAA0D;AAA5E,SAAZ;AACH;;AAED,UAAIE,MAAM,GAAG,KAAb;;AACA,UAAI,KAAK1F,KAAL,CAAWmH,SAAX,KAAyBxG,SAAzB,KAAuC,KAAK0B,KAAL,CAAWb,SAAX,KAAyB,QAAzB,IAAqC,KAAKa,KAAL,CAAWb,SAAX,KAAyB,QAArG,CAAJ,EAAoH;AAChHkE,QAAAA,MAAM,GAAG,IAAT;AACH;;AACD,WAAKvF,QAAL,CAAc;AAAEuF,QAAAA,MAAF;AAAU3D,QAAAA,SAAS,EAAE,gBAArB;AAAuCzB,QAAAA;AAAvC,OAAd;AACH;;AAED,QAAI,KAAKN,KAAL,CAAWuB,cAAX,KAA8B2F,aAAa,CAAC3F,cAAhD,EAAgE;AAC5D,WAAKpB,QAAL,CAAc;AAAEoB,QAAAA,cAAc,EAAE,KAAKvB,KAAL,CAAWuB;AAA7B,OAAd;AACH;AAEJ,GApVoC,CAsVrC;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA+BAkC,EAAAA,cAAc,CAACJ,QAAD,EAAWC,OAAX,EAAoB;AAC9B,QAAIsB,SAAS,GAAG,EAAhB;AACA,QAAItE,SAAS,GAAGK,SAAhB;AACAiE,IAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAK5E,KAAL,CAAW2D,QAAnC;AACAiB,IAAAA,SAAS,CAAC,2BAAD,CAAT,GAAyC,KAAK5E,KAAL,CAAWK,UAAX,CAAsBiE,gBAA/D;AACAM,IAAAA,SAAS,CAAC,kCAAD,CAAT,GAAgD,EAAhD;AACA,QAAIhD,UAAU,GAAG,IAAjB;;AACA,QAAI,KAAK5B,KAAL,CAAWwB,SAAX,KAAyB,QAA7B,EAAuC;AACnC;AACAoD,MAAAA,SAAS,CAAC,kCAAD,CAAT,GAAgD,KAAKvC,KAAL,CAAWd,cAA3D;AACAK,MAAAA,UAAU,GAAG,KAAKS,KAAL,CAAWd,cAAX,CAA0B6F,eAAvC;AACA9G,MAAAA,SAAS,GAAG,KAAK+B,KAAL,CAAW/B,SAAvB;AACH;;AAID,SAAKqF,eAAL,CAAqBzE,GAArB,CAAyBqB,IAAI,IAAI;AAC7B,aAAOqC,SAAS,CAAC,kCAAD,CAAT,CAA8CrC,IAA9C,IAAsD,KAAKF,KAAL,CAAWd,cAAX,CAA0BgB,IAA1B,CAA7D;AACH,KAFD;AAGAqC,IAAAA,SAAS,CAAC,kCAAD,CAAT,CAA8C,UAA9C,IAA4D,KAAK5E,KAAL,CAAWK,UAAX,CAAsBiE,gBAAtB,CAAuC+C,QAAnG,CAnB8B,CAmB+E;;AAE7G,UAAM9D,UAAU,GAAG;AACfmB,MAAAA,QAAQ,EAAE,kCADK;AAEfC,MAAAA,SAAS,EAAE,kCAFI;AAGfC,MAAAA,SAAS,EAAEA,SAHI;AAGOhD,MAAAA,UAHP;AAIfJ,MAAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWwB,SAJP;AAIkB6B,MAAAA,QAJlB;AAI4BC,MAAAA,OAJ5B;AAIqChD,MAAAA;AAJrC,KAAnB;AAMA,WAAOiD,UAAP;AACH;;AAlcoC;;AAigBzC,eAAetE,UAAU,CAACY,UAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { MediaLabel } from '../../components/add-client.styles';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { toast } from 'react-toastify';\r\nimport AddMAHContact from './AddMAHContact';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n//import ReactTooltip from 'react-tooltip';\r\n\r\nclass MAHContact extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take : this.props.settings ? parseInt(this.props.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            isOpen: false, selectedRecord: {}, dataResult: [],\r\n            activeTab: 'MAHContact-tab',\r\n            dataState: dataState\r\n        };\r\n        this.holderFieldList = ['nmahcode', 'smahcontactname', 'sphoneno', 'smobileno',\r\n            'sfaxno', 'semail', 'ndefaultstatus'];//'nmahcode',\r\n        this.mahContactColumnList =\r\n                     [{ \"idsName\": \"IDS_MAHCONTACTNAME\", \"dataField\": \"smahcontactname\", \"width\": \"200px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                      { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"200px\", \"mandatory\": true, \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }), \"validateFunction\": validateEmail , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                      { \"idsName\": \"IDS_DEFAULT\", \"dataField\": \"sdisplaystatus\", \"width\": \"150px\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n                       ];\r\n    }\r\n\r\n    mahDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.masterData[\"MAHContact\"], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const addMAHContactId = this.props.controlMap.has(\"AddMAHContact\") && this.props.controlMap.get(\"AddMAHContact\").ncontrolcode\r\n        const editMAHContactId = this.props.controlMap.has(\"EditMAHContact\") && this.props.controlMap.get(\"EditMAHContact\").ncontrolcode;\r\n        const deleteMAHContactId = this.props.controlMap.has(\"DeleteMAHContact\") && this.props.controlMap.get(\"DeleteMAHContact\").ncontrolcode\r\n\r\n\r\n        const mahAddParam = {\r\n            screenName: \"MAH Contact\", operation: \"create\", primaryKeyField: \"nmahcontactcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addMAHContactId\r\n        };\r\n\r\n        const mahEditParam = {\r\n            screenName: \"MAH Contact\", operation: \"update\", primaryKeyField: \"nmahcontactcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: editMAHContactId\r\n        };\r\n\r\n        const mahDeleteParam = { screenName: \"MAHolder\", methodUrl: \"MarketAuthorisationHolderContact\", operation: \"delete\", ncontrolCode: deleteMAHContactId };\r\n        const mandatoryFields = [];\r\n        this.mahContactColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card //className=\"at-tabs border-0\"\r\n                        >\r\n                            <Card.Header className=\"add-txt-btn\">\r\n                                <strong> <FormattedMessage id=\"IDS_MAHCONTACT\" defaultMessage=\"MAH Contact\" /></strong>\r\n                            </Card.Header>\r\n                            <Card.Body style={{ paddingTop: 'unset' }}>\r\n                                <Row className=\"no-gutters text-right border-bottom pt-2 pb-2\" >\r\n                                    <Col md={12}>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                            <Nav.Link className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addMAHContactId) === -1}\r\n                                                // data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMAHCONTACT\" })}\r\n                                                onClick={() => this.props.getMAHContactComboDataService(mahAddParam)}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id='IDS_MAHCONTACT' defaultMessage='MAHContact' />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"no-gutters\">\r\n                                    <Col md={12}>\r\n                                        <DataGrid\r\n                                            primaryKeyField={\"nmahcontactcode\"}\r\n                                            expandField=\"expanded\"\r\n                                            detailedFieldList={this.detailedFieldList}\r\n                                            data={this.props.masterData[\"MAHContact\"]}\r\n                                            dataResult={process(this.props.masterData[\"MAHContact\"], this.state.dataState)}\r\n                                            dataState={this.state.dataState}\r\n                                            dataStateChange={this.mahDataStateChange}\r\n                                            extractedColumnList={this.mahContactColumnList}\r\n                                            controlMap={this.props.controlMap}\r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            inputParam={this.props.inputParam}\r\n                                            userInfo={this.props.userInfo}\r\n                                            methodUrl=\"MAHContact\"\r\n                                            // methodUrl=\"MarketAuthorisationHolderContact\"\r\n                                            fetchRecord={this.props.getMAHContactComboDataService}\r\n                                            editParam={mahEditParam}\r\n                                            deleteRecord={this.deleteRecord}\r\n                                            deleteParam={mahDeleteParam}\r\n                                            pageable={true}\r\n                                            scrollable={\"scrollable\"}\r\n                                            //gridHeight={\"600px\"}\r\n                                            //isComponent={false}\r\n                                            isActionRequired={true}\r\n                                            isToolBarRequired={false}\r\n                                            selectedId={this.props.selectedId}\r\n                                            hasDynamicColSize={true}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                            {/* <Card className=\"at-tabs\">\r\n                            <Tab.Container defaultActiveKey={this.state.activeTab}>\r\n                                <Card.Header className=\"d-flex tab-card-header\">\r\n                                    <Nav className=\"nav nav-tabs card-header-tabs flex-grow-1\" as=\"ul\">\r\n                                        <Nav.Item as='li'>\r\n                                            <Nav.Link eventKey=\"MAHContact-tab\">\r\n                                                <FormattedMessage id=\"IDS_MAHCONTACT\" defaultMessage=\"MAH Contact\" />\r\n                                            </Nav.Link>\r\n\r\n                                        </Nav.Item>\r\n\r\n                                    </Nav>\r\n                                </Card.Header>\r\n                                <Tab.Content>\r\n                                    <Tab.Pane className=\"fade p-0 \" eventKey=\"MAHContact-tab\">\r\n                                        <Row className=\"no-gutters text-right border-bottom pt-2 pb-2\" >\r\n\r\n                                            <Col md={12}>\r\n\r\n                                                <Nav.Link className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addMAHContactId) === -1}\r\n                                                    onClick={() => this.props.getMAHContactComboDataService(mahAddParam)}>\r\n                                                    <FontAwesomeIcon icon={faPlus} /> {}\r\n                                                    <FormattedMessage id='IDS_ADDMAHCONTACT' defaultMessage='Add MAHContact' />\r\n                                                </Nav.Link>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"no-gutters\">\r\n                                            <Col md={12}>\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"nmahcontactcode\"}\r\n                                                    expandField=\"expanded\"\r\n                                                    detailedFieldList={this.detailedFieldList}\r\n                                                    data={this.props.masterData[\"MAHContact\"]}\r\n                                                    dataResult={process(this.props.masterData[\"MAHContact\"], this.state.dataState)}\r\n                                                    dataState={this.state.dataState}\r\n                                                    dataStateChange={this.mahDataStateChange}\r\n                                                    extractedColumnList={this.mahContactColumnList}\r\n                                                    controlMap={this.props.controlMap}\r\n                                                    userRoleControlRights={this.props.userRoleControlRights}\r\n                                                    inputParam={this.props.inputParam}\r\n                                                    userInfo={this.props.userInfo}\r\n                                                    methodUrl=\"MarketAuthorisationHolderContact\"\r\n                                                    fetchRecord={this.props.getMAHContactComboDataService}\r\n                                                    editParam={mahEditParam}\r\n                                                    deleteRecord={this.deleteRecord}\r\n                                                    deleteParam={mahDeleteParam}\r\n                                                    pageable={false}\r\n                                                    scrollable={\"auto\"}\r\n                                                    isComponent={false}\r\n                                                    isActionRequired={true}\r\n                                                    isToolBarRequired={false}\r\n                                                    selectedId={this.props.selectedId}\r\n                                                />\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Tab.Pane>\r\n\r\n                                </Tab.Content>\r\n                            </Tab.Container> */}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                formatMessage={this.props.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            <AddMAHContact selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.formatMessage}\r\n\r\n                                selectedMAHolder={this.props.masterData.SelectedMAHolder || {}}\r\n                            />\r\n\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.props });\r\n    }\r\n    detailBand = (props) => {\r\n\r\n        const Dataitem = props.dataItem\r\n        const OptionalFieldList = [\r\n            { datafield: \"sphoneno\", Column: \"Phone No\" },\r\n            { datafield: \"smobileno\", Column: \"Mobile No\" },\r\n            { datafield: \"sfaxno\", Column: \"Fax No\" },\r\n\r\n        ];\r\n        return (<Row>\r\n            {OptionalFieldList.map((fields) => {\r\n                return (\r\n                    <Col md='6'>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id={fields.Column} message={fields.Column} /></FormLabel>\r\n                            <MediaLabel className=\"readonly-text font-weight-normal\">{Dataitem[fields.datafield]}</MediaLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            })\r\n            }\r\n        </Row>)\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    getTabContent = (event) => {\r\n        this.setState({ activeTab: event.currentTarget.name });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        if (fieldName === \"ndeputyusersitecode\") {\r\n            this.state.deputyUserList.map(item => {\r\n                if (item.nusersitecode === comboData.value) {\r\n                    selectedRecord[\"sdeputyname\"] = item.sfirstname + \" \" + item.slastname\r\n                }\r\n                return null;\r\n            })\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            // if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\r\n            //     event.target.value = validatePhoneNumber(event.target.value);\r\n            //     if (event.target.value !== \"\") {\r\n            //         selectedRecord[event.target.name] = event.target.value;\r\n            //     }\r\n            // }\r\n            // else {\r\n            //     selectedRecord[event.target.name] = event.target.value;\r\n            // }\r\n            if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\" || event.target.name === \"sfaxno\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value\r\n                }\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.masterData !== previousProps.masterData) {\r\n\r\n            let { dataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                dataState = { skip: 0, take : this.props.settings ? parseInt(this.props.settings[14]) : 5 }\r\n            }\r\n\r\n            let isOpen = false;\r\n            if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\r\n                isOpen = true;\r\n            }\r\n            this.setState({ isOpen, activeTab: 'MAHContact-tab', dataState });\r\n        }\r\n\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    // getMAHContactComboDataService(screenName, operation, primaryKeyName, primaryKeyValue) {\r\n    //     if (this.props.masterData.SelectedMAHolder.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n    //         const contactData = {\r\n    //             \"nmahcontactcode\": primaryKeyValue, nmahcode: this.props.masterData.SelectedMAHolder.nmahcode, //nmastersitecode: maHolder.nsitecode,\r\n    //             \"userinfo\": this.props.userInfo\r\n\r\n    //         };\r\n    //         const contactService = rsapi.post(\"marketauthorisationholdercontact/getMarketAuthorisationHolderContact\", contactData);\r\n\r\n    //         let urlArray = [];\r\n    //         if (operation === \"create\") {\r\n    //             urlArray = [contactService];\r\n    //         }\r\n    //         else {\r\n    //             const contactById = rsapi.post(\"marketauthorisationholdercontact/getActiveMarketAuthorisationHolderContactById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.userInfo });\r\n    //             urlArray = [contactService, contactById];\r\n    //         }\r\n\r\n    //         Axios.all(urlArray)\r\n    //             .then(response => {\r\n\r\n\r\n    //                 let selectedRecord = undefined;\r\n    //                 if (operation === \"update\") {\r\n    //                     selectedRecord = response[1].data;\r\n\r\n\r\n    //                     selectedRecord[\"nmahcontactcode\"] = response[1].data[\"nmahcontactcode\"];\r\n    //                 }\r\n    //                 this.setState({\r\n\r\n    //                     isOpen: true,\r\n    //                     operation, screenName,\r\n    //                     selectedRecord\r\n    //                 });\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 if (error.response.status === 500) {\r\n    //                     toast.error(error.message);\r\n    //                 }\r\n    //                 else {\r\n    //                     toast.warn(this.props.formatMessage({ id: error.response.data }));\r\n    //                 }\r\n    //             })\r\n    //     }\r\n    //     else {\r\n    //         toast.warn(this.props.formatMessage({ id: this.props.masterData.SelectedUser.sactivestatus }));\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.state.selectedRecord['semail'] ? validateEmail(this.state.selectedRecord['semail']) : true) {\r\n            //add / edit  \r\n            let inputParam = {};\r\n\r\n            if (this.props.screenName === \"MAH Contact\") {\r\n                inputParam = this.saveMAHContact(saveType, formRef);\r\n            }\r\n\r\n\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }));\r\n        }\r\n    }\r\n\r\n    saveMAHContact(saveType, formRef) {\r\n        let inputData = [];\r\n        let dataState = undefined;\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"marketauthorisationholder\"] = this.props.masterData.SelectedMAHolder;\r\n        inputData[\"marketauthorisationholdercontact\"] = {};\r\n        let selectedId = null;\r\n        if (this.props.operation === \"update\") {\r\n            // edit\r\n            inputData[\"marketauthorisationholdercontact\"] = this.state.selectedRecord;\r\n            selectedId = this.state.selectedRecord.nmahcontactcode;\r\n            dataState = this.state.dataState;\r\n        }\r\n\r\n\r\n\r\n        this.holderFieldList.map(item => {\r\n            return inputData[\"marketauthorisationholdercontact\"][item] = this.state.selectedRecord[item]\r\n        });\r\n        inputData[\"marketauthorisationholdercontact\"][\"nmahcode\"] = this.props.masterData.SelectedMAHolder.nmahcode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n\r\n        const inputParam = {\r\n            classUrl: \"marketauthorisationholdercontact\",\r\n            methodUrl: \"MarketAuthorisationHolderContact\",\r\n            inputData: inputData, selectedId,\r\n            operation: this.props.operation, saveType, formRef, dataState\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    deleteRecord = (deleteparam) => {\r\n        if (deleteparam.selectedRecord.expanded !== undefined) {\r\n            delete deleteparam.selectedRecord.expanded\r\n        }\r\n        if (this.props.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: this.props.masterData.SelectedMAHolder.stranstatus }));\r\n        }\r\n        else {\r\n            const inputParam = {\r\n                classUrl: \"marketauthorisationholdercontact\",\r\n                methodUrl: deleteparam.methodUrl,\r\n                inputData: {\r\n                    [deleteparam.methodUrl.toLowerCase()]: deleteparam.selectedRecord,\r\n                    \"userinfo\": this.props.userInfo\r\n\r\n                },\r\n                operation: deleteparam.operation,\r\n                dataState: this.state.dataState\r\n            }\r\n\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, deleteparam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\r\n                        openChildModal: true, screenName: deleteparam.screenName, operation: deleteparam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n\r\n    detailedFieldList = [\r\n        { dataField: \"sphoneno\", idsName: \"IDS_PHONENO\" , columnSize:\"4\"},\r\n        { dataField: \"smobileno\", idsName: \"IDS_MOBILENO\" , columnSize:\"4\"},\r\n        { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\", columnSize:\"4\" },\r\n        //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\r\n        //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\r\n\r\n    ];\r\n}\r\n\r\nexport default injectIntl(MAHContact);"]},"metadata":{},"sourceType":"module"}