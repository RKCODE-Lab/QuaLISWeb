{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col,InputGroup}from'react-bootstrap';import{toast}from'react-toastify';import{constructOptionList,convertDateValuetoString,getControlMap,onSaveMandatoryValidation,rearrangeDateFormat,searchData,searchJsonData,showEsign,sortData,Lims_JSON_stringify}from'../../components/CommonScript';//import SortableTree from 'react-sortable-tree'; \nimport FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DataGrid from'../../components/data-grid/data-grid.component';import{Utils as QbUtils}from\"@react-awesome-query-builder/ui\";import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService,crudMaster,validateEsignCredential,updateStore}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';// import ReactTooltip from 'react-tooltip';\nimport{uuid}from\"uuidv4\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{transactionStatus}from'../../components/Enumeration';import Esign from'../audittrail/Esign';import rsapi from'../../rsapi';import AddSampleStorageMapping from'./AddSampleStorageMapping';import Axios from'axios';import Preloader from'../../components/preloader/preloader.component';import{process}from'@progress/kendo-data-query';//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\nimport MatrixComponent from'../../components/MatrixComponent';import FilterQueryBuilder from'../../components/FilterQueryBuilder';import AdvFilter from'../../components/AdvFilter';import DateTimePicker from\"../../components/date-time-picker/date-time-picker.component\";import RetrieveOrDiposeSample from'../storagemanagement/RetrieveOrDiposeSample';import{ExcelExport,ExcelExportColumn}from'@progress/kendo-react-excel-export';import{LocalizationProvider}from'@progress/kendo-react-intl';import BulkRetrieveOrDiposeSample from'../storagemanagement/BulkRetrieveOrDiposeSample';// import * as XLSX from 'xlsx';\n// import { Upload } from '@progress/kendo-react-upload';\nvar SampleStorageRetrieval=/*#__PURE__*/function(_Component){_inherits(SampleStorageRetrieval,_Component);var _super=_createSuper(SampleStorageRetrieval);function SampleStorageRetrieval(props){var _this;_classCallCheck(this,SampleStorageRetrieval);_this=_super.call(this,props);_this.dragOverCnt=0;_this.isDragDrop=false;_this.SEPARATOR='_';_this.uniqueIDArr=[];_this.countforTree=0;_this.pointedItem=undefined;_this.getitemPath={};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: false, selectedRecord: {}\n//     }\n// }\n// this.props.updateStore(updateInfo);\n//ALPD-4749\n//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\nvar loadEsign=_this.state.loadEsign;var openModal=_this.state.openModal;//let selectedId = this.props.Login.selectedId;\nvar selectedRecord=_this.state.selectedRecord;//this.props.Login.selectedRecord;\nif(_this.state.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"Approve\"||_this.props.Login.operation===\"copy\"){loadEsign=false;openModal=false;selectedRecord={};//selectedId = null;\n}else{//this.state.isRetrieveOrDispose=true;\nopenModal=true;loadEsign=false;//isRetrieveOrDispose=false;\nselectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";//ALPD-4749\n//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\n_this.setState({selectedRecord:selectedRecord,openModal:openModal,loadEsign:loadEsign,selectedId:null});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { openModal, loadEsign, selectedRecord, selectedId: null ,importRetrieveOrDispose:false}\n// }\n// this.props.updateStore(updateInfo);\n}}else{openModal=false;///selectedId = null;\n//selectedRecord = {};\n//this.state.isRetrieveOrDispose= false;\n_this.getprojectbarcodeconfig(true);_this.setState({selectedRecord:selectedRecord,openModal:false,isInitialRender:true,isFilterPopup:false,isRetrieveOrDispose:false,importRetrieveOrDispose:false});}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { openModal, loadEsign, selectedRecord, selectedId }\n// }\n// this.props.updateStore(updateInfo);\n// this.getsamplestoragetransaction({}, this.props.Login.userInfo);\n// if (!this.state.isFilterPopup) {\n//     this.getDynamicFilterExecuteData()\n// }\n};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties(saveType,formRef);}else if(_this.state.openSpreadSheet){_this.CRUDSampleStorageTransaction(_objectSpread(_objectSpread({},_this.state.editedsheetData),{},{nsamplestoragemappingcode:_this.state.isMultiSampleAdd?Object.keys(_this.state.sheetData).map(function(nsamplestoragemappingcode){return nsamplestoragemappingcode;}).join(\",\"):_this.state.editedsheetData.nsamplestoragemappingcode.toString(),nsamplestoragelocationcode:_this.state.editedsheetData.nsamplestoragelocationcode,sheetData:JSON.stringify(_this.state.sheetData?_this.state.sheetData:{}),sheetUpdate:true,userinfo:_this.props.Login.userInfo,isMultiSampleAdd:_this.state.isMultiSampleAdd}),'create');}else{_this.onSaveSampleStorageTransaction(saveType,formRef);}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.openFilter=function(){// let showFilter = !this.props.Login.showFilter\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { showFilter }\n// }\n// this.props.updateStore(updateInfo);\nvar boolean=!_this.state.showFilter;_this.setState({showFilter:boolean});};_this.closeFilter=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { showFilter: false }\n// }\n// this.props.updateStore(updateInfo);\n_this.setState({showFilter:false});};_this.reloadData=function(){_this.onFilterSubmit();};_this.onEditSampleStorageLocation=function(selectedSampleStorageVersion,userInfo,editId){_this.handleSearch();_this.setState({searchedTreeData:undefined});if(_this.searchRef.current){_this.searchRef.current.value=\"\";}var isOnlyDraft=false;if(_this.props.Login.masterData.sampleStorageVersion&&_this.props.Login.masterData.sampleStorageVersion.length>1){isOnlyDraft=true;}_this.props.editSampleStorageLocation(selectedSampleStorageVersion,userInfo,isOnlyDraft,editId);};_this.openStorageMapping=function(addId){_this.addSampleStorageMapping({userInfo:_this.props.Login.userInfo,addId:addId});};_this.deletesamplestoragemapping=function(param){_this.CRUDSampleStorageTransaction({'nsamplestoragelocationcode':_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,'nsamplestoragemappingcode':param.nsamplestoragemappingcode,'userinfo':_this.props.Login.userInfo},'delete');};_this.addMultipleSample=function(param){_this.setState({//sheetData: JSON.parse(response[0].data.sheetData),\nopenModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});};_this.opensearch=function(){_this.setState({openModal:true,isFilterPopup:true,selectedRecord:_objectSpread({},_this.state.submittedselectedRecord)||_objectSpread({},_this.state.selectedRecord)});};_this.openbulkretrieve=function(){_this.setState({isbulkretrieve:true,openModal:true,loading:false});};_this.handleExportClick=function(){var exportFiled=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true}];_this.setState({exportFiled:exportFiled,export:true});};_this.bulkRetrieveDispose=function(){_this.setState({importRetrieveOrDispose:true,openModal:true,loading:false,isRetrieveOrDispose:false,selectedRecord:{}});//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             openModal: true, importRetrieveOrDispose: true,\n//                   isRetrieveOrDispose: true,\n//     }\n// }\n//     this.props.updateStore(updateInfo);\n};_this.openRetrieveDispose=function(){_this.setState({loading:true,importRetrieveOrDispose:false});var urlArray=[];var url1=rsapi.post(\"unit/getUnit\",{userinfo:_this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){var unitMap=constructOptionList(response[0].data||[],\"nunitcode\",\"sunitname\",false,false,true);var unit=unitMap.get(\"OptionList\");_this.setState({unitMapList:unit,openModal:true,isRetrieveOrDispose:true,importRetrieveOrDispose:false,dynamicfields:[],selectedBarcodeValue:{},selectedRecord:{},loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.addSample=function(param,nflag){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragemappingSheetData\",{isMultiSampleAdd:nflag===2?true:false,nsamplestoragemappingcode:nflag===2?_this.state.masterData.samplestorageretrieval.map(function(item){return item.nsamplestoragemappingcode;}).join(\",\"):param.nsamplestoragemappingcode.toString()});urlArray=[url1];Axios.all(urlArray).then(function(response){if(nflag===2){_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});}else{_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:false,openSpreadSheet:true,editedsheetData:param,Rows:param.nrow,columns:param.ncolumn,loading:false});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var selectedProjectType=_this.state.selectedProjectType||{};var selectedRecordFilter=_this.state.selectedRecordFilter||{};if(fieldName==='nstoragecategorycode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainertypecode'){return _this.getContainerStructure({userinfo:_this.props.Login.userInfo,ncontainertypecode:comboData.value},fieldName,comboData);}else if(fieldName==='nprojecttypecode'){///return this.getprojectbarcodeconfig(comboData);\nselectedProjectType[fieldName]=comboData;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}else if(fieldName==='ncontainerstructurecode'){selectedRecord['nrow']=comboData.item.nrow?comboData.item.nrow:1;selectedRecord['ncolumn']=comboData.item.ncolumn?comboData.item.ncolumn:1;}else if(fieldName==='nsamplestoragelocationcode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:_this.state.selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value},fieldName,comboData);}if(fieldName==='nsamplestorageversioncode'){selectedRecordFilter[fieldName]=comboData;_this.setState({selectedRecordFilter:selectedRecordFilter});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,selectedRecordFilter:selectedRecordFilter});}};_this.onSaveSampleStorageTransaction=function(saveType){var selectedRecord=_this.state.selectedRecord;var containerpathCodeArray=[];if(_this.state.operation==='create'){containerpathCodeArray=selectedRecord['nsamplestoragecontainerpathcode'].map(function(item){return item.value;});}var inputParam={nsamplestoragetransactioncode:selectedRecord['nsamplestoragetransactioncode']?parseInt(selectedRecord['nsamplestoragetransactioncode']):0,nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,nsamplestoragemappingcode:selectedRecord['nsamplestoragemappingcode']?parseInt(selectedRecord['nsamplestoragemappingcode']):0,ncontainertypecode:-1,nproductcode:selectedRecord['nproductcode'].value,ndirectionmastercode:-1,ssamplestoragemappingname:\"-\",nsamplestoragecontainerpathcode:_this.state.operation==='create'?JSON.stringify(containerpathCodeArray):parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),containerpathsize:containerpathCodeArray.length,nneedposition:4,ncontainerstructurecode:-1,nquantity:selectedRecord['nquantity']?parseInt(selectedRecord['nquantity']):1,userinfo:_this.props.Login.userInfo};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.CRUDSampleStorageTransaction(inputParam,_this.state.operation);}};_this.getsamplestoragetransaction=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragetransaction\",{userinfo:_this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.childDataChange=function(selectedRecord){_this.setState({selectedRecord:_objectSpread({},selectedRecord),isInitialRender:false});};_this.childSheetDataChange=function(sheetData){_this.setState({// selectedRecord: {\n//     ...this.state.selectedRecord,\n//     sheetData: {\n//         ...this.state.selectedRecord.sheetData,\n//         ...sheetData\n//     }\n// },\nsheetData:_objectSpread({},sheetData),isInitialRender:false});};_this.getActiveSampleStorageMappingById=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getActiveSampleStorageMappingById\",{nsamplestoragelocationcode:inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,userinfo:userinfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data)//,\n// selectedRecord: {\n//     ...this.state.selectedRecord\n//    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\n// }\n,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.filterColumnData=function(filterValue,filterParam){var masterData=filterParam.masterData;var primaryKeyValue=0;var searchedData=undefined;if(filterValue===\"\"){if(masterData[filterParam.inputListName]&&masterData[filterParam.inputListName].length>0){primaryKeyValue=masterData[filterParam.inputListName][0][filterParam.primaryKeyField];}}else{if(filterParam.isjsondata){searchedData=searchJsonData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}else{searchedData=searchData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}if(searchedData.length>0){primaryKeyValue=searchedData[0][filterParam.primaryKeyField];}}if(primaryKeyValue!==0){_this.setState({loading:true});return rsapi.post(filterParam.fetchUrl,_objectSpread(_objectSpread({},filterParam.fecthInputObject),{},_defineProperty({},filterParam.primaryKeyField,primaryKeyValue))).then(function(response){masterData[\"searchedData\"]=searchedData;masterData=_objectSpread(_objectSpread({},masterData),response.data);if(filterParam.sortField){sortData(masterData,filterParam.sortOrder,filterParam.sortField);}else{sortData(masterData);}_this.setState({masterData:masterData,loading:false,skip:0,take:10,selectedId:null});}).catch(function(error){_this.setState({loading:false});if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});}else{masterData[filterParam.selectedObject]=undefined;masterData[\"searchedData\"]=[];Object.keys(masterData).forEach(function(item){if(item!==filterParam.inputListName&&item!==filterParam.selectedObject&&filterParam.unchangeList&&filterParam.unchangeList.indexOf(item)===-1)masterData[item]=[];});_this.setState({masterData:masterData,operation:null,modalName:undefined,loading:false});}};_this.onNumericInputChange=function(value,field){var selectedRecord=_this.state.selectedRecord||{};var constantvalue=value.target.value;if(!isNaN(constantvalue)){selectedRecord[field]=constantvalue;_this.setState({selectedRecord:selectedRecord});}};_this.validateRetrievOrDispose=function(){if(_this.state.selectedRecord.saliquotsampleid&&_this.state.selectedRecord.saliquotsampleid===\"\"||_this.state.selectedRecord.saliquotsampleid===undefined){toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \",\"IDS_NEWSAMPLEID\"));}else if(_this.state.selectedRecord.nquantity&&_this.state.selectedRecord.nquantity===\"\"||_this.state.selectedRecord.saliquotsampleid===undefined){return toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \",\"IDS_QUANTITY\"));}else if(_this.state.selectedRecord.nunitcode&&Object.keys(_this.state.selectedRecord.nunitcode).length<=0||_this.state.selectedRecord.nunitcode===undefined){return toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_SELECT\"}),\" \",\"IDS_UNIT\"));}};_this.CRUDSampleStorageTransaction=function(inputParam,operation){var inputData=[];var obj=convertDateValuetoString(_this.state.masterData.fromDate,_this.state.masterData.toDate,_this.props.Login.userInfo);var selectedRecord=_this.state.selectedRecord;var isFileupload=inputParam.importRetrieveOrDispose?true:false;var formData=new FormData();inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"scomments\"]=inputParam.scomments;inputData[\"spositionvalue\"]=inputParam.spositionvalue;inputData[\"nquantity\"]=parseInt(inputParam.nquantity);inputData[\"sunitname\"]=inputParam.sunitname;inputData[\"saliquotsampleid\"]=inputParam.saliquotsampleid;inputData[\"isRetrieve\"]=inputParam.isRetrieve;inputData[\"nneedaliquot\"]=inputParam.nneedaliquot;inputData[\"nprojecttypecode\"]=_this.state.breadCrumbdata.breadcrumbprojecttype.value||-1;if(inputParam.importRetrieveOrDispose){formData.append(\"ImportFile\",selectedRecord['sfilename'][0]);formData.append(\"retrieveDisposeSampleType\",inputParam.isRetrieve?transactionStatus.Retrieved:transactionStatus.Disposed);formData.append(\"fieldName\",Lims_JSON_stringify(_this.props.intl.formatMessage({id:\"IDS_SAMPLEID\"})));formData.append(\"fromDate\",obj.fromDate);formData.append(\"toDate\",obj.toDate);formData.append(\"nprojecttypecode\",_this.state.breadCrumbdata.breadcrumbprojecttype.value||-1);}inputParam=_objectSpread(_objectSpread({formData:formData,isFileupload:isFileupload,methodUrl:inputParam.importRetrieveOrDispose?\"bulkeretrievedispose\":\"samplestorageretrieval\",operation:\"create\",dynamicfields:[],classUrl:\"samplestorageretrieval\",isInitialRender:true,selectedRecord:inputParam.importRetrieveOrDispose?_objectSpread({},_this.state.selectedRecord):{}},inputParam),{},{inputData:inputData});var saveType=_this.statesaveType;var masterData=_this.state.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputParam.ncontrolcode)){//ALPD-4749\n//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\n_this.setState({loading:true,dynamicfields:[]});var urlArray=[];var currentTimeUrl=rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":_this.props.Login.userInfo});var reasonUrl=rsapi.post(\"/reason/getReason\",{\"userinfo\":_this.props.Login.userInfo});urlArray=[reasonUrl,currentTimeUrl];Axios.all(urlArray).then(function(response){var reasonMap=constructOptionList(response[0].data||[],\"nreasoncode\",\"sreason\",undefined,undefined,false);var reasonList=reasonMap.get(\"OptionList\");_this.setState({esign:reasonList,serverTime:rearrangeDateFormat(_this.props.Login.userInfo,response[1].data),loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData},importRetrieveOrDispose:inputParam.importRetrieveOrDispose,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         loadEsign: true, dynamicfields: [], screenData: { inputParam, masterData }, saveType,importRetrieveOrDispose:inputParam.importRetrieveOrDispose\n//     }\n// }\n// this.props.updateStore(updateInfo);\n}else{_this.crudMasterSampleStorageRetrieval(inputParam,_this.state.masterData,inputParam.importRetrieveOrDispose?\"openModal\":\"\");}};_this.onFilterSubmit=function(){_this.getprojectbarcodeconfigForSubmit(true);// this.setState({ loading: true })\n// let inputParamData = {\n//     nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\n//     // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\n//     // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\n//     userinfo: this.props.Login.userInfo,\n// }\n// let urlArray = [];\n// const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\n// urlArray = [url1];\n// Axios.all(urlArray)\n//     .then(response => {\n//         let object = {\n//             selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\n//             // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\n//             // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\n//         }\n//         let filterData = this.generateBreadCrumData(object);\n//         this.setState({\n//             filterData,\n//             masterData: {\n//                 ...this.state.masterData,\n//                 ...response[0].data,\n//                 //   samplestorageretrieval: response[0].data['samplestorageretrieval'],\n//             },\n//             loading: false\n//         });\n//     }).catch(error => {\n//         if (error.response.status === 500) {\n//             toast.error(error.message);\n//         } else {\n//             toast.warn(error.response.data);\n//         }\n//         this.setState({\n//             loading: false\n//         });\n//     });\n};_this.bulkeretrieval=function(inputParam,operation){var inputData=[];var obj=convertDateValuetoString(_this.state.masterData.fromDate,_this.state.masterData.toDate,_this.props.Login.userInfo);inputData={fromDate:obj.fromDate,toDate:obj.toDate,userinfo:_this.props.Login.userInfo,nprojecttypecode:_this.state.breadCrumbdata.breadcrumbprojecttype.value,spositionvaluesize:_this.state.newData.length,spositionvalue:_this.state.newData.map(function(item){return item['Sample Id'];}).join('\\',\\''),isbulkretrieve:true};inputParam=_objectSpread(_objectSpread({methodUrl:\"bulkeretrieve\",operation:\"create\",classUrl:\"samplestorageretrieval\",isInitialRender:true,//  selectedRecord: {...this.state.selectedRecord},\nselectedRecord:{}},inputParam),{},{inputData:inputData});var saveType=_this.statesaveType;var masterData=_this.state.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputParam.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.state.masterData,\"openModal\");}};_this.onSampleMappingSaveClick=function(param){if(!param.isRetrieve){if(_this.state.selectedRecord[\"nneedaliquot\"]&&_this.state.selectedRecord[\"nneedaliquot\"]===true){return toast.info(_this.props.intl.formatMessage({id:\"IDS_DISABLEINPUTFORALIQUOTSAMPLE\"}));}}var mandatoryFields=param.importRetrieveOrDispose?[{\"idsName\":\"IDS_FILE\",\"dataField\":\"sfilename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}]:_this.state.selectedRecord[\"nneedaliquot\"]&&_this.state.selectedRecord[\"nneedaliquot\"]===true?[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_NEWSAMPLEID\",\"dataField\":\"saliquotsampleid\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_UNITNAME\",\"dataField\":\"nunitcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}]:[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}];onSaveMandatoryValidation(_this.state.selectedRecord,mandatoryFields,function(){return _this.CRUDSampleStorageTransaction(param);});};_this.dataStateChange=function(event){_this.setState({dataStateChange:event.dataState});};_this.dataStateGridChange=function(event){_this.setState({dataStateGridChange:event.dataState});};_this.approveSampleStorageMapping=function(event){var inputParamData={};_this.setState({loading:true});inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/approveSampleStorageMapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.fetchRecord=function(data){_this.setState({loading:true});var selectedRecord=_this.state.selectedRecord;var inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':_this.props.Login.userInfo});var url3=rsapi.post(\"samplestorageretrieval/getEditSampleStorageMapping\",{'nsamplestoragemappingcode':data.nsamplestoragemappingcode,'userinfo':_this.props.Login.userInfo});urlArray=[url1,url2,url3];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");// let containerStructure = response[0].data['containerStructure'];\nvar containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[2].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var editedObject=response[2].data.editsampleStorageMapping;storageMappingMapList.unshift({label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode});selectedRecord={ndirectionmastercode:{label:editedObject.sdirection,value:editedObject.ndirectionmastercode},nsamplestoragecontainerpathcode:{label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode},nproductcode:{label:editedObject.sproductname,value:editedObject.nproductcode},ncontainertypecode:{label:editedObject.scontainertype,value:editedObject.ncontainertypecode},ncontainerstructurecode:{label:editedObject.scontainerstructurename,value:editedObject.ncontainerstructurecode},nneedposition:editedObject.nneedposition===3?true:false,directionmasterOptions:directionmasterList,nquantity:editedObject.nquantity,nrow:editedObject.nrow,ncolumn:editedObject.ncolumn,nsamplestoragemappingcode:editedObject.nsamplestoragemappingcode};_this.setState({openSpreadSheet:false,openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,containerStructureOptions:containerstructureList,isInitialRender:true}),operation:'update',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.retrievalType=function(){var retrievalType=_this.state.retrievalType;if(retrievalType===1){retrievalType=2;}else{retrievalType=1;}_this.setState({retrievalType:retrievalType});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handlePageChangeFilter=function(event){_this.setState({kendoSkip:event.skip,kendoTake:event.take});};_this.onChange=function(immutableTree,config){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"tree\"]=immutableTree;selectedRecord[\"config\"]=config;selectedRecord['filterquery']=QbUtils.sqlFormat(immutableTree,config);_this.setState({tree:immutableTree,config:config,selectedRecord:selectedRecord});};_this.processWithGroups=function(data,dataState){var aggregates=[{field:\"navailablespace\",aggregate:\"sum\"}];var groups=dataState.group;if(groups){groups.map(function(group){return group.aggregates=aggregates;});}dataState.group=groups;var newDataState=process(data,dataState);// setGroupIds({\n//     data: newDataState.data,\n//     group: dataState.group,\n// });\nreturn newDataState;};_this.handleFilterDateChange=function(dateName,dateValue){var masterData=_this.state.masterData;masterData[dateName]=dateValue;_this.setState({masterData:masterData});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.state.screenData//this.props.Login.screenData\n};//this.props.validateEsignCredential(inputParam, this.props.Login.importRetrieveOrDispose?\"openModal\":\"\");\n_this.validateEsignCredential(inputParam,_this.state.importRetrieveOrDispose?\"openModal\":\"\");};_this.validateEsignCredential=function(inputParam,modalName,action){_this.setState({loading:true});if(inputParam&&inputParam.inputData&&inputParam.inputData.userinfo){inputParam.inputData[\"userinfo\"]=_objectSpread(_objectSpread({},inputParam.inputData.userinfo),{},{sformname:Lims_JSON_stringify(inputParam.inputData.userinfo.sformname),smodulename:Lims_JSON_stringify(inputParam.inputData.userinfo.smodulename)});}return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}// ALPD-2437 added for Type3 Component. Use selected record to clear esign values\nif(inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];}}return _this.crudMasterSampleStorageRetrieval(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"],modalName,undefined,action);}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.crudMasterSampleStorageRetrieval=function(inputParam,masterData,modalName,defaultInput,action){_this.setState({loading:true,dynamicfields:[]});var requestUrl='';var urlArray=[];if(inputParam.isFileupload){var formData=inputParam.formData;formData.append(\"userinfo\",JSON.stringify(inputParam.inputData.userinfo));requestUrl=rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,formData);}else{requestUrl=rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData));}urlArray=[requestUrl];Axios.all(urlArray).then(function(response){var _this$setState;_this.setState((_this$setState={isInitialRender:true,selectedRecord:{},masterData:_objectSpread(_objectSpread({},masterData),response[0].data)},_defineProperty(_this$setState,modalName,false),_defineProperty(_this$setState,\"loading\",false),_defineProperty(_this$setState,\"loadEsign\",false),_this$setState));}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loadEsign:false,loading:false});});};_this.state={retrievalType:1,// extractedColumnList: [   \n//     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\n//     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\n//     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\n//     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\n// ],\nsheetData:{},selectedRecordFilter:{},// treeData: [{ title: 'Chicken', children: [{ title: 'Egg' }] }],\ntoggleAction:false,treeDataView:undefined,toggleActionView:false,treeData:[{//  text: \"root\",\ntext:_this.props.intl.formatMessage({id:\"IDS_ROOT\"}),expanded:true,editable:true,root:true,id:uuid()}],panes:[{size:'50%',scrollable:false}],selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),skip:0,detailSkip:0,detailTake:10,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,splitChangeWidthPercentage:22,selectedItem:undefined,loading:false,esignreason:_this.props.esignreason,dataStateGridChange:{take:10,skip:0},dataStateChange:{take:10,skip:0// group: [\n//     {\n//         field: \"ssamplestoragelocationname\",\n//     },\n// ],\n}};var fields={};// if (this.state.extractedColumnList) {\n//     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\n//     // ,...this.state.extractedColumnList]\n//     this.state.extractedColumnList.map(field => {\n//         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\n//             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\n//             fields = {\n//                 ...fields,\n//                 [field.dataField]: {\n//                     \"label\":\n//                         this.props.intl.formatMessage({\n//                             id: field.idsName,\n//                         })\n//                     ,\n//                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\n//                     \"valueSources\": [\"value\", \"func\"],\n//                     \"mainWidgetProps\": {\n//                         \"valueLabel\": \"Name\",\n//                         \"valuePlaceholder\": this.props.intl.formatMessage({\n//                             id: field.idsName\n//                         })\n//                     }\n//                 }\n//             }\n//         }\n//     });\n// }\n_this.state=_objectSpread(_objectSpread({},_this.state),{},{'fields':fields});_this.searchRef=React.createRef();_this.dragClue=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageRetrieval,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var _this2=this;var _this$state=this.state,filterData=_this$state.filterData,storageCategoryOptions=_this$state.storageCategoryOptions,selectedRecord=_this$state.selectedRecord,controlMap=_this$state.controlMap,userRoleControlRights=_this$state.userRoleControlRights,storageLocationOptions=_this$state.storageLocationOptions,sampleStorageVersionOptions=_this$state.sampleStorageVersionOptions,masterData=_this$state.masterData,selectedRecordFilter=_this$state.selectedRecordFilter,fields=_this$state.fields,selectedProjectType=_this$state.selectedProjectType,selectedProjectTypeList=_this$state.selectedProjectTypeList,breadCrumbdata=_this$state.breadCrumbdata,openModal=_this$state.openModal,isInitialRender=_this$state.isInitialRender,dynamicfields=_this$state.dynamicfields;var bool=false;///////////////////////////////\n//  if(this.props.Login.importRetrieveOrDispose){\nif(this.props.Login.openModal!==previousProps.Login.openModal){bool=true;openModal=this.props.Login.openModal;}//}\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord||{};bool=true;isInitialRender=true;dynamicfields=[];// selectedRecord['spositionvalue'] = \"\";\n// selectedRecord['scomments'] = \"\"; \nselectedRecord['nprojecttypecode']=previousProps.Login.selectedRecord.nprojecttypecode;}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){var queryBuilderFreezer=[];bool=true;this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.map(function(item){return queryBuilderFreezer.push({\"value\":item.nsamplestoragelocationcode,\"title\":item.ssamplestoragelocationname});});fields=_objectSpread(_objectSpread({},fields),{},{'nsamplestoragelocationcode':{\"label\":this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":queryBuilderFreezer}}});}// if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\n//     )\n//     fields = {\n//         ...fields,\n//         'nproductcode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PRODUCT\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n// if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\n//     )\n//     fields = {\n//         ...fields,\n//         'nprojecttypecode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PROJECTTYPE\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\n//     )\n//     fields = {\n//         ...fields,\n//         'nvisitnumbercode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_VISITNUMBER\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n///////////////////////////////\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){bool=true;userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.filterStorageCategory!==previousProps.Login.masterData.filterStorageCategory){bool=true;var filterStorageCategorylist=constructOptionList(this.props.Login.masterData.filterStorageCategory||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,undefined);storageCategoryOptions=filterStorageCategorylist.get(\"OptionList\");if(this.props.Login.masterData.selectedStorageCategory){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nstoragecategorycode:storageCategoryOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedStorageCategory.nstoragecategorycode;})[0]});}}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){bool=true;var sampleStorageLocationList=constructOptionList(this.props.Login.masterData.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageLocation){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode;})[0]});}}if(this.props.Login.masterData.sampleStorageVersion!==previousProps.Login.masterData.sampleStorageVersion){bool=true;var sampleStorageVersionList=constructOptionList(this.props.Login.masterData.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageVersion){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestorageversioncode:sampleStorageVersionOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode;})[0]});}}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;masterData=this.props.Login.masterData;if(selectedRecord[\"nprojecttypecode\"]===undefined){selectedRecord[\"nprojecttypecode\"]={label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA',value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode?this.props.Login.masterData.selectedProjectType.nprojecttypecode:-1};// selectedRecord[\"nprojecttypecode\"] = {\n//     label: this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename &&\n//     this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename ?\n//    this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename: 'NA'\n//     , value: this.state.selectedProjectType && this.state.selectedProjectType.nprojecttypecode.item.nprojecttypecode\n// }; \nselectedProjectType={nprojecttypecode:{label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA',value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode?this.props.Login.masterData.selectedProjectType.nprojecttypecode:-1}};breadCrumbdata=_objectSpread(_objectSpread({},convertDateValuetoString(this.props.Login.masterData.fromDate,this.props.Login.masterData.toDate,this.props.Login.userInfo)),{},{breadcrumbprojecttype:{label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename?this.props.Login.masterData.selectedProjectType.sprojecttypename:'NA',value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode?this.props.Login.masterData.selectedProjectType.nprojecttypecode:-1}});}if(this.props.Login.masterData.projectbarcodeconfig!==previousProps.Login.masterData.projectbarcodeconfig){selectedProjectTypeList=this.props.Login.masterData.selectedProjectTypeList;var _filterStorageCategorylist=constructOptionList(this.props.Login.masterData.projectbarcodeconfig||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);masterData['projectbarcodeconfig']=_filterStorageCategorylist.get(\"OptionList\");}filterData=this.generateBreadCrumData(this.props.Login.masterData);}if(this.state.export){this._excelExportHeader.save();this.setState({export:false});}//     if(this.props.Login.importRetrieveOrDispose!== previousProps.Login.importRetrieveOrDispose){\n//         //bool = true;\n//            // importRetrieveOrDispose=this.props.Login.importRetrieveOrDispose\n//             //openModal = this.props.Login.importRetrieveOrDispose?this.props.Login.openModal:true;\n//     }\n//     if(this.props.Login.isRetrieveOrDispose!== previousProps.Login.isRetrieveOrDispose){\n//         // bool = true;\n//      // isRetrieveOrDispose=this.props.Login.importRetrieveOrDispose?this.props.Login.isRetrieveOrDispose :true;\n//  }\n/*    if (this.state.masterData !== previousState.masterData) {\r\n                bool = true;\r\n    \r\n                selectedRecord[\"nprojecttypecode\"] = {\r\n                    label: this.state.masterData.selectedProjectType &&\r\n                        this.state.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.state.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                    , value: this.state.masterData.selectedProjectType && this.state.masterData.selectedProjectType.nprojecttypecode\r\n                };\r\n                selectedProjectType = {\r\n                    nprojecttypecode: {\r\n                        label: this.state.masterData.selectedProjectType &&\r\n                        this.state.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.state.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                        , value: this.state.masterData.selectedProjectType && this.state.masterData.selectedProjectType.nprojecttypecode\r\n                    }\r\n                };\r\n             \r\n    \r\n                //this.state.masterData.projectbarcodeconfig=previousState.masterData.projectbarcodeconfig;\r\n    \r\n                filterData = this.generateBreadCrumData(this.state.masterData);\r\n    \r\n            }*/if(bool){this.setState({storageCategoryOptions:storageCategoryOptions,filterData:filterData,selectedRecord:selectedRecord,controlMap:controlMap,userRoleControlRights:userRoleControlRights,storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,masterData:masterData,selectedRecordFilter:selectedRecordFilter,fields:fields,selectedProjectType:selectedProjectType,selectedProjectTypeList:selectedProjectTypeList,breadCrumbdata:breadCrumbdata,isInitialRender:isInitialRender,openModal:openModal,dynamicfields:dynamicfields//,importRetrieveOrDispose,isRetrieveOrDispose\n});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(obj){var breadCrumbData=[];if(this.state.masterData&&this.state.masterData.filterStorageCategory){breadCrumbData.push({\"label\":\"IDS_STORAGECATEGORY\",\"value\":obj.selectedStorageCategoryName&&obj.selectedStorageCategoryName!==null?obj.selectedStorageCategoryName:\"NA\"}// ,\n// {\n//     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\n//     \"value\": obj.selectedSampleStorageLocation &&\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\n// },\n// {\n//     \"label\": \"IDS_STORAGECATEGORYVERSION\",\n//     \"value\": obj.selectedSampleStorageVersion &&\n//         obj.selectedSampleStorageVersion.nversionno !== null ?\n//         obj.selectedSampleStorageVersion.nversionno : \"NA\"\n// }\n);}return breadCrumbData;}},{key:\"getSampleStorageLocation\",value:function getSampleStorageLocation(inputData,fieldName,comboData){var _this3=this;var selectedRecordFilter=this.state.selectedRecordFilter||{};var inputParamData={};this.setState({loading:true});if(fieldName==='nsamplestoragelocationcode'){inputParamData={nstoragecategorycode:selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value,userinfo:inputData.userinfo};}else{inputParamData={nstoragecategorycode:comboData.value,userinfo:inputData.userinfo};}var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this3$state=_this3.state,storageLocationOptions=_this3$state.storageLocationOptions,sampleStorageVersionOptions=_this3$state.sampleStorageVersionOptions;var sampleStorageLocationList=constructOptionList(response[0].data.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");var sampleStorageVersionList=constructOptionList(response[0].data.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.length>0?storageLocationOptions[0]:[],nsamplestorageversioncode:sampleStorageVersionOptions.length>0?sampleStorageVersionOptions[0]:[]});_this3.setState({storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,selectedRecordFilter:_objectSpread(_objectSpread({},selectedRecordFilter),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this3.setState({loading:false});});}},{key:\"addSampleStorageMapping\",value:function addSampleStorageMapping(){var _this4=this;this.setState({loading:true});var selectedRecord=this.state.selectedRecord;var inputParamData={// nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\nnsamplestoragelocationcode:this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':this.props.Login.userInfo});// const url3 = rsapi.post(\"containertype/getContainerType\",\n//     { 'userinfo': this.props.Login.userInfo });\nurlArray=[url1,url2];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[0].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);//const containerstructureList = containerstructureMap.get(\"OptionList\");\nvar productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");_this4.setState({openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,directionmasterOptions:directionmasterList,// ncontainertypecode: containerTypeList[0],\n// containerStructureOptions: containerstructureList,\n// ncontainerstructurecode: containerstructureList[0],\nnrow:containerStructure.length>0?containerStructure[0].nrow:1,ncolumn:containerStructure.length>0?containerStructure[0].ncolumn:1,isInitialRender:true}),openSpreadSheet:false,operation:'create',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this4.setState({loading:false});});}},{key:\"getprojectbarcodeconfigForSubmit\",value:function getprojectbarcodeconfigForSubmit(nflag){var _this5=this;var inputParamData={};this.setState({loading:true});var obj=convertDateValuetoString(this.state.masterData.fromDate,this.state.masterData.toDate,this.props.Login.userInfo);inputParamData={nprojecttypecode:this.state.selectedProjectType.nprojecttypecode.value,isFilterSubmit:nflag,// fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\n// toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\nfromDate:obj.fromDate,toDate:obj.toDate,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){//let masterData = this.state.masterData.samplestorageretrieval;\n_this5.setState(nflag===false?{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),// selectedRecord: {\n//     nprojecttypecode: { label: comboData.label, value: comboData.value }\n// },\nloading:false}:{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),breadCrumbdata:_objectSpread({breadcrumbprojecttype:{label:_this5.state.selectedProjectType.nprojecttypecode.label,value:_this5.state.selectedProjectType.nprojecttypecode.value}},convertDateValuetoString(_this5.state.masterData.fromDate,_this5.state.masterData.toDate,_this5.props.Login.userInfo)),masterData:_objectSpread(_objectSpread({},_this5.state.masterData),{},{fromDate:rearrangeDateFormat(_this5.props.Login.userInfo,_this5.state.masterData.fromDate),toDate:rearrangeDateFormat(_this5.props.Login.userInfo,_this5.state.masterData.toDate),samplestorageretrieval:response[0].data.samplestorageretrieval}),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this5.setState({loading:false});});}},{key:\"getprojectbarcodeconfig\",value:function getprojectbarcodeconfig(nflag){var _this6=this;var inputParamData={};this.setState({loading:true});var obj=convertDateValuetoString(this.state.masterData.fromDate,this.state.masterData.toDate,this.props.Login.userInfo);inputParamData={nprojecttypecode:this.state.breadCrumbdata.breadcrumbprojecttype.value,isFilterSubmit:nflag,// fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\n// toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\nfromDate:obj.fromDate,toDate:obj.toDate,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){//let masterData = this.state.masterData.samplestorageretrieval\n_this6.setState(nflag===false?{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),// selectedRecord: {\n//     nprojecttypecode: { label: comboData.label, value: comboData.value }\n// },\nloading:false}:{selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),/*breadCrumbdata: {\r\n                        breadcrumbprojecttype: {\r\n                            label: this.state.selectedProjectType.nprojecttypecode.label,\r\n                            value: this.state.selectedProjectType.nprojecttypecode.value\r\n                        },\r\n                        ...convertDateValuetoString(this.state.masterData.fromDate,\r\n                            this.state.masterData.toDate, this.props.Login.userInfo)\r\n                    },*/masterData:_objectSpread(_objectSpread({},_this6.state.masterData),{},{fromDate:rearrangeDateFormat(_this6.props.Login.userInfo,_this6.state.masterData.fromDate),toDate:rearrangeDateFormat(_this6.props.Login.userInfo,_this6.state.masterData.toDate),samplestorageretrieval:response[0].data.samplestorageretrieval}),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this6.setState({loading:false});});}},{key:\"getContainerStructure\",value:function getContainerStructure(inputData,fieldName,comboData){var _this7=this;var inputParamData={};this.setState({loading:true});inputParamData={ncontainertypecode:comboData.value,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestorageretrieval/getContainerStructure\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this7$state=_this7.state,containerStructureOptions=_this7$state.containerStructureOptions,selectedRecord=_this7$state.selectedRecord;var containerStructureList=constructOptionList(response[0].data.containerStructure||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,undefined);containerStructureOptions=containerStructureList.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nrow:containerStructureOptions.length>0?containerStructureOptions[0].item.nrow:1,ncolumn:containerStructureOptions.length>0?containerStructureOptions[0].item.ncolumn:1,ncontainerstructurecode:containerStructureOptions.length>0?containerStructureOptions[0]:[],containerStructureOptions:containerStructureOptions.length>0?_toConsumableArray(containerStructureOptions):[]});_this7.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this7.setState({loading:false});});}},{key:\"getSelectedBarcodeData\",value:function getSelectedBarcodeData(e,inputParam){var _this8=this;if(e.keyCode===13){this.setState({loading:true});//let selectedRecord = this.state.selectedRecord || {};\nvar urlArray=[];var url1=rsapi.post(\"/samplestorageretrieval/getSelectedBarcodeData\",{// nprojecttypecode: this.state.selectedBarcodeValue.nprojecttypecode,\nspositionvalue:inputParam.spositionvalue,userinfo:this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){var dynamicfields=[];dynamicfields=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_POSITION\",\"dataField\":\"sposition\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\",\"staticField\":true}];var temparray2=response[0].data['selectedProjectTypeList']&&response[0].data['selectedProjectTypeList'].map(function(option){return{\"idsName\":option.sfieldname,\"dataField\":option.sfieldname,\"width\":\"200px\"};});dynamicfields=[].concat(_toConsumableArray(dynamicfields),_toConsumableArray(temparray2));_this8.setState({dynamicfields:dynamicfields,selectedBarcodeValue:_objectSpread({},response[0].data['selectedBarcodeValue']),loading:false});}).catch(function(error){_this8.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{_this8.setState({dynamicfields:[],selectedBarcodeValue:{}});toast.info(error.response.data);}});}}},{key:\"getDynamicFilterExecuteData\",value:function getDynamicFilterExecuteData(nflag){var _this9=this;var selectedRecord=this.state.selectedRecord||{};if(nflag===2?true:selectedRecord.filterquery&&selectedRecord.filterquery!==\"\"){this.setState({loading:true});var obj={// ...inputParam.component, \nlabel:'samplestorageretrieval',valuemember:'nsamplestorageretrievalcode',filterquery:nflag===2?this.state.submittedselectedRecord.filterquery:selectedRecord.filterquery,fromDate:rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.fromDate),toDate:rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.toDate),nprojecttypecode:this.state.breadCrumbdata.breadcrumbprojecttype.value,source:'view_sampleretrieval_'+this.state.breadCrumbdata.breadcrumbprojecttype.value,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\",obj);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this9.state.masterData;masterData=_objectSpread(_objectSpread({},masterData),response[0].data);_this9.setState({masterData:_objectSpread({},masterData),loading:false,openModal:false,isFilterPopup:false,submittedselectedRecord:nflag===2?_objectSpread({},_this9.state.submittedselectedRecord):_objectSpread({},selectedRecord),selectedRecord:{},displayQuery:_this9.state.tree?QbUtils.queryString(_this9.state.tree,_this9.state.config,true):\"\"});}).catch(function(error){_this9.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAFILTER\"}));}}// getDynamicFilterExecuteData(nflag) {\n//     this.setState({ loading: true })\n//     let selectedRecord = this.state.selectedRecord || {};\n//     let obj = {// ...inputParam.component, \n//         label: 'samplestorageretrieval', valuemember: 'nsamplestoragetransactioncode',\n//         filterquery:   \n//         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\n//     }\n//     let urlArray = [];\n//     const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\n//     urlArray = [url1];\n//     Axios.all(urlArray)\n//         .then(response => {\n//             console.log(response)\n//             let masterData = this.state.masterData\n//             masterData = { ...masterData, ...response[0].data }\n//             this.setState({\n//                 masterData: { ...masterData },\n//                 loading: false,\n//                 openModal: false,\n//                 submittedselectedRecord: nflag === 2 ?\n//                     { ...this.state.submittedselectedRecord }\n//                     :\n//                     { ...selectedRecord }\n//                 ,\n//                 isFilterPopup: false,\n//                 selectedRecord: {}\n//             })\n//         })\n//         .catch(error => {\n//             this.setState({\n//                 loading: false\n//             });\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             }\n//             else {\n//                 toast.info(error.response.data.rtn);\n//             }\n//         })\n// }\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.openModal&&nextState.isInitialRender===false&&nextState.selectedRecord!==this.state.selectedRecord){return false;}else if(this.state.openModal&&nextState.isInitialRender===false&&nextState.sheetData!==this.state.sheetData){return false;}else{return true;}}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){//  const tempArray = [];\nvar temparray1=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_STORAGESTRUCTURE\",\"dataField\":\"ssamplestoragelocationname\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_PATHWITHPOSITION\",\"dataField\":\"scontainerpathwithposition\",\"width\":\"500px\",\"staticField\":true},{\"idsName\":\"IDS_CONTAINERID\",\"dataField\":\"sboxid\",\"width\":\"200px\",\"staticField\":true},//  { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\n{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_TRANSACTIONSTATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_TRANSACTIONDATE\",\"dataField\":\"dtransactiondate\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",\"staticField\":true}];var temparray2=data&&data.map(function(option){return{\"idsName\":option.sfieldname,\"dataField\":option.sfieldname,\"width\":\"200px\"};});var newArray=[].concat(temparray1,_toConsumableArray(temparray2));return newArray;}},{key:\"render\",value:// handleAdd = e => {\n//     let file = e.newState[0].getRawFile();\n//     /* Boilerplate to set up FileReader */\n//     const reader = new FileReader();\n//     const rABS = !!reader.readAsBinaryString;\n//     reader.onload = e => {\n//       /* Parse data */\n//       const bstr = e.target.result;\n//       const wb = XLSX.read(bstr, {\n//         type: rABS ? \"binary\" : \"array\",\n//         bookVBA: true\n//       });\n//       /* Get first worksheet */\n//       const wsname = wb.SheetNames[0];\n//       const ws = wb.Sheets[wsname];\n//       /* Convert array of arrays */\n//       const newData = XLSX.utils.sheet_to_json(ws); \n//       /* Update state */\n//       this.setState({\n//         newData\n//       })\n//     };\n//     if (rABS) {\n//       reader.readAsBinaryString(file);\n//     } else {\n//       reader.readAsArrayBuffer(file);\n//     }\n//   };\nfunction render(){var _this10=this;// const addId = this.state.controlMap.has(\"Add samplestorageretrieval\") && this.state.controlMap.get(\"Add samplestorageretrieval\").ncontrolcode;\n// const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\n// const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\n// const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\n// const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\n// const retrievedispose = this.state.controlMap.has(\"Retrieve/Dispose\") && this.state.controlMap.get(\"Retrieve/Dispose\").ncontrolcode;\n// const retrieve = this.state.controlMap.has(\"Retrieve\") && this.state.controlMap.get(\"Retrieve\").ncontrolcode;\n// const dispose = this.state.controlMap.has(\"Dispose\") && this.state.controlMap.get(\"Dispose\").ncontrolcode;\nvar fromDate=this.state.masterData&&this.state.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.fromDate):new Date();var toDate=this.state.masterData&&this.state.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.state.masterData.toDate):new Date();//  let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\nvar extractedColumnList=this.state.selectedProjectTypeList?this.gridfillingColumn(this.state.selectedProjectTypeList):[];var fields={};if(extractedColumnList.length>0){extractedColumnList.map(function(field){field.hasOwnProperty(\"staticField\")?fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},field.dataField,{\"label\":_this10.props.intl.formatMessage({id:field.idsName}),\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":_this10.props.intl.formatMessage({id:field.idsName})}})):fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},'\"'+field.dataField+'\"',{\"label\":field.dataField,\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":field.dataField}}));});}// const filterParam = {\n//     inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\n//     fetchUrl: \"samplestorageretrieval/getActiveSampleStorageMappingById\",\n//     fecthInputObject: { userinfo: this.props.Login.userInfo },\n//     masterData: this.props.Login.masterData,\n//     searchFieldList: [\"ssamplestoragelocationname\"]\n// };\nvar breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadCrumbFrom?this.state.breadCrumbdata.breadCrumbFrom:'IDS_NA'},{\"label\":\"IDS_TO\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadCrumbto?this.state.breadCrumbdata.breadCrumbto:'IDS_NA'},{\"label\":\"IDS_PROJECTTYPE\",\"value\":this.state.breadCrumbdata&&this.state.breadCrumbdata.breadcrumbprojecttype?this.state.breadCrumbdata.breadcrumbprojecttype.label:'IDS_NA'}];//const confirmMessage = new ConfirmMessage();\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/ //this.state.retrievalType === 1 ?\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData}),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(AdvFilter,{filterComponent:[{\"IDS_SAMPLESTORAGERETRIEVEFILTER\":/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_FROM\"}),selected:fromDate,value:fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this10.handleFilterDateChange(\"fromDate\",date);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_TO\"}),selected:toDate,value:toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this10.handleFilterDateChange(\"toDate\",date);}}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nprojecttypecode\",as:\"select\",onChange:function onChange(event){return _this10.onComboChange(event,'nprojecttypecode');},formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isMandatory:this.state.selectedRecord[\"nneedposition\"],value:this.state.selectedProjectType&&this.state.selectedProjectType[\"nprojecttypecode\"]?this.state.selectedProjectType[\"nprojecttypecode\"]||[]:[],options:this.state.masterData&&(this.state.masterData.projectbarcodeconfig||[]),optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:false,isClearable:false})))))}],dataFor:\"tooltip_list_wrap\",onFilterSubmit:this.onFilterSubmit,showFilter:this.state.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,showModalBg:function showModalBg(e){return _this10.setState({showModalBg:e});}})))),this.state.selectedProjectTypeList&&/*#__PURE__*/React.createElement(Row,null,\" \",/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid// isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\n//     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n// isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\n//     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n,{isCustomButton:true,customButtonlist:[//     {\n//     label: 'IDS_SEARCH',\n//     id: {},\n//     onClick: () => this.opensearch(),\n//     controlname: 'faSearch'\n// },\n// {\n//     label: 'IDS_BULKRETRIEVE',\n//     id: {},\n//     // hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\n//     onClick: () => this.openbulkretrieve(),\n//     controlname: 'faRecycle'\n// },\n{label:'IDS_RETRIEVEDISPOSE',id:{},// hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\nonClick:function onClick(){return _this10.openRetrieveDispose();},controlname:'faRecycle'},{label:'IDS_EXPORTTEMPLATE',id:{},// hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\nonClick:function onClick(){return _this10.handleExportClick();},controlname:'faFileExcel'},{label:'IDS_BULKRETRIEVEDISPOSE',id:{},// hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\nonClick:function onClick(){return _this10.bulkRetrieveDispose();},controlname:'faFileImport'}// {\n//     label: 'IDS_RETRIEVE',\n//     hidden : this.state.userRoleControlRights.indexOf(retrieve) === -1,\n//     onClick: () => this.openRetrieve(),\n//     controlname: 'faRecycle'\n// }\n// {\n//     label: 'IDS_DISPOSE',\n//     id: {},\n//     hidden : this.state.userRoleControlRights.indexOf(dispose) === -1,\n//     onClick: () => this.openDispose(),\n//     controlname: 'faRecycle'\n// }\n],isRefreshRequired:false// onGroupChange={this.handleGroupChange}\n,primaryKeyField:'nsamplestoragetransactioncode'//data={this.state.masterData &&\n//  this.state.masterData.samplestorageretrieval}\n,data:this.state.masterData&&this.state.masterData.samplestorageretrieval?this.state.masterData.samplestorageretrieval.map(function(item){var parsedData={};parsedData=JSON.parse(item.jsondata.value)||{};return _objectSpread(_objectSpread({},item),parsedData);}):[],dataResult:this.state.masterData&&this.state.masterData.samplestorageretrieval?process(this.state.masterData.samplestorageretrieval.map(function(item){var parsedData={};parsedData=JSON.parse(item.jsondata.value)||{};return _objectSpread(_objectSpread({},item),parsedData);})||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}):[]// this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\n//     this.state.dataStateChange ? this.state.dataStateChange : {\n//         take: 10,\n//         skip: 0\n//     })\n,dataState:this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10},dataStateChange:this.dataStateChange,extractedColumnList:extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,deleteRecord:this.deleteRecord,addRecord:function addRecord(){return _this10.openStorageMapping();},pageable:true,scrollable:'scrollable'// isComponent={true}\n,gridHeight:'600px'// isActionRequired={true}\n,isToolBarRequired:true// actionIcons={\n//     [{\n//         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\n//         controlname: \"faPenSquare\",\n//         hidden: false,\n//         objectName: \"add\",\n//         onClick: (param) => this.addSample(param, 1)\n//     }]}\n}))),this.state.export?/*#__PURE__*/React.createElement(LocalizationProvider,null,/*#__PURE__*/React.createElement(ExcelExport,{data:[],collapsible:true,fileName:this.props.Login.displayName&&this.props.Login.displayName,ref:function ref(exporter){_this10._excelExportHeader=exporter;}},_toConsumableArray(this.state.exportFiled).map(function(item){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this10.props.intl.formatMessage({id:item.idsName}),width:200});}))):\"\"))),this.state.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.state.openModal,closeModal:this.closeModal,hideSave:this.state.isbulkretrieve?false:true,showSubmit:false,needClose:this.state.loadEsign?false:true,size:this.state.isbulkretrieve||this.state.openSpreadSheet||this.state.isFilterPopup?'xl':\"\",operation:\"\",inputParam:this.props.Login.inputParam,screenName:this.state.importRetrieveOrDispose?\"IDS_BULKRETRIEVE\":this.props.Login.loadEsign===true?this.props.intl.formatMessage({id:\"IDS_ESIGN\"}):this.state.isRetrieveOrDispose?this.props.intl.formatMessage({id:\"IDS_RETRIEVEDISPOSE\"}):this.state.isFilterPopup?\"\":this.state.isMultiSampleAdd?this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURE\"}):this.state.editedsheetData&&this.state.editedsheetData.scontainerpath,onSaveClick:this.state.isFilterPopup?this.getDynamicFilterExecuteData.bind(this):this.onSampleMappingSaveClick,esign:this.state.loadEsign// className={\"wide-popup\"}\n,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},addComponent:// this.state.isbulkretrieve ?\n//     <>\n//         <Upload\n//            batch={false}\n//                multiple={false}\n//                defaultFiles={[]}\n//                withCredentials={false}\n//                autoUpload={false}\n//                onAdd={this.handleAdd}\n//         />\n//         <hr />\n//         <Grid   \n//   pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings &&\n//      this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)),\n//       previousNext: false}} \n//         onDataStateChange={this.dataStateGridChange}\n//         data={ process(this.state.newData || [],\n//                         this.state.dataStateGridChange ? \n//                         this.state.dataStateGridChange :\n//                          { skip: 0, take: 10 })} \n//         key={this.state.newData} \n//      />\n//     </>\n//     :\n// ALPD-5120 : Added by rukshana this.state.serverTime for Sample Retrieval and Disposal screen : E-signature's date and time not displayed in popup \nthis.state.loadEsign?/*#__PURE__*/ //this.props.Login.loadEsign ?\nReact.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{},esignReasonList:this.state.esign||[],serverTime:this.state.serverTime||[]}):this.state.isRetrieveOrDispose?/*#__PURE__*/React.createElement(RetrieveOrDiposeSample,{dynamicfields:this.state.dynamicfields,userRoleControlRights:this.state.userRoleControlRights,selectedRecord:this.state.selectedRecord||{},controlMap:this.state.controlMap,childDataChange:this.childDataChange,CRUDSampleStorageTransaction:this.onSampleMappingSaveClick,intl:this.props.intl,userInfo:this.props.Login.userInfo,unitMapList:this.state.unitMapList,loadEsign:this.props.Login.loadEsign,isRetrieveOrDispose:this.state.isRetrieveOrDispose,breadcrumbprojecttype:this.state.breadCrumbdata.breadcrumbprojecttype}):this.state.importRetrieveOrDispose?/*#__PURE__*/React.createElement(BulkRetrieveOrDiposeSample,{dynamicfields:this.state.dynamicfields,userRoleControlRights:this.state.userRoleControlRights,selectedRecord:this.state.selectedRecord||{},controlMap:this.state.controlMap,childDataChange:this.childDataChange,CRUDSampleStorageTransaction:this.onSampleMappingSaveClick,intl:this.props.intl,userInfo:this.props.Login.userInfo,unitMapList:this.state.unitMapList,importRetrieveOrDispose:this.state.importRetrieveOrDispose,loadEsign:this.props.Login.loadEsign//isRetrieveOrDispose={this.state.isRetrieveOrDispose}\n}):this.state.isFilterPopup?/*#__PURE__*/React.createElement(FilterQueryBuilder,{fields:fields,isSampleStorage:true,queryArray:this.state.queryArray,skip:this.state.kendoSkip,take:this.state.kendoTake,onChange:this.onChange,tree:this.props.Login.tree!==undefined?this.props.Login.tree:this.state.selectedRecord.tree,gridColumns:this.slideList,filterData:this.props.Login.slideResult||[],handlePageChange:this.handlePageChangeFilter,static:true,userInfo:this.props.Login.userInfo,updateStore:this.props.updateStore})://Command by Neeraj\n//ALPD-4749\n//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\n// this.state.loadEsign ?//this.props.Login.loadEsign ?\n//     <Esign operation={this.props.Login.operation}\n//         formatMessage={this.props.intl.formatMessage}\n//         onInputOnChange={this.onInputOnChange}\n//         inputParam={this.props.Login.inputParam}\n//         selectedRecord={this.state.selectedRecord || {}}\n//     />\n//     :\nthis.state.openSpreadSheet?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MatrixComponent,{Rows:this.state.Rows||1,userInfo:this.props.Login.userInfo,columns:this.state.columns||1,selectedRecord:this.state.selectedRecord.sheetData||{},sheetData:this.state.sheetData||{},isMultiSampleAdd:this.state.isMultiSampleAdd,childSheetDataChange:this.childSheetDataChange,editedsheetData:this.state.editedsheetData,multipleSheetData:this.state.masterData&&this.state.masterData.samplestorageretrieval&&process(this.state.masterData.samplestorageretrieval||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}).data})):/*#__PURE__*/React.createElement(AddSampleStorageMapping,{operation:this.state.operation,selectedRecordFilter:this.state.selectedRecordFilter,onInputChange:function onInputChange(e){return _this10.onInputChange(e);},onComboChange:this.onComboChange,selectedRecord:this.state.selectedRecord||{},childDataChange:this.childDataChange,userInfo:this.props.Login.userInfo})}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleStorageRetrieval;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(SampleStorageRetrieval));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/SampleStorageRetrieval.jsx"],"names":["React","Component","connect","injectIntl","Row","Col","InputGroup","toast","constructOptionList","convertDateValuetoString","getControlMap","onSaveMandatoryValidation","rearrangeDateFormat","searchData","searchJsonData","showEsign","sortData","Lims_JSON_stringify","FormSelectSearch","DataGrid","Utils","QbUtils","SlideOutModal","callService","crudMaster","validateEsignCredential","updateStore","DEFAULT_RETURN","ListWrapper","uuid","ConfirmMessage","BreadcrumbComponent","transactionStatus","Esign","rsapi","AddSampleStorageMapping","Axios","Preloader","process","MatrixComponent","FilterQueryBuilder","AdvFilter","DateTimePicker","RetrieveOrDiposeSample","ExcelExport","ExcelExportColumn","LocalizationProvider","BulkRetrieveOrDiposeSample","SampleStorageRetrieval","props","dragOverCnt","isDragDrop","SEPARATOR","uniqueIDArr","countforTree","pointedItem","undefined","getitemPath","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","treeData","text","expanded","editable","root","id","operation","closeModal","loadEsign","state","Login","setState","selectedId","getprojectbarcodeconfig","isInitialRender","isFilterPopup","isRetrieveOrDispose","importRetrieveOrDispose","onInputChange","event","target","type","name","checked","value","onSaveClick","saveType","formRef","onSaveProperties","openSpreadSheet","CRUDSampleStorageTransaction","editedsheetData","nsamplestoragemappingcode","isMultiSampleAdd","Object","keys","sheetData","map","join","toString","nsamplestoragelocationcode","JSON","stringify","sheetUpdate","userinfo","userInfo","onSaveSampleStorageTransaction","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","e","skip","take","handleDetailPageChange","openFilter","boolean","showFilter","closeFilter","reloadData","onFilterSubmit","onEditSampleStorageLocation","selectedSampleStorageVersion","editId","handleSearch","searchedTreeData","searchRef","current","isOnlyDraft","masterData","sampleStorageVersion","length","editSampleStorageLocation","openStorageMapping","addId","addSampleStorageMapping","deletesamplestoragemapping","param","selectedSampleStorageLocation","addMultipleSample","loading","opensearch","submittedselectedRecord","openbulkretrieve","isbulkretrieve","handleExportClick","exportFiled","export","bulkRetrieveDispose","openRetrieveDispose","urlArray","url1","post","all","then","response","unitMap","unit","get","unitMapList","dynamicfields","selectedBarcodeValue","catch","error","status","message","warn","addSample","nflag","samplestorageretrieval","item","parse","Rows","nrow","columns","ncolumn","onComboChange","comboData","fieldName","selectedProjectType","selectedRecordFilter","getSampleStorageLocation","nstoragecategorycode","getContainerStructure","ncontainertypecode","containerpathCodeArray","inputParam","nsamplestoragetransactioncode","parseInt","nproductcode","ndirectionmastercode","ssamplestoragemappingname","nsamplestoragecontainerpathcode","containerpathsize","nneedposition","ncontainerstructurecode","nquantity","userRoleControlRights","nformcode","ncontrolcode","screenData","getsamplestoragetransaction","childDataChange","childSheetDataChange","getActiveSampleStorageMappingById","filterColumnData","filterValue","filterParam","primaryKeyValue","searchedData","inputListName","primaryKeyField","isjsondata","searchFieldList","fetchUrl","fecthInputObject","sortField","sortOrder","intl","formatMessage","selectedObject","forEach","unchangeList","indexOf","modalName","onNumericInputChange","field","constantvalue","isNaN","validateRetrievOrDispose","saliquotsampleid","info","nunitcode","inputData","obj","fromDate","toDate","isFileupload","formData","FormData","scomments","spositionvalue","sunitname","isRetrieve","nneedaliquot","breadCrumbdata","breadcrumbprojecttype","append","Retrieved","Disposed","methodUrl","classUrl","statesaveType","currentTimeUrl","reasonUrl","reasonMap","reasonList","esign","serverTime","crudMasterSampleStorageRetrieval","getprojectbarcodeconfigForSubmit","bulkeretrieval","nprojecttypecode","spositionvaluesize","newData","onSampleMappingSaveClick","mandatoryFields","dataStateChange","dataState","dataStateGridChange","approveSampleStorageMapping","inputParamData","fetchRecord","url2","url3","storageMappingMap","storageMappingMapList","containerTypeMap","containerTypeList","directionmasterMap","directionmasterList","containerstructureMap","containerstructureList","productMap","productList","editedObject","editsampleStorageMapping","unshift","label","scontainerpath","sdirection","sproductname","scontainertype","scontainerstructurename","directionmasterOptions","storageMappingMapOptions","productOptions","containerTypeOptions","containerStructureOptions","retrievalType","onInputOnChange","handlePageChangeFilter","kendoSkip","kendoTake","onChange","immutableTree","config","sqlFormat","tree","processWithGroups","aggregates","aggregate","groups","group","newDataState","handleFilterDateChange","dateName","dateValue","validateEsign","sreason","nreasoncode","spredefinedreason","password","action","sformname","smodulename","toLowerCase","defaultInput","requestUrl","toggleAction","treeDataView","toggleActionView","panes","size","scrollable","controlMap","Map","detailSkip","detailTake","settings","selectedItem","esignreason","fields","createRef","dragClue","confirmMessage","previousProps","previousState","filterData","storageCategoryOptions","storageLocationOptions","sampleStorageVersionOptions","selectedProjectTypeList","bool","sampleStorageLocation","queryBuilderFreezer","push","ssamplestoragelocationname","values","filterStorageCategory","filterStorageCategorylist","selectedStorageCategory","filter","sampleStorageLocationList","sampleStorageVersionList","nsamplestorageversioncode","sprojecttypename","projectbarcodeconfig","generateBreadCrumData","_excelExportHeader","save","parentHeight","height","clientHeight","firstPane","breadCrumbData","selectedStorageCategoryName","containerStructure","isFilterSubmit","containerStructureList","keyCode","temparray2","option","sfieldname","filterquery","valuemember","source","displayQuery","queryString","rtn","nextProps","nextState","temparray1","newArray","Date","extractedColumnList","gridfillingColumn","hasOwnProperty","dataField","idsName","breadCrumbFrom","breadCrumbto","ssitedate","date","showModalBg","onClick","controlname","parsedData","jsondata","deleteRecord","displayName","exporter","getDynamicFilterExecuteData","bind","masterStatus","queryArray","slideList","slideResult","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col,  InputGroup } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { constructOptionList, convertDateValuetoString, getControlMap, onSaveMandatoryValidation,\r\n     rearrangeDateFormat, searchData, searchJsonData, showEsign, sortData,Lims_JSON_stringify } from '../../components/CommonScript';\r\n//import SortableTree from 'react-sortable-tree'; \r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport {\r\n \r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport Esign from '../audittrail/Esign';\r\nimport rsapi from '../../rsapi';\r\nimport AddSampleStorageMapping from './AddSampleStorageMapping';\r\nimport Axios from 'axios';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\r\nimport MatrixComponent from '../../components/MatrixComponent';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport AdvFilter from '../../components/AdvFilter';\r\nimport DateTimePicker from \"../../components/date-time-picker/date-time-picker.component\";\r\nimport RetrieveOrDiposeSample from '../storagemanagement/RetrieveOrDiposeSample';\r\nimport { ExcelExport, ExcelExportColumn } from '@progress/kendo-react-excel-export';\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport BulkRetrieveOrDiposeSample from '../storagemanagement/BulkRetrieveOrDiposeSample';\r\n// import * as XLSX from 'xlsx';\r\n// import { Upload } from '@progress/kendo-react-upload';\r\n\r\nclass SampleStorageRetrieval extends Component {\r\n    dragOverCnt = 0;\r\n    isDragDrop = false;\r\n    SEPARATOR = '_';\r\n    uniqueIDArr = [];\r\n    countforTree = 0;\r\n    pointedItem = undefined\r\n    getitemPath = {};\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            retrievalType: 1,\r\n            // extractedColumnList: [   \r\n            //     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\r\n            //     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\r\n            //     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n            //     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n            //     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n            //     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n            //     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\r\n            // ],\r\n            sheetData: {},\r\n            selectedRecordFilter: {},\r\n           // treeData: [{ title: 'Chicken', children: [{ title: 'Egg' }] }],\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    //  text: \"root\",\r\n                    text: this.props.intl.formatMessage({ id: \"IDS_ROOT\" }),\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n            selectedItem: undefined,\r\n            loading: false,\r\n            esignreason: this.props.esignreason,\r\n            dataStateGridChange: {\r\n                take: 10,\r\n                skip: 0\r\n            },\r\n            dataStateChange: {\r\n                take: 10,\r\n                skip: 0,\r\n                // group: [\r\n                //     {\r\n                //         field: \"ssamplestoragelocationname\",\r\n                //     },\r\n                // ],\r\n            }\r\n        };\r\n        let fields = {};\r\n        // if (this.state.extractedColumnList) {\r\n        //     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n        //     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n        //     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n        //     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n        //     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\r\n        //     // ,...this.state.extractedColumnList]\r\n        //     this.state.extractedColumnList.map(field => {\r\n        //         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\r\n        //             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\r\n        //             fields = {\r\n        //                 ...fields,\r\n        //                 [field.dataField]: {\r\n        //                     \"label\":\r\n        //                         this.props.intl.formatMessage({\r\n        //                             id: field.idsName,\r\n        //                         })\r\n        //                     ,\r\n        //                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\r\n        //                     \"valueSources\": [\"value\", \"func\"],\r\n\r\n        //                     \"mainWidgetProps\": {\r\n        //                         \"valueLabel\": \"Name\",\r\n        //                         \"valuePlaceholder\": this.props.intl.formatMessage({\r\n        //                             id: field.idsName\r\n        //                         })\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }\r\n        this.state = { ...this.state, 'fields': fields }\r\n        this.searchRef = React.createRef();\r\n        this.dragClue = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let { filterData, storageCategoryOptions,\r\n            selectedRecord, controlMap,\r\n            userRoleControlRights, storageLocationOptions,\r\n            sampleStorageVersionOptions, masterData, selectedRecordFilter,\r\n            fields, selectedProjectType, selectedProjectTypeList,\r\n            breadCrumbdata, openModal, isInitialRender, dynamicfields//,importRetrieveOrDispose,isRetrieveOrDispose \r\n        } = this.state\r\n        let bool = false;\r\n        ///////////////////////////////\r\n      //  if(this.props.Login.importRetrieveOrDispose){\r\n        if (this.props.Login.openModal !== previousProps.Login.openModal) {\r\n            bool = true;\r\n            openModal = this.props.Login.openModal;\r\n        }\r\n    //}\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord || {};\r\n            bool = true;\r\n            isInitialRender = true;\r\n            dynamicfields = [];\r\n            // selectedRecord['spositionvalue'] = \"\";\r\n            // selectedRecord['scomments'] = \"\"; \r\n            selectedRecord['nprojecttypecode'] = previousProps.Login.selectedRecord.nprojecttypecode;\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            let queryBuilderFreezer = [];\r\n            bool = true;\r\n            this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nsamplestoragelocationcode, \"title\": item.ssamplestoragelocationname })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'nsamplestoragelocationcode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_STORAGESTRUCTURENAME\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        // if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nproductcode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PRODUCT\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        // if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nprojecttypecode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PROJECTTYPE\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nvisitnumbercode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_VISITNUMBER\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        ///////////////////////////////\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            bool = true;\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.filterStorageCategory !== previousProps.Login.masterData.filterStorageCategory) {\r\n            bool = true;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.filterStorageCategory || [], \"nstoragecategorycode\",\r\n                \"sstoragecategoryname\", undefined, undefined, undefined);\r\n            storageCategoryOptions = filterStorageCategorylist.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedStorageCategory) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nstoragecategorycode: storageCategoryOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedStorageCategory.nstoragecategorycode)[0]\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            bool = true;\r\n            const sampleStorageLocationList = constructOptionList(this.props.Login.masterData.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n            storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageLocation) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode)[0]\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.sampleStorageVersion !== previousProps.Login.masterData.sampleStorageVersion) {\r\n            bool = true;\r\n            const sampleStorageVersionList = constructOptionList(this.props.Login.masterData.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                \"nversionno\", undefined, undefined, undefined);\r\n            sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageVersion) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode)[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            masterData = this.props.Login.masterData;\r\n            if (selectedRecord[\"nprojecttypecode\"] === undefined) {\r\n                selectedRecord[\"nprojecttypecode\"] = {\r\n                    label: this.props.Login.masterData.selectedProjectType &&\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                    , value: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.nprojecttypecode ? this.props.Login.masterData.selectedProjectType.nprojecttypecode:-1\r\n                };\r\n\r\n                // selectedRecord[\"nprojecttypecode\"] = {\r\n                //     label: this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename &&\r\n                //     this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename ?\r\n                //    this.state.selectedProjectType.nprojecttypecode.item.sprojecttypename: 'NA'\r\n                //     , value: this.state.selectedProjectType && this.state.selectedProjectType.nprojecttypecode.item.nprojecttypecode\r\n                // }; \r\n\r\n                selectedProjectType = {\r\n                    nprojecttypecode: {\r\n                        label: this.props.Login.masterData.selectedProjectType &&\r\n                            this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                            this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                        , value: this.props.Login.masterData.selectedProjectType && this.props.Login.masterData.selectedProjectType.nprojecttypecode ? this.props.Login.masterData.selectedProjectType.nprojecttypecode:-1\r\n                    }\r\n                };\r\n                breadCrumbdata = {\r\n                    ...convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                        this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                    breadcrumbprojecttype: {\r\n                        label: this.props.Login.masterData.selectedProjectType &&\r\n                            this.props.Login.masterData.selectedProjectType.sprojecttypename ?\r\n                            this.props.Login.masterData.selectedProjectType.sprojecttypename : 'NA',\r\n                        value: this.props.Login.masterData.selectedProjectType &&\r\n                            this.props.Login.masterData.selectedProjectType.nprojecttypecode ?\r\n                            this.props.Login.masterData.selectedProjectType.nprojecttypecode : -1\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.Login.masterData.projectbarcodeconfig !== previousProps.Login.masterData.projectbarcodeconfig) {\r\n                selectedProjectTypeList = this.props.Login.masterData.selectedProjectTypeList;\r\n                const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.projectbarcodeconfig || [], \"nprojecttypecode\",\r\n                    \"sprojecttypename\", undefined, undefined, undefined);\r\n                masterData['projectbarcodeconfig'] = filterStorageCategorylist.get(\"OptionList\");\r\n            }\r\n\r\n            filterData = this.generateBreadCrumData(this.props.Login.masterData);\r\n\r\n        }\r\n        if (this.state.export) {\r\n            this._excelExportHeader.save()\r\n            this.setState({ export: false })\r\n        }\r\n    //     if(this.props.Login.importRetrieveOrDispose!== previousProps.Login.importRetrieveOrDispose){\r\n    //         //bool = true;\r\n    //            // importRetrieveOrDispose=this.props.Login.importRetrieveOrDispose\r\n    //             //openModal = this.props.Login.importRetrieveOrDispose?this.props.Login.openModal:true;\r\n    //     }\r\n    //     if(this.props.Login.isRetrieveOrDispose!== previousProps.Login.isRetrieveOrDispose){\r\n    //         // bool = true;\r\n    //      // isRetrieveOrDispose=this.props.Login.importRetrieveOrDispose?this.props.Login.isRetrieveOrDispose :true;\r\n    //  }\r\n        /*    if (this.state.masterData !== previousState.masterData) {\r\n                bool = true;\r\n    \r\n                selectedRecord[\"nprojecttypecode\"] = {\r\n                    label: this.state.masterData.selectedProjectType &&\r\n                        this.state.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.state.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                    , value: this.state.masterData.selectedProjectType && this.state.masterData.selectedProjectType.nprojecttypecode\r\n                };\r\n                selectedProjectType = {\r\n                    nprojecttypecode: {\r\n                        label: this.state.masterData.selectedProjectType &&\r\n                        this.state.masterData.selectedProjectType.sprojecttypename ?\r\n                        this.state.masterData.selectedProjectType.sprojecttypename : 'NA'\r\n                        , value: this.state.masterData.selectedProjectType && this.state.masterData.selectedProjectType.nprojecttypecode\r\n                    }\r\n                };\r\n             \r\n    \r\n                //this.state.masterData.projectbarcodeconfig=previousState.masterData.projectbarcodeconfig;\r\n    \r\n                filterData = this.generateBreadCrumData(this.state.masterData);\r\n    \r\n            }*/\r\n\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                storageCategoryOptions, filterData,\r\n                selectedRecord, controlMap,\r\n                userRoleControlRights, storageLocationOptions,\r\n                sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, selectedProjectTypeList,\r\n                breadCrumbdata, isInitialRender, openModal, dynamicfields//,importRetrieveOrDispose,isRetrieveOrDispose\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    // closeModalImport=()=>{\r\n    //     let loadEsign = this.props.Login.loadEsign;\r\n    //     let openModal = this.props.Login.openModal;\r\n    //     let isRetrieveOrDispose = this.props.Login.isRetrieveOrDispose;\r\n    //     let importRetrieveOrDispose = this.props.Login.importRetrieveOrDispose;\r\n    //     let selectedId = this.props.Login.selectedId;\r\n    //     let selectedRecord = this.state.selectedRecord;\r\n    //     if (this.props.Login.loadEsign) {\r\n    //         openModal = true;\r\n    //         loadEsign = false;\r\n    //         isRetrieveOrDispose=true;\r\n    //         importRetrieveOrDispose=true;\r\n    //         selectedRecord['esignpassword'] = \"\"\r\n    //         selectedRecord['esigncomments'] = \"\"\r\n    //         selectedRecord['esignreason'] = \"\"\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 openModal, importRetrieveOrDispose  ,isRetrieveOrDispose,loadEsign,selectedRecord, selectedId: null \r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }else{\r\n    //         selectedRecord={};\r\n    //         this.setState({\r\n    //             selectedRecord,\r\n    //             openModal: false, isInitialRender: true\r\n    //             , isFilterPopup: false, isRetrieveOrDispose: false,importRetrieveOrDispose:false\r\n    //         })\r\n    //     }\r\n       \r\n    // }\r\n    closeModal = () => {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         openModal: false, selectedRecord: {}\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\t\t//ALPD-4749\r\n\t\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n        let loadEsign = this.state.loadEsign;\r\n        let openModal = this.state.openModal;\r\n        //let selectedId = this.props.Login.selectedId;\r\n        let selectedRecord = this.state.selectedRecord; //this.props.Login.selectedRecord;\r\n        if (this.state.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"Approve\" || this.props.Login.operation === \"copy\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                //selectedId = null;\r\n            }\r\n            else {\r\n                //this.state.isRetrieveOrDispose=true;\r\n                openModal = true;\r\n                loadEsign = false;\r\n                //isRetrieveOrDispose=false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n\t\t\t\t//ALPD-4749\r\n\t\t\t\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n                this.setState({selectedRecord, openModal, loadEsign, selectedId: null})\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: { openModal, loadEsign, selectedRecord, selectedId: null ,importRetrieveOrDispose:false}\r\n                // }\r\n                // this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            ///selectedId = null;\r\n            //selectedRecord = {};\r\n            //this.state.isRetrieveOrDispose= false;\r\n\r\n            this.getprojectbarcodeconfig(true);\r\n            this.setState({\r\n                selectedRecord,\r\n                openModal: false, isInitialRender: true\r\n                , isFilterPopup: false, isRetrieveOrDispose: false,importRetrieveOrDispose:false\r\n            })\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        // this.getsamplestoragetransaction({}, this.props.Login.userInfo);\r\n        // if (!this.state.isFilterPopup) {\r\n        //     this.getDynamicFilterExecuteData()\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties(saveType, formRef);\r\n        } else if (this.state.openSpreadSheet) {\r\n            this.CRUDSampleStorageTransaction({\r\n                ...this.state.editedsheetData,\r\n                nsamplestoragemappingcode: this.state.isMultiSampleAdd ?\r\n                    Object.keys(this.state.sheetData).map(nsamplestoragemappingcode => nsamplestoragemappingcode).join(\",\")\r\n                    : this.state.editedsheetData.nsamplestoragemappingcode.toString(),\r\n                nsamplestoragelocationcode: this.state.editedsheetData.nsamplestoragelocationcode,\r\n                sheetData: JSON.stringify(this.state.sheetData ? this.state.sheetData : {}),\r\n                sheetUpdate: true,\r\n                userinfo: this.props.Login.userInfo,\r\n                isMultiSampleAdd: this.state.isMultiSampleAdd\r\n            }, 'create');\r\n        } else {\r\n            this.onSaveSampleStorageTransaction(saveType, formRef);\r\n        }\r\n    };\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    generateBreadCrumData(obj) {\r\n        const breadCrumbData = [];\r\n        if (this.state.masterData && this.state.masterData.filterStorageCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_STORAGECATEGORY\",\r\n                    \"value\": obj.selectedStorageCategoryName &&\r\n                        obj.selectedStorageCategoryName !== null ?\r\n                        obj.selectedStorageCategoryName : \"NA\"\r\n\r\n                }\r\n                // ,\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\r\n                //     \"value\": obj.selectedSampleStorageLocation &&\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\r\n                // },\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYVERSION\",\r\n                //     \"value\": obj.selectedSampleStorageVersion &&\r\n                //         obj.selectedSampleStorageVersion.nversionno !== null ?\r\n                //         obj.selectedSampleStorageVersion.nversionno : \"NA\"\r\n                // }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        // let showFilter = !this.props.Login.showFilter\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { showFilter }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n        let boolean = !this.state.showFilter\r\n        this.setState({ showFilter: boolean })\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { showFilter: false }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ showFilter: false })\r\n    }\r\n    reloadData = () => {\r\n        this.onFilterSubmit();\r\n    }\r\n    onEditSampleStorageLocation = (selectedSampleStorageVersion, userInfo, editId) => {\r\n        this.handleSearch();\r\n        this.setState({ searchedTreeData: undefined })\r\n        if (this.searchRef.current) {\r\n            this.searchRef.current.value = \"\";\r\n        }\r\n\r\n        let isOnlyDraft = false;\r\n        if (this.props.Login.masterData.sampleStorageVersion && this.props.Login.masterData.sampleStorageVersion.length > 1) {\r\n            isOnlyDraft = true;\r\n        }\r\n        this.props.editSampleStorageLocation(selectedSampleStorageVersion, userInfo, isOnlyDraft, editId);\r\n    }\r\n    openStorageMapping = (addId) => {\r\n        this.addSampleStorageMapping({ userInfo: this.props.Login.userInfo, addId });\r\n    }\r\n    deletesamplestoragemapping = (param) => {\r\n        this.CRUDSampleStorageTransaction({\r\n            'nsamplestoragelocationcode': this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            'nsamplestoragemappingcode': param.nsamplestoragemappingcode,\r\n            'userinfo': this.props.Login.userInfo\r\n        }, 'delete');\r\n    }\r\n    addMultipleSample = (param) => {\r\n        this.setState({\r\n            //sheetData: JSON.parse(response[0].data.sheetData),\r\n            openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n            loading: false\r\n        })\r\n    }\r\n    opensearch = () => {\r\n        this.setState({\r\n            openModal: true, isFilterPopup: true, selectedRecord: { ...this.state.submittedselectedRecord } ||\r\n                { ...this.state.selectedRecord }\r\n        })\r\n    }\r\n    openbulkretrieve = () => {\r\n        this.setState({\r\n            isbulkretrieve: true,\r\n            openModal: true,\r\n            loading: false\r\n        });\r\n    }\r\n    handleExportClick = () => {\r\n        let exportFiled = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true }];\r\n        this.setState({ exportFiled, export: true });\r\n    }\r\n    bulkRetrieveDispose = () => {\r\n        this.setState({\r\n            importRetrieveOrDispose: true,\r\n            openModal: true,\r\n            loading: false,\r\n            isRetrieveOrDispose: false,\r\n            selectedRecord: {},\r\n        });\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: {\r\n    //             openModal: true, importRetrieveOrDispose: true,\r\n    //                   isRetrieveOrDispose: true,\r\n    //     }\r\n    // }\r\n    //     this.props.updateStore(updateInfo);\r\n    }\r\n    openRetrieveDispose = () => {\r\n        this.setState({ loading: true, importRetrieveOrDispose:false})\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"unit/getUnit\", { userinfo: this.props.Login.userInfo });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const unitMap = constructOptionList(response[0].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                const unit = unitMap.get(\"OptionList\");\r\n                this.setState({\r\n                    unitMapList: unit,\r\n                    openModal: true, isRetrieveOrDispose: true,importRetrieveOrDispose:false,\r\n                    dynamicfields: [],\r\n                    selectedBarcodeValue: {},\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n\r\n    addSample = (param, nflag) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemappingSheetData\",\r\n            {\r\n                isMultiSampleAdd: (nflag === 2) ? true : false,\r\n                nsamplestoragemappingcode:\r\n                    (nflag === 2) ? this.state.masterData.samplestorageretrieval.map(item => item.nsamplestoragemappingcode).join(\",\")\r\n                        : param.nsamplestoragemappingcode.toString()\r\n            });\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (nflag === 2) {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: false, openSpreadSheet: true,\r\n                        editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedProjectType = this.state.selectedProjectType || {};\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n\r\n        if (fieldName === 'nstoragecategorycode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: comboData.value\r\n            }, fieldName, comboData);\r\n        } else if (fieldName === 'ncontainertypecode') {\r\n            return this.getContainerStructure({\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontainertypecode: comboData.value\r\n            }, fieldName, comboData);\r\n\r\n        }\r\n        else if (fieldName === 'nprojecttypecode') {\r\n            ///return this.getprojectbarcodeconfig(comboData);\r\n           selectedProjectType[fieldName] = comboData;\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else if (fieldName === 'ncontainerstructurecode') {\r\n            selectedRecord['nrow'] = comboData.item.nrow ? comboData.item.nrow : 1;\r\n            selectedRecord['ncolumn'] = comboData.item.ncolumn ? comboData.item.ncolumn : 1;\r\n        } else if (fieldName === 'nsamplestoragelocationcode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: this.state.selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value\r\n\r\n            }, fieldName, comboData);\r\n        }\r\n        if (fieldName === 'nsamplestorageversioncode') {\r\n            selectedRecordFilter[fieldName] = comboData;\r\n            this.setState({ selectedRecordFilter });\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord, selectedRecordFilter });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveSampleStorageTransaction = (saveType) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let containerpathCodeArray = [];\r\n        if (this.state.operation === 'create') {\r\n            containerpathCodeArray = selectedRecord['nsamplestoragecontainerpathcode'].map(item => item.value);\r\n        }\r\n        const inputParam =\r\n        {\r\n            nsamplestoragetransactioncode: selectedRecord['nsamplestoragetransactioncode'] ?\r\n                parseInt(selectedRecord['nsamplestoragetransactioncode']) : 0,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            nsamplestoragemappingcode: selectedRecord['nsamplestoragemappingcode'] ?\r\n                parseInt(selectedRecord['nsamplestoragemappingcode']) : 0,\r\n            ncontainertypecode: -1,\r\n            nproductcode: selectedRecord['nproductcode'].value,\r\n            ndirectionmastercode: -1,\r\n            ssamplestoragemappingname: \"-\",\r\n            nsamplestoragecontainerpathcode: this.state.operation === 'create' ?\r\n                JSON.stringify(containerpathCodeArray) : parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),\r\n            containerpathsize: containerpathCodeArray.length,\r\n            nneedposition: 4,\r\n            ncontainerstructurecode: -1, nquantity: selectedRecord['nquantity'] ?\r\n                parseInt(selectedRecord['nquantity']) : 1,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n           \r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        }\r\n        else {\r\n            this.CRUDSampleStorageTransaction(inputParam, this.state.operation);\r\n        }\r\n    }\r\n    getsamplestoragetransaction = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragetransaction\", {\r\n            userinfo: this.props.Login.userInfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    childSheetDataChange = (sheetData) => {\r\n\r\n        this.setState({\r\n            // selectedRecord: {\r\n            //     ...this.state.selectedRecord,\r\n            //     sheetData: {\r\n            //         ...this.state.selectedRecord.sheetData,\r\n            //         ...sheetData\r\n            //     }\r\n            // },\r\n            sheetData: {\r\n                ...sheetData\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    // Actions start\r\n    getActiveSampleStorageMappingById = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getActiveSampleStorageMappingById\", {\r\n            nsamplestoragelocationcode: inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,\r\n            userinfo: userinfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    }//,\r\n                    // selectedRecord: {\r\n                    //     ...this.state.selectedRecord\r\n                    //    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\r\n                    // }\r\n                    ,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n    filterColumnData = (filterValue, filterParam) => {\r\n        let masterData = filterParam.masterData;\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData[filterParam.inputListName] && masterData[filterParam.inputListName].length > 0) {\r\n                primaryKeyValue = masterData[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = searchData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n\r\n            }\r\n            if (searchedData.length > 0) {\r\n                primaryKeyValue = searchedData[0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n\r\n        if (primaryKeyValue !== 0) {\r\n            this.setState({ loading: true });\r\n            return rsapi.post(filterParam.fetchUrl, { ...filterParam.fecthInputObject, [filterParam.primaryKeyField]: primaryKeyValue })\r\n                .then(response => {\r\n                    masterData[\"searchedData\"] = searchedData;\r\n                    masterData = { ...masterData, ...response.data };\r\n\r\n                    if (filterParam.sortField) {\r\n                        sortData(masterData, filterParam.sortOrder, filterParam.sortField);\r\n                    }\r\n                    else {\r\n                        sortData(masterData);\r\n                    }\r\n                    this.setState({ masterData, loading: false, skip: 0, take: 10, selectedId: null });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ loading: false });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            masterData[filterParam.selectedObject] = undefined;\r\n            masterData[\"searchedData\"] = [];\r\n            Object.keys(masterData).forEach(item => {\r\n                if (item !== filterParam.inputListName && item !== filterParam.selectedObject\r\n                    && filterParam.unchangeList && filterParam.unchangeList.indexOf(item) === -1)\r\n                    masterData[item] = [];\r\n            })\r\n            this.setState({\r\n                masterData, operation: null, modalName: undefined,\r\n                loading: false\r\n            });\r\n\r\n        }\r\n    }\r\n    onNumericInputChange = (value, field) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let constantvalue = value.target.value;\r\n        if (!isNaN(constantvalue)) {\r\n            selectedRecord[field] = constantvalue;\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    validateRetrievOrDispose = () => {\r\n        if ((this.state.selectedRecord.saliquotsampleid && this.state.selectedRecord.saliquotsampleid === \"\") ||\r\n            this.state.selectedRecord.saliquotsampleid === undefined) {\r\n            toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${\"IDS_NEWSAMPLEID\"}`);\r\n        }\r\n        else if ((this.state.selectedRecord.nquantity && this.state.selectedRecord.nquantity === \"\") ||\r\n            (this.state.selectedRecord.saliquotsampleid === undefined)) {\r\n            return toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${\"IDS_QUANTITY\"}`);\r\n        }\r\n        else if ((this.state.selectedRecord.nunitcode && Object.keys(this.state.selectedRecord.nunitcode).length <= 0) ||\r\n            (this.state.selectedRecord.nunitcode === undefined)) {\r\n            return toast.info(`${this.props.intl.formatMessage({ id: \"IDS_SELECT\" })} ${\"IDS_UNIT\"}`);\r\n        }\r\n    }\r\n\r\n    CRUDSampleStorageTransaction = (inputParam, operation) => {\r\n       \r\n        let inputData = [];\r\n        let obj = convertDateValuetoString(this.state.masterData.fromDate,\r\n            this.state.masterData.toDate, this.props.Login.userInfo);\r\n       let selectedRecord = this.state.selectedRecord;\r\n       let isFileupload = inputParam.importRetrieveOrDispose?true:false;\r\n       const formData = new FormData();\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"scomments\"] = inputParam.scomments;\r\n        inputData[\"spositionvalue\"] = inputParam.spositionvalue\r\n        inputData[\"nquantity\"] = parseInt(inputParam.nquantity)\r\n        inputData[\"sunitname\"] = inputParam.sunitname\r\n        inputData[\"saliquotsampleid\"] = inputParam.saliquotsampleid\r\n        inputData[\"isRetrieve\"] = inputParam.isRetrieve;\r\n        inputData[\"nneedaliquot\"] = inputParam.nneedaliquot;\r\n        inputData[\"nprojecttypecode\"] = this.state.breadCrumbdata.breadcrumbprojecttype.value||-1;\r\n\r\n        if(inputParam.importRetrieveOrDispose){\r\n        formData.append(\"ImportFile\", selectedRecord['sfilename'][0])\r\n        formData.append(\"retrieveDisposeSampleType\", inputParam.isRetrieve?transactionStatus.Retrieved:transactionStatus.Disposed)\r\n        formData.append(\"fieldName\", Lims_JSON_stringify(this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })))\r\n        formData.append(\"fromDate\", obj.fromDate);\r\n        formData.append(\"toDate\", obj.toDate);\r\n        formData.append( \"nprojecttypecode\", this.state.breadCrumbdata.breadcrumbprojecttype.value||-1);\r\n        }\r\n        inputParam = {\r\n            formData: formData,\r\n            isFileupload,\r\n            methodUrl: inputParam.importRetrieveOrDispose?\"bulkeretrievedispose\":\"samplestorageretrieval\",\r\n            operation: \"create\",\r\n            dynamicfields: [],\r\n            classUrl: \"samplestorageretrieval\",\r\n            isInitialRender: true,\r\n              selectedRecord:  inputParam.importRetrieveOrDispose?{...this.state.selectedRecord}:{},\r\n            //selectedRecord: {},\r\n            ...inputParam, inputData\r\n        }\r\n        var saveType = this.statesaveType;\r\n        const masterData = this.state.masterData;\r\n     \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.ncontrolcode)) {\r\n       \t\t//ALPD-4749\r\n\t\t\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n\t\t    this.setState({ loading: true,dynamicfields:[] })\r\n            let urlArray = [];\r\n            const currentTimeUrl = rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n                \"userinfo\": this.props.Login.userInfo\r\n            });\r\n            const reasonUrl = rsapi.post(\"/reason/getReason\", {\r\n                \"userinfo\": this.props.Login.userInfo\r\n            });\r\n    \r\n            urlArray = [reasonUrl,currentTimeUrl];\r\n           \r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const reasonMap = constructOptionList(response[0].data || [], \"nreasoncode\",\r\n                        \"sreason\", undefined, undefined, false);\r\n                    const reasonList = reasonMap.get(\"OptionList\");\r\n                    this.setState({\r\n                        esign:reasonList,\r\n                        serverTime: rearrangeDateFormat(this.props.Login.userInfo, response[1].data),\r\n                        loadEsign: true, openModal: true,  screenData: { inputParam, masterData },importRetrieveOrDispose:inputParam.importRetrieveOrDispose,\r\n                        loading: false\r\n                    });\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                });\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         loadEsign: true, dynamicfields: [], screenData: { inputParam, masterData }, saveType,importRetrieveOrDispose:inputParam.importRetrieveOrDispose\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.crudMasterSampleStorageRetrieval(inputParam, this.state.masterData, inputParam.importRetrieveOrDispose?\"openModal\":\"\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    getSampleStorageLocation(inputData, fieldName, comboData) {\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        if (fieldName === 'nsamplestoragelocationcode') {\r\n            inputParamData = {\r\n                nstoragecategorycode: selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        } else {\r\n            inputParamData = {\r\n                nstoragecategorycode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { storageLocationOptions,\r\n                    sampleStorageVersionOptions } = this.state\r\n\r\n                let sampleStorageLocationList = constructOptionList(response[0].data.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n                storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n                let sampleStorageVersionList = constructOptionList(response[0].data.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                    \"nversionno\", undefined, undefined, undefined);\r\n                sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.length > 0 ?\r\n                        storageLocationOptions[0] : [],\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.length > 0 ?\r\n                        sampleStorageVersionOptions[0] : [],\r\n\r\n                }\r\n                this.setState({\r\n                    storageLocationOptions, sampleStorageVersionOptions,\r\n                    selectedRecordFilter: {\r\n                        ...selectedRecordFilter,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.getprojectbarcodeconfigForSubmit(true);\r\n        // this.setState({ loading: true })\r\n        // let inputParamData = {\r\n        //     nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n        //     // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\r\n        //     // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n        //     userinfo: this.props.Login.userInfo,\r\n        // }\r\n        // let urlArray = [];\r\n        // const url1 = rsapi.post(\"samplestorageretrieval/getsamplestoragemapping\", inputParamData);\r\n        // urlArray = [url1];\r\n        // Axios.all(urlArray)\r\n        //     .then(response => {\r\n        //         let object = {\r\n        //             selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\r\n        //             // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\r\n        //             // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\r\n        //         }\r\n        //         let filterData = this.generateBreadCrumData(object);\r\n\r\n        //         this.setState({\r\n        //             filterData,\r\n        //             masterData: {\r\n        //                 ...this.state.masterData,\r\n        //                 ...response[0].data,\r\n        //                 //   samplestorageretrieval: response[0].data['samplestorageretrieval'],\r\n        //             },\r\n        //             loading: false\r\n        //         });\r\n        //     }).catch(error => {\r\n        //         if (error.response.status === 500) {\r\n        //             toast.error(error.message);\r\n        //         } else {\r\n        //             toast.warn(error.response.data);\r\n        //         }\r\n        //         this.setState({\r\n        //             loading: false\r\n        //         });\r\n        //     });\r\n    }\r\n    addSampleStorageMapping() {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            // nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        // const url3 = rsapi.post(\"containertype/getContainerType\",\r\n        //     { 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n                const containerstructureMap = constructOptionList(response[0].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                //const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        directionmasterOptions: directionmasterList,\r\n                        // ncontainertypecode: containerTypeList[0],\r\n                        // containerStructureOptions: containerstructureList,\r\n                        // ncontainerstructurecode: containerstructureList[0],\r\n                        nrow: containerStructure.length > 0 ? containerStructure[0].nrow : 1,\r\n                        ncolumn: containerStructure.length > 0 ? containerStructure[0].ncolumn : 1,\r\n                        isInitialRender: true\r\n\r\n                    },\r\n                    openSpreadSheet: false,\r\n                    operation: 'create',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    \r\n    getprojectbarcodeconfigForSubmit(nflag) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        let obj = convertDateValuetoString(this.state.masterData.fromDate, this.state.masterData.toDate, this.props.Login.userInfo);\r\n        inputParamData = {\r\n            nprojecttypecode: this.state.selectedProjectType.nprojecttypecode.value,\r\n            isFilterSubmit: nflag,\r\n            // fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n            // toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n            fromDate: obj.fromDate,\r\n            toDate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                //let masterData = this.state.masterData.samplestorageretrieval;\r\n                this.setState(nflag === false ? {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    // selectedRecord: {\r\n                    //     nprojecttypecode: { label: comboData.label, value: comboData.value }\r\n                    // },\r\n                    loading: false\r\n                } : {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    breadCrumbdata: {\r\n                        breadcrumbprojecttype: {\r\n                            label: this.state.selectedProjectType.nprojecttypecode.label,\r\n                            value: this.state.selectedProjectType.nprojecttypecode.value\r\n                        },\r\n                        ...convertDateValuetoString(this.state.masterData.fromDate,\r\n                            this.state.masterData.toDate, this.props.Login.userInfo)\r\n                    },\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n                        toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n                        samplestorageretrieval: response[0].data.samplestorageretrieval\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    getprojectbarcodeconfig(nflag) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        let obj = convertDateValuetoString(this.state.masterData.fromDate, this.state.masterData.toDate, this.props.Login.userInfo);\r\n        inputParamData = {\r\n            nprojecttypecode: this.state.breadCrumbdata.breadcrumbprojecttype.value,\r\n            isFilterSubmit: nflag,\r\n            // fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n            // toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n            fromDate: obj.fromDate,\r\n            toDate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getProjectbarcodeconfig\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                //let masterData = this.state.masterData.samplestorageretrieval\r\n                this.setState(nflag === false ? {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    // selectedRecord: {\r\n                    //     nprojecttypecode: { label: comboData.label, value: comboData.value }\r\n                    // },\r\n                    loading: false\r\n                } : {\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    /*breadCrumbdata: {\r\n                        breadcrumbprojecttype: {\r\n                            label: this.state.selectedProjectType.nprojecttypecode.label,\r\n                            value: this.state.selectedProjectType.nprojecttypecode.value\r\n                        },\r\n                        ...convertDateValuetoString(this.state.masterData.fromDate,\r\n                            this.state.masterData.toDate, this.props.Login.userInfo)\r\n                    },*/\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n                        toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n                        samplestorageretrieval: response[0].data.samplestorageretrieval\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    getContainerStructure(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            ncontainertypecode: comboData.value,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/getContainerStructure\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { containerStructureOptions, selectedRecord } = this.state\r\n\r\n                let containerStructureList = constructOptionList(response[0].data.containerStructure || [], \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, undefined);\r\n                containerStructureOptions = containerStructureList.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nrow: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.nrow : 1,\r\n                    ncolumn: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.ncolumn : 1,\r\n                    ncontainerstructurecode: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0] : [],\r\n                    containerStructureOptions: containerStructureOptions.length > 0 ?\r\n                        [...containerStructureOptions] : [],\r\n                }\r\n\r\n                this.setState({\r\n\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    bulkeretrieval = (inputParam, operation) => {\r\n        let inputData = [];\r\n        let obj = convertDateValuetoString(this.state.masterData.fromDate, this.state.masterData.toDate, this.props.Login.userInfo);\r\n\r\n        inputData = {\r\n            fromDate: obj.fromDate,\r\n            toDate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n            nprojecttypecode: this.state.breadCrumbdata.breadcrumbprojecttype.value,\r\n            spositionvaluesize: this.state.newData.length,\r\n            spositionvalue: this.state.newData.map(item => item['Sample Id']).join('\\',\\''),\r\n            isbulkretrieve: true\r\n        }\r\n        inputParam = {\r\n            methodUrl: \"bulkeretrieve\",\r\n            operation: \"create\",\r\n            classUrl: \"samplestorageretrieval\",\r\n            isInitialRender: true,\r\n            //  selectedRecord: {...this.state.selectedRecord},\r\n            selectedRecord: {},\r\n            ...inputParam, inputData\r\n        }\r\n        var saveType = this.statesaveType;\r\n        const masterData = this.state.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputParam.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, this.state.masterData, \"openModal\");\r\n\r\n        }\r\n    }\r\n   \r\n    onSampleMappingSaveClick = (param) => {\r\n        if (!param.isRetrieve) {\r\n            if (this.state.selectedRecord[\"nneedaliquot\"] &&\r\n                this.state.selectedRecord[\"nneedaliquot\"] === true) {\r\n                return toast.info(this.props.intl.formatMessage({ id: \"IDS_DISABLEINPUTFORALIQUOTSAMPLE\" }));\r\n            }\r\n        }\r\n        const mandatoryFields = param.importRetrieveOrDispose?\r\n        [{ \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }]\r\n        :this.state.selectedRecord[\"nneedaliquot\"] &&\r\n            this.state.selectedRecord[\"nneedaliquot\"] === true ? [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\",\r\n                \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_NEWSAMPLEID\",\r\n                \"dataField\": \"saliquotsampleid\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_QUANTITY\",\r\n                \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_UNITNAME\",\r\n                \"dataField\": \"nunitcode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n        ] : [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\",\r\n                \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            }\r\n        ]\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n            () => this.CRUDSampleStorageTransaction(param))\r\n\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateChange: event.dataState\r\n        });\r\n    }\r\n    dataStateGridChange = (event) => {\r\n        this.setState({\r\n            dataStateGridChange: event.dataState\r\n        });\r\n    }\r\n    approveSampleStorageMapping = (event) => {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/approveSampleStorageMapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    getSelectedBarcodeData(e, inputParam) {\r\n        if (e.keyCode === 13) {\r\n            this.setState({ loading: true })\r\n            //let selectedRecord = this.state.selectedRecord || {};\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestorageretrieval/getSelectedBarcodeData\", {\r\n                // nprojecttypecode: this.state.selectedBarcodeValue.nprojecttypecode,\r\n                spositionvalue: inputParam.spositionvalue,\r\n                userinfo: this.props.Login.userInfo\r\n            });\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let dynamicfields = [];\r\n                    dynamicfields = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_QUANTITY\", \"dataField\": \"nquantity\", \"width\": \"200px\", \"staticField\": true },\r\n                    { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"200px\", \"staticField\": true }];\r\n                    const temparray2 = response[0].data['selectedProjectTypeList'] && response[0].data['selectedProjectTypeList'].map((option) => {\r\n                        return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n                    });\r\n                    dynamicfields = [...dynamicfields, ...temparray2]\r\n                    this.setState({\r\n                        dynamicfields,\r\n                        selectedBarcodeValue: { ...response[0].data['selectedBarcodeValue'] },\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            dynamicfields: [],\r\n                            selectedBarcodeValue: {}\r\n                        })\r\n                        toast.info(error.response.data);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n    getDynamicFilterExecuteData(nflag) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (nflag === 2 ? true : (selectedRecord.filterquery && selectedRecord.filterquery !== \"\")) {\r\n            this.setState({ loading: true })\r\n            let obj = {// ...inputParam.component, \r\n                label: 'samplestorageretrieval', valuemember: 'nsamplestorageretrievalcode',\r\n                filterquery: nflag === 2 ?\r\n                    this.state.submittedselectedRecord.filterquery\r\n                    :\r\n                    selectedRecord.filterquery,\r\n                fromDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate),\r\n                toDate: rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate),\r\n                nprojecttypecode: this.state.breadCrumbdata.breadcrumbprojecttype.value\r\n                , source: 'view_sampleretrieval_' + this.state.breadCrumbdata.breadcrumbprojecttype.value, userinfo: this.props.Login.userInfo\r\n            }\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let masterData = this.state.masterData\r\n                    masterData = { ...masterData, ...response[0].data }\r\n                    this.setState({\r\n                        masterData: { ...masterData },\r\n                        loading: false,\r\n                        openModal: false,\r\n                        isFilterPopup: false,\r\n                        submittedselectedRecord: nflag === 2 ?\r\n                            { ...this.state.submittedselectedRecord }\r\n                            :\r\n                            { ...selectedRecord }\r\n                        ,\r\n                        selectedRecord: {},\r\n                        displayQuery: this.state.tree ? QbUtils.queryString(this.state.tree, this.state.config, true) : \"\"\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAFILTER\" }));\r\n\r\n        }\r\n    }\r\n    // getDynamicFilterExecuteData(nflag) {\r\n    //     this.setState({ loading: true })\r\n    //     let selectedRecord = this.state.selectedRecord || {};\r\n    //     let obj = {// ...inputParam.component, \r\n    //         label: 'samplestorageretrieval', valuemember: 'nsamplestoragetransactioncode',\r\n    //         filterquery:   \r\n    //         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\r\n    //     }\r\n    //     let urlArray = [];\r\n    //     const url1 = rsapi.post(\"/samplestorageretrieval/getdynamicfilterexecutedata\", obj);\r\n    //     urlArray = [url1];\r\n    //     Axios.all(urlArray)\r\n    //         .then(response => {\r\n    //             console.log(response)\r\n    //             let masterData = this.state.masterData\r\n    //             masterData = { ...masterData, ...response[0].data }\r\n    //             this.setState({\r\n    //                 masterData: { ...masterData },\r\n    //                 loading: false,\r\n    //                 openModal: false,\r\n    //                 submittedselectedRecord: nflag === 2 ?\r\n    //                     { ...this.state.submittedselectedRecord }\r\n    //                     :\r\n    //                     { ...selectedRecord }\r\n    //                 ,\r\n    //                 isFilterPopup: false,\r\n    //                 selectedRecord: {}\r\n    //             })\r\n    //         })\r\n    //         .catch(error => {\r\n    //             this.setState({\r\n    //                 loading: false\r\n    //             });\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(error.response.data.rtn);\r\n    //             }\r\n\r\n    //         })\r\n    // }\r\n\r\n    fetchRecord = (data) => {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestorageretrieval/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"samplestorageretrieval/getEditSampleStorageMapping\",\r\n            { 'nsamplestoragemappingcode': data.nsamplestoragemappingcode, 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2, url3];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n               // let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n\r\n                const containerstructureMap = constructOptionList(response[2].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                const editedObject = response[2].data.editsampleStorageMapping;\r\n\r\n                storageMappingMapList.unshift({ label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode })\r\n                selectedRecord = {\r\n                    ndirectionmastercode: { label: editedObject.sdirection, value: editedObject.ndirectionmastercode },\r\n                    nsamplestoragecontainerpathcode: { label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode },\r\n                    nproductcode: { label: editedObject.sproductname, value: editedObject.nproductcode },\r\n                    ncontainertypecode: { label: editedObject.scontainertype, value: editedObject.ncontainertypecode },\r\n                    ncontainerstructurecode: { label: editedObject.scontainerstructurename, value: editedObject.ncontainerstructurecode },\r\n                    nneedposition: editedObject.nneedposition === 3 ? true : false,\r\n                    directionmasterOptions: directionmasterList,\r\n                    nquantity: editedObject.nquantity,\r\n                    nrow: editedObject.nrow,\r\n                    ncolumn: editedObject.ncolumn,\r\n                    nsamplestoragemappingcode: editedObject.nsamplestoragemappingcode\r\n                }\r\n                this.setState({\r\n                    openSpreadSheet: false,\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        containerStructureOptions: containerstructureList,\r\n                        isInitialRender: true\r\n                    },\r\n                    operation: 'update',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    // Actions End\r\n    retrievalType = () => {\r\n        let retrievalType = this.state.retrievalType;\r\n        if (retrievalType === 1) {\r\n            retrievalType = 2;\r\n        } else {\r\n            retrievalType = 1;\r\n        }\r\n        this.setState({ retrievalType: retrievalType })\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        }\r\n        else if (event.target.type === 'select-one') {\r\n\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.sheetData !== this.state.sheetData)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    handlePageChangeFilter = (event) => {\r\n        this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    onChange = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"tree\"] = immutableTree;\r\n        selectedRecord[\"config\"] = config;\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n    // cellRender(tdElement, cellProps) {\r\n\r\n    //     if (cellProps.rowType === \"groupFooter\") {\r\n    //         console.log('cellProps.field', cellProps)\r\n    //         if (cellProps.dataItem.field === \"ssamplestoragelocationname\") {\r\n    //             console.log('tdElement', tdElement, 'cellProps', cellProps)\r\n    //             return (\r\n    //                 <td aria-colindex={cellProps.columnIndex} role={\"gridcell\"}>\r\n    //                     Sum: {cellProps.dataItem.aggregates.navailablespace.sum}\r\n    //                 </td>\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     return tdElement;\r\n    // }\r\n    // handleGroupChange = (event) => {\r\n    //     const newDataState = this.processWithGroups(this.state.masterData.samplestorageretrieval || [], this.state.dataStateChange, event.group);\r\n    //     this.setState({\r\n    //         masterData: { ...this.state.masterData, samplestorageretrieval: newDataState },\r\n    //         group: event.group,\r\n    //     });\r\n    // };\r\n    // processWithGroups = (data, group) => {\r\n    //     const newDataState = groupBy(data, group);\r\n    //     return newDataState;\r\n    // };\r\n    processWithGroups = (data, dataState) => {\r\n        const aggregates = [\r\n            {\r\n                field: \"navailablespace\",\r\n                aggregate: \"sum\",\r\n            }\r\n        ];\r\n        const groups = dataState.group;\r\n        if (groups) {\r\n            groups.map((group) => (group.aggregates = aggregates));\r\n        }\r\n        dataState.group = groups;\r\n        const newDataState = process(data, dataState);\r\n        // setGroupIds({\r\n        //     data: newDataState.data,\r\n        //     group: dataState.group,\r\n        // });\r\n        return newDataState;\r\n    };\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray1 = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_PATHWITHPOSITION\", \"dataField\": \"scontainerpathwithposition\", \"width\": \"500px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_CONTAINERID\", \"dataField\": \"sboxid\", \"width\": \"200px\", \"staticField\": true },\r\n        //  { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_QUANTITY\", \"dataField\": \"nquantity\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_TRANSACTIONSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"dtransactiondate\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\", \"staticField\": true }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n        });\r\n        const newArray = [...temparray1, ...temparray2]\r\n        return newArray;\r\n    }\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        let masterData = this.state.masterData;\r\n        masterData[dateName] = dateValue;\r\n        this.setState({ masterData });\r\n\r\n    }\r\n    // handleAdd = e => {\r\n    //     let file = e.newState[0].getRawFile();\r\n    //     /* Boilerplate to set up FileReader */\r\n    //     const reader = new FileReader();\r\n    //     const rABS = !!reader.readAsBinaryString;\r\n\r\n    //     reader.onload = e => {\r\n    //       /* Parse data */\r\n    //       const bstr = e.target.result;\r\n    //       const wb = XLSX.read(bstr, {\r\n    //         type: rABS ? \"binary\" : \"array\",\r\n    //         bookVBA: true\r\n    //       });\r\n    //       /* Get first worksheet */\r\n    //       const wsname = wb.SheetNames[0];\r\n    //       const ws = wb.Sheets[wsname];\r\n    //       /* Convert array of arrays */\r\n    //       const newData = XLSX.utils.sheet_to_json(ws); \r\n    //       /* Update state */\r\n    //       this.setState({\r\n    //         newData\r\n    //       })\r\n    //     };\r\n    //     if (rABS) {\r\n    //       reader.readAsBinaryString(file);\r\n    //     } else {\r\n    //       reader.readAsArrayBuffer(file);\r\n    //     }\r\n    //   };\r\n    render() {\r\n        // const addId = this.state.controlMap.has(\"Add samplestorageretrieval\") && this.state.controlMap.get(\"Add samplestorageretrieval\").ncontrolcode;\r\n        // const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        // const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        // const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\r\n        // const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\r\n        // const retrievedispose = this.state.controlMap.has(\"Retrieve/Dispose\") && this.state.controlMap.get(\"Retrieve/Dispose\").ncontrolcode;\r\n        // const retrieve = this.state.controlMap.has(\"Retrieve\") && this.state.controlMap.get(\"Retrieve\").ncontrolcode;\r\n        // const dispose = this.state.controlMap.has(\"Dispose\") && this.state.controlMap.get(\"Dispose\").ncontrolcode;\r\n\r\n\r\n        let fromDate = this.state.masterData && this.state.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.fromDate) : new Date();\r\n        let toDate = this.state.masterData && this.state.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.state.masterData.toDate) : new Date();\r\n\r\n        //  let obj = convertDateValuetoString(this.props.Login.masterData.realfromDate, this.props.Login.masterData.realtoDate, this.props.Login.userInfo);\r\n\r\n        const extractedColumnList = this.state.selectedProjectTypeList ? this.gridfillingColumn(this.state.selectedProjectTypeList) : [];\r\n\r\n        let fields = {};\r\n        if (extractedColumnList.length > 0) {\r\n            extractedColumnList.map(field => {\r\n                field.hasOwnProperty(\"staticField\") ?\r\n                    fields = {\r\n                        ...fields,\r\n                        [field.dataField]: {\r\n                            \"label\": this.props.intl.formatMessage({\r\n                                id: field.idsName,\r\n                            })\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": this.props.intl.formatMessage({\r\n                                    id: field.idsName\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    :\r\n                    fields = {\r\n                        ...fields,\r\n                        ['\"' + field.dataField + '\"']: {\r\n                            \"label\": field.dataField\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": field.dataField\r\n                            }\r\n                        }\r\n                    }\r\n            });\r\n        }\r\n        // const filterParam = {\r\n        //     inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\r\n        //     fetchUrl: \"samplestorageretrieval/getActiveSampleStorageMappingById\",\r\n        //     fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        //     masterData: this.props.Login.masterData,\r\n        //     searchFieldList: [\"ssamplestoragelocationname\"]\r\n        // };\r\n\r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": this.state.breadCrumbdata && this.state.breadCrumbdata.breadCrumbFrom ? this.state.breadCrumbdata.breadCrumbFrom : 'IDS_NA'\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": this.state.breadCrumbdata && this.state.breadCrumbdata.breadCrumbto ? this.state.breadCrumbdata.breadCrumbto : 'IDS_NA'\r\n            },\r\n            {\r\n                \"label\": \"IDS_PROJECTTYPE\",\r\n                \"value\": this.state.breadCrumbdata &&\r\n                    this.state.breadCrumbdata.breadcrumbprojecttype ? this.state.breadCrumbdata.breadcrumbprojecttype.label : 'IDS_NA'\r\n            }\r\n\r\n        ];\r\n\r\n        //const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n\r\n                <Preloader loading={this.state.loading} />\r\n                {//this.state.retrievalType === 1 ?\r\n                    <>\r\n\r\n                        <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                            {\r\n                                <>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <InputGroup.Append>\r\n                                                <AdvFilter\r\n                                                    filterComponent={[{\r\n                                                        \"IDS_SAMPLESTORAGERETRIEVEFILTER\": <>\r\n                                                            <Col md={12}>\r\n                                                                <Row>\r\n                                                                    <Col md={6}>\r\n                                                                        <DateTimePicker\r\n                                                                            name={\"fromdate\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                                                            className=\"form-control\"\r\n                                                                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                                                            selected={fromDate}\r\n                                                                            value={fromDate}\r\n                                                                            dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                                                            isClearable={false}\r\n                                                                            onChange={(date) =>\r\n                                                                                this.handleFilterDateChange(\"fromDate\", date)}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                    <Col md={6}>\r\n                                                                        <DateTimePicker\r\n                                                                            name={\"todate\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                            className=\"form-control\"\r\n                                                                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                            selected={toDate}\r\n                                                                            value={toDate}\r\n                                                                            dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                                                            isClearable={false}\r\n                                                                            onChange={(date) =>\r\n                                                                                this.handleFilterDateChange(\"toDate\", date)}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                <Row>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormSelectSearch\r\n                                                                            name={\"nprojecttypecode\"}\r\n                                                                            as={\"select\"}\r\n                                                                            onChange={(event) => this.onComboChange(event, 'nprojecttypecode')}\r\n                                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                            isMandatory={this.state.selectedRecord[\"nneedposition\"]}\r\n                                                                            value={this.state.selectedProjectType && this.state.selectedProjectType[\"nprojecttypecode\"] ? this.state.selectedProjectType[\"nprojecttypecode\"] || [] : []}\r\n                                                                            options={this.state.masterData && (this.state.masterData.projectbarcodeconfig || [])}\r\n                                                                            optionId={\"value\"}\r\n                                                                            optionValue={\"label\"}\r\n                                                                            isMulti={false}\r\n                                                                            isDisabled={false}\r\n                                                                            isSearchable={false}\r\n                                                                            isClearable={false}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Col>\r\n\r\n                                                        </>\r\n                                                    }]}\r\n                                                    dataFor=\"tooltip_list_wrap\"\r\n                                                    onFilterSubmit={this.onFilterSubmit}\r\n                                                    showFilter={this.state.showFilter}\r\n                                                    openFilter={this.openFilter}\r\n                                                    closeFilter={this.closeFilter}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                                />\r\n                                            </InputGroup.Append>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {this.state.selectedProjectTypeList &&\r\n                                        <Row> <Col md={12}>\r\n                                            <DataGrid\r\n                                                // isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\r\n                                                //     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //             take: 10,\r\n                                                //             skip: 0\r\n                                                //         }).data.length > 0 ?\r\n                                                //     true : false}\r\n                                                // isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestorageretrieval &&\r\n                                                //     this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //             take: 10,\r\n                                                //             skip: 0\r\n                                                //         }).data.length > 0 ?\r\n                                                //     true : false}\r\n                                                isCustomButton={true}\r\n                                                customButtonlist={[\r\n                                                    //     {\r\n                                                    //     label: 'IDS_SEARCH',\r\n                                                    //     id: {},\r\n                                                    //     onClick: () => this.opensearch(),\r\n                                                    //     controlname: 'faSearch'\r\n                                                    // },\r\n                                                    // {\r\n                                                    //     label: 'IDS_BULKRETRIEVE',\r\n                                                    //     id: {},\r\n                                                    //     // hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\r\n                                                    //     onClick: () => this.openbulkretrieve(),\r\n                                                    //     controlname: 'faRecycle'\r\n                                                    // },\r\n                                                    {\r\n                                                        label: 'IDS_RETRIEVEDISPOSE',\r\n                                                        id: {},\r\n                                                        // hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\r\n                                                        onClick: () => this.openRetrieveDispose(),\r\n                                                        controlname: 'faRecycle'\r\n                                                    },\r\n                                                    {\r\n                                                        label: 'IDS_EXPORTTEMPLATE',\r\n                                                        id: {},\r\n                                                        // hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\r\n                                                        onClick: () => this.handleExportClick(),\r\n                                                        controlname: 'faFileExcel'\r\n                                                    },\r\n                                                    {\r\n                                                        label: 'IDS_BULKRETRIEVEDISPOSE',\r\n                                                        id: {},\r\n                                                        // hidden : this.state.userRoleControlRights.indexOf(retrievedispose) === -1,\r\n                                                        onClick: () => this.bulkRetrieveDispose(),\r\n                                                        controlname: 'faFileImport'\r\n                                                    }\r\n\r\n                                                    // {\r\n                                                    //     label: 'IDS_RETRIEVE',\r\n\r\n                                                    //     hidden : this.state.userRoleControlRights.indexOf(retrieve) === -1,\r\n                                                    //     onClick: () => this.openRetrieve(),\r\n                                                    //     controlname: 'faRecycle'\r\n                                                    // }\r\n\r\n                                                    // {\r\n                                                    //     label: 'IDS_DISPOSE',\r\n                                                    //     id: {},\r\n                                                    //     hidden : this.state.userRoleControlRights.indexOf(dispose) === -1,\r\n                                                    //     onClick: () => this.openDispose(),\r\n                                                    //     controlname: 'faRecycle'\r\n                                                    // }\r\n\r\n\r\n                                                ]}\r\n                                                isRefreshRequired={false}\r\n                                                // onGroupChange={this.handleGroupChange}\r\n                                                primaryKeyField={'nsamplestoragetransactioncode'}\r\n                                                //data={this.state.masterData &&\r\n                                                  //  this.state.masterData.samplestorageretrieval}\r\n                                                  data={\r\n                                                    this.state.masterData && this.state.masterData.samplestorageretrieval? this.state.masterData.samplestorageretrieval.map(item => {\r\n                                                    let parsedData = {};\r\n                                                    parsedData = JSON.parse(item.jsondata.value) || {};\r\n                                                    return {...item,...parsedData};}) : []  }\r\n                                                dataResult={this.state.masterData &&\r\n                                                    this.state.masterData.samplestorageretrieval ?\r\n                                                    process(this.state.masterData.samplestorageretrieval.map(item => {\r\n                                                        let parsedData = {};\r\n                                                        parsedData = JSON.parse(item.jsondata.value) || {};return {...item,...parsedData};}) || [],\r\n                                                        this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }) : []\r\n                                                    // this.processWithGroups(this.state.masterData.samplestorageretrieval || [],\r\n                                                    //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    //         take: 10,\r\n                                                    //         skip: 0\r\n                                                    //     })\r\n                                                }\r\n                                                dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                extractedColumnList={extractedColumnList}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                deleteRecord={this.deleteRecord}\r\n                                                addRecord={() => this.openStorageMapping()}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                // isComponent={true}\r\n                                                gridHeight={'600px'}\r\n                                                // isActionRequired={true}\r\n                                                isToolBarRequired={true}\r\n                                            // actionIcons={\r\n                                            //     [{\r\n                                            //         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n                                            //         controlname: \"faPenSquare\",\r\n                                            //         hidden: false,\r\n                                            //         objectName: \"add\",\r\n                                            //         onClick: (param) => this.addSample(param, 1)\r\n                                            //     }]}\r\n                                            />\r\n\r\n                                        </Col></Row>\r\n\r\n                                    }\r\n                                    {this.state.export ?\r\n                                        <LocalizationProvider>\r\n                                            <ExcelExport\r\n                                                data={[]}\r\n                                                collapsible={true}\r\n                                                fileName={(this.props.Login.displayName && this.props.Login.displayName)}\r\n                                                ref={(exporter) => {\r\n                                                    this._excelExportHeader = exporter;\r\n                                                }}>\r\n                                                {[...this.state.exportFiled].map((item) =>\r\n                                                    <ExcelExportColumn\r\n                                                        field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName })} width={200} />\r\n                                                )\r\n\r\n                                                }\r\n                                            </ExcelExport>\r\n                                        </LocalizationProvider > : \"\"}\r\n\r\n\r\n                                </>\r\n\r\n\r\n                            }\r\n\r\n                        </ListWrapper>\r\n\r\n                        {/* < ListWrapper className=\"client-list-content\" ><Row> \r\n                        </Row>\r\n                            <Col md={12}>\r\n                                <Col md={6}>\r\n                                    <Row>\r\n                                        <FormInput\r\n                                            name={'spositionvalue'}\r\n                                            onb\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            value={this.state.selectedRecord['spositionvalue']\r\n                                                ? this.state.selectedRecord['spositionvalue'] : \"\"}\r\n                                            maxLength={255}\r\n                                            isDisabled={this.props.isDisabled}\r\n                                            onKeyDown={(event) => this.getSelectedBarcodeData(this.state.selectedRecord)}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    {this.state.selectedBarcodeValue && <div className=\"d-flex justify-content-end mr-3\">\r\n                                        <Row>\r\n                                            {\r\n                                                extractedColumnList.map((item, index) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <Col md={6} key={`specInfo_${index}`}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>{this.props.intl.formatMessage({ id: item.idsName })}</FormLabel>\r\n                                                                    <ReadOnlyText>{this.state.selectedBarcodeValue[item.dataField]}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Row>\r\n                                    </div>}\r\n                                </Col>\r\n                            </Col></ListWrapper> */}\r\n                    </>}\r\n\r\n\r\n                {\r\n                    this.state.openModal &&\r\n                    <SlideOutModal show={this.state.openModal}\r\n                        closeModal={this.closeModal}\r\n                        hideSave={this.state.isbulkretrieve ? false : true}\r\n                        showSubmit={false}\r\n                        needClose={this.state.loadEsign?false:true}\r\n                        size={this.state.isbulkretrieve || this.state.openSpreadSheet || this.state.isFilterPopup ? 'xl' : \"\"}\r\n                        operation={\"\"}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.state.importRetrieveOrDispose ? \"IDS_BULKRETRIEVE\" :\r\n                            this.props.Login.loadEsign === true ? this.props.intl.formatMessage({ id: \"IDS_ESIGN\" }) : this.state.isRetrieveOrDispose ? this.props.intl.formatMessage({ id: \"IDS_RETRIEVEDISPOSE\" }) :\r\n                                this.state.isFilterPopup ? \"\" : this.state.isMultiSampleAdd ? this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURE\" })\r\n                                    :this.state.editedsheetData && this.state.editedsheetData.scontainerpath}\r\n                        onSaveClick={this.state.isFilterPopup ? this.getDynamicFilterExecuteData.bind(this) :this.onSampleMappingSaveClick}\r\n                        esign={this.state.loadEsign}\r\n                        // className={\"wide-popup\"}\r\n\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            // this.state.isbulkretrieve ?\r\n                            //     <>\r\n                            //         <Upload\r\n                            //            batch={false}\r\n                            //                multiple={false}\r\n                            //                defaultFiles={[]}\r\n                            //                withCredentials={false}\r\n                            //                autoUpload={false}\r\n                            //                onAdd={this.handleAdd}\r\n                            //         />\r\n                            //         <hr />\r\n                            //         <Grid   \r\n                            //   pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings &&\r\n                            //      this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)),\r\n                            //       previousNext: false}} \r\n                            //         onDataStateChange={this.dataStateGridChange}\r\n                            //         data={ process(this.state.newData || [],\r\n                            //                         this.state.dataStateGridChange ? \r\n                            //                         this.state.dataStateGridChange :\r\n                            //                          { skip: 0, take: 10 })} \r\n                            //         key={this.state.newData} \r\n                            //      />\r\n                            //     </>\r\n                            //     :\r\n                           // ALPD-5120 : Added by rukshana this.state.serverTime for Sample Retrieval and Disposal screen : E-signature's date and time not displayed in popup \r\n                            this.state.loadEsign ?//this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    esignReasonList={this.state.esign||[]}\r\n                                    serverTime={this.state.serverTime || []}\r\n                                /> :\r\n                                this.state.isRetrieveOrDispose ?\r\n                                    <RetrieveOrDiposeSample\r\n                                        dynamicfields={this.state.dynamicfields}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        controlMap={this.state.controlMap}\r\n                                        childDataChange={this.childDataChange}\r\n                                        CRUDSampleStorageTransaction={this.onSampleMappingSaveClick}\r\n                                        intl={this.props.intl}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        unitMapList={this.state.unitMapList}\r\n                                        loadEsign={this.props.Login.loadEsign}\r\n                                        isRetrieveOrDispose={this.state.isRetrieveOrDispose}\r\n                                        breadcrumbprojecttype={this.state.breadCrumbdata.breadcrumbprojecttype}\r\n                                    />\r\n                                    : this.state.importRetrieveOrDispose ?\r\n                                    <BulkRetrieveOrDiposeSample\r\n                                        dynamicfields={this.state.dynamicfields}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        controlMap={this.state.controlMap}\r\n                                        childDataChange={this.childDataChange}\r\n                                        CRUDSampleStorageTransaction={this.onSampleMappingSaveClick}\r\n                                        intl={this.props.intl}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        unitMapList={this.state.unitMapList}\r\n                                        importRetrieveOrDispose={this.state.importRetrieveOrDispose} \r\n                                        loadEsign={this.props.Login.loadEsign}\r\n                                        //isRetrieveOrDispose={this.state.isRetrieveOrDispose}\r\n                                    />\r\n                                    : this.state.isFilterPopup ?\r\n                                        <FilterQueryBuilder\r\n                                            fields={fields}\r\n                                            isSampleStorage={true}\r\n\r\n                                            queryArray={this.state.queryArray}\r\n                                            skip={this.state.kendoSkip}\r\n                                            take={this.state.kendoTake}\r\n                                            onChange={this.onChange}\r\n                                            tree={this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree}\r\n                                            gridColumns={this.slideList}\r\n                                            filterData={this.props.Login.slideResult || []}\r\n                                            handlePageChange={this.handlePageChangeFilter}\r\n                                            static={true}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            updateStore={this.props.updateStore}\r\n                                        />\r\n                                        :\r\n                                        //Command by Neeraj\r\n\t\t\t\t\t\t\t\t\t\t//ALPD-4749\r\n\t\t\t\t\t\t\t\t\t\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n                                        // this.state.loadEsign ?//this.props.Login.loadEsign ?\r\n                                        //     <Esign operation={this.props.Login.operation}\r\n                                        //         formatMessage={this.props.intl.formatMessage}\r\n                                        //         onInputOnChange={this.onInputOnChange}\r\n                                        //         inputParam={this.props.Login.inputParam}\r\n                                        //         selectedRecord={this.state.selectedRecord || {}}\r\n                                        //     />\r\n                                        //     :\r\n                                            this.state.openSpreadSheet ? <>\r\n                                                <MatrixComponent\r\n                                                    Rows={this.state.Rows || 1}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    columns={this.state.columns || 1}\r\n                                                    selectedRecord={this.state.selectedRecord.sheetData || {}}\r\n                                                    sheetData={this.state.sheetData || {}}\r\n                                                    isMultiSampleAdd={this.state.isMultiSampleAdd}\r\n                                                    childSheetDataChange={this.childSheetDataChange}\r\n                                                    editedsheetData={this.state.editedsheetData}\r\n                                                    multipleSheetData={this.state.masterData &&\r\n                                                        this.state.masterData.samplestorageretrieval &&\r\n                                                        process(this.state.masterData.samplestorageretrieval || [],\r\n                                                            this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }).data} />\r\n                                            </> \r\n                                                 :\r\n                                                <AddSampleStorageMapping\r\n                                                    operation={this.state.operation}\r\n                                                    selectedRecordFilter={this.state.selectedRecordFilter}\r\n                                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                                    childDataChange={this.childDataChange}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.state.screenData//this.props.Login.screenData\r\n        }\r\n        //this.props.validateEsignCredential(inputParam, this.props.Login.importRetrieveOrDispose?\"openModal\":\"\");\r\n        this.validateEsignCredential(inputParam, this.state.importRetrieveOrDispose?\"openModal\":\"\");\r\n    }\r\n   //ALPD-4749\r\n\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n    validateEsignCredential = (inputParam, modalName,action) => {\r\n        this.setState({ loading: true })\r\n         if (inputParam && inputParam.inputData && inputParam.inputData.userinfo) {\r\n           inputParam.inputData[\"userinfo\"] = {\r\n             ...inputParam.inputData.userinfo,\r\n             sformname: Lims_JSON_stringify(inputParam.inputData.userinfo.sformname),\r\n             smodulename: Lims_JSON_stringify(inputParam.inputData.userinfo.smodulename),\r\n           }\r\n         }\r\n         return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n           .then(response => {\r\n             if (response.data === \"Success\") {\r\n     \r\n               const methodUrl = inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];\r\n               inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n     \r\n               if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]) {\r\n     \r\n                 delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n     \r\n                 if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]) {\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n     \r\n     \r\n                 }\r\n     \r\n                 // ALPD-2437 added for Type3 Component. Use selected record to clear esign values\r\n                 if (inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]) {\r\n     \r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];\r\n                   delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];\r\n                 }\r\n               }\r\n               return(this.crudMasterSampleStorageRetrieval(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"], modalName,undefined,action))  \r\n             }\r\n           })\r\n           .catch(error => {\r\n             if (error.response.status === 500) {\r\n               toast.error(error.message);\r\n              } else{\r\n               toast.warn(error.response.data);\r\n               }\r\n           this.setState({\r\n               loading: false\r\n           });\r\n           })\r\n     }\r\n     \r\n\t//ALPD-4749\r\n\t//Fixed: Removed the store action in sample retrieval, and the screen is now fully managed through the state.\r\n     crudMasterSampleStorageRetrieval = (inputParam, masterData, modalName, defaultInput,action)=> {\r\n        this.setState({ loading: true,dynamicfields:[] })\r\n              let requestUrl = '';\r\n              let urlArray = [];\r\n              if (inputParam.isFileupload) {\r\n                const formData = inputParam.formData;\r\n                formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));\r\n                requestUrl = rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, formData);\r\n            } else {\r\n              requestUrl = rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData });\r\n            } \r\n              urlArray = [requestUrl];\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                            this.setState({\r\n                                isInitialRender: true,\r\n                                selectedRecord: {},\r\n                                masterData: {\r\n                                    ...masterData, ...response[0].data\r\n                                },\r\n                                [modalName]: false,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                            });\r\n                    }).catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else { \r\n                                toast.warn(error.response.data);\r\n                        }\r\n                        this.setState({\r\n                            loadEsign: false,loading: false\r\n                        });\r\n                    });\r\n          }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential\r\n})(injectIntl(SampleStorageRetrieval));"]},"metadata":{},"sourceType":"module"}