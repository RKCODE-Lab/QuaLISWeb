{"ast":null,"code":"var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s*[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\nvar extractListLevels = function (html) {\n  html = html.replace(msoListRegExp, function (match, list, level) {\n    return \"datalist=\\\"\" + list + \"\\\" datalevel=\\\"\" + level + \"\\\" \" + match;\n  });\n  return html;\n};\n\nvar isPartOfListItem = function (element) {\n  return /^MsoListParagraph/.test(element.className);\n};\n\nvar innerText = function (node) {\n  var text = node.innerHTML;\n  text = text.replace(/<!--(.|\\s)*?-->/gi, '');\n  text = text.replace(/<\\/?[^>]+?\\/?>/gm, '');\n  return text;\n};\n\nvar createList = function (type, styleType) {\n  var list = document.createElement(type);\n  list.style.listStyleType = styleType;\n  return list;\n};\n\nvar guessUnorderedListStyle = function (symbol) {\n  if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n    return null; // return \"disc\"; //default CSS value\n  } else if (/^o/.test(symbol)) {\n    return 'circle';\n  } else {\n    return 'square';\n  }\n};\n\nvar guessOrderedListStyle = function (symbol) {\n  var type = null;\n\n  if (!/^\\d/.test(symbol)) {\n    type = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') + (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n  }\n\n  return type;\n};\n\nvar mapListsCandidates = function (nodes, groups) {\n  var group = [];\n  Array.from(nodes).forEach(function (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n\n    var element = node;\n\n    if (element.getAttribute('datalist')) {\n      group.push(node);\n      groups.add(group);\n    } else if (isPartOfListItem(element) && group.length) {\n      group.push(node);\n    } else {\n      group = [];\n\n      if (element.nodeName === 'DIV') {\n        mapListsCandidates(element.children, groups);\n      } else if (element.nodeName === 'TABLE') {\n        Array.from(element.querySelectorAll('td,th')).forEach(function (cell) {\n          mapListsCandidates(cell.children, groups);\n        });\n      }\n    }\n  });\n};\n\nvar listTypes = function (p) {\n  var html = p.innerHTML;\n\n  var trimStartText = function (t) {\n    return t.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n  };\n\n  html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n  if (/^[\\u2022\\u00b7\\u00a7\\u00d8oØüvn][\\u00a0 ]+/.test(html)) {\n    return {\n      tag: 'ul',\n      style: guessUnorderedListStyle(trimStartText(innerText(p)))\n    };\n  }\n\n  if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n    return {\n      tag: 'ol',\n      style: guessOrderedListStyle(trimStartText(innerText(p)))\n    };\n  }\n};\n\nvar convertToLi = function (p) {\n  var content,\n      name = p.nodeName.toLowerCase();\n\n  if (p.firstChild && p.firstChild.nodeType === Node.COMMENT_NODE) {\n    p.removeChild(p.firstChild);\n  }\n\n  if (p.childNodes.length === 1) {\n    content = p.firstChild.nodeType === Node.TEXT_NODE ? innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, '');\n  } else {\n    p.removeChild(p.firstChild); // check for Roman numerals\n\n    if (p.firstChild.nodeType === 3) {\n      if (/^[ivxlcdm]+\\.$/i.test(p.firstChild.nodeValue)) {\n        p.removeChild(p.firstChild);\n      }\n    }\n\n    if (/^(&nbsp;|\\s)+$/i.test(p.firstChild.innerHTML)) {\n      p.removeChild(p.firstChild);\n    }\n\n    if (name !== 'p') {\n      content = '<' + name + '>' + p.innerHTML + '</' + name + '>';\n    } else {\n      content = p.innerHTML;\n    }\n  }\n\n  p.parentNode.removeChild(p);\n  var li = document.createElement('li');\n  li.innerHTML = content;\n  return li;\n};\n\nvar toList = function (blockNodes) {\n  var lastMargin = -1,\n      levels = {},\n      li,\n      rootMargin,\n      rootIndex,\n      lastRootLi,\n      isLastRootLi,\n      rootList,\n      items,\n      i,\n      p,\n      type,\n      margin,\n      list,\n      listData;\n\n  for (i = 0; i < blockNodes.length; i++) {\n    p = blockNodes[i];\n    listData = {\n      datalist: p.getAttribute('datalist'),\n      datalevel: p.getAttribute('datalevel')\n    };\n    var listIndex = listData.datalist;\n    var listType = listTypes(p);\n    type = listType && listType.tag;\n\n    if (!type) {\n      if (li && (!isLastRootLi || isPartOfListItem(p))) {\n        if (p.style.marginLeft) {\n          p.style.marginLeft = '';\n        }\n\n        if (p.style.marginLeft) {\n          // tests runner/framework fails to delete marginLeft\n          p.style.margin = '';\n        }\n\n        li.appendChild(p);\n      }\n\n      continue;\n    }\n\n    margin = listData.datalevel || parseFloat(p.style.marginLeft || 0);\n\n    if (!listData.datalevel && !p.style.marginLeft) {\n      continue;\n    }\n\n    var levelType = type + listIndex;\n\n    if (!levels[margin]) {\n      levels[margin] = {};\n    }\n\n    if (!rootMargin || rootMargin < 0) {\n      rootMargin = margin;\n      rootIndex = listIndex;\n      items = blockNodes.filter(function (e) {\n        return e.getAttribute('datalist') === String(rootIndex);\n      });\n      lastRootLi = items[items.length - 1];\n      rootList = createList(type, listType && listType.style);\n      p.parentNode.insertBefore(rootList, p);\n      lastMargin = margin;\n      levels[margin][levelType] = rootList;\n    }\n\n    isLastRootLi = lastRootLi === p;\n    list = levels[margin][levelType];\n\n    if (margin > lastMargin || !list) {\n      list = createList(type, listType && listType.style);\n      levels[margin][levelType] = list;\n      li.appendChild(list);\n    }\n\n    li = convertToLi(p);\n    list.appendChild(li);\n\n    if (isLastRootLi) {\n      rootMargin = lastMargin = -1;\n    } else {\n      lastMargin = margin;\n    }\n  }\n};\n\nexport var convertMsLists = function (html) {\n  var container = document.createElement('div');\n  container.innerHTML = extractListLevels(html);\n  var groups = new Set();\n  mapListsCandidates(container.children, groups);\n  groups.forEach(function (listsCandidates) {\n    return toList(listsCandidates);\n  });\n  return container.innerHTML;\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/listConvert.js"],"names":["msoListRegExp","extractListLevels","html","replace","match","list","level","isPartOfListItem","element","test","className","innerText","node","text","innerHTML","createList","type","styleType","document","createElement","style","listStyleType","guessUnorderedListStyle","symbol","guessOrderedListStyle","mapListsCandidates","nodes","groups","group","Array","from","forEach","nodeType","Node","ELEMENT_NODE","getAttribute","push","add","length","nodeName","children","querySelectorAll","cell","listTypes","p","trimStartText","t","tag","convertToLi","content","name","toLowerCase","firstChild","COMMENT_NODE","removeChild","childNodes","TEXT_NODE","nodeValue","parentNode","li","toList","blockNodes","lastMargin","levels","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","items","i","margin","listData","datalist","datalevel","listIndex","listType","marginLeft","appendChild","parseFloat","levelType","filter","e","String","insertBefore","convertMsLists","container","Set","listsCandidates"],"mappings":"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","sourcesContent":["var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s*[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\nvar extractListLevels = function (html) {\n    html = html.replace(msoListRegExp, function (match, list, level) {\n        return \"datalist=\\\"\" + list + \"\\\" datalevel=\\\"\" + level + \"\\\" \" + match;\n    });\n    return html;\n};\nvar isPartOfListItem = function (element) {\n    return /^MsoListParagraph/.test(element.className);\n};\nvar innerText = function (node) {\n    var text = node.innerHTML;\n    text = text.replace(/<!--(.|\\s)*?-->/gi, '');\n    text = text.replace(/<\\/?[^>]+?\\/?>/gm, '');\n    return text;\n};\nvar createList = function (type, styleType) {\n    var list = document.createElement(type);\n    list.style.listStyleType = styleType;\n    return list;\n};\nvar guessUnorderedListStyle = function (symbol) {\n    if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n        return null; // return \"disc\"; //default CSS value\n    }\n    else if (/^o/.test(symbol)) {\n        return 'circle';\n    }\n    else {\n        return 'square';\n    }\n};\nvar guessOrderedListStyle = function (symbol) {\n    var type = null;\n    if (!/^\\d/.test(symbol)) {\n        type = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n            (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n    }\n    return type;\n};\nvar mapListsCandidates = function (nodes, groups) {\n    var group = [];\n    Array.from(nodes).forEach(function (node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n            return;\n        }\n        var element = node;\n        if (element.getAttribute('datalist')) {\n            group.push(node);\n            groups.add(group);\n        }\n        else if (isPartOfListItem(element) && group.length) {\n            group.push(node);\n        }\n        else {\n            group = [];\n            if (element.nodeName === 'DIV') {\n                mapListsCandidates(element.children, groups);\n            }\n            else if (element.nodeName === 'TABLE') {\n                Array.from(element.querySelectorAll('td,th')).forEach(function (cell) {\n                    mapListsCandidates(cell.children, groups);\n                });\n            }\n        }\n    });\n};\nvar listTypes = function (p) {\n    var html = p.innerHTML;\n    var trimStartText = function (t) {\n        return t.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n    };\n    html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n    if ((/^[\\u2022\\u00b7\\u00a7\\u00d8oØüvn][\\u00a0 ]+/.test(html))) {\n        return {\n            tag: 'ul',\n            style: guessUnorderedListStyle(trimStartText(innerText(p)))\n        };\n    }\n    if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n        return {\n            tag: 'ol',\n            style: guessOrderedListStyle(trimStartText(innerText(p)))\n        };\n    }\n};\nvar convertToLi = function (p) {\n    var content, name = p.nodeName.toLowerCase();\n    if (p.firstChild && p.firstChild.nodeType === Node.COMMENT_NODE) {\n        p.removeChild(p.firstChild);\n    }\n    if (p.childNodes.length === 1) {\n        content = p.firstChild.nodeType === Node.TEXT_NODE ?\n            innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, '');\n    }\n    else {\n        p.removeChild(p.firstChild);\n        // check for Roman numerals\n        if (p.firstChild.nodeType === 3) {\n            if (/^[ivxlcdm]+\\.$/i.test(p.firstChild.nodeValue)) {\n                p.removeChild(p.firstChild);\n            }\n        }\n        if (/^(&nbsp;|\\s)+$/i.test(p.firstChild.innerHTML)) {\n            p.removeChild(p.firstChild);\n        }\n        if (name !== 'p') {\n            content = '<' + name + '>' + p.innerHTML + '</' + name + '>';\n        }\n        else {\n            content = p.innerHTML;\n        }\n    }\n    p.parentNode.removeChild(p);\n    var li = document.createElement('li');\n    li.innerHTML = content;\n    return li;\n};\nvar toList = function (blockNodes) {\n    var lastMargin = -1, levels = {}, li, rootMargin, rootIndex, lastRootLi, isLastRootLi, rootList, items, i, p, type, margin, list, listData;\n    for (i = 0; i < blockNodes.length; i++) {\n        p = blockNodes[i];\n        listData = {\n            datalist: p.getAttribute('datalist'),\n            datalevel: p.getAttribute('datalevel')\n        };\n        var listIndex = listData.datalist;\n        var listType = listTypes(p);\n        type = listType && listType.tag;\n        if (!type) {\n            if (li && (!isLastRootLi || isPartOfListItem(p))) {\n                if (p.style.marginLeft) {\n                    p.style.marginLeft = '';\n                }\n                if (p.style.marginLeft) {\n                    // tests runner/framework fails to delete marginLeft\n                    p.style.margin = '';\n                }\n                li.appendChild(p);\n            }\n            continue;\n        }\n        margin = listData.datalevel || parseFloat(p.style.marginLeft || 0);\n        if (!listData.datalevel && !p.style.marginLeft) {\n            continue;\n        }\n        var levelType = type + listIndex;\n        if (!levels[margin]) {\n            levels[margin] = {};\n        }\n        if (!rootMargin || rootMargin < 0) {\n            rootMargin = margin;\n            rootIndex = listIndex;\n            items = blockNodes.filter(function (e) { return e.getAttribute('datalist') === String(rootIndex); });\n            lastRootLi = items[items.length - 1];\n            rootList = createList(type, listType && listType.style);\n            p.parentNode.insertBefore(rootList, p);\n            lastMargin = margin;\n            levels[margin][levelType] = rootList;\n        }\n        isLastRootLi = lastRootLi === p;\n        list = levels[margin][levelType];\n        if (margin > lastMargin || !list) {\n            list = createList(type, listType && listType.style);\n            levels[margin][levelType] = list;\n            li.appendChild(list);\n        }\n        li = convertToLi(p);\n        list.appendChild(li);\n        if (isLastRootLi) {\n            rootMargin = lastMargin = -1;\n        }\n        else {\n            lastMargin = margin;\n        }\n    }\n};\nexport var convertMsLists = function (html) {\n    var container = document.createElement('div');\n    container.innerHTML = extractListLevels(html);\n    var groups = new Set();\n    mapListsCandidates(container.children, groups);\n    groups.forEach(function (listsCandidates) { return toList(listsCandidates); });\n    return container.innerHTML;\n};\n"]},"metadata":{},"sourceType":"module"}