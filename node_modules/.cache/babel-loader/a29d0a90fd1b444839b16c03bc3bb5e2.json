{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import ListMaster from\"../../components/list-master/list-master.component\";import SampleTypeFilter from\"./SampleTypeFilter\";import ConfirmMessage from\"../../components/confirm-alert/confirm-message.component\";import{connect}from\"react-redux\";import{injectIntl}from\"react-intl\";import{Row,Col,Card}from\"react-bootstrap\";import{ContentPanel}from\"../../components/App.styles\";import BreadcrumbComponent from\"../../components/Breadcrumb.Component\";import SlideOutModal from\"../../components/slide-out-modal/SlideOutModal\";import CustomTab from\"../../components/custom-tabs/custom-tabs.component\";import{DEFAULT_RETURN}from\"../../actions/LoginTypes\";import Esign from\"../audittrail/Esign\";import RegistrationSubTypeConfigDepartmentTab from\"./RegistrationSubTypeConfigDepartmentTab\";import RegistrationSubTypeConfigUserRoleTab from\"./RegistrationSubTypeConfigUserRoleTab\";import RegistrationSubTypeConfigUserTab from\"./RegistrationSubTypeConfigUserTab\";import AddRegistrationSubtypeConfigDepartment from\"../../pages/credentialmanagement/AddRegistrationSubtypeConfigDepartment\";import AddRegistrationSubtypeConfigUserRole from\"../../pages/credentialmanagement/AddRegistrationSubtypeConfigUserRole\";import AddRegistrationSubtypeConfigUser from\"../../pages/credentialmanagement/AddRegistrationSubtypeConfigUser\";import{Affix}from\"rsuite\";import{showEsign,constructOptionList,getControlMap}from\"../../components/CommonScript\";import{callService,crudMaster,validateEsignCredential,updateStore,getTabdetails,getSectionUsers,getDepartmentData,SampleTypeFilterchange,filterColumnData,getDepartmentBasedUser,getUserroleData,getUserRoleBasedUser,getRegtypeBasedSampleType,getListofUsers}from\"../../actions\";import{transactionStatus}from'../../components/Enumeration';import{toast}from\"react-toastify\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var RegistrationSubtypeConfigration=/*#__PURE__*/function(_Component){_inherits(RegistrationSubtypeConfigration,_Component);var _super=_createSuper(RegistrationSubtypeConfigration);function RegistrationSubtypeConfigration(props){var _this;_classCallCheck(this,RegistrationSubtypeConfigration);_this=_super.call(this,props);_this.reloadData=function(){_this.searchRef.current.value=\"\";if(_this.state.nfilterSampleType&&_this.state.nfilterSampleType.value){var inputParam={inputData:{nsampletypecode:_this.props.Login.masterData.defaultSampleTypeValue.value,userinfo:_this.props.Login.userInfo,nfilterSampleType:_this.props.Login.masterData.defaultSampleTypeValue,nregtypecode:_this.props.Login.masterData.defaultRegtypeValue.value},classUrl:\"registrationsubtypeconfigration\",methodUrl:\"BySampleType\",masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{defaultSampleTypeValue:_this.props.Login.masterData.defaultSampleTypeValue,searchedData:undefined})};_this.props.SampleTypeFilterchange(inputParam,_this.props.Login.masterData.filterSampleType);}else{//   toast.warn(\n//     this.props.intl.formatMessage({\n//       id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\n//     })\n//   );\n}};_this.onComboChange=function(comboData,fieldName,caseNo){var selectedRecord=_this.state.selectedRecord||{};var masterData=_this.props.Login.masterData;if(comboData!==null){switch(caseNo){case 1:if(fieldName===\"nsampletypecode\"){selectedRecord[fieldName]=comboData;}// else if (fieldName === \"nregionalsitecode\") {\n//   selectedRecord[fieldName] = comboData;\n//   this.props.getInstrumentSiteSection(\n//     comboData.item.nsitecode,\n//     this.props.Login.userInfo,\n//     selectedRecord\n//   );\n// }\nelse{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}break;case 2:selectedRecord[fieldName]=comboData;selectedRecord[\"ndeptusercode\"]=comboData.value;_this.props.getDepartmentBasedUser(_this.state.selectedRecord.ndeptusercode,_this.props.Login.userInfo,selectedRecord,masterData,_this.props.Login.screenName);break;case 3:masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{nfilterSampleType:comboData,SelectedSampleType:comboData.item});selectedRecord[fieldName]=comboData;selectedRecord[\"ndeptusercode\"]=comboData.value;_this.props.getRegtypeBasedSampleType(_this.state.selectedRecord.ndeptusercode,_this.props.Login.userInfo,selectedRecord,masterData,_this.props.Login.screenName);break;case 4:selectedRecord[fieldName]=comboData;selectedRecord[\"userrolecode\"]=comboData.value;_this.props.getUserRoleBasedUser(_this.state.selectedRecord.userrolecode,_this.props.Login.userInfo,selectedRecord,masterData,_this.props.Login.screenName);break;case 5:var nregtypecode=_this.state.nregtypecode||{};nregtypecode=comboData;_this.searchRef.current.value=\"\";_this.setState({nregtypecode:nregtypecode});break;default:break;}}else{var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}};_this.DeleteTabRecords=function(operation,ncontrolCode){var inputData=[];var dataState=_this.state.sectionDataState;inputData[\"tabdetails\"]={nsitecode:_this.props.Login.userInfo.nmastersitecode};inputData[\"tabdetails\"][\"ntransfiltertypeconfigcode\"]=operation.selectedRecord.ntransfiltertypeconfigcode;inputData[\"tabdetails\"][\"nneedalluser\"]=operation.selectedRecord.nneedalluser;inputData[\"tabdetails\"][\"ntransusercode\"]=operation.selectedRecord.ntransusercode||-1;inputData[\"tabdetails\"][\"nregsubtypecode\"]=operation.selectedRecord.nregsubtypecode;inputData[\"userinfo\"]=_this.props.Login.userInfo;var inputParam={methodUrl:\"DepartmentAndUserRole\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:\"delete\",dataState:dataState,selectedRecord:_objectSpread({},_this.state.selectedRecord)// postParam: {\n//   inputListName: \"Instrument\", selectedObject: \"selectedRegSubType\", primaryKeyField: \"ninstrumentcode\",\n//   fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\n// }\n};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,operation.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openChildModal:true,screenName:operation.screenName,operation:operation.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\");}// }\n};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];if(selectedRecord['ndeltacheck']===transactionStatus.YES){selectedRecord['ndeltaunitcode']=_this.props.Login.parameterData&&_this.props.Login.parameterData.deltaperiod.filter(function(x){return x.item.ndefaultstatus===transactionStatus.YES;})[0];}else{delete selectedRecord['ndeltaunitcode'];}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var openChildModal=_this.props.Login.openChildModal;var modalShow=_this.props.Login.modalShow;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if((_this.props.Login.operation.operation?_this.props.Login.operation.operation:_this.props.Login.operation)===\"delete\"){loadEsign=false;openModal=false;openChildModal=false;selectedRecord={};}else{loadEsign=false;modalShow=true;openModal=false;openChildModal=false;}selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}else{openModal=false;openChildModal=false;modalShow=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,openChildModal:openChildModal,modalShow:modalShow,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.searchRef.current.value=\"\";if(_this.state.nfilterSampleType&&_this.state.nfilterSampleType.value&&_this.props.Login.masterData.defaultRegtypeValue&&_this.props.Login.masterData.defaultRegtypeValue.value){var inputParam={inputData:{nsampletypecode:_this.state.nfilterSampleType.value,nregtypecode:_this.state.nregtypecode.value,userinfo:_this.props.Login.userInfo,nfilterSampleType:_this.state.nfilterSampleType},masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{defaultSampleTypeValue:_this.state.nfilterSampleType,defaultRegtypeValue:_this.state.nregtypecode,SelectedRegType:_this.state.nregtypecode.item,searchedData:undefined}),classUrl:\"registrationsubtypeconfigration\",methodUrl:\"BySampleType\"};_this.props.SampleTypeFilterchange(inputParam,_this.props.Login.masterData.filterSampleType);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTFILTER\"}));}};_this.onSaveClick=function(saveType,formRef){var inputData=[];var UsersArray=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam={inputListName:\"RegSubType\",selectedObject:\"selectedRegSubType\",primaryKeyField:\"nregsubtypecode\",isSingleGet:true};inputData[\"nmappingfieldcode\"]=_this.props.Login.screenName===\"IDS_DEPARTMENT\"?_this.state.selectedRecord[\"ndeptcode\"].value:_this.props.Login.screenName===\"IDS_USERROLE\"?_this.state.selectedRecord[\"nuserrolecode\"].value:-1;inputData[\"nallusers\"]=_this.state.selectedRecord[\"ndeltacheck\"]||4;UsersArray=_this.state.selectedRecord&&_this.state.selectedRecord.nusercode&&_this.state.selectedRecord.nusercode.map(function(item){var users={};users[\"nusercode\"]=item.value;return users;});inputData['usermapping']=UsersArray;inputData[\"selectedregsubtype\"]=_this.props.Login.masterData.selectedRegSubType;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Department\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:postParam,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,openChildModal:true}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\");}};_this.validateEsign=function(){var modalName;var inputParam={inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,modalName);};_this.tabDetail=function(){var tabMap=new Map();var deleteSecId=_this.state.controlMap.has(\"DeleteDepartment\")&&_this.state.controlMap.get(\"DeleteDepartment\").ncontrolcode;if(_this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode===1)tabMap.set(\"IDS_DEPARTMENT\",/*#__PURE__*/React.createElement(RegistrationSubTypeConfigDepartmentTab,{controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,dataState:_this.props.Login.dataState,masterData:_this.props.Login.masterData[\"selectedSection\"]||[],selectedRegSubType:_this.props.Login.masterData.selectedRegSubType,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,deleteRecord:_this.DeleteTabRecords,deleteSecId:deleteSecId,getDepartmentData:_this.props.getDepartmentData,DepartmentAndUser:_this.props.Login.masterData.DepartmentAndUser||[],screenName:\"IDS_DEPARTMENT\",selectedRecord:_this.state.selectedRecord,settings:_this.props.Login.settings}));if(_this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode===2)tabMap.set(\"IDS_USERROLE\",/*#__PURE__*/React.createElement(RegistrationSubTypeConfigUserRoleTab,{controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,dataState:_this.props.Login.dataState,masterData:_this.props.Login.masterData[\"selectedSection\"]||[],selectedRegSubType:_this.props.Login.masterData.selectedRegSubType,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,deleteRecord:_this.DeleteTabRecords,deleteSecId:deleteSecId,getUserroleData:_this.props.getUserroleData,DepartmentAndUser:_this.props.Login.masterData.DepartmentAndUser||[],screenName:\"IDS_USERROLE\",selectedRecord:_this.state.selectedRecord,settings:_this.props.Login.settings}));if(_this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode===3)tabMap.set(\"IDS_USERS\",/*#__PURE__*/React.createElement(RegistrationSubTypeConfigUserTab,{controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,dataState:_this.props.Login.dataState,masterData:_this.props.Login.masterData[\"selectedSection\"]||[]//masterData={this.props.Login.masterData || []}\n,selectedRegSubType:_this.props.Login.masterData.selectedRegSubType,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,deleteRecord:_this.DeleteTabRecords,deleteSecId:deleteSecId,getListofUsers:_this.props.getListofUsers,DepartmentAndUser:_this.props.Login.masterData.DepartmentAndUser||[],screenName:\"IDS_USERS\",selectedRecord:_this.state.selectedRecord,settings:_this.props.Login.settings}));return tabMap;};var sectionDataState={skip:0,take:10};_this.state={selectedRecord:{},error:\"\",userRoleControlRights:[],selectedRegSubType:undefined,controlMap:new Map(),RegSubType:[],sectionDataState:sectionDataState,sidebarview:false};_this.searchRef=React.createRef();_this.searchFieldList=[\"sregsubtypename\"];_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(RegistrationSubtypeConfigration,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var updateState=false;var _this$state=this.state,selectedRecord=_this$state.selectedRecord,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,nfilterSampleType=_this$state.nfilterSampleType,filterSampleType=_this$state.filterSampleType,filterRegtype=_this$state.filterRegtype,nregtypecode=_this$state.nregtypecode;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;updateState=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);updateState=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){nfilterSampleType=this.state.nfilterSampleType||{};if(this.props.Login.masterData.SelectedSampleType&&this.props.Login.masterData.SelectedSampleType!==previousProps.Login.masterData.SelectedSampleType){nfilterSampleType={label:this.props.Login.masterData.SelectedSampleType.ssampletypename,value:this.props.Login.masterData.SelectedSampleType.nsampletypecode,item:this.props.Login.masterData.SelectedSampleType};}//filterData = this.generateBreadCrumData();\nupdateState=true;}if(this.props.Login.masterData.filterSampleType!==previousProps.Login.masterData.filterSampleType){var SampleTypeMap=constructOptionList(this.props.Login.masterData.filterSampleType||[],\"nsampletypecode\",\"ssampletypename\",\"ascending\",false);filterSampleType=SampleTypeMap.get(\"OptionList\");if(SampleTypeMap.get(\"DefaultValue\")){nfilterSampleType=SampleTypeMap.get(\"DefaultValue\");}//else if (\n//   filterInstrumentCategory &&\n//   filterInstrumentCategory.length > 0\n// ) {\n//   nfilterInstrumentCategory = filterInstrumentCategory[0];\n// }\nupdateState=true;}if(this.props.Login.masterData.filterRegtype!==previousProps.Login.masterData.filterRegtype){var _SampleTypeMap=constructOptionList(this.props.Login.masterData.filterRegtype||[],\"nregtypecode\",\"sregtypename\",\"ascending\",false);filterRegtype=_SampleTypeMap.get(\"OptionList\");if(_SampleTypeMap.get(\"DefaultValue\")){nregtypecode=_SampleTypeMap.get(\"DefaultValue\");}else if(filterRegtype&&filterRegtype.length>0){nregtypecode=filterRegtype[0];}updateState=true;}if(updateState){this.setState({selectedRecord:selectedRecord,userRoleControlRights:userRoleControlRights,controlMap:controlMap,//filterData,\nnfilterSampleType:nfilterSampleType,filterSampleType:filterSampleType,nregtypecode:nregtypecode,filterRegtype:filterRegtype});}}},{key:\"render\",value:function render(){var _this2=this;var mandatoryFields=[];if(this.props.Login.screenName===\"IDS_DEPARTMENT\"){this.state.selectedRecord&&this.state.selectedRecord[\"ndeltacheck\"]===4?mandatoryFields.push({mandatory:true,idsName:\"IDS_DEPARTMENT\",dataField:\"ndeptcode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{mandatory:true,idsName:\"IDS_USERS\",dataField:\"nusercode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"}):mandatoryFields.push({mandatory:true,idsName:\"IDS_DEPARTMENT\",dataField:\"ndeptcode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"});}else if(this.props.Login.screenName===\"IDS_USERROLE\"){this.state.selectedRecord&&this.state.selectedRecord[\"ndeltacheck\"]===4?mandatoryFields.push({mandatory:true,idsName:\"IDS_USERROLE\",dataField:\"nuserrolecode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{mandatory:true,idsName:\"IDS_USERS\",dataField:\"nusercode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"}):mandatoryFields.push({mandatory:true,idsName:\"IDS_USERROLE\",dataField:\"nuserrolecode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"});}else{mandatoryFields.push({mandatory:true,idsName:\"IDS_USERS\",dataField:\"nusercode\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"});}var selectedRegSubType=this.props.Login.masterData.selectedRegSubType;var filterParam={inputListName:\"RegSubType\",selectedObject:\"selectedRegSubType\",primaryKeyField:\"nregsubtypecode\",fetchUrl:\"registrationsubtypeconfigration/getTabdetails\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var breadCrumbData=[];//this.props.Login.masterData.defaultInstrumentCatValue || [];\nbreadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",//\"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.defaultInstrumentCatValue.label : \"-\"\n\"value\":this.props.Login.masterData.defaultSampleTypeValue?this.props.Login.masterData.SelectedSampleType.ssampletypename:\"-\"},{\"label\":\"IDS_REGTYPE\",\"value\":this.props.Login.masterData.defaultRegtypeValue?this.props.Login.masterData.SelectedRegType.sregtypename:\"-\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this2.setState({sidebarview:!_this2.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster,{formatMessage:this.props.intl.formatMessage,screenName:\"RegSubType\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.RegSubType,getMasterDetail:function getMasterDetail(RegSubType){return _this2.props.getTabdetails(RegSubType,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedRegSubType,primaryKeyField:\"nregsubtypecode\",mainField:\"sregsubtypename\",isIDSField:\"Yes\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,searchRef:this.searchRef//addId={addId}\n,hidePaging:false,reloadData:this.reloadData// openModal={() =>\n//   this.props.getInstrumentCombo(\n//     \"IDS_INSTRUMENT\",\n//     \"create\",\n//     \"ninstrumentcode\",\n//     this.props.Login.masterData,\n//     this.props.Login.userInfo,\n//     //addId\n//   )\n// }\n,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showFilterIcon:true,showFilter:this.props.Login.showFilter,filterComponent:[{IDS_INSTRUMENTCATEGORYFILTER:/*#__PURE__*/React.createElement(SampleTypeFilter,{filterSampleType:this.state.filterSampleType||[],nfilterSampleType:this.state.nfilterSampleType||{},filterRegtype:this.state.filterRegtype||[],onComboChange:this.onComboChange,nregtypecode:this.state.nregtypecode||{}})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.selectedRegSubType?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedRegSubType.sregsubtypename)),/*#__PURE__*/React.createElement(Card.Body,null,selectedRegSubType&&/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetail(),onTabChange:this.onTabChange}))):\"\"))))))),(this.props.Login.openModal||this.props.Login.openChildModal)&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal||this.props.Login.openChildModal,closeModal:this.closeModal,operation:this.props.Login.operation,size:this.props.Login.loadEsign?\"lg\":this.props.Login.openModal?\"xl\":this.props.Login.openChildModal?\"lg\":\"lg\",inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,mandatoryFields:mandatoryFields,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_DEPARTMENT\"?/*#__PURE__*/React.createElement(AddRegistrationSubtypeConfigDepartment,{selectedRecord:this.state.selectedRecord||{},Lab:this.props.Login.Lab,Users:this.props.Login.Users,onComboChange:this.onComboChange,onSwitchChange:this.onSwitchChange,onInputOnChange:this.onInputOnChange,isdisable:this.props.Login.masterData.isdisable||false}):this.props.Login.screenName===\"IDS_USERROLE\"?/*#__PURE__*/React.createElement(AddRegistrationSubtypeConfigUserRole,{selectedRecord:this.state.selectedRecord||{},Lab:this.props.Login.Lab,Users:this.props.Login.Users,onComboChange:this.onComboChange,onSwitchChange:this.onSwitchChange,onInputOnChange:this.onInputOnChange,isdisable:this.props.Login.masterData.isdisable||false}):this.props.Login.screenName===\"IDS_USERS\"?/*#__PURE__*/React.createElement(AddRegistrationSubtypeConfigUser,{selectedRecord:this.state.selectedRecord||{},Users:this.props.Login.Users,onComboChange:this.onComboChange,onSwitchChange:this.onSwitchChange,onInputOnChange:this.onInputOnChange}):\"\"}));}}]);return RegistrationSubtypeConfigration;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getTabdetails:getTabdetails,filterColumnData:filterColumnData,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getSectionUsers:getSectionUsers,getDepartmentData:getDepartmentData,SampleTypeFilterchange:SampleTypeFilterchange,getDepartmentBasedUser:getDepartmentBasedUser,getUserroleData:getUserroleData,getUserRoleBasedUser:getUserRoleBasedUser,getRegtypeBasedSampleType:getRegtypeBasedSampleType,getListofUsers:getListofUsers})(injectIntl(RegistrationSubtypeConfigration));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/RegistrationSubtypeConfigration.jsx"],"names":["React","Component","ListMaster","SampleTypeFilter","ConfirmMessage","connect","injectIntl","Row","Col","Card","ContentPanel","BreadcrumbComponent","SlideOutModal","CustomTab","DEFAULT_RETURN","Esign","RegistrationSubTypeConfigDepartmentTab","RegistrationSubTypeConfigUserRoleTab","RegistrationSubTypeConfigUserTab","AddRegistrationSubtypeConfigDepartment","AddRegistrationSubtypeConfigUserRole","AddRegistrationSubtypeConfigUser","Affix","showEsign","constructOptionList","getControlMap","callService","crudMaster","validateEsignCredential","updateStore","getTabdetails","getSectionUsers","getDepartmentData","SampleTypeFilterchange","filterColumnData","getDepartmentBasedUser","getUserroleData","getUserRoleBasedUser","getRegtypeBasedSampleType","getListofUsers","transactionStatus","toast","mapStateToProps","state","Login","RegistrationSubtypeConfigration","props","reloadData","searchRef","current","value","nfilterSampleType","inputParam","inputData","nsampletypecode","masterData","defaultSampleTypeValue","userinfo","userInfo","nregtypecode","defaultRegtypeValue","classUrl","methodUrl","searchedData","undefined","filterSampleType","onComboChange","comboData","fieldName","caseNo","selectedRecord","setState","ndeptusercode","screenName","SelectedSampleType","item","userrolecode","updateInfo","typeName","data","DeleteTabRecords","operation","ncontrolCode","dataState","sectionDataState","nsitecode","nmastersitecode","ntransfiltertypeconfigcode","nneedalluser","ntransusercode","nregsubtypecode","userRoleControlRights","nformcode","loadEsign","screenData","openChildModal","onInputOnChange","event","optional","target","type","name","checked","YES","parameterData","deltaperiod","filter","x","ndefaultstatus","closeModal","openModal","modalShow","selectedId","onFilterSubmit","SelectedRegType","warn","intl","formatMessage","id","onSaveClick","saveType","formRef","UsersArray","postParam","inputListName","selectedObject","primaryKeyField","isSingleGet","nusercode","map","users","selectedRegSubType","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","label","password","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","ntransfiltertypecode","set","DepartmentAndUser","settings","skip","take","error","RegSubType","sidebarview","createRef","searchFieldList","confirmMessage","previousProps","updateState","filterRegtype","Object","values","push","ssampletypename","SampleTypeMap","length","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","filterParam","fetchUrl","fecthInputObject","breadCrumbData","sregtypename","openFilter","closeFilter","showFilter","IDS_INSTRUMENTCATEGORYFILTER","sregsubtypename","onTabChange","masterStatus","Lab","Users","onSwitchChange","isdisable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport SampleTypeFilter from \"./SampleTypeFilter\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { ContentPanel } from \"../../components/App.styles\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport RegistrationSubTypeConfigDepartmentTab from \"./RegistrationSubTypeConfigDepartmentTab\";\r\nimport RegistrationSubTypeConfigUserRoleTab from \"./RegistrationSubTypeConfigUserRoleTab\";\r\nimport RegistrationSubTypeConfigUserTab from \"./RegistrationSubTypeConfigUserTab\";\r\nimport AddRegistrationSubtypeConfigDepartment from \"../../pages/credentialmanagement/AddRegistrationSubtypeConfigDepartment\";\r\nimport AddRegistrationSubtypeConfigUserRole from \"../../pages/credentialmanagement/AddRegistrationSubtypeConfigUserRole\";\r\nimport AddRegistrationSubtypeConfigUser from \"../../pages/credentialmanagement/AddRegistrationSubtypeConfigUser\";\r\nimport { Affix } from \"rsuite\";\r\nimport {showEsign,constructOptionList,getControlMap} from \"../../components/CommonScript\";\r\nimport {callService,crudMaster,validateEsignCredential,updateStore,getTabdetails,getSectionUsers,getDepartmentData,SampleTypeFilterchange,\r\n        filterColumnData,getDepartmentBasedUser,getUserroleData,getUserRoleBasedUser,getRegtypeBasedSampleType,getListofUsers} from \"../../actions\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { toast } from \"react-toastify\";\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\nclass RegistrationSubtypeConfigration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const sectionDataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedRegSubType: undefined,\r\n      controlMap: new Map(),\r\n      RegSubType: [],\r\n      sectionDataState,\r\n      sidebarview: false\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sregsubtypename\"];\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    if (this.state.nfilterSampleType && this.state.nfilterSampleType.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterSampleType: this.props.Login.masterData.defaultSampleTypeValue,\r\n          nregtypecode: this.props.Login.masterData.defaultRegtypeValue.value,\r\n        },\r\n        classUrl: \"registrationsubtypeconfigration\",\r\n        methodUrl: \"BySampleType\",\r\n        masterData: {\r\n          ...this.props.Login.masterData,\r\n          defaultSampleTypeValue: this.props.Login.masterData.defaultSampleTypeValue, searchedData: undefined\r\n        }\r\n\r\n      };\r\n      this.props.SampleTypeFilterchange(\r\n        inputParam,\r\n        this.props.Login.masterData.filterSampleType\r\n      );\r\n    } else {\r\n      //   toast.warn(\r\n      //     this.props.intl.formatMessage({\r\n      //       id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\r\n      //     })\r\n      //   );\r\n    }\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    let masterData = this.props.Login.masterData;\r\n    if (comboData !== null) {\r\n      switch (caseNo) {\r\n        case 1:\r\n          if (fieldName === \"nsampletypecode\") {\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n          } \r\n          // else if (fieldName === \"nregionalsitecode\") {\r\n          //   selectedRecord[fieldName] = comboData;\r\n          //   this.props.getInstrumentSiteSection(\r\n          //     comboData.item.nsitecode,\r\n          //     this.props.Login.userInfo,\r\n          //     selectedRecord\r\n          //   );\r\n          // }\r\n          else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n          }\r\n          break;\r\n        case 2:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"ndeptusercode\"] = comboData.value;\r\n          this.props.getDepartmentBasedUser(\r\n            this.state.selectedRecord.ndeptusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            masterData,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n\r\n        case 3:\r\n          masterData = {\r\n            ...this.props.Login.masterData,\r\n            nfilterSampleType: comboData,\r\n            SelectedSampleType: comboData.item\r\n          }\r\n\r\n\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"ndeptusercode\"] = comboData.value;\r\n          this.props.getRegtypeBasedSampleType(\r\n            this.state.selectedRecord.ndeptusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            masterData,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n\r\n        case 4:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"userrolecode\"] = comboData.value;\r\n          this.props.getUserRoleBasedUser(\r\n            this.state.selectedRecord.userrolecode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            masterData,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n\r\n        case 5:\r\n          let nregtypecode =\r\n            this.state.nregtypecode || {};\r\n          nregtypecode = comboData;\r\n          this.searchRef.current.value = \"\";\r\n          this.setState({ nregtypecode });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    else {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { selectedRecord }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n  };\r\n\r\n\r\n  DeleteTabRecords = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    const dataState = this.state.sectionDataState;\r\n    inputData[\"tabdetails\"] = {\r\n      nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n    };\r\n    inputData[\"tabdetails\"][\"ntransfiltertypeconfigcode\"] = operation.selectedRecord.ntransfiltertypeconfigcode;\r\n    inputData[\"tabdetails\"][\"nneedalluser\"] = operation.selectedRecord.nneedalluser;\r\n    inputData[\"tabdetails\"][\"ntransusercode\"] = operation.selectedRecord.ntransusercode || -1;\r\n    inputData[\"tabdetails\"][\"nregsubtypecode\"] = operation.selectedRecord.nregsubtypecode;\r\n\r\n\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    const inputParam = {\r\n      methodUrl: \"DepartmentAndUserRole\",\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      inputData: inputData,\r\n      operation: \"delete\",\r\n      dataState: dataState,\r\n      selectedRecord: { ...this.state.selectedRecord },\r\n      // postParam: {\r\n      //   inputListName: \"Instrument\", selectedObject: \"selectedRegSubType\", primaryKeyField: \"ninstrumentcode\",\r\n      //   fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      // }\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        operation.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openChildModal: true,\r\n          screenName: operation.screenName,\r\n          operation: operation.operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n    }\r\n\r\n    // }\r\n  }\r\n\r\n\r\n\r\n  onInputOnChange = (event, caseNo, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n      case 1:\r\n        if (event.target.type === 'checkbox') {\r\n          selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n          if (selectedRecord['ndeltacheck'] === transactionStatus.YES) {\r\n            selectedRecord['ndeltaunitcode'] = this.props.Login.parameterData && this.props.Login.parameterData.deltaperiod.filter(x =>\r\n              x.item.ndefaultstatus === transactionStatus.YES)[0];\r\n          }\r\n          else {\r\n            delete selectedRecord['ndeltaunitcode'];\r\n          }\r\n        } else {\r\n          selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let openChildModal = this.props.Login.openChildModal;\r\n    let modalShow = this.props.Login.modalShow;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n\r\n    if (this.props.Login.loadEsign) {\r\n      if ((this.props.Login.operation.operation ?\r\n        this.props.Login.operation.operation : this.props.Login.operation) === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        openChildModal = false;\r\n        selectedRecord = {};\r\n      }\r\n      else {\r\n        loadEsign = false;\r\n        modalShow = true;\r\n        openModal = false;\r\n        openChildModal = false;\r\n\r\n      }\r\n      selectedRecord['esignpassword'] = \"\"\r\n      selectedRecord['esigncomments'] = \"\"\r\n      selectedRecord['esignreason'] = \"\"\r\n    }\r\n    else {\r\n      openModal = false;\r\n      openChildModal = false;\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: {\r\n        openModal, openChildModal, modalShow, loadEsign,\r\n        selectedRecord, selectedId: null\r\n      },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    if ((this.state.nfilterSampleType && this.state.nfilterSampleType.value) && (this.props.Login.masterData.defaultRegtypeValue && this.props.Login.masterData.defaultRegtypeValue.value)) {\r\n      let inputParam = {\r\n        inputData: {\r\n          nsampletypecode: this.state.nfilterSampleType.value,\r\n          nregtypecode: this.state.nregtypecode.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterSampleType: this.state.nfilterSampleType,\r\n        },\r\n        masterData: {\r\n          ...this.props.Login.masterData,\r\n          defaultSampleTypeValue: this.state.nfilterSampleType,\r\n          defaultRegtypeValue: this.state.nregtypecode,\r\n          SelectedRegType: this.state.nregtypecode.item,\r\n          searchedData: undefined\r\n        },\r\n        classUrl: \"registrationsubtypeconfigration\",\r\n        methodUrl: \"BySampleType\",\r\n      };\r\n      this.props.SampleTypeFilterchange(\r\n        inputParam,\r\n        this.props.Login.masterData.filterSampleType\r\n      );\r\n    } else {\r\n        toast.warn(\r\n          this.props.intl.formatMessage({\r\n            id: \"IDS_SELECTFILTER\",\r\n          })\r\n        );\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let inputData = [];\r\n    let UsersArray = []\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    let postParam = {\r\n      inputListName: \"RegSubType\",\r\n      selectedObject: \"selectedRegSubType\",\r\n      primaryKeyField: \"nregsubtypecode\",\r\n      isSingleGet: true\r\n    }\r\n\r\n    inputData[\"nmappingfieldcode\"] = this.props.Login.screenName === \"IDS_DEPARTMENT\" ? this.state.selectedRecord[\"ndeptcode\"].value : this.props.Login.screenName === \"IDS_USERROLE\" ? this.state.selectedRecord[\"nuserrolecode\"].value : -1;\r\n    inputData[\"nallusers\"] = this.state.selectedRecord[\"ndeltacheck\"] || 4;\r\n    UsersArray = this.state.selectedRecord && this.state.selectedRecord.nusercode && this.state.selectedRecord.nusercode.map(item => {\r\n      let users = {}\r\n      users[\"nusercode\"] = item.value;\r\n      return users\r\n    });\r\n    inputData['usermapping'] = UsersArray;\r\n    inputData[\"selectedregsubtype\"] = this.props.Login.masterData.selectedRegSubType;\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl: \"Department\",\r\n      inputData: inputData,\r\n      operation: this.props.Login.operation,\r\n      saveType,\r\n      formRef,\r\n      searchRef: this.searchRef,\r\n      postParam: postParam,\r\n      selectedRecord: { ...this.state.selectedRecord }\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n          openChildModal: true\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  validateEsign = () => {\r\n    let modalName;\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n\r\n    this.props.validateEsignCredential(inputParam, modalName);\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    const deleteSecId =\r\n      this.state.controlMap.has(\"DeleteDepartment\") &&\r\n      this.state.controlMap.get(\"DeleteDepartment\").ncontrolcode;\r\n\r\n    if (this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode === 1)\r\n      tabMap.set(\r\n        \"IDS_DEPARTMENT\",\r\n        <RegistrationSubTypeConfigDepartmentTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          dataState={this.props.Login.dataState}\r\n          masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n          selectedRegSubType={this.props.Login.masterData.selectedRegSubType}\r\n          userInfo={this.props.Login.userInfo}\r\n          inputParam={this.props.Login.inputParam}\r\n          deleteRecord={this.DeleteTabRecords}\r\n          deleteSecId={deleteSecId}\r\n          getDepartmentData={this.props.getDepartmentData}\r\n          DepartmentAndUser={this.props.Login.masterData.DepartmentAndUser || []}\r\n          screenName=\"IDS_DEPARTMENT\"\r\n          selectedRecord={this.state.selectedRecord}\r\n          settings={this.props.Login.settings}\r\n        />\r\n      );\r\n\r\n\r\n    if (this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode === 2)\r\n      tabMap.set(\r\n        \"IDS_USERROLE\",\r\n        <RegistrationSubTypeConfigUserRoleTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          dataState={this.props.Login.dataState}\r\n          masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n          selectedRegSubType={this.props.Login.masterData.selectedRegSubType}\r\n          userInfo={this.props.Login.userInfo}\r\n          inputParam={this.props.Login.inputParam}\r\n          deleteRecord={this.DeleteTabRecords}\r\n          deleteSecId={deleteSecId}\r\n          getUserroleData={this.props.getUserroleData}\r\n          DepartmentAndUser={this.props.Login.masterData.DepartmentAndUser || []}\r\n          screenName=\"IDS_USERROLE\"\r\n          selectedRecord={this.state.selectedRecord}\r\n          settings={this.props.Login.settings}\r\n        />\r\n      );\r\n\r\n    if (this.props.Login.masterData.defaultSampleTypeValue.item.ntransfiltertypecode === 3)\r\n      tabMap.set(\r\n        \"IDS_USERS\",\r\n        <RegistrationSubTypeConfigUserTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          dataState={this.props.Login.dataState}\r\n          masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n          //masterData={this.props.Login.masterData || []}\r\n          selectedRegSubType={this.props.Login.masterData.selectedRegSubType}\r\n          userInfo={this.props.Login.userInfo}\r\n          inputParam={this.props.Login.inputParam}\r\n          deleteRecord={this.DeleteTabRecords}\r\n          deleteSecId={deleteSecId}\r\n          getListofUsers={this.props.getListofUsers}\r\n          DepartmentAndUser={this.props.Login.masterData.DepartmentAndUser || []}\r\n          screenName=\"IDS_USERS\"\r\n          selectedRecord={this.state.selectedRecord}\r\n          settings={this.props.Login.settings}\r\n        />\r\n      );\r\n    return tabMap;\r\n  };\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      //filterData,\r\n      nfilterSampleType,\r\n      filterSampleType,\r\n      filterRegtype, nregtypecode\r\n    } = this.state;\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      updateState = true;\r\n    }\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterSampleType = this.state.nfilterSampleType || {};\r\n      if (\r\n        this.props.Login.masterData.SelectedSampleType &&\r\n        this.props.Login.masterData.SelectedSampleType !==\r\n        previousProps.Login.masterData.SelectedSampleType\r\n      ) {\r\n        nfilterSampleType = {\r\n          label: this.props.Login.masterData.SelectedSampleType.ssampletypename,\r\n          value: this.props.Login.masterData.SelectedSampleType.nsampletypecode,\r\n          item: this.props.Login.masterData.SelectedSampleType,\r\n        };\r\n      }\r\n      //filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n    }\r\n\r\n    if (\r\n      this.props.Login.masterData.filterSampleType !== previousProps.Login.masterData.filterSampleType\r\n    ) {\r\n      const SampleTypeMap = constructOptionList(\r\n        this.props.Login.masterData.filterSampleType || [],\r\n        \"nsampletypecode\",\r\n        \"ssampletypename\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterSampleType = SampleTypeMap.get(\"OptionList\");\r\n      if (SampleTypeMap.get(\"DefaultValue\")) {\r\n        nfilterSampleType = SampleTypeMap.get(\"DefaultValue\");\r\n       } //else if (\r\n      //   filterInstrumentCategory &&\r\n      //   filterInstrumentCategory.length > 0\r\n      // ) {\r\n      //   nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n      // }\r\n      updateState = true;\r\n    }\r\n\r\n\r\n    if (\r\n      this.props.Login.masterData.filterRegtype !== previousProps.Login.masterData.filterRegtype\r\n    ) {\r\n      const SampleTypeMap = constructOptionList(\r\n        this.props.Login.masterData.filterRegtype || [],\r\n        \"nregtypecode\",\r\n        \"sregtypename\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterRegtype = SampleTypeMap.get(\"OptionList\");\r\n      if (SampleTypeMap.get(\"DefaultValue\")) {\r\n        nregtypecode = SampleTypeMap.get(\"DefaultValue\");\r\n      } else if (\r\n        filterRegtype &&\r\n        filterRegtype.length > 0\r\n      ) {\r\n        nregtypecode = filterRegtype[0];\r\n      }\r\n      updateState = true;\r\n    }\r\n\r\n    if (updateState) {\r\n      this.setState({\r\n        selectedRecord,\r\n        userRoleControlRights,\r\n        controlMap,\r\n        //filterData,\r\n        nfilterSampleType,\r\n        filterSampleType, nregtypecode, filterRegtype\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n\r\n    let mandatoryFields = [];\r\n\r\n    if (this.props.Login.screenName === \"IDS_DEPARTMENT\") {\r\n\r\n      this.state.selectedRecord && this.state.selectedRecord[\"ndeltacheck\"] === 4 ? mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_DEPARTMENT\",\r\n        dataField: \"ndeptcode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      }, {\r\n        mandatory: true,\r\n        idsName: \"IDS_USERS\",\r\n        dataField: \"nusercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      }\r\n      ) : mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_DEPARTMENT\",\r\n        dataField: \"ndeptcode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n\r\n    }\r\n    else if (this.props.Login.screenName === \"IDS_USERROLE\") {\r\n\r\n      this.state.selectedRecord && this.state.selectedRecord[\"ndeltacheck\"] === 4 ? mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_USERROLE\",\r\n        dataField: \"nuserrolecode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      }, {\r\n        mandatory: true,\r\n        idsName: \"IDS_USERS\",\r\n        dataField: \"nusercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      }\r\n      ) : mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_USERROLE\",\r\n        dataField: \"nuserrolecode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n\r\n    }\r\n    else {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_USERS\",\r\n        dataField: \"nusercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    }\r\n    const { selectedRegSubType } = this.props.Login.masterData;\r\n    const filterParam = {\r\n      inputListName: \"RegSubType\",\r\n      selectedObject: \"selectedRegSubType\",\r\n      primaryKeyField: \"nregsubtypecode\",\r\n      fetchUrl: \"registrationsubtypeconfigration/getTabdetails\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    let breadCrumbData = []; //this.props.Login.masterData.defaultInstrumentCatValue || [];\r\n\r\n    breadCrumbData = [\r\n      {\r\n        \"label\": \"IDS_SAMPLETYPE\",\r\n        //\"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.defaultInstrumentCatValue.label : \"-\"\r\n        \"value\": this.props.Login.masterData.defaultSampleTypeValue ? this.props.Login.masterData.SelectedSampleType.ssampletypename : \"-\"\r\n      }, {\r\n        \"label\": \"IDS_REGTYPE\",\r\n        \"value\": this.props.Login.masterData.defaultRegtypeValue ? this.props.Login.masterData.SelectedRegType.sregtypename : \"-\"\r\n      }\r\n    ];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n              <span onClick={() => this.setState({ sidebarview: !this.state.sidebarview })} className='sidebar-view-btn'>\r\n                {!this.state.sidebarview ?\r\n                  <i class=\"fa fa-less-than\"></i> :\r\n                  <i class=\"fa fa-greater-than\"></i>\r\n                }\r\n              </span>\r\n              <ListMaster\r\n                formatMessage={this.props.intl.formatMessage}\r\n                screenName={\"RegSubType\"}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.RegSubType\r\n                }\r\n                getMasterDetail={(RegSubType) =>\r\n                  this.props.getTabdetails(\r\n                    RegSubType,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.selectedRegSubType}\r\n                primaryKeyField=\"nregsubtypecode\"\r\n                mainField=\"sregsubtypename\"\r\n                isIDSField=\"Yes\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                searchRef={this.searchRef}\r\n                //addId={addId}\r\n                hidePaging={false}\r\n                reloadData={this.reloadData}\r\n                // openModal={() =>\r\n                //   this.props.getInstrumentCombo(\r\n                //     \"IDS_INSTRUMENT\",\r\n                //     \"create\",\r\n                //     \"ninstrumentcode\",\r\n                //     this.props.Login.masterData,\r\n                //     this.props.Login.userInfo,\r\n                //     //addId\r\n                //   )\r\n                // }\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    IDS_INSTRUMENTCATEGORYFILTER: (\r\n                      <SampleTypeFilter\r\n                      filterSampleType={\r\n                          this.state.filterSampleType || []\r\n                        }\r\n                        nfilterSampleType={\r\n                          this.state.nfilterSampleType || {}\r\n                        }\r\n                        filterRegtype={this.state.filterRegtype || []}\r\n                        onComboChange={this.onComboChange}\r\n                        nregtypecode={\r\n                          this.state.nregtypecode || {}\r\n                        }\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ContentPanel className=\"panel-main-content\">\r\n                    <Card className=\"border-0\">\r\n                      {this.props.Login.masterData.selectedRegSubType ? (\r\n                        <>\r\n                          <Card.Header>\r\n                            <Card.Title className=\"product-title-main\">\r\n                              {\r\n                                this.props.Login.masterData.selectedRegSubType\r\n                                  .sregsubtypename\r\n                              }\r\n                            </Card.Title>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            {selectedRegSubType && (\r\n                              <CustomTab\r\n                                tabDetail={this.tabDetail()}\r\n                                onTabChange={this.onTabChange}\r\n                              />\r\n                            )}\r\n                          </Card.Body>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Card>\r\n                  </ContentPanel>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {(this.props.Login.openModal || this.props.Login.openChildModal) && (\r\n          <SlideOutModal\r\n            show={(this.props.Login.openModal || this.props.Login.openChildModal)}\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openModal ? \"xl\" : this.props.Login.openChildModal ? \"lg\" : \"lg\"}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_DEPARTMENT\" ? (\r\n                <AddRegistrationSubtypeConfigDepartment\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  Lab={this.props.Login.Lab}\r\n                  Users={this.props.Login.Users}\r\n                  onComboChange={this.onComboChange}\r\n                  onSwitchChange={this.onSwitchChange}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  isdisable={this.props.Login.masterData.isdisable || false}\r\n\r\n                />\r\n              ) :\r\n                this.props.Login.screenName === \"IDS_USERROLE\" ? (\r\n                  <AddRegistrationSubtypeConfigUserRole\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    Lab={this.props.Login.Lab}\r\n                    Users={this.props.Login.Users}\r\n                    onComboChange={this.onComboChange}\r\n                    onSwitchChange={this.onSwitchChange}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    isdisable={this.props.Login.masterData.isdisable || false}\r\n                  />\r\n                ) :\r\n                  this.props.Login.screenName === \"IDS_USERS\" ? (\r\n                    <AddRegistrationSubtypeConfigUser\r\n                      selectedRecord={this.state.selectedRecord || {}}\r\n                      Users={this.props.Login.Users}\r\n                      onComboChange={this.onComboChange}\r\n                      onSwitchChange={this.onSwitchChange}\r\n                      onInputOnChange={this.onInputOnChange}\r\n                    />\r\n                  ) :\r\n                    \"\"\r\n            }\r\n          />\r\n        )}\r\n\r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  getTabdetails,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getSectionUsers,\r\n  getDepartmentData,\r\n  SampleTypeFilterchange,\r\n  getDepartmentBasedUser, getUserroleData, getUserRoleBasedUser, getRegtypeBasedSampleType, getListofUsers\r\n})(injectIntl(RegistrationSubtypeConfigration));"]},"metadata":{},"sourceType":"module"}