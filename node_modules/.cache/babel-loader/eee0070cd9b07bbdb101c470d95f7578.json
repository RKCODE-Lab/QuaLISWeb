{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\Site.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, getSiteCombo, updateStore, validateEsignCredential, getDistrictByRegion } from '../../actions';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport Esign from '../../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport AddSite from './AddSite';\nimport { showEsign, getControlMap, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Site extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        this.props.Login.districtList = [];\n        selectedId = null;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (event.target.name === \"sphoneno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData !== null) {\n        selectedRecord[fieldName] = comboData;\n\n        if (fieldName == \"nregioncode\") {\n          this.props.getDistrictByRegion({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nregioncode.label,\n              primarykey: selectedRecord.nregioncode.value\n            }\n          });\n          selectedRecord[\"ndistrictcode\"] = \"\";\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        if (selectedRecord[\"nregioncode\"]) {\n          delete selectedRecord[\"nregioncode\"];\n          delete selectedRecord[\"ndistrictcode\"];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.deleteRecord = deleteParam => {\n      let inputData = [];\n      delete deleteParam.selectedRecord.expanded;\n      inputData[\"site\"] = deleteParam.selectedRecord;\n      inputData[\"site\"][\"needutcconversation\"] = parseInt(this.props.Login.settings[21]) === transactionStatus.YES ? true : false;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: deleteParam.operation,\n        dataState: this.state.dataState,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        displayName: \"IDS_SITE\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit\n      const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n\n      if (isValidateEmail) {\n        let dataState = undefined;\n        let operation = \"\";\n        let inputData = [];\n        let selectedId = null;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = {\n          selectedObject: \"selectedSite\",\n          primaryKeyField: \"nsitecode\",\n          inputListName: \"Site\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          selectedId = this.props.Login.selectedRecord.nsitecode;\n          inputData[\"site\"] = {\n            \"nsitecode\": this.props.Login.selectedRecord.nsitecode,\n            \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\n            \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\n            \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\n            \"sphoneno\": this.state.selectedRecord.sphoneno,\n            \"ssitename\": this.state.selectedRecord.ssitename,\n            \"ssitecode\": this.state.selectedRecord.ssitecode !== undefined ? this.state.selectedRecord.ssitecode : \"NA\",\n            \"sfaxno\": this.state.selectedRecord.sfaxno,\n            \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\n            \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\n            \"ndateformatcode\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.value : \"-1\"\n          }; // if (this.state.selectedRecord.ndateformatcode.label !== undefined) {\n\n          inputData[\"sitedateformat\"] = {\n            \"ssitereportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitereportdatetime,\n            \"ssitereportdate\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\n            \"ssitedate\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\n            \"spgdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\n            \"spgreportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\n            \"ssitedatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitedatetime,\n            \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== null ? this.state.selectedRecord.nisstandaloneserver : 4,\n            \"nsitecode\": this.state.selectedRecord.nsitecode,\n            \"nissyncserver\": this.state.selectedRecord.nissyncserver !== null ? this.state.selectedRecord.nissyncserver : 4 // \"nutcconversation\": this.state.selectedRecord.nutcconversation !== null ? this.state.selectedRecord.nutcconversation : 4\n\n          }; //    }\n\n          operation = \"update\";\n          dataState = this.state.dataState;\n          selectedId = this.props.Login.selectedId;\n        } else {\n          inputData[\"site\"] = {\n            \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\n            \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\n            \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\n            \"sphoneno\": this.state.selectedRecord.sphoneno,\n            \"ssitename\": this.state.selectedRecord.ssitename,\n            \"ssitecode\": this.state.selectedRecord.ssitecode !== undefined ? this.state.selectedRecord.ssitecode : \"NA\",\n            \"sfaxno\": this.state.selectedRecord.sfaxno,\n            \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\n            \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\n            \"ndateformatcode\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.value : \"-1\",\n            \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== undefined ? this.state.selectedRecord.nisstandaloneserver : 4 // \"nutcconversation\": this.state.selectedRecord.nutcconversation !== undefined ? this.state.selectedRecord.nutcconversation : 4\n\n          }; //  if (this.state.selectedRecord.ndateformatcode && this.state.selectedRecord.ndateformatcode.label !== undefined) {\n\n          inputData[\"sitedateformat\"] = {\n            \"ssitereportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitereportdatetime,\n            \"ssitereportdate\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\n            \"ssitedate\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\n            \"spgdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\n            \"spgreportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\n            \"ssitedatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitedatetime,\n            \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== null ? this.state.selectedRecord.nisstandaloneserver : 4,\n            \"needutcconversation\": parseInt(this.props.Login.settings[21]) === transactionStatus.YES ? true : false,\n            \"nsitecode\": this.state.selectedRecord.nsitecode,\n            \"nissyncserver\": this.state.selectedRecord.nissyncserver !== null ? this.state.selectedRecord.nissyncserver : 4\n          }; // }\n\n          operation = \"create\";\n        }\n\n        inputData[\"site\"][\"ntimezonecode\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : \"-1\";\n        inputData[\"site\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : transactionStatus.NA;\n        inputData[\"site\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : transactionStatus.NA;\n        const inputParam = {\n          classUrl: \"site\",\n          methodUrl: \"SiteScreen\",\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          postParam,\n          searchRef: this.searchRef,\n          operation: operation,\n          saveType,\n          formRef,\n          dataState,\n          selectedId,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef();\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_SITE\",\n      \"dataField\": \"ssitename\",\n      \"width\": \"200px\"\n    }, //  { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"200px\" },\n    {\n      \"idsName\": \"IDS_SCONTACTPERSON\",\n      \"dataField\": \"scontactperson\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DEFAULTSTATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"250px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.state.controlMap.has(\"AddSite\") && this.state.controlMap.get(\"AddSite\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditSite\") && this.state.controlMap.get(\"EditSite\").ncontrolcode;\n    const addParam = {\n      screenName: \"IDS_SITE\",\n      primaryeyField: \"nsitecode\",\n      primaryKeyValue: undefined,\n      operation: \"create\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_SITE\",\n      operation: \"update\",\n      primaryKeyField: \"nsitecode\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId\n    };\n    const deleteParam = {\n      operation: \"delete\"\n    }; // this.detailedFieldList = [\n    //     { \"idsName\": \"IDS_SITEADDRESS\", \"dataField\": \"ssiteaddress\", \"width\": \"200px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_PHONENO\", \"dataField\": \"sphoneno\", \"width\": \"300px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_FAXNO\", \"dataField\": \"sfaxno\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\n    //     { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\n    //     //{ \"idsName\": \"IDS_NEEDUTCCONVERSATION\", \"dataField\": \"sutcconversationstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"stimezoneid\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\n    //     { \"idsName\": \"IDS_SITEDATE\", \"dataField\": \"sdateformat\", \"width\": \"250px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_NEEDDISTRIBUTED\", \"dataField\": \"sdistributedstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"300px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_REGION\", \"dataField\": \"sregionname\", \"width\": \"300px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_DISTRICT\", \"dataField\": \"sdistrictname\", \"width\": \"300px\",\"columnSize\": \"4\" },\n    //     { \"idsName\": \"IDS_PRIMAEYSERVER\", \"dataField\": \"sprimarysereverstatus\", \"width\": \"300px\",\"columnSize\": \"4\" },\n    // ];\n\n    const detailedFieldList = [];\n    detailedFieldList.push({\n      \"idsName\": \"IDS_SITEADDRESS\",\n      \"dataField\": \"ssiteaddress\",\n      \"width\": \"200px\",\n      \"columnSize\": \"4\"\n    }, {\n      \"idsName\": \"IDS_PHONENO\",\n      \"dataField\": \"sphoneno\",\n      \"width\": \"300px\",\n      \"columnSize\": \"4\"\n    }, {\n      \"idsName\": \"IDS_FAXNO\",\n      \"dataField\": \"sfaxno\",\n      \"width\": \"250px\",\n      \"columnSize\": \"4\"\n    }, {\n      \"idsName\": \"IDS_EMAIL\",\n      \"dataField\": \"semail\",\n      \"width\": \"250px\",\n      \"columnSize\": \"4\"\n    });\n\n    if (this.props.Login.settings && parseInt(this.props.Login.settings['21']) === transactionStatus.YES) {\n      detailedFieldList.push({\n        \"idsName\": \"IDS_TIMEZONE\",\n        \"dataField\": \"stimezoneid\",\n        \"width\": \"250px\",\n        \"columnSize\": \"4\"\n      }, {\n        \"idsName\": \"IDS_SITEDATE\",\n        \"dataField\": \"sdateformat\",\n        \"width\": \"250px\",\n        \"columnSize\": \"4\"\n      });\n\n      if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\n        detailedFieldList.push({\n          \"idsName\": \"IDS_NEEDDISTRIBUTED\",\n          \"dataField\": \"sdistributedstatus\",\n          \"width\": \"250px\",\n          \"columnSize\": \"4\"\n        }, {\n          \"idsName\": \"IDS_SITECODE\",\n          \"dataField\": \"ssitecode\",\n          \"width\": \"300px\",\n          \"columnSize\": \"4\"\n        }, {\n          \"idsName\": \"IDS_REGION\",\n          \"dataField\": \"sregionname\",\n          \"width\": \"300px\",\n          \"columnSize\": \"4\"\n        }, {\n          \"idsName\": \"IDS_DISTRICT\",\n          \"dataField\": \"sdistrictname\",\n          \"width\": \"300px\",\n          \"columnSize\": \"4\"\n        }, {\n          \"idsName\": \"IDS_PRIMAEYSERVER\",\n          \"dataField\": \"sprimarysereverstatus\",\n          \"width\": \"300px\",\n          \"columnSize\": \"4\"\n        });\n      }\n    } else if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\n      detailedFieldList.push({\n        \"idsName\": \"IDS_NEEDDISTRIBUTED\",\n        \"dataField\": \"sdistributedstatus\",\n        \"width\": \"250px\",\n        \"columnSize\": \"4\"\n      }, {\n        \"idsName\": \"IDS_SITECODE\",\n        \"dataField\": \"ssitecode\",\n        \"width\": \"300px\",\n        \"columnSize\": \"4\"\n      }, {\n        \"idsName\": \"IDS_REGION\",\n        \"dataField\": \"sregionname\",\n        \"width\": \"300px\",\n        \"columnSize\": \"4\"\n      }, {\n        \"idsName\": \"IDS_DISTRICT\",\n        \"dataField\": \"sdistrictname\",\n        \"width\": \"300px\",\n        \"columnSize\": \"4\"\n      }, {\n        \"idsName\": \"IDS_PRIMAEYSERVER\",\n        \"dataField\": \"sprimarysereverstatus\",\n        \"width\": \"300px\",\n        \"columnSize\": \"4\"\n      });\n    }\n\n    let mandatoryFields = [];\n    mandatoryFields.push({\n      \"mandatory\": true,\n      \"idsName\": \"IDS_SITENAME\",\n      \"dataField\": \"ssitename\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    });\n\n    if (this.props.Login.settings && parseInt(this.props.Login.settings['21']) === transactionStatus.YES) {\n      mandatoryFields.push({\n        \"mandatory\": true,\n        \"idsName\": \"IDS_TIMEZONE\",\n        \"dataField\": \"ntimezonecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SITEDATE\",\n        \"dataField\": \"ndateformatcode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n    }\n\n    if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\n      mandatoryFields.push({\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SITECODE\",\n        \"dataField\": \"ssitecode\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nsitecode\",\n      data: this.state.data,\n      dataResult: this.state.dataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      methodUrl: \"Site\",\n      extractedColumnList: this.extractedColumnList,\n      detailedFieldList: detailedFieldList,\n      expandField: \"expanded\",\n      fetchRecord: this.props.getSiteCombo,\n      editParam: editParam,\n      deleteRecord: this.deleteRecord,\n      deleteParam: deleteParam,\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      isActionRequired: true,\n      isToolBarRequired: true,\n      selectedId: this.props.Login.selectedId,\n      addRecord: () => this.props.getSiteCombo(addParam),\n      hasDynamicColSize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }) : \"\"))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddSite, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        TimeZoneList: this.props.Login.TimeZoneList || [],\n        dateFormatList: this.props.Login.dateFormatList || [],\n        operation: this.props.Login.operation,\n        regionList: this.props.Login.regionList,\n        districtList: this.props.Login.districtList,\n        NeedUTCConversation: parseInt(this.props.Login.settings[21]),\n        siteAdditionalInfo: parseInt(this.props.Login.settings[23]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        let {\n          selectedRecord\n        } = this.state;\n        const nisdistributed = this.props.Login.masterData.map(item => item.nisdistributed);\n        const nutcconversation = this.props.Login.masterData.map(item => item.nutcconversation);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          dataResult: process(this.props.Login.masterData, this.state.dataState),\n          selectedRecord: {\n            nisdistributed,\n            nutcconversation\n          }\n        });\n      } else {\n        let {\n          dataState,\n          selectedRecord\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        const nisdistributed = this.props.Login.masterData.map(item => item.nisdistributed);\n        const nutcconversation = this.props.Login.masterData.map(item => item.nutcconversation);\n        this.setState({\n          data: this.props.Login.masterData,\n          selectedRecord: this.props.Login.selectedRecord,\n          dataResult: process(this.props.Login.masterData, dataState),\n          dataState,\n          selectedRecord: {\n            nisdistributed,\n            nutcconversation\n          }\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getSiteCombo,\n  updateStore,\n  validateEsignCredential,\n  getDistrictByRegion\n})(injectIntl(Site));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/basemaster/Site.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","getSiteCombo","updateStore","validateEsignCredential","getDistrictByRegion","DataGrid","Esign","DEFAULT_RETURN","SlideOutModal","AddSite","showEsign","getControlMap","validateEmail","validatePhoneNumber","transactionStatus","mapStateToProps","state","Login","Site","Component","constructor","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedId","operation","districtList","updateInfo","typeName","onInputOnChange","target","type","name","checked","YES","NO","value","onComboChange","comboData","fieldName","inputData","userinfo","userInfo","sdisplayname","nregioncode","label","primarykey","deleteRecord","deleteParam","expanded","parseInt","settings","inputParam","classUrl","methodUrl","displayName","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","intl","formatMessage","id","reloadData","onSaveClick","saveType","formRef","isValidateEmail","undefined","postParam","selectedObject","primaryKeyField","inputListName","fecthInputObject","nsitecode","nmastersitecode","scontactperson","ssiteaddress","sphoneno","ssitename","ssitecode","sfaxno","semail","ndefaultstatus","ndateformatcode","ssitereportdatetime","ssitereportdate","spgsitedatetime","ssitedatetime","nisstandaloneserver","nissyncserver","NA","searchRef","info","validateEsign","sreason","nreasoncode","spredefinedreason","password","createRef","skip","take","masterStatus","error","controlMap","Map","extractedColumnList","getDerivedStateFromProps","warn","render","addId","has","get","ncontrolcode","editId","addParam","primaryeyField","primaryKeyValue","editParam","detailedFieldList","push","mandatoryFields","TimeZoneList","dateFormatList","regionList","componentDidUpdate","previousProps","Object","values","map","item","nisdistributed","nutcconversation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster, getSiteCombo, updateStore, validateEsignCredential, getDistrictByRegion } from '../../actions';\r\n\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport AddSite from './AddSite';\r\n\r\nimport { showEsign, getControlMap, validateEmail, validatePhoneNumber } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Site extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n\r\n        this.extractedColumnList = [{ \"idsName\": \"IDS_SITE\", \"dataField\": \"ssitename\", \"width\": \"200px\" },\r\n        //  { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_SCONTACTPERSON\", \"dataField\": \"scontactperson\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"250px\" },\r\n\r\n        ];\r\n\r\n\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            this.props.Login.districtList = [];\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const addId = this.state.controlMap.has(\"AddSite\") && this.state.controlMap.get(\"AddSite\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSite\") && this.state.controlMap.get(\"EditSite\").ncontrolcode;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_SITE\", primaryeyField: \"nsitecode\", primaryKeyValue: undefined,\r\n            operation: \"create\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_SITE\", operation: \"update\",\r\n            primaryKeyField: \"nsitecode\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        // this.detailedFieldList = [\r\n        //     { \"idsName\": \"IDS_SITEADDRESS\", \"dataField\": \"ssiteaddress\", \"width\": \"200px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_PHONENO\", \"dataField\": \"sphoneno\", \"width\": \"300px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_FAXNO\", \"dataField\": \"sfaxno\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\r\n        //     { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\r\n        //     //{ \"idsName\": \"IDS_NEEDUTCCONVERSATION\", \"dataField\": \"sutcconversationstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"stimezoneid\", \"width\": \"250px\" ,\"columnSize\": \"4\"},\r\n        //     { \"idsName\": \"IDS_SITEDATE\", \"dataField\": \"sdateformat\", \"width\": \"250px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_NEEDDISTRIBUTED\", \"dataField\": \"sdistributedstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"300px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_REGION\", \"dataField\": \"sregionname\", \"width\": \"300px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_DISTRICT\", \"dataField\": \"sdistrictname\", \"width\": \"300px\",\"columnSize\": \"4\" },\r\n        //     { \"idsName\": \"IDS_PRIMAEYSERVER\", \"dataField\": \"sprimarysereverstatus\", \"width\": \"300px\",\"columnSize\": \"4\" },\r\n        // ];\r\n        const detailedFieldList = [];\r\n        detailedFieldList.push(\r\n\r\n            { \"idsName\": \"IDS_SITEADDRESS\", \"dataField\": \"ssiteaddress\", \"width\": \"200px\", \"columnSize\": \"4\" },\r\n            { \"idsName\": \"IDS_PHONENO\", \"dataField\": \"sphoneno\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n            { \"idsName\": \"IDS_FAXNO\", \"dataField\": \"sfaxno\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n            { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"250px\", \"columnSize\": \"4\" }\r\n\r\n        );\r\n        if (this.props.Login.settings && parseInt(this.props.Login.settings['21']) === transactionStatus.YES) {\r\n\r\n            detailedFieldList.push(\r\n                { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"stimezoneid\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n                { \"idsName\": \"IDS_SITEDATE\", \"dataField\": \"sdateformat\", \"width\": \"250px\", \"columnSize\": \"4\" }\r\n            );\r\n            if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\r\n                detailedFieldList.push(\r\n                    { \"idsName\": \"IDS_NEEDDISTRIBUTED\", \"dataField\": \"sdistributedstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n                    { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                    { \"idsName\": \"IDS_REGION\", \"dataField\": \"sregionname\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                    { \"idsName\": \"IDS_DISTRICT\", \"dataField\": \"sdistrictname\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                    { \"idsName\": \"IDS_PRIMAEYSERVER\", \"dataField\": \"sprimarysereverstatus\", \"width\": \"300px\", \"columnSize\": \"4\" }\r\n                );\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\r\n            detailedFieldList.push(\r\n                { \"idsName\": \"IDS_NEEDDISTRIBUTED\", \"dataField\": \"sdistributedstatus\", \"width\": \"250px\", \"columnSize\": \"4\" },\r\n                { \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                { \"idsName\": \"IDS_REGION\", \"dataField\": \"sregionname\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                { \"idsName\": \"IDS_DISTRICT\", \"dataField\": \"sdistrictname\", \"width\": \"300px\", \"columnSize\": \"4\" },\r\n                { \"idsName\": \"IDS_PRIMAEYSERVER\", \"dataField\": \"sprimarysereverstatus\", \"width\": \"300px\", \"columnSize\": \"4\" }\r\n            );\r\n        }\r\n       \r\n        let mandatoryFields = []\r\n        mandatoryFields.push(\r\n            { \"mandatory\": true, \"idsName\": \"IDS_SITENAME\", \"dataField\": \"ssitename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },)\r\n        if (this.props.Login.settings && parseInt(this.props.Login.settings['21']) === transactionStatus.YES) {\r\n            mandatoryFields.push(\r\n                { \"mandatory\": true, \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntimezonecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"mandatory\": true, \"idsName\": \"IDS_SITEDATE\", \"dataField\": \"ndateformatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            )\r\n        }\r\n        if (this.props.Login.settings && parseInt(this.props.Login.settings['23']) === transactionStatus.YES) {\r\n            mandatoryFields.push({ \"mandatory\": true, \"idsName\": \"IDS_SITECODE\", \"dataField\": \"ssitecode\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nsitecode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    methodUrl=\"Site\"\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    detailedFieldList={detailedFieldList}\r\n                                    expandField=\"expanded\"\r\n                                    fetchRecord={this.props.getSiteCombo}\r\n                                    editParam={editParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    deleteParam={deleteParam}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.getSiteCombo(addParam)}\r\n                                    hasDynamicColSize={true}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddSite\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                TimeZoneList={this.props.Login.TimeZoneList || []}\r\n                                dateFormatList={this.props.Login.dateFormatList || []}\r\n                                operation={this.props.Login.operation}\r\n                                regionList={this.props.Login.regionList}\r\n                                districtList={this.props.Login.districtList}\r\n                                NeedUTCConversation={parseInt(this.props.Login.settings[21])}\r\n                                siteAdditionalInfo={parseInt(this.props.Login.settings[23])}\r\n                            />}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                let { selectedRecord } = this.state;\r\n                const nisdistributed = this.props.Login.masterData.map(item => item.nisdistributed);\r\n                const nutcconversation = this.props.Login.masterData.map(item => item.nutcconversation);\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                    selectedRecord: { nisdistributed, nutcconversation }\r\n                });\r\n            }\r\n            else {\r\n                let { dataState, selectedRecord } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                const nisdistributed = this.props.Login.masterData.map(item => item.nisdistributed);\r\n                const nutcconversation = this.props.Login.masterData.map(item => item.nutcconversation);\r\n                this.setState({\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, dataState), dataState,\r\n                    selectedRecord: { nisdistributed, nutcconversation }\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            if (event.target.name === \"sphoneno\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value\r\n                }\r\n            }\r\n\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (comboData !== null) {\r\n            selectedRecord[fieldName] = comboData;\r\n            if (fieldName == \"nregioncode\") {\r\n                this.props.getDistrictByRegion({\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sdisplayname: selectedRecord.nregioncode.label,\r\n                        primarykey: selectedRecord.nregioncode.value\r\n                    }\r\n                })\r\n                selectedRecord[\"ndistrictcode\"] = \"\";\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else{\r\n            if (selectedRecord[\"nregioncode\"]) {\r\n                delete selectedRecord[\"nregioncode\"];\r\n                delete selectedRecord[\"ndistrictcode\"];\r\n              }\r\n\r\n              const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n              }\r\n              this.props.updateStore(updateInfo);\r\n        }\r\n\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        let inputData = [];\r\n        delete deleteParam.selectedRecord.expanded;\r\n        inputData[\"site\"]=deleteParam.selectedRecord;\r\n        \r\n        inputData[\"site\"][\"needutcconversation\"] =parseInt(this.props.Login.settings[21]) === transactionStatus.YES ? true : false;\r\n        inputData[ \"userinfo\"]= this.props.Login.userInfo\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: \"IDS_SITE\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit\r\n        const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\r\n        if (isValidateEmail) {\r\n            let dataState = undefined;\r\n            let operation = \"\";\r\n            let inputData = [];\r\n            let selectedId = null;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let postParam = {\r\n                selectedObject: \"selectedSite\",\r\n                primaryKeyField: \"nsitecode\",\r\n                inputListName: \"Site\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n            }\r\n            if (this.props.Login.operation === \"update\") {\r\n                selectedId = this.props.Login.selectedRecord.nsitecode;\r\n\r\n                inputData[\"site\"] = {\r\n                    \"nsitecode\": this.props.Login.selectedRecord.nsitecode,\r\n                    \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\r\n                    \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\r\n                    \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\r\n                    \"sphoneno\": this.state.selectedRecord.sphoneno,\r\n                    \"ssitename\": this.state.selectedRecord.ssitename,\r\n                    \"ssitecode\": this.state.selectedRecord.ssitecode !== undefined ? this.state.selectedRecord.ssitecode : \"NA\",\r\n                    \"sfaxno\": this.state.selectedRecord.sfaxno,\r\n                    \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\r\n                    \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\r\n                    \"ndateformatcode\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.value : \"-1\"\r\n                }\r\n                // if (this.state.selectedRecord.ndateformatcode.label !== undefined) {\r\n                inputData[\"sitedateformat\"] = {\r\n                    \"ssitereportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitereportdatetime,\r\n                    \"ssitereportdate\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\r\n                    \"ssitedate\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\r\n                    \"spgdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\r\n                    \"spgreportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\r\n                    \"ssitedatetime\": this.state.selectedRecord.ndateformatcode !== undefined && this.state.selectedRecord.ndateformatcode.label !== 'NA' ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitedatetime,\r\n                    \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== null ? this.state.selectedRecord.nisstandaloneserver : 4,\r\n                    \"nsitecode\": this.state.selectedRecord.nsitecode,\r\n                    \"nissyncserver\": this.state.selectedRecord.nissyncserver !== null ? this.state.selectedRecord.nissyncserver : 4,\r\n                    // \"nutcconversation\": this.state.selectedRecord.nutcconversation !== null ? this.state.selectedRecord.nutcconversation : 4\r\n                }\r\n                //    }\r\n\r\n                operation = \"update\";\r\n                dataState = this.state.dataState;\r\n                selectedId = this.props.Login.selectedId;\r\n            }\r\n            else {\r\n\r\n                inputData[\"site\"] = {\r\n                    \"nmastersitecode\": this.props.Login.userInfo.nmastersitecode,\r\n                    \"scontactperson\": this.state.selectedRecord.scontactperson !== null ? this.state.selectedRecord.scontactperson : \"\",\r\n                    \"ssiteaddress\": this.state.selectedRecord.ssiteaddress,\r\n                    \"sphoneno\": this.state.selectedRecord.sphoneno,\r\n                    \"ssitename\": this.state.selectedRecord.ssitename,\r\n                    \"ssitecode\": this.state.selectedRecord.ssitecode !== undefined ? this.state.selectedRecord.ssitecode : \"NA\",\r\n                    \"sfaxno\": this.state.selectedRecord.sfaxno,\r\n                    \"semail\": this.state.selectedRecord.semail !== null ? this.state.selectedRecord.semail : \"\",\r\n                    \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\r\n                    \"ndateformatcode\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.value : \"-1\",\r\n                    \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== undefined ? this.state.selectedRecord.nisstandaloneserver : 4,\r\n                    // \"nutcconversation\": this.state.selectedRecord.nutcconversation !== undefined ? this.state.selectedRecord.nutcconversation : 4\r\n\r\n                };\r\n                //  if (this.state.selectedRecord.ndateformatcode && this.state.selectedRecord.ndateformatcode.label !== undefined) {\r\n                inputData[\"sitedateformat\"] = {\r\n                    \"ssitereportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitereportdatetime,\r\n                    \"ssitereportdate\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\r\n                    \"ssitedate\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label : this.props.Login.userInfo.ssitereportdate,\r\n                    \"spgdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\r\n                    \"spgreportdatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH24:mi:ss' : this.props.Login.userInfo.spgsitedatetime,\r\n                    \"ssitedatetime\": this.state.selectedRecord.ndateformatcode !== undefined ? this.state.selectedRecord.ndateformatcode.label + ' HH:mm:ss' : this.props.Login.userInfo.ssitedatetime,\r\n                    \"nisstandaloneserver\": this.state.selectedRecord.nisstandaloneserver !== null ? this.state.selectedRecord.nisstandaloneserver : 4,\r\n                    \"needutcconversation\": parseInt(this.props.Login.settings[21]) === transactionStatus.YES ? true : false,\r\n                    \"nsitecode\": this.state.selectedRecord.nsitecode,\r\n                    \"nissyncserver\": this.state.selectedRecord.nissyncserver !== null ? this.state.selectedRecord.nissyncserver : 4,\r\n\r\n                }\r\n                // }\r\n\r\n\r\n                operation = \"create\";\r\n            }\r\n            inputData[\"site\"][\"ntimezonecode\"] = this.state.selectedRecord[\"ntimezonecode\"] ? this.state.selectedRecord[\"ntimezonecode\"].value : \"-1\";\r\n            inputData[\"site\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : transactionStatus.NA;\r\n            inputData[\"site\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : transactionStatus.NA;\r\n\r\n            const inputParam = {\r\n                classUrl: \"site\",\r\n                methodUrl: \"SiteScreen\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                postParam,\r\n                searchRef: this.searchRef,\r\n                operation: operation, saveType, formRef, dataState, selectedId,\r\n                selectedRecord:{...this.state.selectedRecord}\r\n\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n        }\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, getSiteCombo, updateStore, validateEsignCredential, getDistrictByRegion })(injectIntl(Site));"]},"metadata":{},"sourceType":"module"}