{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';import{viewAttachment}from'../../actions';import{connect}from'react-redux';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{updateStore}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ReleaseTestAttachment=/*#__PURE__*/function(_React$Component){_inherits(ReleaseTestAttachment,_React$Component);var _super=_createSuper(ReleaseTestAttachment);function ReleaseTestAttachment(props){var _this;_classCallCheck(this,ReleaseTestAttachment);_this=_super.call(this,props);_this.getSampleDetails=function(event,ncontrolCode,operation){var url=\"release/getActiveReleaseTestAttachmentById\";var masterData=_this.props.masterData;// let screenName = this.props.screenName;\nvar isInitialRender=true;if(_this.props.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.RELEASED){if(operation===\"update\"){var screenName=\"IDS_EDITRELEASETESTATTACHMENT\";rsapi.post(url,{\"ncoaparentcode\":event.editRow.ncoaparentcode,\"npreregno\":event.editRow.npreregno,\"ntransactionsamplecode\":event.editRow.ntransactionsamplecode,\"ntransactiontestcode\":event.editRow.ntransactiontestcode,\"nreleasetestattachmentcode\":event.editRow.nreleasetestattachmentcode,\"userinfo\":_this.props.userInfo}).then(function(response){var responseData=response.data;if(responseData.ntransactionstatus!==transactionStatus.RELEASED){var selectedReleaseTestAttachment=event.editRow;var nneedreport=responseData&&responseData.nneedreport?responseData.nneedreport:transactionStatus.NO;var sdescription=responseData&&responseData.sdescription?responseData.sdescription:\"\";var sheader=responseData&&responseData.sheader?responseData.sheader:\"\";var nsortorder=responseData&&responseData.nsortorder?responseData.nsortorder:\"\";var sfilename=event.editRow&&event.editRow.sfilename;var npreregno;var ntransactionsamplecode;var ntransactiontestcode;var sarno;var ssamplearno;var stestsynonym;masterData.RegistrationArno.map(function(item){if(item.value===responseData.npreregno){npreregno=item;sarno=item.label;}});masterData.RegistrationSampleArno.map(function(item){if(item.value===responseData.ntransactionsamplecode){ntransactionsamplecode=item;ssamplearno=item.label;}});masterData.RegistrationTest.map(function(item){if(item.value===responseData.ntransactiontestcode){ntransactiontestcode=item;stestsynonym=item.label;}});var selectedRecord=_objectSpread(_objectSpread({},_this.state.selectedRecord),{},{npreregno:npreregno,ntransactionsamplecode:ntransactionsamplecode,ntransactiontestcode:ntransactiontestcode,sfilename:sfilename,sarno:sarno,ssamplearno:ssamplearno,stestsynonym:stestsynonym,nneedreport:nneedreport,sdescription:sdescription,selectedReleaseTestAttachment:selectedReleaseTestAttachment,sheader:sheader,nsortorder:nsortorder});masterData[\"selectedRecord\"]=selectedRecord;var updateInfo={typeName:DEFAULT_RETURN,data:{isReleaseTestAttachment:false,isAddReleaseTestAttachment:true,masterData:masterData,operation:operation,selectedRecord:selectedRecord,screenName:screenName,ncontrolCode:ncontrolCode,isInitialRender:isInitialRender}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_RECORDALREADYRELEASED\"}));}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});}else{var _screenName=\"IDS_ADDRELEASETESTATTACHMENT\";var RegistrationArno=_this.props.masterData.RegistrationArno;var selectedRecord={RegistrationArno:RegistrationArno,ReleaseTestAttachmentDetails:_this.props.masterData.ReleaseTestAttachmentDetails,nneedreport:transactionStatus.NO};masterData[\"selectedRecord\"]=selectedRecord;var updateInfo={typeName:DEFAULT_RETURN,data:{isReleaseTestAttachment:false,isAddReleaseTestAttachment:true,masterData:masterData,operation:operation,selectedRecord:selectedRecord,screenName:_screenName,ncontrolCode:ncontrolCode,isInitialRender:isInitialRender}};_this.props.updateStore(updateInfo);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_RECORDALREADYRELEASED\"}));}};_this.deleteRecord=function(deleteParam){var url=\"release/deleteReleaseTestAttachment\";if(_this.props.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.RELEASED){var releasetestattachment={\"ncoaparentcode\":deleteParam.selectedRecord.ncoaparentcode,\"npreregno\":deleteParam.selectedRecord.npreregno,\"ntransactionsamplecode\":deleteParam.selectedRecord.ntransactionsamplecode,\"ntransactiontestcode\":deleteParam.selectedRecord.ntransactiontestcode,\"nreleasetestattachmentcode\":deleteParam.selectedRecord.nreleasetestattachmentcode};rsapi.post(url,{releasetestattachment:releasetestattachment,\"userinfo\":_this.props.userInfo}).then(function(response){var ReleaseTestAttachmentDetails=response.data.ReleaseTestAttachmentDetails;var selectedRecord=_objectSpread(_objectSpread({},_this.state.selectedRecord),response.data);var masterData=_this.props.masterData;masterData[\"ReleaseTestAttachmentDetails\"]=ReleaseTestAttachmentDetails;var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,ReleaseTestAttachmentDetails:ReleaseTestAttachmentDetails,masterData:masterData}};_this.props.updateStore(updateInfo);_this.setState({selectedRecord:selectedRecord,ReleaseTestAttachmentDetails:ReleaseTestAttachmentDetails});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_RECORDALREADYRELEASED\"}));}};_this.viewReleaseTestAttachmentFile=function(filedata){delete filedata.inputData.userinfo;var inputParam={inputData:{releasetestattachment:filedata.inputData,userinfo:_this.props.userInfo,ncontrolcode:filedata.ncontrolCode},classUrl:\"release\",operation:\"view\",methodUrl:\"ReleaseTestAttachment\"};_this.props.viewAttachment(inputParam);};var dataState={skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5};_this.state={loading:false,ReleaseTestAttachmentDetails:_this.props.ReleaseTestAttachmentDetails,dataState:dataState,openModal:false,inputParam:_this.props.inputParam,loadEsign:false,operation:_this.props.operation?_this.props.operation:\"\",selectedRecord:_this.props.selectedRecord,isneedReport:_this.props.isneedReport};return _this;}_createClass(ReleaseTestAttachment,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.ReleaseTestAttachmentDetails!==prevProps.ReleaseTestAttachmentDetails){this.setState({ReleaseTestAttachmentDetails:this.props.ReleaseTestAttachmentDetails});}if(this.props.inputParam!==prevProps.inputParam){this.setState({inputParam:this.props.inputParam});}if(this.props.selectedRecord!==prevProps.selectedRecord){this.setState({selectedRecord:this.props.selectedRecord});}if(this.props.operation!==prevProps.operation){this.setState({operation:this.props.operation});}}},{key:\"render\",value:function render(){var _this2=this;var addReleaseTestAttachment=this.props.controlMap.has(\"AddReleaseTestAttachment\")&&this.props.controlMap.get(\"AddReleaseTestAttachment\").ncontrolcode;var editReleaseTestAttachment=this.props.controlMap.has(\"EditReleaseTestAttachment\")&&this.props.controlMap.get(\"EditReleaseTestAttachment\").ncontrolcode;var editReleaseTestAttachmentParam={screenName:this.props.intl.formatMessage({id:\"IDS_RELEASETESTATTACHMENT\"}),operation:\"update\",primaryKeyField:\"nreleasetestattachmentcode\",inputParam:this.state.inputParam,userInfo:this.props.userInfo,ncontrolCode:editReleaseTestAttachment};this.fieldsForReleasedTestAttachmentGrid=[{\"idsName\":\"IDS_FILENAME\",\"dataField\":\"sfilename\",\"width\":\"200px\"},{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"},{\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"200px\"},{\"idsName\":\"IDS_TESTSYNONYM\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sformname\",\"width\":\"200px\"},{\"idsName\":\"IDS_HEADER\",\"dataField\":\"sheader\",\"width\":\"200px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},{\"idsName\":\"IDS_INCULDEINREPORT\",\"dataField\":\"sneedreport\",\"width\":\"200px\"},{\"idsName\":\"IDS_SORT\",\"dataField\":\"nsortorder\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLENAME\",\"dataField\":\"suserrolename\",\"width\":\"200px\"},{\"idsName\":\"IDS_CREATEDDATE\",\"dataField\":\"screateddate\",\"width\":\"200px\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nreleasetestattachmentcode\",data:this.state.ReleaseTestAttachmentDetails||[],dataResult:process(this.state.ReleaseTestAttachmentDetails&&this.state.ReleaseTestAttachmentDetails||[],this.props.dataState),dataState:this.props.dataState,isExportExcelRequired:false,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,userInfo:this.props.userInfo,editParam:editReleaseTestAttachmentParam,extractedColumnList:this.fieldsForReleasedTestAttachmentGrid,pageable:true,dataStateChange:this.props.dataStateChange,scrollable:'scrollable',gridHeight:'630px',isActionRequired:true,addRecord:function addRecord(event){return _this2.getSampleDetails(event,addReleaseTestAttachment,\"create\");},isToolBarRequired:true,methodUrl:'ReleaseTestAttachment',isAddRequired:this.props.isAddRequired,isRefreshRequired:this.props.isRefreshRequired,isImportRequired:this.props.isImportRequired,isDownloadPDFRequired:this.props.isDownloadPDFRequired,isDownloadExcelRequired:this.props.isDownloadExcelRequired,fetchRecord:function fetchRecord(event){_this2.getSampleDetails(event,editReleaseTestAttachment,\"update\");},deleteRecord:this.props.deleteRecord,viewDownloadFile:this.viewReleaseTestAttachmentFile}))));}}]);return ReleaseTestAttachment;}(React.Component);export default connect(mapStateToProps,{viewAttachment:viewAttachment,updateStore:updateStore})(injectIntl(ReleaseTestAttachment));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/ReleaseTestAttachment.jsx"],"names":["React","Col","Row","injectIntl","transactionStatus","viewAttachment","connect","DataGrid","process","rsapi","toast","updateStore","DEFAULT_RETURN","mapStateToProps","state","Login","ReleaseTestAttachment","props","getSampleDetails","event","ncontrolCode","operation","url","masterData","isInitialRender","selectedReleaseHistory","ntransactionstatus","RELEASED","screenName","post","editRow","ncoaparentcode","npreregno","ntransactionsamplecode","ntransactiontestcode","nreleasetestattachmentcode","userInfo","then","response","responseData","data","selectedReleaseTestAttachment","nneedreport","NO","sdescription","sheader","nsortorder","sfilename","sarno","ssamplearno","stestsynonym","RegistrationArno","map","item","value","label","RegistrationSampleArno","RegistrationTest","selectedRecord","updateInfo","typeName","isReleaseTestAttachment","isAddReleaseTestAttachment","warn","intl","formatMessage","id","catch","error","status","message","setState","loading","ReleaseTestAttachmentDetails","deleteRecord","deleteParam","releasetestattachment","viewReleaseTestAttachmentFile","filedata","inputData","userinfo","inputParam","ncontrolcode","classUrl","methodUrl","dataState","skip","take","settings","parseInt","openModal","loadEsign","isneedReport","prevProps","addReleaseTestAttachment","controlMap","has","get","editReleaseTestAttachment","editReleaseTestAttachmentParam","primaryKeyField","fieldsForReleasedTestAttachmentGrid","userRoleControlRights","dataStateChange","isAddRequired","isRefreshRequired","isImportRequired","isDownloadPDFRequired","isDownloadExcelRequired","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { viewAttachment } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { updateStore } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ReleaseTestAttachment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: this.props.operation ? this.props.operation : \"\",\r\n            selectedRecord: this.props.selectedRecord,\r\n            isneedReport: this.props.isneedReport\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.ReleaseTestAttachmentDetails !== prevProps.ReleaseTestAttachmentDetails) {\r\n            this.setState({ ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails })\r\n        }\r\n        if (this.props.inputParam !== prevProps.inputParam) {\r\n            this.setState({ inputParam: this.props.inputParam })\r\n        }\r\n        if (this.props.selectedRecord !== prevProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord })\r\n        }\r\n        if (this.props.operation !== prevProps.operation) {\r\n            this.setState({ operation: this.props.operation })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const addReleaseTestAttachment =\r\n            this.props.controlMap.has(\"AddReleaseTestAttachment\") &&\r\n            this.props.controlMap.get(\"AddReleaseTestAttachment\").ncontrolcode;\r\n\r\n        const editReleaseTestAttachment =\r\n            this.props.controlMap.has(\"EditReleaseTestAttachment\") &&\r\n            this.props.controlMap.get(\"EditReleaseTestAttachment\").ncontrolcode;\r\n\r\n        const editReleaseTestAttachmentParam = {\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" }),\r\n            operation: \"update\", primaryKeyField: \"nreleasetestattachmentcode\",\r\n            inputParam: this.state.inputParam,\r\n            userInfo: this.props.userInfo,\r\n            ncontrolCode: editReleaseTestAttachment\r\n        };\r\n\r\n        this.fieldsForReleasedTestAttachmentGrid =\r\n            [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sformname\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_INCULDEINREPORT\", \"dataField\": \"sneedreport\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SORT\", \"dataField\": \"nsortorder\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERROLENAME\", \"dataField\": \"suserrolename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_CREATEDDATE\", \"dataField\": \"screateddate\", \"width\": \"200px\" },\r\n\r\n            ]\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <DataGrid\r\n                            primaryKeyField=\"nreleasetestattachmentcode\"\r\n                            data={this.state.ReleaseTestAttachmentDetails || []}\r\n                            dataResult={process(this.state.ReleaseTestAttachmentDetails && this.state.ReleaseTestAttachmentDetails || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            isExportExcelRequired={false}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            userInfo={this.props.userInfo}\r\n                            editParam={editReleaseTestAttachmentParam}\r\n                            extractedColumnList={this.fieldsForReleasedTestAttachmentGrid}\r\n                            pageable={true}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                            isActionRequired={true}\r\n                            addRecord={(event) => this.getSampleDetails(event, addReleaseTestAttachment, \"create\")}\r\n                            isToolBarRequired={true}\r\n                            methodUrl={'ReleaseTestAttachment'}\r\n                            isAddRequired={this.props.isAddRequired}\r\n                            isRefreshRequired={this.props.isRefreshRequired}\r\n                            isImportRequired={this.props.isImportRequired}\r\n                            isDownloadPDFRequired={this.props.isDownloadPDFRequired}\r\n                            isDownloadExcelRequired={this.props.isDownloadExcelRequired}\r\n                            fetchRecord={(event) => { this.getSampleDetails(event, editReleaseTestAttachment, \"update\") }}\r\n                            deleteRecord={this.props.deleteRecord}\r\n                            viewDownloadFile={this.viewReleaseTestAttachmentFile}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    };\r\n\r\n    getSampleDetails = (event, ncontrolCode, operation) => {\r\n        const url = \"release/getActiveReleaseTestAttachmentById\";\r\n        let masterData = this.props.masterData;\r\n        // let screenName = this.props.screenName;\r\n        const isInitialRender = true;\r\n        if (this.props.masterData.selectedReleaseHistory.ntransactionstatus !== transactionStatus.RELEASED) {\r\n            if (operation === \"update\") {\r\n                let screenName = \"IDS_EDITRELEASETESTATTACHMENT\";\r\n                rsapi.post(url, {\r\n                    \"ncoaparentcode\": event.editRow.ncoaparentcode,\r\n                    \"npreregno\": event.editRow.npreregno,\r\n                    \"ntransactionsamplecode\": event.editRow.ntransactionsamplecode,\r\n                    \"ntransactiontestcode\": event.editRow.ntransactiontestcode,\r\n                    \"nreleasetestattachmentcode\": event.editRow.nreleasetestattachmentcode,\r\n                    \"userinfo\": this.props.userInfo\r\n                })\r\n                    .then(response => {\r\n                        let responseData = response.data;\r\n                        if (responseData.ntransactionstatus !== transactionStatus.RELEASED) {\r\n                            let selectedReleaseTestAttachment = event.editRow;\r\n                            let nneedreport = responseData && responseData.nneedreport ? responseData.nneedreport : transactionStatus.NO;\r\n                            let sdescription = responseData && responseData.sdescription ? responseData.sdescription : \"\";\r\n                            let sheader = responseData && responseData.sheader ? responseData.sheader : \"\";\r\n                            let nsortorder = responseData && responseData.nsortorder ? responseData.nsortorder : \"\";\r\n                            let sfilename = event.editRow && event.editRow.sfilename;\r\n                            let npreregno;\r\n                            let ntransactionsamplecode;\r\n                            let ntransactiontestcode;\r\n                            let sarno;\r\n                            let ssamplearno;\r\n                            let stestsynonym;\r\n                            masterData.RegistrationArno.map(item => {\r\n                                if (item.value === responseData.npreregno) {\r\n                                    npreregno = item;\r\n                                    sarno = item.label;\r\n                                }\r\n                            });\r\n                            masterData.RegistrationSampleArno.map(item => {\r\n                                if (item.value === responseData.ntransactionsamplecode) {\r\n                                    ntransactionsamplecode = item;\r\n                                    ssamplearno = item.label;\r\n                                }\r\n                            });\r\n                            masterData.RegistrationTest.map(item => {\r\n                                if (item.value === responseData.ntransactiontestcode) {\r\n                                    ntransactiontestcode = item;\r\n                                    stestsynonym = item.label;\r\n                                }\r\n                            });\r\n                            let selectedRecord = {\r\n                                ...this.state.selectedRecord, npreregno, ntransactionsamplecode, ntransactiontestcode, sfilename, sarno, ssamplearno, stestsynonym, nneedreport, sdescription, selectedReleaseTestAttachment\r\n                                ,sheader,nsortorder\r\n                            };\r\n                            masterData[\"selectedRecord\"] = selectedRecord;\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: { isReleaseTestAttachment: false, isAddReleaseTestAttachment: true, masterData, operation, selectedRecord, screenName, ncontrolCode, isInitialRender }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        } else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"IDS_RECORDALREADYRELEASED\" }));\r\n                        }\r\n                    }).catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                        this.setState({\r\n                            loading: false\r\n                        });\r\n                    });\r\n            } else {\r\n                let screenName = \"IDS_ADDRELEASETESTATTACHMENT\"\r\n                let RegistrationArno = this.props.masterData.RegistrationArno;\r\n                let selectedRecord = {\r\n                    RegistrationArno: RegistrationArno,\r\n                    ReleaseTestAttachmentDetails: this.props.masterData.ReleaseTestAttachmentDetails,\r\n                    nneedreport: transactionStatus.NO\r\n                };\r\n                masterData[\"selectedRecord\"] = selectedRecord;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { isReleaseTestAttachment: false, isAddReleaseTestAttachment: true, masterData, operation, selectedRecord, screenName, ncontrolCode, isInitialRender }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_RECORDALREADYRELEASED\" }));\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestAttachment\";\r\n        if (this.props.masterData.selectedReleaseHistory.ntransactionstatus !== transactionStatus.RELEASED) {\r\n            let releasetestattachment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\r\n            }\r\n            rsapi.post(url, {\r\n                releasetestattachment, \"userinfo\": this.props.userInfo\r\n            })\r\n                .then(response => {\r\n                    let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n                    let selectedRecord = {\r\n                        ...this.state.selectedRecord, ...response.data\r\n                    };\r\n                    let masterData = this.props.masterData;\r\n                    masterData[\"ReleaseTestAttachmentDetails\"] = ReleaseTestAttachmentDetails;\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { selectedRecord, ReleaseTestAttachmentDetails, masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                    this.setState({\r\n                        selectedRecord, ReleaseTestAttachmentDetails\r\n                    });\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                });\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_RECORDALREADYRELEASED\" }));\r\n        }\r\n    }\r\n\r\n    viewReleaseTestAttachmentFile = (filedata) => {\r\n        delete (filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasetestattachment: filedata.inputData,\r\n                userinfo: this.props.userInfo,\r\n                ncontrolcode: filedata.ncontrolCode\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleaseTestAttachment\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { viewAttachment, updateStore })(injectIntl(ReleaseTestAttachment));"]},"metadata":{},"sourceType":"module"}