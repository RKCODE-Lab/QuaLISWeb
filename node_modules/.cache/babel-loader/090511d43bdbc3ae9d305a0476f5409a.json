{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card}from'react-bootstrap';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,updateStore,validateEsignCredential,filterColumnData,selectedAlertView}from'../../actions';import{sortData}from'../../components/CommonScript';import{process}from'@progress/kendo-data-query';import ListMaster from'../../components/list-master/list-master.component';import DataGrid from'../../components/data-grid/data-grid.component';import{ProductList}from'../../pages/product/product.styled';import{Attachments}from'../../components/dropzone/dropzone.styles';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var AlertView=/*#__PURE__*/function(_React$Component){_inherits(AlertView,_React$Component);var _super=_createSuper(AlertView);function AlertView(props){var _this;_classCallCheck(this,AlertView);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.selectedAlertView,event.data),dataState:event.data});};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"alertview\",methodUrl:\"AlertView\",displayName:\"IDS_ALERTVIEW\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map(),sidebarview:false};_this.searchRef=React.createRef();return _this;}_createClass(AlertView,[{key:\"render\",value:function render(){var _this2=this;var filterParam={inputListName:\"AlertView\",selectedObject:\"selectedAlertView\",primaryKeyField:\"nsqlquerycode\",fetchUrl:\"alertview/getSelectedAlertView\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"ssqlqueryname\"]};var gridColumnList=[];if(this.props.Login.masterData&&this.props.Login.masterData.selectedAlertView!==undefined&&this.props.Login.masterData.selectedAlertView.length>0){Object.keys(this.props.Login.masterData.selectedAlertView[0]).forEach(function(key){gridColumnList.push({\"idsName\":_this2.props.intl.formatMessage({id:key}),\"dataField\":key,\"width\":\"200px\"//  \"isIdsField\":key.includes(\"STATUS\")\n});});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_ALERTVIEW\"}),masterData:this.props.Login.masterData||[],userInfo:this.props.Login.userInfo,masterList:sortData(this.props.Login.masterData.searchedData||this.props.Login.masterData.AlertView||[],'descending','nalertrightscode'),getMasterDetail:function getMasterDetail(_AlertView){return _this2.props.selectedAlertView(_AlertView,_this2.props.Login.userInfo,_this2.props.Login.masterData,_this2.state.dataState);},selectedMaster:this.props.Login.masterData.SelectedAlert,primaryKeyField:\"nsqlquerycode\",mainField:\"ssqlqueryname\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:false})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'8':\"10\"),className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn \",onClick:this.props.parentFunction},!this.props.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"}))),/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.sqlQueryName)),/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData.selectedAlertView&&this.props.Login.masterData.selectedAlertView.length>0?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nsqlquerycode\",data:this.props.Login.masterData.selectedAlertView,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:gridColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,pageable:true,scrollable:\"auto\",isComponent:false,isActionRequired:false,isToolBarRequired:false,selectedId:this.props.Login.selectedId,name:\"IDS_ALERTVIEW\"}):/*#__PURE__*/React.createElement(Attachments,{className:\"norecordtxt\"},this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})))))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var isStateChanged=false;var dataState=this.state.dataState;var dataResult=this.state.dataResult;if(this.props.Login.dataState&&this.props.Login.dataState!==previousProps.Login.dataState){dataState=this.props.Login.dataState;isStateChanged=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){dataResult=process(this.props.Login.masterData.selectedAlertView||[],dataState);isStateChanged=true;}if(isStateChanged){this.setState({dataResult:dataResult,dataState:dataState});}}}]);return AlertView;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,selectedAlertView:selectedAlertView,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData})(injectIntl(AlertView));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/dashboardtypes/AlertView.jsx"],"names":["React","Row","Col","Card","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","selectedAlertView","sortData","process","ListMaster","DataGrid","ProductList","Attachments","mapStateToProps","state","Login","AlertView","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataResult","masterData","data","dataState","reloadData","searchRef","current","value","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","formRef","createRef","extractedColumnList","skip","take","settings","parseInt","userRoleControlRights","controlMap","Map","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","searchFieldList","gridColumnList","undefined","length","Object","keys","forEach","key","push","intl","formatMessage","id","searchedData","SelectedAlert","parentFunction","sqlQueryName","selectedId","previousProps","isStateChanged","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    selectedAlertView\r\n} from '../../actions';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ProductList } from '../../pages/product/product.styled';\r\nimport { Attachments } from '../../components/dropzone/dropzone.styles';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass AlertView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            data: [],\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [], controlMap: new Map(),\r\n            sidebarview: false\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.selectedAlertView, event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        const filterParam = {\r\n            inputListName: \"AlertView\", selectedObject: \"selectedAlertView\", primaryKeyField: \"nsqlquerycode\",\r\n            fetchUrl: \"alertview/getSelectedAlertView\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssqlqueryname\"]\r\n        };\r\n\r\n        const gridColumnList = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedAlertView !== undefined\r\n             && this.props.Login.masterData.selectedAlertView.length > 0) \r\n        {\r\n            Object.keys(this.props.Login.masterData.selectedAlertView[0]).forEach(key => {\r\n                gridColumnList.push(\r\n                    {\r\n                     \"idsName\": this.props.intl.formatMessage({id: key}), \r\n                     \"dataField\": key, \r\n                     \"width\": \"200px\",\r\n                    //  \"isIdsField\":key.includes(\"STATUS\")\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                    <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                        <ListMaster\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_ALERTVIEW\" })}\r\n                                masterData={this.props.Login.masterData || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={sortData((this.props.Login.masterData.searchedData || this.props.Login.masterData.AlertView ) || [], 'descending', 'nalertrightscode')}\r\n                                getMasterDetail={(AlertView) => this.props.selectedAlertView(AlertView, this.props.Login.userInfo, this.props.Login.masterData, this.state.dataState)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedAlert}\r\n                                primaryKeyField=\"nsqlquerycode\"\r\n                                mainField=\"ssqlqueryname\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {/* {this.props.Login.masterData.AlertView && this.props.Login.masterData.AlertView.length > 0 && this.props.Login.masterData.selectedAlertView ? */}\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.sqlQueryName}</Card.Title>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n\r\n                                            {this.props.Login.masterData.selectedAlertView  && this.props.Login.masterData.selectedAlertView.length > 0 ?\r\n                                            <DataGrid primaryKeyField={\"nsqlquerycode\"}\r\n                                                data={this.props.Login.masterData.selectedAlertView}\r\n                                                dataResult={this.state.dataResult}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                extractedColumnList={gridColumnList}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={\"auto\"}\r\n                                                isComponent={false}\r\n                                                isActionRequired={false}\r\n                                                isToolBarRequired={false}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                name=\"IDS_ALERTVIEW\"\r\n                                            /> : \r\n                                            <Attachments className = \"norecordtxt\">\r\n                                                {this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})}\r\n                                            </Attachments>\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card> \r\n                                    {/* : \"\"} */}\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"alertview\",\r\n            methodUrl: \"AlertView\",\r\n            displayName: \"IDS_ALERTVIEW\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let isStateChanged =false;\r\n        let dataState = this.state.dataState;\r\n        let dataResult = this.state.dataResult;\r\n        if (this.props.Login.dataState && this.props.Login.dataState !== previousProps.Login.dataState) {\r\n            dataState = this.props.Login.dataState;\r\n            isStateChanged = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {   \r\n             dataResult =  process(this.props.Login.masterData.selectedAlertView || [], dataState);\r\n             isStateChanged = true;\r\n        }\r\n      \r\n        if (isStateChanged){\r\n            this.setState({dataResult,  dataState});\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, selectedAlertView, updateStore,\r\n        validateEsignCredential, filterColumnData\r\n    })(injectIntl(AlertView));"]},"metadata":{},"sourceType":"module"}