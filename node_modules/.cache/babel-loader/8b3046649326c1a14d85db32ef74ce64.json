{"ast":null,"code":"import React from'react';import{faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{injectIntl}from'react-intl';import{Row,Col,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ReadOnlyText}from'../../components/App.styles';import TestFormulaTab from'./TestFormulaTab';import TestSpecificationTab from'./TestSpecificationTab';import PredefinedParameterTab from'./PredefinedParameterTab';import{parameterType,transactionStatus}from'../../components/Enumeration';// import { Tooltip } from '@progress/kendo-react-tooltip';\n//import ReactTooltip from 'react-tooltip';\nvar ParameterTabAccordion=function ParameterTabAccordion(props){var dataFieldName=\"\";if(props.testParameter[\"nparametertypecode\"]===parameterType.NUMERIC){dataFieldName=[{\"sparametersynonym\":\"IDS_PARAMETERSYNONYM\"},{\"sdisplaystatus\":\"IDS_PARAMETERTYPE\"},{\"nroundingdigits\":\"IDS_ROUNDINGDIGITS\"},{\"sunitname\":\"IDS_UNIT\"},{\"sunitname1\":\"IDS_CONVERSIONUNIT\"},//ALPD-3521\n{\"soperator\":\"IDS_CONVERSIONOPERATOR\"},{\"nconversionfactor\":\"IDS_CONVERSIONFACTOR\"},{\"sresultaccuracyname\":\"IDS_RESULTACCURACY\"},{\"stransdisplaystatus\":\"IDS_DELTACHECK\"}];}else{dataFieldName=[{\"sparametersynonym\":\"IDS_PARAMETERSYNONYM\"},{\"sdisplaystatus\":\"IDS_PARAMETERTYPE\"}];}var editParameterId=props.controlMap.has(\"EditParameter\")&&props.controlMap.get(\"EditParameter\").ncontrolcode;var deleteParameterId=props.controlMap.has(\"DeleteParameter\")&&props.controlMap.get(\"DeleteParameter\").ncontrolcode;var testParameter=props.testParameter,selectedParameter=props.selectedParameter,userInfo=props.userInfo,testFormula=props.testFormula,testParameterNumeric=props.testParameterNumeric,testPredefinedParameter=props.testPredefinedParameter,SelectedTest=props.SelectedTest;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":props.intl.formatMessage({id:\"IDS_EDIT\"})// data-for=\"tooltip_list_wrap\"\n,hidden:props.userRoleControlRights.indexOf(editParameterId)===-1,onClick:function onClick(){return props.addParameter(\"update\",props.selectedParameter,props.userInfo,editParameterId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":props.intl.formatMessage({id:\"IDS_DELETE\"})//   data-for=\"tooltip_list_wrap\"\n,hidden:props.userRoleControlRights.indexOf(deleteParameterId)===-1,onClick:function onClick(){return props.ConfirmDelete(testParameter,\"delete\",deleteParameterId,\"TestParameter\",\"openChildModal\",\"openChildModal\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))),/*#__PURE__*/React.createElement(Row,null,dataFieldName.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:Object.values(item)[0]})),/*#__PURE__*/React.createElement(ReadOnlyText,null,selectedParameter[Object.keys(item)[0]])));})),selectedParameter.nparametertypecode===parameterType.NUMERIC&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TestFormulaTab,{primaykeyName:\"ntestformulacode\",formulaList:testFormula,selectedParameter:selectedParameter,userInfo:userInfo,methodUrl:\"TestFormula\",addId:props.controlMap.has(\"AddFormula\")&&props.controlMap.get(\"AddFormula\").ncontrolcode,addPreDefinedFormulaId:props.controlMap.has(\"AddPredefinedFormula\")&&props.controlMap.get(\"AddPredefinedFormula\").ncontrolcode,deleteId:props.controlMap.has(\"DeleteFormula\")&&props.controlMap.get(\"DeleteFormula\").ncontrolcode,defaultFormulaId:props.controlMap.has(\"DefaultTestFormula\")&&props.controlMap.get(\"DefaultTestFormula\").ncontrolcode,userRoleControlRights:props.userRoleControlRights,deleteAction:props.deleteAction,onSwitchChange:props.onSwitchChange,openModal:props.addFormula,openPredefinedModal:props.openPredefinedModal}),/*#__PURE__*/React.createElement(TestSpecificationTab,{parameterNumericList:testParameterNumeric,selectedParameter:selectedParameter,userInfo:userInfo,addId:SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"AddClinicalSpec\")&&props.controlMap.get(\"AddClinicalSpec\").ncontrolcode:props.controlMap.has(\"AddSpecification\")&&props.controlMap.get(\"AddSpecification\").ncontrolcode,editId:SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"EditClinicalSpec\")&&props.controlMap.get(\"EditClinicalSpec\").ncontrolcode:props.controlMap.has(\"EditSpecification\")&&props.controlMap.get(\"EditSpecification\").ncontrolcode,deleteId:SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"DeleteClinicalSpec\")&&props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode:props.controlMap.has(\"DeleteSpecification\")&&props.controlMap.get(\"DeleteSpecification\").ncontrolcode,userRoleControlRights:props.userRoleControlRights,deleteAction:props.deleteAction,onSwitchChange:props.onSwitchChange,openModal:props.addParameterSpecification,openModalSpec:props.addClinicalSpecification,grade:props.grade,SelectedTest:SelectedTest,hasDynamicColSize:true,controlMap:props.controlMap,TestMasterClinicalSpec:props.masterData.TestMasterClinicalSpec,data:props.masterData.TestMasterClinicalSpec,dataState:props.dataState,dataStateChange:props.dataStateChange,EditSpecDetails:props.EditSpecDetails,deleteRecord:props.deleteRecord})),selectedParameter.nparametertypecode===parameterType.PREDEFINED&&/*#__PURE__*/React.createElement(PredefinedParameterTab,{primaryKeyName:\"ntestpredefinedcode\",predefinedParameterList:testPredefinedParameter,selectedParameter:selectedParameter,userInfo:userInfo,methodUrl:\"TestPredefinedParameter\",addId:props.controlMap.has(\"AddCodedResult\")&&props.controlMap.get(\"AddCodedResult\").ncontrolcode,editId:props.controlMap.has(\"EditCodedResult\")&&props.controlMap.get(\"EditCodedResult\").ncontrolcode,deleteId:props.controlMap.has(\"DeleteCodedResult\")&&props.controlMap.get(\"DeleteCodedResult\").ncontrolcode,viewId:props.controlMap.has(\"ViewSubCodedResult\")&&props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode,userRoleControlRights:props.userRoleControlRights,deleteAction:props.deleteAction,onSwitchChange:props.onSwitchChange,openModal:props.addCodedResult,addSubCodedResult:props.addSubCodedResult}));};export default injectIntl(ParameterTabAccordion);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/ParameterTabAccordion.jsx"],"names":["React","faPencilAlt","faTrashAlt","injectIntl","Row","Col","Nav","FormGroup","FormLabel","FontAwesomeIcon","ReadOnlyText","TestFormulaTab","TestSpecificationTab","PredefinedParameterTab","parameterType","transactionStatus","ParameterTabAccordion","props","dataFieldName","testParameter","NUMERIC","editParameterId","controlMap","has","get","ncontrolcode","deleteParameterId","selectedParameter","userInfo","testFormula","testParameterNumeric","testPredefinedParameter","SelectedTest","intl","formatMessage","id","userRoleControlRights","indexOf","addParameter","ConfirmDelete","map","item","Object","values","keys","nparametertypecode","deleteAction","onSwitchChange","addFormula","openPredefinedModal","nclinicaltyperequired","YES","addParameterSpecification","addClinicalSpecification","grade","masterData","TestMasterClinicalSpec","dataState","dataStateChange","EditSpecDetails","deleteRecord","PREDEFINED","addCodedResult","addSubCodedResult"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,mCAAxC,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,CAAwBC,SAAxB,CAAmCC,SAAnC,KAAoD,iBAApD,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,YAAT,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,8BAAjD,CACA;AACA;AAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACrC,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,GAAID,KAAK,CAACE,aAAN,CAAoB,oBAApB,IAA8CL,aAAa,CAACM,OAAhE,CAAyE,CACrEF,aAAa,CAAG,CAAC,CAAE,oBAAqB,sBAAvB,CAAD,CAAkD,CAAE,iBAAkB,mBAApB,CAAlD,CAChB,CAAE,kBAAmB,oBAArB,CADgB,CAC6B,CAAE,YAAa,UAAf,CAD7B,CACyD,CAAC,aAAc,oBAAf,CADzD,CAEhB;AACN,CAAC,YAAY,wBAAb,CAHsB,CAIhB,CAAE,oBAAqB,sBAAvB,CAJgB,CAIgC,CAAC,sBAAsB,oBAAvB,CAJhC,CAKhB,CAAE,sBAAuB,gBAAzB,CALgB,CAAhB,CAMH,CAPD,IAOO,CACHA,aAAa,CAAG,CAAC,CAAE,oBAAqB,sBAAvB,CAAD,CAAkD,CAAE,iBAAkB,mBAApB,CAAlD,CAAhB,CACH,CACD,GAAMG,CAAAA,eAAe,CAAGJ,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,eAArB,GAAyCN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,eAArB,EAAsCC,YAAvG,CACA,GAAMC,CAAAA,iBAAiB,CAAGT,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,iBAArB,GAA2CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,iBAArB,EAAwCC,YAA7G,CACA,GAAQN,CAAAA,aAAR,CAAgIF,KAAhI,CAAQE,aAAR,CAAuBQ,iBAAvB,CAAgIV,KAAhI,CAAuBU,iBAAvB,CAA0CC,QAA1C,CAAgIX,KAAhI,CAA0CW,QAA1C,CAAoDC,WAApD,CAAgIZ,KAAhI,CAAoDY,WAApD,CAAiEC,oBAAjE,CAAgIb,KAAhI,CAAiEa,oBAAjE,CAAuFC,uBAAvF,CAAgId,KAAhI,CAAuFc,uBAAvF,CAA+GC,YAA/G,CAAgIf,KAAhI,CAA+Ge,YAA/G,CACA,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,SAAS,CAAC,4BAAvB,eAGI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,kCAApB,CACI,WAAUf,KAAK,CAACgB,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CACX;AAFH,CAGI,MAAM,CAAElB,KAAK,CAACmB,qBAAN,CAA4BC,OAA5B,CAAoChB,eAApC,IAAyD,CAAC,CAHtE,CAII,OAAO,CAAE,yBAAMJ,CAAAA,KAAK,CAACqB,YAAN,CAAmB,QAAnB,CAA6BrB,KAAK,CAACU,iBAAnC,CAAsDV,KAAK,CAACW,QAA5D,CAAsEP,eAAtE,CAAN,EAJb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAEpB,WAAvB,EALJ,CAHJ,cAUI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,oDAApB,CACI,WAAUgB,KAAK,CAACgB,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CACb;AAFD,CAGI,MAAM,CAAElB,KAAK,CAACmB,qBAAN,CAA4BC,OAA5B,CAAoCX,iBAApC,IAA2D,CAAC,CAHxE,CAII,OAAO,CAAE,yBAAMT,CAAAA,KAAK,CAACsB,aAAN,CAAoBpB,aAApB,CAAmC,QAAnC,CAA6CO,iBAA7C,CAAgE,eAAhE,CAAiF,gBAAjF,CAAmG,gBAAnG,CAAN,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAExB,UAAvB,EANJ,CAVJ,CADJ,CADJ,cAiCI,oBAAC,GAAD,MACKgB,aAAa,CAACsB,GAAd,CAAkB,SAAAC,IAAI,CAAI,CACvB,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,oBAAC,SAAD,mBACI,oBAAC,SAAD,MAAYxB,KAAK,CAACgB,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAEO,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAAN,CAAzB,CAAZ,CADJ,cAEI,oBAAC,YAAD,MAAed,iBAAiB,CAACe,MAAM,CAACE,IAAP,CAAYH,IAAZ,EAAkB,CAAlB,CAAD,CAAhC,CAFJ,CADJ,CADJ,CAQH,CATA,CADL,CAjCJ,CA8CKd,iBAAiB,CAACkB,kBAAlB,GAAyC/B,aAAa,CAACM,OAAvD,eACG,qDACI,oBAAC,cAAD,EACI,aAAa,CAAC,kBADlB,CAEI,WAAW,CAAES,WAFjB,CAGI,iBAAiB,CAAEF,iBAHvB,CAII,QAAQ,CAAEC,QAJd,CAKI,SAAS,CAAC,aALd,CAMI,KAAK,CAAEX,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,YAArB,GAAsCN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,YAArB,EAAmCC,YANpF,CAOI,sBAAsB,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,sBAArB,GAAgDN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,sBAArB,EAA6CC,YAPzH,CAQI,QAAQ,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,eAArB,GAAyCN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,eAArB,EAAsCC,YAR7F,CASI,gBAAgB,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,oBAArB,GAA8CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,oBAArB,EAA2CC,YAT/G,CAUI,qBAAqB,CAAER,KAAK,CAACmB,qBAVjC,CAWI,YAAY,CAAEnB,KAAK,CAAC6B,YAXxB,CAYI,cAAc,CAAE7B,KAAK,CAAC8B,cAZ1B,CAaI,SAAS,CAAE9B,KAAK,CAAC+B,UAbrB,CAcI,mBAAmB,CAAE/B,KAAK,CAACgC,mBAd/B,EADJ,cAiBK,oBAAC,oBAAD,EACG,oBAAoB,CAAEnB,oBADzB,CAEG,iBAAiB,CAAEH,iBAFtB,CAGG,QAAQ,CAAEC,QAHb,CAIG,KAAK,CAAEI,YAAY,CAACkB,qBAAb,GAAqCnC,iBAAiB,CAACoC,GAAvD,CAA2DlC,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,iBAArB,GAA2CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,iBAArB,EAAwCC,YAA9I,CAA2JR,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,kBAArB,GAA4CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,kBAArB,EAAyCC,YAJ1P,CAKG,MAAM,CAAEO,YAAY,CAACkB,qBAAb,GAAqCnC,iBAAiB,CAACoC,GAAvD,CAA2DlC,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,kBAArB,GAA4CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,kBAArB,EAAyCC,YAAhJ,CAA6JR,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,mBAArB,GAA6CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,mBAArB,EAA0CC,YAL/P,CAMG,QAAQ,CAAEO,YAAY,CAACkB,qBAAb,GAAqCnC,iBAAiB,CAACoC,GAAvD,CAA2DlC,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,oBAArB,GAA8CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,oBAArB,EAA2CC,YAApJ,CAAiKR,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,qBAArB,GAA+CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,qBAArB,EAA4CC,YANzQ,CAOG,qBAAqB,CAAER,KAAK,CAACmB,qBAPhC,CAQG,YAAY,CAAEnB,KAAK,CAAC6B,YARvB,CASG,cAAc,CAAE7B,KAAK,CAAC8B,cATzB,CAUG,SAAS,CAAE9B,KAAK,CAACmC,yBAVpB,CAWG,aAAa,CAAEnC,KAAK,CAACoC,wBAXxB,CAYG,KAAK,CAAEpC,KAAK,CAACqC,KAZhB,CAaG,YAAY,CAAEtB,YAbjB,CAcG,iBAAiB,CAAE,IAdtB,CAeG,UAAU,CAAEf,KAAK,CAACK,UAfrB,CAgBG,sBAAsB,CAAEL,KAAK,CAACsC,UAAN,CAAiBC,sBAhB5C,CAiBG,IAAI,CAAEvC,KAAK,CAACsC,UAAN,CAAiBC,sBAjB1B,CAkBG,SAAS,CAAEvC,KAAK,CAACwC,SAlBpB,CAmBE,eAAe,CAAExC,KAAK,CAACyC,eAnBzB,CAoBE,eAAe,CAAEzC,KAAK,CAAC0C,eApBzB,CAqBE,YAAY,CAAE1C,KAAK,CAAC2C,YArBtB,EAjBL,CA/CR,CA0FKjC,iBAAiB,CAACkB,kBAAlB,GAAyC/B,aAAa,CAAC+C,UAAvD,eACG,oBAAC,sBAAD,EACI,cAAc,CAAC,qBADnB,CAEI,uBAAuB,CAAE9B,uBAF7B,CAGI,iBAAiB,CAAEJ,iBAHvB,CAII,QAAQ,CAAEC,QAJd,CAKI,SAAS,CAAC,yBALd,CAMI,KAAK,CAAEX,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,gBAArB,GAA0CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,gBAArB,EAAuCC,YAN5F,CAOI,MAAM,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,iBAArB,GAA2CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,iBAArB,EAAwCC,YAP/F,CAQI,QAAQ,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,mBAArB,GAA6CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,mBAArB,EAA0CC,YARrG,CASI,MAAM,CAAER,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,oBAArB,GAA8CN,KAAK,CAACK,UAAN,CAAiBE,GAAjB,CAAqB,oBAArB,EAA2CC,YATrG,CAUI,qBAAqB,CAAER,KAAK,CAACmB,qBAVjC,CAWI,YAAY,CAAEnB,KAAK,CAAC6B,YAXxB,CAYI,cAAc,CAAE7B,KAAK,CAAC8B,cAZ1B,CAaI,SAAS,CAAE9B,KAAK,CAAC6C,cAbrB,CAcI,iBAAiB,CAAE7C,KAAK,CAAC8C,iBAd7B,EA3FR,CADJ,CA+GH,CA9HD,CAgIA,cAAe5D,CAAAA,UAAU,CAACa,qBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport TestFormulaTab from './TestFormulaTab';\r\nimport TestSpecificationTab from './TestSpecificationTab';\r\nimport PredefinedParameterTab from './PredefinedParameterTab';\r\nimport { parameterType, transactionStatus } from '../../components/Enumeration';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n//import ReactTooltip from 'react-tooltip';\r\n\r\nconst ParameterTabAccordion = (props) => {\r\n    let dataFieldName = \"\";\r\n    if (props.testParameter[\"nparametertypecode\"] === parameterType.NUMERIC) {\r\n        dataFieldName = [{ \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\" }, { \"sdisplaystatus\": \"IDS_PARAMETERTYPE\" },\r\n        { \"nroundingdigits\": \"IDS_ROUNDINGDIGITS\" }, { \"sunitname\": \"IDS_UNIT\" },{\"sunitname1\": \"IDS_CONVERSIONUNIT\"},\r\n        //ALPD-3521\r\n\t\t{\"soperator\":\"IDS_CONVERSIONOPERATOR\"},\r\n        { \"nconversionfactor\": \"IDS_CONVERSIONFACTOR\" },{\"sresultaccuracyname\":\"IDS_RESULTACCURACY\"},\r\n        { \"stransdisplaystatus\": \"IDS_DELTACHECK\" }];\r\n    } else {\r\n        dataFieldName = [{ \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\" }, { \"sdisplaystatus\": \"IDS_PARAMETERTYPE\" }];\r\n    }\r\n    const editParameterId = props.controlMap.has(\"EditParameter\") && props.controlMap.get(\"EditParameter\").ncontrolcode;\r\n    const deleteParameterId = props.controlMap.has(\"DeleteParameter\") && props.controlMap.get(\"DeleteParameter\").ncontrolcode;\r\n    const { testParameter, selectedParameter, userInfo, testFormula, testParameterNumeric, testPredefinedParameter,SelectedTest } = props;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12} className=\"d-flex justify-content-end\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                       // data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(editParameterId) === -1}\r\n                        onClick={() => props.addParameter(\"update\", props.selectedParameter, props.userInfo, editParameterId)}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                     //   data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(deleteParameterId) === -1}\r\n                        onClick={() => props.ConfirmDelete(testParameter, \"delete\", deleteParameterId, \"TestParameter\", \"openChildModal\", \"openChildModal\")}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                        {/* <ConfirmDialog\r\n                                name=\"deleteMessage\"\r\n                                message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                icon={faTrashAlt}\r\n                                // title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                hidden={props.userRoleControlRights && props.userRoleControlRights.indexOf(deleteParameterId) === -1}\r\n                                handleClickDelete={() => props.deleteAction(testParameter, \"delete\", deleteParameterId, \"TestParameter\", \"openChildModal\", \"openChildModal\")}\r\n                            /> */}\r\n                    </Nav.Link>\r\n                    {/* </Tooltip> */}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {dataFieldName.map(item => {\r\n                    return (\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                <ReadOnlyText>{selectedParameter[Object.keys(item)[0]]}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n\r\n            {selectedParameter.nparametertypecode === parameterType.NUMERIC &&\r\n                <>\r\n                    <TestFormulaTab\r\n                        primaykeyName=\"ntestformulacode\"\r\n                        formulaList={testFormula}\r\n                        selectedParameter={selectedParameter}\r\n                        userInfo={userInfo}\r\n                        methodUrl=\"TestFormula\"\r\n                        addId={props.controlMap.has(\"AddFormula\") && props.controlMap.get(\"AddFormula\").ncontrolcode}\r\n                        addPreDefinedFormulaId={props.controlMap.has(\"AddPredefinedFormula\") && props.controlMap.get(\"AddPredefinedFormula\").ncontrolcode}\r\n                        deleteId={props.controlMap.has(\"DeleteFormula\") && props.controlMap.get(\"DeleteFormula\").ncontrolcode}\r\n                        defaultFormulaId={props.controlMap.has(\"DefaultTestFormula\") && props.controlMap.get(\"DefaultTestFormula\").ncontrolcode}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        deleteAction={props.deleteAction}\r\n                        onSwitchChange={props.onSwitchChange}\r\n                        openModal={props.addFormula}\r\n                        openPredefinedModal={props.openPredefinedModal}\r\n                    />\r\n                     <TestSpecificationTab\r\n                        parameterNumericList={testParameterNumeric}\r\n                        selectedParameter={selectedParameter}\r\n                        userInfo={userInfo}\r\n                        addId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"AddClinicalSpec\") && props.controlMap.get(\"AddClinicalSpec\").ncontrolcode:props.controlMap.has(\"AddSpecification\") && props.controlMap.get(\"AddSpecification\").ncontrolcode}\r\n                        editId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"EditClinicalSpec\") && props.controlMap.get(\"EditClinicalSpec\").ncontrolcode:props.controlMap.has(\"EditSpecification\") && props.controlMap.get(\"EditSpecification\").ncontrolcode}\r\n                        deleteId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"DeleteClinicalSpec\") && props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode:props.controlMap.has(\"DeleteSpecification\") && props.controlMap.get(\"DeleteSpecification\").ncontrolcode}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        deleteAction={props.deleteAction}\r\n                        onSwitchChange={props.onSwitchChange}\r\n                        openModal={props.addParameterSpecification}\r\n                        openModalSpec={props.addClinicalSpecification}\r\n                        grade={props.grade}\r\n                        SelectedTest={SelectedTest}\r\n                        hasDynamicColSize={true}\r\n                        controlMap={props.controlMap}\r\n                        TestMasterClinicalSpec={props.masterData.TestMasterClinicalSpec}\r\n                        data={props.masterData.TestMasterClinicalSpec}\r\n                        dataState={props.dataState}\r\n                       dataStateChange={props.dataStateChange}\r\n                       EditSpecDetails={props.EditSpecDetails}\r\n                       deleteRecord={props.deleteRecord}\r\n                       \r\n                    /> \r\n                </>\r\n            }\r\n            {selectedParameter.nparametertypecode === parameterType.PREDEFINED &&\r\n                <PredefinedParameterTab\r\n                    primaryKeyName=\"ntestpredefinedcode\"\r\n                    predefinedParameterList={testPredefinedParameter}\r\n                    selectedParameter={selectedParameter}\r\n                    userInfo={userInfo}\r\n                    methodUrl=\"TestPredefinedParameter\"\r\n                    addId={props.controlMap.has(\"AddCodedResult\") && props.controlMap.get(\"AddCodedResult\").ncontrolcode}\r\n                    editId={props.controlMap.has(\"EditCodedResult\") && props.controlMap.get(\"EditCodedResult\").ncontrolcode}\r\n                    deleteId={props.controlMap.has(\"DeleteCodedResult\") && props.controlMap.get(\"DeleteCodedResult\").ncontrolcode}\r\n                    viewId={props.controlMap.has(\"ViewSubCodedResult\") && props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    deleteAction={props.deleteAction}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    openModal={props.addCodedResult}\r\n                    addSubCodedResult={props.addSubCodedResult}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ParameterTabAccordion);"]},"metadata":{},"sourceType":"module"}