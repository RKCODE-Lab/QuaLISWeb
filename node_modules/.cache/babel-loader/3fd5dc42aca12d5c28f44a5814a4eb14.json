{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\ExternalOrder.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst ExternalOrder = props => {\n  function onOrderSearchEvent(event) {\n    if (event.keyCode === 13) {\n      const inputValue = event.target.value;\n\n      if (inputValue !== \"\") {\n        props.onOrderSearch(inputValue);\n      }\n    }\n  }\n\n  const extractedColumnList = [];\n  extractedColumnList.push({\n    \"idsName\": \"IDS_ORDERNO\",\n    \"dataField\": \"sexternalorderid\",\n    \"width\": \"155px\"\n  });\n  extractedColumnList.push({\n    \"idsName\": \"IDS_ORDERSAMPLENO\",\n    \"dataField\": \"sexternalsampleid\",\n    \"width\": \"155px\"\n  });\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ORDER\"\n    }),\n    name: \"sexternalorderid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ORDER\"\n    }),\n    value: props.selectedRecord[\"sexternalorderid\"] ? props.selectedRecord[\"sexternalorderid\"] : \"\",\n    onKeyUp: onOrderSearchEvent,\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n    data: props.orders,\n    selectAll: props.addSelectAll || false,\n    title: props.intl.formatMessage({\n      id: \"IDS_SELECTTOADD\"\n    }),\n    selectionChange: props.selectionChange,\n    headerSelectionChange: props.headerSelectionChange,\n    extractedColumnList: extractedColumnList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(ExternalOrder);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/ExternalOrder.jsx"],"names":["React","Component","Col","Row","injectIntl","DataGridWithSelection","FormInput","ExternalOrder","props","onOrderSearchEvent","event","keyCode","inputValue","target","value","onOrderSearch","extractedColumnList","push","intl","formatMessage","id","onInputOnChange","selectedRecord","orders","addSelectAll","selectionChange","headerSelectionChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,SAAP,MAAsB,kDAAtB;;AAKA,MAAMC,aAAa,GAAIC,KAAD,IAAS;AAE3B,WAASC,kBAAT,CAA6BC,KAA7B,EAAmC;AAC/B,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtB,YAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAhC;;AACA,UAAIF,UAAU,KAAK,EAAnB,EAAuB;AACnBJ,QAAAA,KAAK,CAACO,aAAN,CAAoBH,UAApB;AACH;AACJ;AACJ;;AAEe,QAAMI,mBAAmB,GAAG,EAA5B;AACQA,EAAAA,mBAAmB,CAACC,IAApB,CAAyB;AAAC,eAAU,aAAX;AAAyB,iBAAY,kBAArC;AAAyD,aAAS;AAAlE,GAAzB;AACAD,EAAAA,mBAAmB,CAACC,IAApB,CAAyB;AAAC,eAAU,mBAAX;AAA+B,iBAAY,mBAA3C;AAAgE,aAAS;AAAzE,GAAzB;AACR,sBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,SAAD;AACI,IAAA,KAAK,EAAET,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,kBAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGV,KAAD,IAAWF,KAAK,CAACa,eAAN,CAAsBX,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEF,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEZ,KAAK,CAACc,cAAN,CAAqB,kBAArB,IAA2Cd,KAAK,CAACc,cAAN,CAAqB,kBAArB,CAA3C,GAAsF,EANjG;AAOI,IAAA,OAAO,EAAEb,kBAPb;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAE,KATd;AAUI,IAAA,SAAS,EAAE,GAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADH,eAgBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,qBAAD;AACQ,IAAA,IAAI,EAAED,KAAK,CAACe,MADpB;AAEQ,IAAA,SAAS,EAAEf,KAAK,CAACgB,YAAN,IAAqB,KAFxC;AAGQ,IAAA,KAAK,EAAEhB,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAACC,MAAAA,EAAE,EAAC;AAAJ,KAAzB,CAHf;AAIQ,IAAA,eAAe,EAAEZ,KAAK,CAACiB,eAJ/B;AAKQ,IAAA,qBAAqB,EAAEjB,KAAK,CAACkB,qBALrC;AAMQ,IAAA,mBAAmB,EAAEV,mBAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAhBJ,CADA;AA6BP,CA3Cb;;AA8CA,eAAgBZ,UAAU,CAACG,aAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\n\r\n\r\n\r\nconst ExternalOrder = (props)=>{\r\n\r\n    function onOrderSearchEvent (event){\r\n        if (event.keyCode === 13) {\r\n            const inputValue = event.target.value;\r\n            if (inputValue !== \"\") {\r\n                props.onOrderSearch(inputValue);\r\n            }\r\n        }\r\n    }\r\n   \r\n                    const extractedColumnList = [];\r\n                            extractedColumnList.push({\"idsName\":\"IDS_ORDERNO\",\"dataField\":\"sexternalorderid\", \"width\": \"155px\"} );\r\n                            extractedColumnList.push({\"idsName\":\"IDS_ORDERSAMPLENO\",\"dataField\":\"sexternalsampleid\", \"width\": \"155px\"});\r\n                    return (\r\n                    <Row>\r\n                       <Col md={12}>  \r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_ORDER\" })}\r\n                        name= \"sexternalorderid\"\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_ORDER\" })}\r\n                        value={props.selectedRecord[\"sexternalorderid\"] ? props.selectedRecord[\"sexternalorderid\"] : \"\"}\r\n                        onKeyUp={onOrderSearchEvent}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={100}\r\n                    />   \r\n                        </Col>\r\n\r\n                        <Col>                     \r\n                        <DataGridWithSelection                               \r\n                                data={props.orders} \r\n                                selectAll={props.addSelectAll|| false}\r\n                                title={props.intl.formatMessage({id:\"IDS_SELECTTOADD\"})}\r\n                                selectionChange={props.selectionChange}\r\n                                headerSelectionChange={props.headerSelectionChange}\r\n                                extractedColumnList={extractedColumnList}                            \r\n                        /> \r\n                </Col>\r\n                    </Row>\r\n                    );\r\n            }\r\n            \r\n    \r\nexport default  injectIntl(ExternalOrder);"]},"metadata":{},"sourceType":"module"}