{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\confirm-alert\\\\confirm-alert.component.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Card, Button } from 'react-bootstrap';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CustomAlert, CustomAlertFooter } from '../confirm-alert/confirm-alert-styles';\nimport { FontIconWrap } from '../data-grid/data-grid.styles';\n\nclass ConfirmDialog extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.confirm = _ref => {\n      let {\n        name,\n        title,\n        cardTitle,\n        message,\n        doLabel,\n        doNotLabel,\n        handleClickDelete\n      } = _ref;\n      confirmAlert({\n        customUI: _ref2 => {\n          let {\n            onClose\n          } = _ref2;\n          return /*#__PURE__*/React.createElement(CustomAlert, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Card.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Card.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }\n          }, cardTitle ? cardTitle : this.props.intl.formatMessage({\n            id: \"IDS_CONFIRMATION\"\n          })), /*#__PURE__*/React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }\n          }, message)), /*#__PURE__*/React.createElement(CustomAlertFooter, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"btn-user btn-cancel\",\n            variant: \"\",\n            onClick: onClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }\n          }, doNotLabel), /*#__PURE__*/React.createElement(Button, {\n            className: \"btn-user btn-primary-blue\",\n            onClick: () => {\n              handleClickDelete();\n              onClose();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }\n          }, doLabel))));\n        },\n        closeOnClickOutside: false,\n        closeOnEscape: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      icon,\n      title,\n      hidden,\n      size,\n      dataforprops\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // <FontAwesomeIcon icon={icon} size={size}\n      //   data-for={ dataforprops}\n      //   data-tip={title}\n      //   data-place=\"left\"\n      //   hidden={hidden}\n      //   onClick={() => this.confirm(this.props)}\n      // />\n      React.createElement(FontIconWrap, {\n        \"data-tip\": title,\n        \"data-for\": dataforprops,\n        \"data-place\": \"left\",\n        hidden: hidden,\n        onClick: () => this.confirm(this.props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}\n\nexport default injectIntl(ConfirmDialog);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/confirm-alert/confirm-alert.component.jsx"],"names":["React","injectIntl","Card","Button","confirmAlert","FontAwesomeIcon","CustomAlert","CustomAlertFooter","FontIconWrap","ConfirmDialog","Component","confirm","name","title","cardTitle","message","doLabel","doNotLabel","handleClickDelete","customUI","onClose","props","intl","formatMessage","id","closeOnClickOutside","closeOnEscape","render","icon","hidden","size","dataforprops"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,iDAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,uCAA/C;AACA,SAASC,YAAT,QAA6B,+BAA7B;;AAEA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAE1CC,OAF0C,GAEhC,QAQJ;AAAA,UARK;AACTC,QAAAA,IADS;AAETC,QAAAA,KAFS;AAGTC,QAAAA,SAHS;AAITC,QAAAA,OAJS;AAKTC,QAAAA,OALS;AAMTC,QAAAA,UANS;AAOTC,QAAAA;AAPS,OAQL;AACJd,MAAAA,YAAY,CAAC;AACXe,QAAAA,QAAQ,EAAE,SAAiB;AAAA,cAAhB;AAAEC,YAAAA;AAAF,WAAgB;AACzB,8BACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaN,SAAS,GAAGA,SAAH,GAAe,KAAKO,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAArC,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGT,OADH,CAFF,CADF,eAOE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,OAAO,EAAC,EAAhD;AAAmD,YAAA,OAAO,EAAEK,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsEH,UAAtE,CADF,eAEE,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,2BAAlB;AAA8C,YAAA,OAAO,EAAE,MAAM;AAC3DC,cAAAA,iBAAiB;AACjBE,cAAAA,OAAO;AACR,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGIJ,OAHJ,CAFF,CAPF,CADF,CADF;AAmBD,SArBU;AAqBRS,QAAAA,mBAAmB,EAAE,KArBb;AAqBoBC,QAAAA,aAAa,EAAE;AArBnC,OAAD,CAAZ;AAuBD,KAlCyC;AAAA;;AAoC1CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQf,MAAAA,KAAR;AAAegB,MAAAA,MAAf;AAAuBC,MAAAA,IAAvB;AAA6BC,MAAAA;AAA7B,QAA8C,KAAKV,KAAzD;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAC,YAAD;AACE,oBAAUR,KADZ;AAEE,oBAAWkB,YAFb;AAGE,sBAAW,MAHb;AAIE,QAAA,MAAM,EAAEF,MAJV;AAKE,QAAA,OAAO,EAAE,MAAM,KAAKlB,OAAL,CAAa,KAAKU,KAAlB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEO,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF;AARF;AAkBD;;AAzDyC;;AA2D5C,eAAe3B,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CustomAlert, CustomAlertFooter } from '../confirm-alert/confirm-alert-styles';\r\nimport { FontIconWrap } from '../data-grid/data-grid.styles';\r\n\r\nclass ConfirmDialog extends React.Component {\r\n\r\n  confirm = ({\r\n    name,\r\n    title,\r\n    cardTitle,\r\n    message,\r\n    doLabel,\r\n    doNotLabel,\r\n    handleClickDelete,\r\n  }) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <CustomAlert>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{cardTitle ? cardTitle : this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" })}</Card.Title>\r\n                <Card.Text>\r\n                  {message}\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <CustomAlertFooter>\r\n                <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={onClose}>{doNotLabel}</Button>\r\n                <Button className=\"btn-user btn-primary-blue\" onClick={() => {\r\n                  handleClickDelete();\r\n                  onClose();\r\n                }}>{doLabel}</Button>\r\n              </CustomAlertFooter>\r\n            </Card>\r\n          </CustomAlert>\r\n        );\r\n      }, closeOnClickOutside: false, closeOnEscape: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { icon, title, hidden, size, dataforprops } = this.props;\r\n\r\n    return (\r\n      // <FontAwesomeIcon icon={icon} size={size}\r\n      //   data-for={ dataforprops}\r\n      //   data-tip={title}\r\n      //   data-place=\"left\"\r\n      //   hidden={hidden}\r\n      //   onClick={() => this.confirm(this.props)}\r\n      // />\r\n      <FontIconWrap  \r\n        data-tip={title}\r\n        data-for={ dataforprops}\r\n        data-place=\"left\"\r\n        hidden={hidden}\r\n        onClick={() => this.confirm(this.props)}\r\n      >\r\n        <FontAwesomeIcon icon={icon} />\r\n      </FontIconWrap>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(ConfirmDialog);"]},"metadata":{},"sourceType":"module"}