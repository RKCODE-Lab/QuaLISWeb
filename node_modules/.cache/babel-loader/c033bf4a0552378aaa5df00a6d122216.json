{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\testapproval\\\\SampleCertificationFilter.js\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass SampleCertificationFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showMoreToggle = () => {\n      this.setState({\n        showMore: !this.state.showMore\n      });\n    };\n\n    this.state = {\n      showMore: false\n    };\n  }\n\n  render() {\n    console.log(\"response\", this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side_more_filter_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.FromDate,\n      dateFormat: this.props.userInfo[\"ssitedate\"],\n      isClearable: false,\n      onChange: date => this.props.handleDateChange(\"fromDate\", date),\n      value: this.props.FromDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"todate\",\n      label: this.props.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.ToDate,\n      dateFormat: this.props.userInfo[\"ssitedate\"],\n      isClearable: false,\n      onChange: date => this.props.handleDateChange(\"toDate\", date),\n      value: this.props.ToDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      isSearchable: true,\n      name: \"nsampletypecode\",\n      isDisabled: false,\n      placeholder: this.props.formatMessage({\n        id: \"IDS_PLEASESELECT\"\n      }),\n      isMandatory: true,\n      options: this.props.SampleType,\n      optionId: \"nsampletypecode\",\n      optionValue: \"ssampletypename\",\n      value: this.props.SampleTypeValue ? this.props.SampleTypeValue.nsampletypecode : \"\" //value={props.SampleTypeValue ? { \"label\": props.SampleTypeValue.ssampletypename, \"value\": props.SampleTypeValue.nsampletypecode } : \"\"}\n      ,\n      showOption: true,\n      sortField: \"nsorter\",\n      sortOrder: \"ascending\" //onChange={(event) => this.props.onSampleTypeChange(event, 'nsampletypecode', 'SampleTypeValue')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      isSearchable: true,\n      name: \"nregtypecode\",\n      isDisabled: false,\n      placeholder: this.props.formatMessage({\n        id: \"IDS_PLEASESELECT\"\n      }),\n      isMandatory: true,\n      options: this.props.RegistrationType,\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\" // value = { props.RegTypeValue[\"nregtypecode\"] }\n      ,\n      value: this.props.RegTypeValue ? this.props.RegTypeValue.nregtypecode : \"\",\n      showOption: true //sortField=\"nsorter\"\n      //sortOrder=\"ascending\"\n      // onChange={(event) => props.onRegTypeChange(event, 'nregtypecode', 'RegTypeValue')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      isSearchable: true,\n      name: \"nregsubtypecode\",\n      isDisabled: false,\n      placeholder: this.props.formatMessage({\n        id: \"IDS_PLEASESELECT\"\n      }),\n      isMandatory: true,\n      options: this.props.RegistrationSubType,\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\",\n      value: this.props.regSubTypeValue ? this.props.regSubTypeValue.nregsubtypecode : \"\",\n      showOption: true,\n      sortField: \"nsorter\",\n      sortOrder: \"ascending\",\n      onChange: event => this.props.onRegSubTypeChange(event, 'nregsubtypecode', 'RegSubTypeValue'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_FILTERSTATUS\"\n      }),\n      isSearchable: true,\n      name: \"ntransactionstatus\",\n      isDisabled: false,\n      placeholder: this.props.formatMessage({\n        id: \"IDS_PLEASESELECT\"\n      }),\n      isMandatory: true,\n      options: this.props.FilterStatus,\n      optionId: \"ntransactionstatus\",\n      optionValue: \"stransdisplaystatus\",\n      value: this.props.FilterStatusValue ? this.props.FilterStatusValue.ntransactionstatus : \"\" // value={props.FilterStatusValue ? { \"label\": props.FilterStatusValue.stransdisplaystatus, \"value\": props.FilterStatusValue.napprovalstatuscode } : \"\"}\n      ,\n      showOption: true,\n      sortField: \"stransdisplaystatus\",\n      sortOrder: \"ascending\",\n      onChange: event => this.props.onFilterChange(event, 'ntransactionstatus'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }))), !this.state.showMore ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_open\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 109\n      }\n    }), \" \") : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: `side_more_filter ${this.state.showMore ? 'active' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_close\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 39\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 108\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      name: \"napproveconfversioncode\",\n      optionId: \"napprovalconfigversioncode\",\n      optionValue: \"sversionname\",\n      className: \"form-control\",\n      options: this.props.ApprovalVersion //   value={this.props.ApprovalVersionValue? { \"label\": this.props.ApprovalVersionValue.sversionname, \n      //   \"value\": this.props.ApprovalVersionValue.napproveconfversioncode } : \"\"}\n      ,\n      value: this.props.ApprovalVersionValue ? this.props.ApprovalVersionValue : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"napproveconfversioncode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 47\n      }\n    })))));\n  }\n\n}\n\nexport default injectIntl(SampleCertificationFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/testapproval/SampleCertificationFilter.js"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","SampleCertificationFilter","Component","constructor","props","showMoreToggle","setState","showMore","state","render","console","log","formatMessage","id","FromDate","userInfo","date","handleDateChange","ToDate","SampleType","SampleTypeValue","nsampletypecode","RegistrationType","RegTypeValue","nregtypecode","RegistrationSubType","regSubTypeValue","nregsubtypecode","event","onRegSubTypeChange","FilterStatus","FilterStatusValue","ntransactionstatus","onFilterChange","intl","ApprovalVersion","ApprovalVersionValue","onFilterComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,kBAAT,EAA8BC,OAA9B,QAA6C,mCAA7C;;AAGA,MAAMC,yBAAN,SAAwCT,KAAK,CAACU,SAA9C,CAAuD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,cANmB,GAMH,MAAK;AACjB,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAG,CAAC,KAAKC,KAAL,CAAWD;AADb,OAAd;AAIH,KAXkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAC;AADA,KAAb;AAGH;;AAODE,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKP,KAA5B;AACE,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACI,MAAA,IAAI,EAAE,UADV;AAEI,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAFX;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,eAAe,EAAC,eAJpB;AAKI,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,QALzB;AAMI,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,QAAX,CAAoB,WAApB,CANhB;AAOI,MAAA,WAAW,EAAE,KAPjB;AAQI,MAAA,QAAQ,EAAEC,IAAI,IAAI,KAAKZ,KAAL,CAAWa,gBAAX,CAA4B,UAA5B,EAAwCD,IAAxC,CARtB;AASI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWU,QATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADI,eAeJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAFX;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,eAAe,EAAC,eAJpB;AAKI,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWc,MALzB;AAMI,MAAA,UAAU,EAAE,KAAKd,KAAL,CAAWW,QAAX,CAAoB,WAApB,CANhB;AAOI,MAAA,WAAW,EAAE,KAPjB;AAQI,MAAA,QAAQ,EAAEC,IAAI,IAAI,KAAKZ,KAAL,CAAWa,gBAAX,CAA4B,QAA5B,EAAsCD,IAAtC,CARtB;AASI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWc,MATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfI,eA6BJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,iBAHV;AAII,MAAA,UAAU,EAAE,KAJhB;AAKI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWe,UAPxB;AAQI,MAAA,QAAQ,EAAC,iBARb;AASI,MAAA,WAAW,EAAC,iBAThB;AAUI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWgB,eAAX,GAA6B,KAAKhB,KAAL,CAAWgB,eAAX,CAA2BC,eAAxD,GAA0E,EAVrF,CAWI;AAXJ;AAYI,MAAA,UAAU,EAAE,IAZhB;AAaI,MAAA,SAAS,EAAC,SAbd;AAcI,MAAA,SAAS,EAAC,WAdd,CAeI;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA7BI,eAiDJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,cAHV;AAII,MAAA,UAAU,EAAE,KAJhB;AAKI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWkB,gBAPxB;AAQI,MAAA,QAAQ,EAAC,cARb;AASI,MAAA,WAAW,EAAC,cAThB,CAUI;AAVJ;AAWI,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWmB,YAAX,GAA0B,KAAKnB,KAAL,CAAWmB,YAAX,CAAwBC,YAAlD,GAAiE,EAX5E;AAYI,MAAA,UAAU,EAAE,IAZhB,CAaI;AACA;AACD;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjDI,eAqEJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,iBAHV;AAII,MAAA,UAAU,EAAE,KAJhB;AAKI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWqB,mBAPxB;AAQI,MAAA,QAAQ,EAAC,iBARb;AASI,MAAA,WAAW,EAAC,iBAThB;AAUI,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB,eAAX,GAA6B,KAAKtB,KAAL,CAAWsB,eAAX,CAA2BC,eAAxD,GAA0E,EAVrF;AAWI,MAAA,UAAU,EAAE,IAXhB;AAYI,MAAA,SAAS,EAAC,SAZd;AAaI,MAAA,SAAS,EAAC,WAbd;AAcI,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKxB,KAAL,CAAWyB,kBAAX,CAA8BD,KAA9B,EAAqC,iBAArC,EAAwD,iBAAxD,CAdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArEI,eAwFJ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,oBAHV;AAII,MAAA,UAAU,EAAE,KAJhB;AAKI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWQ,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAW0B,YAPxB;AAQI,MAAA,QAAQ,EAAC,oBARb;AASI,MAAA,WAAW,EAAC,qBAThB;AAUI,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAW2B,iBAAX,GAA+B,KAAK3B,KAAL,CAAW2B,iBAAX,CAA6BC,kBAA5D,GAAiF,EAV5F,CAWG;AAXH;AAYI,MAAA,UAAU,EAAE,IAZhB;AAaI,MAAA,SAAS,EAAC,qBAbd;AAcI,MAAA,SAAS,EAAC,WAdd;AAeI,MAAA,QAAQ,EAAGJ,KAAD,IAAW,KAAKxB,KAAL,CAAW6B,cAAX,CAA0BL,KAA1B,EAAiC,oBAAjC,CAfzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxFI,CADJ,EA8GK,CAAC,KAAKpB,KAAL,CAAWD,QAAZ,gBAAuB;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,KAAKF,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEN,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApE,MAAvB,GAAqJ,EA9G1J,eA+GW;AAAK,MAAA,SAAS,EAAG,oBAAmB,KAAKS,KAAL,CAAWD,QAAX,GAAsB,QAAtB,GAAiC,EAAG,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,KAAKF,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEL,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArE,MADf,eAEe,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKI,KAAL,CAAW8B,IAAX,CAAgBtB,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CADf;AAEI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAW8B,IAAX,CAAgBtB,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAFjB;AAGI,MAAA,IAAI,EAAC,yBAHT;AAII,MAAA,QAAQ,EAAC,4BAJb;AAKI,MAAA,WAAW,EAAC,cALhB;AAMI,MAAA,SAAS,EAAC,cANd;AAOI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAW+B,eAPxB,CAQE;AACA;AATF;AAUI,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgC,oBAAX,GAAkC,KAAKhC,KAAL,CAAWgC,oBAA7C,GAAoE,EAV/E;AAWI,MAAA,WAAW,EAAE,KAXjB;AAYI,MAAA,OAAO,EAAE,KAZb;AAaI,MAAA,YAAY,EAAE,KAblB;AAcI,MAAA,UAAU,EAAE,KAdhB;AAeI,MAAA,gBAAgB,EAAE,KAftB;AAgBI,MAAA,WAAW,EAAE,KAhBjB;AAiBI,MAAA,QAAQ,EAAGR,KAAD,IAAS,KAAKxB,KAAL,CAAWiC,mBAAX,CAA+BT,KAA/B,EAAqC,yBAArC,CAjBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFf,CA/GX,CADJ;AA8KH;;AA7LkD;;AA+LvD,eAAejC,UAAU,CAACM,yBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight , faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SampleCertificationFilter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore:false\r\n        }\r\n    }\r\n    showMoreToggle =() =>{\r\n        this.setState({\r\n            showMore : !this.state.showMore\r\n           \r\n        })\r\n    }\r\n    render(){\r\n      console.log(\"response\",this.props)\r\n        return(\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n            <Col md={6}>\r\n                <DateTimePicker\r\n                    name={\"fromdate\"}\r\n                    label={this.props.formatMessage({ id: \"IDS_FROM\" })}\r\n                    className='form-control'\r\n                    placeholderText=\"Select date..\"\r\n                    selected={this.props.FromDate}\r\n                    dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                    isClearable={false}\r\n                    onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                    value={this.props.FromDate}\r\n\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <DateTimePicker\r\n                    name={\"todate\"}\r\n                    label={this.props.formatMessage({ id: \"IDS_TO\" })}\r\n                    className='form-control'\r\n                    placeholderText=\"Select date..\"\r\n                    selected={this.props.ToDate}\r\n                    dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                    isClearable={false}\r\n                    onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                    value={this.props.ToDate}\r\n\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsampletypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.SampleType}\r\n                    optionId=\"nsampletypecode\"\r\n                    optionValue=\"ssampletypename\"\r\n                    value={this.props.SampleTypeValue ? this.props.SampleTypeValue.nsampletypecode : \"\"}\r\n                    //value={props.SampleTypeValue ? { \"label\": props.SampleTypeValue.ssampletypename, \"value\": props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"nsorter\"\r\n                    sortOrder=\"ascending\"\r\n                    //onChange={(event) => this.props.onSampleTypeChange(event, 'nsampletypecode', 'SampleTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nregtypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.RegistrationType}\r\n                    optionId=\"nregtypecode\"\r\n                    optionValue=\"sregtypename\"\r\n                    // value = { props.RegTypeValue[\"nregtypecode\"] }\r\n                    value={this.props.RegTypeValue ? this.props.RegTypeValue.nregtypecode : \"\"}\r\n                    showOption={true}\r\n                    //sortField=\"nsorter\"\r\n                    //sortOrder=\"ascending\"\r\n                   // onChange={(event) => props.onRegTypeChange(event, 'nregtypecode', 'RegTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nregsubtypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.RegistrationSubType}\r\n                    optionId=\"nregsubtypecode\"\r\n                    optionValue=\"sregsubtypename\"\r\n                    value={this.props.regSubTypeValue ? this.props.regSubTypeValue.nregsubtypecode : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"nsorter\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onRegSubTypeChange(event, 'nregsubtypecode', 'RegSubTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_FILTERSTATUS\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntransactionstatus\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.FilterStatus}\r\n                    optionId=\"ntransactionstatus\"\r\n                    optionValue=\"stransdisplaystatus\"\r\n                    value={this.props.FilterStatusValue ? this.props.FilterStatusValue.ntransactionstatus : \"\"}\r\n                   // value={props.FilterStatusValue ? { \"label\": props.FilterStatusValue.stransdisplaystatus, \"value\": props.FilterStatusValue.napprovalstatuscode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"stransdisplaystatus\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onFilterChange(event, 'ntransactionstatus')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        </Row>\r\n                {!this.state.showMore ? <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}    \r\n                       <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                                      <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>    \r\n                                      <Row>\r\n                                          <Col md={12}>\r\n                                              <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  name=\"napproveconfversioncode\"\r\n                                                  optionId=\"napprovalconfigversioncode\"\r\n                                                  optionValue=\"sversionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.ApprovalVersion}\r\n                                                //   value={this.props.ApprovalVersionValue? { \"label\": this.props.ApprovalVersionValue.sversionname, \r\n                                                //   \"value\": this.props.ApprovalVersionValue.napproveconfversioncode } : \"\"}\r\n                                                  value={this.props.ApprovalVersionValue ? this.props.ApprovalVersionValue : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"napproveconfversioncode\")}\r\n                                              />\r\n                                              {/* <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  name=\"nsectioncode\"\r\n                                                  optionId=\"nsectioncode\"\r\n                                                  optionValue=\"ssectionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.UserSection||[]}\r\n                                                  value={this.props.UserSectionValue? { \"label\": this.props.UserSectionValue.ssectionname, \"value\": this.props.UserSectionValue.nsectioncode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"nsectioncode\")}\r\n                                              /> */}\r\n                                              {/* <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_JOBSTATUS\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_JOBSTATUS\"})}\r\n                                                  name=\"njobstatuscode\"\r\n                                                  optionId=\"njobstatuscode\"\r\n                                                  optionValue=\"sidsjobstatusname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.JobStatus}\r\n                                                  value={this.props.JobStatusValue? { \"label\": this.props.JobStatusValue.sidsjobstatusname, \"value\": this.props.JobStatusValue.njobstatuscode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"njobstatuscode\")}\r\n                                              /> */}\r\n                                          </Col>\r\n                                      </Row>\r\n                                  </div>  \r\n            </div> \r\n        );\r\n    }\r\n}\r\nexport default injectIntl(SampleCertificationFilter)"]},"metadata":{},"sourceType":"module"}