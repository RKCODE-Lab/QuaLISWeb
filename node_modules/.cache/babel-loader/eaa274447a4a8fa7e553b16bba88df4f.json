{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\form-input\\\\InputFilterProperties.jsx\";\nimport React from 'react';\nimport { Col, Form, Nav, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../form-input/form-input.component';\nimport CustomSwitch from '../custom-switch/custom-switch.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nconst InputFilterProperties = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMERIC\"\n    }),\n    type: \"switch\",\n    name: \"isnumeric\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMERIC\"\n    }),\n    defaultValue: props.selectedFieldRecord[\"isnumeric\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isnumeric\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ALPHANUMERIC\"\n    }),\n    type: \"switch\",\n    name: \"isalphanumeric\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ALPHANUMERIC\"\n    }),\n    defaultValue: props.selectedFieldRecord[\"isalphanumeric\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isalphanumeric\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ALPHABETCAPITAL\"\n    }),\n    type: \"switch\",\n    name: \"isalphabetcaptial\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ALPHABETCAPITAL\"\n    }),\n    defaultValue: props.selectedFieldRecord[\"isalphabetcaptial\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isalphabetcaptial\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ALPHABETSMALL\"\n    }),\n    type: \"switch\",\n    name: \"isalphabetsmall\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ALPHABETSMALL\"\n    }),\n    defaultValue: props.selectedFieldRecord[\"isalphabetsmall\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isalphabetsmall\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ALPHABETSPECIAL\"\n    }),\n    type: \"switch\",\n    name: \"isalphabetspl\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ALPHABETSPECIAL\"\n    }),\n    defaultValue: props.selectedFieldRecord[\"isalphabetspl\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isalphabetspl\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMERICSPECIAL\"\n    }),\n    type: \"switch\",\n    name: \"isnumericspl\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMERICSPECIAL\"\n    }),\n    x: true,\n    defaultValue: props.selectedFieldRecord[\"isnumericspl\"],\n    isMandatory: false,\n    required: false,\n    checked: props.selectedFieldRecord[\"isnumericspl\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"padding\": \"0px\",\n      \"margin-bottom\": \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"ncustomization\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CUSTOMIZATION\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"ncustomization\"] === true ? true : false //  defaultChecked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\n    // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    disabled: (props.selectedFieldRecord[\"isalphabetcaptial\"] || props.selectedFieldRecord[\"isalphabetsmall\"] || props.selectedFieldRecord[\"isnumeric\"]) === true ? true : false,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })))), props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphanumeric\"] ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    name: \"nmaxletters\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    name: \"nmaxnumeric\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }))) : \"\", props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphabetspl\"] ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    name: \"nmaxletters\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    name: \"nsplchar\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    value: props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }))) : \"\", props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isnumericspl\"] ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    name: \"nmaxnumeric\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    name: \"nsplchar\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    value: props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }))) : \"\", props.selectedFieldRecord[\"ncustomization\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isalphanumeric\"]) ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"padding\": \"0px\",\n      \"margin-bottom\": \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"ncasesensitive\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CASESENSITIVE\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"ncasesensitive\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"ncasesensitive\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"ncaptialletters\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CAPTICALLETTERS\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"ncaptialletters\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"ncaptialletters\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"nsmallletters\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SMALLLETTER\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"nsmallletters\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"nsmallletters\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }), props.selectedFieldRecord['isalphabetspl'] || props.selectedFieldRecord['isnumericspl'] ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"naviodsplchar\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RESTRICTSPLCHAR\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"naviodsplchar\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"naviodsplchar\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  }))) : \"\"))) : \"\", props.selectedFieldRecord[\"ncustomization\"] === true && (props.selectedFieldRecord[\"isalphabetspl\"] === false || props.selectedFieldRecord['isalphabetspl'] === undefined) && (props.selectedFieldRecord[\"isnumericspl\"] === false || props.selectedFieldRecord['isnumericspl'] === undefined) && (props.selectedFieldRecord[\"isalphabetsmall\"] === false || props.selectedFieldRecord['isalphabetsmall'] === undefined) && (props.selectedFieldRecord[\"isalphanumeric\"] === false || props.selectedFieldRecord['isalphanumeric'] === undefined) && (props.selectedFieldRecord[\"isalphabetcaptial\"] === false || props.selectedFieldRecord['isalphabetcaptial'] === undefined) && (props.selectedFieldRecord[\"isnumeric\"] === false || props.selectedFieldRecord['isnumeric'] === undefined) ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    name: \"nmaxletters\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXLETTERS\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    name: \"nmaxnumeric\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXNUMERIC\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    name: \"nsplchar\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTER\"\n    }),\n    value: props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"padding\": \"0px\",\n      \"margin-bottom\": \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"ncasesensitive\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CASESENSITIVE\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"ncasesensitive\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"ncasesensitive\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 37\n    }\n  })))))) : \"\", props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"ncasesensitive\"] ? /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXCAPTICALLETTERS\"\n    }),\n    name: \"nmaxcapticalletters\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXCAPTICALLETTERS\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxcapticalletters\"] ? props.selectedFieldRecord[\"nmaxcapticalletters\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXSMALLLETTERS\"\n    }),\n    name: \"nmaxsmallletters\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXSMALLLETTERS\"\n    }),\n    value: props.selectedFieldRecord[\"nmaxsmallletters\"] ? props.selectedFieldRecord[\"nmaxsmallletters\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  })))) : \"\", props.selectedFieldRecord['ncustomization'] && props.selectedFieldRecord['isnumericspl'] ? /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    style: {\n      \"margin\": \"16px\",\n      \"padding\": \"0px\",\n      \"margin-top\": \"1px\",\n      \"margin-left\": \"0.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    //inline={true}\n    type: \"checkbox\",\n    name: \"naviodsplchar\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RESTRICTSPLCHAR\"\n    }) // label={checkbox.text}\n    ,\n    onChange: event => props.onInputOnChange(event) //id={checkbox.id}\n    ,\n    checked: props.selectedFieldRecord[\"naviodsplchar\"] ? true : false,\n    defaultChecked: props.selectedFieldRecord[\"naviodsplchar\"] ? true : false // isMandatory={control.mandatory}\n    //required={control.mandatory}\n    ,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  })))) : \"\", props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"naviodsplchar\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isnumericspl\"]) ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTERSNOTALLOWED\"\n    }),\n    name: \"nsplcharnotallow\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SPLCHARACTERSNOTALLOWED\"\n    }),\n    value: props.selectedFieldRecord[\"nsplcharnotallow\"] ? props.selectedFieldRecord[\"nsplcharnotallow\"] : \"\",\n    isMandatory: true,\n    required: true //maxLength={\"30\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }))) : \"\");\n};\n\nexport default injectIntl(InputFilterProperties);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/form-input/InputFilterProperties.jsx"],"names":["React","Col","Form","Nav","Row","injectIntl","FormInput","CustomSwitch","FormNumericInput","InputFilterProperties","props","intl","formatMessage","id","event","onInputOnChange","selectedFieldRecord","onNumericInputChange","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\n\r\nconst InputFilterProperties = (props) => {\r\n    return (\r\n        <>\r\n            <Col>\r\n\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMERIC\" })}\r\n                    type=\"switch\"\r\n                    name={\"isnumeric\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMERIC\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isnumeric\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isnumeric\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHANUMERIC\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphanumeric\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHANUMERIC\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphanumeric\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphanumeric\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETCAPITAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetcaptial\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETCAPITAL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetcaptial\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetcaptial\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETSMALL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetsmall\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETSMALL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetsmall\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetsmall\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETSPECIAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetspl\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETSPECIAL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetspl\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetspl\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMERICSPECIAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isnumericspl\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMERICSPECIAL\" })} x\r\n                    defaultValue={props.selectedFieldRecord[\"isnumericspl\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isnumericspl\"]}\r\n                />\r\n                {/* </Col>\r\n                </Row> */}\r\n            </Col>\r\n\r\n            <Col md={12} style={{\r\n                \"padding\": \"0px\",\r\n                \"margin-bottom\": \"10px\"\r\n            }}>\r\n                <Row>\r\n                    <Col md={12} style={{\r\n                        \"margin\": \"16px\",\r\n                        \"padding\": \"0px\",\r\n                        \"margin-top\": \"1px\",\r\n                        \"margin-left\": \"0.5px\"\r\n                    }}>\r\n                        <Form.Check\r\n                            //inline={true}\r\n                            type=\"checkbox\"\r\n                            name={\"ncustomization\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_CUSTOMIZATION\" })}\r\n                            // label={checkbox.text}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //id={checkbox.id}\r\n                            checked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\r\n                            //  defaultChecked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\r\n                            // isMandatory={control.mandatory}\r\n                            //required={control.mandatory}\r\n                            disabled={(props.selectedFieldRecord[\"isalphabetcaptial\"] ||\r\n                                props.selectedFieldRecord[\"isalphabetsmall\"] || props.selectedFieldRecord[\"isnumeric\"] ) === true ? true : false}\r\n                            size={'xl'}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            {/* {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isnumeric\"] ?\r\n                <Row>\r\n                    <Col>\r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_PRECISION\" })}\r\n                                name={\"precision\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PRECISION\" })}\r\n                                value={props.selectedFieldRecord[\"precision\"] ? props.selectedFieldRecord[\"precision\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                maxLength={\"1\"}\r\n                            />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                            name={\"nminvalue\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                            value={props.selectedFieldRecord[\"nminvalue\"] ? props.selectedFieldRecord[\"nminvalue\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"7\"}\r\n                        />\r\n                         <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                            name={\"nmaxvalue\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxvalue\"] ? props.selectedFieldRecord[\"nmaxvalue\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"7\"}\r\n                        />\r\n\r\n                    </Col>\r\n                </Row>\r\n                : \"\"} */}\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphanumeric\"] ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                : \"\"}\r\n\r\n\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphabetspl\"] ?\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isnumericspl\"] ?\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isalphanumeric\"]) ?\r\n                <Col md={12} style={{\r\n                    \"padding\": \"0px\",\r\n                    \"margin-bottom\": \"10px\"\r\n                }}>\r\n                    <Row>\r\n                        <Col md={12} style={{\r\n                            \"margin\": \"16px\",\r\n                            \"padding\": \"0px\",\r\n                            \"margin-top\": \"1px\",\r\n                            \"margin-left\": \"0.5px\"\r\n                        }}>\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"ncasesensitive\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_CASESENSITIVE\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"ncaptialletters\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_CAPTICALLETTERS\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"ncaptialletters\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"ncaptialletters\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"nsmallletters\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_SMALLLETTER\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"nsmallletters\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"nsmallletters\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            {props.selectedFieldRecord['isalphabetspl'] || props.selectedFieldRecord['isnumericspl'] ?\r\n                                <Row>\r\n                                    <Col md={12} style={{\r\n                                        \"margin\": \"16px\",\r\n                                        \"padding\": \"0px\",\r\n                                        \"margin-top\": \"1px\",\r\n                                        \"margin-left\": \"0.5px\"\r\n                                    }}>\r\n                                        <Form.Check\r\n                                            //inline={true}\r\n                                            type=\"checkbox\"\r\n                                            name={\"naviodsplchar\"}\r\n                                            label={props.intl.formatMessage({ id: \"IDS_RESTRICTSPLCHAR\" })}\r\n                                            // label={checkbox.text}\r\n                                            onChange={(event) => props.onInputOnChange(event)}\r\n                                            //id={checkbox.id}\r\n                                            checked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                            defaultChecked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                            // isMandatory={control.mandatory}\r\n                                            //required={control.mandatory}\r\n                                            size={'xl'}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                : \"\"}\r\n            {props.selectedFieldRecord[\"ncustomization\"] === true\r\n                && (props.selectedFieldRecord[\"isalphabetspl\"] === false || props.selectedFieldRecord['isalphabetspl'] === undefined)\r\n                && (props.selectedFieldRecord[\"isnumericspl\"] === false || props.selectedFieldRecord['isnumericspl'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphabetsmall\"] === false || props.selectedFieldRecord['isalphabetsmall'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphanumeric\"] === false || props.selectedFieldRecord['isalphanumeric'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphabetcaptial\"] === false || props.selectedFieldRecord['isalphabetcaptial'] === undefined)\r\n                && (props.selectedFieldRecord[\"isnumeric\"] === false || props.selectedFieldRecord['isnumeric'] === undefined) ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <Col md={12} style={{\r\n                            \"padding\": \"0px\",\r\n                            \"margin-bottom\": \"10px\"\r\n                        }}>\r\n                            <Row>\r\n                                <Col md={12} style={{\r\n                                    \"margin\": \"16px\",\r\n                                    \"padding\": \"0px\",\r\n                                    \"margin-top\": \"1px\",\r\n                                    \"margin-left\": \"0.5px\"\r\n                                }}>\r\n                                    <Form.Check\r\n                                        //inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={\"ncasesensitive\"}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_CASESENSITIVE\" })}\r\n                                        // label={checkbox.text}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        //id={checkbox.id}\r\n                                        checked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                        defaultChecked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                        // isMandatory={control.mandatory}\r\n                                        //required={control.mandatory}\r\n                                        size={'xl'}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row> : \"\"\r\n            }\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"ncasesensitive\"] ?\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MAXCAPTICALLETTERS\" })}\r\n                                name={\"nmaxcapticalletters\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MAXCAPTICALLETTERS\" })}\r\n                                value={props.selectedFieldRecord[\"nmaxcapticalletters\"] ? props.selectedFieldRecord[\"nmaxcapticalletters\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={3}\r\n                            />\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MAXSMALLLETTERS\" })}\r\n                                name={\"nmaxsmallletters\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MAXSMALLLETTERS\" })}\r\n                                value={props.selectedFieldRecord[\"nmaxsmallletters\"] ? props.selectedFieldRecord[\"nmaxsmallletters\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={3}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col> : \"\"}\r\n\r\n            {props.selectedFieldRecord['ncustomization'] && props.selectedFieldRecord['isnumericspl'] ?\r\n                <Col>\r\n                    <Row>\r\n                        <Col md={12} style={{\r\n                            \"margin\": \"16px\",\r\n                            \"padding\": \"0px\",\r\n                            \"margin-top\": \"1px\",\r\n                            \"margin-left\": \"0.5px\"\r\n                        }}>\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"naviodsplchar\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_RESTRICTSPLCHAR\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col> : \"\"}\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"naviodsplchar\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isnumericspl\"]) ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTERSNOTALLOWED\" })}\r\n                            name={\"nsplcharnotallow\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTERSNOTALLOWED\" })}\r\n                            value={props.selectedFieldRecord[\"nsplcharnotallow\"] ? props.selectedFieldRecord[\"nsplcharnotallow\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                        //maxLength={\"30\"}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(InputFilterProperties);"]},"metadata":{},"sourceType":"module"}