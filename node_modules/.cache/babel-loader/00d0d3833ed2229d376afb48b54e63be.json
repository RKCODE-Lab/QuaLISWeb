{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{faAddressBook,faChevronRight,faComment,faCommentMedical,faComments,faCommentsDollar,faEye,faFlag,faGripVertical,faPlay,faPlus,faRecycle,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Button,Card,Col,Form,ListGroup,Media,Nav,Row}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import CustomAccordion from'../../components/custom-accordion/custom-accordion.component';import{AtTableWrap,FormControlStatic,FontIconWrap}from'../../components/data-grid/data-grid.styles';import{ListWrapper}from'../../components/client-group.styles';import{FormattedMessage,injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{BuilderBorder,ContionalButton,DeleteRule}from'../configurationmaster/RuleEngineSqlbuilder.styled';import'../../assets/styles/querybuilder.css';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import{ColumnType,parameterType,transactionStatus}from'../../components/Enumeration';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{stringOperatorData,conditionalOperatorData,numericOperatorData,joinConditionData,aggregateFunction,orderByList}from'../configurationmaster/RuleEngineQueryBuilderData';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormCheckbox from'../../components/form-checkbox/form-checkbox.component';import DataGrid from'../../components/data-grid/data-grid.component';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import SplitterLayout from'react-splitter-layout';import ModalShow from'../../components/ModalShow';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import{sortData}from'../../components/CommonScript';import TestGroupResultEntry from'./TestGroupResultEntry';import{ProductList}from'../product/product.styled';import{ContactHeader,HeaderText}from'../testmanagement/testmaster-styled';import{ClientList}from'../userroletemplate/userroletemplate.styles';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import TestPopOver from'../ResultEntryBySample/TestPopOver';import{MediaLabel}from'../../components/App.styles';var AddTestGroupRule=function AddTestGroupRule(props){var fieldsForGrid=props.activeTabIndex==1?[{\"idsName\":\"IDS_TOSITE\",\"dataField\":\"stositename\",\"width\":\"200px\"},{\"idsName\":\"IDS_FROMSITE\",\"dataField\":\"sfromsitename\",\"width\":\"200px\"}]:props.activeTabIndex==2?[{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"spredefinedname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTSUBTYPE\",\"dataField\":\"scommentsubtype\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTTYPE\",\"dataField\":\"scommenttype\",\"width\":\"200px\"}]:props.activeTabIndex==3?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_REPEATCOUNT\",\"dataField\":\"nrepeatcountno\",\"width\":\"200px\"}]:props.activeTabIndex==4?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_OPTIONALPARAMETERS\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTFLAG\",\"dataField\":\"sgradename\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforceresult\",\"width\":\"200px\"}]:\"\";var customStyle={'padding-top':'8px','padding-left':'2px','padding-right':'50px'};function createRules(items,groupIndex){var design=[];console.log('props.selectedRecord->>',props.selectedRecord);props.selectedRecord&&_toConsumableArray(Array(items)).map(function(data,index){var stringOperators=stringOperatorData;design.push(/*#__PURE__*/React.createElement(React.Fragment,null,index>0?props.selectedRecord[\"groupList\"][groupIndex]['button_or']===true?/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:\"builder-btn-primary\",marginLeft:0},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))):props.selectedRecord[\"groupList\"][groupIndex]['button_and']===true?/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:\"builder-btn-primary\",marginLeft:0},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))):\"\":\"\",/*#__PURE__*/React.createElement(Row,{className:\"my-3 ml-1\"},/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",style:customStyle,\"data-tip\":props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return props.deleteRule(groupIndex,index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Col,{md:4,className:\"pl-0\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"stestname\",showOption:true,options:props.rulesOption||[],optionId:\"stestname\",optionValue:\"displayname\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]||\"\",onChange:function onChange(value){return props.onRuleChange(value,\"stestname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"orderresulttype\",placeholder:\"\",showOption:true,options:props.resultTypeList,optionId:\"nresultypecode\",optionValue:\"orderresulttype\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,\"orderresulttype\",groupIndex,index);}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.NUMERIC?numericOperatorData:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.PREDEFINED?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?props.DiagnosticCaseList:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?props.GradeList:props.PredefinedParameterOptions&&props.PredefinedParameterOptions.length>0&&props.PredefinedParameterOptions[groupIndex]&&props.PredefinedParameterOptions[groupIndex].length>0&&props.PredefinedParameterOptions[groupIndex][index],optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,optionValue:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?'ndiagnosticcasecode':props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?'ngradecode':'ntestgrouptestpredefcode']||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===1?'ndiagnosticcasecode':props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?'ngradecode':'ntestgrouptestpredefcode',groupIndex,index);}})):props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.CHARACTER?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormTextarea,{name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return props.onRuleInputChange(event,'ntestgrouptestcharcode',groupIndex,index);}})):props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.NUMERIC?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"]:\"\",type:\"text\",strict:true,maxLength:10,noStyle:true,onChange:function onChange(event){return props.onRuleNumericInputOnChange(event,'ntestgrouptestnumericcode',groupIndex,index);},precision:2,min:0,className:\"form-control\",isMandatory:false,required:false})):/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?props.DiagnosticCaseList:props.GradeList,optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,optionValue:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?'ndiagnosticcasecode':'ngradecode']||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===1?'ndiagnosticcasecode':'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\n,groupIndex,index);}})):\"\"))));});return design;}function onKeyPress(event,index,paremterResultcode){if(event.keyCode===13){for(var i=0;i<event.target.form.elements.length;i++){if(parseInt(event.target.form.elements[i].id)===paremterResultcode[index+1]){event.target.form.elements[i].focus();break;}}event.preventDefault();}}function createGroupRules(){console.log('props.addGroupList->',props);var indexCount=0;var design=[];console.log('props.addGroupList->',props.addGroupList);props.selectedRecord[\"groupList\"]&&props.addGroupList.length>0&&props.addGroupList.map(function(items,index){var stringOperators=stringOperatorData;if(props.selectedRecord[\"groupList\"]&&props.selectedRecord[\"groupList\"][index][\"stestname\"]&&!props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata&&props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype===ColumnType.TEXTINPUT){var temp=stringOperators.filter(function(item){if(item.items.symbolType!==6){return item;}});stringOperators=temp;}if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,index>0&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_and\"]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_or\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"})))),items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{key:index,className:\"p-3 mb-1\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"views\",index);},className:\"mr-1 rulesengine-rule-btn\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RULE\",defaultMessage:\"Rule\"})),items>1?/*#__PURE__*/React.createElement(Row,{className:\"rulesengine-condition-btn \"},/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_and\"]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_or\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"br\",null))))),/*#__PURE__*/React.createElement(React.Fragment,null,createRules(items,index)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}function testParameterAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameter){return accordionMap.set(testParameter.npkAtestparametercode,/*#__PURE__*/React.createElement(Col,{className:\"p-0\",testParameter:testParameter},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center mb-2\"},testParameter.ParameterRulesEngine&&testParameter.ParameterRulesEngine.length>0&&/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},\" \",props.intl.formatMessage({id:\"IDS_RESULTS\"})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-tip\":props.intl.formatMessage({id:\"IDS_ENTERRESULT\"}),className:\"btn btn-circle outline-grey ml-auto\",role:\"button\",onClick:function onClick(){return props.addParameter();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook}))),/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},testParameter.ParameterRulesEngine&&sortData(testParameter.ParameterRulesEngine,'descending','slNo').map(function(parameter,predefindex){var isAdditionalInfoRequired=parameter.hasOwnProperty('additionalInfo')&&parameter['additionalInfo']!==\"\"&&parameter['additionalInfo']!==null&&parameter['additionalInfo']!==undefined?true:false;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListGroup.Item,{key:predefindex,as:\"li\",className:\"rulesengine-parameter-list\"},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(Media.Body,null,/*#__PURE__*/React.createElement(ContactHeader,{className:\"mt-0 text-break\"},//props.intl.formatMessage({ id: \"IDS_PARAMETERNAME\" }) + ' : ' +\nparameter.sparametersynonym),/*#__PURE__*/React.createElement(ProductList,{className:\"text-break\"},props.intl.formatMessage({id:\"IDS_RESULTS\"})+' : '+parameter.sfinal)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex  justify-content-end mr-1\"},/*#__PURE__*/React.createElement(ClientList,{className:\"action-icons-wrap\"},/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",testParameter:testParameter,\"data-tip\":props.intl&&props.intl.formatMessage({id:\"IDS_DELETE\"})},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return props.deletetestparameter(parameter);},class:\"float-right mr-3\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt}))))),isAdditionalInfoRequired&&/*#__PURE__*/React.createElement(Col,{md:2,className:\"pt-2\"},/*#__PURE__*/React.createElement(TestPopOver,{intl:props.intl,needIcon:true,needPopoverTitleContent:true,placement:\"left\",stringList:parameter.hasOwnProperty('additionalInfo')&&[parameter['additionalInfo']]}))))));})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end pr-0\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn pr-0\",testParameter:testParameter,onClick:function onClick(){return props.addModalSite();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameter:testParameter}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OUTSOURCE\",defaultMessage:\"Add Site\",testParameter:testParameter})))),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testSite\"]&&process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode],'descending','npksitecode')||[],props.dataStateObject&&props.dataStateObject[testParameter.npkAtestparametercode]?props.dataStateObject[testParameter.npkAtestparametercode]:{skip:0,take:10}),dataState:props.dataStateObject&&props.dataStateObject[testParameter.npkAtestparametercode]?props.dataStateObject[testParameter.npkAtestparametercode]:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChange(event,testParameter.npkAtestparametercode);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testParameter:testParameter,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]}))// : \"\"\n));});return accordionMap;}function testCommentsAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameterComments){return accordionMap.set(testParameterComments.npkBtestparametercode,/*#__PURE__*/React.createElement(Col,{md:\"12\",testParameterComments:testParameterComments},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end pr-0\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn\",testParameterComments:testParameterComments,onClick:function onClick(){return props.addComments();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameterComments:testParameterComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMMENTS\",defaultMessage:\"Add Test Comments\",testParameterComments:testParameterComments})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testComments\"]&&process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode],'descending','npKAsampletestcommentscode')||[],props.dataStateObject&&props.dataStateObject[testParameterComments.npkBtestparametercode]?props.dataStateObject[testParameterComments.npkBtestparametercode]:{skip:0,take:10}),dataState:props.dataStateObject&&props.dataStateObject[testParameterComments.npkBtestparametercode]?props.dataStateObject[testParameterComments.npkBtestparametercode]:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChange(event,testParameterComments.npkBtestparametercode);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testParameterComments:testParameterComments,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]})));});return accordionMap;}function reportCommentsAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameterreportComments){return accordionMap.set(testParameterreportComments.ntestgrouptestparametercode,/*#__PURE__*/React.createElement(Col,{md:\"12\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"deletetestparameter\",className:\"add-txt-btn\",testParameterreportComments:testParameterreportComments,onClick:function onClick(){return props.deleteModalTest();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,testParameterreportComments:testParameterreportComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DELETE\",defaultMessage:\"Delete\",testParameterreportComments:testParameterreportComments})))),/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn\",testParameterreportComments:testParameterreportComments,onClick:function onClick(){return props.addComments();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameterreportComments:testParameterreportComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDREPORTCOMMENTS\",defaultMessage:\"Add Report Comments\",testParameterreportComments:testParameterreportComments})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"reportComments\"]&&process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode]||[],props.dataState?props.dataState:{skip:0,take:10}),dataState:props.dataState?props.dataState:{skip:0,take:10},dataStateChange:props.dataStateChange,extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testParameterComments:testParameterreportComments,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]})));});return accordionMap;}function TabDetails(){var resultTabMap=new Map();if(props.addOutcomeList.length===0){props.activeTabIndex==1?resultTabMap.set(\"IDS_Test\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_Test\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameter&&props.masterData.testParameter.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",clickIconGroup:true,deleteAccordion:props.deleteModalTest,accordionTitle:\"stestsynonym\",accordionComponent:testParameterAccordion(props.masterData.testParameter),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"npkAtestparametercode\",accordionObjectName:\"testParameter\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.npkAtestparametercode:0}))):props.activeTabIndex==2?resultTabMap.set(\"IDS_COMMENTS\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_COMMENTS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameterComments&&props.masterData.testParameterComments.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",clickIconGroup:true,deleteAccordion:props.deleteModalTest,accordionTitle:\"stestsynonym\",accordionComponent:testCommentsAccordion(props.masterData.testParameterComments),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"npkBtestparametercode\",accordionObjectName:\"testParameterComments\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.npkBtestparametercode:0}))):props.activeTabIndex==3?resultTabMap.set(\"IDS_REPEAT\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_REPEAT\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testRepeat&&props.masterData.testRepeat.length>0&&/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testRepeat\"]&&process(sortData(props.masterData[\"testRepeat\"],'descending','npkCtestparametercode')||[],props.dataStatetestRepeat?props.dataStatetestRepeat:{skip:0,take:10}),dataState:props.dataStatetestRepeat?props.dataStatetestRepeat:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChangetestRepeat(event);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testRepeat:props.masterData.testRepeat,deleteRecord:props.deleteModalTest,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deleteModalTest}]}))):props.activeTabIndex==4?resultTabMap.set(\"IDS_ENFORCERESULT\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_ENFORCERESULT\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testenforceTests&&props.masterData.testenforceTests.length>0&&/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testenforceTests\"]&&process(sortData(props.masterData[\"testenforceTests\"],'descending','npkDtestparametercode')||[],props.dataStatetestEnforce?props.dataStatetestEnforce:{skip:0,take:10}),dataState:props.dataStatetestEnforce?props.dataStatetestEnforce:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChangetestEnforce(event);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testenforceTests:props.masterData.testenforceTests,deleteRecord:props.deleteModalTest,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deleteModalTest}]}))):resultTabMap.set(\"IDS_REPORTCOMMENTS\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameterreportComments&&props.masterData.testParameterreportComments.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",accordionTitle:\"stestparametersynonym\",accordionComponent:reportCommentsAccordion(props.masterData.testParameterreportComments),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"ntestgrouptestparametercode\",accordionObjectName:\"testParameterreportComments\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode:0})));}return resultTabMap;}function testfilter(list){var activeTabIndex=props.activeTabIndex;if(props.masterData.selectedParameterRulesEngine){var dynamicList=activeTabIndex===2?props.masterData[\"testComments\"]&&props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]:props.masterData[\"reportComments\"]&&props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode];if(dynamicList!==undefined){list=list.filter(function(_ref){var value=_ref.value;return!dynamicList.some(function(x){return x.nsampletestcommentscode==value;});});}}return list;}var mandatoryFields=props.action==='IDS_SAVERULEMODAL'?[{\"idsName\":\"IDS_RULESENGINENAME\",\"dataField\":\"srulename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"file\"}//, \n//  { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nruleexecorder\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\n]:props.activeTabIndex===1?props.action==='IDS_ADDTEST'?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}// { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n// { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n]:props.action==='IDS_ADDPARAMETER'?\"\":[{\"idsName\":\"IDS_FROMSITE\",\"dataField\":\"nfromsitecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_TOSITE\",\"dataField\":\"ntositecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}]:props.activeTabIndex===2?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_COMMENTTYPE\",\"dataField\":\"ncommenttypecode\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTSUBTYPE\",\"dataField\":\"ncommentsubtypecode\",\"width\":\"200px\"},props.isneedsgeneralcomments===true?{\"idsName\":\"IDS_GENERALCOMMENTS\",\"dataField\":\"sgeneralcomments\",\"width\":\"200px\"}:{\"idsName\":\"IDS_PREFINEDCOMMENTS\",\"dataField\":\"nsampletestcommentscode\",\"width\":\"200px\"}]:props.activeTabIndex===3?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}]:props.activeTabIndex===4?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_OPTIONALPARAMETERS\",\"dataField\":\"ntestgrouptestparametercode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_RESULTFLAG\",\"dataField\":\"ngradecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforceresult\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"file\"}]:\"\";return/*#__PURE__*/React.createElement(\"div\",{class:\"modal-inner-content\"},/*#__PURE__*/React.createElement(\"div\",{class:\"row margin-top-negative-1\"},/*#__PURE__*/React.createElement(\"div\",{class:\"p-0 col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{class:\"vertical-tab-top popup rules-engine-add-rule\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{className:\"tab-left-area p-0  \".concat(props.activeTabIndex?'active':\"\",\" \").concat(props.enablePropertyPopup?'active-popup':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\"},/*#__PURE__*/React.createElement(\"div\",{className:\"center-area mt-3 mb-0 mx-4\"},/*#__PURE__*/React.createElement(Row,{className:\"d-flex pt-0\"},/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addGroup(\"views\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GROUP\",defaultMessage:\"Group\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.resetRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"ml-0 mr-0\"},props.addGroupList.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{className:\"border-0 mb-0\"},\"    \",createGroupRules(),\"   \")):/*#__PURE__*/React.createElement(React.Fragment,null)))))),/*#__PURE__*/React.createElement(\"div\",{md:6,className:\"\".concat(props.enablePropertyPopup?'active-popup':\"\",\" vertical-tab vertical-tab-expand \").concat(props.activeTabIndex?'active':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(props.enablePropertyPopup?'active-popup':\"\",\" vertical-tab-content pager_wrap wrap-class \").concat(props.activeTabIndex?'active':\"\"),style:{width:props.enablePropertyPopup?props.propertyPopupWidth+'%':\"\"}},/*#__PURE__*/React.createElement(\"span\",{className:\" vertical-tab-close \".concat(props.activeTabIndex?'active':\"\"),onClick:function onClick(){return props.changePropertyView(0);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronRight}),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-common  \".concat(props.activeTabIndex&&props.activeTabIndex?'active':\"\")},/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},props.intl.formatMessage({id:\"IDS_OUTCOME\"})),props.activeTabIndex&&props.activeTabIndex?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:props.activeTestTab,tabDetail:TabDetails()}):\"\")),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-head\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==1?'active':\"\"),onClick:function onClick(){return props.changePropertyView(1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_Test\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==2?'active':\"\"),onClick:function onClick(){return props.changePropertyView(2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faComments}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_COMMENTS\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==3?'active':\"\"),onClick:function onClick(){return props.changePropertyView(3);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faRecycle}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_REPEAT\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==4?'active':\"\"),onClick:function onClick(){return props.changePropertyView(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFlag}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_ENFORCERESULT\"})))))),props.modalParameterPopup?/*#__PURE__*/React.createElement(SlideOutModal,{show:props.modalParameterPopup,closeModal:props.closeModalShow//operation={props.action}\n,esign:false,inputParam:{},screenName:'IDS_RESULTENTRY',onSaveClick:props.modalsaveClick//hideSave={this.props.Login.screenName === \"IDS_VIEWRULE\" || this.props.Login.screenName === \"IDS_VIEWOUTCOME\" || this.props.Login.screenName === \"IDS_SUBCODERESULT\" ? true : false}\n// size={\"lg\"}\n,selectedRecord:props.selectedRecord||{},addComponent:/*#__PURE__*/React.createElement(TestGroupResultEntry,{onKeyPress:onKeyPress,parameterResults:props.selectedRecord.ParameterRulesEngine||[],screenName:'IDS_ADDTEST',PredefinedValues:props.PredefinedValues,onResultInputChange:props.onResultInputChange,onGradeEvent:props.onGradeEvent,gradeValues:props.gradeValues||[],selectedResultGrade:props.selectedRecord.selectedResultGrade||[]})}):props.openModalPopup&&/*#__PURE__*/React.createElement(ModalShow,{modalShow:true// size={props.activeTabIndex === 1 && (props.action === 'IDS_ADDPARAMETER' || props.action === 'IDS_ADDTEST') ? 'lg' : \"\"}\n,modalTitle:props.action==='IDS_ADDPARAMETER'?props.intl.formatMessage({id:'IDS_ADDPARAMETER'}):props.action==='IDS_SAVERULEMODAL'?'IDS_RULESENGINENAME':props.action==='IDS_ADDREPORTCOMMENTS'?props.intl.formatMessage({id:'IDS_ADDREPORTCOMMENTS'}):props.action==='IDS_ADDTESTCOMMENTS'?props.intl.formatMessage({id:'IDS_ADDTESTCOMMENTS'}):props.action==='IDS_ADDTEST'?props.activeTabIndex==3?props.intl.formatMessage({id:'IDS_ADDREPEATTEST'}):props.intl.formatMessage({id:'IDS_ADDTEST'}):props.intl.formatMessage({id:'IDS_ADDOUTSOURCESITE'}),closeModal:props.closeModalShow,onSaveClick:props.action==='IDS_SAVERULEMODAL'?props.save:props.modalsaveClick// validateEsign={this.validateEsign}\n,selectedRecord:props.selectedRecord,mandatoryFields:mandatoryFields,modalBody:props.openmodalsavePopup===true?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_RULESENGINENAME\"}),name:\"srulename\",placeholder:props.intl.formatMessage({id:\"IDS_RULESENGINENAME\"}),type:\"text\",maxLength:100,required:false,isMandatory:true,value:props.selectedRecord[\"srulename\"]||\"\",onChange:function onChange(event){return props.onInputChange(event);}}))):props.activeTabIndex==1?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testInitiateTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?props.modalParameterPopup?true:false:true})),props.action==='IDS_ADDPARAMETER'||props.action==='IDS_ADDTEST'?/*#__PURE__*/ // <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\nReact.createElement(TestGroupResultEntry,{parameterResults:props.selectedRecord.ParameterRulesEngine||[],screenName:'IDS_ADDTEST',PredefinedValues:props.PredefinedValues,onResultInputChange:props.onResultInputChange,onGradeEvent:props.onGradeEvent,gradeValues:props.gradeValues||[],selectedResultGrade:props.selectedRecord.selectedResultGrade||[]})// </div>\n:\"\"),(props.action==='IDS_ADDSITE'// || props.action === 'IDS_ADDTEST'\n?true:false)?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FROMSITE\"})// formGroupClassName=\"remove-floating-label-margin\"\n,isSearchable:true,name:\"nfromsitecode\",showOption:true,options:props.siteList||[],optionId:\"nfromsitecode\",optionValue:\"ssitename\",isMandatory:true,value:props.selectedRecord[\"nfromsitecode\"]&&props.selectedRecord[\"nfromsitecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'nfromsitecode');}//  isMandatory={true}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TOSITE\"})//    formGroupClassName=\"remove-floating-label-margin\"\n,isSearchable:true,name:\"ntositecode\",showOption:true,options:props.siteList||[],optionId:\"ntositecode\",optionValue:\"ssitename\",isMandatory:true,value:props.selectedRecord[\"ntositecode\"]&&props.selectedRecord[\"ntositecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntositecode');}//  isMandatory={true}\n}))):\"\"):props.activeTabIndex==2?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testCommentsTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTTYPE\"}),isSearchable:true,name:\"ncommenttypecode\",showOption:true,options:props.CommentType||[],optionId:\"ncommenttypecode\",optionValue:\"scommenttype\",value:props.selectedRecord[\"ncommenttypecode\"]&&props.selectedRecord[\"ncommenttypecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ncommenttypecode');},isMandatory:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTSUBTYPE\"}),isSearchable:true,name:\"ncommentsubtypecode\",showOption:true,options:props.CommentSubType||[],optionId:\"ncommentsubtypecode\",optionValue:\"scommentsubtype\",value:props.selectedRecord[\"ncommentsubtypecode\"]&&props.selectedRecord[\"ncommentsubtypecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ncommentsubtypecode');},isMandatory:true})),props.selectedRecord[\"ncommentsubtypecode\"]?props.isneedsgeneralcomments===true?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sgeneralcomments\",label:props.intl.formatMessage({id:\"IDS_GENERALCOMMENTS\"}),type:\"text\",value:props.selectedRecord&&props.selectedRecord['sgeneralcomments']||\"\"// isMandatory={control.mandatory}\n// required={control.mandatory}\n,onChange:function onChange(event){return props.onInputChange(event,1);},rows:\"2\",maxLength:\"255\",isDisabled:false,isMandatory:true})):/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PREDEFINEDNAME\"}),isSearchable:true,name:\"nsampletestcommentscode\",showOption:true,options:props.predefcomments||[],optionId:\"nsampletestcommentscode\",optionValue:\"spredefinedname\",value:props.selectedRecord[\"nsampletestcommentscode\"]&&props.selectedRecord[\"nsampletestcommentscode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'nsampletestcommentscode');},isMandatory:true}),/*#__PURE__*/React.createElement(FormTextarea,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",required:false,isMandatory:true,value:props.selectedRecord[\"sdescription\"]&&props.selectedRecord[\"sdescription\"]||\"\",onChange:function onChange(event){return props.onInputChange(event);}})):\"\"):props.activeTabIndex==3?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testRepeatTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormNumericInput,{name:'nrepeatcountno',label:props.intl.formatMessage({id:\"IDS_REPEATCOUNT\"}),placeholder:props.intl.formatMessage({id:\"IDS_REPEATCOUNT\"}),value:props.selectedRecord[\"nrepeatcountno\"]?props.selectedRecord[\"nrepeatcountno\"]:\"\",type:\"text\",strict:true,maxLength:10,noStyle:true,onChange:function onChange(event){return props.onRuleNumericInputOnChange(event,'nrepeatcountno');}//  precision={2}\n,min:0,max:9,className:\"form-control\",isMandatory:false,required:false}))):props.activeTabIndex==4?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testenforceTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_OPTIONALPARAMETERS\"}),isSearchable:true,name:\"ntestgrouptestparametercode\",showOption:true,options:props.testGroupTestParameterRulesEngine||[],optionId:\"ntestgrouptestparametercode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestparametercode\"]&&props.selectedRecord[\"ntestgrouptestparametercode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestparametercode');},isMandatory:true,isDisabled:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"senforceresult\",label:props.intl.formatMessage({id:\"IDS_RESULTS\"}),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord?props.selectedRecord[\"senforceresult\"]:\"\",rows:\"2\",isMandatory:true,required:false,maxLength:255,onChange:function onChange(event){return props.onInputChange(event,1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_RESULTFLAG\"}),isSearchable:true,name:\"ngradecode\",showOption:true,options:props.GradeList||[],optionId:\"ngradecode\",optionValue:\"sgradename\",value:props.selectedRecord[\"ngradecode\"]&&props.selectedRecord[\"ngradecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ngradecode');},isMandatory:true,isDisabled:false}))):\"\"}))))));};export default injectIntl(AddTestGroupRule);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupRule.js"],"names":["faAddressBook","faChevronRight","faComment","faCommentMedical","faComments","faCommentsDollar","faEye","faFlag","faGripVertical","faPlay","faPlus","faRecycle","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","ListGroup","Media","Nav","Row","process","CustomAccordion","AtTableWrap","FormControlStatic","FontIconWrap","ListWrapper","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","CustomTabs","ColumnType","parameterType","transactionStatus","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","FormMultiSelect","SplitterLayout","ModalShow","FormNumericInput","sortData","TestGroupResultEntry","ProductList","ContactHeader","HeaderText","ClientList","SlideOutModal","TestPopOver","MediaLabel","AddTestGroupRule","props","fieldsForGrid","activeTabIndex","customStyle","createRules","items","groupIndex","design","console","log","selectedRecord","Array","map","data","index","stringOperators","push","intl","formatMessage","id","deleteRule","rulesOption","value","onRuleChange","resultTypeList","onMasterDataChange","NUMERIC","onSymbolChange","PREDEFINED","valuemember","DiagnosticCaseList","GradeList","PredefinedParameterOptions","length","displaymember","CHARACTER","event","onRuleInputChange","onRuleNumericInputOnChange","onKeyPress","paremterResultcode","keyCode","i","target","form","elements","parseInt","focus","preventDefault","createGroupRules","indexCount","addGroupList","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","onConditionClick","addRule","testParameterAccordion","TestParameter","accordionMap","Map","testParameter","set","npkAtestparametercode","ParameterRulesEngine","addParameter","parameter","predefindex","isAdditionalInfoRequired","hasOwnProperty","undefined","sparametersynonym","sfinal","deletetestparameter","addModalSite","masterData","dataStateObject","skip","take","dataStateChange","controlMap","userRoleControlRights","deletModalSite","operation","title","controlname","hidden","objectName","onClick","testCommentsAccordion","testParameterComments","npkBtestparametercode","addComments","reportCommentsAccordion","testParameterreportComments","ntestgrouptestparametercode","deleteModalTest","dataState","TabDetails","resultTabMap","addOutcomeList","addTest","userInfo","nFlag","getOutcomeDetails","selectedParameterRulesEngine","testRepeat","dataStatetestRepeat","dataStateChangetestRepeat","testenforceTests","dataStatetestEnforce","dataStateChangetestEnforce","testfilter","list","dynamicList","some","x","nsampletestcommentscode","mandatoryFields","action","isneedsgeneralcomments","enablePropertyPopup","addGroup","resetRule","width","propertyPopupWidth","changePropertyView","activeTestTab","modalParameterPopup","closeModalShow","modalsaveClick","PredefinedValues","onResultInputChange","onGradeEvent","gradeValues","selectedResultGrade","openModalPopup","save","openmodalsavePopup","onInputChange","testInitiateTestCombo","onmodalComboChange","siteList","testCommentsTestCombo","CommentType","CommentSubType","predefcomments","testRepeatTestCombo","testenforceTestCombo","testGroupTestParameterRulesEngine"],"mappings":"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","sourcesContent":["import { faAddressBook, faChevronRight, faComment, faCommentMedical, faComments, faCommentsDollar, faEye, faFlag, faGripVertical, faPlay, faPlus, faRecycle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, ListGroup, Media, Nav, Row } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from '../configurationmaster/RuleEngineSqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\n\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n\r\nimport { ColumnType, parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from '../configurationmaster/RuleEngineQueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport TestGroupResultEntry from './TestGroupResultEntry';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { ContactHeader, HeaderText } from '../testmanagement/testmaster-styled';\r\nimport { ClientList } from '../userroletemplate/userroletemplate.styles';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport TestPopOver from '../ResultEntryBySample/TestPopOver';\r\nimport { MediaLabel } from '../../components/App.styles';\r\n\r\n\r\nconst AddTestGroupRule = (props) => {\r\n    const fieldsForGrid = props.activeTabIndex == 1 ? [\r\n        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"stositename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"sfromsitename\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 2 ? [\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"scommenttype\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 3 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_REPEATCOUNT\", \"dataField\": \"nrepeatcountno\", \"width\": \"200px\" }\r\n    ] : props.activeTabIndex == 4 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"width\": \"200px\" }\r\n    ] : \"\";\r\n    const customStyle = {\r\n        'padding-top': '8px',\r\n        'padding-left': '2px',\r\n        'padding-right': '50px'\r\n    }\r\n    function createRules(items, groupIndex) {\r\n        let design = [];\r\n        console.log('props.selectedRecord->>', props.selectedRecord)\r\n        props.selectedRecord && [...Array(items)].map((data, index) => {\r\n            let stringOperators = stringOperatorData;\r\n            design.push(\r\n                <>\r\n                    {index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ?\r\n                        <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                        >\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton> :\r\n                        props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ?\r\n                            <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                            >\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton> : \"\" : \"\"}\r\n                    <Row className=\"my-3 ml-1\">\r\n                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" style={customStyle} data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                            onClick={() => props.deleteRule(groupIndex, index)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                        </FontIconWrap>\r\n                        {/* <DeleteRule marginLeft={1} onClick={() => props.deleteRule(groupIndex, index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt}  className=\"d-font-icon action-icons-wrap\" />\r\n                        </DeleteRule>  */}\r\n                        <Col md={4} className=\"pl-0\"  >\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                isSearchable={true}\r\n                                name={\"stestname\"}\r\n                                showOption={true}\r\n                                options={props.rulesOption || []}\r\n                                optionId='stestname'\r\n                                optionValue='displayname'\r\n                                value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\"}\r\n                                onChange={value => props.onRuleChange(value, \"stestname\", groupIndex, index)}\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n\r\n\r\n                        {\r\n                            props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                            <>\r\n                                {/* <Col md={1}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={`sinputname`}\r\n                                        type=\"text\"\r\n                                        value={props.intl.formatMessage({ id: \"IDS_WITH\" })}\r\n                                        disabled={true}\r\n                                    />\r\n                                </Col> */}\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"orderresulttype\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.resultTypeList}\r\n                                        optionId='nresultypecode'\r\n                                        optionValue='orderresulttype'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"ssymbolname\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']\r\n                                                ['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                numericOperatorData : stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {/* {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 ?\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    showOption={true}\r\n                                                    options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                        props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                            : props.PredefinedParameterOptions}\r\n\r\n                                                    optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                    optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                        [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                    onChange={value => props.onMasterDataChange(value,\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                        , groupIndex, index)}\r\n                                                ></FormSelectSearch>\r\n                                            </Col> : props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                                <Col md={2}>\r\n                                                    <FormTextarea\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                        rows=\"2\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                        maxLength={255}\r\n                                                        onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                        type=\"number\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={0}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                        //asusual\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> : \"\"\r\n                                } */}\r\n\r\n\r\n                                {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions &&\r\n                                                        props.PredefinedParameterOptions.length > 0 && props.PredefinedParameterOptions[groupIndex] &&\r\n                                                        props.PredefinedParameterOptions[groupIndex].length > 0 &&\r\n                                                        props.PredefinedParameterOptions[groupIndex][index]}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> :\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                            <Col md={2}>\r\n                                                <FormTextarea\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"] : \"\"}\r\n                                                    rows=\"2\"\r\n                                                    isMandatory={false}\r\n                                                    required={false}\r\n                                                    maxLength={255}\r\n                                                    onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                />\r\n                                            </Col> :\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"] : \"\"}\r\n                                                        type=\"text\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={2}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormSelectSearch\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        isSearchable={true}\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        showOption={true}\r\n                                                        options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                            props.DiagnosticCaseList : props.GradeList}\r\n\r\n                                                        optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                        optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                            [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\r\n                                                        onChange={value => props.onMasterDataChange(value,\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\r\n                                                            , groupIndex, index)}\r\n                                                    ></FormSelectSearch>\r\n                                                </Col> : \"\"\r\n                                }\r\n\r\n\r\n                            </>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n\r\n    function onKeyPress(event, index, paremterResultcode) {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    function createGroupRules() {\r\n        console.log('props.addGroupList->', props)\r\n        let indexCount = 0;\r\n        let design = [];\r\n        console.log('props.addGroupList->', props.addGroupList)\r\n        props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"]\r\n                && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata\r\n                && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item => {\r\n                    if (item.items.symbolType !== 6) {\r\n                        return item\r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>{index > 0 && <Row>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                        onClick={() => props.onConditionClick(\"button_and\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_or\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_not\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                    </ContionalButton>\r\n                </Row>}\r\n                    {items > -1 ?\r\n                        <>\r\n                            <BuilderBorder key={index} className=\"p-3 mb-1\">\r\n                                <Row >\r\n\r\n                                    <Col md={12} >\r\n                                        <Button onClick={() => props.addRule(\"views\", index)} className=\"mr-1 rulesengine-rule-btn\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_RULE\" defaultMessage=\"Rule\" />\r\n                                        </Button>\r\n                                        {items > 1 ?\r\n                                            <Row className=\"rulesengine-condition-btn \">\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                                    onClick={() => props.onConditionClick(\"button_and\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_or\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                </ContionalButton>\r\n                                            </Row>\r\n\r\n                                            :\r\n                                            <>\r\n                                                <Row >\r\n                                                    <br >\r\n                                                    </br>\r\n                                                </Row>\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <>\r\n                                    {createRules(items, index)}\r\n                                </>\r\n\r\n                            </BuilderBorder>\r\n\r\n                        </> : <></>\r\n                    }\r\n\r\n\r\n                </>)\r\n        });\r\n\r\n        return design;\r\n    }\r\n\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.npkAtestparametercode,\r\n                <Col className='p-0' testParameter={testParameter}>\r\n\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <div className='d-flex align-items-center mb-2'>\r\n                                    {testParameter.ParameterRulesEngine&&testParameter.ParameterRulesEngine.length>0&& <h4 className='inner_h4'> {props.intl.formatMessage({ id: \"IDS_RESULTS\" })}</h4>}\r\n                                    {/* <Nav.Item className=\"add-txt-btn\" name=\"addcodedresultname\"\r\n                                        onClick={() => props.addParameter()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>{\" \"}\r\n                                        <FormattedMessage id=\"IDS_PARAMETERS\" defaultMessage=\"Parameters\" />\r\n                                    </Nav.Item> */}\r\n                                    <Nav.Link\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" })}\r\n                                        className=\"btn btn-circle outline-grey ml-auto\" role=\"button\"\r\n                                        onClick={() => props.addParameter()}>\r\n                                        <FontAwesomeIcon icon={faAddressBook} />\r\n                                    </Nav.Link>\r\n                                    </div>\r\n                                    <ListGroup as=\"ul\">\r\n                                        {testParameter.ParameterRulesEngine &&\r\n                                            sortData(testParameter.ParameterRulesEngine, 'descending', 'slNo').map((parameter, predefindex) => {\r\n                                                let isAdditionalInfoRequired = parameter.hasOwnProperty('additionalInfo') &&\r\n                                                    parameter['additionalInfo'] !== \"\" && parameter['additionalInfo'] !== null\r\n                                                    && parameter['additionalInfo'] !== undefined ? true : false\r\n                                                return (<>\r\n                                                        <ListGroup.Item key={predefindex} as=\"li\" className='rulesengine-parameter-list' >\r\n                                                            <Media>\r\n                                                                <Media.Body>\r\n                                                                    <ContactHeader className=\"mt-0 text-break\">{//props.intl.formatMessage({ id: \"IDS_PARAMETERNAME\" }) + ' : ' +\r\n                                                                     parameter.sparametersynonym}</ContactHeader>\r\n                                                                    <ProductList className='text-break'>{props.intl.formatMessage({ id: \"IDS_RESULTS\" })  + ' : ' + parameter.sfinal}</ProductList>\r\n                                                                    {/* <ProductList>{'grade' + ' : ' + parameter.sgradename}</ProductList> */}\r\n                                                                    {/* {props.gradeValues[parameter.ngradecode] &&\r\n                                                                        <ListWrapper>{props.intl.formatMessage({ id: \"IDS_RESULTFLAG\" })} : <MediaLabel className=\"labelfont\" style={{ color: props.gradeValues[parameter.ngradecode][0]['scolorhexcode'] }}>\r\n                                                                            {parameter.ngradecode === undefined ? \"\" : props.gradeValues[parameter.ngradecode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n\r\n                                                                    } */}\r\n\r\n                                                                </Media.Body>\r\n                                                                <div>\r\n                                                                    <div className='d-flex  justify-content-end mr-1'>\r\n                                                                        <ClientList className=\"action-icons-wrap\">\r\n                                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" testParameter={testParameter}\r\n                                                                                data-tip={props.intl && props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            ><a onClick={() => props.deletetestparameter(parameter)} class=\"float-right mr-3\">\r\n                                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                                </a></FontIconWrap> \r\n                                                                        </ClientList>\r\n                                                                       \r\n                                                                    </div>\r\n                                                                    {isAdditionalInfoRequired &&\r\n                                                                            <Col md={2} className=\"pt-2\">\r\n                                                                                <TestPopOver intl={props.intl} needIcon={true} needPopoverTitleContent={true} placement=\"left\" stringList={\r\n                                                                                    parameter.hasOwnProperty('additionalInfo') &&\r\n                                                                                    [parameter['additionalInfo']]} ></TestPopOver>\r\n                                                                            </Col>}\r\n                                                                </div>\r\n                                                            </Media>\r\n                                                        </ListGroup.Item>\r\n                                                   \r\n                                                    {/* {isAdditionalInfoRequired &&\r\n                                                        <Col md={2} className=\"pt-2\">\r\n                                                            <TestPopOver intl={props.intl} needIcon={true} needPopoverTitleContent={true} placement=\"left\" stringList={\r\n                                                                parameter.hasOwnProperty('additionalInfo') &&\r\n                                                                [parameter['additionalInfo']]} ></TestPopOver>\r\n                                                        </Col>}  */}\r\n                                               \r\n\r\n                                                </>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn pr-0\" testParameter={testParameter}\r\n                                onClick={() => props.addModalSite()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameter={testParameter} /> { }\r\n                                <FormattedMessage id=\"IDS_OUTSOURCE\" defaultMessage=\"Add Site\" testParameter={testParameter} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        <>\r\n\r\n                            <DataGrid\r\n                                key=\"testsectionkey\"\r\n                                primaryKeyField=\"nresultusedmaterialcode\"\r\n                                dataResult={props.masterData[\"testSite\"] && process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode], 'descending', 'npksitecode') || [],\r\n                                    props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                        ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 })}\r\n                                dataState={props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                    ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 }}\r\n                                dataStateChange={(event) => { props.dataStateChange(event, testParameter.npkAtestparametercode) }}\r\n\r\n                                extractedColumnList={fieldsForGrid}\r\n                                controlMap={props.controlMap}\r\n                                userRoleControlRights={props.userRoleControlRights}\r\n                                pageable={true}\r\n                                isActionRequired={true}\r\n                                scrollable={'scrollable'}\r\n                                hideColumnFilter={true}\r\n                                selectedId={0}\r\n                                testParameter={testParameter}\r\n                                deleteRecord={props.deletModalSite}\r\n                                deleteParam={{ operation: \"delete\" }}\r\n                                actionIcons={[{\r\n                                    title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    controlname: \"faTrashAlt\",\r\n                                    hidden: false,\r\n                                    objectName: \"delete\",\r\n                                    onClick: props.deletModalSite\r\n\r\n                                }]}\r\n                            >\r\n                            </DataGrid></>\r\n                        // : \"\"\r\n                    }\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function testCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterComments) =>\r\n            accordionMap.set(testParameterComments.npkBtestparametercode,\r\n                <Col md=\"12\" testParameterComments={testParameterComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_COMMENTS\" defaultMessage=\"Add Test Comments\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"testComments\"] && process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode], 'descending', 'npKAsampletestcommentscode') || [],\r\n                            props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                                ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 })}\r\n                        dataState={props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                            ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => { props.dataStateChange(event, testParameterComments.npkBtestparametercode) }}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function reportCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterreportComments) =>\r\n            accordionMap.set(testParameterreportComments.ntestgrouptestparametercode,\r\n                <Col md=\"12\" testParameterreportComments={testParameterreportComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faTrashAlt} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_DELETE\" defaultMessage=\"Delete\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"actions-stripe\" testParameterreportComments={testParameterreportComments}>\r\n                        <div className=\"d-flex justify-content-end\" testParameterreportComments={testParameterreportComments}>\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_ADDREPORTCOMMENTS\" defaultMessage=\"Add Report Comments\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode] || [],\r\n                            props.dataState\r\n                                ? props.dataState : { skip: 0, take: 10 })}\r\n                        dataState={props.dataState\r\n                            ? props.dataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={props.dataStateChange}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterreportComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function TabDetails() {\r\n        const resultTabMap = new Map();\r\n        if (props.addOutcomeList.length === 0) {\r\n            props.activeTabIndex == 1 ?\r\n                resultTabMap.set(\"IDS_Test\",\r\n                    <>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"addtestparameter\"\r\n                                    onClick={() => props.addTest(\"IDS_Test\")}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        {props.masterData.testParameter && props.masterData.testParameter.length > 0 &&\r\n                            <CustomAccordion\r\n                                key=\"parameteraccordion\"\r\n                                clickIconGroup={true}\r\n                                deleteAccordion={props.deleteModalTest}\r\n                                accordionTitle={\"stestsynonym\"}\r\n                                accordionComponent={testParameterAccordion(props.masterData.testParameter)}\r\n                                inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                accordionClick={props.getOutcomeDetails}\r\n                                accordionPrimaryKey={\"npkAtestparametercode\"}\r\n                                accordionObjectName={\"testParameter\"}\r\n                                selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkAtestparametercode : 0}\r\n                            />\r\n                        }\r\n                    </>\r\n                ) : props.activeTabIndex == 2 ?\r\n                    resultTabMap.set(\"IDS_COMMENTS\",\r\n                        <>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link name=\"addtestparameter\"\r\n                                        onClick={() => props.addTest(\"IDS_COMMENTS\")}>\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            {props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 &&\r\n                                <CustomAccordion\r\n                                    key=\"parameteraccordion\"\r\n                                    clickIconGroup={true}\r\n                                    deleteAccordion={props.deleteModalTest}\r\n                                    accordionTitle={\"stestsynonym\"}\r\n                                    accordionComponent={testCommentsAccordion(props.masterData.testParameterComments)}\r\n                                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                    accordionClick={props.getOutcomeDetails}\r\n                                    accordionPrimaryKey={\"npkBtestparametercode\"}\r\n                                    accordionObjectName={\"testParameterComments\"}\r\n                                    selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkBtestparametercode : 0}\r\n                                />\r\n                            }\r\n                        </>\r\n                    ) : props.activeTabIndex == 3 ?\r\n                        resultTabMap.set(\"IDS_REPEAT\",\r\n                            <>\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Nav.Link name=\"addtestparameter\"\r\n                                            onClick={() => props.addTest(\"IDS_REPEAT\")}>\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                            <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                {props.masterData.testRepeat && props.masterData.testRepeat.length > 0 &&\r\n                                    <DataGrid\r\n                                        key=\"testsectionkey\"\r\n                                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                                        dataResult={props.masterData[\"testRepeat\"] && process(sortData(props.masterData[\"testRepeat\"], 'descending', 'npkCtestparametercode') || [],\r\n                                            props.dataStatetestRepeat\r\n                                                ? props.dataStatetestRepeat : { skip: 0, take: 10 })}\r\n                                        dataState={props.dataStatetestRepeat\r\n                                            ? props.dataStatetestRepeat : { skip: 0, take: 10 }}\r\n                                        dataStateChange={(event) => { props.dataStateChangetestRepeat(event) }}\r\n                                        extractedColumnList={fieldsForGrid}\r\n                                        controlMap={props.controlMap}\r\n                                        userRoleControlRights={props.userRoleControlRights}\r\n                                        pageable={true}\r\n                                        isActionRequired={true}\r\n                                        scrollable={'scrollable'}\r\n                                        hideColumnFilter={true}\r\n                                        selectedId={0}\r\n                                        testRepeat={props.masterData.testRepeat}\r\n                                        deleteRecord={props.deleteModalTest}\r\n                                        deleteParam={{ operation: \"delete\" }}\r\n                                        actionIcons={[{\r\n                                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                            controlname: \"faTrashAlt\",\r\n                                            hidden: false,\r\n                                            objectName: \"delete\",\r\n                                            onClick: props.deleteModalTest\r\n                                        }]}\r\n                                    >\r\n                                    </DataGrid>\r\n                                }\r\n                            </>\r\n                        ) : props.activeTabIndex == 4 ?\r\n                            resultTabMap.set(\"IDS_ENFORCERESULT\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest(\"IDS_ENFORCERESULT\")}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testenforceTests && props.masterData.testenforceTests.length > 0 &&\r\n                                        <DataGrid\r\n                                            key=\"testsectionkey\"\r\n                                            primaryKeyField=\"nresultusedmaterialcode\"\r\n                                            dataResult={props.masterData[\"testenforceTests\"] && process(sortData(props.masterData[\"testenforceTests\"], 'descending', 'npkDtestparametercode') || [],\r\n                                                props.dataStatetestEnforce\r\n                                                    ? props.dataStatetestEnforce : { skip: 0, take: 10 })}\r\n                                            dataState={props.dataStatetestEnforce\r\n                                                ? props.dataStatetestEnforce : { skip: 0, take: 10 }}\r\n                                            dataStateChange={(event) => { props.dataStateChangetestEnforce(event) }}\r\n                                            extractedColumnList={fieldsForGrid}\r\n                                            controlMap={props.controlMap}\r\n                                            userRoleControlRights={props.userRoleControlRights}\r\n                                            pageable={true}\r\n                                            isActionRequired={true}\r\n                                            scrollable={'scrollable'}\r\n                                            hideColumnFilter={true}\r\n                                            selectedId={0}\r\n                                            testenforceTests={props.masterData.testenforceTests}\r\n                                            deleteRecord={props.deleteModalTest}\r\n                                            deleteParam={{ operation: \"delete\" }}\r\n                                            actionIcons={[{\r\n                                                title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                controlname: \"faTrashAlt\",\r\n                                                hidden: false,\r\n                                                objectName: \"delete\",\r\n                                                onClick: props.deleteModalTest\r\n                                            }]}\r\n                                        >\r\n                                        </DataGrid>\r\n                                    }\r\n                                </>\r\n                            ) :\r\n                            resultTabMap.set(\"IDS_REPORTCOMMENTS\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest()}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 &&\r\n                                        <CustomAccordion\r\n                                            key=\"parameteraccordion\"\r\n                                            accordionTitle={\"stestparametersynonym\"}\r\n                                            accordionComponent={reportCommentsAccordion(props.masterData.testParameterreportComments)}\r\n                                            inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                            accordionClick={props.getOutcomeDetails}\r\n                                            accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                                            accordionObjectName={\"testParameterreportComments\"}\r\n                                            selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode : 0}\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n        }\r\n        return resultTabMap;\r\n    }\r\n    function testfilter(list) {\r\n        let activeTabIndex = props.activeTabIndex\r\n        if (props.masterData.selectedParameterRulesEngine) {\r\n            let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n                : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n            if (dynamicList !== undefined) {\r\n                list = list.filter(({ value }) => !dynamicList.some(x => x.nsampletestcommentscode == value))\r\n            }\r\n        }\r\n        return list\r\n    }\r\n    const mandatoryFields =\r\n        props.action === 'IDS_SAVERULEMODAL' ?\r\n            [{ \"idsName\": \"IDS_RULESENGINENAME\", \"dataField\": \"srulename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }//, \r\n                //  { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nruleexecorder\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\r\n            ] :\r\n            props.activeTabIndex === 1 ?\r\n                props.action === 'IDS_ADDTEST' ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ] :\r\n                    props.action === 'IDS_ADDPARAMETER' ? \"\" :\r\n                        [\r\n                            { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                            { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                        ]\r\n                :\r\n                props.activeTabIndex === 2 ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"ncommenttypecode\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"ncommentsubtypecode\", \"width\": \"200px\" },\r\n                    props.isneedsgeneralcomments === true ?\r\n                        { \"idsName\": \"IDS_GENERALCOMMENTS\", \"dataField\": \"sgeneralcomments\", \"width\": \"200px\" } :\r\n                        { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"width\": \"200px\" }\r\n                ] :\r\n                    props.activeTabIndex === 3 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n                    ] : props.activeTabIndex === 4 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"ntestgrouptestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"ngradecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\r\n                    ] : \"\"\r\n    return (\r\n\r\n        <div class=\"modal-inner-content\">\r\n            <div class=\"row margin-top-negative-1\">\r\n                <div class=\"p-0 col-md-12\">\r\n                    <div class=\"vertical-tab-top popup rules-engine-add-rule\"\r\n                    >\r\n                        <>\r\n                            <Col className={`tab-left-area p-0  ${props.activeTabIndex\r\n                                ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\r\n                                    <div className=\"center-area mt-3 mb-0 mx-4\">\r\n                                        <Row className='d-flex pt-0'>\r\n                                            <Col md={6}>\r\n                                                <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                                    {'+'} <FormattedMessage id=\"IDS_GROUP\" defaultMessage=\"Group\" />\r\n                                                </Button>\r\n                                                <Button onClick={() => props.resetRule()}>\r\n                                                    <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={12} className=\"ml-0 mr-0\">\r\n\r\n                                                {props.addGroupList.length > 0 ?\r\n                                                    <>\r\n                                                        <BuilderBorder className='border-0 mb-0'>    {\r\n                                                            createGroupRules()}   </BuilderBorder>\r\n                                                    </>\r\n\r\n                                                    : <></>}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <div md={6} className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab vertical-tab-expand ${props.activeTabIndex\r\n                                ? 'active' : \"\"}`} >\r\n                                <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                                    ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                                    <span className={` vertical-tab-close ${props.activeTabIndex\r\n                                        ? 'active' : \"\"}`} onClick={() => props.changePropertyView(0)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                    <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                                        ? 'active' : \"\"}`}>\r\n                                        <h4 className='inner_h4'>\r\n                                            {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                                        </h4>\r\n                                        {props.activeTabIndex && props.activeTabIndex\r\n                                            ?\r\n                                            <CustomTabs activeKey={props.activeTestTab\r\n                                            } tabDetail={TabDetails()} />\r\n                                            : \"\"}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='tab-head'>\r\n                                    <ul>\r\n                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                            onClick={() => props.changePropertyView(1)}>\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                            <span>\r\n                                                {props.intl.formatMessage({ id: \"IDS_Test\" })}\r\n                                            </span>\r\n                                        </li>\r\n                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                            onClick={() => props.changePropertyView(2)}>\r\n                                            <FontAwesomeIcon icon={faComments} />\r\n                                            <span>\r\n                                                {props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            </span>\r\n                                        </li>\r\n                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                            onClick={() => props.changePropertyView(3)}>\r\n                                            <FontAwesomeIcon icon={faRecycle} />\r\n                                            <span>\r\n                                                {props.intl.formatMessage({ id: \"IDS_REPEAT\" })}\r\n                                            </span>\r\n                                        </li>\r\n                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 4 ? 'active' : \"\"}`}\r\n                                            onClick={() => props.changePropertyView(4)}>\r\n                                            <FontAwesomeIcon icon={faFlag} />\r\n                                            <span>\r\n                                                {props.intl.formatMessage({ id: \"IDS_ENFORCERESULT\" })}\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                                <Row noGutters={true} bsPrefix=\"toolbar-top\">\r\n                                    <Col className=\"parent-port-height\">\r\n                                        <ListWrapper className={`vertical-tab-top ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n\r\n                                            <Col className={`tab-left-area p-0  ${props.activeTabIndex\r\n                                                ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                                <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\r\n                                                    <div className=\"center-area mt-3 mb-0 mx-4\">\r\n                                                        <Row className='d-flex pt-0'>\r\n                                                            <Col md={6}>\r\n                                                                <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                                                    {'+'} <FormattedMessage id=\"IDS_GROUP\" defaultMessage=\"Group\" />\r\n                                                                </Button>\r\n                                                                <Button onClick={() => props.resetRule()}>\r\n                                                                    <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md={12} className=\"ml-0 mr-0\">\r\n\r\n                                                                {props.addGroupList.length > 0 ?\r\n                                                                    <>\r\n                                                                        <BuilderBorder className='border-0 mb-0'>    {\r\n                                                                            createGroupRules()}   </BuilderBorder>\r\n                                                                    </>\r\n\r\n                                                                    : <></>}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>  \r\n                                            <div md={6} className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab vertical-tab-expand ${props.activeTabIndex\r\n                                                ? 'active' : \"\"}`} >\r\n                                                <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                                                    ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                                                    <span className={` vertical-tab-close ${props.activeTabIndex\r\n                                                        ? 'active' : \"\"}`} onClick={() => props.changePropertyView(0)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                                    <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                                                        ? 'active' : \"\"}`}>\r\n                                                        <h4 className='inner_h4'>\r\n                                                            {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                                                        </h4>\r\n                                                        {props.activeTabIndex && props.activeTabIndex\r\n                                                            ?\r\n                                                            <CustomTabs activeKey={props.activeTestTab\r\n                                                            } tabDetail={TabDetails()} />\r\n                                                            : \"\"}\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='tab-head'>\r\n                                                    <ul>\r\n                                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                                            onClick={() => props.changePropertyView(1)}>\r\n                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                            <span>\r\n                                                                {props.intl.formatMessage({ id: \"IDS_Test\" })}\r\n                                                            </span>\r\n                                                        </li>\r\n                                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                                            onClick={() => props.changePropertyView(2)}>\r\n                                                            <FontAwesomeIcon icon={faComments} />\r\n                                                            <span>\r\n                                                                {props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                            </span>\r\n                                                        </li>\r\n                                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                                            onClick={() => props.changePropertyView(3)}>\r\n                                                            <FontAwesomeIcon icon={faRecycle} />\r\n                                                            <span>\r\n                                                                {props.intl.formatMessage({ id: \"IDS_REPEAT\" })}\r\n                                                            </span>\r\n                                                        </li>\r\n                                                        <li className={`${props.activeTabIndex && props.activeTabIndex == 4 ? 'active' : \"\"}`}\r\n                                                            onClick={() => props.changePropertyView(4)}>\r\n                                                            <FontAwesomeIcon icon={faFlag} />\r\n                                                            <span>\r\n                                                                {props.intl.formatMessage({ id: \"IDS_ENFORCERESULT\" })}\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <span className='tab-click-toggle-btn'>\r\n                                                        <CustomSwitch\r\n                                                            // label={\"Popup Nav\"}\r\n                                                            label={props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                            type=\"switch\"\r\n                                                            name={\"PopupNav\"}\r\n                                                            onChange={(event) => props.onInputSwitchOnChange(event)}\r\n                                                            defaultValue={props.enablePropertyPopup}\r\n                                                            isMandatory={false}\r\n                                                            required={true}\r\n                                                            checked={props.enablePropertyPopup}\r\n                                                        />\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ListWrapper>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListWrapper > */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {\r\n                                props.modalParameterPopup ?\r\n                                    <SlideOutModal\r\n                                        show={props.modalParameterPopup}\r\n                                        closeModal={props.closeModalShow}\r\n                                        //operation={props.action}\r\n                                        esign={false}\r\n                                        inputParam={{}}\r\n                                        screenName={'IDS_RESULTENTRY'}\r\n                                        onSaveClick={props.modalsaveClick}\r\n                                        //hideSave={this.props.Login.screenName === \"IDS_VIEWRULE\" || this.props.Login.screenName === \"IDS_VIEWOUTCOME\" || this.props.Login.screenName === \"IDS_SUBCODERESULT\" ? true : false}\r\n                                        // size={\"lg\"}\r\n                                        selectedRecord={props.selectedRecord || {}}\r\n                                        addComponent={\r\n                                            <TestGroupResultEntry\r\n                                                onKeyPress={onKeyPress}\r\n                                                parameterResults={props.selectedRecord.ParameterRulesEngine || []}\r\n                                                screenName={'IDS_ADDTEST'}\r\n                                                PredefinedValues={props.PredefinedValues}\r\n                                                onResultInputChange={props.onResultInputChange}\r\n                                                onGradeEvent={props.onGradeEvent}\r\n                                                gradeValues={props.gradeValues || []}\r\n                                                selectedResultGrade={props.selectedRecord.selectedResultGrade || []}\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                    :\r\n                                    props.openModalPopup &&\r\n                                    <ModalShow\r\n                                        modalShow={true}\r\n                                        // size={props.activeTabIndex === 1 && (props.action === 'IDS_ADDPARAMETER' || props.action === 'IDS_ADDTEST') ? 'lg' : \"\"}\r\n                                        modalTitle={props.action === 'IDS_ADDPARAMETER' ? props.intl.formatMessage({ id: 'IDS_ADDPARAMETER' }) :\r\n                                            props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' :\r\n                                                props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDREPORTCOMMENTS' }) :\r\n                                                    props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDTESTCOMMENTS' })\r\n                                                        : props.action === 'IDS_ADDTEST' ? props.activeTabIndex == 3 ? props.intl.formatMessage({ id: 'IDS_ADDREPEATTEST' }) :\r\n                                                            props.intl.formatMessage({ id: 'IDS_ADDTEST' }) :\r\n                                                            props.intl.formatMessage({ id: 'IDS_ADDOUTSOURCESITE' })}\r\n\r\n                                        closeModal={props.closeModalShow}\r\n                                        onSaveClick={props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick}\r\n                                        // validateEsign={this.validateEsign}\r\n                                        selectedRecord={props.selectedRecord}\r\n                                        mandatoryFields={mandatoryFields}\r\n                                        modalBody={\r\n\r\n                                            props.openmodalsavePopup === true ?\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormInput\r\n                                                            label={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                                                            name={`srulename`}\r\n                                                            placeholder={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                                                            type=\"text\"\r\n                                                            maxLength={100}\r\n                                                            required={false}\r\n                                                            isMandatory={true}\r\n                                                            value={props.selectedRecord[\"srulename\"] || \"\"}\r\n                                                            onChange={(event) => props.onInputChange(event)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    {/* <Col md={12}>\r\n                                                <FormNumericInput\r\n                                                    name={'nruleexecorder'}\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_SORTORDER\" })}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SORTORDER\" })}\r\n                                                    value={props.selectedRecord[\"nruleexecorder\"] ? props.selectedRecord[\"nruleexecorder\"] : \"\"}\r\n                                                    type=\"text\"\r\n                                                    strict={true}\r\n                                                    maxLength={10}\r\n                                                    noStyle={true}\r\n                                                    onChange={(event) => props.onRuleNumericInputOnChange(event, 'nruleexecorder')} \r\n                                                    min={0}\r\n                                                    isMandatory={true}\r\n                                                    className=\"form-control\" \r\n                                                    required={false}\r\n                                                />\r\n                                            </Col> */}\r\n                                                </Row>\r\n                                                :\r\n                                                props.activeTabIndex == 1 ?\r\n                                                    <Col md={12}>\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestcode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testInitiateTestCombo || []}\r\n                                                                    optionId='ntestgrouptestcode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={props.action === 'IDS_ADDTEST'\r\n                                                                        ? props.modalParameterPopup ? true : false : true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            {\r\n                                                                props.action === 'IDS_ADDPARAMETER'\r\n                                                                    || props.action === 'IDS_ADDTEST'\r\n                                                                    ?\r\n                                                                    // <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\r\n                                                                    <TestGroupResultEntry\r\n                                                                        parameterResults={props.selectedRecord.ParameterRulesEngine || []}\r\n                                                                        screenName={'IDS_ADDTEST'}\r\n                                                                        PredefinedValues={props.PredefinedValues}\r\n                                                                        onResultInputChange={props.onResultInputChange}\r\n                                                                        onGradeEvent={props.onGradeEvent}\r\n                                                                        gradeValues={props.gradeValues || []}\r\n                                                                        selectedResultGrade={props.selectedRecord.selectedResultGrade || []}\r\n                                                                    />\r\n                                                                    // </div>\r\n                                                                    : \"\"\r\n                                                            }\r\n                                                            {/* <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ntestgrouptestparametercode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.testGroupTestParameterRulesEngine || []}\r\n                                                            optionId='ntestgrouptestparametercode'\r\n                                                            optionValue='stestparametersynonym'\r\n                                                            value={props.selectedRecord[\"ntestgrouptestparametercode\"] && props.selectedRecord[\"ntestgrouptestparametercode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestparametercode')}\r\n                                                            isMandatory={true}\r\n                                                            isDisabled={false}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col> */}\r\n                                                        </Row>\r\n\r\n                                                        {(\r\n                                                            props.action === 'IDS_ADDSITE'// || props.action === 'IDS_ADDTEST'\r\n                                                                ? true : false\r\n                                                        )\r\n                                                            ?\r\n                                                            <Row>\r\n                                                                <Col md={12}>\r\n                                                                    <FormSelectSearch\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\r\n                                                                        // formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                        isSearchable={true}\r\n                                                                        name={\"nfromsitecode\"}\r\n                                                                        showOption={true}\r\n                                                                        options={props.siteList || []}\r\n                                                                        optionId='nfromsitecode'\r\n                                                                        optionValue='ssitename'\r\n                                                                        isMandatory={true}\r\n                                                                        value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\r\n                                                                        onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\r\n                                                                    //  isMandatory={true}\r\n                                                                    ></FormSelectSearch>\r\n                                                                </Col>\r\n                                                                <Col md={12}>\r\n                                                                    <FormSelectSearch\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\r\n                                                                        //    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                        isSearchable={true}\r\n                                                                        name={\"ntositecode\"}\r\n                                                                        showOption={true}\r\n                                                                        options={props.siteList || []}\r\n                                                                        optionId='ntositecode'\r\n                                                                        optionValue='ssitename'\r\n                                                                        isMandatory={true}\r\n                                                                        value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\r\n                                                                        onChange={value => props.onmodalComboChange(value, 'ntositecode')}\r\n                                                                    //  isMandatory={true}\r\n                                                                    ></FormSelectSearch>\r\n                                                                </Col>\r\n                                                            </Row> : \"\"\r\n                                                        }\r\n                                                    </Col>\r\n                                                    :\r\n                                                    props.activeTabIndex == 2 ?\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestcode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testCommentsTestCombo || []}\r\n                                                                    optionId='ntestgrouptestcode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTTYPE\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ncommenttypecode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.CommentType || []}\r\n                                                                    optionId='ncommenttypecode'\r\n                                                                    optionValue='scommenttype'\r\n                                                                    value={props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ncommenttypecode')}\r\n                                                                    isMandatory={true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ncommentsubtypecode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.CommentSubType || []}\r\n                                                                    optionId='ncommentsubtypecode'\r\n                                                                    optionValue='scommentsubtype'\r\n                                                                    value={props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ncommentsubtypecode')}\r\n                                                                    isMandatory={true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            {props.selectedRecord[\"ncommentsubtypecode\"] ?\r\n                                                                props.isneedsgeneralcomments === true ?\r\n                                                                    <Col md={12}>\r\n                                                                        <FormTextarea\r\n                                                                            name={\"sgeneralcomments\"}\r\n                                                                            label={props.intl.formatMessage({ id: \"IDS_GENERALCOMMENTS\" })}\r\n                                                                            type=\"text\"\r\n                                                                            value={props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\"}\r\n                                                                            // isMandatory={control.mandatory}\r\n                                                                            // required={control.mandatory}\r\n                                                                            onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                            rows=\"2\"\r\n                                                                            maxLength={\"255\"}\r\n                                                                            isDisabled={false}\r\n                                                                            isMandatory={true}\r\n                                                                        />\r\n                                                                    </Col> : <Col md={12}>\r\n                                                                        <FormSelectSearch\r\n                                                                            formLabel={props.intl.formatMessage({ id: \"IDS_PREDEFINEDNAME\" })}\r\n                                                                            isSearchable={true}\r\n                                                                            name={\"nsampletestcommentscode\"}\r\n                                                                            showOption={true}\r\n                                                                            options={props.predefcomments || []}\r\n                                                                            optionId='nsampletestcommentscode'\r\n                                                                            optionValue='spredefinedname'\r\n                                                                            value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                                                            onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                                                            isMandatory={true}\r\n                                                                        ></FormSelectSearch>\r\n                                                                        {/* <FormInput\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                    name={`sdescription`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={true}\r\n                                                                    value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                                /> */}\r\n                                                                        <FormTextarea\r\n                                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                            name={`sdescription`}\r\n                                                                            type=\"text\"\r\n                                                                            required={false}\r\n                                                                            isMandatory={true}\r\n                                                                            value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                            onChange={(event) => props.onInputChange(event)}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                : \"\"\r\n                                                            }\r\n\r\n                                                        </Row>\r\n                                                        : props.activeTabIndex == 3 ?\r\n                                                            <Row>\r\n                                                                <Col md={12}>\r\n                                                                    <FormSelectSearch\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                        isSearchable={true}\r\n                                                                        name={\"ntestgrouptestcode\"}\r\n                                                                        showOption={true}\r\n                                                                        options={props.testRepeatTestCombo || []}\r\n                                                                        optionId='ntestgrouptestcode'\r\n                                                                        optionValue='stestparametersynonym'\r\n                                                                        value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                        onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                        isMandatory={true}\r\n                                                                        isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                                    ></FormSelectSearch>\r\n                                                                </Col>\r\n                                                                <Col md={12}>\r\n                                                                    <FormNumericInput\r\n                                                                        name={'nrepeatcountno'}\r\n                                                                        label={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                        value={props.selectedRecord[\"nrepeatcountno\"] ? props.selectedRecord[\"nrepeatcountno\"] : \"\"}\r\n                                                                        type=\"text\"\r\n                                                                        strict={true}\r\n                                                                        maxLength={10}\r\n                                                                        noStyle={true}\r\n                                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'nrepeatcountno')}\r\n                                                                        //  precision={2}\r\n                                                                        min={0}\r\n                                                                        max={9}\r\n                                                                        className=\"form-control\"\r\n                                                                        isMandatory={false}\r\n                                                                        required={false}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </Row> : props.activeTabIndex == 4 ?\r\n                                                                <Row>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormSelectSearch\r\n                                                                            formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                            isSearchable={true}\r\n                                                                            name={\"ntestgrouptestcode\"}\r\n                                                                            showOption={true}\r\n                                                                            options={props.testenforceTestCombo || []}\r\n                                                                            optionId='ntestgrouptestcode'\r\n                                                                            optionValue='stestparametersynonym'\r\n                                                                            value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                            isMandatory={true}\r\n                                                                            isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                                        ></FormSelectSearch>\r\n                                                                    </Col>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormSelectSearch\r\n                                                                            formLabel={props.intl.formatMessage({ id: \"IDS_OPTIONALPARAMETERS\" })}\r\n                                                                            isSearchable={true}\r\n                                                                            name={\"ntestgrouptestparametercode\"}\r\n                                                                            showOption={true}\r\n                                                                            options={props.testGroupTestParameterRulesEngine || []}\r\n                                                                            optionId='ntestgrouptestparametercode'\r\n                                                                            optionValue='stestparametersynonym'\r\n                                                                            value={props.selectedRecord[\"ntestgrouptestparametercode\"] && props.selectedRecord[\"ntestgrouptestparametercode\"] || \"\"}\r\n                                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestparametercode')}\r\n                                                                            isMandatory={true}\r\n                                                                            isDisabled={false}\r\n                                                                        ></FormSelectSearch>\r\n                                                                    </Col>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormTextarea\r\n                                                                            name=\"senforceresult\"\r\n                                                                            label={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                            placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                            value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                                            rows=\"2\"\r\n                                                                            isMandatory={true}\r\n                                                                            required={false}\r\n                                                                            maxLength={255}\r\n                                                                            onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                    <Col md={12}>\r\n                                                                        <FormSelectSearch\r\n                                                                            formLabel={props.intl.formatMessage({ id: \"IDS_RESULTFLAG\" })}\r\n                                                                            isSearchable={true}\r\n                                                                            name={\"ngradecode\"}\r\n                                                                            showOption={true}\r\n                                                                            options={props.GradeList || []}\r\n                                                                            optionId='ngradecode'\r\n                                                                            optionValue='sgradename'\r\n                                                                            value={props.selectedRecord[\"ngradecode\"] && props.selectedRecord[\"ngradecode\"] || \"\"}\r\n                                                                            onChange={value => props.onmodalComboChange(value, 'ngradecode')}\r\n                                                                            isMandatory={true}\r\n                                                                            isDisabled={false}\r\n                                                                        ></FormSelectSearch>\r\n                                                                    </Col>\r\n                                                                </Row> : \"\"\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                    </div></div></div>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestGroupRule);"]},"metadata":{},"sourceType":"module"}