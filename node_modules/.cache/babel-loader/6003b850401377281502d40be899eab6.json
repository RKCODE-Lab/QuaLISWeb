{"ast":null,"code":"import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../form-input/form-input.component';var AddSynonym=function AddSynonym(props){return/*#__PURE__*/React.createElement(Row,{className:\"pt-3\"},/*#__PURE__*/React.createElement(Col,{md:12},props.languages.map(function(lang){return/*#__PURE__*/React.createElement(FormInput,{label:lang.label,name:lang.value,type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,'synonym');},placeholder:lang.slanguagename,value:props.selectedFieldRecord.displayname&&props.selectedFieldRecord.displayname[lang.value]?props.selectedFieldRecord.displayname[lang.value]:\"\",isMandatory:true,required:true,maxLength:\"30\"});})));};export default injectIntl(AddSynonym);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/AddSynonym.jsx"],"names":["React","Col","Row","injectIntl","FormInput","AddSynonym","props","languages","map","lang","label","value","event","onInputOnChange","slanguagename","selectedFieldRecord","displayname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,SAAAC,IAAI,qBACrB,oBAAC,SAAD,EACI,KAAK,CAAEA,IAAI,CAACC,KADhB,CAEI,IAAI,CAAED,IAAI,CAACE,KAFf,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,eAAN,CAAsBD,KAAtB,CAA6B,SAA7B,CAAX,EAJd,CAKI,WAAW,CAAEH,IAAI,CAACK,aALtB,CAMI,KAAK,CAAER,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,EAAyCV,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,CAAsCP,IAAI,CAACE,KAA3C,CAAzC,CAA6FL,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,CAAsCP,IAAI,CAACE,KAA3C,CAA7F,CAAiJ,EAN5J,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,IATf,EADqB,EAAxB,CADL,CADJ,CADJ,CAoBH,CArBD,CAsBA,cAAeR,CAAAA,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nconst AddSynonym = (props) => {\r\n    return (\r\n        <Row className='pt-3'>\r\n            <Col md={12}>\r\n                {props.languages.map(lang =>\r\n                    <FormInput\r\n                        label={lang.label}\r\n                        name={lang.value}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 'synonym')}\r\n                        placeholder={lang.slanguagename}\r\n                        value={props.selectedFieldRecord.displayname && props.selectedFieldRecord.displayname[lang.value] ? props.selectedFieldRecord.displayname[lang.value] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n                )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSynonym)"]},"metadata":{},"sourceType":"module"}