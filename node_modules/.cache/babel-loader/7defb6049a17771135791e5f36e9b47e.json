{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import React from'react';import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad,filterRecordBasedOnPrimaryKeyName,reArrangeArrays,childComboLoadForEdit,sortDataByParent,sortDataForDate}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{//RegistrationSubType, RegistrationType, \nSampleType,checkBoxOperation,orderType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';import{Operators,TextFilter,NumericFilter,// BooleanFilter,\nDateFilter// EnumFilter,\n//  EnumFilterProps,\n}from\"@progress/kendo-react-data-tools\";import{ComboBox}from\"@progress/kendo-react-dropdowns\";import{Utils as QbUtils}from\"@react-awesome-query-builder/ui\";import{leftArrowClass}from'@progress/kendo-react-layout';import{openModal}from'./ApprovalConfigAction';import ModalShow from'../components/ModalShow';export function addStbTimePoint(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData,selectedRecord,conditionalTestPackage,specBasedTestPackage,LoginProps){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList?columnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}):[],childcolumnlist:childColumnList?childColumnList:[],userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent//   conditionalTestPackage:true\n}));urlArray[2]=ComponentTestBySpec;}else{Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,nneedsubsample:Map[\"nneedsubsample\"],// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage});urlArray[2]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nallottedspeccode:Map[\"nallottedspeccode\"],// slno: Component ? Object.keys(Component).length + 1 : 1,\nspecBasedComponent:specBasedComponent//   specBasedTestPackage: specBasedTestPackage,\n//  conditionalTestPackage: conditionalTestPackage\n});urlArray[5]=TestPackageGet;var TestSectionGet=rsapi.post(\"/registration/getTestfromSection\",{nallottedspeccode:Map[\"nallottedspeccode\"],// slno: Component ? Object.keys(Component).length + 1 : 1,\nspecBasedComponent:specBasedComponent//   specBasedTestPackage: specBasedTestPackage,\n//  conditionalTestPackage: conditionalTestPackage\n});urlArray[6]=TestSectionGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];var TestSectionData=[];var selectedRecord1=newcomboData.selectedRecord;if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");// if (lstComponent.length > 0) {\n//     selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\n//     selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\n//     selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\n//     selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\n// }\n//Added by Dhanushya for jira ETICA-22\nif(lstComponent.length>0){if(Map[\"orderTypeCombCode\"]&&Map[\"orderTypeCombCode\"]===orderType.EXTERNAL){selectedRecord1['ncomponentcode']=_objectSpread({},lstComponent[0]);selectedRecord1[\"Sample Name\"]=selectedRecord1['ncomponentcode'].label;selectedRecord1[\"nspecsampletypecode\"]=selectedRecord1['ncomponentcode'].item.nspecsampletypecode;selectedRecord1[\"nneedsubsample\"]=Map.nneedsubsample;}else{selectedRecord1[\"nspecsampletypecode\"]=selectedRecord1['ncomponentcode']&&selectedRecord1['ncomponentcode'].item&&selectedRecord1['ncomponentcode'].item.nspecsampletypecode;selectedRecord1[\"nneedsubsample\"]=Map.nneedsubsample;}}}else{var PackageDataMap=constructOptionList(response[5].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");var testSectionDataMap=constructOptionList(response[6].data.TestSection||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);TestSectionData=testSectionDataMap.get(\"OptionList\");TestCombined=response[2].data;}var comboData1=newcomboData.comboData;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"||componentrow.inputtype===\"checkbox\"||componentrow.inputtype===\"predefineddropdown\"){if(componentrow['radiodefaultvalue']){if(componentrow.inputtype===\"checkbox\"){var val='';componentrow.radiodefaultvalue&&componentrow.radiodefaultvalue.length>0&&componentrow.radiodefaultvalue.map(function(x,i){val=val+(i===componentrow.radiodefaultvalue.length-1?x.label:x.label+',');});selectedRecord1[componentrow.label]=val;}else if(componentrow.inputtype===\"predefineddropdown\"){selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue:\"\";}else{selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue.label:\"\";}}else{if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}}}});var inputParam={ChildscreenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),screenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,childSubSampleColumnList:childColumnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,selectPackage:[],TestPackage:PackageData,TestSection:TestSectionData,selectSection:[],AllTest:TestCombined,AllSection:TestSectionData};//if (specBasedComponent) {\n//Added by Dhanushya for jira ETICA-22\nif(specBasedComponent&&selectedRecord1['ncomponentcode']!==undefined){dispatch(componentTest(selectedRecord1,false,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage,inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});}}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);return function(dispatch){if(!specBasedComponent){var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getTestfromDB\",_objectSpread(_objectSpread({nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1},Map),{},{// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent,conditionalTestPackage:true,specBasedTestPackage:specBasedTestPackage}));urlArray[0]=ComponentTestBySpec;var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[1]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[2]=dateService;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{//  nspecsampletypecode: selectedobject.nspecsampletypecode,\nnallottedspeccode:selectedRecord.nallottedspeccode.item.nallottedspeccode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[3]=TestPackageGet;var TestSectionGet=rsapi.post(\"/registration/getTestfromSection\",{//  nspecsampletypecode: selectedobject.nspecsampletypecode,\nnallottedspeccode:selectedRecord.nallottedspeccode.item.nallottedspeccode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[4]=TestSectionGet;Axios.all(urlArray).then(function(response){var TestCombined=[];var PackageData=[];var TestSectionData=[];//  if (!specBasedTestPackage) {\nTestCombined=response[0].data;// } \n// else {\nvar PackageDataMap=constructOptionList(response[3].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");var TestSectionDataMap=constructOptionList(response[4].data.TestSection||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);TestSectionData=TestSectionDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//    dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n//} \n// }\nvar selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"||componentrow.inputtype===\"checkbox\"||componentrow.inputtype===\"predefineddropdown\"){if(componentrow['radiodefaultvalue']){if(componentrow.inputtype===\"checkbox\"){var val='';componentrow.radiodefaultvalue&&componentrow.radiodefaultvalue.length>0&&componentrow.radiodefaultvalue.map(function(x,i){val=val+(i===componentrow.radiodefaultvalue.length-1?x.label:x.label+',');});selectedRecord1[componentrow.label]=val;}else if(componentrow.inputtype===\"predefineddropdown\"){selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue:\"\";}else{selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue.label:\"\";}}else{if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}}}});// if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\n//     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\n//     let containerType = SubSamplecomboData['ContainerType'] || []\n//     let containerList = []\n//     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\n//     containerType.map(x => {\n//         if (x.item.jsondata.nportalordercode === nportalordercode) {\n//             containerList.push(x)\n//         }\n//     })\n//     SubSamplecomboData['Container Type'] = containerList\n// }\ndispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),screenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),TestCombined:TestCombined,TestPackage:PackageData,TestSection:TestSectionData,selectSection:[]}});});}else{var _urlArray=[];var _ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent}));_urlArray[0]=_ComponentTestBySpec;var _currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});_urlArray[1]=_currentDate;var _dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:SubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});_urlArray[2]=_dateService;Axios.all(_urlArray).then(function(response){var selectedRecord1=newcomboData.selectedRecord;// const lstComponent =  response.data.lstComponent\nvar lstComponent=response[0].data.lstComponent;//filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\nvar lstComponentMap=constructOptionList(lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");if(lstComponent.length>0){// selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\n// selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\n// selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\n// selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\n//Added by Dhanushya for jira ETICA-22\nif(Map[\"orderTypeCombCode\"]&&Map[\"orderTypeCombCode\"]===orderType.EXTERNAL){selectedRecord1['ncomponentcode']=_objectSpread({},lstComponent[0]);selectedRecord1[\"Sample Name\"]=selectedRecord1['ncomponentcode'].label;selectedRecord1[\"nspecsampletypecode\"]=lstComponent[0].item.nspecsampletypecode;selectedRecord1[\"nneedsubsample\"]=Map.nneedsubsample;}else{selectedRecord1[\"nspecsampletypecode\"]=lstComponent[0].item.nspecsampletypecode;selectedRecord1[\"nneedsubsample\"]=Map.nneedsubsample;}}SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[1].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?new Date(response[2].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"||componentrow.inputtype===\"checkbox\"||componentrow.inputtype===\"predefineddropdown\"){if(componentrow['radiodefaultvalue']){if(componentrow.inputtype===\"checkbox\"){var val='';componentrow.radiodefaultvalue&&componentrow.radiodefaultvalue.length>0&&componentrow.radiodefaultvalue.map(function(x,i){val=val+(i===componentrow.radiodefaultvalue.length-1?x.label:x.label+',');});selectedRecord1[componentrow.label]=val;}else if(componentrow.inputtype===\"predefineddropdown\"){selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue:\"\";}else{selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue.label:\"\";}}else{if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}}}});var inputParam={ChildscreenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),screenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,saveContinueData:_objectSpread({},selectedRecord1),TestCombined:[],selectedStbTimePointTestData:[],selectPackage:[],selectSection:[]};if(specBasedComponent){dispatch(componentTest(selectedRecord1,false,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage,inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});}});}};}}export function componentTest(selectedobject,Reg,specBasedComponent,Component,specBasedTestPackage,conditionalTestPackage,inputParam){return function(dispatch){dispatch(initRequest(true));var urlArray=[];Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage,nneedsubsample:selectedobject.nneedsubsample});urlArray[0]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[1]=TestPackageGet;var TestSectionGet=rsapi.post(\"/registration/getTestfromSection\",{nspecsampletypecode:selectedobject.nspecsampletypecode,slno:Component?Object.keys(Component).length+1:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:conditionalTestPackage});urlArray[2]=TestSectionGet;Axios.all(urlArray).then(function(response){var PackageData=[];var TestData=[];var TestSectionData=[];// if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[1].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");var testSectionDataMap=constructOptionList(response[2].data.TestSection||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);TestSectionData=testSectionDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n// } \n//   }\n//    else {\nTestData=response[0].data;//  }\n//let Test = [];\n// Test[selectedobject.slno] = TestData;\nvar Map={};if(Reg){Map[\"selectedRecord\"]=selectedobject;}else{Map[\"selectComponent\"]=selectedobject;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread(_objectSpread({},inputParam),{},{TestCombined:TestData,AllTest:TestData,TestPackage:PackageData},Map),{},{loading:false,selectedStbTimePointTestData:[],selectPackage:[],TestSection:TestSectionData,selectSection:[],AllSection:TestSectionData})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertStbStudyPlan(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var requestUrl='';if(inputParam.isFileupload){requestUrl=rsapi.post(\"/stabilitystudyplan/createRegistrationWithFile\",inputParam.formData);}else{requestUrl=rsapi.post(\"/stabilitystudyplan/createStabilityStudyPlan\",inputParam.inputData);}return requestUrl//  rsapi.post(\"/registration/createRegistration\", inputParam.formData)\n.then(function(response){if(response.data.rtn===\"Success\"){var _objectSpread2;// if (response.data[\"isPortalData\"] && response.data[\"PortalStatus\"] && response.data[\"PortalStatus\"].length > 0) {\n//     dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"], inputParam));\n// }\nvar StabilityStudyPlanGet=updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"],masterData.StabilityStudyPlanGet,'Sample');var selectedStabilityStudyPlan=response.data[\"selectedStabilityStudyPlan\"];var StbTimePointGet=response.data[\"StbTimePointGet\"];var StbTimePointTestGet=response.data[\"StbTimePointTestGet\"];var selectedStbTimePoint=StbTimePointGet;StbTimePointTestGet=sortData(StbTimePointTestGet,\"nstbstudyplancode\",\"desc\");var selectedStbTimePointTest=StbTimePointTestGet.length>0?[StbTimePointTestGet[0]]:[];var regSampleExisted=inputParam.inputData&&inputParam.inputData.orderTypeValue===2?true:false;if(inputParam.inputData.nneedsubsample){StbTimePointGet=sortData(response.data[\"StbTimePointGet\"],'nstbstudyplancode','desc');selectedStbTimePoint=StbTimePointGet.length>0?[StbTimePointGet[0]]:[];StbTimePointTestGet=StbTimePointTestGet.filter(function(x){return x.nstbtimepointcode===selectedStbTimePoint[0].nstbtimepointcode;});selectedStbTimePointTest=StbTimePointTestGet.length>0?response.data[\"selectedStbTimePointTest\"]:[];}if(inputParam.multipleselectionFlag){selectedStabilityStudyPlan=updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"],masterData.selectedStabilityStudyPlan);updatedObjectWithNewElements(response.data[\"selectedStbTimePoint\"],masterData.StbTimePointGet);updatedObjectWithNewElements(response.data[\"selectedStbTimePointTest\"],masterData.StbTimePointTestGet);StbTimePointGet=masterData.StbTimePointGet;StbTimePointTestGet=masterData.StbTimePointTestGet;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedStabilityStudyPlan:selectedStabilityStudyPlan,selectedStbTimePoint:selectedStbTimePoint,selectedStbTimePointTest:selectedStbTimePointTest,StbTimePointGet:StbTimePointGet,StbTimePointTestGet:StbTimePointTestGet,StabilityStudyPlanGet:StabilityStudyPlanGet});if(masterData[\"kendoFilterList\"]!==undefined){masterData[\"kendoFilterList\"]=undefined;}var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread2={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},selectedStbTimePointTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread2,\"selectedRecord\",{}),_defineProperty(_objectSpread2,\"selectedStbTimePointTest\",[]),_defineProperty(_objectSpread2,\"Test\",[]),_defineProperty(_objectSpread2,\"selectedComponent\",{}),_defineProperty(_objectSpread2,\"subSampleDataGridList\",[]),_defineProperty(_objectSpread2,\"preregConfirmMessage\",undefined),_defineProperty(_objectSpread2,\"regSampleExisted\",regSampleExisted),_defineProperty(_objectSpread2,\"loadImportFileData\",false),_defineProperty(_objectSpread2,\"loadImportSampleCountData\",false),_defineProperty(_objectSpread2,\"skip\",0),_defineProperty(_objectSpread2,\"subsampleskip\",0),_defineProperty(_objectSpread2,\"testskip\",0),_defineProperty(_objectSpread2,\"isDynamicViewSlideOut\",false),_objectSpread2));inputParam.postParamList[0]['clearFilter']='yes';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});}}).catch(function(error){console.log(error);if(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,preregConfirmMessage:error.response.data.rtn,preregConfirmParam:{inputParam:inputParam,masterData:masterData},loading:false,showSample:undefined}});}else{toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,preregConfirmMessage:undefined}});}}});};}export function updatedObjectWithNewElements(oldList,newList,name){var newlistItem=newList;if(name==='Sample'){newlistItem.map(function(item,index){if(oldList[0].nstbstudyplancode===item.nstbstudyplancode){newlistItem.splice(index,1);// [newFirstElement].concat(array)\n}});newlistItem.unshift(oldList[0]);oldList=_toConsumableArray(newlistItem);}else if(name==='Test'){}else{oldList=[].concat(_toConsumableArray(newlistItem),_toConsumableArray(oldList));}return oldList;}export function insertExportStbStudyPlan(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/importStabilityStudyPlan\",inputParam.formData).then(function(response){if(response.data.rtn===\"Success\"){var _objectSpread3;var registrationList=[].concat(_toConsumableArray(response.data[\"StabilityStudyPlanGet\"]),_toConsumableArray(masterData.StabilityStudyPlanGet));var StabilityStudyPlanGet=registrationList;var selectedStabilityStudyPlan=response.data[\"selectedStabilityStudyPlan\"];var StbTimePointGet=response.data[\"StbTimePointGet\"];var StbTimePointTestGet=response.data[\"StbTimePointTestGet\"];var selectedStbTimePoint=StbTimePointGet;StbTimePointTestGet=sortData(StbTimePointTestGet,\"nstbstudyplancode\",\"desc\");var selectedStbTimePointTest=StbTimePointTestGet.length>0?[StbTimePointTestGet[0]]:[];var regSampleExisted=inputParam.inputData&&inputParam.inputData.orderTypeValue===2?true:false;if(inputParam.inputData.nneedsubsample){StbTimePointGet=sortData(response.data[\"StbTimePointGet\"],'nstbstudyplancode','desc');selectedStbTimePoint=StbTimePointGet.length>0?[StbTimePointGet[0]]:[];StbTimePointTestGet=StbTimePointTestGet.filter(function(x){return x.nstbtimepointcode===selectedStbTimePoint[0].nstbtimepointcode;});selectedStbTimePointTest=StbTimePointTestGet.length>0?response.data[\"selectedStbTimePointTest\"]:[];}if(inputParam.multipleselectionFlag){selectedStabilityStudyPlan=updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"],masterData.selectedStabilityStudyPlan);updatedObjectWithNewElements(response.data[\"selectedStbTimePoint\"],masterData.StbTimePointGet);updatedObjectWithNewElements(response.data[\"selectedStbTimePointTest\"],masterData.StbTimePointTestGet);StbTimePointGet=masterData.StbTimePointGet;StbTimePointTestGet=masterData.StbTimePointTestGet;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedStabilityStudyPlan:selectedStabilityStudyPlan,selectedStbTimePoint:selectedStbTimePoint,selectedStbTimePointTest:selectedStbTimePointTest,StbTimePointGet:StbTimePointGet,StbTimePointTestGet:StbTimePointTestGet,StabilityStudyPlanGet:StabilityStudyPlanGet});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread3={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},selectedStbTimePointTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread3,\"selectedRecord\",{}),_defineProperty(_objectSpread3,\"selectedStbTimePointTest\",[]),_defineProperty(_objectSpread3,\"Test\",[]),_defineProperty(_objectSpread3,\"selectedComponent\",{}),_defineProperty(_objectSpread3,\"subSampleDataGridList\",[]),_defineProperty(_objectSpread3,\"preregConfirmMessage\",undefined),_defineProperty(_objectSpread3,\"regSampleExisted\",regSampleExisted),_defineProperty(_objectSpread3,\"loadImportFileData\",false),_defineProperty(_objectSpread3,\"loadImportSampleCountData\",false),_objectSpread3));inputParam.postParamList[0]['clearFilter']='yes';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{toast.info(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,loadEsign:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var addMoreTests=function addMoreTests(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedStabilityStudyPlan&&inputParam.selectedStabilityStudyPlan.length>0){if(inputParam.selectedStbTimePoint&&inputParam.selectedStbTimePoint.length>0){value=inputParam.selectedStbTimePoint.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedStbTimePoint[0].nspecsampletypecode;});if(value){return toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}var selectedStabilityStudyPlan=inputParam.selectedStabilityStudyPlan;var findTransactionStatus=_toConsumableArray(new Set(selectedStabilityStudyPlan.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.RELEASED){var findApprovalVersion=_toConsumableArray(new Set(selectedStabilityStudyPlan.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedStabilityStudyPlan.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{inputParam[\"snspecsampletypecode\"]=inputParam.selectedStbTimePoint&&_toConsumableArray(new Set(inputParam.selectedStbTimePoint.map(function(x){return x.nspecsampletypecode;}))).join(\",\");dispatch(initRequest(true));var urlArray=[];var TestGet=rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam));urlArray[0]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getMoreTestPackage\",_objectSpread({},inputParam));urlArray[1]=TestPackageGet;var TestSectionGet=rsapi.post(\"/registration/getMoreTestSection\",_objectSpread({},inputParam));urlArray[2]=TestSectionGet;Axios.all(urlArray).then(function(response){var PackageData=[];var TestSectionData=[];var PackageDataMap=constructOptionList(response[1].data||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");var TestSectionDataMap=constructOptionList(response[2].data||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);TestSectionData=TestSectionDataMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{availableTest:response[0].data,TestCombined:response[0].data,AllTest:response[0].data,TestPackage:PackageData,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined,loadPrinter:false,TestSection:TestSectionData,AllSection:TestSectionData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(_this.props.formatMessage({id:error.response.data}));}});}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORRELEASEDSAMPLES\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}}else{toast.info(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};};export function addSubTimePoint(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode,specBasedComponent,specBasedTestPackage){return function(dispatch){var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent){var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",_objectSpread(_objectSpread({},Map),{},{specBasedComponent:specBasedComponent,userinfo:userinfo}));urlArray[2]=ComponentTestBySpec;}else{var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,conditionalTestPackage:true,nneedsubsample:Map[\"nneedsubsample\"]});urlArray[2]=TestGet;var TestPackageGet=rsapi.post(\"/registration/getTestfromTestPackage\",{nallottedspeccode:Map[\"nallottedspeccode\"],specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage});urlArray[5]=TestPackageGet;var TestSectionGet=rsapi.post(\"/registration/getTestfromSection\",{nallottedspeccode:Map[\"nallottedspeccode\"],specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage});urlArray[6]=TestSectionGet;}var currentDate=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userinfo});urlArray[3]=currentDate;var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:regSubSamplewithoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userinfo});urlArray[4]=dateService;dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList.filter(function(x){return x.inputtype!=='backendsearchfilter'&&x.inputtype!=='frontendsearchfilter'&&x.readonly!==true;}),response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent,undefined,userinfo.slanguagetypecode,userinfo);var TestCombined=[];var lstComponent=[];var PackageData=[];var TestSectionData=[];var selectedRecord1=newcomboData.selectedRecord;if(specBasedComponent){var lstComponentMap=constructOptionList(response[2].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);lstComponent=lstComponentMap.get(\"OptionList\");//Commented by Dhanushya for jira ETICA-22\n// if (lstComponent.length > 0) {\n//     selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\n//     selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\n//     selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\n//     selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\n// }\n}else{//if (specBasedTestPackage) {\nvar PackageDataMap=constructOptionList(response[5].data.TestPackage||[],\"ntestpackagecode\",\"stestpackagename\",undefined,undefined,true);PackageData=PackageDataMap.get(\"OptionList\");var TestSectionDataMap=constructOptionList(response[6].data.TestSection||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,true);TestSectionData=TestSectionDataMap.get(\"OptionList\");// if (PackageData.length === 0) {\n//     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \n// } \n// }\n// else {\nTestCombined=response[2].data;// }\n}var comboData1=newcomboData.comboData;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.loadcurrentdate){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?rearrangeDateFormat(userinfo,response[3].data):\"\";selectedRecord1[componentrow.label+\"value\"]=selectedRecord1[componentrow.label];}else if(componentrow.nperiodcode){selectedRecord1[componentrow.label+\"value\"]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;if(componentrow.loadselecteddate){selectedRecord1[componentrow.label]=response[4].data[componentrow.label]?new Date(response[4].data[componentrow.label][\"datevalue\"]):null;}//    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\n//    new Date(response[2].data[componentrow.label]):null;\n}else{selectedRecord1[componentrow.label+\"value\"]=new Date();}if(componentrow.hidebeforedate){selectedRecord1[componentrow.label+\"min\"]=selectedRecord1[componentrow.label+\"value\"];}if(componentrow.hideafterdate){selectedRecord1[componentrow.label+\"max\"]=selectedRecord1[componentrow.label+\"value\"];}}else if(componentrow.inputtype===\"radio\"||componentrow.inputtype===\"checkbox\"||componentrow.inputtype===\"predefineddropdown\"){if(componentrow['radiodefaultvalue']){if(componentrow.inputtype===\"checkbox\"){var val='';componentrow.radiodefaultvalue&&componentrow.radiodefaultvalue.length>0&&componentrow.radiodefaultvalue.map(function(x,i){val=val+(i===componentrow.radiodefaultvalue.length-1?x.label:x.label+',');});selectedRecord1[componentrow.label]=val;}else if(componentrow.inputtype===\"predefineddropdown\"){selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue:\"\";}else{selectedRecord1[componentrow.label]=componentrow.radiodefaultvalue?componentrow.radiodefaultvalue.label:\"\";}}else{if(componentrow.inputtype===\"radio\"){selectedRecord1[componentrow.label]=componentrow.radioOptions?componentrow.radioOptions.tags[0].text:\"\";}}}});var inputParam={screenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"}),showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent,openModal:true,loadPrinter:false,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,regchildSubSampleColumnList:regchildColumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData,specBasedComponent:specBasedComponent,specBasedTestPackage:specBasedTestPackage,TestPackage:PackageData,//ALPD-624\ntestskip:0,subsampleskip:0,TestSection:TestSectionData,AllTest:TestCombined,AllSection:TestSectionData};// if (specBasedComponent) {\n//Added by Dhanushya for jira ETICA-22\nif(specBasedComponent&&selectedRecord1['ncomponentcode']!==undefined){dispatch(componentTest(selectedRecord1,true,specBasedComponent,[],specBasedTestPackage,true,inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:_objectSpread({},inputParam)});}}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveTimePoint(inputParam){return function(dispatch){dispatch(initRequest(true));var requestUrl='';if(inputParam.isFileupload){requestUrl=rsapi.post(\"/stabilitystudyplan/createSubSampleWithFile\",inputParam.formData);}else{requestUrl=rsapi.post(\"/stabilitystudyplan/createTimePoint\",inputParam.inputData);}return requestUrl//  rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\n.then(function(response){// let StabilityStudyPlanGet = updatedObjectWithNewElement(response.data[\"selectedStabilityStudyPlan\"], inputParam.inputData.masterData.StabilityStudyPlanGet);\n// let selectedStabilityStudyPlan = response.data[\"selectedStabilityStudyPlan\"];\nvar StbTimePointGet=updatedObjectWithNewElement(inputParam.inputData.masterData.StbTimePointGet,response.data[\"selectedStbTimePoint\"]);var StbTimePointTestGet=response.data[\"StbTimePointTestGet\"];var selectedStbTimePoint=response.data[\"selectedStbTimePoint\"];// StbTimePointGet.length > 0 ? [StbTimePointGet[0]] : [];\nStbTimePointTestGet=sortData(StbTimePointTestGet,\"nstbstudyplancode\",\"desc\");var selectedStbTimePointTest=StbTimePointTestGet.length>0?[StbTimePointTestGet[0]]:[];var StbTimePointTestParameter=response.data[\"StbTimePointTestParameter\"];StbTimePointTestParameter=StbTimePointTestParameter?getSameRecordFromTwoArrays(StbTimePointTestParameter,selectedStbTimePointTest,'nstbtimepointtestcode'):StbTimePointTestParameter;var StabilityStudyPlanGet=replaceUpdatedObject(response.data[\"selectedStabilityStudyPlan\"],inputParam.inputData.masterData.StabilityStudyPlanGet,'nstbstudyplancode');var selectedStabilityStudyPlan=response.data[\"selectedStabilityStudyPlan\"];var masterData=_objectSpread({},inputParam.inputData.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedStbTimePoint:selectedStbTimePoint,selectedStbTimePointTest:selectedStbTimePointTest,StbTimePointGet:StbTimePointGet,StbTimePointTestGet:StbTimePointTestGet,StbTimePointTestParameter:StbTimePointTestParameter,selectedStabilityStudyPlan:selectedStabilityStudyPlan,StabilityStudyPlanGet:StabilityStudyPlanGet});var respObject={masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false,showConfirmAlert:false,subSampleConfirmMessage:undefined};inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));//    dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         masterData,\n//         openModal: false,\n//         loadEsign: false,\n//         loading: false,\n//         showSample: undefined,\n//         selectedRecord: {},\n//         loadRegSubSample:false\n//     }\n// });\n}).catch(function(error){// console.log(error);\n// toast.error(error.message);\n// dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\nif(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,subSampleConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,subSampleConfirmMessage:error.response.data.rtn,subSampleConfirmParam:{inputParam:inputParam},loading:false}});}else if(error.response.data.rtn){toast.warn(intl.formatMessage({id:error.response.data.rtn}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,subSampleConfirmMessage:undefined}});}}});};}export var createRegTest=function createRegTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _respObject;var StbTimePointTestGet=updatedObjectWithNewElements(masterData[\"StbTimePointTestGet\"],response.data[\"StbTimePointTestGet\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{StbTimePointTestGet:sortData(StbTimePointTestGet,\"descending\",\"nstbtimepointtestcode\"),StbTimePointGet:sortData(masterData[\"StbTimePointGet\"],\"descending\",\"nstbtimepointcode\"),selectedStbTimePointTest:response.data[\"selectedStbTimePointTest\"],//  selectedStbTimePoint: response.data[\"StbTimePointGet\"],\nselectedStbTimePoint:response.data[\"selectedStbTimePoint\"],RegistrationParameter:response.data.RegistrationParameter,StabilityStudyPlanGet:replaceUpdatedObject(response.data.selectedStabilityStudyPlan,masterData.StabilityStudyPlanGet,'nstbstudyplancode')});var respObject=(_respObject={masterData:masterData},_defineProperty(_respObject,modalName,false),_defineProperty(_respObject,\"loading\",false),_defineProperty(_respObject,\"loadChildTest\",false),_defineProperty(_respObject,\"showSample\",undefined),_defineProperty(_respObject,\"openModal\",false),_defineProperty(_respObject,\"selectedRecord\",{}),_defineProperty(_respObject,\"showConfirmAlert\",false),_defineProperty(_respObject,\"createTestConfirmMessage\",undefined),_respObject);inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='no';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){if(error.response.status===500){dispatch({type:DEFAULT_RETURN,payload:{loading:false,createTestConfirmMessage:undefined}});toast.error(error.message);}else{if(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,createTestConfirmMessage:error.response.data.rtn,createTestConfirmParam:{inputParam:inputParam,masterData:masterData,modalName:modalName},//[modalName]: false,\nloading:false,loadChildTest:true,showSample:undefined//openModal: false,\n//selectedRecord: {}\n}});}else{var _payload;dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,modalName,false),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"loadChildTest\",false),_defineProperty(_payload,\"showSample\",undefined),_defineProperty(_payload,\"openModal\",false),_defineProperty(_payload,\"selectedRecord\",{}),_defineProperty(_payload,\"createTestConfirmMessage\",undefined),_payload)});toast.info(error.response.data.rtn);}}});};};export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"stabilitystudyplan/getStabilityStudyPlanByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined,regSampleExisted:false,activeTabIndex:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function getStabilityStudyPlanByFilterSubmit(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"stabilitystudyplan/getStabilityStudyPlanByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined,regSampleExisted:false,activeTabIndex:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function getTimePointDetail(inputData,isServiceRequired,isParentValue){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode||-1,nregsubtypecode:inputData.nregsubtypecode||-1,nstbstudyplancode:inputData.nstbstudyplancode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode||-1,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,selectedPreregno:inputData.selectedStabilityStudyPlan&&inputData.selectedStabilityStudyPlan.length>0?inputData.selectedStabilityStudyPlan.map(function(item){return item.nstbstudyplancode;}).join(\",\"):null,selectedTransactionsamplecode:inputData.selectedStabilityStudyPlan&&inputData.selectedStabilityStudyPlan.length>1&&inputData.masterData.selectedStbTimePoint?inputData.masterData.selectedStbTimePoint.map(function(item){return item.nstbtimepointcode;}).join(\",\"):null};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"stabilitystudyplan/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data,\"descending\",\"nstbstudyplancode\");response.data['StbTimePointGet']=sortDataByParent(response.data['StbTimePointGet'],inputData.sample,\"nstbstudyplancode\");var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedStbTimePointTest||[];if(subSample){var oldselectedStbTimePoint=inputData.masterData.selectedStbTimePoint;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"nstbstudyplancode\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStabilityStudyPlan:inputData.selectedStabilityStudyPlan,selectedPreregno:inputData.nstbstudyplancode,selectedStbTimePoint:inputData.masterData.StbTimePointGet.length>0?[inputData.masterData.StbTimePointGet[0]]:[]});masterData=_objectSpread(_objectSpread({},masterData),{},{selectedStbTimePointTest:masterData.StbTimePointTestGet.length>0?[masterData.StbTimePointTestGet[0]]:[]});var testskip=inputData.testskip,testtake=inputData.testtake,subsampleskip=inputData.subsampleskip,subsampletake=inputData.subsampletake;testskip=0;subsampleskip=0;skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}if(inputData.masterData.selectedStabilityStudyPlan&&inputData.sampleGridDataState&&inputData.masterData.selectedStabilityStudyPlan.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}// let inputParam = { attachmentskip: undefined }\nif(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}// Start of ALPD-4130 on Save Additional Filter - ATE-241\nvar multifilterInfo={};if(inputData.multiFilterLoad!==undefined){if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";}multifilterInfo={multiFilterLoad:inputData.multiFilterLoad,openModal:inputData.openModal,searchSampleRef:inputData.searchSampleRef,searchSubSampleRef:inputData.searchSubSampleRef,searchTestRef:inputData.searchTestRef,testskip:inputData.testskip,subsampleskip:inputData.subsampleskip,skip:inputData.skip// filterColumnActive:true\n};}//  End of ALPD-4130 ATE-241\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{activeTabIndex:false},multifilterInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}// else {\n//     let bool = false;\n//     let skipInfo = {};\n//     let { testskip, testtake, subsampletake, subsampleskip } = inputData;\n//     let oldSelectedTest = inputData.masterData.selectedStbTimePointTest\n//     let oldselectedStbTimePoint = inputData.masterData.selectedStbTimePoint\n//     // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//     let isGrandChildGetRequired = false;\n//     let TestSelected = [];\n//     let subSampleSelected = [];\n//     if (inputData[\"statusNone\"]) {\n//         TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//         subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//     }\n//     else {\n//         TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//         subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//     }\n//     if (TestSelected.length > 0) {\n//         isGrandChildGetRequired = false;\n//     } else {\n//         isGrandChildGetRequired = true;\n//     }\n//     fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStabilityStudyPlan, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbstudyplancode\", inputData.removeElementFromArray);\n//     if (isGrandChildGetRequired) {\n//         let selectedStabilityStudyPlan = inputData.selectedStabilityStudyPlan;\n//         let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.StbTimePointTestGet, \"nstbtimepointtestcode\");\n//         let selectedStbTimePointTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\n//             inputData.masterData.StbTimePointTestGet.length > 0 ? [inputData.masterData.StbTimePointTestGet[0]] : [];\n//         let nstbtimepointtestcode = selectedStbTimePointTest.length > 0 ? selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\n//         let selectedStbTimePoint = inputData.masterData.StbTimePointGet\n//         if (subSample) {\n//             let filterselectedStbTimePoint = getSameRecordFromTwoArrays(oldselectedStbTimePoint, inputData.masterData.StbTimePointGet, \"nstbtimepointcode\");\n//             selectedStbTimePoint = filterselectedStbTimePoint.length > 0 ? filterselectedStbTimePoint : [inputData.masterData.StbTimePointGet[0]];\n//             if (inputData.masterData.StbTimePointGet.length <= inputData.subsampleskip) {\n//                 subsampleskip = 0;\n//                 skipInfo = { subsampletake, subsampleskip }\n//             }\n//         }\n//         // START ALPD-3671 VISHAKH\n//         let masterData = { ...inputData.masterData, selectedStabilityStudyPlan, selectedStbTimePoint, selectedStbTimePointTest }\n//         if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\n//             inputData.searchSubSampleRef.current.value = \"\";\n//             masterData['searchedSubSample'] = undefined\n//         }\n//         if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\n//             inputData.searchTestRef.current.value = \"\"\n//             masterData['searchedTest'] = undefined\n//         }\n//         // END ALPD-3671 VISHAKH\n//         if (inputData.masterData.StbTimePointTestGet.length <= inputData.testskip) {\n//             testskip = 0;\n//             bool = true\n//         }\n//         if (bool) {\n//             skipInfo = { ...skipInfo, testskip, testtake }\n//         }\n//         // inputData = {\n//         //     ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\n//         //     selectedStbTimePoint, checkBoxOperation: 3, skipInfo, masterData\n//         // }\n//         inputData = {\n//             ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\", \"RegistrationTestAttachment\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\n//             selectedStbTimePoint, checkBoxOperation: checkBoxOperation.SINGLESELECT, skipInfo, masterData\n//         }\n//         if (subSample) {\n//             if (selectedStbTimePointTest.length === 0) {\n//                 inputData[\"nstbstudyplancode\"] = selectedStbTimePoint.map(x => x.nstbstudyplancode).join(\",\")\n//                 inputData[\"nstbtimepointcode\"] = selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\")\n//                 // inputData[\"checkBoxOperation\"] = 3\n//                 inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT\n//                 inputData[\"childTabsKey\"] = [\"StbTimePointTestGet\"]\n//               //  dispatch(getRegistrationTestDetail(inputData, true));\n//             } else {\n//                 //dispatch(getTestChildTabDetailRegistration(inputData, true));\n//             }\n//         } else {\n//             //dispatch(getTestChildTabDetailRegistration(inputData, true));\n//         }\n//     }\n//     else {\n//         let masterData = {\n//             ...inputData.masterData,\n//             selectedStabilityStudyPlan: inputData.selectedStabilityStudyPlan,\n//             selectedPreregno: inputData.nstbstudyplancode,\n//             selectedStbTimePointTest: TestSelected ? TestSelected : inputData.masterData.StbTimePointTestGet.length > 0 ? [inputData.masterData.StbTimePointTestGet[0]] : [],\n//             // RegistrationTestComment,\n//             selectedStbTimePoint: subSampleSelected ? subSampleSelected : inputData.masterData.StbTimePointGet\n//         }\n//         // START ALPD-3671 VISHAKH\n//         if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\n//             inputData.searchSubSampleRef.current.value = \"\";\n//             masterData['searchedSubSample'] = undefined\n//         }\n//         if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\n//             inputData.searchTestRef.current.value = \"\"\n//             masterData['searchedTest'] = undefined\n//         }\n//         // END ALPD-3671 VISHAKH\n//         let subsamplecheck = true;\n//         if (subSample) {\n//             let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\n//             if (SubSampleSelected.length > 0) {\n//                 let filterselectedStbTimePoint = getSameRecordFromTwoArrays(oldselectedStbTimePoint, inputData.masterData.StbTimePointGet, \"nstbtimepointcode\");\n//                 if (filterselectedStbTimePoint.length === 0) {\n//                     let wholeSubSample = masterData.StbTimePointGet.map(b => b.nstbtimepointcode)\n//                     // START ALPD-3625 VISHAKH\n//                     // oldselectedStbTimePoint.forEach((test, index) => {\n//                     //     if (!wholeSubSample.includes(test.nstbtimepointcode)) {\n//                     //         oldselectedStbTimePoint.splice(index, 1)\n//                     //     }\n//                     //     return null;\n//                     // })\n//                     oldselectedStbTimePoint = oldselectedStbTimePoint.filter(item =>\n//                         wholeSubSample.includes(item.nstbtimepointcode)\n//                     );\n//                     // END ALPD-3625 VISHAKH\n//                     if (oldselectedStbTimePoint.length === 0 && wholeSubSample.length > 0\n//                         && masterData.selectedStbTimePointTest.length === 0) {\n//                         const selectedStbTimePoint1 = [inputData.masterData.StbTimePointGet[0]];\n//                         masterData = {\n//                             ...masterData,\n//                             selectedStbTimePoint: selectedStbTimePoint1,\n//                             selectedStbTimePointTest: []\n//                         }\n//                         inputData = { ...inputData, ...masterData }\n//                         inputData[\"nstbstudyplancode\"] = selectedStbTimePoint1.map(x => x.nstbstudyplancode).join(\",\")\n//                         inputData[\"nstbtimepointcode\"] = selectedStbTimePoint1.map(x => x.nstbtimepointcode).join(\",\")\n//                         // inputData[\"checkBoxOperation\"] = 3\n//                         inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT\n//                         inputData[\"childTabsKey\"] = [\"StbTimePointTestGet\"]\n//                         subsamplecheck = false;\n//                         //dispatch(getRegistrationTestDetail(inputData, true));\n//                     }\n//                 } else {\n//                     oldselectedStbTimePoint = filterselectedStbTimePoint\n//                 }\n//             } else {\n//                 let wholeSubSample = masterData.StbTimePointGet.map(b => b.nstbtimepointcode)\n//                 // START ALPD-3625 VISHAKH\n//                 // oldselectedStbTimePoint.forEach((test, index) => {\n//                 //     if (!wholeSubSample.includes(test.nstbtimepointcode)) {\n//                 //         oldselectedStbTimePoint.splice(index, 1)\n//                 //     }\n//                 //     return null;\n//                 // })\n//                 oldselectedStbTimePoint = oldselectedStbTimePoint.filter(item =>\n//                     wholeSubSample.includes(item.nstbtimepointcode)\n//                 );\n//                 // END ALPD-3625 VISHAKH\n//             }\n//             if (subsamplecheck) {\n//                 masterData = {\n//                     ...masterData,\n//                     selectedStbTimePoint: oldselectedStbTimePoint\n//                 }\n//             }\n//             if (inputData.masterData.StbTimePointGet.length <= inputData.subsampleskip) {\n//                 subsampleskip = 0;\n//                 skipInfo = { subsampleskip, subsampletake }\n//             }\n//         }\n//         let wholeTestList = masterData.StbTimePointTestGet.map(b => b.nstbtimepointtestcode)\n//         // START ALPD-3625 VISHAKH\n//         // oldSelectedTest.forEach((test, index) => {\n//         //     if (!wholeTestList.includes(test.nstbtimepointtestcode)) {\n//         //         oldSelectedTest.splice(index, 1)\n//         //     }\n//         //     return null;\n//         // })\n//         oldSelectedTest = oldSelectedTest.filter(item =>\n//             wholeTestList.includes(item.nstbtimepointtestcode)\n//         );\n//         // END ALPD-3625 VISHAKH\n//         let keepOld = false;\n//         let nstbtimepointtestcode;\n//         if (oldSelectedTest.length > 0) {\n//             keepOld = true\n//             masterData = {\n//                 ...masterData,\n//                 selectedStbTimePointTest: oldSelectedTest\n//             }\n//         } else {\n//             nstbtimepointtestcode = inputData.masterData.StbTimePointTestGet.length > 0 ? inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode : \"-1\"\n//         }\n//         masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, nstbtimepointtestcode, \"nstbtimepointtestcode\")\n//         masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, nstbtimepointtestcode, \"nstbtimepointtestcode\")\n//         let skipInfo = {};\n//         if (inputData.masterData.StbTimePointTestGet.length <= inputData.testskip) {\n//             testskip = 0;\n//             bool = true\n//         }\n//         if (bool) {\n//             skipInfo = { ...skipInfo, testskip, testtake }\n//         }\n//         let dataStateArray = [\n//             { activeName: 'selectedStabilityStudyPlan', dataStateName: 'sampleGridDataState' },\n//             { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\n//             { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\n//             { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\n//         ]\n//         dataStateArray.map(arr => {\n//             if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\n//                 masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\n//                 skipInfo = {\n//                     ...skipInfo,\n//                     [arr.dataStateName]: {\n//                         ...inputData[arr.dataStateName],\n//                         skip: 0,\n//                         sort: undefined,\n//                         filter: undefined\n//                     }\n//                 }\n//             } else {\n//                 skipInfo = {\n//                     ...skipInfo,\n//                     [arr.dataStateName]: {\n//                         ...inputData[arr.dataStateName],\n//                         sort: undefined,\n//                         filter: undefined\n//                     }\n//                 }\n//             }\n//             return null;\n//         });\n//         dispatch({\n//             type: DEFAULT_RETURN, payload: {\n//                 masterData,\n//                 loading: false,\n//                 showFilter: false,\n//                 activeSampleTab: inputData.activeSampleTab,\n//                 activeTestTab: inputData.activeTestTab,\n//                 ...skipInfo,\n//                 // activeTabIndex: inputData.activeTabIndex\n//             }\n//         })\n//     }\n// }\n};}export function getTimePointTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,nstbstudyplancode:inputData.nstbstudyplancode,nstbtimepointcode:inputData.nstbtimepointcode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,selectedTransactionsamplecode:inputData.selectedStbTimePoint&&inputData.selectedStbTimePoint.length>0&&inputData.selectedStbTimePoint.map(function(item){return item.nstbtimepointcode;}).join(\",\")};var subSample=inputData.nneedsubsample;var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"stabilitystudyplan/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data,'descending','nstbstudyplancode');var oldSelectedTest=inputData.masterData.selectedStbTimePointTest||[];var oldselectedStbTimePoint=inputData.masterData.selectedStbTimePoint||[];var outsourceDetailsList=response.data&&response.data.OutsourceDetailsList;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"nstbtimepointcode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStbTimePoint:inputData.selectedStbTimePoint,selectedTransactionsamplecode:inputData.nstbtimepointcode,selectedStbTimePointTest:inputData.masterData.StbTimePointTestGet.length>0?[inputData.masterData.StbTimePointTestGet[0]]:[]});var testList=reArrangeArrays(inputData.masterData.StbTimePointGet,response.data.StbTimePointTestGet,\"nstbtimepointcode\");masterData=_objectSpread(_objectSpread({},masterData),{},{selectedStbTimePointTest:testList?testList.length>0?[testList[0]]:[]:[],StbTimePointTestGet:testList?testList.length>0?testList:[]:[]});if(subSample){var wholeSubsampleList=masterData.StbTimePointGet.map(function(b){return b.nstbtimepointcode;});// START ALPD-3625 VISHAKH\n// oldselectedStbTimePoint.map((test, index) => {\n//     if (!wholeSubsampleList.includes(test.nstbtimepointcode)) {\n//         oldselectedStbTimePoint.splice(index, 1)\n//     }\n//     return null;\n// })\noldselectedStbTimePoint=oldselectedStbTimePoint.filter(function(item){return wholeSubsampleList.includes(item.nstbtimepointcode);});// END ALPD-3625 VISHAKH\nvar keepOld=false;var nstbtimepointcode;if(oldselectedStbTimePoint.length>0){keepOld=true;}else{nstbtimepointcode=masterData.selectedStbTimePoint[0].nstbtimepointcode;}}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;// let bool = false;\n// Commented bool value because no need to check bool condition to update skipInfo value.\nvar skipInfo={};// if (inputData.masterData.StbTimePointTestGet.length < inputData.testskip) {\ntestskip=0;// bool = true\n// }\nif(inputData.masterData.StbTimePointGet.length<inputData.subsampleskip){subsampleskip=0;// bool = true\n}// if (bool) {\nskipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};// }\nif(inputData.masterData.selectedStbTimePoint&&inputData.sampleGridDataState&&inputData.masterData.selectedStbTimePoint.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}//  let inputParam = { attachmentskip: undefined }\nif(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,// activeTabIndex: inputData.activeTabIndex,\nactiveSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{activeTabIndex:false//  inputParam\n})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedStbTimePointTest;// START ALPD-3625 VISHAKH\n// let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\nvar TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest,inputData.removeElementFromArray[0].nstbtimepointcode,\"nstbtimepointcode\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}// END ALPD-3625 VISHAKH\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedStbTimePoint,inputData.childTabsKey,inputData.checkBoxOperation,\"nstbtimepointcode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var nstbtimepointtestcode=inputData.masterData.StbTimePointTestGet.length>0?inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode.toString():\"-1\";var selectedStbTimePoint=inputData.selectedStbTimePoint;// let selectedPreregno = inputData.nstbstudyplancode;\nvar selectedStbTimePointTest=inputData.masterData.StbTimePointTestGet.length>0?[inputData.masterData.StbTimePointTestGet[0]]:[];// let selectedStbTimePoint = inputData.masterData.StbTimePointGet\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStbTimePoint:selectedStbTimePoint,selectedStbTimePointTest:selectedStbTimePointTest});// inputData = {\n//     ...inputData, childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationParameter\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\n//     selectedStbTimePoint, checkBoxOperation: 3, activeTabIndex: inputData.masterData.activeTabIndex\n// }\n// START ALPD-3671 VISHAKH\nif(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}// END ALPD-3671 VISHAKH\ninputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationParameter\"],nstbtimepointtestcode:nstbtimepointtestcode,masterData:masterData,selectedStbTimePointTest:selectedStbTimePointTest,selectedStbTimePoint:selectedStbTimePoint,checkBoxOperation:checkBoxOperation.SINGLESELECT,activeTabIndex:inputData.masterData.activeTabIndex});// dispatch(getTestChildTabDetailRegistration(inputData, true));\n}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStbTimePoint:inputData.selectedStbTimePoint,selectedTransactioncode:inputData.nstbtimepointcode,selectedStbTimePointTest:inputData.masterData.StbTimePointTestGet.length>0?[inputData.masterData.StbTimePointTestGet[0]]:[]});// START ALPD-3671 VISHAKH\nif(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";_masterData['searchedTest']=undefined;}// END ALPD-3671 VISHAKH\nvar wholeTestList=_masterData.StbTimePointTestGet.map(function(b){return b.nstbtimepointtestcode;});// START ALPD-3625 VISHAKH\n// oldSelectedTest.forEach((test, index) => {\n//     if (!wholeTestList.includes(test.nstbtimepointtestcode)) {\n//         oldSelectedTest.splice(index, 1)\n//     }\n//     return null;\n// })\noldSelectedTest=oldSelectedTest.filter(function(item){return wholeTestList.includes(item.nstbtimepointtestcode);});// END ALPD-3625 VISHAKH\nvar keepOld=false;var _nstbtimepointtestcode;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedStbTimePointTest:oldSelectedTest});}else{_nstbtimepointtestcode=inputData.masterData.StbTimePointTestGet.length>0?inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_nstbtimepointtestcode,\"nstbtimepointtestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_nstbtimepointtestcode,\"nstbtimepointtestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedStbTimePoint',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},skipInfo)});}}};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/deleteStbStudyPlan\",inputParam.inputData).then(function(response){var _respObject2;var masterData=_objectSpread(_objectSpread({},LoginProps),response.data);var respObject=(_respObject2={masterData:masterData,//[modalName]: false,\nloading:false,loadChildTest:false,showSample:undefined,openModal:false,selectedRecord:{},showConfirmAlert:false,createTestConfirmMessage:undefined,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0},_defineProperty(_respObject2,\"showSample\",undefined),_defineProperty(_respObject2,\"regSampleExisted\",false),_respObject2);inputParam.postParamList[0]['clearFilter']='yes';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined,regSampleExisted:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function approveStbStudyPlan(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/approveStabilityStudyPlan\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"StabilityStudyPlanGet\"],LoginProps.StabilityStudyPlanGet,\"nstbstudyplancode\");replaceUpdatedObject(response.data[\"StbTimePointGet\"],LoginProps.StbTimePointGet,\"nstbtimepointcode\");replaceUpdatedObject(response.data[\"StbTimePointTestGet\"],LoginProps.StbTimePointTestGet,\"nstbtimepointtestcode\");delete response.data[\"StabilityStudyPlanGet\"];delete response.data[\"StbTimePointGet\"];delete response.data[\"StbTimePointTestGet\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedStabilityStudyPlan:replaceUpdatedObject(response.data[\"selectedStabilityStudyPlan\"],LoginProps.selectedStabilityStudyPlan,\"nstbstudyplancode\"),selectedStbTimePoint:replaceUpdatedObject(response.data[\"selectedStbTimePoint\"],LoginProps.selectedStbTimePoint,\"nstbtimepointcode\"),selectedStbTimePointTest:replaceUpdatedObject(response.data[\"selectedStbTimePointTest\"],LoginProps.selectedStbTimePointTest,\"nstbtimepointtestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined,showConfirmAlert:false,acceptConfirmMessage:undefined,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){// toast.error(error.message);           \nif(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{//toast.info(intl.formatMessage({ id: error.response.data[\"rtn\"] }));\nif(error.response.data.NeedConfirmAlert){dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,acceptConfirmMessage:error.response.data.rtn,acceptConfirmParam:{inputParam:inputParam,masterData:LoginProps},loading:false}});}else{//toast.error(error.message);\ntoast.warn(intl.formatMessage({id:error.response.data[\"rtn\"]}));dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false,acceptConfirmMessage:undefined}});}}});};}export function deleteTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/deleteTest\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},LoginProps),{},{StbTimePointTestGet:sortData(response.data[\"StbTimePointTestGet\"],\"descending\",\"nstbtimepointtestcode\"),StbTimePointGet:sortData(LoginProps[\"StbTimePointGet\"],\"descending\",\"nstbtimepointcode\"),selectedStbTimePointTest:response.data[\"selectedStbTimePointTest\"],//  selectedStbTimePoint: response.data[\"StbTimePointGet\"],\nselectedStbTimePoint:response.data[\"selectedStbTimePoint\"],RegistrationParameter:response.data.RegistrationParameter,StabilityStudyPlanGet:replaceUpdatedObject(response.data.selectedStabilityStudyPlan,LoginProps.StabilityStudyPlanGet,'nstbstudyplancode')});var respObject={masterData:masterData,//[modalName]: false,\nloading:false,loadChildTest:false,showSample:undefined,openModal:false,selectedRecord:{},showConfirmAlert:false,createTestConfirmMessage:undefined};inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='no';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function getEditStbTimePointDetails(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent,specBasedComponent){return function(dispatch){var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation,masterData=_inputParam.masterData;if(masterData[\"selectedStbTimePoint\"].length>1||masterData[\"selectedStbTimePoint\"].findIndex(function(x){return x[inputParam.primaryKeyName]===inputParam[\"mastertoedit\"][inputParam.primaryKeyName];})===-1){inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]=true;}masterData[\"selectedStbTimePoint\"]=[];masterData[\"selectedStbTimePoint\"].push(inputParam[\"mastertoedit\"]);inputParam.editSubSampleRegParam[\"nstbstudyplancode\"]=inputParam[\"mastertoedit\"][\"nstbstudyplancode\"];inputParam.editSubSampleRegParam[\"checkBoxOperation\"]=checkBoxOperation.SINGLESELECT;inputParam.editSubSampleRegParam[\"nfilterstatus\"]=inputParam[\"mastertoedit\"][\"ntransactionstatus\"];inputParam.editSubSampleRegParam[\"napprovalconfigcode\"]=inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];var nstbtimepointcode=inputParam.mastertoedit[inputParam.primaryKeyName];if(nstbtimepointcode===undefined){toast.info(intl.formattedMessage({id:\"IDS_SELECTVALIDSUBSAMPLE\"}));}else{var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var selectedRegistration=rsapi.post(\"/stabilitystudyplan/getEditStbTimePointDetails\",_objectSpread(_objectSpread({},inputParam.editSubSampleRegParam),{},{nstbtimepointcode:nstbtimepointcode,parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo}));var dateService=rsapi.post(\"dynamicpreregdesign/dateValidation\",{datecolumnlist:withoutCombocomponent.filter(function(x){return x.inputtype===\"date\";}),userinfo:userInfo});urlArray=[timeZoneService,selectedRegistration,dateService];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var _payload2;var selectedRecord=_objectSpread({},response[1].data[\"EditData\"]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};if(specBasedComponent){selectedRecord[\"ncomponentcode\"]={label:selectedRecord[\"scomponentname\"],value:selectedRecord[\"ncomponentcode\"]};}var languagetypeCode=undefined;var comboData=response[1].data;delete comboData['EditData'];var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoadForEdit(x,comboData,selectedRecord,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}withoutCombocomponent.map(function(date){if(date.inputtype==='date'){selectedRecord[date.label]=selectedRecord[date.label]&&selectedRecord[date.label]!=='-'?rearrangeDateFormat(userInfo,selectedRecord[date.label]):\"\";if(date.nperiodcode){selectedRecord[date.label+\"value\"]=response[2].data[date.label]?new Date(response[2].data[date.label][\"datevalue\"]):null;}else{selectedRecord[date.label+\"value\"]=new Date();}if(date.hidebeforedate){selectedRecord[date.label+\"min\"]=selectedRecord[date.label+\"value\"];}if(date.hideafterdate){selectedRecord[date.label+\"max\"]=selectedRecord[date.label+\"value\"];}}});selectedRecord=_objectSpread({},selectedRecord);if(inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"]===true){if(masterData[\"searchedTest\"]){if(inputParam.searchTestRef!==undefined&&inputParam.searchTestRef.current!==null){inputParam.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}}masterData=_objectSpread(_objectSpread({},masterData),response[1].data[\"SubSampleChildDetail\"]);}dispatch({type:DEFAULT_RETURN,payload:(_payload2={operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true,screenName:\"IDS_TIMEPOINT\"},_defineProperty(_payload2,\"operation\",\"update\"),_defineProperty(_payload2,\"specBasedComponent\",specBasedComponent),_defineProperty(_payload2,\"masterData\",masterData),_defineProperty(_payload2,\"withoutCombocomponent\",withoutCombocomponent),_payload2)});// }\n}).catch(function(error){//console.log(\"error:\", error);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(intl.formatMessage({id:error.response.data}));}});}};}export function updateStbTimePoint(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var requestUrl='';if(inputParam.isFileupload){requestUrl=rsapi.post(\"/stabilitystudyplan/updateStbTimePoint\",inputParam.formData);}else{requestUrl=rsapi.post(\"/stabilitystudyplan/updateStbTimePoint\",inputParam.inputData);}return requestUrl.then(function(response){var _objectSpread10;sortData(response.data);replaceUpdatedObject(response.data[\"StbTimePointGet\"],masterData.StbTimePointGet,\"nstbtimepointcode\");var selectedStbTimePointTest=response.data[\"selectedStbTimePointTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},(_objectSpread10={selectedStbTimePoint:response.data[\"selectedStbTimePoint\"],selectedStbTimePointTest:replaceUpdatedObject(response.data[\"selectedStbTimePointTest\"],masterData.selectedStbTimePointTest,\"nstbtimepointtestcode\")},_defineProperty(_objectSpread10,\"selectedStbTimePointTest\",selectedStbTimePointTest),_defineProperty(_objectSpread10,\"RegistrationParameter\",response.data[\"RegistrationParameter\"]),_objectSpread10));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:intl.formatMessage({id:\"IDS_TIMEPOINT\"})}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.info(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelStbTimePointAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/deleteStbTimePoint\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},LoginProps),{},{StbTimePointTestGet:sortData(response.data[\"StbTimePointTestGet\"],\"descending\",\"nstbtimepointtestcode\"),StbTimePointGet:sortData(response.data[\"StbTimePointGet\"],\"descending\",\"nstbtimepointcode\"),selectedStbTimePointTest:response.data[\"selectedStbTimePointTest\"],selectedStbTimePoint:response.data[\"selectedStbTimePoint\"],RegistrationParameter:response.data.RegistrationParameter,StabilityStudyPlanGet:replaceUpdatedObject(response.data.selectedStabilityStudyPlan,LoginProps.StabilityStudyPlanGet,'nstbstudyplancode')});var respObject={masterData:masterData,//[modalName]: false,\nloading:false,loadChildTest:false,showSample:undefined,openModal:false,selectedRecord:{},showConfirmAlert:false,createTestConfirmMessage:undefined};inputParam.postParamList[0]['clearFilter']='no';inputParam.postParamList[1]['clearFilter']='yes';inputParam.postParamList[2]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/stabilitystudyplan/getRegSubTypeByRegType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/getRegTemplateTypeByRegSubType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function onApprovalConfigVersionChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/stabilitystudyplan/getApprovalConfigBasedTemplateDesign\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestDetailFromRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.nstbtimepointtestcode===\"\"){inputData.nstbtimepointtestcode=\"0\";}if(inputData.nstbstudyplancode&&inputData.nstbstudyplancode.length>0){var inputParamData={nstbtimepointtestcode:inputData.nstbtimepointtestcode,nstbstudyplancode:inputData.nstbstudyplancode,userinfo:inputData.userinfo,nstbtimepointcode:inputData.nstbtimepointcode?inputData.nstbtimepointcode:inputData.selectedStbTimePoint&&inputData.selectedStbTimePoint.map(function(item){return item.nstbtimepointcode;}).join(\",\")};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TIMEPOINTRESULTS\":url=\"stabilitystudyplan/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTHISTORY\":url=\"history/getTestHistory\";activeName=\"RegistrationTestHistory\";dataStateName=\"registrationTestHistoryDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_OUTSOURCEDETAILS\":url=\"registration/getOutsourceDetails\";break;case\"IDS_EXTERNALORDERREPORTS\":url=\"registration/getExternalOrderAttachment\";break;case\"IDS_TIMEPOINTHISTORY\":url=\"stabilitystudyplan/getTimePointHistory\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedStabilityStudyPlan:inputData.selectedStabilityStudyPlan||inputData.masterData.selectedStabilityStudyPlan,selectedStbTimePointTest:inputData.selectedStbTimePointTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStbTimePointTest, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointtestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"nstbtimepointcode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStabilityStudyPlan:inputData.selectedStabilityStudyPlan||inputData.masterData.selectedStabilityStudyPlan,selectedStbTimePointTest:inputData.selectedStbTimePointTest,selectedPreregno:inputData.nstbstudyplancode,selectedSampleCode:inputData.nstbtimepointcode,selectedTestCode:inputData.nstbtimepointtestcode,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId});if(inputData[dataStateName]&&masterData[activeName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedStbTimePointTest,inputData.childTabsKey,inputData.checkBoxOperation,\"nstbtimepointtestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStbTimePointTest:inputData.selectedStbTimePointTest,selectedPreregno:inputData.nstbstudyplancode,selectedSampleCode:inputData.nstbtimepointcode,selectedTestCode:inputData.nstbtimepointtestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory,RegistrationTestHistory=_inputData$masterData.RegistrationTestHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;case\"IDS_TESTHISTORY\":RegistrationTestHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedStbTimePointTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory,RegistrationTestHistory:RegistrationTestHistory}),loading:false,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId}});}};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/StabilityStudyPlanAction.js"],"names":["React","rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","childComboLoadForEdit","sortDataByParent","sortDataForDate","DEFAULT_RETURN","intl","initRequest","SampleType","checkBoxOperation","orderType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","Operators","TextFilter","NumericFilter","DateFilter","ComboBox","Utils","QbUtils","leftArrowClass","openModal","ModalShow","addStbTimePoint","masterData","userinfo","columnList","selectComponent","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","specBasedComponent","Map","Component","isServiceRequired","SubSamplecomboData","selectedRecord","conditionalTestPackage","specBasedTestPackage","LoginProps","dispatch","urlArray","timeZoneService","post","actualService","parentcolumnlist","filter","x","inputtype","readonly","childcolumnlist","ComponentTestBySpec","TestGet","nallottedspeccode","slno","Object","keys","length","nneedsubsample","TestPackageGet","TestSectionGet","currentDate","dateService","datecolumnlist","all","then","response","timeZoneMap","data","undefined","timeZoneList","get","defaultTimeZone","label","stimezoneid","value","ntimezonecode","newcomboData","slanguagetypecode","TestCombined","lstComponent","PackageData","TestSectionData","selectedRecord1","lstComponentMap","EXTERNAL","item","nspecsampletypecode","PackageDataMap","TestPackage","testSectionDataMap","TestSection","comboData1","comboData","map","componentrow","loadcurrentdate","nperiodcode","Date","loadselecteddate","hidebeforedate","hideafterdate","val","radiodefaultvalue","i","radioOptions","tags","text","inputParam","ChildscreenName","formatMessage","id","screenName","showSaveContinue","openChildModal","childoperation","parentPopUpSize","loading","openPortal","operation","loadSubSample","saveContinueData","parentSubSampleColumnList","childSubSampleColumnList","selectPackage","selectSection","AllTest","AllSection","componentTest","type","payload","catch","error","message","TestSectionDataMap","selectedStbTimePointTestData","selectedobject","Reg","TestData","insertStbStudyPlan","requestUrl","isFileupload","formData","inputData","rtn","StabilityStudyPlanGet","updatedObjectWithNewElements","selectedStabilityStudyPlan","StbTimePointGet","StbTimePointTestGet","selectedStbTimePoint","selectedStbTimePointTest","regSampleExisted","orderTypeValue","nstbtimepointcode","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","showSample","selectedSpec","selectedComponent","postParamList","warn","preregConfirmMessage","console","log","status","NeedConfirmAlert","preregConfirmParam","oldList","newList","name","newlistItem","index","nstbstudyplancode","splice","unshift","insertExportStbStudyPlan","registrationList","info","addMoreTests","ncontrolCode","sampleList","some","obj","findTransactionStatus","Set","ntransactionstatus","REJECT","CANCELLED","RELEASED","findApprovalVersion","napprovalversioncode","findSampleSpec","join","availableTest","loadChildTest","loadPrinter","props","addSubTimePoint","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","regchildSubSampleColumnList","testskip","subsampleskip","saveTimePoint","StbTimePointTestParameter","subSampleConfirmMessage","subSampleConfirmParam","createRegTest","modalName","classUrl","methodUrl","RegistrationParameter","createTestConfirmMessage","createTestConfirmParam","ReloadData","searchSampleRef","current","searchSubSampleRef","searchTestRef","showFilter","skip","take","testtake","subsampletake","activeTabIndex","getStabilityStudyPlanByFilterSubmit","getTimePointDetail","isParentValue","inputParamData","nsampletypecode","nregtypecode","nregsubtypecode","napprovalconfigcode","ndesigntemplatemappingcode","selectedPreregno","selectedTransactionsamplecode","activeName","dataStateName","subSample","sample","skipInfo","oldSelectedTest","oldselectedStbTimePoint","childTabsKey","removeElementFromArray","sampleGridDataState","sort","multifilterInfo","multiFilterLoad","activeSampleTab","activeTestTab","getTimePointTestDetail","outsourceDetailsList","OutsourceDetailsList","testList","wholeSubsampleList","b","includes","keepOld","TestSelected","isGrandChildGetRequired","nstbtimepointtestcode","toString","SINGLESELECT","selectedTransactioncode","wholeTestList","RegistrationTestComment","dataStateArray","arr","cancelSampleAction","approveStbStudyPlan","acceptConfirmMessage","acceptConfirmParam","deleteTestAction","getEditStbTimePointDetails","comboComponents","withoutCombocomponent","userInfo","findIndex","primaryKeyName","editSubSampleRegParam","push","mastertoedit","formattedMessage","selectedRegistration","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","date","updateStbTimePoint","regDateEditConfirmMessage","regEditParam","cancelStbTimePointAction","getSampleTypeChange","event","labelname","getRegTypeChange","getRegSubTypeChange","onApprovalConfigVersionChange","getTestDetailFromRegistration","url","responseData","selectedSampleCode","selectedTestCode","activeTabId","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","RegistrationTestAttachment","ApprovalResultChangeHistory","ApprovalHistory","RegistrationTestHistory"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString,\r\n    fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement,\r\n    replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList,\r\n    constructjsonOptionDefault, childComboLoad, filterRecordBasedOnPrimaryKeyName, reArrangeArrays, childComboLoadForEdit, sortDataByParent, sortDataForDate\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { //RegistrationSubType, RegistrationType, \r\n    SampleType,\r\n    checkBoxOperation,\r\n    orderType,\r\n    transactionStatus\r\n} from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\nimport {\r\n    Operators,\r\n    TextFilter,\r\n    NumericFilter,\r\n    // BooleanFilter,\r\n    DateFilter,\r\n    // EnumFilter,\r\n    //  EnumFilterProps,\r\n} from \"@progress/kendo-react-data-tools\";\r\nimport { ComboBox } from \"@progress/kendo-react-dropdowns\";\r\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\r\nimport { leftArrowClass } from '@progress/kendo-react-layout';\r\nimport { openModal } from './ApprovalConfigAction';\r\nimport ModalShow from '../components/ModalShow';\r\n\r\nexport function addStbTimePoint(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired,\r\n    SubSamplecomboData, selectedRecord, conditionalTestPackage, specBasedTestPackage, LoginProps) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList ? columnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)) : [],\r\n                childcolumnlist: childColumnList ? childColumnList : [],\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent) {\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent,\r\n                    //   conditionalTestPackage:true\r\n                })\r\n                urlArray[2] = ComponentTestBySpec;\r\n            } else {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    nneedsubsample: Map[\"nneedsubsample\"],\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage: true,\r\n                    specBasedTestPackage: specBasedTestPackage\r\n                })\r\n                urlArray[2] = TestGet;\r\n                const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    // slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    //   specBasedTestPackage: specBasedTestPackage,\r\n                    //  conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[5] = TestPackageGet;\r\n\r\n                const TestSectionGet = rsapi.post(\"/registration/getTestfromSection\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    // slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    //   specBasedTestPackage: specBasedTestPackage,\r\n                    //  conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[6] = TestSectionGet;\r\n            }\r\n            const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                userinfo\r\n            })\r\n            urlArray[3] = currentDate\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo\r\n            })\r\n            urlArray[4] = dateService\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)), response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                let PackageData = [];\r\n                let TestSectionData = [];\r\n\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                if (specBasedComponent) {\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n                    // if (lstComponent.length > 0) {\r\n                    //     selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\r\n                    //     selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\r\n                    //     selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\r\n                    //     selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n\r\n                    // }\r\n                    //Added by Dhanushya for jira ETICA-22\r\n                    if (lstComponent.length > 0) {\r\n                        if (Map[\"orderTypeCombCode\"] && Map[\"orderTypeCombCode\"] === orderType.EXTERNAL) {\r\n                            selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\r\n                            selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\r\n                            selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\r\n                            selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n                        }\r\n                        else {\r\n\r\n                            selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'] &&\r\n                                selectedRecord1['ncomponentcode'].item && selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\r\n                            selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n                    const PackageDataMap = constructOptionList(response[5].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n                    const testSectionDataMap = constructOptionList(response[6].data.TestSection || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, true);\r\n                    TestSectionData = testSectionDataMap.get(\"OptionList\");\r\n                    TestCombined = response[2].data\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.loadcurrentdate) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                            selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                        } else if (componentrow.nperiodcode) {\r\n                            selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            if (componentrow.loadselecteddate) {\r\n                                selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                    new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            }\r\n                            //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                            //    new Date(response[2].data[componentrow.label]):null;\r\n                        } else {\r\n                            selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                        }\r\n\r\n                        if (componentrow.hidebeforedate) {\r\n                            selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n                        if (componentrow.hideafterdate) {\r\n                            selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n\r\n                    }\r\n                    else if (componentrow.inputtype === \"radio\"\r\n                        || componentrow.inputtype === \"checkbox\"\r\n                        || componentrow.inputtype === \"predefineddropdown\") {\r\n\r\n                        if (componentrow['radiodefaultvalue']) {\r\n                            if (componentrow.inputtype === \"checkbox\") {\r\n\r\n                                let val = ''\r\n                                componentrow.radiodefaultvalue &&\r\n                                    componentrow.radiodefaultvalue.length > 0 && componentrow.radiodefaultvalue.map((x, i) => {\r\n                                        val = val + (i === componentrow.radiodefaultvalue.length - 1 ? x.label : x.label + ',')\r\n                                    })\r\n\r\n                                selectedRecord1[componentrow.label] = val\r\n\r\n                            } else if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                    componentrow.radiodefaultvalue : \"\";\r\n                            } else {\r\n                                selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                    componentrow.radiodefaultvalue.label : \"\";\r\n                            }\r\n\r\n                        } else {\r\n                            if (componentrow.inputtype === \"radio\") {\r\n                                selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                    componentrow.radioOptions.tags[0].text : \"\";\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n                const inputParam = {\r\n                    ChildscreenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                    screenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                    showSaveContinue: true,\r\n                    openChildModal: false,\r\n                    childoperation: \"create\",\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent,\r\n                    openPortal: true,\r\n                    openModal: false,\r\n                    operation: \"create\",\r\n                    loadSubSample: true,\r\n                    selectComponent: selectedRecord1,\r\n                    saveContinueData: { ...selectedRecord1 },\r\n                    SubSamplecomboData: comboData1,\r\n                    SubSamplecomboComponents,\r\n                    SubSamplewithoutCombocomponent,\r\n                    TestCombined,\r\n                    parentSubSampleColumnList: columnList,\r\n                    childSubSampleColumnList: childColumnList,\r\n                    timeZoneList,\r\n                    defaultTimeZone,\r\n                    masterData,\r\n                    selectPackage: [],\r\n                    TestPackage: PackageData,\r\n                    TestSection: TestSectionData, selectSection: [], AllTest: TestCombined, AllSection: TestSectionData\r\n                }\r\n\r\n                //if (specBasedComponent) {\r\n                //Added by Dhanushya for jira ETICA-22\r\n                if (specBasedComponent && selectedRecord1['ncomponentcode'] !== undefined) {\r\n\r\n                    dispatch(componentTest(selectedRecord1, false, specBasedComponent, Component, specBasedTestPackage, conditionalTestPackage, inputParam));\r\n\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { ...inputParam } })\r\n                }\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList,\r\n            SubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n        return (dispatch) => {\r\n            if (!specBasedComponent) {\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    // nneedsubsample: Map[\"nneedsubsample\"],\r\n                    ...Map,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent,\r\n                    conditionalTestPackage: true,\r\n                    specBasedTestPackage: specBasedTestPackage\r\n                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                    //  nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n                    nallottedspeccode: selectedRecord.nallottedspeccode.item.nallottedspeccode,\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    specBasedTestPackage: specBasedTestPackage,\r\n                    conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[3] = TestPackageGet;\r\n\r\n                const TestSectionGet = rsapi.post(\"/registration/getTestfromSection\", {\r\n                    //  nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n                    nallottedspeccode: selectedRecord.nallottedspeccode.item.nallottedspeccode,\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    specBasedComponent: specBasedComponent,\r\n                    specBasedTestPackage: specBasedTestPackage,\r\n                    conditionalTestPackage: conditionalTestPackage\r\n                });\r\n                urlArray[4] = TestSectionGet;\r\n                Axios.all(urlArray).then(response => {\r\n                    let TestCombined = []\r\n                    let PackageData = []\r\n                    let TestSectionData = []\r\n\r\n                    //  if (!specBasedTestPackage) {\r\n                    TestCombined = response[0].data\r\n                    // } \r\n                    // else {\r\n                    const PackageDataMap = constructOptionList(response[3].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n                    const TestSectionDataMap = constructOptionList(response[4].data.TestSection || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, true);\r\n                    TestSectionData = TestSectionDataMap.get(\"OptionList\");\r\n                    // if (PackageData.length === 0) {\r\n                    //    dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n                    //} \r\n\r\n                    // }\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\"\r\n                            || componentrow.inputtype === \"checkbox\"\r\n                            || componentrow.inputtype === \"predefineddropdown\") {\r\n\r\n                            if (componentrow['radiodefaultvalue']) {\r\n                                if (componentrow.inputtype === \"checkbox\") {\r\n\r\n                                    let val = ''\r\n                                    componentrow.radiodefaultvalue &&\r\n                                        componentrow.radiodefaultvalue.length > 0 && componentrow.radiodefaultvalue.map((x, i) => {\r\n                                            val = val + (i === componentrow.radiodefaultvalue.length - 1 ? x.label : x.label + ',')\r\n                                        })\r\n\r\n                                    selectedRecord1[componentrow.label] = val\r\n\r\n                                } else if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                        componentrow.radiodefaultvalue : \"\";\r\n                                } else {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                        componentrow.radiodefaultvalue.label : \"\";\r\n                                }\r\n\r\n                            } else {\r\n                                if (componentrow.inputtype === \"radio\") {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                        componentrow.radioOptions.tags[0].text : \"\";\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    })\r\n                    // if (masterData.RealRegSubTypeValue.nregsubtypecode === 6) {\r\n\r\n                    //     let portalOrder = selectedRecord && selectedRecord['Portal Order ID'] || {}\r\n                    //     let containerType = SubSamplecomboData['ContainerType'] || []\r\n                    //     let containerList = []\r\n                    //     const nportalordercode = portalOrder && portalOrder.value ? portalOrder.value : -1\r\n                    //     containerType.map(x => {\r\n                    //         if (x.item.jsondata.nportalordercode === nportalordercode) {\r\n                    //             containerList.push(x)\r\n                    //         }\r\n                    //     })\r\n\r\n                    //     SubSamplecomboData['Container Type'] = containerList\r\n                    // }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ChildscreenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                            screenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                            showSaveContinue: true,\r\n                            openChildModal: false,\r\n                            childoperation: \"create\",\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            lstComponent: [],\r\n                            openPortal: true,\r\n                            openModal: false,\r\n                            operation: \"create\",\r\n                            loadSubSample: true,\r\n                            selectComponent: selectedRecord1,\r\n                            saveContinueData: { ...selectedRecord1 },\r\n                            TestCombined: TestCombined,\r\n                            TestPackage: PackageData, TestSection: TestSectionData, selectSection: []\r\n                        }\r\n                    });\r\n                })\r\n            } else {\r\n\r\n                const urlArray = []\r\n                const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                    ...Map,\r\n                    specBasedComponent: specBasedComponent\r\n                })\r\n                urlArray[0] = ComponentTestBySpec;\r\n                const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n                    userinfo\r\n                })\r\n                urlArray[1] = currentDate;\r\n                const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                    datecolumnlist: SubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                    userinfo\r\n                })\r\n                urlArray[2] = dateService\r\n                Axios.all(urlArray).then(response => {\r\n\r\n                    const selectedRecord1 = newcomboData.selectedRecord\r\n                    // const lstComponent =  response.data.lstComponent\r\n                    let lstComponent = response[0].data.lstComponent //filterRecordBasedOnTwoArrays(response.data.lstComponent, Component, \"ncomponentcode\")\r\n                    const lstComponentMap = constructOptionList(lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                    if (lstComponent.length > 0) {\r\n                        // selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\r\n                        // selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\r\n                        // selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\r\n                        // selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n                        //Added by Dhanushya for jira ETICA-22\r\n                        if (Map[\"orderTypeCombCode\"] && Map[\"orderTypeCombCode\"] === orderType.EXTERNAL) {\r\n                            selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\r\n                            selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\r\n                            selectedRecord1[\"nspecsampletypecode\"] = lstComponent[0].item.nspecsampletypecode;\r\n                            selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n                        }\r\n                        else {\r\n                            selectedRecord1[\"nspecsampletypecode\"] = lstComponent[0].item.nspecsampletypecode;\r\n                            selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n                        }\r\n\r\n                    }\r\n\r\n                    SubSamplewithoutCombocomponent.map(componentrow => {\r\n                        if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.loadcurrentdate) {\r\n                                selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[1].data) : \"\";\r\n                                selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                            } else if (componentrow.nperiodcode) {\r\n                                selectedRecord1[componentrow.label + \"value\"] = response[2].data[componentrow.label] ?\r\n                                    new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                if (componentrow.loadselecteddate) {\r\n                                    selectedRecord1[componentrow.label] = response[2].data[componentrow.label] ?\r\n                                        new Date(response[2].data[componentrow.label][\"datevalue\"]) : null;\r\n                                }\r\n                                //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                                //    new Date(response[2].data[componentrow.label]):null;\r\n                            } else {\r\n                                selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (componentrow.hidebeforedate) {\r\n                                selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n                            if (componentrow.hideafterdate) {\r\n                                selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                            }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"radio\"\r\n                            || componentrow.inputtype === \"checkbox\"\r\n                            || componentrow.inputtype === \"predefineddropdown\") {\r\n\r\n                            if (componentrow['radiodefaultvalue']) {\r\n                                if (componentrow.inputtype === \"checkbox\") {\r\n\r\n                                    let val = ''\r\n                                    componentrow.radiodefaultvalue &&\r\n                                        componentrow.radiodefaultvalue.length > 0 && componentrow.radiodefaultvalue.map((x, i) => {\r\n                                            val = val + (i === componentrow.radiodefaultvalue.length - 1 ? x.label : x.label + ',')\r\n                                        })\r\n\r\n                                    selectedRecord1[componentrow.label] = val\r\n\r\n                                } else if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                        componentrow.radiodefaultvalue : \"\";\r\n                                } else {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                        componentrow.radiodefaultvalue.label : \"\";\r\n                                }\r\n\r\n                            } else {\r\n                                if (componentrow.inputtype === \"radio\") {\r\n                                    selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                        componentrow.radioOptions.tags[0].text : \"\";\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n\r\n                    const inputParam = {\r\n                        ChildscreenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                        screenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent,\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        saveContinueData: { ...selectedRecord1 },\r\n                        TestCombined: [],\r\n                        selectedStbTimePointTestData: [],\r\n                        selectPackage: [], selectSection: []\r\n                    }\r\n                    if (specBasedComponent) {\r\n                        dispatch(componentTest(selectedRecord1, false, specBasedComponent, Component, specBasedTestPackage, conditionalTestPackage, inputParam));\r\n\r\n                    } else {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { ...inputParam } })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function componentTest(selectedobject, Reg, specBasedComponent, Component, specBasedTestPackage, conditionalTestPackage, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const urlArray = []\r\n        Component = Component ? Component : []\r\n        const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: conditionalTestPackage,\r\n            nneedsubsample: selectedobject.nneedsubsample\r\n        });\r\n        urlArray[0] = TestGet;\r\n        const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: conditionalTestPackage\r\n        });\r\n        urlArray[1] = TestPackageGet;\r\n\r\n        const TestSectionGet = rsapi.post(\"/registration/getTestfromSection\", {\r\n            nspecsampletypecode: selectedobject.nspecsampletypecode,\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent,\r\n            specBasedTestPackage: specBasedTestPackage,\r\n            conditionalTestPackage: conditionalTestPackage\r\n        });\r\n        urlArray[2] = TestSectionGet;\r\n        Axios.all(urlArray).then(response => {\r\n            let PackageData = []\r\n            let TestData = []\r\n            let TestSectionData = []\r\n            // if (specBasedTestPackage) {\r\n            const PackageDataMap = constructOptionList(response[1].data.TestPackage || [], \"ntestpackagecode\",\r\n                \"stestpackagename\", undefined, undefined, true);\r\n            PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n            const testSectionDataMap = constructOptionList(response[2].data.TestSection || [], \"nsectioncode\",\r\n                \"ssectionname\", undefined, undefined, true);\r\n            TestSectionData = testSectionDataMap.get(\"OptionList\");\r\n\r\n            // if (PackageData.length === 0) {\r\n            //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n            // } \r\n            //   }\r\n            //    else {\r\n            TestData = response[0].data;\r\n            //  }\r\n            //let Test = [];\r\n            // Test[selectedobject.slno] = TestData;\r\n            const Map = {}\r\n            if (Reg) {\r\n                Map[\"selectedRecord\"] = selectedobject\r\n            } else {\r\n                Map[\"selectComponent\"] = selectedobject\r\n            }\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...inputParam, TestCombined: TestData, AllTest: TestData, TestPackage: PackageData, ...Map, loading: false, selectedStbTimePointTestData: [],\r\n                    selectPackage: [], TestSection: TestSectionData, selectSection: [], AllSection: TestSectionData\r\n\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function insertStbStudyPlan(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        if (inputParam.isFileupload) {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/createRegistrationWithFile\", inputParam.formData)\r\n        } else {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/createStabilityStudyPlan\", inputParam.inputData)\r\n        }\r\n        return requestUrl\r\n            //  rsapi.post(\"/registration/createRegistration\", inputParam.formData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n                    // if (response.data[\"isPortalData\"] && response.data[\"PortalStatus\"] && response.data[\"PortalStatus\"].length > 0) {\r\n                    //     dispatch(UpdateExternalOrderStatus(response.data[\"PortalStatus\"], inputParam));\r\n                    // }\r\n\r\n                    let StabilityStudyPlanGet = updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"], masterData.StabilityStudyPlanGet, 'Sample');\r\n                    let selectedStabilityStudyPlan = response.data[\"selectedStabilityStudyPlan\"];\r\n                    let StbTimePointGet = response.data[\"StbTimePointGet\"];\r\n                    let StbTimePointTestGet = response.data[\"StbTimePointTestGet\"];\r\n                    let selectedStbTimePoint = StbTimePointGet;\r\n                    StbTimePointTestGet = sortData(StbTimePointTestGet, \"nstbstudyplancode\", \"desc\");\r\n                    let selectedStbTimePointTest = StbTimePointTestGet.length > 0 ? [StbTimePointTestGet[0]] : [];\r\n                    let regSampleExisted = inputParam.inputData && inputParam.inputData.orderTypeValue === 2 ? true : false;\r\n                    if (inputParam.inputData.nneedsubsample) {\r\n                        StbTimePointGet = sortData(response.data[\"StbTimePointGet\"], 'nstbstudyplancode', 'desc')\r\n                        selectedStbTimePoint = StbTimePointGet.length > 0 ? [StbTimePointGet[0]] : [];\r\n                        StbTimePointTestGet = StbTimePointTestGet.filter(x => x.nstbtimepointcode === selectedStbTimePoint[0].nstbtimepointcode)\r\n                        selectedStbTimePointTest = StbTimePointTestGet.length > 0 ? response.data[\"selectedStbTimePointTest\"] : [];\r\n                    }\r\n                    if (inputParam.multipleselectionFlag) {\r\n                        selectedStabilityStudyPlan = updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"], masterData.selectedStabilityStudyPlan);\r\n                        updatedObjectWithNewElements(response.data[\"selectedStbTimePoint\"], masterData.StbTimePointGet);\r\n                        updatedObjectWithNewElements(response.data[\"selectedStbTimePointTest\"], masterData.StbTimePointTestGet);\r\n                        StbTimePointGet = masterData.StbTimePointGet;\r\n                        StbTimePointTestGet = masterData.StbTimePointTestGet;\r\n                    }\r\n\r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedStabilityStudyPlan, selectedStbTimePoint, selectedStbTimePointTest,\r\n                        StbTimePointGet, StbTimePointTestGet, StabilityStudyPlanGet,\r\n                    }\r\n                    if (masterData[\"kendoFilterList\"] !== undefined) {\r\n                        masterData[\"kendoFilterList\"] = undefined;\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,\r\n                        showConfirmAlert: false,\r\n                        selectedRecord: undefined,\r\n                        loading: false,\r\n                        loadPreregister: false,\r\n                        showSample: undefined,\r\n                        openPortal: false,\r\n                        selectedSpec: {},\r\n                        selectComponent: {},\r\n                        selectedStbTimePointTest: {},\r\n                        selectedComponent: {},\r\n                        Component: [],\r\n                        selectedRecord: {},\r\n                        selectedStbTimePointTest: [],\r\n                        Test: [],\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: [],\r\n                        preregConfirmMessage: undefined,\r\n                        regSampleExisted, loadImportFileData: false, loadImportSampleCountData: false,\r\n                        skip: 0,\r\n                        subsampleskip: 0,\r\n                        testskip: 0,\r\n                        isDynamicViewSlideOut: false,\r\n                        // filterColumnActive:false,\r\n                    }\r\n                    inputParam.postParamList[0]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false, preregConfirmMessage: undefined } })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false, preregConfirmMessage: undefined } })\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    if (error.response.data.NeedConfirmAlert) {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                showConfirmAlert: true,\r\n                                preregConfirmMessage: error.response.data.rtn,\r\n                                preregConfirmParam: { inputParam, masterData },\r\n                                loading: false,\r\n                                showSample: undefined,\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        toast.error(error.message);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                loading: false,\r\n                                showConfirmAlert: false, preregConfirmMessage: undefined\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function updatedObjectWithNewElements(oldList, newList, name) {\r\n    let newlistItem = newList;\r\n    if (name === 'Sample') {\r\n        newlistItem.map((item, index) => {\r\n            if (oldList[0].nstbstudyplancode === item.nstbstudyplancode) {\r\n                newlistItem.splice(index, 1)\r\n                // [newFirstElement].concat(array)\r\n            }\r\n        })\r\n        newlistItem.unshift(oldList[0]);\r\n        oldList = [...newlistItem];\r\n    } else if (name === 'Test') {\r\n\r\n    } else {\r\n        oldList = [...newlistItem, ...oldList];\r\n    }\r\n    return oldList;\r\n}\r\n\r\n\r\nexport function insertExportStbStudyPlan(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/importStabilityStudyPlan\", inputParam.formData)\r\n            .then(response => {\r\n                if (response.data.rtn === \"Success\") {\r\n\r\n                    let registrationList = [...response.data[\"StabilityStudyPlanGet\"], ...masterData.StabilityStudyPlanGet]\r\n                    let StabilityStudyPlanGet = registrationList;\r\n                    let selectedStabilityStudyPlan = response.data[\"selectedStabilityStudyPlan\"];\r\n                    let StbTimePointGet = response.data[\"StbTimePointGet\"];\r\n                    let StbTimePointTestGet = response.data[\"StbTimePointTestGet\"];\r\n                    let selectedStbTimePoint = StbTimePointGet;\r\n                    StbTimePointTestGet = sortData(StbTimePointTestGet, \"nstbstudyplancode\", \"desc\");\r\n                    let selectedStbTimePointTest = StbTimePointTestGet.length > 0 ? [StbTimePointTestGet[0]] : [];\r\n                    let regSampleExisted = inputParam.inputData && inputParam.inputData.orderTypeValue === 2 ? true : false;\r\n                    if (inputParam.inputData.nneedsubsample) {\r\n                        StbTimePointGet = sortData(response.data[\"StbTimePointGet\"], 'nstbstudyplancode', 'desc')\r\n                        selectedStbTimePoint = StbTimePointGet.length > 0 ? [StbTimePointGet[0]] : [];\r\n                        StbTimePointTestGet = StbTimePointTestGet.filter(x => x.nstbtimepointcode === selectedStbTimePoint[0].nstbtimepointcode)\r\n                        selectedStbTimePointTest = StbTimePointTestGet.length > 0 ? response.data[\"selectedStbTimePointTest\"] : [];\r\n                    }\r\n                    if (inputParam.multipleselectionFlag) {\r\n                        selectedStabilityStudyPlan = updatedObjectWithNewElements(response.data[\"selectedStabilityStudyPlan\"], masterData.selectedStabilityStudyPlan);\r\n                        updatedObjectWithNewElements(response.data[\"selectedStbTimePoint\"], masterData.StbTimePointGet);\r\n                        updatedObjectWithNewElements(response.data[\"selectedStbTimePointTest\"], masterData.StbTimePointTestGet);\r\n                        StbTimePointGet = masterData.StbTimePointGet;\r\n                        StbTimePointTestGet = masterData.StbTimePointTestGet;\r\n                    }\r\n\r\n\r\n                    masterData = {\r\n                        ...masterData, ...response.data,\r\n                        selectedStabilityStudyPlan, selectedStbTimePoint, selectedStbTimePointTest,\r\n                        StbTimePointGet, StbTimePointTestGet, StabilityStudyPlanGet\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        openModal: false,\r\n                        loadEsign: false,\r\n                        showConfirmAlert: false,\r\n                        selectedRecord: undefined,\r\n                        loading: false,\r\n                        loadPreregister: false,\r\n                        showSample: undefined,\r\n                        openPortal: false,\r\n                        selectedSpec: {},\r\n                        selectComponent: {},\r\n                        selectedStbTimePointTest: {},\r\n                        selectedComponent: {},\r\n                        Component: [],\r\n                        selectedRecord: {},\r\n                        selectedStbTimePointTest: [],\r\n                        Test: [],\r\n                        selectedComponent: {},\r\n                        subSampleDataGridList: [],\r\n                        preregConfirmMessage: undefined,\r\n                        regSampleExisted, loadImportFileData: false, loadImportSampleCountData: false\r\n                    }\r\n                    inputParam.postParamList[0]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                    inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                } else {\r\n                    toast.info(response.data.rtn);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false,\r\n                            openModal: false,\r\n                            loadEsign: false,\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTests = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if (inputParam.selectedStabilityStudyPlan && inputParam.selectedStabilityStudyPlan.length > 0) {\r\n            if (inputParam.selectedStbTimePoint && inputParam.selectedStbTimePoint.length > 0) {\r\n                value = inputParam.selectedStbTimePoint.some(obj => obj.nspecsampletypecode !== inputParam.selectedStbTimePoint[0].nspecsampletypecode)\r\n                if (value) {\r\n                    return toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                }\r\n                const selectedStabilityStudyPlan = inputParam.selectedStabilityStudyPlan;\r\n                const findTransactionStatus = [...new Set(selectedStabilityStudyPlan.map(item => item.ntransactionstatus))];\r\n                if (findTransactionStatus.length === 1) {\r\n                    if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                        if (findTransactionStatus[0] !== transactionStatus.RELEASED) {\r\n                            const findApprovalVersion = [...new Set(selectedStabilityStudyPlan.map(item => item.napprovalversioncode))];\r\n                            if (findApprovalVersion.length === 1) {\r\n                                const findSampleSpec = [...new Set(selectedStabilityStudyPlan.map(item => item.nallottedspeccode))];\r\n                                //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                                if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                                {\r\n                                    inputParam[\"snspecsampletypecode\"] = inputParam.selectedStbTimePoint &&\r\n                                        [...new Set(inputParam.selectedStbTimePoint.map(x => x.nspecsampletypecode))].join(\",\")\r\n                                    dispatch(initRequest(true));\r\n                                    const urlArray = []\r\n                                    const TestGet = rsapi.post(\"/registration/getMoreTest\", {\r\n                                        ...inputParam\r\n                                    });\r\n                                    urlArray[0] = TestGet;\r\n                                    const TestPackageGet = rsapi.post(\"/registration/getMoreTestPackage\", {\r\n                                        ...inputParam\r\n                                    });\r\n                                    urlArray[1] = TestPackageGet;\r\n\r\n                                    const TestSectionGet = rsapi.post(\"/registration/getMoreTestSection\", {\r\n                                        ...inputParam\r\n                                    });\r\n                                    urlArray[2] = TestSectionGet;\r\n                                    Axios.all(urlArray)\r\n                                        .then(response => {\r\n                                            let PackageData = []\r\n                                            let TestSectionData = []\r\n                                            const PackageDataMap = constructOptionList(response[1].data || [], \"ntestpackagecode\",\r\n                                                \"stestpackagename\", undefined, undefined, true);\r\n                                            PackageData = PackageDataMap.get(\"OptionList\");\r\n                                            const TestSectionDataMap = constructOptionList(response[2].data || [], \"nsectioncode\",\r\n                                                \"ssectionname\", undefined, undefined, true);\r\n                                            TestSectionData = TestSectionDataMap.get(\"OptionList\");\r\n                                            dispatch({\r\n                                                type: DEFAULT_RETURN,\r\n                                                payload: {\r\n                                                    availableTest: response[0].data,\r\n                                                    TestCombined: response[0].data,\r\n                                                    AllTest: response[0].data,\r\n                                                    TestPackage: PackageData,\r\n                                                    loadChildTest: true,\r\n                                                    loading: false, ncontrolCode,\r\n                                                    screenName: \"IDS_TEST\",\r\n                                                    operation: \"create\",\r\n                                                    openModal: true,\r\n                                                    parentPopUpSize: \"lg\",\r\n                                                    selectedRecord: {},\r\n                                                    showSample: undefined,\r\n                                                    loadPrinter: false, TestSection: TestSectionData, AllSection: TestSectionData\r\n                                                }\r\n                                            });\r\n                                        })\r\n                                        .catch(error => {\r\n                                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                            if (error.response.status === 500) {\r\n                                                toast.error(error.message);\r\n                                            } else {\r\n                                                toast.info(this.props.formatMessage({ id: error.response.data }));\r\n                                            }\r\n                                        });\r\n                                } else {\r\n                                    toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                                }\r\n                            } else {\r\n                                toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                            }\r\n                        }\r\n                        else {\r\n                            toast.info(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORRELEASEDSAMPLES\" }));\r\n                        }\r\n                    }\r\n                    else {\r\n                        toast.info(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                    }\r\n                } else {\r\n                    toast.info(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n                }\r\n            } else {\r\n                toast.info(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n            }\r\n        } else {\r\n            toast.info(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function addSubTimePoint(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents,\r\n    regSubSamplewithoutCombocomponent, Map, ncontrolcode, specBasedComponent, specBasedTestPackage) {\r\n    return function (dispatch) {\r\n        const urlArray = []\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        urlArray[0] = timeZoneService;\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: regcolumnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)),\r\n            childcolumnlist: regchildColumnList,\r\n            userinfo\r\n        })\r\n        urlArray[1] = actualService;\r\n\r\n        if (specBasedComponent) {\r\n            const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\", {\r\n                ...Map,\r\n                specBasedComponent: specBasedComponent,\r\n                userinfo\r\n            })\r\n            urlArray[2] = ComponentTestBySpec;\r\n        } else {\r\n\r\n            const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                slno: 1,\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n                conditionalTestPackage: true,\r\n                nneedsubsample: Map[\"nneedsubsample\"]\r\n\r\n            })\r\n            urlArray[2] = TestGet;\r\n            const TestPackageGet = rsapi.post(\"/registration/getTestfromTestPackage\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n            });\r\n            urlArray[5] = TestPackageGet;\r\n            const TestSectionGet = rsapi.post(\"/registration/getTestfromSection\", {\r\n                nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                specBasedComponent: specBasedComponent,\r\n                specBasedTestPackage: specBasedTestPackage,\r\n            });\r\n            urlArray[6] = TestSectionGet;\r\n\r\n        }\r\n        const currentDate = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo\r\n        })\r\n\r\n        urlArray[3] = currentDate\r\n\r\n        const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n            datecolumnlist: regSubSamplewithoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n            userinfo\r\n        })\r\n        urlArray[4] = dateService\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(regcolumnList.filter(x => (x.inputtype !== 'backendsearchfilter' && x.inputtype !== 'frontendsearchfilter') && (x.readonly !== true)), response[1].data,\r\n                    selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent, undefined, userinfo.slanguagetypecode, userinfo)\r\n                let TestCombined = [];\r\n                let lstComponent = [];\r\n                let PackageData = [];\r\n                let TestSectionData = [];\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                if (specBasedComponent) {\r\n\r\n                    const lstComponentMap = constructOptionList(response[2].data.lstComponent || [], \"ncomponentcode\",\r\n                        \"scomponentname\", undefined, undefined, true);\r\n\r\n                    lstComponent = lstComponentMap.get(\"OptionList\");\r\n                    //Commented by Dhanushya for jira ETICA-22\r\n                    // if (lstComponent.length > 0) {\r\n                    //     selectedRecord1['ncomponentcode'] = { ...lstComponent[0] }\r\n                    //     selectedRecord1[\"Sample Name\"] = selectedRecord1['ncomponentcode'].label;\r\n                    //     selectedRecord1[\"nspecsampletypecode\"] = selectedRecord1['ncomponentcode'].item.nspecsampletypecode;\r\n                    //     selectedRecord1[\"nneedsubsample\"] = Map.nneedsubsample\r\n\r\n                    // }\r\n\r\n                } else {\r\n                    //if (specBasedTestPackage) {\r\n                    const PackageDataMap = constructOptionList(response[5].data.TestPackage || [], \"ntestpackagecode\",\r\n                        \"stestpackagename\", undefined, undefined, true);\r\n                    PackageData = PackageDataMap.get(\"OptionList\");\r\n\r\n                    const TestSectionDataMap = constructOptionList(response[6].data.TestSection || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, true);\r\n                    TestSectionData = TestSectionDataMap.get(\"OptionList\");\r\n\r\n                    // if (PackageData.length === 0) {\r\n                    //     dispatch(getAllTest(selectComponent, LoginProps, undefined, specBasedComponent, undefined, false, undefined)); \r\n                    // } \r\n                    // }\r\n                    // else {\r\n                    TestCombined = response[2].data;\r\n                    // }\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n\r\n                regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.loadcurrentdate) {\r\n                            selectedRecord1[componentrow.label] = componentrow.loadcurrentdate ? rearrangeDateFormat(userinfo, response[3].data) : \"\";\r\n                            selectedRecord1[componentrow.label + \"value\"] = selectedRecord1[componentrow.label];\r\n                        } else if (componentrow.nperiodcode) {\r\n                            selectedRecord1[componentrow.label + \"value\"] = response[4].data[componentrow.label] ?\r\n                                new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            if (componentrow.loadselecteddate) {\r\n                                selectedRecord1[componentrow.label] = response[4].data[componentrow.label] ?\r\n                                    new Date(response[4].data[componentrow.label][\"datevalue\"]) : null;\r\n                            }\r\n                            //    selectedRecord1[componentrow.label]=response[2].data[componentrow.label]?\r\n                            //    new Date(response[2].data[componentrow.label]):null;\r\n                        } else {\r\n                            selectedRecord1[componentrow.label + \"value\"] = new Date();\r\n                        }\r\n\r\n                        if (componentrow.hidebeforedate) {\r\n                            selectedRecord1[componentrow.label + \"min\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n                        if (componentrow.hideafterdate) {\r\n                            selectedRecord1[componentrow.label + \"max\"] = selectedRecord1[componentrow.label + \"value\"]\r\n                        }\r\n\r\n                    }\r\n                    else if (componentrow.inputtype === \"radio\"\r\n                        || componentrow.inputtype === \"checkbox\"\r\n                        || componentrow.inputtype === \"predefineddropdown\") {\r\n\r\n                        if (componentrow['radiodefaultvalue']) {\r\n                            if (componentrow.inputtype === \"checkbox\") {\r\n\r\n                                let val = ''\r\n                                componentrow.radiodefaultvalue &&\r\n                                    componentrow.radiodefaultvalue.length > 0 && componentrow.radiodefaultvalue.map((x, i) => {\r\n                                        val = val + (i === componentrow.radiodefaultvalue.length - 1 ? x.label : x.label + ',')\r\n                                    })\r\n\r\n                                selectedRecord1[componentrow.label] = val\r\n\r\n                            } else if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                    componentrow.radiodefaultvalue : \"\";\r\n                            } else {\r\n                                selectedRecord1[componentrow.label] = componentrow.radiodefaultvalue ?\r\n                                    componentrow.radiodefaultvalue.label : \"\";\r\n                            }\r\n\r\n                        } else {\r\n                            if (componentrow.inputtype === \"radio\") {\r\n                                selectedRecord1[componentrow.label] = componentrow.radioOptions ?\r\n                                    componentrow.radioOptions.tags[0].text : \"\";\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                })\r\n\r\n                const inputParam = {\r\n                    screenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent,\r\n                    openModal: true,\r\n                    loadPrinter: false,\r\n                    operation: \"create\",\r\n                    loadRegSubSample: true,\r\n                    selectedRecord: selectedRecord1,\r\n                    regSubSamplecomboData: comboData1,\r\n                    regSubSamplecomboComponents,\r\n                    regSubSamplewithoutCombocomponent,\r\n                    TestCombined,\r\n                    regparentSubSampleColumnList: regcolumnList,\r\n                    regchildSubSampleColumnList: regchildColumnList,\r\n                    ncontrolCode: ncontrolcode,\r\n                    timeZoneList,\r\n                    defaultTimeZone,\r\n                    masterData,\r\n                    specBasedComponent,\r\n                    specBasedTestPackage,\r\n                    TestPackage: PackageData,\r\n                    //ALPD-624\r\n                    testskip: 0,\r\n                    subsampleskip: 0,\r\n                    TestSection: TestSectionData, AllTest: TestCombined, AllSection: TestSectionData\r\n                }\r\n                // if (specBasedComponent) {\r\n                //Added by Dhanushya for jira ETICA-22\r\n                if (specBasedComponent && selectedRecord1['ncomponentcode'] !== undefined) {\r\n\r\n                    dispatch(componentTest(selectedRecord1, true, specBasedComponent, [], specBasedTestPackage, true, inputParam))\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { ...inputParam } })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function saveTimePoint(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        if (inputParam.isFileupload) {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/createSubSampleWithFile\", inputParam.formData)\r\n        } else {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/createTimePoint\", inputParam.inputData);\r\n        }\r\n        return requestUrl\r\n            //  rsapi.post(\"/registration/createSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                // let StabilityStudyPlanGet = updatedObjectWithNewElement(response.data[\"selectedStabilityStudyPlan\"], inputParam.inputData.masterData.StabilityStudyPlanGet);\r\n                // let selectedStabilityStudyPlan = response.data[\"selectedStabilityStudyPlan\"];\r\n                let StbTimePointGet = updatedObjectWithNewElement(inputParam.inputData.masterData.StbTimePointGet, response.data[\"selectedStbTimePoint\"]);\r\n                let StbTimePointTestGet = response.data[\"StbTimePointTestGet\"];\r\n                let selectedStbTimePoint = response.data[\"selectedStbTimePoint\"];// StbTimePointGet.length > 0 ? [StbTimePointGet[0]] : [];\r\n                StbTimePointTestGet = sortData(StbTimePointTestGet, \"nstbstudyplancode\", \"desc\");\r\n                let selectedStbTimePointTest = StbTimePointTestGet.length > 0 ? [StbTimePointTestGet[0]] : [];\r\n                let StbTimePointTestParameter = response.data[\"StbTimePointTestParameter\"];\r\n                StbTimePointTestParameter = StbTimePointTestParameter ? getSameRecordFromTwoArrays(StbTimePointTestParameter, selectedStbTimePointTest, 'nstbtimepointtestcode') : StbTimePointTestParameter;\r\n                let StabilityStudyPlanGet = replaceUpdatedObject(response.data[\"selectedStabilityStudyPlan\"], inputParam.inputData.masterData.StabilityStudyPlanGet, 'nstbstudyplancode');\r\n                let selectedStabilityStudyPlan = response.data[\"selectedStabilityStudyPlan\"];\r\n\r\n\r\n\r\n                let masterData = { ...inputParam.inputData.masterData }\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedStbTimePoint, selectedStbTimePointTest,\r\n                    StbTimePointGet, StbTimePointTestGet, StbTimePointTestParameter, selectedStabilityStudyPlan, StabilityStudyPlanGet\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample: false,\r\n                    showConfirmAlert: false,\r\n                    subSampleConfirmMessage: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                //    dispatch({\r\n                //     type: DEFAULT_RETURN,\r\n                //     payload: {\r\n                //         masterData,\r\n                //         openModal: false,\r\n                //         loadEsign: false,\r\n                //         loading: false,\r\n                //         showSample: undefined,\r\n                //         selectedRecord: {},\r\n                //         loadRegSubSample:false\r\n                //     }\r\n                // });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                // toast.error(error.message);\r\n                // dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false, subSampleConfirmMessage: undefined } })\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    if (error.response.data.NeedConfirmAlert) {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                showConfirmAlert: true,\r\n                                subSampleConfirmMessage: error.response.data.rtn,\r\n                                subSampleConfirmParam: { inputParam },\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    } else if (error.response.data.rtn) {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data.rtn\r\n                        }));\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                loading: false,\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        toast.error(error.message);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                loading: false,\r\n                                showConfirmAlert: false, subSampleConfirmMessage: undefined\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createRegTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let StbTimePointTestGet = updatedObjectWithNewElements(masterData[\"StbTimePointTestGet\"], response.data[\"StbTimePointTestGet\"]);\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    StbTimePointTestGet: sortData(StbTimePointTestGet, \"descending\", \"nstbtimepointtestcode\"),\r\n                    StbTimePointGet: sortData(masterData[\"StbTimePointGet\"], \"descending\", \"nstbtimepointcode\"),\r\n                    selectedStbTimePointTest: response.data[\"selectedStbTimePointTest\"],\r\n                    //  selectedStbTimePoint: response.data[\"StbTimePointGet\"],\r\n                    selectedStbTimePoint: response.data[\"selectedStbTimePoint\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    StabilityStudyPlanGet: replaceUpdatedObject(response.data.selectedStabilityStudyPlan, masterData.StabilityStudyPlanGet, 'nstbstudyplancode')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    [modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {},\r\n                    showConfirmAlert: false,\r\n                    createTestConfirmMessage: undefined\r\n\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'no';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, createTestConfirmMessage: undefined } })\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    if (error.response.data.NeedConfirmAlert) {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                showConfirmAlert: true,\r\n                                createTestConfirmMessage: error.response.data.rtn,\r\n                                createTestConfirmParam: { inputParam, masterData, modalName },\r\n\r\n                                //[modalName]: false,\r\n                                loading: false,\r\n                                loadChildTest: true,\r\n                                showSample: undefined\r\n\r\n\r\n                                //openModal: false,\r\n                                //selectedRecord: {}\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                [modalName]: false,\r\n                                loading: false,\r\n                                loadChildTest: false,\r\n                                showSample: undefined,\r\n                                openModal: false,\r\n                                selectedRecord: {},\r\n                                createTestConfirmMessage: undefined\r\n\r\n\r\n                            }\r\n                        });\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"stabilitystudyplan/getStabilityStudyPlanByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined, regSampleExisted: false,\r\n                        activeTabIndex:  false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getStabilityStudyPlanByFilterSubmit(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"stabilitystudyplan/getStabilityStudyPlanByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined, regSampleExisted: false,\r\n                        activeTabIndex:  false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTimePointDetail(inputData, isServiceRequired, isParentValue) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode || -1,\r\n            nregsubtypecode: inputData.nregsubtypecode || -1,\r\n            nstbstudyplancode: inputData.nstbstudyplancode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode || -1,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            selectedPreregno: inputData.selectedStabilityStudyPlan && inputData.selectedStabilityStudyPlan.length > 0 ? inputData.selectedStabilityStudyPlan.map(item => item.nstbstudyplancode).join(\",\") : null,\r\n            selectedTransactionsamplecode: inputData.selectedStabilityStudyPlan && inputData.selectedStabilityStudyPlan.length > 1\r\n                && inputData.masterData.selectedStbTimePoint ? inputData.masterData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\") : null,\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"stabilitystudyplan/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data, \"descending\", \"nstbstudyplancode\");\r\n                    response.data['StbTimePointGet'] = sortDataByParent(response.data['StbTimePointGet'], inputData.sample, \"nstbstudyplancode\");\r\n\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedStbTimePointTest || []\r\n                    if (subSample) {\r\n                        let oldselectedStbTimePoint = inputData.masterData.selectedStbTimePoint\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"nstbstudyplancode\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedStabilityStudyPlan: inputData.selectedStabilityStudyPlan,\r\n                            selectedPreregno: inputData.nstbstudyplancode,\r\n                            selectedStbTimePoint: inputData.masterData.StbTimePointGet.length > 0 ?\r\n                                [inputData.masterData.StbTimePointGet[0]] : [],\r\n                        }\r\n\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedStbTimePointTest: masterData.StbTimePointTestGet.length > 0 ? [masterData.StbTimePointTestGet[0]] : []\r\n                        }\r\n\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        testskip = 0;\r\n                        subsampleskip = 0;\r\n                        skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                    }\r\n\r\n                    if (inputData.masterData.selectedStabilityStudyPlan && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedStabilityStudyPlan.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\"\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    // let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    // Start of ALPD-4130 on Save Additional Filter - ATE-241\r\n                    let multifilterInfo = {}\r\n                    if (inputData.multiFilterLoad !== undefined) {\r\n                        if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                            inputData.searchSampleRef.current.value = \"\";\r\n                        }\r\n                        if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                            inputData.searchSubSampleRef.current.value = \"\";\r\n                        }\r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\";\r\n                        }\r\n                        multifilterInfo = {\r\n                            multiFilterLoad: inputData.multiFilterLoad,\r\n                            openModal: inputData.openModal,\r\n                            searchSampleRef: inputData.searchSampleRef,\r\n                            searchSubSampleRef: inputData.searchSubSampleRef,\r\n                            searchTestRef: inputData.searchTestRef,\r\n                            testskip: inputData.testskip,\r\n                            subsampleskip: inputData.subsampleskip,\r\n                            skip: inputData.skip,\r\n                            // filterColumnActive:true\r\n                        }\r\n                    }\r\n                    //  End of ALPD-4130 ATE-241\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            activeTabIndex:  false,\r\n                            // ALPD-4130 Additional Filter Info ATE-241\r\n                            ...multifilterInfo,\r\n                            // inputParam:inputData\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        // else {\r\n        //     let bool = false;\r\n        //     let skipInfo = {};\r\n        //     let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n        //     let oldSelectedTest = inputData.masterData.selectedStbTimePointTest\r\n        //     let oldselectedStbTimePoint = inputData.masterData.selectedStbTimePoint\r\n        //     // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //     let isGrandChildGetRequired = false;\r\n        //     let TestSelected = [];\r\n        //     let subSampleSelected = [];\r\n\r\n\r\n        //     if (inputData[\"statusNone\"]) {\r\n        //         TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //         subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //     }\r\n        //     else {\r\n        //         TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //         subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //     }\r\n\r\n        //     if (TestSelected.length > 0) {\r\n        //         isGrandChildGetRequired = false;\r\n        //     } else {\r\n        //         isGrandChildGetRequired = true;\r\n        //     }\r\n        //     fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStabilityStudyPlan, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbstudyplancode\", inputData.removeElementFromArray);\r\n        //     if (isGrandChildGetRequired) {\r\n        //         let selectedStabilityStudyPlan = inputData.selectedStabilityStudyPlan;\r\n        //         let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.StbTimePointTestGet, \"nstbtimepointtestcode\");\r\n        //         let selectedStbTimePointTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n        //             inputData.masterData.StbTimePointTestGet.length > 0 ? [inputData.masterData.StbTimePointTestGet[0]] : [];\r\n        //         let nstbtimepointtestcode = selectedStbTimePointTest.length > 0 ? selectedStbTimePointTest.map(x => x.nstbtimepointtestcode).join(\",\") : \"-1\";\r\n        //         let selectedStbTimePoint = inputData.masterData.StbTimePointGet\r\n\r\n        //         if (subSample) {\r\n        //             let filterselectedStbTimePoint = getSameRecordFromTwoArrays(oldselectedStbTimePoint, inputData.masterData.StbTimePointGet, \"nstbtimepointcode\");\r\n        //             selectedStbTimePoint = filterselectedStbTimePoint.length > 0 ? filterselectedStbTimePoint : [inputData.masterData.StbTimePointGet[0]];\r\n        //             if (inputData.masterData.StbTimePointGet.length <= inputData.subsampleskip) {\r\n        //                 subsampleskip = 0;\r\n        //                 skipInfo = { subsampletake, subsampleskip }\r\n        //             }\r\n\r\n        //         }\r\n        //         // START ALPD-3671 VISHAKH\r\n        //         let masterData = { ...inputData.masterData, selectedStabilityStudyPlan, selectedStbTimePoint, selectedStbTimePointTest }\r\n        //         if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n        //             inputData.searchSubSampleRef.current.value = \"\";\r\n        //             masterData['searchedSubSample'] = undefined\r\n        //         }\r\n        //         if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n        //             inputData.searchTestRef.current.value = \"\"\r\n        //             masterData['searchedTest'] = undefined\r\n        //         }\r\n        //         // END ALPD-3671 VISHAKH\r\n        //         if (inputData.masterData.StbTimePointTestGet.length <= inputData.testskip) {\r\n        //             testskip = 0;\r\n        //             bool = true\r\n        //         }\r\n        //         if (bool) {\r\n        //             skipInfo = { ...skipInfo, testskip, testtake }\r\n        //         }\r\n        //         // inputData = {\r\n        //         //     ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\r\n        //         //     selectedStbTimePoint, checkBoxOperation: 3, skipInfo, masterData\r\n        //         // }\r\n        //         inputData = {\r\n        //             ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\", \"RegistrationTestAttachment\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\r\n        //             selectedStbTimePoint, checkBoxOperation: checkBoxOperation.SINGLESELECT, skipInfo, masterData\r\n        //         }\r\n        //         if (subSample) {\r\n        //             if (selectedStbTimePointTest.length === 0) {\r\n        //                 inputData[\"nstbstudyplancode\"] = selectedStbTimePoint.map(x => x.nstbstudyplancode).join(\",\")\r\n        //                 inputData[\"nstbtimepointcode\"] = selectedStbTimePoint.map(x => x.nstbtimepointcode).join(\",\")\r\n        //                 // inputData[\"checkBoxOperation\"] = 3\r\n        //                 inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT\r\n        //                 inputData[\"childTabsKey\"] = [\"StbTimePointTestGet\"]\r\n        //               //  dispatch(getRegistrationTestDetail(inputData, true));\r\n        //             } else {\r\n        //                 //dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n        //             }\r\n        //         } else {\r\n        //             //dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         let masterData = {\r\n        //             ...inputData.masterData,\r\n        //             selectedStabilityStudyPlan: inputData.selectedStabilityStudyPlan,\r\n        //             selectedPreregno: inputData.nstbstudyplancode,\r\n        //             selectedStbTimePointTest: TestSelected ? TestSelected : inputData.masterData.StbTimePointTestGet.length > 0 ? [inputData.masterData.StbTimePointTestGet[0]] : [],\r\n        //             // RegistrationTestComment,\r\n        //             selectedStbTimePoint: subSampleSelected ? subSampleSelected : inputData.masterData.StbTimePointGet\r\n        //         }\r\n        //         // START ALPD-3671 VISHAKH\r\n        //         if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n        //             inputData.searchSubSampleRef.current.value = \"\";\r\n        //             masterData['searchedSubSample'] = undefined\r\n        //         }\r\n        //         if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n        //             inputData.searchTestRef.current.value = \"\"\r\n        //             masterData['searchedTest'] = undefined\r\n        //         }\r\n        //         // END ALPD-3671 VISHAKH\r\n        //         let subsamplecheck = true;\r\n        //         if (subSample) {\r\n        //             let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePoint, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n        //             if (SubSampleSelected.length > 0) {\r\n        //                 let filterselectedStbTimePoint = getSameRecordFromTwoArrays(oldselectedStbTimePoint, inputData.masterData.StbTimePointGet, \"nstbtimepointcode\");\r\n        //                 if (filterselectedStbTimePoint.length === 0) {\r\n        //                     let wholeSubSample = masterData.StbTimePointGet.map(b => b.nstbtimepointcode)\r\n        //                     // START ALPD-3625 VISHAKH\r\n        //                     // oldselectedStbTimePoint.forEach((test, index) => {\r\n        //                     //     if (!wholeSubSample.includes(test.nstbtimepointcode)) {\r\n        //                     //         oldselectedStbTimePoint.splice(index, 1)\r\n        //                     //     }\r\n        //                     //     return null;\r\n        //                     // })\r\n        //                     oldselectedStbTimePoint = oldselectedStbTimePoint.filter(item =>\r\n        //                         wholeSubSample.includes(item.nstbtimepointcode)\r\n        //                     );\r\n        //                     // END ALPD-3625 VISHAKH\r\n        //                     if (oldselectedStbTimePoint.length === 0 && wholeSubSample.length > 0\r\n        //                         && masterData.selectedStbTimePointTest.length === 0) {\r\n        //                         const selectedStbTimePoint1 = [inputData.masterData.StbTimePointGet[0]];\r\n        //                         masterData = {\r\n        //                             ...masterData,\r\n        //                             selectedStbTimePoint: selectedStbTimePoint1,\r\n        //                             selectedStbTimePointTest: []\r\n        //                         }\r\n        //                         inputData = { ...inputData, ...masterData }\r\n        //                         inputData[\"nstbstudyplancode\"] = selectedStbTimePoint1.map(x => x.nstbstudyplancode).join(\",\")\r\n        //                         inputData[\"nstbtimepointcode\"] = selectedStbTimePoint1.map(x => x.nstbtimepointcode).join(\",\")\r\n        //                         // inputData[\"checkBoxOperation\"] = 3\r\n        //                         inputData[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT\r\n        //                         inputData[\"childTabsKey\"] = [\"StbTimePointTestGet\"]\r\n        //                         subsamplecheck = false;\r\n        //                         //dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n        //                     }\r\n        //                 } else {\r\n        //                     oldselectedStbTimePoint = filterselectedStbTimePoint\r\n        //                 }\r\n\r\n        //             } else {\r\n        //                 let wholeSubSample = masterData.StbTimePointGet.map(b => b.nstbtimepointcode)\r\n        //                 // START ALPD-3625 VISHAKH\r\n        //                 // oldselectedStbTimePoint.forEach((test, index) => {\r\n        //                 //     if (!wholeSubSample.includes(test.nstbtimepointcode)) {\r\n        //                 //         oldselectedStbTimePoint.splice(index, 1)\r\n        //                 //     }\r\n        //                 //     return null;\r\n        //                 // })\r\n        //                 oldselectedStbTimePoint = oldselectedStbTimePoint.filter(item =>\r\n        //                     wholeSubSample.includes(item.nstbtimepointcode)\r\n        //                 );\r\n        //                 // END ALPD-3625 VISHAKH\r\n        //             }\r\n\r\n        //             if (subsamplecheck) {\r\n        //                 masterData = {\r\n        //                     ...masterData,\r\n        //                     selectedStbTimePoint: oldselectedStbTimePoint\r\n        //                 }\r\n        //             }\r\n        //             if (inputData.masterData.StbTimePointGet.length <= inputData.subsampleskip) {\r\n        //                 subsampleskip = 0;\r\n        //                 skipInfo = { subsampleskip, subsampletake }\r\n        //             }\r\n        //         }\r\n        //         let wholeTestList = masterData.StbTimePointTestGet.map(b => b.nstbtimepointtestcode)\r\n        //         // START ALPD-3625 VISHAKH\r\n        //         // oldSelectedTest.forEach((test, index) => {\r\n        //         //     if (!wholeTestList.includes(test.nstbtimepointtestcode)) {\r\n        //         //         oldSelectedTest.splice(index, 1)\r\n        //         //     }\r\n        //         //     return null;\r\n        //         // })\r\n        //         oldSelectedTest = oldSelectedTest.filter(item =>\r\n        //             wholeTestList.includes(item.nstbtimepointtestcode)\r\n        //         );\r\n        //         // END ALPD-3625 VISHAKH\r\n        //         let keepOld = false;\r\n        //         let nstbtimepointtestcode;\r\n        //         if (oldSelectedTest.length > 0) {\r\n        //             keepOld = true\r\n        //             masterData = {\r\n        //                 ...masterData,\r\n        //                 selectedStbTimePointTest: oldSelectedTest\r\n        //             }\r\n        //         } else {\r\n        //             nstbtimepointtestcode = inputData.masterData.StbTimePointTestGet.length > 0 ? inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode : \"-1\"\r\n        //         }\r\n        //         masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, nstbtimepointtestcode, \"nstbtimepointtestcode\")\r\n        //         masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, nstbtimepointtestcode, \"nstbtimepointtestcode\")\r\n        //         let skipInfo = {};\r\n        //         if (inputData.masterData.StbTimePointTestGet.length <= inputData.testskip) {\r\n        //             testskip = 0;\r\n        //             bool = true\r\n        //         }\r\n        //         if (bool) {\r\n        //             skipInfo = { ...skipInfo, testskip, testtake }\r\n        //         }\r\n\r\n        //         let dataStateArray = [\r\n        //             { activeName: 'selectedStabilityStudyPlan', dataStateName: 'sampleGridDataState' },\r\n        //             { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n        //             { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n        //             { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n        //         ]\r\n        //         dataStateArray.map(arr => {\r\n        //             if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n        //                 masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n        //                 skipInfo = {\r\n        //                     ...skipInfo,\r\n        //                     [arr.dataStateName]: {\r\n        //                         ...inputData[arr.dataStateName],\r\n        //                         skip: 0,\r\n        //                         sort: undefined,\r\n        //                         filter: undefined\r\n        //                     }\r\n        //                 }\r\n        //             } else {\r\n        //                 skipInfo = {\r\n        //                     ...skipInfo,\r\n        //                     [arr.dataStateName]: {\r\n        //                         ...inputData[arr.dataStateName],\r\n        //                         sort: undefined,\r\n        //                         filter: undefined\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //             return null;\r\n        //         });\r\n        //         dispatch({\r\n        //             type: DEFAULT_RETURN, payload: {\r\n        //                 masterData,\r\n        //                 loading: false,\r\n        //                 showFilter: false,\r\n        //                 activeSampleTab: inputData.activeSampleTab,\r\n        //                 activeTestTab: inputData.activeTestTab,\r\n        //                 ...skipInfo,\r\n        //                 // activeTabIndex: inputData.activeTabIndex\r\n        //             }\r\n        //         })\r\n        //     }\r\n\r\n        // }\r\n\r\n    }\r\n}\r\n\r\nexport function getTimePointTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            nstbstudyplancode: inputData.nstbstudyplancode,\r\n            nstbtimepointcode: inputData.nstbtimepointcode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            selectedTransactionsamplecode: inputData.selectedStbTimePoint && inputData.selectedStbTimePoint.length > 0 && inputData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\"),\r\n        }\r\n        const subSample = inputData.nneedsubsample;\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"stabilitystudyplan/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data, 'descending', 'nstbstudyplancode')\r\n                    let oldSelectedTest = inputData.masterData.selectedStbTimePointTest || []\r\n                    let oldselectedStbTimePoint = inputData.masterData.selectedStbTimePoint || []\r\n                    let outsourceDetailsList = response.data && response.data.OutsourceDetailsList;\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointcode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedStbTimePoint: inputData.selectedStbTimePoint,\r\n                        selectedTransactionsamplecode: inputData.nstbtimepointcode,\r\n                        selectedStbTimePointTest: inputData.masterData.StbTimePointTestGet.length > 0 ?\r\n                            [inputData.masterData.StbTimePointTestGet[0]] : [],\r\n                    }\r\n                    let testList = reArrangeArrays(inputData.masterData.StbTimePointGet, response.data.StbTimePointTestGet, \"nstbtimepointcode\");\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedStbTimePointTest: testList ? testList.length > 0 ? [testList[0]] : [] : [],\r\n                        StbTimePointTestGet: testList ? testList.length > 0 ? testList : [] : [],\r\n                    }\r\n\r\n\r\n\r\n                    if (subSample) {\r\n                        let wholeSubsampleList = masterData.StbTimePointGet.map(b => b.nstbtimepointcode)\r\n                        // START ALPD-3625 VISHAKH\r\n                        // oldselectedStbTimePoint.map((test, index) => {\r\n                        //     if (!wholeSubsampleList.includes(test.nstbtimepointcode)) {\r\n                        //         oldselectedStbTimePoint.splice(index, 1)\r\n                        //     }\r\n                        //     return null;\r\n                        // })\r\n                        oldselectedStbTimePoint = oldselectedStbTimePoint.filter(item =>\r\n                            wholeSubsampleList.includes(item.nstbtimepointcode)\r\n                        );\r\n                        // END ALPD-3625 VISHAKH\r\n                        let keepOld = false;\r\n                        let nstbtimepointcode;\r\n                        if (oldselectedStbTimePoint.length > 0) {\r\n                            keepOld = true\r\n                        } else {\r\n                            nstbtimepointcode = masterData.selectedStbTimePoint[0].nstbtimepointcode\r\n                        }\r\n                    }\r\n\r\n                    let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                    // let bool = false;\r\n                    // Commented bool value because no need to check bool condition to update skipInfo value.\r\n                    let skipInfo = {}\r\n                    // if (inputData.masterData.StbTimePointTestGet.length < inputData.testskip) {\r\n                    testskip = 0;\r\n                    // bool = true\r\n                    // }\r\n                    if (inputData.masterData.StbTimePointGet.length < inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        // bool = true\r\n                    }\r\n                    // if (bool) {\r\n                    skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                    // }\r\n                    if (inputData.masterData.selectedStbTimePoint && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedStbTimePoint.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    //  let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            // activeTabIndex: inputData.activeTabIndex,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            activeTabIndex:  false,\r\n                            //  inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedStbTimePointTest\r\n            // START ALPD-3625 VISHAKH\r\n            // let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbstudyplancode, \"nstbstudyplancode\");\r\n            let TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.selectedStbTimePointTest, inputData.removeElementFromArray[0].nstbtimepointcode, \"nstbtimepointcode\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n            // END ALPD-3625 VISHAKH\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStbTimePoint, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointcode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let nstbtimepointtestcode = inputData.masterData.StbTimePointTestGet.length > 0 ? inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode.toString() : \"-1\";\r\n                let selectedStbTimePoint = inputData.selectedStbTimePoint;\r\n                // let selectedPreregno = inputData.nstbstudyplancode;\r\n                let selectedStbTimePointTest = inputData.masterData.StbTimePointTestGet.length > 0 ? [inputData.masterData.StbTimePointTestGet[0]] : [];\r\n                // let selectedStbTimePoint = inputData.masterData.StbTimePointGet\r\n                let masterData = { ...inputData.masterData, selectedStbTimePoint, selectedStbTimePointTest }\r\n                // inputData = {\r\n                //     ...inputData, childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationParameter\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\r\n                //     selectedStbTimePoint, checkBoxOperation: 3, activeTabIndex: inputData.masterData.activeTabIndex\r\n                // }\r\n                // START ALPD-3671 VISHAKH\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // END ALPD-3671 VISHAKH\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationParameter\"], nstbtimepointtestcode, masterData, selectedStbTimePointTest,\r\n                    selectedStbTimePoint, checkBoxOperation: checkBoxOperation.SINGLESELECT, activeTabIndex: inputData.masterData.activeTabIndex\r\n                }\r\n                // dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedStbTimePoint: inputData.selectedStbTimePoint,\r\n                    selectedTransactioncode: inputData.nstbtimepointcode,\r\n                    selectedStbTimePointTest: inputData.masterData.StbTimePointTestGet.length > 0 ?\r\n                        [inputData.masterData.StbTimePointTestGet[0]] : [],\r\n                }\r\n                // START ALPD-3671 VISHAKH\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // END ALPD-3671 VISHAKH\r\n                const wholeTestList = masterData.StbTimePointTestGet.map(b => b.nstbtimepointtestcode)\r\n                // START ALPD-3625 VISHAKH\r\n                // oldSelectedTest.forEach((test, index) => {\r\n                //     if (!wholeTestList.includes(test.nstbtimepointtestcode)) {\r\n                //         oldSelectedTest.splice(index, 1)\r\n                //     }\r\n                //     return null;\r\n                // })\r\n                oldSelectedTest = oldSelectedTest.filter(item =>\r\n                    wholeTestList.includes(item.nstbtimepointtestcode)\r\n                );\r\n                // END ALPD-3625 VISHAKH\r\n                let keepOld = false;\r\n                let nstbtimepointtestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedStbTimePointTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    nstbtimepointtestcode = inputData.masterData.StbTimePointTestGet.length > 0 ?\r\n                        inputData.masterData.StbTimePointTestGet[0].nstbtimepointtestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, nstbtimepointtestcode, \"nstbtimepointtestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, nstbtimepointtestcode, \"nstbtimepointtestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedStbTimePoint', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        // activeTabIndex: inputData.activeTabIndex,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/deleteStbStudyPlan\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    ...response.data\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    //[modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {},\r\n                    showConfirmAlert: false,\r\n                    createTestConfirmMessage: undefined,\r\n                    showFilter: false,\r\n                    skip: 0,\r\n                    testskip: 0,\r\n                    take: undefined,\r\n                    testtake: undefined,\r\n                    subsampletake: undefined,\r\n                    subsampleskip: 0,\r\n                    showSample: undefined, regSampleExisted: false,\r\n\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes';\r\n                inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake: undefined,\r\n                        subsampleskip: 0,\r\n                        showSample: undefined, regSampleExisted: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function approveStbStudyPlan(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/approveStabilityStudyPlan\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"StabilityStudyPlanGet\"], LoginProps.StabilityStudyPlanGet, \"nstbstudyplancode\");\r\n                replaceUpdatedObject(response.data[\"StbTimePointGet\"], LoginProps.StbTimePointGet, \"nstbtimepointcode\");\r\n                replaceUpdatedObject(response.data[\"StbTimePointTestGet\"], LoginProps.StbTimePointTestGet, \"nstbtimepointtestcode\");\r\n\r\n                delete response.data[\"StabilityStudyPlanGet\"];\r\n                delete response.data[\"StbTimePointGet\"];\r\n                delete response.data[\"StbTimePointTestGet\"];\r\n                let masterData = {\r\n                    ...LoginProps, ...response.data,\r\n                    selectedStabilityStudyPlan: replaceUpdatedObject(response.data[\"selectedStabilityStudyPlan\"], LoginProps.selectedStabilityStudyPlan, \"nstbstudyplancode\"),\r\n                    selectedStbTimePoint: replaceUpdatedObject(response.data[\"selectedStbTimePoint\"], LoginProps.selectedStbTimePoint, \"nstbtimepointcode\"),\r\n                    selectedStbTimePointTest: replaceUpdatedObject(response.data[\"selectedStbTimePointTest\"], LoginProps.selectedStbTimePointTest, \"nstbtimepointtestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined,\r\n                    showConfirmAlert: false,\r\n                    acceptConfirmMessage: undefined,\r\n                    skip: 0,\r\n                    testskip: 0,\r\n                    take: undefined,\r\n                    testtake: undefined,\r\n                    subsampletake: undefined,\r\n                    subsampleskip: 0,\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                // toast.error(error.message);           \r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                } else {\r\n                    //toast.info(intl.formatMessage({ id: error.response.data[\"rtn\"] }));\r\n                    if (error.response.data.NeedConfirmAlert) {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                showConfirmAlert: true,\r\n                                acceptConfirmMessage: error.response.data.rtn,\r\n                                acceptConfirmParam: { inputParam, masterData: LoginProps },\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //toast.error(error.message);\r\n                        toast.warn(intl.formatMessage({ id: error.response.data[\"rtn\"] }));\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                loading: false,\r\n                                showConfirmAlert: false, acceptConfirmMessage: undefined\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function deleteTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/deleteTest\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    StbTimePointTestGet: sortData(response.data[\"StbTimePointTestGet\"], \"descending\", \"nstbtimepointtestcode\"),\r\n                    StbTimePointGet: sortData(LoginProps[\"StbTimePointGet\"], \"descending\", \"nstbtimepointcode\"),\r\n                    selectedStbTimePointTest: response.data[\"selectedStbTimePointTest\"],\r\n                    //  selectedStbTimePoint: response.data[\"StbTimePointGet\"],\r\n                    selectedStbTimePoint: response.data[\"selectedStbTimePoint\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    StabilityStudyPlanGet: replaceUpdatedObject(response.data.selectedStabilityStudyPlan, LoginProps.StabilityStudyPlanGet, 'nstbstudyplancode')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    //[modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {},\r\n                    showConfirmAlert: false,\r\n                    createTestConfirmMessage: undefined\r\n\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'no';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function getEditStbTimePointDetails(inputParam, columnList, selectedRecord1,\r\n    childColumnList, comboComponents,\r\n    withoutCombocomponent, specBasedComponent) {\r\n    return function (dispatch) {\r\n\r\n        let { userInfo, operation, masterData } = { ...inputParam };\r\n\r\n        if (masterData[\"selectedStbTimePoint\"].length > 1 ||\r\n            masterData[\"selectedStbTimePoint\"]\r\n                .findIndex(x => x[inputParam.primaryKeyName] === inputParam[\"mastertoedit\"][inputParam.primaryKeyName])\r\n            === -1) {\r\n            inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] = true;\r\n        }\r\n\r\n        masterData[\"selectedStbTimePoint\"] = [];\r\n        masterData[\"selectedStbTimePoint\"].push(inputParam[\"mastertoedit\"]);\r\n\r\n        inputParam.editSubSampleRegParam[\"nstbstudyplancode\"] = inputParam[\"mastertoedit\"][\"nstbstudyplancode\"];\r\n        inputParam.editSubSampleRegParam[\"checkBoxOperation\"] = checkBoxOperation.SINGLESELECT;\r\n        inputParam.editSubSampleRegParam[\"nfilterstatus\"] = inputParam[\"mastertoedit\"][\"ntransactionstatus\"];\r\n        inputParam.editSubSampleRegParam[\"napprovalconfigcode\"] = inputParam[\"mastertoedit\"][\"napprovalconfigcode\"];\r\n\r\n        const nstbtimepointcode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        if (nstbtimepointcode === undefined) {\r\n            toast.info(intl.formattedMessage({ id: \"IDS_SELECTVALIDSUBSAMPLE\" }));\r\n        }\r\n        else {\r\n            let urlArray = [];\r\n\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n            const selectedRegistration = rsapi.post(\"/stabilitystudyplan/getEditStbTimePointDetails\", {\r\n                ...inputParam.editSubSampleRegParam, nstbtimepointcode, parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo: userInfo\r\n            })\r\n\r\n            const dateService = rsapi.post(\"dynamicpreregdesign/dateValidation\", {\r\n                datecolumnlist: withoutCombocomponent.filter(x => x.inputtype === \"date\"),\r\n                userinfo: userInfo\r\n            })\r\n\r\n\r\n            urlArray = [timeZoneService, selectedRegistration, dateService]\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = { ...response[1].data[\"EditData\"] };\r\n\r\n                    selectedRecord = { ...selectedRecord, ...selectedRecord['jsondata'] }\r\n\r\n                    const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                    const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                    const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n\r\n\r\n                    if (specBasedComponent) {\r\n                        selectedRecord[\"ncomponentcode\"] = { label: selectedRecord[\"scomponentname\"], value: selectedRecord[\"ncomponentcode\"] }\r\n                    }\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    delete comboData['EditData']\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoadForEdit(x, comboData, selectedRecord,\r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n\r\n                    withoutCombocomponent.map(date => {\r\n                        if (date.inputtype === 'date') {\r\n                            selectedRecord[date.label] = selectedRecord[date.label] && selectedRecord[date.label] !== '-' ?\r\n                                rearrangeDateFormat(userInfo, selectedRecord[date.label]) : \"\"\r\n\r\n                            if (date.nperiodcode) {\r\n                                selectedRecord[date.label + \"value\"] = response[2].data[date.label] ?\r\n                                    new Date(response[2].data[date.label][\"datevalue\"]) : null;\r\n                            } else {\r\n                                selectedRecord[date.label + \"value\"] = new Date();\r\n                            }\r\n\r\n                            if (date.hidebeforedate) {\r\n                                selectedRecord[date.label + \"min\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                            if (date.hideafterdate) {\r\n                                selectedRecord[date.label + \"max\"] = selectedRecord[date.label + \"value\"]\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    selectedRecord = { ...selectedRecord }\r\n\r\n                    if (inputParam.editSubSampleRegParam[\"getSubSampleChildDetail\"] === true) {\r\n                        if (masterData[\"searchedTest\"]) {\r\n                            if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                                inputParam.searchTestRef.current.value = \"\"\r\n                                masterData['searchedTest'] = undefined\r\n                            }\r\n                        }\r\n                        masterData = { ...masterData, ...response[1].data[\"SubSampleChildDetail\"] };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            screenName: \"IDS_TIMEPOINT\",\r\n                            operation: \"update\",\r\n                            specBasedComponent,\r\n                            //  regRecordToEdit:recordToEdit\r\n                            masterData,\r\n                            withoutCombocomponent\r\n                        }\r\n                    })\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    //console.log(\"error:\", error);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.info(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function updateStbTimePoint(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        if (inputParam.isFileupload) {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/updateStbTimePoint\", inputParam.formData)\r\n        } else {\r\n            requestUrl = rsapi.post(\"/stabilitystudyplan/updateStbTimePoint\", inputParam.inputData)\r\n        }\r\n        return requestUrl\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"StbTimePointGet\"], masterData.StbTimePointGet, \"nstbtimepointcode\");\r\n                let selectedStbTimePointTest = response.data[\"selectedStbTimePointTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    selectedStbTimePoint: response.data[\"selectedStbTimePoint\"],\r\n                    selectedStbTimePointTest: replaceUpdatedObject(response.data[\"selectedStbTimePointTest\"], masterData.selectedStbTimePointTest, \"nstbtimepointtestcode\"),\r\n                    selectedStbTimePointTest,\r\n                    RegistrationParameter: response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: intl.formatMessage({ id: \"IDS_TIMEPOINT\" }),\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign: false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelStbTimePointAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/deleteStbTimePoint\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    StbTimePointTestGet: sortData(response.data[\"StbTimePointTestGet\"], \"descending\", \"nstbtimepointtestcode\"),\r\n                    StbTimePointGet: sortData(response.data[\"StbTimePointGet\"], \"descending\", \"nstbtimepointcode\"),\r\n                    selectedStbTimePointTest: response.data[\"selectedStbTimePointTest\"],\r\n                    selectedStbTimePoint: response.data[\"selectedStbTimePoint\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    StabilityStudyPlanGet: replaceUpdatedObject(response.data.selectedStabilityStudyPlan, LoginProps.StabilityStudyPlanGet, 'nstbstudyplancode')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    //[modalName]: false,\r\n                    loading: false,\r\n                    loadChildTest: false,\r\n                    showSample: undefined,\r\n                    openModal: false,\r\n                    selectedRecord: {},\r\n                    showConfirmAlert: false,\r\n                    createTestConfirmMessage: undefined\r\n\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no';\r\n                inputParam.postParamList[1]['clearFilter'] = 'yes';\r\n                inputParam.postParamList[2]['clearFilter'] = 'yes';\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/stabilitystudyplan/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/getRegTemplateTypeByRegSubType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function onApprovalConfigVersionChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/stabilitystudyplan/getApprovalConfigBasedTemplateDesign\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestDetailFromRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.nstbtimepointtestcode === \"\") {\r\n            inputData.nstbtimepointtestcode = \"0\";\r\n        }\r\n        if (inputData.nstbstudyplancode && inputData.nstbstudyplancode.length > 0) {\r\n            let inputParamData = {\r\n                nstbtimepointtestcode: inputData.nstbtimepointtestcode,\r\n                nstbstudyplancode: inputData.nstbstudyplancode,\r\n                userinfo: inputData.userinfo,\r\n                nstbtimepointcode: inputData.nstbtimepointcode ? inputData.nstbtimepointcode :\r\n                    inputData.selectedStbTimePoint && inputData.selectedStbTimePoint.map(item => item.nstbtimepointcode).join(\",\"),\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_TIMEPOINTRESULTS\":\r\n                    url = \"stabilitystudyplan/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_TESTHISTORY\":\r\n                    url = \"history/getTestHistory\"\r\n                    activeName = \"RegistrationTestHistory\"\r\n                    dataStateName = \"registrationTestHistoryDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_OUTSOURCEDETAILS\":\r\n                    url = \"registration/getOutsourceDetails\"\r\n                    break;\r\n                case \"IDS_EXTERNALORDERREPORTS\":\r\n                    url = \"registration/getExternalOrderAttachment\"\r\n                    break;\r\n                case \"IDS_TIMEPOINTHISTORY\":\r\n                    url = \"stabilitystudyplan/getTimePointHistory\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedStabilityStudyPlan: inputData.selectedStabilityStudyPlan || inputData.masterData.selectedStabilityStudyPlan, selectedStbTimePointTest: inputData.selectedStbTimePointTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStbTimePointTest, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointtestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointcode\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedStabilityStudyPlan: inputData.selectedStabilityStudyPlan || inputData.masterData.selectedStabilityStudyPlan,\r\n                                selectedStbTimePointTest: inputData.selectedStbTimePointTest,\r\n                                selectedPreregno: inputData.nstbstudyplancode,\r\n                                selectedSampleCode: inputData.nstbtimepointcode,\r\n                                selectedTestCode: inputData.nstbtimepointtestcode,\r\n                                activeTabIndex: inputData.activeTabIndex,\r\n                                activeTabId: inputData.activeTabId\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    activeTabIndex: inputData.activeTabIndex,\r\n                                    activeTabId: inputData.activeTabId,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.info(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedStbTimePointTest, inputData.childTabsKey, inputData.checkBoxOperation, \"nstbtimepointtestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedStbTimePointTest: inputData.selectedStbTimePointTest,\r\n                        selectedPreregno: inputData.nstbstudyplancode,\r\n                        selectedSampleCode: inputData.nstbtimepointcode,\r\n                        selectedTestCode: inputData.nstbtimepointtestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory, RegistrationTestHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                case \"IDS_TESTHISTORY\":\r\n                    RegistrationTestHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedStbTimePointTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory, RegistrationTestHistory\r\n                    }, loading: false,\r\n                    activeTabIndex: inputData.activeTabIndex,\r\n                    activeTabId: inputData.activeTabId,\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}