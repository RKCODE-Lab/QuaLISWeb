{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\RegisterSlideOut.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { HeaderSpan } from './registration.styled';\nimport './registration.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nclass RegisterSlideOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTestItem: [],\n      selectedSourceItem: [],\n      selectedTest: []\n    };\n  }\n\n  render() {\n    const testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      width: \"200px\"\n    }, {\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"ssectionname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_SOURCE\",\n      \"dataField\": \"ssourcename\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_METHOD\",\n      \"dataField\": \"smethodname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n      \"dataField\": \"sinstrumentcatname\",\n      width: \"200px\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DynamicSlideout, {\n      selectedRecord: this.props.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      message: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VERSION\",\n      message: \"Version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, this.props.selectedSpec && this.props.selectedSpec[\"sversion\"])))), this.props.subSample !== 3 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMPONENT\",\n      defaultMessage: \"Component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: e => this.props.AddComponent(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMPONENT\",\n      defaultMessage: \"Component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"slno\",\n      primaryKeyField: \"slno\",\n      selectedId: this.props.selectedComponent.slno // data={selectedTest}\n      ,\n      dataResult: process(this.props.Component || [], this.props.popUptestDataState),\n      dataState: this.props.popUptestDataState,\n      dataStateChange: this.props.componentDataStateChange,\n      extractedColumnList: this.props.componentColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true,\n      handleRowClick: this.props.handleComponentRowClick,\n      methodUrl: \"PopUp\",\n      gridHeight: \"350px\",\n      editRecordWORights: this.props.editComponent,\n      deleteRecordWORights: this.props.deleteComponent,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, this.props.subSample === 3 ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addTest(this.props.selectedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"ntestgrouptestcode\",\n      primaryKeyField: \"ntestgrouptestcode\" //selectedId={this.state.selectedTestItem.ntestgrouptestcode}\n      // data={selectedTest}\n      ,\n      dataResult: process([{\n        'stestsynonym': 'test1',\n        'ssectionname': 'sec1',\n        'ssourcename': 'source',\n        'smethodname': 'methodname',\n        'sinstrumentcatname': 'instrumentname'\n      }], this.props.popUptestDataState),\n      dataState: this.props.popUptestDataState,\n      dataStateChange: this.props.testdataStateChange,\n      extractedColumnList: testColumnList,\n      controlMap: new Map(),\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true // handleRowClick={this.handleRowClick}\n      ,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      deleteRecordWORights: this.props.deleteTest,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false,\n      isActionRequired: false,\n      handleRowClick: this.props.selectSubSample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: this.props.subSample === 3 ? 6 : 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addTest(this.props.selectedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"ntestgrouptestcode\",\n      primaryKeyField: \"ntestgrouptestcode\" //selectedId={this.state.selectedTestItem.ntestgrouptestcode}\n      // data={selectedTest}\n      ,\n      dataResult: process([{\n        'stestsynonym': 'test1',\n        'ssectionname': 'sec1',\n        'ssourcename': 'source',\n        'smethodname': 'methodname',\n        'sinstrumentcatname': 'instrumentname'\n      }], this.props.popUptestDataState),\n      dataState: this.props.popUptestDataState,\n      dataStateChange: this.props.testdataStateChange,\n      extractedColumnList: testColumnList,\n      controlMap: new Map(),\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true // handleRowClick={this.handleRowClick}\n      ,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      deleteRecordWORights: this.props.deleteTest,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(RegisterSlideOut);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/RegisterSlideOut.jsx"],"names":["React","Component","Row","Col","Nav","FormGroup","FormLabel","HeaderSpan","FontAwesomeIcon","faCartArrowDown","faFileImport","faPlus","FormattedMessage","injectIntl","process","toast","DataGrid","DynamicSlideout","ReadOnlyText","RegisterSlideOut","constructor","props","state","selectedTestItem","selectedSourceItem","selectedTest","render","testColumnList","width","selectedRecord","templateData","handleChange","handleDateChange","onInputOnChange","onNumericInputChange","comboData","onComboChange","userInfo","timeZoneList","defaultTimeZone","e","AddSpec","selectedSpec","label","subSample","AddComponent","selectedComponent","slno","popUptestDataState","componentDataStateChange","componentColumnList","controlMap","userRoleControlRights","inputParam","handleComponentRowClick","editComponent","deleteComponent","addTest","testdataStateChange","Map","deleteTest","selectSubSample"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,SAAxB,EAAmCC,SAAnC,QAAoD,iBAApD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,oBAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,MAAxC,QAAsD,mCAAtD;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAIA,MAAMC,gBAAN,SAA+BlB,SAA/B,CAAyC;AACrCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,EADT;AAETC,MAAAA,kBAAkB,EAAE,EAFX;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,cAAc,GAAG,CACnB;AAAE,iBAAW,cAAb;AAA6B,mBAAa,cAA1C;AAA0DC,MAAAA,KAAK,EAAE;AAAjE,KADmB,EAEnB;AAAE,iBAAW,aAAb;AAA4B,mBAAa,cAAzC;AAAyDA,MAAAA,KAAK,EAAE;AAAhE,KAFmB,EAGnB;AAAE,iBAAW,YAAb;AAA2B,mBAAa,aAAxC;AAAuDA,MAAAA,KAAK,EAAE;AAA9D,KAHmB,EAInB;AAAE,iBAAW,YAAb;AAA2B,mBAAa,aAAxC;AAAuDA,MAAAA,KAAK,EAAE;AAA9D,KAJmB,EAKnB;AAAE,iBAAW,wBAAb;AAAuC,mBAAa,oBAApD;AAA0EA,MAAAA,KAAK,EAAE;AAAjF,KALmB,CAAvB;AAOA,wBACI,uDACI,oBAAC,eAAD;AACI,MAAA,cAAc,EAAE,KAAKP,KAAL,CAAWQ,cAD/B;AAEI,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAF7B;AAGI,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,YAH7B;AAII,MAAA,gBAAgB,EAAE,KAAKV,KAAL,CAAWW,gBAJjC;AAKI,MAAA,eAAe,EAAE,KAAKX,KAAL,CAAWY,eALhC;AAMI,MAAA,oBAAoB,EAAE,KAAKC,oBAN/B;AAOI,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWc,SAP1B;AAQI,MAAA,aAAa,EAAE,KAAKd,KAAL,CAAWe,aAR9B;AASI,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QATzB;AAUI,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWiB,YAV7B;AAWI,MAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWkB,eAXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,mBAArB;AAAyC,MAAA,cAAc,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAGI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,wBAApB,CACI;AADJ;AAEI,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKnB,KAAL,CAAWoB,OAAX,CAAmBD,CAAnB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,oBAKI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,mBAArB;AAAyC,MAAA,cAAc,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAHJ,CADJ,CADJ,CADJ,CAdJ,eA+BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,mBAArB;AAAyC,MAAA,OAAO,EAAC,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CADJ,eAEA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,KAAKU,KAAL,CAAWqB,YAAX,CAAwB,mBAAxB,KAA8C,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,mBAAxB,EAA6CC,KAA1G,CAFA,CADJ,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,aAArB;AAAmC,MAAA,OAAO,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,KAAL,CAAWqB,YAAX,IAAyB,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,UAAxB,CAD9B,CAFJ,CADJ,CAPJ,CA/BJ,EA+CK,KAAKrB,KAAL,CAAWuB,SAAX,KAAuB,CAAvB,gBACD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAGI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,wBAApB;AACI,MAAA,OAAO,EAAGJ,CAAD,IAAO,KAAKnB,KAAL,CAAWwB,YAAX,CAAwBL,CAAxB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CADJ,CADJ,eAaI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,eAAe,EAAC,MAFpB;AAGI,MAAA,UAAU,EAAE,KAAKU,KAAL,CAAWyB,iBAAX,CAA6BC,IAH7C,CAII;AAJJ;AAKI,MAAA,UAAU,EAAEjC,OAAO,CAAE,KAAKO,KAAL,CAAWpB,SAAX,IAAsB,EAAxB,EAA4B,KAAKoB,KAAL,CAAW2B,kBAAvC,CALvB;AAMI,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW2B,kBAN1B;AAOI,MAAA,eAAe,EAAE,KAAK3B,KAAL,CAAW4B,wBAPhC;AAQI,MAAA,mBAAmB,EAAE,KAAK5B,KAAL,CAAW6B,mBARpC;AASI,MAAA,UAAU,EAAE,KAAK7B,KAAL,CAAW8B,UAT3B;AAUI,MAAA,qBAAqB,EAAE,KAAK9B,KAAL,CAAW+B,qBAVtC;AAWI,MAAA,uBAAuB,EAAE,IAX7B;AAYI,MAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWgC,UAZ3B;AAaI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWgB,QAbzB;AAcI,MAAA,QAAQ,EAAE,IAdd;AAeI,MAAA,UAAU,EAAE,YAfhB;AAgBI,MAAA,gBAAgB,EAAE,IAhBtB;AAiBI,MAAA,cAAc,EAAE,KAAKhB,KAAL,CAAWiC,uBAjB/B;AAkBI,MAAA,SAAS,EAAC,OAlBd;AAmBI,MAAA,UAAU,EAAE,OAnBhB;AAoBI,MAAA,kBAAkB,EAAE,KAAKjC,KAAL,CAAWkC,aApBnC;AAqBI,MAAA,oBAAoB,EAAE,KAAKlC,KAAL,CAAWmC,eArBrC;AAsBI,MAAA,wBAAwB,EAAE,IAtB9B;AAuBI,MAAA,sBAAsB,EAAE,IAvB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ,CADC,GA4CZ,EA3FO,eA4FI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKnC,KAAL,CAAWuB,SAAX,KAAuB,CAAvB,gBACD,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAa,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb,CADJ,eAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,wBAApB;AAA6C,MAAA,OAAO,EAAE,MAAM,KAAKvB,KAAL,CAAWoC,OAAX,CAAmB,KAAKpC,KAAL,CAAWyB,iBAA9B,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBAEI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ,CADR,eAUQ,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,oBADR;AAEI,MAAA,eAAe,EAAC,oBAFpB,CAGI;AACA;AAJJ;AAKI,MAAA,UAAU,EAAEG,OAAO,CAAC,CAAC;AACjB,wBAAgB,OADC;AACQ,wBAAgB,MADxB;AACgC,uBAAe,QAD/C;AAEjB,uBAAe,YAFE;AAEY,8BAAsB;AAFlC,OAAD,CAAD,EAGf,KAAKO,KAAL,CAAW2B,kBAHI,CALvB;AASI,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW2B,kBAT1B;AAUI,MAAA,eAAe,EAAE,KAAK3B,KAAL,CAAWqC,mBAVhC;AAWI,MAAA,mBAAmB,EAAE/B,cAXzB;AAYI,MAAA,UAAU,EAAE,IAAIgC,GAAJ,EAZhB;AAaI,MAAA,qBAAqB,EAAE,KAAKtC,KAAL,CAAW+B,qBAbtC;AAcI,MAAA,uBAAuB,EAAE,IAd7B;AAeI,MAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWgC,UAf3B;AAgBI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWgB,QAhBzB;AAiBI,MAAA,QAAQ,EAAE,IAjBd;AAkBI,MAAA,UAAU,EAAE,YAlBhB;AAmBI,MAAA,gBAAgB,EAAE,IAnBtB,CAoBI;AApBJ;AAqBI,MAAA,SAAS,EAAC,OArBd;AAsBI,MAAA,UAAU,EAAE,OAtBhB;AAuBI,MAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWuC,UAvBrC;AAwBI,MAAA,wBAAwB,EAAE,IAxB9B;AAyBI,MAAA,sBAAsB,EAAE,KAzB5B;AA0BI,MAAA,gBAAgB,EAAE,KA1BtB;AA2BI,MAAA,cAAc,EAAE,KAAKvC,KAAL,CAAWwC,eA3B/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVR,CADC,GAwCU,EAzCX,eA0CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,KAAKxC,KAAL,CAAWuB,SAAX,KAAuB,CAAvB,GAAyB,CAAzB,GAA2B,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAa,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,cAAc,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb,CADJ,eAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,wBAApB;AAA6C,MAAA,OAAO,EAAE,MAAM,KAAKvB,KAAL,CAAWoC,OAAX,CAAmB,KAAKpC,KAAL,CAAWyB,iBAA9B,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBAEI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,cAAc,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ,CADJ,eAUI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,oBADR;AAEI,MAAA,eAAe,EAAC,oBAFpB,CAGI;AACA;AAJJ;AAKI,MAAA,UAAU,EAAEG,OAAO,CAAC,CAAC;AACjB,wBAAgB,OADC;AACQ,wBAAgB,MADxB;AACgC,uBAAe,QAD/C;AAEjB,uBAAe,YAFE;AAEY,8BAAsB;AAFlC,OAAD,CAAD,EAGf,KAAKO,KAAL,CAAW2B,kBAHI,CALvB;AASI,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW2B,kBAT1B;AAUI,MAAA,eAAe,EAAE,KAAK3B,KAAL,CAAWqC,mBAVhC;AAWI,MAAA,mBAAmB,EAAE/B,cAXzB;AAYI,MAAA,UAAU,EAAE,IAAIgC,GAAJ,EAZhB;AAaI,MAAA,qBAAqB,EAAE,KAAKtC,KAAL,CAAW+B,qBAbtC;AAcI,MAAA,uBAAuB,EAAE,IAd7B;AAeI,MAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWgC,UAf3B;AAgBI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWgB,QAhBzB;AAiBI,MAAA,QAAQ,EAAE,IAjBd;AAkBI,MAAA,UAAU,EAAE,YAlBhB;AAmBI,MAAA,gBAAgB,EAAE,IAnBtB,CAoBI;AApBJ;AAqBI,MAAA,SAAS,EAAC,OArBd;AAsBI,MAAA,UAAU,EAAE,OAtBhB;AAuBI,MAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWuC,UAvBrC;AAwBI,MAAA,wBAAwB,EAAE,IAxB9B;AAyBI,MAAA,sBAAsB,EAAE,KAzB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA1CJ,CA5FJ,CADJ;AAgLH;;AAnMoC;;AAwMzC,eAAe/C,UAAU,CAACM,gBAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { HeaderSpan } from './registration.styled';\r\nimport './registration.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\n\r\n\r\nclass RegisterSlideOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTestItem: [],\r\n            selectedSourceItem: [],\r\n            selectedTest: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\r\n\r\n        return (\r\n            <>\r\n                <DynamicSlideout\r\n                    selectedRecord={this.props.selectedRecord}\r\n                    templateData={this.props.templateData}\r\n                    handleChange={this.props.handleChange}\r\n                    handleDateChange={this.props.handleDateChange}\r\n                    onInputOnChange={this.props.onInputOnChange}\r\n                    onNumericInputChange={this.onNumericInputChange}\r\n                    comboData={this.props.comboData}\r\n                    onComboChange={this.props.onComboChange}\r\n                    userInfo={this.props.userInfo}\r\n                    timeZoneList={this.props.timeZoneList}\r\n                    defaultTimeZone={this.props.defaultTimeZone}\r\n                />\r\n                <Row>\r\n                    <Col md={12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan>\r\n                                    <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                    // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                    onClick={(e) => this.props.AddSpec(e)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                    <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                        <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"]&&this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                            <ReadOnlyText>\r\n                                {this.props.selectedSpec&&this.props.selectedSpec[\"sversion\"]}\r\n                            </ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.subSample!==3?\r\n                <Row>\r\n                    <Col md={12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan>\r\n                                    <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                    onClick={(e) => this.props.AddComponent(e)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                    <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            key=\"slno\"\r\n                            primaryKeyField=\"slno\"\r\n                            selectedId={this.props.selectedComponent.slno}\r\n                            // data={selectedTest}\r\n                            dataResult={process( this.props.Component||[], this.props.popUptestDataState)}\r\n                            dataState={this.props.popUptestDataState}\r\n                            dataStateChange={this.props.componentDataStateChange}\r\n                            extractedColumnList={this.props.componentColumnList}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            handleRowClick={this.props.handleComponentRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"350px\"}\r\n                            editRecordWORights={this.props.editComponent}\r\n                            deleteRecordWORights={this.props.deleteComponent}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={true}\r\n                        >\r\n                        </DataGrid>\r\n                        {/* </Col> */}\r\n                    </Col>\r\n                    </Row>\r\n    :\"\"}\r\n                <Row>\r\n                {this.props.subSample===3?\r\n                <Col md={6}>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan> <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addTest(this.props.selectedComponent)} >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            key=\"ntestgrouptestcode\"\r\n                            primaryKeyField=\"ntestgrouptestcode\"\r\n                            //selectedId={this.state.selectedTestItem.ntestgrouptestcode}\r\n                            // data={selectedTest}\r\n                            dataResult={process([{\r\n                                'stestsynonym': 'test1', 'ssectionname': 'sec1', 'ssourcename': 'source',\r\n                                'smethodname': 'methodname', 'sinstrumentcatname': 'instrumentname'\r\n                            }], this.props.popUptestDataState)}\r\n                            dataState={this.props.popUptestDataState}\r\n                            dataStateChange={this.props.testdataStateChange}\r\n                            extractedColumnList={testColumnList}\r\n                            controlMap={new Map()}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            // handleRowClick={this.handleRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"400px\"}\r\n                            deleteRecordWORights={this.props.deleteTest}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={false}\r\n                            isActionRequired={false}\r\n                            handleRowClick={this.props.selectSubSample}\r\n                        />\r\n                    </Col>:\"\"}\r\n                    <Col md={this.props.subSample===3?6:12}>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addTest(this.props.selectedComponent)} >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            key=\"ntestgrouptestcode\"\r\n                            primaryKeyField=\"ntestgrouptestcode\"\r\n                            //selectedId={this.state.selectedTestItem.ntestgrouptestcode}\r\n                            // data={selectedTest}\r\n                            dataResult={process([{\r\n                                'stestsynonym': 'test1', 'ssectionname': 'sec1', 'ssourcename': 'source',\r\n                                'smethodname': 'methodname', 'sinstrumentcatname': 'instrumentname'\r\n                            }], this.props.popUptestDataState)}\r\n                            dataState={this.props.popUptestDataState}\r\n                            dataStateChange={this.props.testdataStateChange}\r\n                            extractedColumnList={testColumnList}\r\n                            controlMap={new Map()}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            // handleRowClick={this.handleRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"400px\"}\r\n                            deleteRecordWORights={this.props.deleteTest}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={false}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default injectIntl(RegisterSlideOut)\r\n"]},"metadata":{},"sourceType":"module"}