{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,FormGroup,FormLabel}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import AddCountry from'./AddCountry';import Esign from'../../pages/audittrail/Esign';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ListWrapper,PrimaryHeader}from'../../components/client-group.styles';import{MediaLabel}from'../../components/add-client.styles';import rsapi from'../../rsapi';import{callService,crudMaster,updateStore,validateEsignCredential,fetchRecord}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{getControlMap,showEsign}from'../../components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Country=/*#__PURE__*/function(_React$Component){_inherits(Country,_React$Component);var _super=_createSuper(Country);function Country(_props){var _this;_classCallCheck(this,Country);_this=_super.call(this,_props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.openModal=function(ncontrolCode){var selectedRecord={\"ndefaultstatus\":4};//let selectedRecord = {};\nif(_this.props.Login.userInfo.nformcode===12){selectedRecord={\"nsafetymarkermand\":4};}else if(_this.props.Login.userInfo.nformcode===13){selectedRecord={\"nproducttypemand\":4};}var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,operation:\"create\",ncontrolCode:ncontrolCode,selectedId:null,openModal:true,screenName:_this.props.Login.inputParam.displayName}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};selectedId=null;}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;event.dataItem.expanded=!isExpanded;_this.setState(_objectSpread({},_this.props));};_this.detailBand=function(props){var Dataitem=props.dataItem;var OptionalFieldList=[{datafield:\"scountryshortname\",Column:\"Country Short Name\"},{datafield:\"stwocharcountry\",Column:\"Two Char Country\"},{datafield:\"sthreecharcountry\",Column:\"Three Char Country\"}];return/*#__PURE__*/React.createElement(Row,null,OptionalFieldList.map(function(fields){return/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:fields.Column,message:fields.Column})),/*#__PURE__*/React.createElement(MediaLabel,{className:\"readonly-text font-weight-normal\"},Dataitem[fields.datafield])));}));};_this.detailedFieldList=[{dataField:\"scountryshortname\",idsName:\"IDS_COUNTRYSHORTNAME\",columnSize:\"4\"},{dataField:\"stwocharcountry\",idsName:\"IDS_TWOCHARCOUNTRY\",columnSize:\"4\"},{dataField:\"sthreecharcountry\",idsName:\"IDS_THREECHARCOUNTRY\",columnSize:\"4\"}];_this.fetchRecord=function(primaryKeyName,primaryKeyValue,operation){var _rsapi$post;var url=_this.props.Login.inputParam.classUrl+\"/getActive\"+_this.props.Login.inputParam.methodUrl+\"ById\";rsapi.post(url,(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",_this.props.Login.userInfo),_rsapi$post)).then(function(response){_this.setState({selectedRecord:response.data,operation:operation,isOpen:true});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){//if (event.target.name === \"agree\") {\nselectedRecord[event.target.name]=event.target.checked===true?3:4;//}\n}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.deleteRecord=function(deleteParam){var _inputData;if(deleteParam.selectedRecord.expanded!==undefined){delete deleteParam.selectedRecord.expanded;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:deleteParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,deleteParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,selectedId:deleteParam.selectedRecord.ncountrycode,screenName:deleteParam.screenName,operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){//add / edit      \nvar dataState=undefined;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.props.Login.selectedId;inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=_this.state.selectedRecord;// this.extractedColumnList.map(item => {\n//     let fieldName = item.dataField;\n//     if (item.controlType === \"checkbox\") {\n//         fieldName = item.controlName\n//     }\n//     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][fieldName] = this.state.selectedRecord[fieldName] ? this.state.selectedRecord[fieldName] : \"\";\n// })\n_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=_this.state.selectedRecord[item];});dataState=_this.state.dataState;}else{//add               \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};// this.extractedColumnList.map(item => {\n//     let fieldName = item.dataField;\n//     if (item.controlType === \"checkbox\") {\n//         fieldName = item.controlName\n//     }\n//     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][fieldName] = this.state.selectedRecord[fieldName] ? this.state.selectedRecord[fieldName] : \"\";\n// })\n_this.fieldList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=_this.state.selectedRecord[item];});}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,selectedId:selectedId,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation,selectedId:selectedId}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.fieldList=[];var _dataState={skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,isOpen:false,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(Country,[{key:\"render\",value:function render(){var _this2=this;this.extractedColumnList=[{\"idsName\":\"IDS_COUNTRYNAME\",\"dataField\":\"scountryname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COUNTRYSHORTNAME\",\"dataField\":\"scountryshortname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TWOCHARCOUNTRY\",\"dataField\":\"stwocharcountry\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_THREECHARCOUNTRY\",\"dataField\":\"sthreecharcountry\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}// { \"idsName\": \"IDS_POOLCOUNTRY\", \"dataField\": \"spoolcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"npoolcountry\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n// { \"idsName\": \"IDS_BATCHCOUNTRY\", \"dataField\": \"sbatchcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"nbatchcountry\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\n];this.validationColumnList=[{\"idsName\":\"IDS_COUNTRYNAME\",\"dataField\":\"scountryname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COUNTRYSHORTNAME\",\"dataField\":\"scountryshortname\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TWOCHARCOUNTRY\",\"dataField\":\"stwocharcountry\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}// { \"idsName\": \"IDS_THREECHARCOUNTRY\", \"dataField\": \"sthreecharcountry\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n// { \"idsName\": \"IDS_POOLCOUNTRY\", \"dataField\": \"spoolcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"npoolcountry\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n// { \"idsName\": \"IDS_BATCHCOUNTRY\", \"dataField\": \"sbatchcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"nbatchcountry\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\n];this.fieldList=[\"scountryname\",\"scountryshortname\",\"stwocharcountry\",\"sthreecharcountry\"];var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),operation:\"update\",primaryKeyField:\"ncountrycode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={screenName:\"Country\",methodUrl:\"Country\",operation:\"delete\"};var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(PrimaryHeader,{className:\"d-flex justify-content-between mb-3\"}),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ncountrycode\"// expandField=\"expanded\"\n,detailedFieldList:this.detailedFieldList,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.fetchRecord,editParam:editParam,deleteRecord:this.deleteRecord,deleteParam:deleteParam,reloadData:this.reloadData,addRecord:function addRecord(){return _this2.openModal(addId);},pageable:{buttonCount:4,pageSizes:true},scrollable:\"scrollable\",gridHeight:600,isActionRequired:true,isToolBarRequired:true,hideColumnFilter:false,selectedId:this.props.Login.selectedId,hasDynamicColSize:true//isComponent={true}\n}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddCountry,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,formatMessage:this.props.intl.formatMessage})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return Country;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,fetchRecord:fetchRecord})(injectIntl(Country));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/Country.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Row","Col","FormGroup","FormLabel","toast","process","DataGrid","AddCountry","Esign","SlideOutModal","ListWrapper","PrimaryHeader","MediaLabel","rsapi","callService","crudMaster","updateStore","validateEsignCredential","fetchRecord","DEFAULT_RETURN","getControlMap","showEsign","mapStateToProps","state","Login","Country","props","dataStateChange","event","setState","dataResult","data","dataState","openModal","ncontrolCode","selectedRecord","userInfo","nformcode","updateInfo","typeName","operation","selectedId","screenName","inputParam","displayName","closeModal","loadEsign","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","detailBand","Dataitem","OptionalFieldList","datafield","Column","map","fields","detailedFieldList","dataField","idsName","columnSize","primaryKeyName","primaryKeyValue","url","classUrl","methodUrl","post","then","response","isOpen","catch","error","status","message","warn","onInputOnChange","target","type","name","checked","value","deleteRecord","deleteParam","inputData","toLowerCase","userRoleControlRights","screenData","masterData","ncountrycode","reloadData","onSaveClick","saveType","formRef","fieldList","item","nmastersitecode","intl","formatMessage","id","validateEsign","sreason","password","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","controlMap","Map","validationColumnList","addId","has","concat","get","ncontrolcode","editId","editParam","primaryKeyField","mandatoryFields","forEach","mandatory","push","buttonCount","pageSizes","previousProps","Object","values","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport AddCountry from './AddCountry';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ListWrapper, PrimaryHeader } from '../../components/client-group.styles';\r\nimport { MediaLabel } from '../../components/add-client.styles';\r\nimport rsapi from '../../rsapi';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential, fetchRecord } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { getControlMap, showEsign } from '../../components/CommonScript';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Country extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n        };\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    openModal = (ncontrolCode) => {\r\n        let selectedRecord = { \"ndefaultstatus\": 4 };\r\n        //let selectedRecord = {};\r\n        if (this.props.Login.userInfo.nformcode === 12) {\r\n            selectedRecord = { \"nsafetymarkermand\": 4 }\r\n        }\r\n        else if (this.props.Login.userInfo.nformcode === 13) {\r\n            selectedRecord = { \"nproducttypemand\": 4 }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord, operation: \"create\", ncontrolCode, selectedId: null,\r\n                openModal: true, screenName: this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                selectedId = null;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_COUNTRYNAME\", \"dataField\": \"scountryname\", \"width\": \"200px\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_COUNTRYSHORTNAME\", \"dataField\": \"scountryshortname\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_TWOCHARCOUNTRY\", \"dataField\": \"stwocharcountry\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_THREECHARCOUNTRY\", \"dataField\": \"sthreecharcountry\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            // { \"idsName\": \"IDS_POOLCOUNTRY\", \"dataField\": \"spoolcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"npoolcountry\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            // { \"idsName\": \"IDS_BATCHCOUNTRY\", \"dataField\": \"sbatchcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"nbatchcountry\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n        ]\r\n\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_COUNTRYNAME\", \"dataField\": \"scountryname\", \"width\": \"200px\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            { \"idsName\": \"IDS_COUNTRYSHORTNAME\", \"dataField\": \"scountryshortname\", \"width\": \"150px\",\"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n             { \"idsName\": \"IDS_TWOCHARCOUNTRY\", \"dataField\": \"stwocharcountry\", \"width\": \"150px\",\"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            // { \"idsName\": \"IDS_THREECHARCOUNTRY\", \"dataField\": \"sthreecharcountry\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            // { \"idsName\": \"IDS_POOLCOUNTRY\", \"dataField\": \"spoolcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"npoolcountry\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            // { \"idsName\": \"IDS_BATCHCOUNTRY\", \"dataField\": \"sbatchcountrystatus\", \"width\": \"200px\", \"isIdsField\": true, \"controlName\": \"nbatchcountry\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n        ]\r\n        \r\n        this.fieldList = [\"scountryname\", \"scountryshortname\", \"stwocharcountry\", \"sthreecharcountry\"];\r\n\r\n\r\n\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation: \"update\",\r\n            primaryKeyField: \"ncountrycode\", inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { screenName: \"Country\", methodUrl: \"Country\", operation: \"delete\" };\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                                {/* <HeaderName className=\"header-primary-md\">\r\n                                    {this.props.Login.inputParam && this.props.Login.inputParam.displayName ?\r\n                                        <FormattedMessage id={this.props.Login.inputParam.displayName} /> : \"\"}\r\n                                </HeaderName> */}\r\n\r\n                                {/* <Button className=\"btn btn-user btn-primary-blue\"\r\n                                    hidden={this.props.Login.inputParam && this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                    onClick={() => this.openModal(addId)} role=\"button\">\r\n                                    <FontAwesomeIcon icon={faPlus} /> {}\r\n                                    <FormattedMessage id={\"IDS_ADD\"} defaultMessage='Add' />\r\n                                </Button> */}\r\n                            </PrimaryHeader>\r\n\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"ncountrycode\"}\r\n                                    // expandField=\"expanded\"\r\n                                    detailedFieldList={this.detailedFieldList}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.fetchRecord}\r\n                                    editParam={editParam}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    deleteParam={deleteParam}\r\n                                    reloadData={this.reloadData}\r\n                                    addRecord={() => this.openModal(addId)}\r\n                                    pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                    scrollable={\"scrollable\"}\r\n                                    gridHeight={600}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    hideColumnFilter={false}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasDynamicColSize={true}\r\n                                //isComponent={true}\r\n\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddCountry\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.props });\r\n    }\r\n    detailBand = (props) => {\r\n\r\n        const Dataitem = props.dataItem\r\n        const OptionalFieldList = [\r\n            { datafield: \"scountryshortname\", Column: \"Country Short Name\" },\r\n            { datafield: \"stwocharcountry\", Column: \"Two Char Country\" },\r\n            { datafield: \"sthreecharcountry\", Column: \"Three Char Country\" },\r\n\r\n        ];\r\n        return (<Row>\r\n            {OptionalFieldList.map((fields) => {\r\n                return (\r\n                    <Col md='6'>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id={fields.Column} message={fields.Column} /></FormLabel>\r\n                            <MediaLabel className=\"readonly-text font-weight-normal\">{Dataitem[fields.datafield]}</MediaLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                )\r\n            })\r\n            }\r\n        </Row>)\r\n    }\r\n    detailedFieldList = [\r\n        { dataField: \"scountryshortname\", idsName: \"IDS_COUNTRYSHORTNAME\", columnSize:\"4\"},\r\n        { dataField: \"stwocharcountry\", idsName: \"IDS_TWOCHARCOUNTRY\",columnSize:\"4\" },\r\n        { dataField: \"sthreecharcountry\", idsName: \"IDS_THREECHARCOUNTRY\",columnSize:\"4\" },\r\n\r\n    ];\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    fetchRecord = (primaryKeyName, primaryKeyValue, operation) => {\r\n\r\n\r\n        const url = this.props.Login.inputParam.classUrl + \"/getActive\" + this.props.Login.inputParam.methodUrl + \"ById\";\r\n        rsapi.post(url, { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo })\r\n            .then(response => {\r\n\r\n                this.setState({ selectedRecord: response.data, operation, isOpen: true });\r\n            })\r\n            .catch(error => {\r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            //if (event.target.name === \"agree\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            //}\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        if (deleteParam.selectedRecord.expanded !== undefined) {\r\n            delete deleteParam.selectedRecord.expanded\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: deleteParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n\r\n                [deleteParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n\r\n            operation: deleteParam.operation\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, selectedId: deleteParam.selectedRecord.ncountrycode,\r\n\r\n                    screenName: deleteParam.screenName, operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit      \r\n        let dataState = undefined;\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let selectedId = null;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId = this.props.Login.selectedId;\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = this.state.selectedRecord;\r\n            // this.extractedColumnList.map(item => {\r\n            //     let fieldName = item.dataField;\r\n            //     if (item.controlType === \"checkbox\") {\r\n            //         fieldName = item.controlName\r\n            //     }\r\n            //     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][fieldName] = this.state.selectedRecord[fieldName] ? this.state.selectedRecord[fieldName] : \"\";\r\n            // })\r\n\r\n            this.fieldList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\r\n            })\r\n            dataState = this.state.dataState;\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            // this.extractedColumnList.map(item => {\r\n            //     let fieldName = item.dataField;\r\n            //     if (item.controlType === \"checkbox\") {\r\n            //         fieldName = item.controlName\r\n            //     }\r\n            //     return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][fieldName] = this.state.selectedRecord[fieldName] ? this.state.selectedRecord[fieldName] : \"\";\r\n            // })\r\n\r\n            this.fieldList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = this.state.selectedRecord[item]\r\n            })\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, selectedId,\r\n            operation: this.props.Login.operation, saveType, formRef, dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation, selectedId\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    fetchRecord\r\n})(injectIntl(Country));"]},"metadata":{},"sourceType":"module"}