{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\nimport { guid } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact GridLayoutItem component]({% slug overview_gridlayout %}).\n *\n * @example\n * ```jsx\n *\n * const App = () => {\n *   return (\n *     <GridLayout\n *       rows={[{height: 50}, {height: 50}, {height: 50}]}\n *       cols={[{width: 50}, {width: 50}, {width: 50}]}\n *       gap={{rows: 5, cols: 5}}\n *       align={{horizontal: 'stretch', vertical: 'stretch'}}\n *     >\n *       <GridLayoutItem row={1} col={1}>Box</GridLayoutItem>\n *       <GridLayoutItem row={1} col={2} colSpan={2}>Box</GridLayoutItem>\n *       <GridLayoutItem row={2} col={1} colSpan={2} rowSpan={2}>Box</GridLayoutItem>\n *       <GridLayoutItem row={2} col={3}>Box</GridLayoutItem>\n *       <GridLayoutItem row={3} col={3}>Box</GridLayoutItem>\n *     </GridLayout>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport var GridLayoutItem = React.forwardRef(function (props, ref) {\n  validatePackage(packageMetadata);\n  var elementRef = React.useRef(null);\n  var getImperativeHandle = React.useCallback(function () {\n    return {\n      element: elementRef.current\n    };\n  }, []);\n  React.useImperativeHandle(ref, getImperativeHandle);\n  var className = props.className,\n      style = props.style,\n      id = props.id,\n      children = props.children,\n      row = props.row,\n      col = props.col,\n      rowSpan = props.rowSpan,\n      colSpan = props.colSpan;\n  var itemId = React.useMemo(function () {\n    return guid();\n  }, []);\n\n  var gridLayoutItemStyles = __assign({\n    gridArea: (row || 'auto') + \" / \" + (col || 'auto') + \" / \" + (rowSpan ? 'span ' + rowSpan : 'auto') + \" / \" + (colSpan ? 'span ' + colSpan : 'auto')\n  }, style);\n\n  return React.createElement(\"div\", {\n    ref: elementRef,\n    className: className,\n    style: gridLayoutItemStyles,\n    id: id || itemId\n  }, children);\n});\nGridLayoutItem.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.any,\n  id: PropTypes.string\n};\nGridLayoutItem.displayName = 'KendoReactGridLayoutItem';","map":{"version":3,"sources":["../../../src/gridlayout/GridLayoutItem.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AACA,SAAS,eAAT,QAAgC,2BAAhC;AACA,SAAS,eAAT,QAAgC,qBAAhC;AAEA,SAAS,IAAT,QAAqB,8BAArB;AAaA;;;;;;;;;;;;;;;;;;;;;;;;AAwBG;;AACH,OAAO,IAAM,cAAc,GAAG,KAAK,CAAC,UAAN,CAAmE,UAAC,KAAD,EAAQ,GAAR,EAAW;AACxG,EAAA,eAAe,CAAC,eAAD,CAAf;AAEA,MAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAoC,IAApC,CAAnB;AAEA,MAAM,mBAAmB,GAAG,KAAK,CAAC,WAAN,CACxB,YAAA;AAA4B,WAAC;AACzB,MAAA,OAAO,EAAE,UAAU,CAAC;AADK,KAAD;AAE1B,GAHsB,EAIxB,EAJwB,CAA5B;AAOA,EAAA,KAAK,CAAC,mBAAN,CAA0B,GAA1B,EAA+B,mBAA/B;AAEQ,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,KAAA,GAAA,KAAA,CAAA,KAAX;AAAA,MAAkB,EAAA,GAAA,KAAA,CAAA,EAAlB;AAAA,MAAsB,QAAA,GAAA,KAAA,CAAA,QAAtB;AAAA,MAAgC,GAAA,GAAA,KAAA,CAAA,GAAhC;AAAA,MAAqC,GAAA,GAAA,KAAA,CAAA,GAArC;AAAA,MAA0C,OAAA,GAAA,KAAA,CAAA,OAA1C;AAAA,MAAmD,OAAA,GAAA,KAAA,CAAA,OAAnD;AACR,MAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,YAAA;AAAM,WAAA,IAAA,EAAA;AAAM,GAA1B,EAA4B,EAA5B,CAAf;;AAEA,MAAM,oBAAoB,GAAA,QAAA,CAAA;AACtB,IAAA,QAAQ,EAAE,CAAG,GAAG,IAAI,MAAV,IAAgB,KAAhB,IAAsB,GAAG,IAAI,MAA7B,IAAmC,KAAnC,IAAyC,OAAO,GAAG,UAAU,OAAb,GAAuB,MAAvE,IAA6E,KAA7E,IAAmF,OAAO,GAAG,UAAU,OAAb,GAAuB,MAAjH;AADY,GAAA,EAEnB,KAFmB,CAA1B;;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,GAAG,EAAE,UADP;AAEE,IAAA,SAAS,EAAE,SAFb;AAGE,IAAA,KAAK,EAAE,oBAHT;AAIE,IAAA,EAAE,EAAE,EAAE,IAAI;AAJZ,GAAA,EAMG,QANH,CADF;AAUH,CAhC6B,CAAvB;AAkCN,cAAsC,CAAC,SAAvC,GAAmD;AAChD,EAAA,SAAS,EAAE,SAAS,CAAC,MAD2B;AAEhD,EAAA,KAAK,EAAE,SAAS,CAAC,MAF+B;AAGhD,EAAA,QAAQ,EAAE,SAAS,CAAC,GAH4B;AAIhD,EAAA,EAAE,EAAE,SAAS,CAAC;AAJkC,CAAnD;AAOD,cAAc,CAAC,WAAf,GAA6B,0BAA7B","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\nimport { guid } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact GridLayoutItem component]({% slug overview_gridlayout %}).\n *\n * @example\n * ```jsx\n *\n * const App = () => {\n *   return (\n *     <GridLayout\n *       rows={[{height: 50}, {height: 50}, {height: 50}]}\n *       cols={[{width: 50}, {width: 50}, {width: 50}]}\n *       gap={{rows: 5, cols: 5}}\n *       align={{horizontal: 'stretch', vertical: 'stretch'}}\n *     >\n *       <GridLayoutItem row={1} col={1}>Box</GridLayoutItem>\n *       <GridLayoutItem row={1} col={2} colSpan={2}>Box</GridLayoutItem>\n *       <GridLayoutItem row={2} col={1} colSpan={2} rowSpan={2}>Box</GridLayoutItem>\n *       <GridLayoutItem row={2} col={3}>Box</GridLayoutItem>\n *       <GridLayoutItem row={3} col={3}>Box</GridLayoutItem>\n *     </GridLayout>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport var GridLayoutItem = React.forwardRef(function (props, ref) {\n    validatePackage(packageMetadata);\n    var elementRef = React.useRef(null);\n    var getImperativeHandle = React.useCallback(function () { return ({\n        element: elementRef.current\n    }); }, []);\n    React.useImperativeHandle(ref, getImperativeHandle);\n    var className = props.className, style = props.style, id = props.id, children = props.children, row = props.row, col = props.col, rowSpan = props.rowSpan, colSpan = props.colSpan;\n    var itemId = React.useMemo(function () { return guid(); }, []);\n    var gridLayoutItemStyles = __assign({ gridArea: (row || 'auto') + \" / \" + (col || 'auto') + \" / \" + (rowSpan ? 'span ' + rowSpan : 'auto') + \" / \" + (colSpan ? 'span ' + colSpan : 'auto') }, style);\n    return (React.createElement(\"div\", { ref: elementRef, className: className, style: gridLayoutItemStyles, id: id || itemId }, children));\n});\nGridLayoutItem.propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.any,\n    id: PropTypes.string\n};\nGridLayoutItem.displayName = 'KendoReactGridLayoutItem';\n//# sourceMappingURL=GridLayoutItem.js.map"]},"metadata":{},"sourceType":"module"}