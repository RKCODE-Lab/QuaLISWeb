{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\TestGroupRulesEngineTab.jsx\";\nimport { faEye, faPencilAlt, faPlus, faSort, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { Button, Card, Nav } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { ProductList } from '../product/product.styled';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\nimport { sortData } from '../../components/CommonScript';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport ListBoxComponent from '../registration/ListBoxComponent';\nimport ListBoxDraggable from '../../components/ListBoxDraggable';\n\nconst TestGroupRulesEngineTab = props => {\n  function insertSelectedField(array) {\n    array[0]['selected'] = {};\n    array[0]['selected'] = true;\n    return array;\n  }\n\n  console.log('props--->>>', props);\n  const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\n  const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\n  const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\n  const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\n  const RetireId = props.controlMap.has(\"Retire Rules Engine\") && props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;\n  const saveExecutionOrderId = props.controlMap.has(\"Save Execution Order\") && props.controlMap.get(\"Save Execution Order\").ncontrolcode;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grouped-tab-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListBoxDraggable, {\n    masterList: props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'ascending', 'nruleexecorder') || [],\n    isSearchedDataPresent: props.masterData.searchedDataRulesEngine && props.masterData.searchedDataRulesEngine.length > 0 ? true : false,\n    selectedListName: \"SelectedRulesEngine\",\n    clickIconGroup: true,\n    filterColumnData: props.filterTransactionList,\n    searchListName: \"searchedDataRulesEngine\",\n    mainField: \"srulename\",\n    filterParam: props.filterParamRulesEngine,\n    selectedMaster: props.masterData.SelectedRulesEngine,\n    selectedTestGroupTestCode: props.masterData.SelectedRulesEngine && props.masterData.SelectedRulesEngine['ntestgrouptestcode'],\n    openflowview: props.openflowview,\n    viewOutcome: props.viewOutcome,\n    primaryKeyField: \"ntestgrouprulesenginecode\",\n    sortableField: 'nruleexecorder',\n    getMasterDetail: param => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData),\n    userInfo: props.userInfo,\n    subFieldsLabel: true,\n    hideSearch: true,\n    subFields: rulesEngineSubFields,\n    masterData: props.masterData,\n    saveExecutionOrder: props.saveExecutionOrder,\n    actionIcons: [{\n      title: props.intl.formatMessage({\n        id: \"IDS_VIEWRULE\"\n      }),\n      controlname: \"faEye\",\n      objectName: \"SelectedRulesEngine\",\n      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      hidden: false,\n      inputData: {\n        masterData: props.masterData,\n        userInfo: props.userInfo\n      },\n      onClick: props.openflowview\n    }, {\n      title: props.intl.formatMessage({\n        id: \"IDS_VIEWOUTCOME\"\n      }),\n      controlname: \"faGift\",\n      objectName: \"SelectedRulesEngine\",\n      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      hidden: false,\n      inputData: {\n        masterData: props.masterData,\n        userInfo: props.userInfo\n      },\n      onClick: props.viewOutcome\n    }],\n    commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-icon-rounded btn-circle solid-blue mr-1\",\n      role: \"button\",\n      hidden: props.userRoleControlRights.indexOf(addId) === -1,\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_ADD\"\n      }) // data-for=\"tooltip-list-wrap\"\n      ,\n      onClick: () => props.getTestGroupRulesEngineAdd(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      title: props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr0 mr-1\",\n      href: \"#\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      onClick: e => props.getEditTestGroupRulesEngine(\"update\", props.masterData, props.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey \",\n      href: \"\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: props.ConfirmDeleteRule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-1\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(ApproveId) === -1,\n      onClick: e => props.approveVersion(props.masterData, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-1\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(RetireId) === -1,\n      onClick: e => props.approveVersion(props.masterData, 2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Reject, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(TestGroupRulesEngineTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupRulesEngineTab.jsx"],"names":["faEye","faPencilAlt","faPlus","faSort","faThumbsUp","faTrashAlt","FontAwesomeIcon","React","Button","Card","Nav","injectIntl","TransactionListMasterJsonView","ProductList","ConfirmMessage","rulesEngineMoreFields","rulesEngineSubFields","sortData","PerfectScrollbar","ListBoxComponent","ListBoxDraggable","TestGroupRulesEngineTab","props","insertSelectedField","array","console","log","addId","controlMap","has","get","ncontrolcode","editId","deleteId","ApproveId","RetireId","saveExecutionOrderId","masterData","searchedDataRulesEngine","RulesEngine","length","filterTransactionList","filterParamRulesEngine","SelectedRulesEngine","openflowview","viewOutcome","param","getSelectedTestGroupRulesEngine","userInfo","saveExecutionOrder","title","intl","formatMessage","id","controlname","objectName","hidden","inputData","onClick","userRoleControlRights","indexOf","getTestGroupRulesEngineAdd","e","getEditTestGroupRulesEngine","ConfirmDeleteRule","approveVersion"],"mappings":"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","sourcesContent":["import { faEye, faPencilAlt, faPlus, faSort, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport ListBoxComponent from '../registration/ListBoxComponent';\r\nimport ListBoxDraggable from '../../components/ListBoxDraggable';\r\n\r\nconst TestGroupRulesEngineTab = (props) => {\r\n\r\n    function insertSelectedField(array) {\r\n        array[0]['selected'] = {}\r\n        array[0]['selected'] = true;\r\n        return array\r\n    }\r\n    console.log('props--->>>', props)\r\n    const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\r\n    const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\r\n    const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\r\n    const RetireId = props.controlMap.has(\"Retire Rules Engine\") && props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;\r\n    const saveExecutionOrderId = props.controlMap.has(\"Save Execution Order\") && props.controlMap.get(\"Save Execution Order\").ncontrolcode;\r\n\r\n    return (\r\n        <>\r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner'>\r\n                    {/* <div className='grouped-tab-inner'> */}\r\n                    <ListBoxDraggable\r\n                        masterList={props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'ascending', 'nruleexecorder') || []}\r\n                        isSearchedDataPresent={props.masterData.searchedDataRulesEngine &&\r\n                            props.masterData.searchedDataRulesEngine.length > 0 ? true : false}\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        clickIconGroup={true}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        mainField=\"srulename\"\r\n                        filterParam={props.filterParamRulesEngine}\r\n                        selectedMaster={props.masterData.SelectedRulesEngine}\r\n                        selectedTestGroupTestCode={props.masterData.SelectedRulesEngine && props.masterData.SelectedRulesEngine['ntestgrouptestcode']}\r\n                        openflowview={props.openflowview}\r\n                        viewOutcome={props.viewOutcome}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        sortableField={'nruleexecorder'}\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        userInfo={props.userInfo}\r\n                        subFieldsLabel={true}\r\n                        hideSearch={true}\r\n                        subFields={rulesEngineSubFields}\r\n                        masterData={props.masterData}\r\n                        saveExecutionOrder={props.saveExecutionOrder}\r\n                        actionIcons={\r\n                            [\r\n                                {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                    controlname: \"faEye\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.openflowview\r\n                                }, {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                    controlname: \"faGift\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.viewOutcome\r\n                                }\r\n                            ]}\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                        hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(RetireId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link>\r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }>\r\n                    </ListBoxDraggable>\r\n                </div>\r\n            </PerfectScrollbar>\r\n            {/* </div> */}\r\n            {/* \r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner'>\r\n\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={167}\r\n                        // componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\r\n                        // notSearchable={false}\r\n                        masterList={props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'descending', 'ntestgrouprulesenginecode') || []}\r\n                        selectedMaster={[props.masterData.SelectedRulesEngine]}\r\n                        clickIconGroup={true}\r\n                        // selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        //  inputParam={getTest}\r\n                        // additionalParam={[]}\r\n                        mainField=\"srulename\"\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        objectName=\"RulesEngine\"\r\n                        listName=\"IDS_RULESENGINE\"\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        subFields={rulesEngineSubFields}\r\n                        //   moreField={rulesEngineMoreFields}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        subFieldsLabel={true}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        //searchRef={this.searchRef}\r\n                        hidePaging={false}\r\n                        filterParam={props.filterParamRulesEngine}\r\n                        handlePageChange={props.handlePageChangeRuleEngine}\r\n                        skip={props.skipRulesEngine}\r\n                        take={props.takeRulesEngine}\r\n                        pageSize={props.settings && props.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        actionIcons={\r\n                            [\r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                //     controlname: \"faPencilAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     onClick:   props.getEditTestGroupRulesEngine(\r\n                                //         \"update\",  props.Login.masterData,    props.Login.userInfo\r\n                                //     ),\r\n                                //   //s  needConditionalIcon: true,\r\n                                //   //  conditionalIconFunction: this.fileViewIcon\r\n                                // }, \r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                //     controlname: \"faTrashAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // }, {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\r\n                                //     controlname: \"faThumbsUp\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // },  \r\n                                {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                    controlname: \"faEye\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.openflowview\r\n                                }, {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                    controlname: \"faGift\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.viewOutcome\r\n                                }\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                        hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(RetireId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link> \r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                </div>\r\n            </PerfectScrollbar> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupRulesEngineTab);"]},"metadata":{},"sourceType":"module"}