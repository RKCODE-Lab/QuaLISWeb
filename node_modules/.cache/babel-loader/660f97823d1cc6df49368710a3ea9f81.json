{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddInstrumentMaintenance.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddInstrumentMaintenance = props => {\n  console.log(\"123\", props);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    name: \"ninstrumentcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    value: props.instrumentid,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dlastmaintenancedate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTMAINTENANCEDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dlastmaintenancedate\"] ? props.selectedRecord[\"dlastmaintenancedate\"] : new Date(),\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    isMandatory: false,\n    required: true,\n    isMandatory: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dlastmaintenancedate\", date),\n    value: props.selectedRecord[\"dlastmaintenancedate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzlastmaintenancedate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzlastmaintenancedate\"],\n    defaultValue: props.selectedRecord[\"ntzlastmaintenancedate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzlastmaintenancedate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dduedate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DUEDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dduedate\"] ? props.selectedRecord[\"dduedate\"] : new Date(),\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    isMandatory: false,\n    required: true,\n    isMandatory: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dduedate\", date),\n    value: props.selectedRecord[\"dduedate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzduedate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzduedate\"],\n    defaultValue: props.selectedRecord[\"ntzduedate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzduedate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntranscode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.MaintenanceStatus,\n    value: props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isMandatory: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntranscode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default injectIntl(AddInstrumentMaintenance);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentMaintenance.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","AddInstrumentMaintenance","props","console","log","intl","formatMessage","id","event","onInputOnChange","instrumentid","selectedRecord","Date","userInfo","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onComboChange","MaintenanceStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentMaintenance = (props) => {\r\n    console.log(\"123\",props)\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                name={\"ninstrumentcode\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                value={props.instrumentid}                   \r\n                isDisabled={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dlastmaintenancedate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_LASTMAINTENANCEDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dlastmaintenancedate\"]?props.selectedRecord[\"dlastmaintenancedate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dlastmaintenancedate\", date)}\r\n                             value={props.selectedRecord[\"dlastmaintenancedate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzlastmaintenancedate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzlastmaintenancedate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzlastmaintenancedate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dduedate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_DUEDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dduedate\", date)}\r\n                             value={props.selectedRecord[\"dduedate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzduedate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzduedate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzduedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzduedate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n        \r\n                <Col md={12}>\r\n                          <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.MaintenanceStatus}\r\n                         \r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                               defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMandatory={false}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                               onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n            </Col>\r\n\r\n    </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentMaintenance);"]},"metadata":{},"sourceType":"module"}