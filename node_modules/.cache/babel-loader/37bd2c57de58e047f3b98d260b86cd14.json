{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\custom-accordion\\\\custom-accordion.component.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Accordion, Card, useAccordionToggle } from \"react-bootstrap\";\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles'; // import classNames from 'classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst CustomToggle = ({\n  children,\n  eventKey\n}) => {\n  const currentEventKey = React.useContext(AccordionContext);\n  const isCurrentEventKey = currentEventKey === eventKey;\n  const decoratedOnClick = useAccordionToggle(eventKey, () => isCurrentEventKey ? \"\" : children.props.onExpandCall());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\" // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\n    // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\n    ,\n    onClick: decoratedOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, children, isCurrentEventKey ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown //onClick={children.props.onExpandCall}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst CustomAccordion = props => {\n  const keys = [...props.accordionComponent.keys()];\n  return /*#__PURE__*/React.createElement(AtAccordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, keys.map((item, index) => {\n    const accordionObject = props.accordionComponent.get(item)[\"props\"][props.accordionObjectName];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: String(props.selectedKey),\n      alwaysOpen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomToggle, {\n      eventKey: String(accordionObject[props.accordionPrimaryKey]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"flex-grow-1\",\n      onExpandCall: () => props.accordionClick({ ...props.inputParam,\n        [props.accordionObjectName]: accordionObject\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, props.titlePrefix || \"\", props.isJSONdata ? accordionObject[props.jsonFieldName][props.accordionTitle] : accordionObject[props.accordionTitle], props.clickIconGroup ?\n    /*#__PURE__*/\n    // onClick={() => props.deleteModalTest()\n    React.createElement(\"a\", {\n      onClick: props.deleteModalTest1,\n      class: \"float-right mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }\n    })) : \"\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: String(accordionObject[props.accordionPrimaryKey]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, props.accordionComponent.get(item))))));\n  }));\n};\n\nexport default injectIntl(CustomAccordion);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/custom-accordion/custom-accordion.component.jsx"],"names":["React","injectIntl","Accordion","Card","useAccordionToggle","AccordionContext","AtAccordion","FontAwesomeIcon","faChevronUp","faChevronDown","faTrashAlt","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","props","onExpandCall","CustomAccordion","keys","accordionComponent","map","item","index","accordionObject","get","accordionObjectName","String","selectedKey","accordionPrimaryKey","accordionClick","inputParam","titlePrefix","isJSONdata","jsonFieldName","accordionTitle","clickIconGroup","deleteModalTest1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,kBAAzB,QAAkD,iBAAlD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAAQC,WAAR,QAA0B,6CAA1B,C,CACA;;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC9C,QAAMC,eAAe,GAAGd,KAAK,CAACe,UAAN,CAAiBV,gBAAjB,CAAxB;AACA,QAAMW,iBAAiB,GAAGF,eAAe,KAAKD,QAA9C;AACA,QAAMI,gBAAgB,GAAGb,kBAAkB,CAAES,QAAF,EACvC,MAAMG,iBAAiB,GAAG,EAAH,GAAQJ,QAAQ,CAACM,KAAT,CAAeC,YAAf,EADQ,CAA3C;AAKA,sBACI;AACE,IAAA,SAAS,EAAC,gCADZ,CAEE;AACA;AAHF;AAIE,IAAA,OAAO,EAAEF,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,QALH,EAMGI,iBAAiB,gBACd,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAEd,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,aAAvB,CAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,CADJ;AAaD,CArBD;;AAuBA,MAAMW,eAAe,GAAIF,KAAD,IAAW;AACjC,QAAMG,IAAI,GAAG,CAAC,GAAGH,KAAK,CAACI,kBAAN,CAAyBD,IAAzB,EAAJ,CAAb;AAEE,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQA,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACzB,UAAMC,eAAe,GAAGR,KAAK,CAACI,kBAAN,CAAyBK,GAAzB,CAA6BH,IAA7B,EAAmC,OAAnC,EAA4CN,KAAK,CAACU,mBAAlD,CAAxB;AACE,wBAAO,uDAEf,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAEC,MAAM,CAACX,KAAK,CAACY,WAAP,CAAnC;AAAwD,MAAA,UAAU,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,MAAM,CAACH,eAAe,CAACR,KAAK,CAACa,mBAAP,CAAhB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAqC,MAAA,YAAY,EAAE,MAAKb,KAAK,CAACc,cAAN,CAAqB,EAAC,GAAGd,KAAK,CAACe,UAAV;AAAsB,SAACf,KAAK,CAACU,mBAAP,GAA4BF;AAAlD,OAArB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIR,KAAK,CAACgB,WAAN,IAAqB,EADzB,EAC+BhB,KAAK,CAACiB,UAAN,GAAmBT,eAAe,CAACR,KAAK,CAACkB,aAAP,CAAf,CAAqClB,KAAK,CAACmB,cAA3C,CAAnB,GAAgFX,eAAe,CAACR,KAAK,CAACmB,cAAP,CAD9H,EAGCnB,KAAK,CAACoB,cAAN;AAAA;AACG;AACM;AAAG,MAAA,OAAO,EAAEpB,KAAK,CAACqB,gBAAlB;AAAoC,MAAA,KAAK,EAAC,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFT,GAIgB,EAPjB,CADF,CADF,CADR,eAcQ,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEmB,MAAM,CAACH,eAAe,CAACR,KAAK,CAACa,mBAAP,CAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCb,KAAK,CAACI,kBAAN,CAAyBK,GAAzB,CAA6BH,IAA7B,CADD,CADF,CAdR,CADF,CAFe,CAAP;AAwBI,GA1BN,CADR,CADF;AA+BE,CAlCN;;AAoCA,eAAevB,UAAU,CAACmB,eAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Accordion, Card, useAccordionToggle} from \"react-bootstrap\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport {AtAccordion} from '../custom-accordion/custom-accordion.styles';\r\n// import classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToggle = ({ children, eventKey}) => {\r\n  const currentEventKey = React.useContext(AccordionContext);\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n  const decoratedOnClick = useAccordionToggle( eventKey,\r\n      () => isCurrentEventKey ? \"\" : children.props.onExpandCall()\r\n    );\r\n\r\n \r\n  return (\r\n      <div\r\n        className=\"d-flex justify-content-between\"\r\n        // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\r\n        // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\r\n        onClick={decoratedOnClick}>\r\n        {children}\r\n        {isCurrentEventKey ? \r\n            <FontAwesomeIcon icon={faChevronUp}/>\r\n          : <FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n                                              />}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst CustomAccordion = (props) => { \r\n  const keys = [...props.accordionComponent.keys()];\r\n\r\n    return (\r\n      <AtAccordion>\r\n            { keys.map((item, index) =>{\r\n              const accordionObject = props.accordionComponent.get(item)[\"props\"][props.accordionObjectName];\r\n                return(<> \r\n                \r\n        <Accordion defaultActiveKey={String(props.selectedKey)} alwaysOpen>\r\n          <Card className='border-0'>\r\n                  <Card.Header>\r\n                    <CustomToggle eventKey={String(accordionObject[props.accordionPrimaryKey])}>\r\n                      <Card.Title className='flex-grow-1'  onExpandCall={()=> props.accordionClick({...props.inputParam, [props.accordionObjectName]:accordionObject})}> \r\n                        { props.titlePrefix || \"\" }{ props.isJSONdata ? accordionObject[props.jsonFieldName][props.accordionTitle] : accordionObject[props.accordionTitle]}\r\n                        \r\n                      {props.clickIconGroup ? \r\n                          // onClick={() => props.deleteModalTest()\r\n                                <a onClick={props.deleteModalTest1} class=\"float-right mr-3\">\r\n                                   <FontAwesomeIcon icon={faTrashAlt} />\r\n                                </a> : \"\"}\r\n                      </Card.Title>\r\n                    </CustomToggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey={String(accordionObject[props.accordionPrimaryKey])}>\r\n                    <Card.Body>\r\n                    {props.accordionComponent.get(item)} \r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n          </Card>\r\n      </Accordion>\r\n               </>)})}  \r\n          \r\n    </AtAccordion>\r\n    )}\r\n\r\nexport default injectIntl(CustomAccordion);"]},"metadata":{},"sourceType":"module"}