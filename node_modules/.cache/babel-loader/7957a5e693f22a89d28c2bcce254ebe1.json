{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{constructOptionList,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,replaceUpdatedObject,sortData}from'../components/CommonScript';import{postCRUDOrganiseTransSearch}from'./ServiceAction';import{REPORTTYPE,reportCOAType,transactionStatus}from'../components/Enumeration';export function getsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={ntype:2,nflag:2,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,napprovalversioncode:String(inputData.sample[0].napprovalversioncode),napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo};var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalSubSample\",inputParamData).then(function(response){var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample});responseData=sortData(responseData);var oldSelectedTest=inputData.masterData.selectedTest;inputData.masterData.selectedTest=oldSelectedTest.length>0?oldSelectedTest:responseData.selectedTest?responseData.selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[],selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno});if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake;var bool=false;if(inputData.masterData.AP_TEST.length<inputData.testskip){testskip=0;bool=true;}var skipInfo={};if(bool){skipInfo={testskip:testskip,testtake:testtake};}// let wholeApprovalParameter = [];\nvar ApprovalParameter=[];// let wholeResultUsedInstrument = [];\nvar ResultUsedInstrument=[];// let wholeResultUsedTasks = [];\nvar ResultUsedTasks=[];// let wholeRegistrationTestAttachment = [];\nvar RegistrationTestAttachment=[];// let wholeApprovalResultChangeHistory = [];\nvar ApprovalResultChangeHistory=[];// let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var ApprovalHistory=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=masterData.selectedTest[0].ntransactiontestcode;}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,_ntransactiontestcode,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}else{masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode2=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter));ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{// wholeApprovalParameter,\nApprovalParameter:ApprovalParameter,// wholeResultUsedInstrument,\nResultUsedInstrument:ResultUsedInstrument,// wholeResultUsedTasks,\nResultUsedTasks:ResultUsedTasks,// wholeRegistrationTestAttachment,\nRegistrationTestAttachment:RegistrationTestAttachment,// wholeApprovalResultChangeHistory,\nApprovalResultChangeHistory:ApprovalResultChangeHistory,// wholeRegistrationTestComments,\nRegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,skip:undefined,take:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}// let wholeApprovalParameter = [];\nvar ApprovalParameter=[];// let wholeResultUsedInstrument = [];\nvar ResultUsedInstrument=[];// let wholeResultUsedTasks = [];\nvar ResultUsedTasks=[];// let wholeRegistrationTestAttachment = [];\nvar RegistrationTestAttachment=[];// let wholeApprovalResultChangeHistory = [];\nvar ApprovalResultChangeHistory=[];// let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var ApprovalHistory=[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode.toString():\"\";var selectedSample=inputData.selectedSample;var selectedPreregno=inputData.npreregno;var selectedTest=inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];var selectedSubSample=inputData.masterData.AP_SUBSAMPLE;inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,selectedSample:selectedSample,selectedPreregno:selectedPreregno,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetail(inputData,true));}else{//added by sudharshanan for test select issue while sample click\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[],selectedSample:inputData.selectedSample,selectedSubSample:inputData.masterData.AP_SUBSAMPLE});var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode3;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{// ntransactiontestcode = masterData.selectedTest[0].ntransactiontestcode\n_ntransactiontestcode3=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeApprovalParameter = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalParameter,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeResultUsedInstrument = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeResultUsedInstrument,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeResultUsedTasks = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeResultUsedTasks,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeRegistrationTestAttachment = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeRegistrationTestAttachment,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeApprovalResultChangeHistory = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalResultChangeHistory,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeRegistrationTestComments = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeRegistrationTestComments,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode3,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode3,\"ntransactiontestcode\");// wholeRegistrationTestComments = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalParameter,\n//     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\nbreak;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{// wholeApprovalParameter,\nApprovalParameter:ApprovalParameter,// wholeResultUsedInstrument,\nResultUsedInstrument:ResultUsedInstrument,// wholeResultUsedTasks,\nResultUsedTasks:ResultUsedTasks,// wholeRegistrationTestAttachment,\nRegistrationTestAttachment:RegistrationTestAttachment,// wholeApprovalResultChangeHistory,\nApprovalResultChangeHistory:ApprovalResultChangeHistory,// wholeRegistrationTestComments,\nRegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab}});}}};}export function getTestDetail(inputData){return function(dispatch){var inputParamData={ntype:3,nflag:3,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,ntransactionsamplecode:inputData.ntransactionsamplecode,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo};dispatch(initRequest(true));rsapi.post(\"approval/getApprovalTest\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\ninputData.searchTestRef.current.null=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSubSample:inputData.selectedSubSample,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode}),loading:false,showFilter:false,activeTestTab:inputData.activeTestTab}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTestChildTabDetail(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}export function getSampleChildTabDetail(inputData){return function(dispatch){if(inputData.npreregno.length>0){var inputParamData={npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSampleTab){case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_SAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedInstrument\";break;case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_SOURCE\":url=\"registration/getRegistrationSourceCountry\";break;case\"IDS_SAMPLEAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";break;case\"IDS_PRINTHISTORY\":url=\"approval/getPrintHistory\";break;case\"IDS_REPORTHISTORY\":url=\"approval/getCOAHistory\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSample:inputData.selectedSample,selectedTestCode:inputData.ntransactiontestcode}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{toast.warn(\"Please Select a Sample\");}};}export function performAction(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/performAction\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')});// dispatch({type: DEFAULT_RETURN, payload:{\n// masterData:{\n//     ...inputParam.inputData.masterData,\n//     ...response.data, \n//     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\n//     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\n// },\n//     loading:false ,\n//     loadEsign:false,\n//     openChildModal:false                     \n// }}) \nvar respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function updateDecision(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/updateDecision\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);// dispatch({type: DEFAULT_RETURN, payload:{\n//     masterData:{\n//         ...inputParam.masterData,\n//         ...responseData, \n//         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\n//         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\n//     },\n//     loading:false                      \n// }}) \nvar masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getFilterStatus\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"approval/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(\"Please Select All the Values in Filter\");}};}export function getApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),responseData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchSampleRef!==undefined&&inputParam.searchSampleRef.current!==null){inputParam.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputParam.searchSubSampleRef!==undefined&&inputParam.searchSubSampleRef.current!==null){inputParam.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputParam.searchTestRef!==undefined&&inputParam.searchTestRef.current!==null){inputParam.searchTestRef.current.value=\"\";// masterData['searchedTest'] = undefined\nmasterData['searchedTests']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,take:inputParam.take,testskip:0,testtake:inputParam.testtake,resultDataState:_objectSpread(_objectSpread({},inputParam.resultDataState),{},{sort:undefined,filter:undefined}),instrumentDataState:_objectSpread(_objectSpread({},inputParam.instrumentDataState),{},{sort:undefined,filter:undefined}),materialDataState:_objectSpread(_objectSpread({},inputParam.materialDataState),{},{sort:undefined,filter:undefined}),taskDataState:_objectSpread(_objectSpread({},inputParam.taskDataState),{},{sort:undefined,filter:undefined}),documentDataState:_objectSpread(_objectSpread({},inputParam.documentDataState),{},{sort:undefined,filter:undefined}),resultChangeDataState:_objectSpread(_objectSpread({},inputParam.resultChangeDataState),{},{sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},inputParam.testCommentDataState),{},{sort:undefined,filter:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined}),samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputParam.samplePrintHistoryDataState),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputParam.sampleHistoryDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getStatusCombo(inputParam){return function(dispatch){var inputData={ntransactionresultcode:inputParam.primaryKeyValue,userinfo:inputParam.userInfo};dispatch(initRequest(true));rsapi.post(\"approval/getStatusCombo\",inputData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\nvar GradeListMap=constructOptionList(response.data.Grade||[],\"ngradecode\",\"sgradename\",'ascending','ngradecode',false);var Grade=GradeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{Grade:Grade,selectedParamId:inputParam.primaryKeyValue}),loading:false,showFilter:false,openChildModal:true,ncontrolCode:inputParam.ncontrolCode,selectedRecord:{senforcestatuscomment:response.data.parameterComment&&response.data.parameterComment.senforcestatuscomment,ntransactionresultcode:response.data.parameterComment&&response.data.parameterComment.ntransactionresultcode,ntransactiontestcode:response.data.parameterComment&&response.data.parameterComment.ntransactiontestcode},operation:\"enforce\",screenName:\"IDS_STATUS\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getParameterEdit(inputParam){return function(dispatch){var inputData={ntransactiontestcode:inputParam.selectedTest&&inputParam.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\"),userinfo:inputParam.userInfo};if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){dispatch(initRequest(true));rsapi.post(\"approval/getEditParameter\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},responseData),{},{loading:false,openChildModal:true,operation:\"update\",screenName:\"IDS_APPROVALPARAMETER\"// ncontrolCode:inputParam.ncontrolCode,\n})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{multilingualMsg:\"IDS_SELECTTEST\"}});}};}export function validateEsignforApproval(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){if(inputParam.operation==='dynamic'){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}else if(inputParam.operation==='reportgeneration'){delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']));}else if(inputParam.operation==='decision'){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]));}}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function previewSampleReport(inputParam){return function(dispatch){dispatch(initRequest(true));var ndecisionStatus=inputParam.sample.ndecisionstatus;if(inputParam.sample.ndecisionstatus===undefined||inputParam.sample.ndecisionstatus===transactionStatus.DRAFT){ndecisionStatus=transactionStatus.PASS;}var inputData={ndecisionstatus:ndecisionStatus,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLECERTIFICATEPRIVIEW,nreporttypecode:REPORTTYPE.SAMPLEREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.sample.nregtypecode,nregsubtypecode:inputParam.sample.nregsubtypecode,npreregno:inputParam.sample.npreregno};rsapi.post(\"approval/previewSampleReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateCOAReport(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,nsectioncode:inputParam.nsectioncode||-1,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLEWISE,nreporttypecode:REPORTTYPE.COAREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.nregtypecode,nregsubtypecode:inputParam.nregsubtypecode};rsapi.post(\"approval/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEnforceCommentsHistory(selectedParam,masterData,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getEnforceCommentsHistory\",{ntransactionresultcode:selectedParam.ntransactionresultcode,userinfo:userInfo}).then(function(response){if(response.data.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{enforceCommentsHistory:response.data});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,openChildModal:true,operation:\"view\",screenName:\"IDS_ENFORCECOMMENTHISTORY\"}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multilingualMsg:\"IDS_NOPREVIOUSCOMMENTSFOUND\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ApprovalAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","constructOptionList","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","replaceUpdatedObject","sortData","postCRUDOrganiseTransSearch","REPORTTYPE","reportCOAType","transactionStatus","getsubSampleDetail","inputData","isServiceRequired","dispatch","inputParamData","ntype","nflag","nsampletypecode","nregtypecode","nregsubtypecode","npreregno","ntransactionstatus","nsectioncode","ntestcode","napprovalversioncode","String","sample","napprovalconfigcode","activeTestTab","activeSampleTab","userinfo","activeName","dataStateName","post","then","response","responseData","data","selectedSample","oldSelectedTest","masterData","selectedTest","length","AP_TEST","childTabsKey","checkBoxOperation","removeElementFromArray","selectedPreregno","searchSubSampleRef","undefined","current","value","searchTestRef","testskip","testtake","bool","skipInfo","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","RegistrationTestAttachment","ApprovalResultChangeHistory","RegistrationTestComment","ApprovalHistory","wholeTestList","map","b","ntransactiontestcode","test","index","includes","splice","keepOld","list","dbData","skip","sort","filter","samplePrintHistoryDataState","sampleHistoryDataState","type","payload","loading","showFilter","take","catch","error","status","message","warn","TestSelected","isGrandChildGetRequired","toString","selectedSubSample","AP_SUBSAMPLE","getTestChildTabDetail","getTestDetail","ntransactionsamplecode","null","selectedSampleCode","url","selectedTestCode","screenName","getSampleChildTabDetail","performAction","inputParam","AP_SAMPLE","updatedSample","updatedSubSample","updatedTest","respObject","openChildModal","operation","masterStatus","errorCode","loadEsign","showEsign","selectedRecord","postParamList","updateDecision","getRegistrationType","SampleTypeValue","getRegistrationSubType","RegTypeValue","getFilterStatus","RegSubTypeValue","getFilterBasedTest","rtn","getApprovalVersion","getApprovalSample","searchSampleRef","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","getStatusCombo","ntransactionresultcode","primaryKeyValue","userInfo","GradeListMap","Grade","get","selectedParamId","ncontrolCode","senforcestatuscomment","parameterComment","getParameterEdit","item","join","multilingualMsg","validateEsignforApproval","methodUrl","toLowerCase","generateCOAReport","previewSampleReport","ndecisionStatus","ndecisionstatus","DRAFT","PASS","nprimarykey","ncoareporttypecode","SAMPLECERTIFICATEPRIVIEW","nreporttypecode","SAMPLEREPORT","sprimarykeyname","ncontrolcode","document","getElementById","setAttribute","filepath","click","SAMPLEWISE","COAREPORT","getEnforceCommentsHistory","selectedParam","enforceCommentsHistory"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, replaceUpdatedObject, sortData } from '../components/CommonScript';\r\nimport { postCRUDOrganiseTransSearch } from './ServiceAction';\r\nimport { REPORTTYPE, reportCOAType, transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 2,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            napprovalversioncode: String(inputData.sample[0].napprovalversioncode),\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalSubSample\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data, selectedSample: inputData.selectedSample }\r\n                    responseData = sortData(responseData)\r\n                    let oldSelectedTest = inputData.masterData.selectedTest\r\n                    inputData.masterData.selectedTest = oldSelectedTest.length > 0 ? oldSelectedTest : responseData.selectedTest ? responseData.selectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [],\r\n                        selectedSample: inputData.selectedSample,\r\n                        selectedPreregno: inputData.npreregno,\r\n                    }\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\";\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTests'] = undefined\r\n                    }\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    if (inputData.masterData.AP_TEST.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n                    let skipInfo = {}\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    // let wholeApprovalParameter = [];\r\n                    let ApprovalParameter = [];\r\n                    // let wholeResultUsedInstrument = [];\r\n                    let ResultUsedInstrument = [];\r\n                    // let wholeResultUsedTasks = [];\r\n                    let ResultUsedTasks = [];\r\n                    // let wholeRegistrationTestAttachment = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    // let wholeApprovalResultChangeHistory = [];\r\n                    let ApprovalResultChangeHistory = [];\r\n                    // let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let ApprovalHistory = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n\r\n\r\n                        let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.map((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = masterData.selectedTest[0].ntransactiontestcode\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    } else if (inputData.checkBoxOperation === 5) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                        let list = [];\r\n                        let dbData = []\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                dbData = response.data.ResultUsedInstrument || []\r\n                                list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                dbData = response.data.ResultUsedTasks || []\r\n                                list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                dbData = response.data.RegistrationTestAttachment || []\r\n                                list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                dbData = response.data.ApprovalResultChangeHistory || []\r\n                                list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                dbData = response.data.RegistrationTestComment || []\r\n                                list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                dbData = response.data.ApprovalHistory || []\r\n                                list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            default:\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                        let list = [];\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                list = response.data.ApprovalParameter || []\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                list = response.data.ResultUsedInstrument || []\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                list = response.data.ResultUsedTasks || []\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                list = response.data.RegistrationTestAttachment || []\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                list = response.data.ApprovalResultChangeHistory || []\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                list = response.data.RegistrationTestComment || []\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                list = response.data.ApprovalHistory || []\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                list = [...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    masterData = {\r\n                        ...masterData,\r\n                        // wholeApprovalParameter,\r\n                        ApprovalParameter,\r\n                        // wholeResultUsedInstrument,\r\n                        ResultUsedInstrument,\r\n                        // wholeResultUsedTasks,\r\n                        ResultUsedTasks,\r\n                        // wholeRegistrationTestAttachment,\r\n                        RegistrationTestAttachment,\r\n                        // wholeApprovalResultChangeHistory,\r\n                        ApprovalResultChangeHistory,\r\n                        // wholeRegistrationTestComments,\r\n                        RegistrationTestComment,\r\n                        ApprovalHistory\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            // let wholeApprovalParameter = [];\r\n            let ApprovalParameter = [];\r\n            // let wholeResultUsedInstrument = [];\r\n            let ResultUsedInstrument = [];\r\n            // let wholeResultUsedTasks = [];\r\n            let ResultUsedTasks = [];\r\n            // let wholeRegistrationTestAttachment = [];\r\n            let RegistrationTestAttachment = [];\r\n            // let wholeApprovalResultChangeHistory = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            // let wholeRegistrationTestComments = [];\r\n            let RegistrationTestComment = [];\r\n\r\n            let ApprovalHistory = [];\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let selectedSample = inputData.selectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let selectedSubSample = inputData.masterData.AP_SUBSAMPLE\r\n\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, selectedSample, selectedPreregno, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetail(inputData, true));\r\n            } else {\r\n                //added by sudharshanan for test select issue while sample click\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [],\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedSubSample: inputData.masterData.AP_SUBSAMPLE\r\n                }\r\n                let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.map((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    // ntransactiontestcode = masterData.selectedTest[0].ntransactiontestcode\r\n                    ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\";\r\n                }\r\n                switch (inputData.activeTestTab) {\r\n                    case \"IDS_RESULTS\":\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeApprovalParameter = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalParameter,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_INSTRUMENT\":\r\n                        ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeResultUsedInstrument = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeResultUsedInstrument,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_TASK\":\r\n                        ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeResultUsedTasks = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeResultUsedTasks,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_TESTATTACHMENTS\":\r\n                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeRegistrationTestAttachment = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeRegistrationTestAttachment,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_RESULTCHANGEHISTORY\":\r\n                        ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeApprovalResultChangeHistory = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalResultChangeHistory,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_TESTCOMMENTS\":\r\n                        RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeRegistrationTestComments = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeRegistrationTestComments,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                    case \"IDS_TESTAPPROVALHISTORY\":\r\n                        ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    default:\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        // wholeRegistrationTestComments = filterRecordBasedOnPrimaryKeyName(inputData.masterData.wholeApprovalParameter,\r\n                        //     inputData.removeElementFromArray.length > 0 ? inputData.removeElementFromArray[0].npreregno : \"\", \"npreregno\");\r\n                        break;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            // wholeApprovalParameter,\r\n                            ApprovalParameter,\r\n                            // wholeResultUsedInstrument,\r\n                            ResultUsedInstrument,\r\n                            // wholeResultUsedTasks,\r\n                            ResultUsedTasks,\r\n                            // wholeRegistrationTestAttachment,\r\n                            RegistrationTestAttachment,\r\n                            // wholeApprovalResultChangeHistory,\r\n                            ApprovalResultChangeHistory,\r\n                            // wholeRegistrationTestComments,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function getTestDetail(inputData) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 3,\r\n            nflag: 3,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalTest\", inputParamData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                inputData.searchTestRef.current.null = \"\"\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            selectedSubSample: inputData.selectedSubSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSampleCode: inputData.ntransactionsamplecode\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeTestTab: inputData.activeTestTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getTestChildTabDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nexport function getSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.npreregno.length > 0) {\r\n            let inputParamData = {\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSampleTab) {\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    break;\r\n                case \"IDS_SOURCE\":\r\n                    url = \"registration/getRegistrationSourceCountry\"\r\n                    break;\r\n                case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    break;\r\n\r\n                case \"IDS_PRINTHISTORY\":\r\n                    url = \"approval/getPrintHistory\"\r\n                    break;\r\n                case \"IDS_REPORTHISTORY\":\r\n                    url = \"approval/getCOAHistory\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSample: inputData.selectedSample,\r\n                                    selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            toast.warn(\"Please Select a Sample\");\r\n        }\r\n    }\r\n}\r\nexport function performAction(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/performAction\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n                }\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                // masterData:{\r\n                //     ...inputParam.inputData.masterData,\r\n                //     ...response.data, \r\n                //     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\r\n                //     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\r\n                // },\r\n                //     loading:false ,\r\n                //     loadEsign:false,\r\n                //     openChildModal:false                     \r\n                // }}) \r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function updateDecision(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/updateDecision\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                //     masterData:{\r\n                //         ...inputParam.masterData,\r\n                //         ...responseData, \r\n                //         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\r\n                //         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\r\n\r\n                //     },\r\n                //     loading:false                      \r\n                // }}) \r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getFilterStatus\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFilterBasedTest(inputData) {\r\n\r\n    \r\n    return function (dispatch) {\r\n    if(inputData.napprovalversioncode)\r\n    {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getFilterBasedTest\", inputData)\r\n            .then(response => {\r\n\r\n\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n                if(response.data.rtn)\r\n                {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n        else\r\n        {\r\n               toast.warn(\"Please Select All the Values in Filter\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: {...inputParam.resultDataState,sort:undefined,filter:undefined},\r\n                        instrumentDataState: {...inputParam.instrumentDataState,sort:undefined,filter:undefined},\r\n                        materialDataState: {...inputParam.materialDataState,sort:undefined,filter:undefined},\r\n                        taskDataState: {...inputParam.taskDataState,sort:undefined,filter:undefined},\r\n                        documentDataState: {...inputParam.documentDataState,sort:undefined,filter:undefined},\r\n                        resultChangeDataState: {...inputParam.resultChangeDataState,sort:undefined,filter:undefined},\r\n                        testCommentDataState:{...inputParam.testCommentDataState,sort:undefined,filter:undefined},\r\n                        historyDataState: {...inputParam.historyDataState,sort:undefined,filter:undefined},\r\n                        samplePrintHistoryDataState: {...inputParam.samplePrintHistoryDataState,sort:undefined,filter:undefined},\r\n                        sampleHistoryDataState: {...inputParam.sampleHistoryDataState,sort:undefined,filter:undefined}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getStatusCombo(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactionresultcode: inputParam.primaryKeyValue,\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getStatusCombo\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                const GradeListMap = constructOptionList(response.data.Grade || [], \"ngradecode\", \"sgradename\", 'ascending', 'ngradecode', false);\r\n                let Grade = GradeListMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            Grade,\r\n                            selectedParamId: inputParam.primaryKeyValue\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openChildModal: true,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord: {\r\n                            senforcestatuscomment: response.data.parameterComment && response.data.parameterComment.senforcestatuscomment,\r\n                            ntransactionresultcode: response.data.parameterComment && response.data.parameterComment.ntransactionresultcode,\r\n                            ntransactiontestcode: response.data.parameterComment && response.data.parameterComment.ntransactiontestcode\r\n                        },\r\n                        operation: \"enforce\",\r\n                        screenName: \"IDS_STATUS\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getParameterEdit(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactiontestcode: inputParam.selectedTest && inputParam.selectedTest.map(item => item.ntransactiontestcode).join(\",\"),\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getEditParameter\", inputData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            ...responseData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"update\",\r\n                            screenName: \"IDS_APPROVALPARAMETER\"\r\n                            // ncontrolCode:inputParam.ncontrolCode,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    multilingualMsg: \"IDS_SELECTTEST\",\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function validateEsignforApproval(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    if (inputParam.operation === 'dynamic') {\r\n                        const methodUrl = \"performaction\"\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                            inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                        }\r\n                        dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    } else if (inputParam.operation === 'reportgeneration') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"]\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']))\r\n                    }\r\n                    else if (inputParam.operation === 'decision') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"]\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function previewSampleReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        let ndecisionStatus = inputParam.sample.ndecisionstatus;\r\n        if (inputParam.sample.ndecisionstatus === undefined || inputParam.sample.ndecisionstatus === transactionStatus.DRAFT) {\r\n            ndecisionStatus = transactionStatus.PASS;\r\n        }\r\n        const inputData = {\r\n            ndecisionstatus: ndecisionStatus,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n            nreporttypecode: REPORTTYPE.SAMPLEREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.sample.nregtypecode,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            npreregno: inputParam.sample.npreregno\r\n        }\r\n        rsapi.post(\"approval/previewSampleReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateCOAReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            nsectioncode: inputParam.nsectioncode || -1,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLEWISE,\r\n            nreporttypecode: REPORTTYPE.COAREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode\r\n        }\r\n        rsapi.post(\"approval/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getEnforceCommentsHistory(selectedParam, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getEnforceCommentsHistory\", {\r\n            ntransactionresultcode: selectedParam.ntransactionresultcode,\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    masterData = { ...masterData, enforceCommentsHistory: response.data }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            masterData,\r\n                            openChildModal: true,\r\n                            operation: \"view\",\r\n                            screenName: \"IDS_ENFORCECOMMENTHISTORY\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, multilingualMsg: \"IDS_NOPREVIOUSCOMMENTSFOUND\" } })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}