{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../../../components/form-input/form-input.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';import{transactionStatus}from'../../../components/Enumeration';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';var AddCertificateType=function AddCertificateType(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_CERTIFICATETYPE\"}),name:\"scertificatetype\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CERTIFICATETYPE\"}),value:props.selectedRecord?props.selectedRecord[\"scertificatetype\"]:\"\",isMandatory:true,required:true,maxLength:\"20\"}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncertificatereporttypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTBATCHTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.reportBatchTypeList,value:props.selectedRecord[\"ncertificatereporttypecode\"],isMandatory:true,isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'ncertificatereporttypecode');}}),/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"sdescription\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_EDQM\"}),type:\"switch\",name:\"nedqm\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_EDQM\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"nedqm\"]===transactionStatus.NO?false:true:true,isMandatory:false,rows:\"3\",required:false,checked:props.selectedRecord?props.selectedRecord[\"nedqm\"]===transactionStatus.NO?false:true:true}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ACCREDITED\"}),type:\"switch\",name:\"naccredited\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ACCREDITED\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"naccredited\"]===transactionStatus.NO?false:true:true,isMandatory:false,rows:\"3\",required:false,checked:props.selectedRecord?props.selectedRecord[\"naccredited\"]===transactionStatus.NO?false:true:true}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),type:\"switch\",name:\"ntransactionstatus\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.NO?false:true:true,isMandatory:false,rows:\"3\",required:false,checked:props.selectedRecord?props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.NO?false:true:true})));};export default injectIntl(AddCertificateType);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/basemaster/certificatetype/AddCertificateType.jsx"],"names":["React","Row","Col","injectIntl","FormInput","FormTextarea","CustomSwitch","transactionStatus","FormSelectSearch","AddCertificateType","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","reportBatchTypeList","onComboChange","NO"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\n\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport {transactionStatus} from '../../../components/Enumeration';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddCertificateType = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_CERTIFICATETYPE\" })}\r\n                    name={\"scertificatetype\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CERTIFICATETYPE\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"scertificatetype\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"20\"}\r\n                />\r\n\r\n                <FormSelectSearch\r\n                        name={\"ncertificatereporttypecode\"}\r\n                        formLabel={ props.intl.formatMessage({ id:\"IDS_REPORTBATCHTYPE\"})}                                \r\n                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                        options={ props.reportBatchTypeList}\r\n                        value = { props.selectedRecord[\"ncertificatereporttypecode\"] }\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        onChange = {(event)=> props.onComboChange(event, 'ncertificatereporttypecode')}                               \r\n                    />\r\n\r\n                {/* <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_VERSIONNO\" })}\r\n                    name={\"sversionno\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_VERSIONNO\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sversionno\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"20\"}\r\n                /> */}\r\n\r\n\r\n           \r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"sdescription\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n           \r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_EDQM\" })}\r\n                    type=\"switch\"\r\n                    name={\"nedqm\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_EDQM\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nedqm\"] === transactionStatus.NO ? false : true : true}\r\n                    isMandatory={false}\r\n                    rows=\"3\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"nedqm\"] === transactionStatus.NO ? false : true : true}\r\n\r\n                />\r\n            \r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ACCREDITED\" })}\r\n                    type=\"switch\"\r\n                    name={\"naccredited\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ACCREDITED\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"naccredited\"] === transactionStatus.NO ? false : true : true}\r\n                    isMandatory={false}\r\n                    rows=\"3\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"naccredited\"] === transactionStatus.NO ? false : true : true}\r\n\r\n                />\r\n           \r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                    type=\"switch\"\r\n                    name={\"ntransactionstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.NO ? false : true : true}\r\n                    isMandatory={false}\r\n                    rows=\"3\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.NO ? false : true : true}\r\n                />\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddCertificateType);"]},"metadata":{},"sourceType":"module"}