{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"name\",\"className\",\"isMandatory\",\"errors\",\"ClearIcon\",\"label\",\"ClearSelectedIcon\",\"disableSearch\",\"disabled\",\"ArrowRenderer\",\"focusSearchOnOpen\",\"optionId\",\"optionValue\",\"options\",\"value\",\"onChange\",\"isInvalid\",\"allItemSelectedLabel\",\"noOptionsLabel\",\"searchLabel\",\"selectAllLabel\"];import React from'react';import MultiSelect from'react-multi-select-component';import{MultiSelectWrap}from'../form-multi-select/form-multi-select.styles';import{Form}from'react-bootstrap';import{injectIntl}from'react-intl';function FormMultiSelect(_ref){var name=_ref.name,className=_ref.className,isMandatory=_ref.isMandatory,errors=_ref.errors,ClearIcon=_ref.ClearIcon,label=_ref.label,ClearSelectedIcon=_ref.ClearSelectedIcon,disableSearch=_ref.disableSearch,disabled=_ref.disabled,ArrowRenderer=_ref.ArrowRenderer,focusSearchOnOpen=_ref.focusSearchOnOpen,optionId=_ref.optionId,optionValue=_ref.optionValue,options=_ref.options,value=_ref.value,onChange=_ref.onChange,isInvalid=_ref.isInvalid,allItemSelectedLabel=_ref.allItemSelectedLabel,noOptionsLabel=_ref.noOptionsLabel,searchLabel=_ref.searchLabel,selectAllLabel=_ref.selectAllLabel,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form.Group,{className:\"floating-label\"},/*#__PURE__*/React.createElement(MultiSelectWrap,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:name},label,isMandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")),/*#__PURE__*/React.createElement(MultiSelect//options={options}\n,{options:Object.values(props.sortField?props.sortOrder===\"ascending\"?options.sort(function(itemA,itemB){return itemA[props.sortField]<itemB[props.sortField]?-1:1;}):options.sort(function(itemA,itemB){return itemA[props.sortField]>itemB[props.sortField]?-1:1;}):props.alphabeticalSort?options.sort(function(itemA,itemB){return itemA[optionValue]<itemB[optionValue]?-1:1;}):options).map(function(item){return{label:item[optionValue],value:item[optionId],item:item};}),value:value,onChange:onChange,labelledBy:\"Select\",name:name,className:className,isMandatory:isMandatory,label:label,errors:errors,ClearIcon:ClearIcon,ClearSelectedIcon:ClearSelectedIcon,disableSearch:disableSearch,disabled:disabled,focusSearchOnOpen:focusSearchOnOpen,ArrowRenderer:ArrowRenderer,isInvalid:isInvalid,overrideStrings:{\"allItemsAreSelected\":props.intl.formatMessage({id:\"IDS_ALLITEMSAREMSELECTED\"}),\"noOptions\":props.intl.formatMessage({id:\"IDS_NOOPTIONS\"}),\"search\":props.intl.formatMessage({id:\"IDS_SEARCH\"}),\"selectAll\":props.intl.formatMessage({id:\"IDS_SELECTALL\"}),\"selectSomeItems\":props.placeholder?props.placeholder:props.intl.formatMessage({id:\"IDS_SELECT...\"})}})),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors)));}export default injectIntl(FormMultiSelect);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/form-multi-select/form-multi-select.component.jsx"],"names":["React","MultiSelect","MultiSelectWrap","Form","injectIntl","FormMultiSelect","name","className","isMandatory","errors","ClearIcon","label","ClearSelectedIcon","disableSearch","disabled","ArrowRenderer","focusSearchOnOpen","optionId","optionValue","options","value","onChange","isInvalid","allItemSelectedLabel","noOptionsLabel","searchLabel","selectAllLabel","props","Object","values","sortField","sortOrder","sort","itemA","itemB","alphabeticalSort","map","item","intl","formatMessage","id","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\nimport { MultiSelectWrap } from '../form-multi-select/form-multi-select.styles';\r\nimport { Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nfunction FormMultiSelect({ \r\n    name,\r\n    className,\r\n    isMandatory,\r\n    errors,\r\n    ClearIcon,\r\n    label,\r\n    ClearSelectedIcon,\r\n    disableSearch,\r\n    disabled,\r\n    ArrowRenderer,\r\n    focusSearchOnOpen,\r\n    optionId,\r\n    optionValue,\r\n    options,\r\n    value,\r\n    onChange,\r\n    isInvalid,\r\n    allItemSelectedLabel,\r\n    noOptionsLabel,\r\n    searchLabel,\r\n    selectAllLabel,\r\n    ...props\r\n\r\n    }) {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group className=\"floating-label\">\r\n                <MultiSelectWrap>\r\n                    <Form.Label htmlFor={name}>{label}{ isMandatory && <sup>*</sup>}</Form.Label>\r\n                    <MultiSelect\r\n                        //options={options}\r\n                        options={\r\n                                Object.values((props.sortField ? (\r\n                                        (props.sortOrder  === \"ascending\" ?\r\n                                                options.sort((itemA, itemB) => itemA[props.sortField] < itemB[props.sortField] ? -1 : 1) \r\n                                                : options.sort((itemA, itemB) => itemA[props.sortField] > itemB[props.sortField] ? -1 : 1) )\r\n                                    )\r\n                                    : (props.alphabeticalSort ?\r\n                                        options.sort((itemA, itemB) => itemA[optionValue] < itemB[optionValue] ? -1 : 1) : options)\r\n                                    \r\n                                )\r\n                                ).map(item => {\r\n                                    return { label: item[optionValue], value: item[optionId], item: item }\r\n                                })}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        labelledBy={\"Select\"}\r\n                        name={name}\r\n                        className={className}\r\n                        isMandatory={isMandatory}\r\n                        label={label}\r\n                        errors={errors}\r\n                        ClearIcon={ClearIcon}\r\n                        ClearSelectedIcon={ClearSelectedIcon}\r\n                        disableSearch={disableSearch}\r\n                        disabled={disabled}\r\n                        focusSearchOnOpen={focusSearchOnOpen}\r\n                        ArrowRenderer={ArrowRenderer}\r\n                        isInvalid={isInvalid}\r\n                        overrideStrings={{\"allItemsAreSelected\":props.intl.formatMessage({ id: \"IDS_ALLITEMSAREMSELECTED\" }),\r\n                        \"noOptions\":props.intl.formatMessage({ id: \"IDS_NOOPTIONS\" }),\r\n                        \"search\":props.intl.formatMessage({ id: \"IDS_SEARCH\" }),\r\n                        \"selectAll\": props.intl.formatMessage({ id: \"IDS_SELECTALL\" }),\r\n                        \"selectSomeItems\":props.placeholder?props.placeholder: props.intl.formatMessage({ id: \"IDS_SELECT...\" }),\r\n                        }}\r\n                    />\r\n                </MultiSelectWrap>\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    { errors }\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default injectIntl(FormMultiSelect);"]},"metadata":{},"sourceType":"module"}