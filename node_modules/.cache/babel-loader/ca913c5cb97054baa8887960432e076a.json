{"ast":null,"code":"import React from'react';import{Col,Form,Nav,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../form-input/form-input.component';import CustomSwitch from'../custom-switch/custom-switch.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';var InputFilterProperties=function InputFilterProperties(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_NUMERIC\"}),type:\"switch\",name:\"isnumeric\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_NUMERIC\"}),defaultValue:props.selectedFieldRecord[\"isnumeric\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isnumeric\"]}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ALPHANUMERIC\"}),type:\"switch\",name:\"isalphanumeric\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ALPHANUMERIC\"}),defaultValue:props.selectedFieldRecord[\"isalphanumeric\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isalphanumeric\"]}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ALPHABETCAPITAL\"}),type:\"switch\",name:\"isalphabetcaptial\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ALPHABETCAPITAL\"}),defaultValue:props.selectedFieldRecord[\"isalphabetcaptial\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isalphabetcaptial\"]}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ALPHABETSMALL\"}),type:\"switch\",name:\"isalphabetsmall\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ALPHABETSMALL\"}),defaultValue:props.selectedFieldRecord[\"isalphabetsmall\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isalphabetsmall\"]}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_ALPHABETSPECIAL\"}),type:\"switch\",name:\"isalphabetspl\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ALPHABETSPECIAL\"}),defaultValue:props.selectedFieldRecord[\"isalphabetspl\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isalphabetspl\"]}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_NUMERICSPECIAL\"}),type:\"switch\",name:\"isnumericspl\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_NUMERICSPECIAL\"}),x:true,defaultValue:props.selectedFieldRecord[\"isnumericspl\"],isMandatory:false,required:false,checked:props.selectedFieldRecord[\"isnumericspl\"]})),/*#__PURE__*/React.createElement(Col,{md:12,style:{\"padding\":\"0px\",\"margin-bottom\":\"10px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{\"margin\":\"16px\",\"padding\":\"0px\",\"margin-top\":\"1px\",\"margin-left\":\"0.5px\"}},/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"ncustomization\",label:props.intl.formatMessage({id:\"IDS_CUSTOMIZATION\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"ncustomization\"]===true?true:false//  defaultChecked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\n// isMandatory={control.mandatory}\n//required={control.mandatory}\n,disabled:(props.selectedFieldRecord[\"isalphabetcaptial\"]||props.selectedFieldRecord[\"isalphabetsmall\"])===true?true:false,size:'xl'})))),props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"isnumeric\"]?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXVALUE\"}),name:\"nmaxvalue\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXVALUE\"}),value:props.selectedFieldRecord[\"nmaxvalue\"]?props.selectedFieldRecord[\"nmaxvalue\"]:\"\",isMandatory:false,required:true,maxLength:\"7\"}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MINVALUE\"}),name:\"nminvalue\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MINVALUE\"}),value:props.selectedFieldRecord[\"nminvalue\"]?props.selectedFieldRecord[\"nminvalue\"]:\"\",isMandatory:false,required:true,maxLength:\"7\"}))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"isalphanumeric\"]?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),name:\"nmaxletters\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),value:props.selectedFieldRecord[\"nmaxletters\"]?props.selectedFieldRecord[\"nmaxletters\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),name:\"nmaxnumeric\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),value:props.selectedFieldRecord[\"nmaxnumeric\"]?props.selectedFieldRecord[\"nmaxnumeric\"]:\"\",isMandatory:true,required:true,maxLength:3}))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"isalphabetspl\"]?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),name:\"nmaxletters\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),value:props.selectedFieldRecord[\"nmaxletters\"]?props.selectedFieldRecord[\"nmaxletters\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),name:\"nsplchar\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),value:props.selectedFieldRecord[\"nsplchar\"]?props.selectedFieldRecord[\"nsplchar\"]:\"\",isMandatory:true,required:true,maxLength:3}))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"isnumericspl\"]?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),name:\"nmaxnumeric\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),value:props.selectedFieldRecord[\"nmaxnumeric\"]?props.selectedFieldRecord[\"nmaxnumeric\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),name:\"nsplchar\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),value:props.selectedFieldRecord[\"nsplchar\"]?props.selectedFieldRecord[\"nsplchar\"]:\"\",isMandatory:true,required:true,maxLength:3}))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&(props.selectedFieldRecord[\"isalphabetspl\"]||props.selectedFieldRecord[\"isalphanumeric\"])?/*#__PURE__*/React.createElement(Col,{md:12,style:{\"padding\":\"0px\",\"margin-bottom\":\"10px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{\"margin\":\"16px\",\"padding\":\"0px\",\"margin-top\":\"1px\",\"margin-left\":\"0.5px\"}},/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"ncasesensitive\",label:props.intl.formatMessage({id:\"IDS_CASESENSITIVE\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"ncasesensitive\"]?true:false,defaultChecked:props.selectedFieldRecord[\"ncasesensitive\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'}),/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"ncaptialletters\",label:props.intl.formatMessage({id:\"IDS_CAPTICALLETTERS\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"ncaptialletters\"]?true:false,defaultChecked:props.selectedFieldRecord[\"ncaptialletters\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'}),/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"nsmallletters\",label:props.intl.formatMessage({id:\"IDS_SMALLLETTER\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"nsmallletters\"]?true:false,defaultChecked:props.selectedFieldRecord[\"nsmallletters\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'}),props.selectedFieldRecord['isalphabetspl']||props.selectedFieldRecord['isnumericspl']?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{\"margin\":\"16px\",\"padding\":\"0px\",\"margin-top\":\"1px\",\"margin-left\":\"0.5px\"}},/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"naviodsplchar\",label:props.intl.formatMessage({id:\"IDS_RESTRICTSPLCHAR\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"naviodsplchar\"]?true:false,defaultChecked:props.selectedFieldRecord[\"naviodsplchar\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'}))):\"\"))):\"\",props.selectedFieldRecord[\"ncustomization\"]===true&&(props.selectedFieldRecord[\"isalphabetspl\"]===false||props.selectedFieldRecord['isalphabetspl']===undefined)&&(props.selectedFieldRecord[\"isnumericspl\"]===false||props.selectedFieldRecord['isnumericspl']===undefined)&&(props.selectedFieldRecord[\"isalphabetsmall\"]===false||props.selectedFieldRecord['isalphabetsmall']===undefined)&&(props.selectedFieldRecord[\"isalphanumeric\"]===false||props.selectedFieldRecord['isalphanumeric']===undefined)&&(props.selectedFieldRecord[\"isalphabetcaptial\"]===false||props.selectedFieldRecord['isalphabetcaptial']===undefined)&&(props.selectedFieldRecord[\"isnumeric\"]===false||props.selectedFieldRecord['isnumeric']===undefined)?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),name:\"nmaxletters\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXLETTERS\"}),value:props.selectedFieldRecord[\"nmaxletters\"]?props.selectedFieldRecord[\"nmaxletters\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),name:\"nmaxnumeric\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXNUMERIC\"}),value:props.selectedFieldRecord[\"nmaxnumeric\"]?props.selectedFieldRecord[\"nmaxnumeric\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),name:\"nsplchar\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SPLCHARACTER\"}),value:props.selectedFieldRecord[\"nsplchar\"]?props.selectedFieldRecord[\"nsplchar\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(Col,{md:12,style:{\"padding\":\"0px\",\"margin-bottom\":\"10px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{\"margin\":\"16px\",\"padding\":\"0px\",\"margin-top\":\"1px\",\"margin-left\":\"0.5px\"}},/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"ncasesensitive\",label:props.intl.formatMessage({id:\"IDS_CASESENSITIVE\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"ncasesensitive\"]?true:false,defaultChecked:props.selectedFieldRecord[\"ncasesensitive\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'})))))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"ncasesensitive\"]?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXCAPTICALLETTERS\"}),name:\"nmaxcapticalletters\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXCAPTICALLETTERS\"}),value:props.selectedFieldRecord[\"nmaxcapticalletters\"]?props.selectedFieldRecord[\"nmaxcapticalletters\"]:\"\",isMandatory:true,required:true,maxLength:3}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MAXSMALLLETTERS\"}),name:\"nmaxsmallletters\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MAXSMALLLETTERS\"}),value:props.selectedFieldRecord[\"nmaxsmallletters\"]?props.selectedFieldRecord[\"nmaxsmallletters\"]:\"\",isMandatory:true,required:true,maxLength:3})))):\"\",props.selectedFieldRecord['ncustomization']&&props.selectedFieldRecord['isnumericspl']?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{\"margin\":\"16px\",\"padding\":\"0px\",\"margin-top\":\"1px\",\"margin-left\":\"0.5px\"}},/*#__PURE__*/React.createElement(Form.Check,{//inline={true}\ntype:\"checkbox\",name:\"naviodsplchar\",label:props.intl.formatMessage({id:\"IDS_RESTRICTSPLCHAR\"})// label={checkbox.text}\n,onChange:function onChange(event){return props.onInputOnChange(event);}//id={checkbox.id}\n,checked:props.selectedFieldRecord[\"naviodsplchar\"]?true:false,defaultChecked:props.selectedFieldRecord[\"naviodsplchar\"]?true:false// isMandatory={control.mandatory}\n//required={control.mandatory}\n,size:'xl'})))):\"\",props.selectedFieldRecord[\"ncustomization\"]&&props.selectedFieldRecord[\"naviodsplchar\"]&&(props.selectedFieldRecord[\"isalphabetspl\"]||props.selectedFieldRecord[\"isnumericspl\"])?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SPLCHARACTERSNOTALLOWED\"}),name:\"nsplcharnotallow\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SPLCHARACTERSNOTALLOWED\"}),value:props.selectedFieldRecord[\"nsplcharnotallow\"]?props.selectedFieldRecord[\"nsplcharnotallow\"]:\"\",isMandatory:true,required:true//maxLength={\"30\"}\n}))):\"\");};export default injectIntl(InputFilterProperties);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/form-input/InputFilterProperties.jsx"],"names":["React","Col","Form","Nav","Row","injectIntl","FormInput","CustomSwitch","FormNumericInput","InputFilterProperties","props","intl","formatMessage","id","event","onInputOnChange","selectedFieldRecord","onNumericInputChange","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\n\r\nconst InputFilterProperties = (props) => {\r\n    return (\r\n        <>\r\n            <Col>\r\n\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMERIC\" })}\r\n                    type=\"switch\"\r\n                    name={\"isnumeric\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMERIC\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isnumeric\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isnumeric\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHANUMERIC\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphanumeric\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHANUMERIC\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphanumeric\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphanumeric\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETCAPITAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetcaptial\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETCAPITAL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetcaptial\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetcaptial\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETSMALL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetsmall\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETSMALL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetsmall\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetsmall\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALPHABETSPECIAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isalphabetspl\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ALPHABETSPECIAL\" })}\r\n                    defaultValue={props.selectedFieldRecord[\"isalphabetspl\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isalphabetspl\"]}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMERICSPECIAL\" })}\r\n                    type=\"switch\"\r\n                    name={\"isnumericspl\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMERICSPECIAL\" })} x\r\n                    defaultValue={props.selectedFieldRecord[\"isnumericspl\"]}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedFieldRecord[\"isnumericspl\"]}\r\n                />\r\n                {/* </Col>\r\n                </Row> */}\r\n            </Col>\r\n\r\n            <Col md={12} style={{\r\n                \"padding\": \"0px\",\r\n                \"margin-bottom\": \"10px\"\r\n            }}>\r\n                <Row>\r\n                    <Col md={12} style={{\r\n                        \"margin\": \"16px\",\r\n                        \"padding\": \"0px\",\r\n                        \"margin-top\": \"1px\",\r\n                        \"margin-left\": \"0.5px\"\r\n                    }}>\r\n                        <Form.Check\r\n                            //inline={true}\r\n                            type=\"checkbox\"\r\n                            name={\"ncustomization\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_CUSTOMIZATION\" })}\r\n                            // label={checkbox.text}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            //id={checkbox.id}\r\n                            checked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\r\n                            //  defaultChecked={props.selectedFieldRecord[\"ncustomization\"] === true ? true : false}\r\n                            // isMandatory={control.mandatory}\r\n                            //required={control.mandatory}\r\n                            disabled={(props.selectedFieldRecord[\"isalphabetcaptial\"] ||\r\n                                props.selectedFieldRecord[\"isalphabetsmall\"]) === true ? true : false}\r\n                            size={'xl'}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isnumeric\"] ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                            name={\"nmaxvalue\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXVALUE\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxvalue\"] ? props.selectedFieldRecord[\"nmaxvalue\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"7\"}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                            name={\"nminvalue\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MINVALUE\" })}\r\n                            value={props.selectedFieldRecord[\"nminvalue\"] ? props.selectedFieldRecord[\"nminvalue\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={\"7\"}\r\n                        />\r\n\r\n                    </Col>\r\n                </Row>\r\n                : \"\"}\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphanumeric\"] ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                : \"\"}\r\n\r\n\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isalphabetspl\"] ?\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"isnumericspl\"] ?\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n\r\n            {props.selectedFieldRecord[\"ncustomization\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isalphanumeric\"]) ?\r\n                <Col md={12} style={{\r\n                    \"padding\": \"0px\",\r\n                    \"margin-bottom\": \"10px\"\r\n                }}>\r\n                    <Row>\r\n                        <Col md={12} style={{\r\n                            \"margin\": \"16px\",\r\n                            \"padding\": \"0px\",\r\n                            \"margin-top\": \"1px\",\r\n                            \"margin-left\": \"0.5px\"\r\n                        }}>\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"ncasesensitive\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_CASESENSITIVE\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"ncaptialletters\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_CAPTICALLETTERS\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"ncaptialletters\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"ncaptialletters\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"nsmallletters\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_SMALLLETTER\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"nsmallletters\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"nsmallletters\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                            {props.selectedFieldRecord['isalphabetspl'] || props.selectedFieldRecord['isnumericspl'] ?\r\n                                <Row>\r\n                                    <Col md={12} style={{\r\n                                        \"margin\": \"16px\",\r\n                                        \"padding\": \"0px\",\r\n                                        \"margin-top\": \"1px\",\r\n                                        \"margin-left\": \"0.5px\"\r\n                                    }}>\r\n                                        <Form.Check\r\n                                            //inline={true}\r\n                                            type=\"checkbox\"\r\n                                            name={\"naviodsplchar\"}\r\n                                            label={props.intl.formatMessage({ id: \"IDS_RESTRICTSPLCHAR\" })}\r\n                                            // label={checkbox.text}\r\n                                            onChange={(event) => props.onInputOnChange(event)}\r\n                                            //id={checkbox.id}\r\n                                            checked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                            defaultChecked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                            // isMandatory={control.mandatory}\r\n                                            //required={control.mandatory}\r\n                                            size={'xl'}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                : \"\"}\r\n            {props.selectedFieldRecord[\"ncustomization\"] === true\r\n                && (props.selectedFieldRecord[\"isalphabetspl\"] === false || props.selectedFieldRecord['isalphabetspl'] === undefined)\r\n                && (props.selectedFieldRecord[\"isnumericspl\"] === false || props.selectedFieldRecord['isnumericspl'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphabetsmall\"] === false || props.selectedFieldRecord['isalphabetsmall'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphanumeric\"] === false || props.selectedFieldRecord['isalphanumeric'] === undefined)\r\n                && (props.selectedFieldRecord[\"isalphabetcaptial\"] === false || props.selectedFieldRecord['isalphabetcaptial'] === undefined)\r\n                && (props.selectedFieldRecord[\"isnumeric\"] === false || props.selectedFieldRecord['isnumeric'] === undefined) ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            name={\"nmaxletters\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXLETTERS\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxletters\"] ? props.selectedFieldRecord[\"nmaxletters\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            name={\"nmaxnumeric\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_MAXNUMERIC\" })}\r\n                            value={props.selectedFieldRecord[\"nmaxnumeric\"] ? props.selectedFieldRecord[\"nmaxnumeric\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            name={\"nsplchar\"}\r\n                            type=\"numeric\"\r\n                            onChange={(event) => props.onNumericInputChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTER\" })}\r\n                            value={props.selectedFieldRecord[\"nsplchar\"] ? props.selectedFieldRecord[\"nsplchar\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={3}\r\n                        />\r\n                        <Col md={12} style={{\r\n                            \"padding\": \"0px\",\r\n                            \"margin-bottom\": \"10px\"\r\n                        }}>\r\n                            <Row>\r\n                                <Col md={12} style={{\r\n                                    \"margin\": \"16px\",\r\n                                    \"padding\": \"0px\",\r\n                                    \"margin-top\": \"1px\",\r\n                                    \"margin-left\": \"0.5px\"\r\n                                }}>\r\n                                    <Form.Check\r\n                                        //inline={true}\r\n                                        type=\"checkbox\"\r\n                                        name={\"ncasesensitive\"}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_CASESENSITIVE\" })}\r\n                                        // label={checkbox.text}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                        //id={checkbox.id}\r\n                                        checked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                        defaultChecked={props.selectedFieldRecord[\"ncasesensitive\"] ? true : false}\r\n                                        // isMandatory={control.mandatory}\r\n                                        //required={control.mandatory}\r\n                                        size={'xl'}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row> : \"\"\r\n            }\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"ncasesensitive\"] ?\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MAXCAPTICALLETTERS\" })}\r\n                                name={\"nmaxcapticalletters\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MAXCAPTICALLETTERS\" })}\r\n                                value={props.selectedFieldRecord[\"nmaxcapticalletters\"] ? props.selectedFieldRecord[\"nmaxcapticalletters\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={3}\r\n                            />\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_MAXSMALLLETTERS\" })}\r\n                                name={\"nmaxsmallletters\"}\r\n                                type=\"numeric\"\r\n                                onChange={(event) => props.onNumericInputChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_MAXSMALLLETTERS\" })}\r\n                                value={props.selectedFieldRecord[\"nmaxsmallletters\"] ? props.selectedFieldRecord[\"nmaxsmallletters\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={3}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col> : \"\"}\r\n\r\n            {props.selectedFieldRecord['ncustomization'] && props.selectedFieldRecord['isnumericspl'] ?\r\n                <Col>\r\n                    <Row>\r\n                        <Col md={12} style={{\r\n                            \"margin\": \"16px\",\r\n                            \"padding\": \"0px\",\r\n                            \"margin-top\": \"1px\",\r\n                            \"margin-left\": \"0.5px\"\r\n                        }}>\r\n                            <Form.Check\r\n                                //inline={true}\r\n                                type=\"checkbox\"\r\n                                name={\"naviodsplchar\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_RESTRICTSPLCHAR\" })}\r\n                                // label={checkbox.text}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                //id={checkbox.id}\r\n                                checked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                defaultChecked={props.selectedFieldRecord[\"naviodsplchar\"] ? true : false}\r\n                                // isMandatory={control.mandatory}\r\n                                //required={control.mandatory}\r\n                                size={'xl'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col> : \"\"}\r\n            {props.selectedFieldRecord[\"ncustomization\"] && props.selectedFieldRecord[\"naviodsplchar\"] && (props.selectedFieldRecord[\"isalphabetspl\"] || props.selectedFieldRecord[\"isnumericspl\"]) ?\r\n                <Row>\r\n                    <Col>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPLCHARACTERSNOTALLOWED\" })}\r\n                            name={\"nsplcharnotallow\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPLCHARACTERSNOTALLOWED\" })}\r\n                            value={props.selectedFieldRecord[\"nsplcharnotallow\"] ? props.selectedFieldRecord[\"nsplcharnotallow\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                        //maxLength={\"30\"}\r\n                        />\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(InputFilterProperties);"]},"metadata":{},"sourceType":"module"}