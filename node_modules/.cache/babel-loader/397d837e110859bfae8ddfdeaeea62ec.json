{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\NewJobAlloct.jsx\";\nimport React from \"react\";\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, AgendaView } from '@progress/kendo-react-scheduler';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from \"react-bootstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { guid } from '@progress/kendo-react-common';\nimport './Calender.css';\nimport CustomEditItem, { CustomEditSlotForMonth, CustomSlot, CustomSlotForDayAndWeek, CustomTask } from \"./EditItem\";\nimport CustomItem from './NewCustomItem';\nimport { FormWithCustomEditor } from \"./custom-form\";\nimport { toast } from \"react-toastify\";\nimport rsapi from \"../../rsapi\";\nimport { constructOptionList, convertDateTimetoStringDBFormat } from \"../../components/CommonScript\";\n\nclass NewJobAlloct extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === \"ntechniquecode\") {\n        selectedRecord[\"ntechniquecode\"] = comboData;\n\n        if (comboData != null) {\n          //    this.props.getUsers(this.state.selectedRecord.ntechniquecode.value,\n          //     this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\n          return rsapi.post(\"joballocation/getUsersBasedTechnique\", {\n            \"ntechniquecode\": selectedRecord[\"ntechniquecode\"].value,\n            \"ssectioncode\": this.props.masterData.JASelectedSample ? this.props.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\n            \"nregtypecode\": this.props.masterData.realRegTypeValue.nregtypecode,\n            \"nregsubtypecode\": this.props.masterData.realRegSubTypeValue.nregsubtypecode,\n            \"userinfo\": this.props.userInfo\n          }).then(response => {\n            let Users = [];\n            const UsersMap = constructOptionList(response.data.Users || [], \"nusercode\", \"susername\", undefined, undefined, false);\n            Users = UsersMap.get(\"OptionList\");\n            selectedRecord[\"nusercode\"] = \"\";\n            this.setState({\n              data: [],\n              selectedRecord,\n              Users\n            });\n            this.props.parentSelectRecord(selectedRecord, []);\n          }).catch(error => {\n            if (error.response.status === 500) {\n              toast.error(error.message);\n            } else {\n              toast.warn(error.response.data);\n            }\n          });\n        } else {\n          delete selectedRecord[\"ntechniquecode\"];\n          delete selectedRecord[\"nusercode\"]; // this.setState({ selectedRecord });\n\n          this.setState({\n            selectedRecord,\n            data: [],\n            Users: []\n          });\n          this.props.parentSelectRecord(selectedRecord, []);\n        }\n      } else if (fieldName === \"nusercode\") {\n        selectedRecord[\"nusercode\"] = comboData; //  this.props.getAnalystCalenderBasedOnUser(comboData.value, this.props.masterData, this.props.userInfo, selectedRecord)\n\n        return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUser\", {\n          \"nusercode\": comboData.value,\n          \"userinfo\": this.props.userInfo\n        }).then(response => {\n          let data = [];\n\n          for (let i = 0; i < response.data.UserData.length; i++) {\n            data.push({ ...response.data.UserData[i]\n            });\n          }\n\n          data = data.map((dataItem, i) => ({\n            start: new Date(dataItem.userstartdatejson),\n            end: new Date(dataItem.userenddatejson),\n            title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({\n              id: \"IDS_TESTCOUNT\"\n            })}:${dataItem.ncount}`,\n            // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n            id: dataItem.id ? dataItem.id : i,\n            startTimezone: dataItem.startTimezone,\n            endTimezone: dataItem.endTimezone,\n            description: dataItem.Comments ? dataItem.Comments : \"\",\n            Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\n            InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\n            //  sarno: dataItem.sarno,\n            // ssamplearno: dataItem.ssamplearno,\n            stestsynonym: dataItem.stestsynonym,\n            ntransactionstatus: dataItem.ntransactionstatus,\n            stransdisplaystatus: dataItem.stransdisplaystatus // ntransactiontestcode: dataItem.ntransactiontestcode,\n            //  npreregno: dataItem.npreregno,\n\n          }));\n          this.setState({\n            data: data,\n            selectedRecord\n          });\n          this.props.parentSelectRecord(selectedRecord, data); // this.setState({data:[],selectedRecord})\n          // dispatch({\n          //     type: DEFAULT_RETURN,\n          //     payload: {\n          //         masterData: { ...masterData, analystCalenderData: response.data.UserData },\n          //         loading: false,\n          //         selectedRecord,\n          //         updateCalender: true,\n          //     }\n          // });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.handleDateChange = e => {\n      const date = e.value;\n      const view = this.state.view;\n      return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\n        \"nusercode\": this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : -1,\n        view: view,\n        startDate: convertDateTimetoStringDBFormat(date, this.props.userInfo),\n        \"userinfo\": this.props.userInfo\n      }).then(response => {\n        let data = [];\n\n        for (let i = 0; i < response.data.UserData.length; i++) {\n          data.push({ ...response.data.UserData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: new Date(dataItem.userstartdatejson),\n          end: new Date(dataItem.userenddatejson),\n          title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({\n            id: \"IDS_TESTCOUNT\"\n          })}:${dataItem.ncount}`,\n          // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\n          InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\n          // sarno: dataItem.sarno,\n          // ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus //ntransactiontestcode: dataItem.ntransactiontestcode,\n          //npreregno: dataItem.npreregno,\n\n        }));\n        this.setState({\n          data: data,\n          startDate: date\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    };\n\n    this.onViewChange = e => {\n      return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\n        \"nusercode\": this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : -1,\n        view: e.value,\n        startDate: convertDateTimetoStringDBFormat(this.state.startDate, this.props.userInfo),\n        \"userinfo\": this.props.userInfo\n      }).then(response => {\n        let data = [];\n\n        for (let i = 0; i < response.data.UserData.length; i++) {\n          data.push({ ...response.data.UserData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: new Date(dataItem.userstartdatejson),\n          end: new Date(dataItem.userenddatejson),\n          title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({\n            id: \"IDS_TESTCOUNT\"\n          })}:${dataItem.ncount}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\n          InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\n          //sarno: dataItem.sarno,\n          // ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus // ntransactiontestcode: dataItem.ntransactiontestcode,\n          // npreregno: dataItem.npreregno,\n\n        }));\n        this.setState({\n          data: data,\n          view: e.value\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    };\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleted\n    }) => {\n      let data = this.state.data;\n      const aa = created.concat(created.map(item => Object.assign({}, item, {\n        id: guid()\n      })));\n\n      if (aa.length > 1) {\n        const dataTest = data.filter(x => x.insertRecord);\n\n        if (dataTest.length !== this.props.selectedTest.length) {\n          data = data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n          .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n          .concat(this.props.selectedTest.map(y => {\n            if (dataTest.filter(x => x.ntransactiontestcode === y.ntransactiontestcode).length === 0) {\n              return Object.assign({}, y, { ...created.map(item => Object.assign({}, item, {\n                  id: guid(),\n                  insertRecord: true,\n                  title: `${y.sarno && y.sarno}/${y.stestsynonym && y.stestsynonym}`\n                }))[0]\n              });\n            }\n          }));\n          const newArray = data.filter(a => a);\n          this.setState({\n            data: newArray\n          });\n          this.props.parentScheduleState(newArray);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_TESTALREADYASSIGNEDEDITASSIGNED\"\n          }));\n        }\n      }\n\n      if (updated.length > 0) {\n        data = data // Filter the deleted items\n        .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n        .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n        .concat(created.map(item => Object.assign({}, item, {\n          id: guid()\n        })));\n        this.setState({\n          data\n        });\n        this.props.parentScheduleState(data);\n      }\n\n      if (deleted.length > 0) {\n        if (deleted[0].ntransactionstatus !== 20) {\n          this.setState(old => ({\n            data: old.data // Filter the deleted items\n            .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n            .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n            .concat(created.map(item => Object.assign({}, item, {})))\n          }));\n          this.props.parentScheduleState(data);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ALLOTEDCANNOTBEDELETED\"\n          }));\n        }\n      }\n    };\n\n    this.state = {\n      data: [],\n      view: 'month',\n      startDate: this.props.currentTime,\n      selectedRecord: {},\n      Users: []\n    };\n  }\n\n  render() {\n    var displayDate = this.props.currentTime;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-n4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TECHNIQUE\"\n      }),\n      isSearchable: true,\n      name: \"ntechniquecode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: this.props.Technique,\n      value: this.state.selectedRecord[\"ntechniquecode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"ntechniquecode\"],\n      onChange: event => this.onComboChange(event, \"ntechniquecode\"),\n      closeMenuOnSelect: true,\n      formGroupClassName: \"single-line-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_USERS\"\n      }),\n      isSearchable: true,\n      name: \"nusercode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      isClearable: false,\n      options: this.state.Users || [],\n      value: this.state.selectedRecord[\"nusercode\"] || \"\",\n      defaultValue: this.state.selectedRecord[\"nusercode\"],\n      onChange: event => {\n        this.onComboChange(event, \"nusercode\");\n      },\n      closeMenuOnSelect: true,\n      formGroupClassName: \"single-line-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Scheduler, {\n      data: this.state.data,\n      onDataChange: this.handleDataChange,\n      onDateChange: this.handleDateChange,\n      onViewChange: this.onViewChange,\n      editable: {\n        add: true,\n        remove: true,\n        drag: false,\n        resize: true,\n        select: true,\n        edit: true\n      },\n      height: 600,\n      editItem: CustomEditItem,\n      item: CustomItem,\n      form: FormWithCustomEditor,\n      defaultDate: displayDate,\n      editSlot: CustomEditSlotForMonth,\n      slot: CustomSlot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MonthView, {\n      editable: {\n        add: true,\n        remove: true,\n        drag: false,\n        resize: true,\n        select: true,\n        edit: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(AgendaView, {\n      slotDivisions: 1,\n      task: CustomTask,\n      editable: {\n        add: false,\n        remove: false,\n        drag: false,\n        resize: false,\n        select: false,\n        edit: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(WeekView, {\n      slot: CustomSlotForDayAndWeek,\n      editItem: CustomEditItem,\n      editSlot: CustomEditSlotForMonth,\n      item: CustomItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(DayView, {\n      slot: CustomSlotForDayAndWeek,\n      editSlot: CustomEditSlotForMonth,\n      editItem: CustomEditItem,\n      item: CustomItem,\n      numberOfDays: 1,\n      style: {\n        zorder: 25000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TimelineView, {\n      slot: CustomSlotForDayAndWeek,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }))));\n  } // componentDidUpdate(previousProps) {\n  //     let data = [];\n  //     if (this.props.userData !== undefined && this.state.update) {\n  //         if (!(this.props.userData.length <= this.state.data.length)) {\n  //             console.log(\"check\")\n  //             for (let i = 0; i < this.props.userData.length; i++) {\n  //                 data.push({ ...this.props.userData[i] });\n  //             }\n  //             data = data.map((dataItem, i) => ({\n  //                 start: new Date(dataItem.userstartdatejson),\n  //                 end: new Date(dataItem.userenddatejson),\n  //                 title: dataItem.stestsynonym && `${dataItem.stestsynonym}-sample Count:${dataItem.ncount}`,\n  //                 // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n  //                 id: dataItem.id ? dataItem.id : i,\n  //                 startTimezone: dataItem.startTimezone,\n  //                 endTimezone: dataItem.endTimezone,\n  //                 description: dataItem.Comments ? dataItem.Comments : \"\",\n  //                 Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\n  //                 InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\n  //                 //  sarno: dataItem.sarno,\n  //                 // ssamplearno: dataItem.ssamplearno,\n  //                 stestsynonym: dataItem.stestsynonym,\n  //                 ntransactionstatus: dataItem.ntransactionstatus,\n  //                 stransdisplaystatus: dataItem.stransdisplaystatus,\n  //                 // ntransactiontestcode: dataItem.ntransactiontestcode,\n  //                 //  npreregno: dataItem.npreregno,\n  //             }))\n  //             this.setState({ data: data });\n  //         }\n  //     }\n  // }\n\n\n}\n\nexport default injectIntl(NewJobAlloct);\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};\nexport const parseAdjustDate = eventDate => {\n  return [padTo2Digits(eventDate.getMonth() + 1), eventDate.getFullYear(), padTo2Digits(eventDate.getDate())].join('/');\n};\nexport const padTo2Digits = num => {\n  return num.toString().padStart(2, '0');\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/NewJobAlloct.jsx"],"names":["React","Scheduler","TimelineView","DayView","WeekView","MonthView","AgendaView","FormSelectSearch","Col","Row","injectIntl","guid","CustomEditItem","CustomEditSlotForMonth","CustomSlot","CustomSlotForDayAndWeek","CustomTask","CustomItem","FormWithCustomEditor","toast","rsapi","constructOptionList","convertDateTimetoStringDBFormat","NewJobAlloct","Component","constructor","props","onComboChange","comboData","fieldName","selectedRecord","state","post","value","masterData","JASelectedSample","map","sample","nsectioncode","join","realRegTypeValue","nregtypecode","realRegSubTypeValue","nregsubtypecode","userInfo","then","response","Users","UsersMap","data","undefined","get","setState","parentSelectRecord","catch","error","status","message","warn","i","UserData","length","push","dataItem","start","Date","userstartdatejson","end","userenddatejson","title","stestsynonym","intl","formatMessage","id","ncount","startTimezone","endTimezone","description","Comments","Instrument","ninstrumentcode","InstrumentCategory","ninstrumentcatcode","ntransactionstatus","stransdisplaystatus","handleDateChange","e","date","view","startDate","onViewChange","handleDataChange","created","updated","deleted","aa","concat","item","Object","assign","dataTest","filter","x","insertRecord","selectedTest","find","current","y","ntransactiontestcode","sarno","newArray","a","parentScheduleState","info","old","currentTime","render","displayDate","Technique","event","add","remove","drag","resize","select","edit","zorder","currentYear","getFullYear","parseAdjust","eventDate","setFullYear","parseAdjustDate","padTo2Digits","getMonth","getDate","num","toString","padStart"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, AgendaView } from '@progress/kendo-react-scheduler';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { guid } from '@progress/kendo-react-common';\r\nimport './Calender.css'\r\nimport CustomEditItem, {\r\n    CustomEditSlotForMonth,\r\n    CustomSlot,\r\n    CustomSlotForDayAndWeek,\r\n    CustomTask\r\n} from \"./EditItem\";\r\nimport CustomItem from './NewCustomItem'\r\nimport { FormWithCustomEditor } from \"./custom-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport rsapi from \"../../rsapi\";\r\nimport { constructOptionList, convertDateTimetoStringDBFormat } from \"../../components/CommonScript\";\r\n\r\nclass NewJobAlloct extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            view: 'month',\r\n            startDate: this.props.currentTime,\r\n            selectedRecord:{},\r\n            Users:[]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var displayDate = this.props.currentTime;\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Row className=\"mt-n4\">\r\n                        <Col md={8} className=\"d-flex\">\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                                isSearchable={true}\r\n                                name={\"ntechniquecode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                isClearable={true}\r\n                                options={this.props.Technique}\r\n                                value={this.state.selectedRecord[\"ntechniquecode\"] || \"\"}\r\n                                defaultValue={this.props.selectedRecord[\"ntechniquecode\"]}\r\n                                onChange={(event) => this.onComboChange(event, \"ntechniquecode\")}\r\n                                closeMenuOnSelect={true}\r\n                                formGroupClassName={\"single-line-label\"}\r\n                            >\r\n                            </FormSelectSearch>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                                isSearchable={true}\r\n                                name={\"nusercode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                isClearable={false}\r\n                                options={this.state.Users || []}\r\n                                value={this.state.selectedRecord[\"nusercode\"] || \"\"}\r\n                                defaultValue={this.state.selectedRecord[\"nusercode\"]}\r\n                                onChange={(event) => { this.onComboChange(event, \"nusercode\"); }}\r\n                                closeMenuOnSelect={true}\r\n                                formGroupClassName={\"single-line-label\"}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Scheduler data={this.state.data}\r\n                        onDataChange={this.handleDataChange}\r\n                        onDateChange={this.handleDateChange}\r\n                        onViewChange={this.onViewChange}\r\n                        editable={{\r\n                            add: true,\r\n                            remove: true,\r\n                            drag: false,\r\n                            resize: true,\r\n                            select: true,\r\n                            edit: true\r\n                        }}\r\n                        height={600}\r\n                        editItem={CustomEditItem}\r\n                        item={CustomItem}\r\n                        form={FormWithCustomEditor}\r\n                        defaultDate={displayDate}\r\n                        editSlot={CustomEditSlotForMonth}\r\n                        slot={CustomSlot}\r\n                    >\r\n                        <MonthView\r\n                            editable={{\r\n                                add: true,\r\n                                remove: true,\r\n                                drag: false,\r\n                                resize: true,\r\n                                select: true,\r\n                                edit: true\r\n                            }}\r\n                        />\r\n                        <AgendaView slotDivisions={1} task={CustomTask} editable={{\r\n                            add: false,\r\n                            remove: false,\r\n                            drag: false,\r\n                            resize: false,\r\n                            select: false,\r\n                            edit: false\r\n                        }} />\r\n                        <WeekView\r\n                            slot={CustomSlotForDayAndWeek}\r\n                            editItem={CustomEditItem}\r\n                            editSlot={CustomEditSlotForMonth}\r\n                            item={CustomItem}\r\n                        />\r\n                        <DayView\r\n                            slot={CustomSlotForDayAndWeek}\r\n                            editSlot={CustomEditSlotForMonth}\r\n                            editItem={CustomEditItem}\r\n                            item={CustomItem}\r\n                            numberOfDays={1}\r\n                            style={{ zorder: 25000 }}\r\n                        />\r\n                        <TimelineView\r\n                            slot={CustomSlotForDayAndWeek}\r\n                        />\r\n                    </Scheduler>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === \"ntechniquecode\") {\r\n            selectedRecord[\"ntechniquecode\"] = comboData;\r\n            if (comboData != null) {\r\n                //    this.props.getUsers(this.state.selectedRecord.ntechniquecode.value,\r\n                //     this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\r\n\r\n                return rsapi.post(\"joballocation/getUsersBasedTechnique\", {\r\n                    \"ntechniquecode\": selectedRecord[\"ntechniquecode\"].value,\r\n                    \"ssectioncode\": this.props.masterData.JASelectedSample ? this.props.masterData.JASelectedSample.map(sample => sample.nsectioncode).join(\",\") : \"\",\r\n                    \"nregtypecode\": this.props.masterData.realRegTypeValue.nregtypecode,\r\n                    \"nregsubtypecode\": this.props.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    \"userinfo\": this.props.userInfo\r\n                })\r\n                    .then(response => {\r\n                        let Users = [];\r\n                        const UsersMap = constructOptionList(response.data.Users || [], \"nusercode\", \"susername\", undefined, undefined, false);\r\n                        Users = UsersMap.get(\"OptionList\");\r\n                        selectedRecord[\"nusercode\"] = \"\";\r\n\r\n                        this.setState({ data: [], selectedRecord, Users })\r\n                        this.props.parentSelectRecord(selectedRecord,[])\r\n\r\n                    }).catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                delete selectedRecord[\"ntechniquecode\"];\r\n                delete selectedRecord[\"nusercode\"];\r\n                // this.setState({ selectedRecord });\r\n                this.setState({ selectedRecord, data: [],Users:[] })\r\n                this.props.parentSelectRecord(selectedRecord,[])\r\n            }\r\n        } else if (fieldName === \"nusercode\") {\r\n            selectedRecord[\"nusercode\"] = comboData;\r\n            //  this.props.getAnalystCalenderBasedOnUser(comboData.value, this.props.masterData, this.props.userInfo, selectedRecord)\r\n\r\n\r\n            return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUser\", {\r\n                \"nusercode\": comboData.value,\r\n                \"userinfo\": this.props.userInfo\r\n            })\r\n                .then(response => {\r\n                    let data = []\r\n\r\n                    for (let i = 0; i < response.data.UserData.length; i++) {\r\n                        data.push({ ...response.data.UserData[i] });\r\n                    }\r\n                    data = data.map((dataItem, i) => ({\r\n                        start: new Date(dataItem.userstartdatejson),\r\n                        end: new Date(dataItem.userenddatejson),\r\n                        title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({ id: \"IDS_TESTCOUNT\" })}:${dataItem.ncount}`,\r\n                        // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n                        id: dataItem.id ? dataItem.id : i,\r\n                        startTimezone: dataItem.startTimezone,\r\n                        endTimezone: dataItem.endTimezone,\r\n                        description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                        Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\r\n                        InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\r\n                        //  sarno: dataItem.sarno,\r\n                        // ssamplearno: dataItem.ssamplearno,\r\n                        stestsynonym: dataItem.stestsynonym,\r\n                        ntransactionstatus: dataItem.ntransactionstatus,\r\n                        stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                        // ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                        //  npreregno: dataItem.npreregno,\r\n                    }))\r\n                    this.setState({ data: data, selectedRecord });\r\n                    this.props.parentSelectRecord(selectedRecord,data)\r\n                    // this.setState({data:[],selectedRecord})\r\n\r\n                    // dispatch({\r\n                    //     type: DEFAULT_RETURN,\r\n                    //     payload: {\r\n                    //         masterData: { ...masterData, analystCalenderData: response.data.UserData },\r\n                    //         loading: false,\r\n                    //         selectedRecord,\r\n                    //         updateCalender: true,\r\n                    //     }\r\n                    // });\r\n\r\n                   \r\n\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    handleDateChange = (e) => {\r\n        const date = e.value\r\n        const view = this.state.view\r\n        return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\r\n            \"nusercode\": this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : -1, view: view, startDate: convertDateTimetoStringDBFormat(date, this.props.userInfo),\r\n            \"userinfo\": this.props.userInfo\r\n        })\r\n            .then(response => {\r\n                let data = [];\r\n                for (let i = 0; i < response.data.UserData.length; i++) {\r\n                    data.push({ ...response.data.UserData[i] });\r\n                }\r\n                data = data.map((dataItem, i) => ({\r\n                    start: new Date(dataItem.userstartdatejson),\r\n                    end: new Date(dataItem.userenddatejson),\r\n                    title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({ id: \"IDS_TESTCOUNT\" })}:${dataItem.ncount}`,\r\n                    // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\r\n                    InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\r\n                    // sarno: dataItem.sarno,\r\n                    // ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                    //ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                    //npreregno: dataItem.npreregno,\r\n                }))\r\n                this.setState({ data: data, startDate: date});\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n    onViewChange = (e) => {\r\n        return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\r\n            \"nusercode\": this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : -1, view: e.value, startDate: convertDateTimetoStringDBFormat(this.state.startDate, this.props.userInfo),\r\n            \"userinfo\": this.props.userInfo\r\n        })\r\n            .then(response => {\r\n                let data = [];\r\n                for (let i = 0; i < response.data.UserData.length; i++) {\r\n                    data.push({ ...response.data.UserData[i] });\r\n                }\r\n                data = data.map((dataItem, i) => ({\r\n                    start: new Date(dataItem.userstartdatejson),\r\n                    end: new Date(dataItem.userenddatejson),\r\n                    title: dataItem.stestsynonym && `${dataItem.stestsynonym}-${this.props.intl.formatMessage({ id: \"IDS_TESTCOUNT\" })}:${dataItem.ncount}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\r\n                    InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\r\n                    //sarno: dataItem.sarno,\r\n                    // ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                    // ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                    // npreregno: dataItem.npreregno,\r\n                }));\r\n                this.setState({ data: data, view: e.value});\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    handleDataChange = ({\r\n        created,\r\n        updated,\r\n        deleted\r\n    }) => {\r\n        let data = this.state.data;\r\n        const aa = created.concat(created.map(item => Object.assign({}, item, {\r\n            id: guid()\r\n        })));\r\n        if (aa.length > 1) {\r\n            const dataTest = data.filter(x => x.insertRecord);\r\n            if (dataTest.length !== this.props.selectedTest.length) {\r\n                data = data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                    .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                    .concat(this.props.selectedTest.map((y) => {\r\n                        if (dataTest.filter(x => x.ntransactiontestcode === y.ntransactiontestcode).length === 0) {\r\n                            return Object.assign({}, y, {\r\n                                ...created.map(item => Object.assign({}, item, {\r\n                                    id: guid(), insertRecord: true, title: `${y.sarno && y.sarno}/${y.stestsynonym && y.stestsynonym}`\r\n                                }))[0]\r\n                            })\r\n                        }\r\n                    }\r\n                    ))\r\n                const newArray = data.filter((a) => a)\r\n                this.setState({ data: newArray });\r\n                this.props.parentScheduleState(newArray);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_TESTALREADYASSIGNEDEDITASSIGNED\" }))\r\n            }\r\n        }\r\n        if (updated.length > 0) {\r\n            data = data     // Filter the deleted items\r\n                .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                .concat(created.map(item => Object.assign({}, item, {\r\n                    id: guid()\r\n                })))\r\n            this.setState({ data });\r\n            this.props.parentScheduleState(data);\r\n        }\r\n\r\n        if (deleted.length > 0) {\r\n            if (deleted[0].ntransactionstatus !== 20) {\r\n                this.setState(old => ({\r\n                    data: old.data     // Filter the deleted items\r\n                        .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                        .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                        .concat(created.map(item => Object.assign({}, item, {\r\n                        })))\r\n                }));\r\n                this.props.parentScheduleState(data);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ALLOTEDCANNOTBEDELETED\" }))\r\n            }\r\n        }\r\n    };\r\n\r\n    // componentDidUpdate(previousProps) {\r\n    //     let data = [];\r\n    //     if (this.props.userData !== undefined && this.state.update) {\r\n    //         if (!(this.props.userData.length <= this.state.data.length)) {\r\n    //             console.log(\"check\")\r\n    //             for (let i = 0; i < this.props.userData.length; i++) {\r\n    //                 data.push({ ...this.props.userData[i] });\r\n    //             }\r\n    //             data = data.map((dataItem, i) => ({\r\n    //                 start: new Date(dataItem.userstartdatejson),\r\n    //                 end: new Date(dataItem.userenddatejson),\r\n    //                 title: dataItem.stestsynonym && `${dataItem.stestsynonym}-sample Count:${dataItem.ncount}`,\r\n    //                 // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n    //                 id: dataItem.id ? dataItem.id : i,\r\n    //                 startTimezone: dataItem.startTimezone,\r\n    //                 endTimezone: dataItem.endTimezone,\r\n    //                 description: dataItem.Comments ? dataItem.Comments : \"\",\r\n    //                 Instrument: dataItem.ninstrumentcode && dataItem.ninstrumentcode,\r\n    //                 InstrumentCategory: dataItem.ninstrumentcatcode && dataItem.ninstrumentcatcode,\r\n    //                 //  sarno: dataItem.sarno,\r\n    //                 // ssamplearno: dataItem.ssamplearno,\r\n    //                 stestsynonym: dataItem.stestsynonym,\r\n    //                 ntransactionstatus: dataItem.ntransactionstatus,\r\n    //                 stransdisplaystatus: dataItem.stransdisplaystatus,\r\n    //                 // ntransactiontestcode: dataItem.ntransactiontestcode,\r\n    //                 //  npreregno: dataItem.npreregno,\r\n    //             }))\r\n    //             this.setState({ data: data });\r\n    //         }\r\n    //     }\r\n    // }\r\n}\r\n\r\nexport default injectIntl(NewJobAlloct);\r\nexport const currentYear = new Date().getFullYear();\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};\r\n\r\nexport const parseAdjustDate = eventDate => {\r\n\r\n    return [\r\n        padTo2Digits(eventDate.getMonth() + 1),\r\n        eventDate.getFullYear(),\r\n        padTo2Digits(eventDate.getDate()),\r\n    ].join('/');\r\n};\r\n\r\nexport const padTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}