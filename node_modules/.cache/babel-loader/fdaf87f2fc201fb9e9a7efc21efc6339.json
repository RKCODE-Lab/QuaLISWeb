{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../components/Enumeration';import{injectIntl}from'react-intl';var AddSafetyMarker=function AddSafetyMarker(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SAFETYMARKERNAME\"}),name:\"ssafetymarkername\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SAFETYMARKERNAME\"}),value:props.selectedRecord?props.selectedRecord[\"ssafetymarkername\"]:\"\",isMandatory:true,required:true,maxLength:\"50\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"ssafetymarkerdesc\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"ssafetymarkerdesc\"]:\"\",rows:\"2\",isMandatory:false,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTCATEGORY\"}),isSearchable:true,name:\"ntestcategorycode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.testCategory// optionId='ntestcategorycode'\n// optionValue='stestcategoryname'\n// value={this.state.ntestcategorycode}\n// defaultValue={props.ntestcategorycode || []}\n,value:props.selectedRecord[\"ntestcategorycode\"]?props.selectedRecord[\"ntestcategorycode\"]:\"\",onChange:function onChange(value){return props.handleChange(value,\"ntestcategorycode\",\"TestCategory\");},closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.testMaster||[]// optionId='ntestcode'\n// optionValue='stestname'\n// value={props.selectedRecord.ntestcode ?  props.selectedRecord.ntestcode : \"\"}\n,value:props.selectedRecord[\"ntestcode\"]?props.selectedRecord[\"ntestcode\"]:\"\",onChange:function onChange(value){return props.handleChange(value,\"ntestcode\",\"\");},closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_UPLOADTOEDQM\"}),type:\"switch\",name:\"ntransactionstatus\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_UPLOADTOEDQM\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.YES?true:false:\"\",isMandatory:false,rows:\"3\",required:false,checked:props.selectedRecord?props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.YES?true:false:false})));};export default injectIntl(AddSafetyMarker);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/edqmmaster/AddSafetyMarker.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","transactionStatus","injectIntl","AddSafetyMarker","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","testCategory","value","handleChange","testMaster","YES"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\nimport {injectIntl } from 'react-intl';\r\n\r\nconst AddSafetyMarker = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_SAFETYMARKERNAME\" })}\r\n                    name={\"ssafetymarkername\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_SAFETYMARKERNAME\"})}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ssafetymarkername\"] : \"\"}\r\n\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"50\"}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"ssafetymarkerdesc\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ssafetymarkerdesc\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}                   \r\n                    maxLength={\"100\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntestcategorycode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.testCategory}\r\n                    // optionId='ntestcategorycode'\r\n                    // optionValue='stestcategoryname'\r\n                    // value={this.state.ntestcategorycode}\r\n                    // defaultValue={props.ntestcategorycode || []}\r\n                    value={props.selectedRecord[\"ntestcategorycode\"] ?  props.selectedRecord[\"ntestcategorycode\"] : \"\"}\r\n                    onChange={value => props.handleChange(value, \"ntestcategorycode\", \"TestCategory\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntestcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.testMaster || []}\r\n                    // optionId='ntestcode'\r\n                    // optionValue='stestname'\r\n                    // value={props.selectedRecord.ntestcode ?  props.selectedRecord.ntestcode : \"\"}\r\n                    value={props.selectedRecord[\"ntestcode\"] ?  props.selectedRecord[\"ntestcode\"] : \"\"}\r\n                    onChange={value => props.handleChange(value, \"ntestcode\", \"\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_UPLOADTOEDQM\" })}\r\n                    type=\"switch\"\r\n                    name={\"ntransactionstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_UPLOADTOEDQM\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    rows=\"3\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : false}\r\n\r\n                >\r\n\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSafetyMarker);"]},"metadata":{},"sourceType":"module"}