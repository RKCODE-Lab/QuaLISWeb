{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import{toast}from\"react-toastify\";import{DEFAULT_RETURN}from\"./LoginTypes\";import rsapi from\"../rsapi\";import{constructOptionList,constructjsonOptionList}from\"../components/CommonScript\";import{initRequest}from\"./LoginAction\";import axios from\"axios\";export function getBarcodeDynamicChange(inputParem,selectedRecordFilter,control,masterData,parentcolumnlist,childcolumnlist,userinfo,listData){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getChildValuesForBarcodeConfiguration\",(_rsapi$post={child:inputParem.child,parentdata:inputParem.item.jsondata,parentsource:inputParem.source},_defineProperty(_rsapi$post,inputParem.primarykeyField,inputParem.value),_defineProperty(_rsapi$post,\"valuemember\",inputParem.primarykeyField),_defineProperty(_rsapi$post,\"childcolumnlist\",childcolumnlist),_defineProperty(_rsapi$post,\"userinfo\",userinfo),_defineProperty(_rsapi$post,\"parentcolumnlist\",parentcolumnlist),_rsapi$post)).then(function(response){var returnObj=parentChildComboLoadForBarcode(parentcolumnlist,response.data,selectedRecordFilter,childcolumnlist,userinfo.slanguagetypecode,userinfo);var masterData1=_objectSpread(_objectSpread({},masterData),response.data);listData=_objectSpread(_objectSpread({},listData),returnObj.comboData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,selectedRecordFilter:returnObj.selectedRecord,masterData:masterData1,listData:listData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeTemplateControlBC(map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getBarcodeDynamicChange\",{'nformcode':map.selectedRecordFilter.nformcode.value,'nbarcodetemplatecode':map.nbarcodetemplatecode,'userinfo':map.userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},map.masterData),response.data),{},{ComboComponnet:[]});var listData=_objectSpread({},map.listData);var selectedRecordFilter=_objectSpread({},map.selectedRecordFilter);selectedRecordFilter['ncontrolcode']=undefined;if(response.data.Control){var data=constructOptionList(response.data.Control||[],'ncontrolcode','scontrolname').get(\"OptionList\");listData['ncontrolcode']=data;}Object.keys(listData).map(function(x){if(x!=='nformcode'&&x!=='ncontrolcode'){listData[x]=[];selectedRecordFilter[x]=undefined;}});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,selectedRecordFilter:selectedRecordFilter,listData:listData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeTemplateControlCombo(map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getBarcodeDynamicCombo\",{'ncontrolcode':map.selectedRecordFilter.ncontrolcode.value,nbarcodetemplatecode:map.nbarcodetemplatecode,'userinfo':map.userInfo}).then(function(response){var selectedRecordFilter=_objectSpread({},map.selectedRecordFilter);var masterData=_objectSpread(_objectSpread({},map.masterData),response.data);var listData=_objectSpread({},map.listData);response.data.ComboComponnet&&response.data.ComboComponnet.map(function(x){var data=constructjsonOptionList(response.data[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,map.userInfo.slanguagetypecode,x).get(\"OptionList\");selectedRecordFilter[x.label]=undefined;// if (data.length !== 0) {\n//     selectedRecordFilter[x.label] = { ...data.filter(y => y.value === response.data[\"Selected\" + x.label][x.valuemember])[0] }\n// }else{\n//     selectedRecordFilter[x.label]=\n// }\nlistData[x.label]=data;});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,selectedRecordFilter:selectedRecordFilter,listData:listData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeConfigFilterSubmit(map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getBarcodeConfigurationFilterSubmit\",_objectSpread({},map)).then(function(response){var masterData=_objectSpread(_objectSpread({},map.masterData),response.data);Object.keys(map.selectedRecordFilter).map(function(x){if(x===\"nformcode\"){masterData=_objectSpread(_objectSpread({},masterData),{},{SelecetedScreen:_objectSpread({},map.selectedRecordFilter[x].item)});}else if(x===\"ncontrolcode\"){masterData=_objectSpread(_objectSpread({},masterData),{},{SelecetedControl:_objectSpread({},map.selectedRecordFilter[x].item)});}else{if(map.selectedRecordFilter[x])masterData=_objectSpread(_objectSpread({},masterData),{},_defineProperty({},\"Selected\"+x,_objectSpread({},map.selectedRecordFilter[x].item.jsondata)));}});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,selectedRecordFilter:_objectSpread({},map.selectedRecordFilter)}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function parentChildComboLoadForBarcode(columnList,comboData,selectedRecord,childColumnList,ParentComboValues,languagetypeCode,userinfo){var comboValues={};if(columnList.length>0){columnList.map(function(x,index){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0){selectedRecord[x.label]=undefined;if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode,x);comboData[x.label]=optionList.get(\"OptionList\");}}else{comboData[x.label]=[];}comboValues=childComboLoadForBarcode(x,comboData,selectedRecord,childColumnList,languagetypeCode,userinfo,selectedRecord[x.label]);}else{selectedRecord[x.label]=undefined;comboValues=childComboLoadForBarcode(x,comboData,selectedRecord,childColumnList,languagetypeCode,userinfo,selectedRecord[x.label]);}}});}else{comboValues={\"comboData\":comboData,\"selectedRecord\":selectedRecord};}return comboValues;}export function childComboLoadForBarcode(x,comboData,selectedRecord,childColumnList,languagetypeCode,userinfo,ParentComboValues){if(selectedRecord[x.label]!==undefined){if(x.hasOwnProperty(\"child\")){x.child.map(function(y){var index=childColumnList[x.label].findIndex(function(z){return z.label===y.label;});if(index!==-1){if(childColumnList[x.label][index].inputtype==='combo'&&childColumnList[x.label][index].readonly===true){selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},childColumnList[x.label][index].label,{label:ParentComboValues.item.jsondata?ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember]:ParentComboValues.item[childColumnList[x.label][index].displaymember]||\"\",value:ParentComboValues.item.jsondata?ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember]:ParentComboValues.item[childColumnList[x.label][index].valuemember]||-1}));}else if(comboData[y.label]&&comboData[y.label].length>0){if(comboData[y.label][0].label===undefined){var optionChildList=constructjsonOptionList(comboData[y.label]||[],childColumnList[x.label][index].valuemember,childColumnList[x.label][index].displaymember,false,false,true,undefined,childColumnList[x.label][index].source,y.isMultiLingual,languagetypeCode,y);comboData[y.label]=optionChildList.get(\"OptionList\");selectedRecord[y.label]=undefined;}else{selectedRecord[y.label]=undefined;}}else{selectedRecord[y.label]=undefined;comboData[y.label]=[];var newRecord1=childComboLoadForBarcode(childColumnList[x.label][index],comboData,selectedRecord,childColumnList,userinfo.slanguagetypecode,userinfo,selectedRecord[y.label]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),newRecord1.selectedRecord);comboData=_objectSpread(_objectSpread({},comboData),newRecord1.comboData);}}});}}else{if(x.hasOwnProperty(\"child\")){x.child.map(function(y){selectedRecord[y.label]=undefined;var index=childColumnList[x.label]&&childColumnList[x.label].findIndex(function(z){return z.label===y.label;});if(index!==undefined&&index!==-1){comboData[y.label]=undefined;var newRecord1=childComboLoadForBarcode(childColumnList[x.label][index],comboData,selectedRecord,childColumnList);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),newRecord1.selectedRecord);comboData=_objectSpread(_objectSpread({},comboData),newRecord1.comboData);}});}}var newRecord={\"comboData\":comboData,\"selectedRecord\":selectedRecord};return newRecord;}export function getOpenModalForBarcodeConfig(map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getOpenModalForBarcodeConfig\",{'nformcode':map.nformcode,'ncontrolcode':map.ncontrolcode,'nquerybuildertablecode':map.nquerybuildertablecode,'userinfo':map.userInfo,nbarcodetemplatecode:map.nbarcodetemplatecode,lastLevelCode:map.lastLevelCode}).then(function(response){var barcodeList=constructOptionList(response.data.Barcode||[],'nbarcode','sbarcodename').get('OptionList');// if (map.nsqlqueryneed) {\n//     const masterData = { ...map.masterData, Barcode: barcodeList, BarcodeParameter: [] }\n//     map={...map,masterData, ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode}\n//     dispatch(getSqlColumns(map))\n// } else {\nvar masterData={};if(map.nfiltersqlqueryneed){var SqlQuery=constructOptionList(response.data.SqlQuery||[],'nsqlquerycode','ssqlqueryname').get('OptionList');masterData=_objectSpread(_objectSpread({},map.masterData),{},{Barcode:barcodeList,SqlQuery:SqlQuery,BarcodeParameter:[]});}else{var mappingList=constructOptionList(response.data.MappingFileds||[],'columnname','columnname').get('OptionList');masterData=_objectSpread(_objectSpread({},map.masterData),{},{Barcode:barcodeList,MappingFileds:mappingList,BarcodeParameter:[]});}if(map.nsqlqueryneed){var _mappingList=constructOptionList(response.data.SqlQueryParamMappingFileds||[],'columnname','columnname').get('OptionList');if(map.nfiltersqlqueryneed===false){// const SqlQueryParam = constructOptionList(response.data.SqlQueryParam || [], 'columnname', 'columnname').get('OptionList');\nvar SqlQueryParam=response.data.SqlQueryParam||[];//.map(x => { return { \"label\": x, \"value\": x } }) || []\nmasterData=_objectSpread(_objectSpread(_objectSpread({},map.masterData),masterData),{},{SqlQueryParam:SqlQueryParam,SqlQueryParamMappingFileds:_mappingList});}else masterData=_objectSpread(_objectSpread(_objectSpread({},map.masterData),masterData),{},{SqlQueryParam:[],SqlQueryParamMappingFileds:_mappingList});}else masterData=_objectSpread(_objectSpread(_objectSpread({},map.masterData),masterData),{},{SqlQueryParam:[],SqlQueryParamMappingFileds:[]});dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,masterData:masterData,operation:\"create\",ndesigntemplatemappingcode:response.data.DesignTempateMapping.ndesigntemplatemappingcode,selectedRecord:{},screenName:map.screenName}});//  }\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSqlColumns(map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/createsqltable\",{nsqlquerycode:map.nsqlquerycode,'userinfo':map.userInfo}).then(function(response){var mappingList=constructOptionList(response.data.MappingFileds||[],'columnname','columnname').get('OptionList');var masterData=_objectSpread(_objectSpread({},map.masterData),{},{MappingFileds:mappingList});dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,masterData:masterData,operation:\"create\",ndesigntemplatemappingcode:map.ndesigntemplatemappingcode,selectedRecord:{}}});}).catch(function(error){console.log(error);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeFileParameter(map){return function(dispatch){dispatch(initRequest(true));var data={};if(map.nfiltersqlqueryneed){data={nsqlquerycode:map.selectedRecord.nsqlquerycode.value};}rsapi.post(\"barcodeconfiguration/getBarcodeFileParameter\",_objectSpread({'nbarcode':map.selectedRecord.nbarcode.value,'ssystemfilename':map.selectedRecord.nbarcode.item.ssystemfilename,'userinfo':map.userinfo,nfiltersqlqueryneed:map.nfiltersqlqueryneed},data)).then(function(response){var masterData=_objectSpread(_objectSpread({},map.masterData),{},{BarcodeParameter:response.data.Parameter});var selectedRecord=_objectSpread({},map.selectedRecord);if(map.nfiltersqlqueryneed){var mappingList=constructOptionList(response.data.MappingFileds||[],'columnname','columnname').get('OptionList');var SqlQueryParam=response.data.SqlQueryParam||[];//.map(x => { return { \"label\": x, \"value\": x } }) || []\nSqlQueryParam.map(function(x){selectedRecord[x]=\"\";});masterData=_objectSpread(_objectSpread({},masterData),{},{MappingFileds:mappingList,SqlQueryParam:SqlQueryParam});}dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,selectedRecord:map.selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEditBarcodeConfigurationComboService(addParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getEditBarcodeConfigurationModal\",{nbarcodeconfigurationcode:addParam.nbarcodeconfigurationcode,'userinfo':addParam.userinfo}).then(function(response){var selectedRecord={};var barcodeConfiguration=response.data.SelectedBarcodeConfig;selectedRecord['nbarcode']={label:barcodeConfiguration.sbarcodename,value:barcodeConfiguration.nbarcode,item:{ssystemfilename:barcodeConfiguration.ssystemfilename}};var mappingList=constructOptionList(response.data.MappingFileds||[],'columnname','columnname').get('OptionList');var BarcodeParameter=[];if(barcodeConfiguration.jsondata.parameterMapping){selectedRecord['columnname']=barcodeConfiguration.jsondata.parameterMapping;Object.keys(barcodeConfiguration.jsondata.parameterMapping).map(function(x){BarcodeParameter.push(x);selectedRecord[x]=_objectSpread({},mappingList.filter(function(y){return y.value===barcodeConfiguration.jsondata.parameterMapping[x];})[0]);});}var SqlQuery=[];if(barcodeConfiguration.jsondatabt.nfiltersqlqueryneed){selectedRecord['nsqlquerycode']={label:barcodeConfiguration.ssqlqueryname,value:barcodeConfiguration.nfiltersqlquerycode,item:{}};SqlQuery=constructOptionList(response.data.SqlQuery||[],'nsqlquerycode','ssqlqueryname').get('OptionList');}var SqlQueryParamMappingFileds=[];var SqlQueryParam=[];if(barcodeConfiguration.jsondatabt.nsqlqueryneed){SqlQueryParamMappingFileds=constructOptionList(response.data.SqlQueryParamMappingFileds||[],'columnname','columnname').get('OptionList');if(barcodeConfiguration.jsondatabt.nfiltersqlqueryneed===false){SqlQueryParam=response.data.SqlQueryParam||[];//.map(x => { return { \"label\": x, \"value\": x } }) || []\nSqlQueryParam.map(function(x){if(SqlQueryParamMappingFileds.filter(function(y){return y.value===barcodeConfiguration.jsondata[\"SqlQueryParamMapping\"][x];}).length>0){selectedRecord[x]=SqlQueryParamMappingFileds.filter(function(y){return y.value===barcodeConfiguration.jsondata[\"SqlQueryParamMapping\"][x];})[0];}});}}var masterData=_objectSpread(_objectSpread({},addParam.masterData),{},{Barcode:[],MappingFileds:mappingList,BarcodeParameter:BarcodeParameter,SqlQuery:SqlQuery,SqlQueryParamMappingFileds:SqlQueryParamMappingFileds,SqlQueryParam:SqlQueryParam});dispatch({type:DEFAULT_RETURN,payload:{loading:false,ncontrolcode:addParam.controlId,openModal:true,operation:'update',masterData:masterData,selectedRecord:selectedRecord,ndesigntemplatemappingcode:response.data.ndesigntemplatemappingcode}});}).catch(function(error){console.log(error);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeConfigurationDetail(barcodeConfiguration,userinfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"barcodeconfiguration/getBarcodeConfiguration\",{nbarcodeconfigurationcode:barcodeConfiguration.nbarcodeconfigurationcode,'userinfo':userinfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData}});}).catch(function(error){console.log(error);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/BarcodeConfigurationAction.js"],"names":["toast","DEFAULT_RETURN","rsapi","constructOptionList","constructjsonOptionList","initRequest","axios","getBarcodeDynamicChange","inputParem","selectedRecordFilter","control","masterData","parentcolumnlist","childcolumnlist","userinfo","listData","dispatch","post","child","parentdata","item","jsondata","parentsource","source","primarykeyField","value","then","response","returnObj","parentChildComboLoadForBarcode","data","slanguagetypecode","masterData1","comboData","type","payload","loading","selectedRecord","catch","error","status","message","warn","getBarcodeTemplateControlBC","map","nformcode","nbarcodetemplatecode","userInfo","ComboComponnet","undefined","Control","get","Object","keys","x","getBarcodeTemplateControlCombo","ncontrolcode","label","valuemember","displaymember","isMultiLingual","getBarcodeConfigFilterSubmit","SelecetedScreen","SelecetedControl","columnList","childColumnList","ParentComboValues","languagetypeCode","comboValues","length","index","inputtype","optionList","childComboLoadForBarcode","hasOwnProperty","y","findIndex","z","readonly","optionChildList","newRecord1","newRecord","getOpenModalForBarcodeConfig","nquerybuildertablecode","lastLevelCode","barcodeList","Barcode","nfiltersqlqueryneed","SqlQuery","BarcodeParameter","mappingList","MappingFileds","nsqlqueryneed","SqlQueryParamMappingFileds","SqlQueryParam","openModal","operation","ndesigntemplatemappingcode","DesignTempateMapping","screenName","getSqlColumns","nsqlquerycode","console","log","getBarcodeFileParameter","nbarcode","ssystemfilename","Parameter","getEditBarcodeConfigurationComboService","addParam","nbarcodeconfigurationcode","barcodeConfiguration","SelectedBarcodeConfig","sbarcodename","parameterMapping","push","filter","jsondatabt","ssqlqueryname","nfiltersqlquerycode","controlId","getBarcodeConfigurationDetail"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport rsapi from \"../rsapi\";\r\nimport { constructOptionList, constructjsonOptionList } from \"../components/CommonScript\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function getBarcodeDynamicChange(inputParem, selectedRecordFilter, control, masterData,\r\n    parentcolumnlist, childcolumnlist, userinfo, listData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getChildValuesForBarcodeConfiguration\", {\r\n            child: inputParem.child,\r\n            parentdata: inputParem.item.jsondata,\r\n            parentsource: inputParem.source,\r\n            [inputParem.primarykeyField]: inputParem.value,\r\n            valuemember: inputParem.primarykeyField,\r\n            childcolumnlist,\r\n            userinfo,\r\n            parentcolumnlist\r\n        })\r\n            .then(response => {\r\n\r\n                let returnObj = parentChildComboLoadForBarcode(parentcolumnlist, response.data,\r\n                    selectedRecordFilter, childcolumnlist,\r\n                    userinfo.slanguagetypecode, userinfo)\r\n\r\n                let masterData1 = { ...masterData, ...response.data }\r\n                listData = { ...listData, ...returnObj.comboData }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, selectedRecordFilter: returnObj.selectedRecord, masterData: masterData1, listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeTemplateControlBC(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeDynamicChange\", { 'nformcode': map.selectedRecordFilter.nformcode.value, 'nbarcodetemplatecode': map.nbarcodetemplatecode, 'userinfo': map.userInfo })\r\n            .then(response => {\r\n                let masterData = { ...map.masterData, ...response.data, ComboComponnet: [] }\r\n                const listData = { ...map.listData }\r\n                const selectedRecordFilter = { ...map.selectedRecordFilter }\r\n\r\n                selectedRecordFilter['ncontrolcode'] = undefined\r\n                if (response.data.Control) {\r\n                    const data = constructOptionList(response.data.Control || [], 'ncontrolcode', 'scontrolname').get(\"OptionList\");\r\n                    listData['ncontrolcode'] = data\r\n                }\r\n\r\n                Object.keys(listData).map(x => {\r\n                    if (x !== 'nformcode' && x !== 'ncontrolcode') {\r\n                        listData[x] = []\r\n                        selectedRecordFilter[x] = undefined\r\n                    }\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: selectedRecordFilter, listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeTemplateControlCombo(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeDynamicCombo\", {\r\n            'ncontrolcode': map.selectedRecordFilter.ncontrolcode.value,\r\n            nbarcodetemplatecode: map.nbarcodetemplatecode, 'userinfo': map.userInfo\r\n        })\r\n            .then(response => {\r\n                const selectedRecordFilter = { ...map.selectedRecordFilter }\r\n                let masterData = { ...map.masterData, ...response.data }\r\n                const listData = { ...map.listData }\r\n\r\n                response.data.ComboComponnet\r\n                    && response.data.ComboComponnet\r\n                        .map(x => {\r\n\r\n                            const data = constructjsonOptionList(response.data[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, map.userInfo.slanguagetypecode, x).get(\"OptionList\");\r\n\r\n                            selectedRecordFilter[x.label] = undefined\r\n                            // if (data.length !== 0) {\r\n                            //     selectedRecordFilter[x.label] = { ...data.filter(y => y.value === response.data[\"Selected\" + x.label][x.valuemember])[0] }\r\n                            // }else{\r\n                            //     selectedRecordFilter[x.label]=\r\n                            // }\r\n                            listData[x.label] = data\r\n                        })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: selectedRecordFilter,\r\n                        listData: listData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeConfigFilterSubmit(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeConfigurationFilterSubmit\", { ...map })\r\n            .then(response => {\r\n                let masterData = { ...map.masterData, ...response.data }\r\n\r\n                Object.keys(map.selectedRecordFilter).map(x => {\r\n\r\n                    if (x === \"nformcode\") {\r\n                        masterData = { ...masterData, SelecetedScreen: { ...map.selectedRecordFilter[x].item } }\r\n                    } else if (x === \"ncontrolcode\") {\r\n                        masterData = { ...masterData, SelecetedControl: { ...map.selectedRecordFilter[x].item } }\r\n                    } else {\r\n                        if (map.selectedRecordFilter[x])\r\n                            masterData = { ...masterData, [\"Selected\" + x]: { ...map.selectedRecordFilter[x].item.jsondata } }\r\n                    }\r\n\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecordFilter: { ...map.selectedRecordFilter }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function parentChildComboLoadForBarcode(columnList, comboData, selectedRecord,\r\n    childColumnList, ParentComboValues,\r\n    languagetypeCode, userinfo) {\r\n    let comboValues = {}\r\n    if (columnList.length > 0) {\r\n        columnList.map((x, index) => {\r\n            if (x.inputtype === 'combo') {\r\n                if (comboData[x.label] && comboData[x.label].length > 0) {\r\n                    selectedRecord[x.label] = undefined;\r\n                    if (comboData[x.label].length > 0) {\r\n                        if (comboData[x.label][0].label === undefined) {\r\n                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n                            comboData[x.label] = optionList.get(\"OptionList\");\r\n\r\n                        }\r\n                    } else {\r\n                        comboData[x.label] = []\r\n                    }\r\n                    comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n                        languagetypeCode, userinfo, selectedRecord[x.label])\r\n                } else {\r\n                    selectedRecord[x.label] = undefined\r\n\r\n                    comboValues = childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n                        languagetypeCode, userinfo, selectedRecord[x.label])\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        comboValues = {\r\n            \"comboData\": comboData,\r\n            \"selectedRecord\": selectedRecord\r\n        }\r\n    }\r\n\r\n    return comboValues;\r\n}\r\n\r\n\r\n\r\nexport function childComboLoadForBarcode(x, comboData, selectedRecord, childColumnList,\r\n    languagetypeCode, userinfo, ParentComboValues) {\r\n    if (selectedRecord[x.label] !== undefined) {\r\n        if (x.hasOwnProperty(\"child\")) {\r\n            x.child.map(y => {\r\n                const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n                if (index !== -1) {\r\n                    if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\r\n                        selectedRecord = {\r\n                            ...selectedRecord,\r\n                            [childColumnList[x.label][index].label]: {\r\n                                label: ParentComboValues.item.jsondata ?\r\n                                    ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] :\r\n                                    ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\r\n                                value: ParentComboValues.item.jsondata ?\r\n                                    ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] :\r\n                                    ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (comboData[y.label] && comboData[y.label].length > 0) {\r\n                        if (comboData[y.label][0].label === undefined) {\r\n                            const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y)\r\n                            comboData[y.label] = optionChildList.get(\"OptionList\");\r\n\r\n                            selectedRecord[y.label] = undefined\r\n\r\n                        } else {\r\n                            selectedRecord[y.label] = undefined\r\n                        }\r\n                    } else {\r\n                        selectedRecord[y.label] = undefined\r\n                        comboData[y.label] = []\r\n                        const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                        selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                        comboData = { ...comboData, ...newRecord1.comboData }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        if (x.hasOwnProperty(\"child\")) {\r\n            x.child.map(y => {\r\n                selectedRecord[y.label] = undefined\r\n                const index = childColumnList[x.label] && childColumnList[x.label].findIndex(z => z.label === y.label)\r\n                if (index !== undefined && index !== -1) {\r\n                    comboData[y.label] = undefined\r\n                    const newRecord1 = childComboLoadForBarcode(childColumnList[x.label][index], comboData, selectedRecord, childColumnList)\r\n                    selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                    comboData = { ...comboData, ...newRecord1.comboData }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const newRecord = {\r\n        \"comboData\": comboData,\r\n        \"selectedRecord\": selectedRecord\r\n    }\r\n    return newRecord;\r\n}\r\n\r\n\r\n\r\nexport function getOpenModalForBarcodeConfig(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getOpenModalForBarcodeConfig\", {\r\n            'nformcode': map.nformcode, 'ncontrolcode': map.ncontrolcode,\r\n            'nquerybuildertablecode': map.nquerybuildertablecode,\r\n            'userinfo': map.userInfo, nbarcodetemplatecode: map.nbarcodetemplatecode,\r\n            lastLevelCode: map.lastLevelCode\r\n        })\r\n            .then(response => {\r\n\r\n                const barcodeList = constructOptionList(response.data.Barcode || [], 'nbarcode', 'sbarcodename').get('OptionList');\r\n                // if (map.nsqlqueryneed) {\r\n\r\n                //     const masterData = { ...map.masterData, Barcode: barcodeList, BarcodeParameter: [] }\r\n\r\n                //     map={...map,masterData, ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode}\r\n\r\n                //     dispatch(getSqlColumns(map))\r\n\r\n                // } else {\r\n\r\n                let masterData = {}\r\n                if (map.nfiltersqlqueryneed) {\r\n                    const SqlQuery = constructOptionList(response.data.SqlQuery || [], 'nsqlquerycode', 'ssqlqueryname').get('OptionList');\r\n                    masterData = { ...map.masterData, Barcode: barcodeList, SqlQuery: SqlQuery, BarcodeParameter: [] }\r\n                } else {\r\n                    const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n                    masterData = { ...map.masterData, Barcode: barcodeList, MappingFileds: mappingList, BarcodeParameter: [] }\r\n                }\r\n\r\n                if (map.nsqlqueryneed) {\r\n\r\n                    const mappingList = constructOptionList(response.data.SqlQueryParamMappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n                    if (map.nfiltersqlqueryneed === false) {\r\n\r\n                        // const SqlQueryParam = constructOptionList(response.data.SqlQueryParam || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n                        const SqlQueryParam = response.data.SqlQueryParam ||[] //.map(x => { return { \"label\": x, \"value\": x } }) || []\r\n\r\n                        masterData = { ...map.masterData,...masterData, SqlQueryParam: SqlQueryParam, SqlQueryParamMappingFileds: mappingList }\r\n\r\n                    } else masterData = { ...map.masterData,...masterData, SqlQueryParam: [], SqlQueryParamMappingFileds: mappingList }\r\n                } else masterData = { ...map.masterData,...masterData, SqlQueryParam: [], SqlQueryParamMappingFileds: [] }\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal: true, masterData,\r\n                        operation: \"create\",\r\n                        ndesigntemplatemappingcode: response.data.DesignTempateMapping.ndesigntemplatemappingcode,\r\n                        selectedRecord: {},\r\n                        screenName: map.screenName\r\n                    }\r\n                })\r\n                //  }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getSqlColumns(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/createsqltable\", {\r\n            nsqlquerycode: map.nsqlquerycode\r\n            , 'userinfo': map.userInfo\r\n        }).then(response => {\r\n            const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n            const masterData = { ...map.masterData, MappingFileds: mappingList }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false, openModal: true, masterData,\r\n                    operation: \"create\", ndesigntemplatemappingcode: map.ndesigntemplatemappingcode, selectedRecord: {}\r\n                }\r\n            })\r\n\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeFileParameter(map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        let data = {}\r\n        if (map.nfiltersqlqueryneed) {\r\n            data = { nsqlquerycode: map.selectedRecord.nsqlquerycode.value }\r\n        }\r\n\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeFileParameter\", {\r\n            'nbarcode': map.selectedRecord.nbarcode.value, 'ssystemfilename': map.selectedRecord.nbarcode.item.ssystemfilename,\r\n            'userinfo': map.userinfo, nfiltersqlqueryneed: map.nfiltersqlqueryneed, ...data\r\n        })\r\n            .then(response => {\r\n                let masterData = { ...map.masterData, BarcodeParameter: response.data.Parameter }\r\n\r\n                const selectedRecord={...map.selectedRecord}\r\n\r\n                if (map.nfiltersqlqueryneed) {\r\n\r\n                    const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n                    const SqlQueryParam = response.data.SqlQueryParam ||[] //.map(x => { return { \"label\": x, \"value\": x } }) || []\r\n\r\n\r\n                    SqlQueryParam.map(x => { selectedRecord[x]=\"\" }) \r\n\r\n                    masterData = { ...masterData, MappingFileds: mappingList, SqlQueryParam: SqlQueryParam }\r\n\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, masterData, selectedRecord: map.selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getEditBarcodeConfigurationComboService(addParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getEditBarcodeConfigurationModal\", {\r\n            nbarcodeconfigurationcode: addParam.nbarcodeconfigurationcode\r\n            , 'userinfo': addParam.userinfo\r\n        }).then(response => {\r\n            let selectedRecord = {};\r\n\r\n            const barcodeConfiguration = response.data.SelectedBarcodeConfig\r\n\r\n            selectedRecord['nbarcode'] = { label: barcodeConfiguration.sbarcodename, value: barcodeConfiguration.nbarcode, item: { ssystemfilename: barcodeConfiguration.ssystemfilename } }\r\n\r\n            const mappingList = constructOptionList(response.data.MappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n            const BarcodeParameter = []\r\n\r\n            if (barcodeConfiguration.jsondata.parameterMapping) {\r\n                selectedRecord['columnname'] = barcodeConfiguration.jsondata.parameterMapping\r\n\r\n                Object.keys(barcodeConfiguration.jsondata.parameterMapping\r\n                ).map(x => {\r\n                    BarcodeParameter.push(x)\r\n                    selectedRecord[x] = { ...mappingList.filter(y => y.value === barcodeConfiguration.jsondata.parameterMapping[x])[0] }\r\n                })\r\n\r\n            }\r\n\r\n            let SqlQuery = []\r\n            if (barcodeConfiguration.jsondatabt.nfiltersqlqueryneed) {\r\n                selectedRecord['nsqlquerycode'] = { label: barcodeConfiguration.ssqlqueryname, value: barcodeConfiguration.nfiltersqlquerycode, item: {} }\r\n                SqlQuery = constructOptionList(response.data.SqlQuery || [], 'nsqlquerycode', 'ssqlqueryname').get('OptionList');\r\n            }\r\n\r\n\r\n            let SqlQueryParamMappingFileds = []\r\n            let SqlQueryParam = []\r\n\r\n            if (barcodeConfiguration.jsondatabt.nsqlqueryneed) {\r\n\r\n                SqlQueryParamMappingFileds = constructOptionList(response.data.SqlQueryParamMappingFileds || [], 'columnname', 'columnname').get('OptionList');\r\n\r\n                if (barcodeConfiguration.jsondatabt.nfiltersqlqueryneed === false) {\r\n\r\n                    SqlQueryParam = response.data.SqlQueryParam ||[] //.map(x => { return { \"label\": x, \"value\": x } }) || []\r\n                   \r\n                    SqlQueryParam.map(x => { \r\n\r\n                        if( SqlQueryParamMappingFileds.filter(y=>y.value === barcodeConfiguration.jsondata[\"SqlQueryParamMapping\"][x]).length>0){\r\n\r\n                            selectedRecord[x]=SqlQueryParamMappingFileds.filter(y=>y.value === barcodeConfiguration.jsondata[\"SqlQueryParamMapping\"][x])[0]\r\n                        }\r\n\r\n                     }) \r\n                  \r\n                }\r\n            }\r\n\r\n            const masterData = { ...addParam.masterData, Barcode: [], MappingFileds: mappingList, BarcodeParameter, SqlQuery: SqlQuery, SqlQueryParamMappingFileds, SqlQueryParam }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    ncontrolcode: addParam.controlId,\r\n                    openModal: true,\r\n                    operation: 'update',\r\n                    masterData,\r\n                    selectedRecord,\r\n                    ndesigntemplatemappingcode: response.data.ndesigntemplatemappingcode,\r\n\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getBarcodeConfigurationDetail(barcodeConfiguration, userinfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodeconfiguration/getBarcodeConfiguration\", {\r\n            nbarcodeconfigurationcode: barcodeConfiguration.nbarcodeconfigurationcode\r\n            , 'userinfo': userinfo\r\n        }).then(response => {\r\n            masterData = { ...masterData, ...response.data }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    masterData,\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}