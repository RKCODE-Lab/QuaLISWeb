{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\Material.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData, Lims_JSON_stringify } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\nimport { callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment, initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload, getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component'; // import ReactTooltip from 'react-tooltip';\n\nimport MaterialFilter from './MaterialFilter';\nimport MaterialSectionTab from './MaterialSectionTab';\nimport AddMaterialSection from './AddMaterialSection';\nimport { Affix } from 'rsuite';\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\nimport AddMaterialFile from './AddMaterialFile';\nimport { ReactComponent as Safety } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/safety.svg\";\nimport { ReactComponent as Property } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/managed-hosting.svg\";\nimport { ProductList } from '../product/product.styled';\nimport PortalModal from '../../PortalModal';\nimport ModalShow from '../../components/ModalShow';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport DynamicSlideoutMaterial from './DynamicSlideoutMaterial';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Material extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.openModal = (operation, loginProps, selectedCombo, addId, masterData, selectedRecord) => {\n      if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\n        this.props.getAddMaterialPopup(operation, loginProps, selectedCombo, addId, masterData, selectedRecord);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.dynamicmandatoryFeilds = () => {\n      let mandatoryFeildsMaterial = [];\n      let slanguagetypecode = this.props.Login.userInfo.slanguagetypecode;\n      this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.mandatory) {\n              if (component.inputtype === 'combo') {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.displayname[slanguagetypecode],\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_SELECT\",\n                  \"controlType\": \"selectbox\"\n                });\n              } else {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.displayname[slanguagetypecode],\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_ENTER\",\n                  \"controlType\": \"selectbox\"\n                });\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.mandatory) {\n                if (componentrow.inputtype === 'combo') {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.displayname[slanguagetypecode],\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_SELECT\",\n                    \"controlType\": \"selectbox\"\n                  });\n                } else {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.displayname[slanguagetypecode],\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_ENTER\",\n                    \"controlType\": \"selectbox\"\n                  });\n                }\n              }\n            });\n          });\n        });\n      });\n\n      if (this.props.Login.selectedRecord['Expiry Validations']) {\n        if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_EXPIRYPOLICY\",\n            \"dataField\": \"Expiry Policy Days\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_EXPIRYPOLICYPERIOD\",\n            \"dataField\": \"Expiry Policy Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      }\n\n      if (this.props.Login.selectedRecord['Open Expiry Need']) {\n        if (this.props.Login.selectedRecord['Open Expiry Need'] === 3) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_OPENEXIPIRY\",\n            \"dataField\": \"Open Expiry\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_OPENEXIPIRYPERIOD\",\n            \"dataField\": \"Open Expiry Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      }\n\n      if (this.props.Login.selectedRecord['Next Validation Need']) {\n        if (this.props.Login.selectedRecord['Next Validation Need'] === 3) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_NEXTVALIDATION\",\n            \"dataField\": \"Next Validation\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"textbox\"\n          });\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_NEXTVALIDATIONPERIOD\",\n            \"dataField\": \"Next Validation Period\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      } // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\n\n\n      if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\n        if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"IDS_SECTION\",\n            \"dataField\": \"Section\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"idsName\": \"IDS_REORDERLEVEL\",\n            \"dataField\": \"Reorder Level\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          });\n        } else {\n          mandatoryFeildsMaterial.map((temp, i) => {\n            if (temp.dataField === 'Section' || temp.dataField === 'Reorder Level') {\n              delete mandatoryFeildsMaterial[i];\n            }\n          });\n        }\n      }\n\n      return mandatoryFeildsMaterial;\n    };\n\n    this.accordianDesign = () => {\n      let selectedmasterlistmain = [];\n      this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined && selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata);\n      let designaccordian = [];\n      this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.inputtype === 'combo') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label]['label'] : \"-\"))));\n              }\n            } else if (component.inputtype === 'toggle') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] && selectedmasterlistmain[0][component.label] === transactionStatus.YES ? 'Yes' : 'No'))));\n              }\n            } else {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"))));\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.inputtype === 'combo') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"))));\n                }\n              } else if (componentrow.inputtype === 'toggle') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] && selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ? 'Yes' : 'No'))));\n                }\n              } else {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 696,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label] : \"-\"))));\n                }\n              }\n            });\n          });\n        });\n      });\n      return designaccordian;\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n      isSelectedRecordChange = true;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const tabScreen = tabProps.screenName;\n      let masterData = this.props.Login.masterData;\n      masterData['tabScreen'] = tabScreen;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveMaterialFile = () => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let testFileArray = [];\n      let nmaterialconfigcode;\n      let testFile = {\n        nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n        nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      testFile['sdefaultstatus'] = {};\n      testFile['sdefaultstatus'] = testFile['ndefaultstatus'] === 3 ? 'Yes' : 'No';\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, testFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n            tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            testFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          testFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          testFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\n          testFile[\"nlinkcode\"] = transactionStatus.NA;\n          testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          testFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n          testFileArray.push(testFile);\n        }\n      } else {\n        testFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\n        testFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\n        testFile[\"slinkname\"] = selectedRecord['nlinkcode'].label && selectedRecord['nlinkcode'].label;\n        testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        testFile[\"ssystemfilename\"] = \"\";\n        testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n        testFile[\"nfilesize\"] = 0;\n        testFileArray.push(testFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]).replaceAll('\\\\n', '#r#'));\n      let inputParam;\n\n      if (this.props.Login.operation === 'create') {\n        inputParam = {\n          inputData: {\n            \"userinfo\": { ...this.props.Login.userInfo,\n              sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n              smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n              //ALPD-1628(while saving the image and sign,audit trail is not captured the respective language)\n              slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n            }\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"create\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\",\n          searchRef: this.searchRef,\n          isChild: true\n        };\n      } else {\n        let postParam = {\n          inputListName: \"MaterialMsdsAttachment\",\n          selectedObject: \"SelectedMaterialMsdsAttachment\",\n          primaryKeyField: \"nmaterialfilecode\"\n        };\n        inputParam = {\n          inputData: {\n            \"userinfo\": { ...this.props.Login.userInfo,\n              sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n              smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n              slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n            }\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\",\n          searchRef: this.searchRef,\n          postParam: postParam,\n          isChild: true\n        };\n      }\n\n      return inputParam;\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      {\n        // let dataresultarr1 = []\n        // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\n        // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\n        //     temp['jsondata'].dcreateddate =\n        //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\n        // })\n        // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\n        // let dataresultarr = []\n        // this.props.Login.masterData[\"MaterialSection\"] &&\n        //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\n        //         return dataresultarr.push(temp.jsondata)\n        //     })\n        // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\n        this.props.Login.masterData.ismaterialSectionneed === 3 && tabMap.set(\"IDS_MATERIALSECTION\", /*#__PURE__*/React.createElement(MaterialSectionTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          dataResult: process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'), this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          },\n          dataStateChange: event => this.setState({\n            sectionDataState: event.dataState\n          }) //data={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending',\n          //'nmaterialsectioncode'))}\n          ,\n          data: this.props.Login.masterData[\"MaterialSection\"],\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          getTestDetails: this.props.getTestDetails,\n          getAddMaterialSectionPopup: this.props.getAddMaterialSectionPopup,\n          addParameter: this.addMaterialSection,\n          deleteRecord: this.deleteRecordmain,\n          fetchRecord: this.props.getMaterialSectionEdit,\n          selectedRecord: this.props.Login.selectedRecord,\n          selectedId: this.props.Login.selectedId,\n          screenName: \"IDS_MATERIALSECTION\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 21\n          }\n        }));\n        tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\", /*#__PURE__*/React.createElement(MaterialMsdsAttachmentTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          userInfo: this.props.Login.userInfo,\n          deleteRecord: this.deleteRecordmain,\n          MaterialMsdsAttachment: sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || [],\n          addMaterialFile: param => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial),\n          viewMaterialFile: this.viewMaterialFile,\n          screenName: \"IDS_MATERIALMSDSATTACHMENT\",\n          settings: this.props.settings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 17\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.deleteRecordmain = deleteParam => {\n      const methodUrl = deleteParam.methodUrl;\n      const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) : JSON.stringify(deleteParam.selectedRecord);\n      let dataState = undefined;\n\n      if (this.props.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      } else if (this.props.screenName === \"IDS_METHOD\") {\n        dataState = this.state.methodDataState;\n      } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\n        dataState = this.state.instrumentCatDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n          ncontrolCode: deleteParam.ncontrolCode,\n          [methodUrl.toLowerCase()]: selected,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: deleteParam.operation,\n        ncontrolCode: deleteParam.ncontrolCode,\n        methodUrl: methodUrl,\n        screenName: \"IDS_MATERIAL\",\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: false,\n            openChildModal: true,\n            screenName: \"IDS_MATERIAL\",\n            operation: deleteParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.addMaterialSection = param => {\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let ncontrolCode = this.props.Login.ncontrolCode;\n      let openModal = this.props.Login.openModal;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      isneedcombomulti = false;\n      showMaterialSection = true;\n      openModal = true;\n      ncontrolCode = param;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showMaterialSection,\n          isneedcombomulti,\n          openModal\n        }\n      };\n      this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\n        this.props.getMaterialByTypeCode(this.state.selectedcombo, this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.validateEsign = () => {\n      let modal = \"openModal\";\n\n      if (this.props.Login.operation === \"delete\" && (this.props.Login.screenData.inputParam.methodUrl === \"MaterialSection\" || this.props.Login.screenData.inputParam.methodUrl === \"MaterialMsdsAttachment\")) {\n        modal = \"openChildModal\";\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, modal);\n    };\n\n    this.viewMaterialFile = filedata => {\n      const inputParam = {\n        inputData: {\n          nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n          materialmsdsattachment: JSON.stringify(filedata),\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: \"view\",\n        methodUrl: \"AttachedMaterialMsdsAttachment\",\n        screenname: \"IDS_MATERIALMSDSATTACHMENT\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        showMaterialSection = false;\n        isneedcombomulti = false;\n        showSectionWhileEdit = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          showMaterialSection,\n          showMaterialSection,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        if (fieldName === \"nmaterialtypecode\") {\n          const selectedcombo = this.state.selectedcombo || {};\n          selectedcombo[fieldName] = comboData;\n          this.searchRef.current.value = \"\";\n          this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\n        } else if (fieldName === \"nmaterialcatcode\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n        } else if (fieldName === \"nmaterialsectioncode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nmaterialsectioncode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nlinkcode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nlinkcode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName.label === \"IDS_STORAGECONDITION\") {\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === \"value\") {\n          const comboitem = this.state.comboitem || {};\n          comboitem[fieldName] = comboData;\n          this.setState({\n            comboitem\n          });\n        }\n      }\n    };\n\n    this.onComboChangedynamic = (comboData, control) => {\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (comboData === null && comboData === undefined && control.valuemember && control.nquerybuildertablecode) {\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          pkey: control.valuemember,\n          nquerybuildertablecode: control.nquerybuildertablecode,\n          \"source\": control.source\n        };\n      }\n\n      if (control.inputtype === 'date') {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[`tz${control.label}`] = comboData;\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (control.label === 'Material Category') {\n          let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed;\n          let showSectionWhileEdit = this.state.showSectionWhileEdit;\n          ismaterialSectionneed = comboData.item.jsondata.needsectionwise; // const updateInfo = {\n          //     typeName: DEFAULT_RETURN,\n          //     data: {\n          //         ismaterialSectionneed\n          //     }\n          // }\n          // ALPD-956 begin\n\n          this.state.selectedRecord['Section'] = ismaterialSectionneed == 4 ? this.state.selectedRecord['Section'] = undefined : this.state.selectedRecord['Section']; // ALPD-956 end\n\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData;\n          isSelectedRecordChange = true;\n          showSectionWhileEdit = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange,\n            ismaterialSectionneed,\n            showSectionWhileEdit\n          }); //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\n        } else {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData && (comboData === null || comboData === undefined) ? undefined : comboData;\n          isSelectedRecordChange = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange\n          });\n        }\n      }\n    };\n\n    this.onInputOnChangeDynamic = (event, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === 'timeonly') {\n          selectedRecord['dateonly'] = false;\n        }\n\n        if (event.target.name === 'dateonly') {\n          selectedRecord['timeonly'] = false;\n        }\n\n        const value = selectedRecord[event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index == 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                //  const  indexcomma= value.indexOf(\",\")\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedRecord[event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = radiotext;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      isSelectedRecordChange = true;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onInputOnChange = (event, optional2) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\n        if (event.target.type === 'checkbox') {\n          if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n          if (event.target.name === 'Expiry') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n\n              if (selectedRecord['Need Expiry']) {\n                selectedRecord['Need Expiry'] = 4;\n              }\n            }\n          }\n\n          if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n            }\n          }\n\n          if (event.target.name === 'Open Expiry Need') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Open Expiry']) {\n                delete selectedRecord['Open Expiry'];\n              }\n\n              if (selectedRecord['tzOpen Expiry']) {\n                delete selectedRecord['tzOpen Expiry'];\n              }\n\n              if (selectedRecord['Open Expiry Period']) {\n                delete selectedRecord['Open Expiry Period'];\n              }\n            } else {\n              selectedRecord['Open Expiry Period'] = this.props.Login.templateData.comboData['Open Expiry Period'].filter(x => x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0];\n            }\n          }\n\n          if (event.target.name === 'Next Validation Need') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Next Validation']) {\n                delete selectedRecord['Next Validation'];\n              }\n\n              if (selectedRecord['tzNext Validation']) {\n                delete selectedRecord['tzNext Validation'];\n              }\n\n              if (selectedRecord['Next Validation Period']) {\n                delete selectedRecord['Next Validation Period'];\n              }\n            } else {\n              selectedRecord['Next Validation Period'] = this.props.Login.templateData.comboData['Next Validation Period'].filter(x => x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0];\n            }\n          }\n\n          if (event.target.name === 'Quarantine') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Next Validation Need']) {\n                selectedRecord['Next Validation Need'] = 4;\n              }\n\n              if (selectedRecord['Next Validation']) {\n                delete selectedRecord['Next Validation'];\n              }\n\n              if (selectedRecord['Next Validation Period']) {\n                delete selectedRecord['Next Validation Period'];\n              }\n            }\n          }\n        } else if (event.target.type === 'radio') {\n          if (optional2 !== 'Expiry policy') {\n            if (selectedRecord['Expiry Policy Days']) {\n              delete selectedRecord['Expiry Policy Days'];\n            }\n\n            if (selectedRecord['tzExpiry Policy Days']) {\n              delete selectedRecord['tzExpiry Policy Days'];\n            }\n\n            if (selectedRecord['Expiry Policy Period']) {\n              delete selectedRecord['Expiry Policy Period'];\n            }\n          } else {\n            selectedRecord['Expiry Policy Period'] = this.props.Login.templateData.comboData['Expiry Policy Period'].filter(x => x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0];\n          }\n\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else if (event.target.type === 'radio') {\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      // console.log(\"selected:\", this.state.selectedRecord);\n      let inputData = [];\n      let inputParam = {};\n      let varmain = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n      inputData[\"DateList\"] = [];\n      let nmaterialconfigcode;\n      nmaterialconfigcode = this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode;\n\n      if (this.props.Login.screenname === \"IDS_MATERIAL\") {\n        // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n        //     varmain = \"Standard Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n        //     varmain = \"Volumetric Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n        //     varmain = \"Material Name\"\n        // }\n        inputData[\"Material\"] = {};\n        inputData[\"jsonuidata\"] = {};\n        const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata;\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                let isValid = false;\n\n                if (component.label === 'Expiry Policy Period') {\n                  if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\n                    isValid = true;\n                  }\n                } else if (component.label === 'Open Expiry Period') {\n                  if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\n                    isValid = true;\n                  }\n                } else if (component.label === 'Next Validation Period') {\n                  if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\n                    isValid = true;\n                  }\n                } else {\n                  isValid = true;\n                }\n\n                if (isValid) {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"],\n                    pkey: this.state.selectedRecord[component.label].item.pkey,\n                    nquerybuildertablecode: this.state.selectedRecord[component.label].item.nquerybuildertablecode,\n                    item: this.state.selectedRecord[component.label].item\n                  } : \"\";\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label][\"label\"] : \"\";\n                }\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                }\n\n                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo) : \"\";\n              } else if (component.inputtype === 'toggle') {\n                // if (component.label === 'Quarantine') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\n                //     this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Need Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Open Expiry Need') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Reusable') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                if (this.state.selectedRecord[component.label] === \"\") {\n                  inputData[\"Material\"][component.label] = 4;\n                } else if (this.state.selectedRecord[component.label] === undefined) {\n                  inputData[\"Material\"][component.label] = 4;\n                } else {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label];\n                }\n\n                if (this.state.selectedRecord[component.label] !== \"\") {\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ? this.props.intl.formatMessage({\n                    id: \"IDS_YES\"\n                  }) : this.props.intl.formatMessage({\n                    id: \"IDS_NO\"\n                  });\n                }\n              } else {\n                if (component.label !== undefined) {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"; // }\n                  //    if (this.state.selectedRecord[component.label] !== undefined) {\n\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\";\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  let isValid = false;\n\n                  if (componentrow.label === 'Expiry Policy Period') {\n                    if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\n                      isValid = true;\n                    }\n                  } else if (componentrow.label === 'Open Expiry Period') {\n                    if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\n                      isValid = true;\n                    }\n                  } else if (componentrow.label === 'Next Validation Period') {\n                    if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\n                      isValid = true;\n                    }\n                  } else {\n                    isValid = true;\n                  }\n\n                  if (isValid) {\n                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"],\n                      pkey: this.state.selectedRecord[componentrow.label].item.pkey,\n                      nquerybuildertablecode: this.state.selectedRecord[componentrow.label].item.nquerybuildertablecode,\n                      item: this.state.selectedRecord[componentrow.label].item\n                    } : \"\";\n                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label][\"label\"] : \"\";\n                  }\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                  }\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo) : \"\";\n                } else if (componentrow.inputtype === 'toggle') {\n                  if (this.state.selectedRecord[componentrow.label] === \"\") {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else if (this.state.selectedRecord[componentrow.label] === undefined) {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else {\n                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n\n                  if (this.state.selectedRecord[componentrow.label] !== \"\") {\n                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ? 'Yes' : 'No';\n                  }\n                } else {\n                  //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\n                  inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                  // if (this.state.selectedRecord[componentrow.label] !== undefined) {\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                }\n              });\n            });\n          });\n        }); // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n        //     this.state.selectedRecord['Standard Name'] :\n        //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n        //         this.state.selectedRecord['Volumetric Name'] :\n        //         this.state.selectedRecord['Material Name']\n\n        inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name'];\n        inputData[\"jsonuidata\"] = { ...inputData[\"jsonuidata\"],\n          \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\n          \"nmaterialconfigcode\": nmaterialconfigcode\n        };\n        inputData[\"Material\"] = { ...inputData[\"Material\"],\n          \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\n          \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n        };\n        inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"]);\n        inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]);\n        inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine'];\n        inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode;\n        inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value;\n        inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise;\n\n        if (this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\n          // inputData[\"materialSectionJson\"] = [{\n          //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\n          //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\n          //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\n          //     //,\n          //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n          // }];\n          inputData[\"materialSectionJson\"] = {\n            \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\n            \"nsectioncode\": this.state.selectedRecord[\"Section\"] && this.state.selectedRecord[\"Section\"].value,\n            'nmaterialconfigcode': nmaterialconfigcode\n          };\n          inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"]);\n        }\n\n        const masterData = this.props.Login.masterData; // console.log(\"data:\", inputData);\n\n        if (this.props.Login.operation === 'create') {\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        } else {\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam: {\n              selectedObject: \"SelectedMaterial\",\n              primaryKeyField: \"nmaterialcode\",\n              inputListName: \"Material\",\n              selectedComboName: \"selectedMaterialCat\",\n              selectedCombo: this.state.selectedRecord['Material Category'],\n              selectedComboId: \"nmaterialcatcode\"\n            },\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState,\n            filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord['Material Category'].value === this.props.Login.masterData.SelectedMaterialCategoryFilter.nmaterialcatcode ? false : true : false\n          }; // if(this.state.selectedRecord['Material Category'].value!==this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode){\n          //     masterData={...masterData,searchedData}\n          // }\n        } // if (this.props.Login.screenName === \"IDS_MATERIAL\") {\n        //     // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        //     //     const updateInfo = {\n        //     //         typeName: DEFAULT_RETURN,\n        //     //         data: {\n        //     //             loadEsign: true, screenData: { inputParam, masterData }, saveType\n        //     //         }\n        //     //     }\n        //     //     this.props.updateStore(updateInfo);\n        //     // }\n        //     // else {\n        //     //     this.props.crudMaster(inputParam, masterData, \"openModal\");\n        //     // }\n        // } else {\n\n\n        if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\n          this.ConfirmComponent();\n        } else {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          } // }\n\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\n        const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata;\n        const dynamicobj = {};\n        let jsonuidata = {};\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              //if (component.inputtype === 'combo') {\n              // if (this.state.selectedRecord[component.label]) {\n              //     dynamicobj[component.label] = {\n              //         label: this.state.selectedRecord[component.label][\"label\"],\n              //         value: this.state.selectedRecord[component.label][\"value\"]\n              //     }\n              // }\n              //     jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n              //     component.label ? 'Yes' : 'No' :  'No' \n              // }\n              // else {\n              if (component.inputtype === 'checkbox') {\n                //  if (this.state.selectedRecord[component.label]) {\n                dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                jsonuidata[component.label] = this.state.selectedRecord[component.label] ? // component.label ? 'Yes' : 'No' : 'No'\n                component.label ? this.props.intl.formatMessage({\n                  id: \"IDS_YES\"\n                }) : this.props.intl.formatMessage({\n                  id: \"IDS_NO\"\n                }) : this.props.intl.formatMessage({\n                  id: \"IDS_NO\"\n                }); //   }\n                // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n                // component.label ? 'Yes' : 'No' :  'No' \n              } else {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                  jsonuidata[component.label] = this.state.selectedRecord[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                // if (componentrow.inputtype === 'combo') {\n                //     // if (this.state.selectedRecord[componentrow.label]) {\n                //     //     dynamicobj[componentrow.label] =\n                //     //     {\n                //     //         label: this.state.selectedRecord[componentrow.label][\"label\"],\n                //     //         value: this.state.selectedRecord[componentrow.label][\"value\"]\n                //     //     }\n                //     // }\n                //     jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //         componentrow.label ? 'Yes' : 'No' :  'No' \n                // }\n                // else {\n                //     if (this.state.selectedRecord[componentrow.label]) {\n                //         dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\n                //         jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //          componentrow.label ? 'Yes' : 'No' :  'No' \n                //     }\n                //     //jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\n                //     //componentrow.label ? 'Yes' : 'No' :  'No' \n                // }\n                if (componentrow.inputtype === 'checkbox') {\n                  //  if (this.state.selectedRecord[componentrow.label]) {\n                  dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label] ? componentrow.label ? 'Yes' : 'No' : 'No'; //  }\n                  // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\n                  // component.label ? 'Yes' : 'No' :  'No' \n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                    jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\n          inputData[\"nmaterialsafetyinstructionscode\"] = this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode;\n        } else {\n          inputData[\"nmaterialsafetyinstructionscode\"] = 0;\n        }\n\n        inputData[\"jsonuidata\"] = JSON.stringify(jsonuidata);\n        inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 1;\n        inputData['nmaterialconfigcode'] = nmaterialconfigcode;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n        let masterData = this.props.Login.masterData;\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\n        inputParam = this.onSaveMaterialFile();\n        let masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\n        let masterData = this.props.Login.masterData;\n        const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata;\n        const dynamicobj = {};\n        inputData[\"DateList\"] = [];\n        inputData[\"jsonuidata\"] = {};\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"]\n                  };\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label][\"label\"];\n                }\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                  inputData[\"jsonuidata\"][`tz${component.label}`] = dynamicobj[`tz${component.label}`].label;\n                  inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label];\n                }\n              } else {\n                if (this.state.selectedRecord.hasOwnProperty(component.label)) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                  inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"]\n                    };\n                    inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label].label;\n                  }\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                    inputData[\"jsonuidata\"][`tz${componentrow.label}`] = dynamicobj[`tz${componentrow.label}`].label;\n                    inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label];\n                  }\n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                    inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        /* ALPD-925 Begin */\n\n        inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode;\n        /* ALPD-925 End */\n\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialProperties.length > 0) {\n          inputData[\"nmaterialpropertycode\"] = this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode;\n        } else {\n          inputData[\"nmaterialpropertycode\"] = 0;\n        } //inputData[\"DateList\"] = JSON.stringify(DateList) \n\n\n        inputData[\"jsonuidata\"] = { ...inputData[\"jsonuidata\"],\n          'nmaterialconfigcode': nmaterialconfigcode\n        };\n        inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]);\n        inputData[\"materialProperty\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 2;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        if (this.props.Login.operation !== \"update\") {\n          let showMaterialSection = this.props.Login.showMaterialSection;\n          let newarr = [];\n          let newarr1 = [];\n          let postParam = undefined;\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\n            newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              return {\n                \"ssectionname\": temp.label,\n                \"nsectioncode\": temp.value,\n                \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n                'nmaterialconfigcode': nmaterialconfigcode\n              };\n            });\n            newarr1[\"nsectioncode\"] = \"\"; // let nsectioncode;\n\n            this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              newarr1[\"nsectioncode\"] += temp.value + ',';\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1),\n              'nmaterialconfigcode': nmaterialconfigcode\n            };\n          } else {\n            newarr.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              'nmaterialconfigcode': nmaterialconfigcode\n            };\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr);\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr1);\n          inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            operation: \"create\",\n            showMaterialSection: showMaterialSection,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            postParam: postParam,\n            isChild: true\n          };\n        } else {\n          let newarrobj = [];\n          let postParam = {\n            inputListName: \"MaterialSection\",\n            selectedObject: \"SelectedMaterialSection\",\n            primaryKeyField: \"nmaterialsectioncode\"\n          };\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n          } else {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              'nmaterialconfigcode': nmaterialconfigcode\n            });\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj);\n          inputData[\"MaterialSection\"] = {\n            \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0\n          };\n          inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue;\n          inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            showMaterialSection: false,\n            operation: \"update\",\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            postParam: postParam,\n            isChild: true\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord; // let value = event.target.value;\n      // if (isNaN(value)) {\n      // if (parseInt(value) < 10) {\n      //  let x=value.toString().replace(/\\D/g,'')\n      // if (value === 0) {\n      //     delete selectedRecord[name]\n      //     selectedRecord[name]=''\n      // }\n      // else {\n\n      if (name === \"Open Expiry\" || name === \"Next Validation\") {\n        if (value === 0) {\n          selectedRecord[name] = \"\";\n        } else {\n          selectedRecord[name] = value;\n        }\n      } else {\n        selectedRecord[name] = value;\n      }\n\n      this.setState({\n        selectedRecord\n      }); //   }\n      // }\n      // }\n    };\n\n    this.ConfirmComponent = () => {\n      this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({\n        id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"\n      }), \"ok\", \"cancel\", () => this.copyAlertSave());\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n      this.setState({\n        sectionDataState: {\n          skip: 0,\n          take: 10\n        }\n      });\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialTypeFilter, this.props.Login.masterData.SelectedMaterialCategoryFilter, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      masterStatus: \"\",\n      sectionDataState: {\n        skip: 0,\n        take: 10\n      },\n      error: \"\",\n      selectedRecord: {},\n      filterCatList: [],\n      operation: \"\",\n      comboitem: undefined,\n      screenName: undefined,\n      selectedcombo: undefined,\n      isSelectedRecordChange: false,\n      showSectionWhileEdit: false,\n      selectedMaterialCat: undefined,\n      materialCatList: [],\n      userRoleControlRights: [],\n      ControlRights: undefined,\n      controlMap: new Map(),\n      dataResult: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      dataState: _dataState,\n      data: [],\n      splitChangeWidthPercentage: 30,\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    //  console.log('selected r :', this.props.Login.masterData)\n    const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\n    const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\") && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\n    const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\") && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\n    let masterlistmain = [];\n    this.props.Login.masterData.Material = this.props.Login.masterData.Material && sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\");\n    this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType && sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\");\n    this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain && sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\");\n    this.props.Login.masterData.searchedData = this.props.Login.masterData.searchedData && sortData(this.props.Login.masterData.searchedData, \"descending\", \"nmaterialcode\");\n\n    if (this.props.Login.masterData.SelectedMaterialCategory && this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\n      if (this.props.Login.masterData.SelectedMaterial) {\n        delete this.props.Login.masterData.SelectedMaterial['Section'];\n        delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\n      }\n    } // this.props.Login.masterData.Material &&\n    //     this.props.Login.masterData.Material.map((temp, i) => {\n    //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\n    //     })\n\n\n    let searchedDatalistmain = []; // if (this.props.Login.masterData.searchedData === undefined) {\n    //     searchedDatalistmain = undefined\n    // } else {\n    //     this.props.Login.masterData.searchedData &&\n    //         this.props.Login.masterData.searchedData.map((temp, i) => {\n    //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\n    //         })\n    // }\n\n    let searchFieldList = [];\n    let mandatoryFieldsMaterialFile = []; // if (this.props.Login.masterData.SelectedMaterialType) {\n    //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\n    //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n    //             searchFieldList = [\n    //                 \"Standard Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n    //             searchFieldList = [\n    //                 \"Volumetric Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n    //             searchFieldList = [\n    //                 \"Material Name\"\n    //             ]\n    //         }\n    //     }\n    // }\n\n    const filterParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      fetchUrl: \"material/getMaterialByID\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      // isjsondata: true,\n      searchFieldList: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']\n    };\n    this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && this.props.Login.selectedRecord && this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK ? mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"slinkfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_LINKNAME\",\n      \"dataField\": \"nlinkcode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }] : mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    const mandatoryFieldsMaterialSection = [{\n      \"mandatory\": false,\n      \"idsName\": \"IDS_MATERIALSECTION\",\n      \"dataField\": \"nmaterialsectioncode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Material\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo //  masterList={searchedDatalistmain || masterlistmain}\n      ,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Material,\n      getMasterDetail: master => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial,\n      primaryKeyField: \"nmaterialcode\" // mainField={this.props.Login.masterData.SelectedMaterialType ?\n      //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n      //         \"Standard Name\" :\n      //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n      //             \"Volumetric Name\" :\n      //             \"Material Name\" : \"\"}\n      // firstField={\"Reorder Level\"}\n      ,\n      mainField: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField'] // firstField={\n      //     this.props.Login.masterData.DesignMappedFeilds &&\n      //     JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] &&\n      //     JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\n      //     //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\n      // }\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      showFilterIcon: true,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(MaterialFilter, {\n          filterCatList: this.state.filterCatList || [],\n          materialCatList: this.state.materialCatList || [],\n          selectedRecord: this.state.selectedcombo || {} //\n          ,\n          selectedMaterialCat: this.state.selectedMaterialCat || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 45\n          }\n        })\n      }],\n      openModal: () => this.openModal(\"create\", this.props.Login, this.state.selectedcombo, addId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_QUARANTINE\"\n    }), \" :\"), /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn btn-outlined ${this.props.Login.masterData.SelectedMaterial['ntransactionstatus'] === transactionStatus.YES ? \"outline-success\" : \"outline-danger\"} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedMaterial['ntransactionstatus'] === transactionStatus.YES ? this.props.intl.formatMessage({\n      id: \"IDS_YES\"\n    }) : this.props.intl.formatMessage({\n      id: \"IDS_NO\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.getAddMaterialPopup(\"update\", this.props.Login, this.state.selectedcombo, editId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.addSafetyInstructions(this.props.Login.masterData, this.props.Login.userInfo, addParameterId, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Safety, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_MATERIALPROPERTY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.addMaterialProperty(this.props.Login.masterData, this.props.Login.userInfo, addMaterialProperty, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Property, {\n      className: \"custom_icons\",\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(SampleInfoView, {\n      data: this.props.Login.masterData.SelectedMaterial,\n      SingleItem: JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['MaterialViewFields'],\n      screenName: \"IDS_SAMPLEINFO\",\n      userInfo: this.props.Login.userInfo // ALPD-950\n      ,\n      size: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 57\n      }\n    })), this.props.Login.masterData && /*#__PURE__*/React.createElement(CustomTab, {\n      activeKey: this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT',\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 85\n      }\n    }))) : \"\")))))), (this.props.Login.openModal || this.props.Login.openChildModal) && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.props.Login.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' : this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenname,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() : this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : '' : '',\n      updateStore: this.props.updateStore,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ? this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? this.props.Login.showMaterialSection ? /*#__PURE__*/React.createElement(AddMaterialSection, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        MaterialSectionCombodata: this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection,\n        onNumericInputChange: this.onNumericInputChange,\n        onComboChange: this.onComboChange,\n        isDisabled: this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti,\n        ismaterialsectionEdit: this.props.Login.ismaterialsectionEdit,\n        comboData: this.props.Login.masterData.productCategoryList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        operation: this.props.Login.operation,\n        showSectionWhileEdit: this.state.showSectionWhileEdit,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        isBreadCrumbCategory: this.props.Login.operation === 'update' ? this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode === this.props.Login.selectedRecord['Material Category'].value ? true : false : false,\n        enableDisableNeedExpiry: this.props.Login.selectedRecord['Expiry'],\n        enableDisableOpenExpiry: this.props.Login.selectedRecord['Open Expiry Need'],\n        enableDisableNextValidation: this.props.Login.selectedRecord['Next Validation Need'],\n        enableDisableNextValidationNeed: this.props.Login.selectedRecord['Quarantine'],\n        enableDisableExpiryPolicy: this.props.Login.selectedRecord['Expiry Validations'],\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata,\n        onNumericInputChange: this.onNumericInputChange,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        timeZoneList: this.props.Login.timeZoneList,\n        handleDateChange: this.handleDateChange,\n        comboData: this.props.Login.templateData && this.props.Login.templateData.comboData,\n        onComboChange: this.onComboChangedynamic // ismaterialSectionneed={this.state.ismaterialSectionneed}\n        ,\n        screenname: this.props.Login.screenname,\n        ismaterialSectionneed: this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item && this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed,\n        checkSectionNeed: this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item && this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise === transactionStatus.YES && this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateSafetyInstructions && this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChangeDynamic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 45\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideoutMaterial, {\n        selectedRecord: this.props.Login.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateProperties && this.props.Login.masterData.selectedTemplateProperties[0].jsondata // userInfo={this.props.Login.userInfo}\n        ,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        timeZoneList: this.props.Login.timeZoneList && this.props.Login.timeZoneList,\n        onComboChange: this.onComboChangedynamic,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(AddMaterialFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropMaterialFile,\n        deleteAttachment: this.deleteAttachment,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        hideDefaultToggle: true,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_MATERIALMSDSATTACHMENT\"\n        }),\n        name: \"testfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = []; // if (Array.isArray(this.props.Login.masterData)) {\n\n    breadCrumbData.push({\n      \"label\": \"IDS_MATERIALTYPE\",\n      \"value\": this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\"\n    }, {\n      \"label\": \"IDS_MATERIALCAT\",\n      \"value\": this.props.Login.masterData.SelectedMaterialCategoryFilter ? this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname !== undefined ? this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname : \"NA\" : \"NA\"\n    }); //  }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let bool = false;\n    let {\n      selectedRecord,\n      selectedcombo,\n      comboitem,\n      filterData,\n      filterCatList,\n      selectedMaterialCat,\n      materialCatList,\n      ismaterialSectionneed,\n      showSectionWhileEdit\n    } = this.state;\n    const masterData = this.props.Login.masterData; // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\n    //     bool = true;\n    //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\n    // }\n    // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\n    //     bool = true;\n    //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      bool = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\n      bool = true;\n      selectedcombo = this.props.Login.selectedcombo;\n    }\n\n    if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\n      bool = true;\n      showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n    }\n\n    if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\n      bool = true;\n      comboitem = this.props.Login.comboitem;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        data: this.props.Login.masterData.ControlRights\n      });\n    }\n\n    if (this.props.Login.masterData.MaterialType !== undefined) {\n      if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\n        bool = true; // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\n        //     \"smaterialtypename\", undefined, undefined, undefined);\n        //     constructOptionList(options, optionId,\n        //         optionValue, sortField, sortOrder, alphabeticalSort,\n        //          defaultStatusFieldName) \n\n        const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType, \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined, undefined, undefined, undefined, true, this.props.Login.userInfo.slanguagetypecode);\n        filterCatList = materialTypeList.get(\"OptionList\"); //  console.log('masterData.MaterialType :', masterData.MaterialType)\n\n        selectedcombo = {\n          nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\n            \"value\": masterData.MaterialType[0].nmaterialtypecode,\n            \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\n      const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      materialCatList = MaterialCategoryMain.get(\"OptionList\");\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      filterData = this.generateBreadCrumData();\n\n      if (masterData.SelectedMaterialCategory !== previousProps.Login.masterData.SelectedMaterialCategory) {\n        const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n        materialCatList = MaterialCategoryMain.get(\"OptionList\");\n        selectedMaterialCat = {\n          nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\n            \"value\": masterData.SelectedMaterialCategory.nmaterialcatcode,\n            \"label\": masterData.SelectedMaterialCategory.smaterialcatname\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\n      if (this.props.Login.masterData.searchedData) {\n        if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\n          this.setState({\n            skip: 0\n          });\n        }\n      }\n    }\n\n    if (bool) {\n      this.setState({\n        selectedRecord,\n        comboitem,\n        filterData,\n        selectedcombo,\n        filterCatList,\n        selectedMaterialCat,\n        materialCatList,\n        isSelectedRecordChange: false,\n        showSectionWhileEdit //, \n        // ismaterialSectionneed \n        // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n        // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\n\n      });\n    } //Vishakh: I commented updateStore. Because this updateStore won't get any change in the flow.\n    //  Even the udpateStore is there or not, there is no change in the flow.\n    // if(this.props.Login.comboSet){\n    //     this.setState({ selectedMaterialCat: this.props.Login.selectedMaterialCat});\n    //     const updateInfo = {\n    //         typeName: DEFAULT_RETURN,\n    //         data: { comboSet: false }\n    //     }\n    //     this.props.updateStore(updateInfo);\n    // }\n    // else\n    // {\n    //     this.setState({\n    //     ismaterialSectionneed \n    //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // });\n    // }\n\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  handleClickDelete(masterData, ncontrolcode, modalName) {\n    const fieldArray = [];\n    let postParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      primaryKeyValue: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n      fetchUrl: \"material/getMaterialByID\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      }\n    };\n    modalName = 'openModal';\n    const inputParam = {\n      methodUrl: \"Material\",\n      classUrl: \"material\",\n      inputData: {\n        \"nmaterialconfigcode\": this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\n        \"material\": this.props.Login.masterData.SelectedMaterial,\n        \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\n        \"userinfo\": this.props.Login.userInfo,\n        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n      },\n      operation: \"delete\",\n      postParam,\n      displayName: \"Material\"\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          [modalName]: true,\n          operation: 'delete',\n          screenName: \"Material\",\n          id: \"material\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.crudMaster(inputParam, masterData, modalName);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  updateStore,\n  initialcombochangeget,\n  getAddMaterialPopup,\n  viewAttachment,\n  getMaterialReload,\n  crudMaster,\n  getMaterialDetails,\n  getMaterialEdit,\n  getMaterialByTypeCode,\n  addMaterialFile,\n  getAddMaterialSectionPopup,\n  getMaterialSectionEdit,\n  filterColumnData,\n  validateEsignCredential,\n  addSafetyInstructions,\n  addMaterialProperty\n})(injectIntl(Material));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/Material/Material.jsx"],"names":["React","Component","connect","FormattedMessage","injectIntl","Row","Col","Nav","Card","FormGroup","FormLabel","process","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","SlideOutModal","Esign","constructjsonOptionList","convertDateTimetoString","convertDateTimetoStringDBformat","rearrangeDateFormatDateOnly","formatInputDate","convertDateTimetoStringDBFormat","sortData","Lims_JSON_stringify","ListMaster","CustomTab","showEsign","getControlMap","constructOptionList","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","rearrangeDateFormat","callService","updateStore","crudMaster","filterColumnData","validateEsignCredential","viewAttachment","initialcombochangeget","addSafetyInstructions","getAddMaterialPopup","getMaterialDetails","addMaterialProperty","getMaterialReload","getMaterialEdit","getMaterialByTypeCode","getAddMaterialSectionPopup","getMaterialSectionEdit","addMaterialFile","DEFAULT_RETURN","transactionStatus","attachmentType","ContentPanel","ReadOnlyText","MediaLabel","ConfirmMessage","BreadcrumbComponent","MaterialFilter","MaterialSectionTab","AddMaterialSection","Affix","MaterialMsdsAttachmentTab","AddMaterialFile","ProductList","PortalModal","ModalShow","SampleInfoView","DynamicSlideoutMaterial","mapStateToProps","state","Login","Material","constructor","props","sidebarExpandCollapse","setState","sidebarview","paneSizeChange","d","splitChangeWidthPercentage","openModal","operation","loginProps","selectedCombo","addId","masterData","selectedRecord","selectedcombo","selectedMaterialCat","warn","intl","formatMessage","id","dynamicmandatoryFeilds","mandatoryFeildsMaterial","slanguagetypecode","userInfo","selectedTemplate","jsondata","map","row","children","column","component","mandatory","inputtype","push","displayname","label","hasOwnProperty","componentrow","undefined","item","needsectionwise","YES","temp","i","dataField","accordianDesign","selectedmasterlistmain","SelectedMaterial","designaccordian","length","handleDateChange","dateValue","dateName","isSelectedRecordChange","onTabChange","tabProps","tabScreen","screenName","updateInfo","typeName","data","onDropMaterialFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","event","file","onSaveMaterialFile","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","testFileArray","nmaterialconfigcode","testFile","nmaterialcode","nmaterialfilecode","nstatus","ACTIVE","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","forEach","index","tempData","Object","assign","splittedFileName","name","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sdescription","trim","NA","size","dcreateddate","append","nfilesize","slinkfilename","slinkdescription","nlinkcode","value","JSON","stringify","replaceAll","inputParam","inputData","sformname","smodulename","slanguagename","isFileupload","classUrl","methodUrl","searchRef","isChild","postParam","inputListName","selectedObject","primaryKeyField","tabDetail","tabMap","Map","ismaterialSectionneed","set","controlMap","userRoleControlRights","sectionDataState","skip","take","screenname","dataState","getTestDetails","addMaterialSection","deleteRecordmain","selectedId","MaterialMsdsAttachment","param","viewMaterialFile","settings","deleteParam","selected","methodDataState","instrumentCatDataState","ncontrolCode","toLowerCase","userinfo","nformcode","loadEsign","screenData","openChildModal","showMaterialSection","isneedcombomulti","ConfirmDelete","deleteId","confirmMessage","confirm","handleClickDelete","openFilter","showFilter","closeFilter","onFilterSubmit","current","materialCatList","handlePageChange","e","validateEsign","modal","sreason","nreasoncode","spredefinedreason","password","filedata","ndesigntemplatemappingcode","materialmsdsattachment","closeModal","showSectionWhileEdit","onComboChange","comboData","nmaterialtypecode","displaymember","comboName","comboitem","onComboChangedynamic","control","valuemember","nquerybuildertablecode","pkey","source","onInputOnChangeDynamic","radiotext","target","type","includes","indexOf","indexcomma","slice","onInputOnChange","optional2","checked","DEACTIVE","templateData","filter","x","onSaveClick","saveType","formRef","varmain","Layout","isValid","SelectedMaterialType","selectedComboName","selectedComboId","filtercombochange","searchedData","SelectedMaterialCategoryFilter","nmaterialcatcode","copyScreenRights","ConfirmComponent","selectedTemplateSafetyInstructions","dynamicobj","jsonuidata","MaterialSafetyInstructions","nmaterialsafetyinstructionscode","selectedTemplateProperties","MaterialProperties","nmaterialpropertycode","newarr","newarr1","nmaterialsectioncode","substring","newarrobj","nmaterialsectioncodeprimaryKeyValue","onNumericInputChange","copyAlertSave","reloadData","SelectedMaterialTypeFilter","parseInt","masterStatus","error","filterCatList","ControlRights","dataResult","createRef","getDerivedStateFromProps","render","has","get","ncontrolcode","editId","addParameterId","masterlistmain","MaterialType","MaterialCategoryMain","SelectedMaterialCategory","needSectionwise","searchedDatalistmain","searchFieldList","mandatoryFieldsMaterialFile","filterParam","fetchUrl","fecthInputObject","DesignMappedFeilds","parse","mandatoryFieldsMaterialSection","breadCrumbData","filterData","master","MaterialSection","ismaterialsectionEdit","productCategoryList","handleChange","timeZoneList","defaultTimeZone","linkMaster","componentDidMount","parentHeight","height","clientHeight","firstPane","generateBreadCrumData","smaterialtypename","smaterialcatname","componentDidUpdate","previousProps","bool","values","materialTypeList","componentWillUnmount","modalName","fieldArray","primaryKeyValue","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData, Lims_JSON_stringify } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component'\r\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport {\r\n    callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment,\r\n    initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload,\r\n    getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport MaterialFilter from './MaterialFilter';\r\nimport MaterialSectionTab from './MaterialSectionTab';\r\nimport AddMaterialSection from './AddMaterialSection';\r\nimport { Affix } from 'rsuite';\r\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\r\nimport AddMaterialFile from './AddMaterialFile';\r\nimport { ReactComponent as Safety } from '../../assets/image/safety.svg';\r\nimport { ReactComponent as Property } from '../../assets/image/managed-hosting.svg';\r\nimport { ProductList } from '../product/product.styled';\r\nimport PortalModal from '../../PortalModal';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport DynamicSlideoutMaterial from './DynamicSlideoutMaterial';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Material extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            sectionDataState: { skip: 0, take: 10 },\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            filterCatList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            selectedcombo: undefined,\r\n            isSelectedRecordChange: false,\r\n            showSectionWhileEdit: false,\r\n            selectedMaterialCat: undefined,\r\n            materialCatList: [],\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            controlMap: new Map(),\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            data: [],\r\n            splitChangeWidthPercentage: 30,\r\n            sidebarview: false\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n        //  console.log('selected r :', this.props.Login.masterData)\r\n        const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\r\n        const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\")\r\n            && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\r\n        const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\")\r\n            && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\r\n        let masterlistmain = []\r\n        this.props.Login.masterData.Material = this.props.Login.masterData.Material &&\r\n            sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\")\r\n        this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType &&\r\n            sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\")\r\n        this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain &&\r\n            sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\")\r\n        this.props.Login.masterData.searchedData = this.props.Login.masterData.searchedData &&\r\n            sortData(this.props.Login.masterData.searchedData, \"descending\", \"nmaterialcode\")\r\n\r\n        if (this.props.Login.masterData.SelectedMaterialCategory &&\r\n            this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\r\n            if (this.props.Login.masterData.SelectedMaterial) {\r\n                delete this.props.Login.masterData.SelectedMaterial['Section'];\r\n                delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\r\n            }\r\n        }\r\n\r\n        // this.props.Login.masterData.Material &&\r\n        //     this.props.Login.masterData.Material.map((temp, i) => {\r\n        //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\r\n        //     })\r\n        let searchedDatalistmain = []\r\n\r\n        // if (this.props.Login.masterData.searchedData === undefined) {\r\n        //     searchedDatalistmain = undefined\r\n        // } else {\r\n        //     this.props.Login.masterData.searchedData &&\r\n        //         this.props.Login.masterData.searchedData.map((temp, i) => {\r\n        //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\r\n        //         })\r\n        // }\r\n        let searchFieldList = []\r\n        let mandatoryFieldsMaterialFile = []\r\n        // if (this.props.Login.masterData.SelectedMaterialType) {\r\n        //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\r\n        //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n        //             searchFieldList = [\r\n        //                 \"Standard Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n        //             searchFieldList = [\r\n        //                 \"Volumetric Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n        //             searchFieldList = [\r\n        //                 \"Material Name\"\r\n        //             ]\r\n        //         }\r\n        //     }\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\", primaryKeyField: \"nmaterialcode\",\r\n            fetchUrl: \"material/getMaterialByID\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            // isjsondata: true,\r\n            searchFieldList: this.props.Login.masterData.DesignMappedFeilds &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']\r\n        };\r\n        this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && (this.props.Login.selectedRecord &&\r\n            this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK) ?\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n            :\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            ]\r\n\r\n        const mandatoryFieldsMaterialSection = [\r\n            {\r\n                \"mandatory\": false, \"idsName\": \"IDS_MATERIALSECTION\", \"dataField\": \"nmaterialsectioncode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n        ];\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i> \r\n                                }\r\n                            </span>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Material\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                //  masterList={searchedDatalistmain || masterlistmain}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Material}\r\n                                getMasterDetail={(master) => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial}\r\n                                primaryKeyField=\"nmaterialcode\"\r\n                                // mainField={this.props.Login.masterData.SelectedMaterialType ?\r\n                                //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                //         \"Standard Name\" :\r\n                                //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                //             \"Volumetric Name\" :\r\n                                //             \"Material Name\" : \"\"}\r\n                                // firstField={\"Reorder Level\"}\r\n                                mainField={this.props.Login.masterData.DesignMappedFeilds &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField']}\r\n                                // firstField={\r\n                                //     this.props.Login.masterData.DesignMappedFeilds &&\r\n                                //     JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] &&\r\n                                //     JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                //     //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                // }\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <MaterialFilter\r\n                                                filterCatList={this.state.filterCatList || []}\r\n                                                materialCatList={this.state.materialCatList || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                selectedMaterialCat={this.state.selectedMaterialCat || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                                openModal={() => this.openModal(\r\n                                    \"create\", this.props.Login, this.state.selectedcombo,\r\n                                    addId, this.props.Login.masterData,\r\n                                    this.state.selectedRecord)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">\r\n                                                        {this.props.Login.masterData.SelectedMaterialType ?\r\n                                                            this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"}\r\n                                                    </Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <ProductList className=\"d-flex product-category icon-group-wrap\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                <MediaLabel >\r\n                                                                    {this.props.intl.formatMessage({ id: \"IDS_QUARANTINE\" })} :\r\n                                                                </MediaLabel>\r\n                                                                <MediaLabel\r\n                                                                    className={`btn btn-outlined ${this.props.Login.masterData.\r\n                                                                        SelectedMaterial['ntransactionstatus'] === transactionStatus.YES ?\r\n                                                                        \"outline-success\" : \"outline-danger\"} btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData.SelectedMaterial\r\n                                                                    ['ntransactionstatus'] === transactionStatus.YES ?\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_YES\" }) : this.props.intl.formatMessage({ id: \"IDS_NO\" })}\r\n                                                                </MediaLabel>\r\n                                                            </h2>\r\n\r\n                                                            <div className=\"d-inline \">\r\n                                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                    //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) =>\r\n                                                                        this.props.getAddMaterialPopup(\r\n                                                                            \"update\", this.props.Login, this.state.selectedcombo,\r\n                                                                            editId, this.props.Login.masterData,\r\n                                                                            this.state.selectedRecord)\r\n                                                                    }\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\" })}\r\n                                                                    //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addSafetyInstructions(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addParameterId, \"create\", {})}\r\n                                                                >\r\n                                                                    <Safety className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_MATERIALPROPERTY\" })}\r\n                                                                    //  data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addMaterialProperty(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addMaterialProperty, \"create\", {})}\r\n                                                                >\r\n                                                                    <Property className=\"custom_icons\" width=\"18\" height=\"18\" />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </ProductList>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Row>\r\n                                                        {/* {this.accordianDesign()} */}\r\n                                                        <SampleInfoView\r\n                                                            data={this.props.Login.masterData.SelectedMaterial}\r\n                                                            SingleItem={JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)\r\n                                                            ['MaterialViewFields'\r\n                                                            ]}\r\n                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            // ALPD-950\r\n                                                            size={4}\r\n                                                        />\r\n                                                    </Row>\r\n                                                    {this.props.Login.masterData && <CustomTab activeKey={this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT'} tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />}\r\n                                                </Card.Body>\r\n                                            </Card> : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* {this.props.Login.openPortal &&\r\n\r\n                        <DynamicSlideoutMaterial\r\n                            selectedRecord={this.state.selectedRecord}\r\n                            enableDisableTextInput={this.props.Login.selectedRecord['IDS_EXPIRY']}\r\n                            templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                            onNumericInputChange={this.onNumericInputChange}\r\n                            handleChange={this.handleChange}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                            onComboChange={this.onComboChangedynamic}\r\n\r\n                        />\r\n                } */}\r\n                {\r\n                    (this.props.Login.openModal || this.props.Login.openChildModal) &&\r\n                    <SlideOutModal show={(this.props.Login.openModal || this.props.Login.openChildModal)}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' :\r\n                            this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' :\r\n                                this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenname}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() :\r\n                            this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : ''\r\n                                : ''}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ?\r\n                                    this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                        this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ?\r\n                                            this.props.Login.showMaterialSection ?\r\n                                                <AddMaterialSection\r\n                                                    selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    MaterialSectionCombodata={this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    isDisabled={this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti}\r\n                                                    ismaterialsectionEdit={this.props.Login.ismaterialsectionEdit}\r\n\r\n                                                    comboData={this.props.Login.masterData.productCategoryList}\r\n                                                />\r\n                                                :\r\n                                                <DynamicSlideoutMaterial\r\n                                                    operation={this.props.Login.operation}\r\n                                                    showSectionWhileEdit={this.state.showSectionWhileEdit}\r\n                                                    selectedRecord={this.state.selectedRecord}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    isBreadCrumbCategory=\r\n                                                    {this.props.Login.operation === 'update' ?\r\n                                                        this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode ===\r\n                                                            this.props.Login.selectedRecord['Material Category'].value ? true : false\r\n                                                        : false}\r\n                                                    enableDisableNeedExpiry={this.props.Login.selectedRecord['Expiry']}\r\n                                                    enableDisableOpenExpiry={this.props.Login.selectedRecord['Open Expiry Need']}\r\n                                                    enableDisableNextValidation={this.props.Login.selectedRecord['Next Validation Need']}\r\n                                                    enableDisableNextValidationNeed={this.props.Login.selectedRecord['Quarantine']}\r\n                                                    enableDisableExpiryPolicy={this.props.Login.selectedRecord['Expiry Validations']}\r\n\r\n                                                    templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                                        this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    handleChange={this.handleChange}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                                                    onComboChange={this.onComboChangedynamic}\r\n                                                    // ismaterialSectionneed={this.state.ismaterialSectionneed}\r\n                                                    screenname={this.props.Login.screenname}\r\n                                                    ismaterialSectionneed={this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item &&\r\n                                                        this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise\r\n                                                        || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed}\r\n                                                    checkSectionNeed={this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item &&\r\n                                                        this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise === transactionStatus.YES && this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES ? true : false}\r\n                                                />\r\n                                            :\r\n                                            <DynamicSlideoutMaterial\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                templateData={this.props.Login.masterData.selectedTemplateSafetyInstructions &&\r\n                                                    this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata}\r\n                                                handleChange={this.handleChange}\r\n                                                onInputOnChange={this.onInputOnChangeDynamic}\r\n                                            />\r\n                                        :\r\n                                        <DynamicSlideoutMaterial\r\n                                            selectedRecord={this.props.Login.selectedRecord}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            templateData={this.props.Login.masterData.selectedTemplateProperties &&\r\n                                                this.props.Login.masterData.selectedTemplateProperties[0].jsondata}\r\n                                            // userInfo={this.props.Login.userInfo}\r\n                                            handleChange={this.handleChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            timeZoneList={this.props.Login.timeZoneList && this.props.Login.timeZoneList}\r\n                                            onComboChange={this.onComboChangedynamic}\r\n                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        /> :\r\n                                    <AddMaterialFile\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onDrop={this.onDropMaterialFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        onComboChange={this.onComboChange}\r\n                                        linkMaster={this.props.Login.linkMaster}\r\n                                        maxSize={20}\r\n                                        maxFiles={1}\r\n                                        multiple={false}\r\n                                        hideDefaultToggle={true}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_MATERIALMSDSATTACHMENT\" })}\r\n                                        name=\"testfilename\"\r\n                                    />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    openModal = (operation, loginProps, selectedCombo,\r\n        addId, masterData, selectedRecord) => {\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\r\n            this.props.getAddMaterialPopup(operation, loginProps, selectedCombo,\r\n                addId, masterData, selectedRecord)\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    dynamicmandatoryFeilds = () => {\r\n        let mandatoryFeildsMaterial = [];\r\n        let slanguagetypecode = this.props.Login.userInfo.slanguagetypecode\r\n        this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.mandatory) {\r\n                            if (component.inputtype === 'combo') {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.displayname[slanguagetypecode], \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                            else {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.displayname[slanguagetypecode], \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                            if (componentrow.mandatory) {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.displayname[slanguagetypecode], \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.displayname[slanguagetypecode], \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        if (this.props.Login.selectedRecord['Expiry Validations']) {\r\n            if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"Expiry Policy Days\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_EXPIRYPOLICYPERIOD\", \"dataField\": \"Expiry Policy Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord['Open Expiry Need']) {\r\n            if (this.props.Login.selectedRecord['Open Expiry Need'] === 3) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_OPENEXIPIRY\", \"dataField\": \"Open Expiry\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_OPENEXIPIRYPERIOD\", \"dataField\": \"Open Expiry Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord['Next Validation Need']) {\r\n            if (this.props.Login.selectedRecord['Next Validation Need'] === 3) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_NEXTVALIDATION\", \"dataField\": \"Next Validation\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"\r\n                });\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_NEXTVALIDATIONPERIOD\", \"dataField\": \"Next Validation Period\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                });\r\n            }\r\n        }\r\n        // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\r\n        if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\r\n            if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ?\r\n                this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise :\r\n                this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"IDS_SECTION\", \"dataField\": \"Section\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                }, {\r\n                    \"idsName\": \"IDS_REORDERLEVEL\", \"dataField\": \"Reorder Level\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                })\r\n            } else {\r\n                mandatoryFeildsMaterial.map((temp, i) => {\r\n                    if (temp.dataField === 'Section' || temp.dataField === 'Reorder Level') {\r\n                        delete mandatoryFeildsMaterial[i];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return mandatoryFeildsMaterial;\r\n    }\r\n\r\n    accordianDesign = () => {\r\n        let selectedmasterlistmain = [];\r\n        this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined &&\r\n            selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata)\r\n\r\n        let designaccordian = [];\r\n        this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n            row.children.map((column) => {\r\n                column.children.map((component) => {\r\n                    if (component.inputtype === 'combo') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ?\r\n                                            selectedmasterlistmain[0][component.label]['label'] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === 'toggle') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] &&\r\n                                            selectedmasterlistmain[0][component.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                        if (componentrow.inputtype === 'combo') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else if (componentrow.inputtype === 'toggle') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] &&\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ?\r\n                                                'Yes' : 'No'}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n        })\r\n        return designaccordian;\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        isSelectedRecordChange = true;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const tabScreen = tabProps.screenName;\r\n        let masterData = this.props.Login.masterData\r\n        masterData['tabScreen'] = tabScreen\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\"\r\n        });\r\n    }\r\n\r\n    onSaveMaterialFile = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let testFileArray = [];\r\n        let nmaterialconfigcode;\r\n        let testFile = {\r\n            nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n            nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n            nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ?\r\n                selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        testFile['sdefaultstatus'] = {}\r\n        testFile['sdefaultstatus'] = testFile['ndefaultstatus'] === 3 ? 'Yes' : 'No'\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, testFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                    const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\r\n                    tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    tempData[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                        convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    testFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                testFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\r\n                testFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\", false);\r\n                testFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                testFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                    convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                testFileArray.push(testFile);\r\n            }\r\n        } else {\r\n            testFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\r\n            testFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\r\n            testFile[\"slinkname\"] = selectedRecord['nlinkcode'].label && selectedRecord['nlinkcode'].label;\r\n            testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            testFile[\"ssystemfilename\"] = \"\";\r\n            testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n            testFile[\"nfilesize\"] = 0;\r\n            testFileArray.push(testFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]).replaceAll('\\\\n','#r#'));\r\n\r\n        let inputParam;\r\n        if (this.props.Login.operation === 'create') {\r\n            inputParam = {\r\n                inputData: {\r\n                    \"userinfo\": {\r\n                        ...this.props.Login.userInfo,\r\n                        sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                        smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                         //ALPD-1628(while saving the image and sign,audit trail is not captured the respective language)\r\n                        slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                    }\r\n                },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"create\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\",\r\n                searchRef: this.searchRef,\r\n                isChild: true\r\n            }\r\n        }\r\n        else {\r\n            let postParam = {\r\n                inputListName: \"MaterialMsdsAttachment\",\r\n                selectedObject: \"SelectedMaterialMsdsAttachment\",\r\n                primaryKeyField: \"nmaterialfilecode\",\r\n            }\r\n            inputParam = {\r\n                inputData: {\r\n                    \"userinfo\": {\r\n                        ...this.props.Login.userInfo,\r\n                        sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                        smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                        slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n\r\n                    }\r\n                },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\",\r\n                searchRef: this.searchRef,\r\n                postParam: postParam,\r\n                isChild: true\r\n            }\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            // let dataresultarr1 = []\r\n            // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\r\n            // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\r\n            //     temp['jsondata'].dcreateddate =\r\n            //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\r\n            // })\r\n            // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\r\n\r\n            // let dataresultarr = []\r\n            // this.props.Login.masterData[\"MaterialSection\"] &&\r\n            //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\r\n            //         return dataresultarr.push(temp.jsondata)\r\n            //     })\r\n            // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\r\n            this.props.Login.masterData.ismaterialSectionneed === 3 &&\r\n                tabMap.set(\"IDS_MATERIALSECTION\",\r\n                    <MaterialSectionTab\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        dataResult={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'),\r\n                            (this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\")\r\n                                ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n                        dataState={(this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\")\r\n                            ? this.state.sectionDataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        //data={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending',\r\n                        //'nmaterialsectioncode'))}\r\n                        data={this.props.Login.masterData[\"MaterialSection\"]}\r\n                        masterData={this.props.Login.masterData}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        getTestDetails={this.props.getTestDetails}\r\n                        getAddMaterialSectionPopup={this.props.getAddMaterialSectionPopup}\r\n                        addParameter={this.addMaterialSection}\r\n                        deleteRecord={this.deleteRecordmain}\r\n                        fetchRecord={this.props.getMaterialSectionEdit}\r\n                        selectedRecord={this.props.Login.selectedRecord}\r\n                        selectedId={this.props.Login.selectedId}\r\n                        screenName=\"IDS_MATERIALSECTION\"\r\n                    />\r\n                );\r\n            tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\",\r\n                <MaterialMsdsAttachmentTab\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    deleteRecord={this.deleteRecordmain}\r\n                    MaterialMsdsAttachment={sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || []}\r\n                    addMaterialFile={(param) => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial)}\r\n                    viewMaterialFile={this.viewMaterialFile}\r\n                    screenName=\"IDS_MATERIALMSDSATTACHMENT\"\r\n                    settings={this.props.settings}\r\n                />);\r\n\r\n\r\n        }\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    deleteRecordmain = (deleteParam) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) :\r\n            JSON.stringify(deleteParam.selectedRecord);\r\n        let dataState = undefined;\r\n        if (this.props.screenName === \"IDS_SECTION\") {\r\n            dataState = this.state.sectionDataState;\r\n        } else if (this.props.screenName === \"IDS_METHOD\") {\r\n            dataState = this.state.methodDataState;\r\n        } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\r\n            dataState = this.state.instrumentCatDataState;\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                nmaterialconfigcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                ncontrolCode: deleteParam.ncontrolCode,\r\n                [methodUrl.toLowerCase()]: selected,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: deleteParam.operation,\r\n            ncontrolCode: deleteParam.ncontrolCode,\r\n            methodUrl: methodUrl,\r\n            screenName: \"IDS_MATERIAL\", dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: false, openChildModal: true, screenName: \"IDS_MATERIAL\", operation: deleteParam.operation, selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    addMaterialSection = (param) => {\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let ncontrolCode = this.props.Login.ncontrolCode\r\n\r\n        let openModal = this.props.Login.openModal\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        isneedcombomulti = false;\r\n        showMaterialSection = true\r\n        openModal = true\r\n        ncontrolCode = param;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showMaterialSection, isneedcombomulti, openModal }\r\n        }\r\n        this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode)\r\n\r\n\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"] && this.state.selectedMaterialCat[\"nmaterialcatcode\"]) {\r\n            this.props.getMaterialByTypeCode(this.state.selectedcombo,\r\n                this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        // if (Array.isArray(this.props.Login.masterData)) {\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_MATERIALTYPE\",\r\n                \"value\": this.props.Login.masterData.SelectedMaterialType ?\r\n                    this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\",\r\n\r\n            }, {\r\n\r\n            \"label\": \"IDS_MATERIALCAT\",\r\n            \"value\": this.props.Login.masterData.SelectedMaterialCategoryFilter ?\r\n                this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname !== undefined ?\r\n                    this.props.Login.masterData.SelectedMaterialCategoryFilter.smaterialcatname : \"NA\" : \"NA\",\r\n        }\r\n        );\r\n        //  }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let bool = false;\r\n        let { selectedRecord, selectedcombo, comboitem, filterData, filterCatList, selectedMaterialCat,\r\n            materialCatList, ismaterialSectionneed, showSectionWhileEdit } = this.state\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\r\n        //     bool = true;\r\n        //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\r\n        // }\r\n        // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\r\n        //     bool = true;\r\n        //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            bool = true;\r\n            selectedcombo = this.props.Login.selectedcombo\r\n        }\r\n\r\n        if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\r\n            bool = true;\r\n            showSectionWhileEdit = this.props.Login.showSectionWhileEdit\r\n        }\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            bool = true;\r\n            comboitem = this.props.Login.comboitem\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.MaterialType !== undefined) {\r\n            if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\r\n                bool = true;\r\n                // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\r\n                //     \"smaterialtypename\", undefined, undefined, undefined);\r\n                //     constructOptionList(options, optionId,\r\n                //         optionValue, sortField, sortOrder, alphabeticalSort,\r\n                //          defaultStatusFieldName) \r\n                const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType,\r\n                    \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined,\r\n                    undefined, undefined,\r\n                    undefined, true, this.props.Login.userInfo.slanguagetypecode)\r\n                filterCatList = materialTypeList.get(\"OptionList\");\r\n                //  console.log('masterData.MaterialType :', masterData.MaterialType)\r\n                selectedcombo = {\r\n                    nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\r\n                        \"value\": masterData.MaterialType[0].nmaterialtypecode,\r\n                        \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\r\n            const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            materialCatList = MaterialCategoryMain.get(\"OptionList\");\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData();\r\n            if (masterData.SelectedMaterialCategory !== previousProps.Login.masterData.SelectedMaterialCategory) {\r\n\r\n                const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, undefined);\r\n                materialCatList = MaterialCategoryMain.get(\"OptionList\");\r\n\r\n                selectedMaterialCat = {\r\n                    nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\r\n                        \"value\": masterData.SelectedMaterialCategory.nmaterialcatcode,\r\n                        \"label\": masterData.SelectedMaterialCategory.smaterialcatname\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\r\n            if (this.props.Login.masterData.searchedData) {\r\n                if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\r\n                    this.setState({ skip: 0 });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                selectedRecord, comboitem, filterData, selectedcombo, filterCatList, selectedMaterialCat,\r\n                materialCatList, isSelectedRecordChange: false, showSectionWhileEdit\r\n                //, \r\n                // ismaterialSectionneed \r\n                // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n                // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\r\n            });\r\n        }\r\n\r\n        //Vishakh: I commented updateStore. Because this updateStore won't get any change in the flow.\r\n        //  Even the udpateStore is there or not, there is no change in the flow.\r\n        // if(this.props.Login.comboSet){\r\n        //     this.setState({ selectedMaterialCat: this.props.Login.selectedMaterialCat});\r\n\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { comboSet: false }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n\r\n        // else\r\n        // {\r\n        //     this.setState({\r\n        //     ismaterialSectionneed \r\n        //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // });\r\n        // }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n\r\n    };\r\n\r\n    validateEsign = () => {\r\n        let modal = \"openModal\";\r\n        if (this.props.Login.operation === \"delete\" && (this.props.Login.screenData.inputParam.methodUrl === \"MaterialSection\" || this.props.Login.screenData.inputParam.methodUrl === \"MaterialMsdsAttachment\")) {\r\n            modal = \"openChildModal\";\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, modal);\r\n    }\r\n    viewMaterialFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                materialmsdsattachment: JSON.stringify(filedata),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedMaterialMsdsAttachment\",\r\n            screenname: \"IDS_MATERIALMSDSATTACHMENT\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let showSectionWhileEdit = this.props.Login.showSectionWhileEdit\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            showMaterialSection = false;\r\n            isneedcombomulti = false;\r\n            showSectionWhileEdit = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, showMaterialSection, showMaterialSection, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nmaterialtypecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n            }\r\n            else if (fieldName === \"nmaterialcatcode\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n            }\r\n\r\n            else if (fieldName === \"nmaterialsectioncode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nmaterialsectioncode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n            else if (fieldName === \"nlinkcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nlinkcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            else if (fieldName.label === \"IDS_STORAGECONDITION\") {\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n        }\r\n    }\r\n\r\n    onComboChangedynamic = (comboData, control) => {\r\n\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (comboData === null && comboData === undefined && control.valuemember && control.nquerybuildertablecode) {\r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], pkey: control.valuemember,\r\n                nquerybuildertablecode: control.nquerybuildertablecode,\r\n                \"source\": control.source\r\n            }\r\n        }\r\n        if (control.inputtype === 'date') {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[`tz${control.label}`] = comboData;\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (control.label === 'Material Category') {\r\n                let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed\r\n                let showSectionWhileEdit = this.state.showSectionWhileEdit\r\n                ismaterialSectionneed = comboData.item.jsondata.needsectionwise\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         ismaterialSectionneed\r\n                //     }\r\n                // }\r\n\r\n                // ALPD-956 begin\r\n                this.state.selectedRecord['Section'] = ismaterialSectionneed == 4 ? this.state.selectedRecord['Section'] = undefined : this.state.selectedRecord['Section'];\r\n                // ALPD-956 end\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData;\r\n                isSelectedRecordChange = true\r\n                showSectionWhileEdit = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange, ismaterialSectionneed, showSectionWhileEdit });\r\n                //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\r\n            }\r\n            else {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData && (comboData === null || comboData === undefined) ? undefined : comboData;\r\n                isSelectedRecordChange = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    onInputOnChangeDynamic = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index == 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            //  const  indexcomma= value.indexOf(\",\")\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        isSelectedRecordChange = true;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n    onInputOnChange = (event, optional2) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            if (event.target.type === 'checkbox') {\r\n                if (event.target.name === \"ntransactionstatus\")\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n                else\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                if (event.target.name === 'Expiry') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['Need Expiry']) {\r\n                            selectedRecord['Need Expiry'] = 4\r\n                        }\r\n                    }\r\n                }\r\n                if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (event.target.name === 'Open Expiry Need') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Open Expiry']) {\r\n                            delete selectedRecord['Open Expiry']\r\n                        }\r\n                        if (selectedRecord['tzOpen Expiry']) {\r\n                            delete selectedRecord['tzOpen Expiry']\r\n                        }\r\n                        if (selectedRecord['Open Expiry Period']) {\r\n                            delete selectedRecord['Open Expiry Period']\r\n                        }\r\n                    }\r\n                    else {\r\n                        selectedRecord['Open Expiry Period'] = this.props.Login.templateData.comboData['Open Expiry Period'].filter(x =>\r\n                            x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0]\r\n\r\n                    }\r\n                }\r\n                if (event.target.name === 'Next Validation Need') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Next Validation']) {\r\n                            delete selectedRecord['Next Validation']\r\n                        }\r\n                        if (selectedRecord['tzNext Validation']) {\r\n                            delete selectedRecord['tzNext Validation']\r\n                        }\r\n                        if (selectedRecord['Next Validation Period']) {\r\n                            delete selectedRecord['Next Validation Period']\r\n                        }\r\n                    }\r\n                    else {\r\n                        selectedRecord['Next Validation Period'] = this.props.Login.templateData.comboData['Next Validation Period'].filter(x =>\r\n                            x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0]\r\n\r\n                    }\r\n                }\r\n                if (event.target.name === 'Quarantine') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Next Validation Need']) {\r\n                            selectedRecord['Next Validation Need'] = 4\r\n                        }\r\n                        if (selectedRecord['Next Validation']) {\r\n                            delete selectedRecord['Next Validation']\r\n                        }\r\n\r\n                        if (selectedRecord['Next Validation Period']) {\r\n                            delete selectedRecord['Next Validation Period']\r\n                        }\r\n                    }\r\n                }\r\n            } else if (event.target.type === 'radio') {\r\n                if (optional2 !== 'Expiry policy') {\r\n                    if (selectedRecord['Expiry Policy Days']) {\r\n                        delete selectedRecord['Expiry Policy Days']\r\n                    }\r\n                    if (selectedRecord['tzExpiry Policy Days']) {\r\n                        delete selectedRecord['tzExpiry Policy Days']\r\n                    }\r\n                    if (selectedRecord['Expiry Policy Period']) {\r\n                        delete selectedRecord['Expiry Policy Period']\r\n                    }\r\n                }\r\n                else {\r\n                    selectedRecord['Expiry Policy Period'] = this.props.Login.templateData.comboData['Expiry Policy Period'].filter(x =>\r\n                        x.item.jsondata.jsondata.ndefaultstatus === transactionStatus.YES)[0]\r\n\r\n\r\n                }\r\n                selectedRecord[event.target.name] = optional2\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            } else if (event.target.type === 'radio') {\r\n                selectedRecord[event.target.name] = optional2;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        // console.log(\"selected:\", this.state.selectedRecord);\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        let varmain = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"DateList\"] = []\r\n        let nmaterialconfigcode;\r\n        nmaterialconfigcode = this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode\r\n        if (this.props.Login.screenname === \"IDS_MATERIAL\") {\r\n\r\n            // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n            //     varmain = \"Standard Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n            //     varmain = \"Volumetric Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n            //     varmain = \"Material Name\"\r\n            // }\r\n            inputData[\"Material\"] = {}\r\n            inputData[\"jsonuidata\"] = {}\r\n\r\n            const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n\r\n\r\n                        if (component.inputtype === 'combo') {\r\n                            let isValid = false;\r\n                            if (component.label === 'Expiry Policy Period') {\r\n                                if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else if (component.label === 'Open Expiry Period') {\r\n                                if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else if (component.label === 'Next Validation Period') {\r\n                                if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\r\n                                    isValid = true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                isValid = true;\r\n                            }\r\n                            if (isValid) {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"],\r\n                                    pkey: this.state.selectedRecord[component.label].item.pkey,\r\n                                    nquerybuildertablecode: this.state.selectedRecord[component.label].item.nquerybuildertablecode,\r\n                                    item: this.state.selectedRecord[component.label].item\r\n                                } : \"\"\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                    this.state.selectedRecord[component.label][\"label\"]\r\n                                    : \"\"\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                            }\r\n                            inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                : \"\"\r\n\r\n                        }\r\n                        else if (component.inputtype === 'toggle') {\r\n                            // if (component.label === 'Quarantine') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\r\n                            //     this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Need Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Open Expiry Need') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Reusable') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            if (this.state.selectedRecord[component.label] === \"\") {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            } else if (this.state.selectedRecord[component.label] === undefined) {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            }\r\n                            else {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                            if (this.state.selectedRecord[component.label] !== \"\") {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ?\r\n                                this.props.intl.formatMessage({ id: \"IDS_YES\" }) : this.props.intl.formatMessage({ id: \"IDS_NO\" })\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (component.label !== undefined) {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined ?\r\n                                    this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"\r\n                                // }\r\n                                //    if (this.state.selectedRecord[component.label] !== undefined) {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined ?\r\n                                    this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    let isValid = false;\r\n                                    if (componentrow.label === 'Expiry Policy Period') {\r\n                                        if (this.state.selectedRecord['Expiry Policy Days'] && this.state.selectedRecord['Expiry Policy Days'] > 0) {\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else if (componentrow.label === 'Open Expiry Period') {\r\n                                        if (this.state.selectedRecord['Open Expiry'] && this.state.selectedRecord['Open Expiry'] > 0) {\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else if (componentrow.label === 'Next Validation Period') {\r\n                                        if (this.state.selectedRecord['Next Validation'] && this.state.selectedRecord['Next Validation'] > 0) {\r\n                                            isValid = true;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        isValid = true;\r\n                                    }\r\n                                    if (isValid) {\r\n                                        inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                            {\r\n                                                label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                                value: this.state.selectedRecord[componentrow.label][\"value\"],\r\n                                                pkey: this.state.selectedRecord[componentrow.label].item.pkey,\r\n                                                nquerybuildertablecode: this.state.selectedRecord[componentrow.label].item.nquerybuildertablecode,\r\n                                                item: this.state.selectedRecord[componentrow.label].item\r\n\r\n                                            } : \"\"\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                            this.state.selectedRecord[componentrow.label][\"label\"]\r\n                                            : \"\"\r\n                                    }\r\n                                } else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                    }\r\n                                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo)\r\n                                        : \"\"\r\n\r\n                                } else if (componentrow.inputtype === 'toggle') {\r\n                                    if (this.state.selectedRecord[componentrow.label] === \"\") {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    } else if (this.state.selectedRecord[componentrow.label] === undefined) {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    }\r\n                                    else {\r\n                                        inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                    if (this.state.selectedRecord[componentrow.label] !== \"\") {\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ?\r\n                                        this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"\r\n                                    // }\r\n                                    // if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ?\r\n                                        this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"\r\n                                    // }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n            //     this.state.selectedRecord['Standard Name'] :\r\n            //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n            //         this.state.selectedRecord['Volumetric Name'] :\r\n            //         this.state.selectedRecord['Material Name']\r\n\r\n            inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name']\r\n            inputData[\"jsonuidata\"] = {\r\n                ...inputData[\"jsonuidata\"],\r\n                \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\r\n                \"nmaterialconfigcode\": nmaterialconfigcode\r\n            }\r\n            inputData[\"Material\"] = {\r\n                ...inputData[\"Material\"],\r\n                \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            }\r\n\r\n            inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"])\r\n            inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"])\r\n            inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine']\r\n            inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value\r\n\r\n            inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item ?\r\n                this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise :\r\n                this.props.Login.selectedRecord['Material Category'].needsectionwise\r\n            if (this.props.Login.selectedRecord['Material Category'].item ?\r\n                this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise :\r\n                this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\r\n                // inputData[\"materialSectionJson\"] = [{\r\n                //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\r\n                //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\r\n                //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\r\n                //     //,\r\n                //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                // }];\r\n                inputData[\"materialSectionJson\"] = {\r\n                    \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\r\n                    \"nsectioncode\": this.state.selectedRecord[\"Section\"] && this.state.selectedRecord[\"Section\"].value,\r\n                    'nmaterialconfigcode': nmaterialconfigcode\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"])\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            // console.log(\"data:\", inputData);\r\n            if (this.props.Login.operation === 'create') {\r\n\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            else {\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam: {\r\n                        selectedObject: \"SelectedMaterial\",\r\n                        primaryKeyField: \"nmaterialcode\", inputListName: \"Material\",\r\n                        selectedComboName: \"selectedMaterialCat\", selectedCombo: this.state.selectedRecord['Material Category'],\r\n                        selectedComboId: \"nmaterialcatcode\"\r\n                    }, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState,\r\n                    filtercombochange: this.props.Login.masterData.searchedData !== undefined ?\r\n                        this.state.selectedRecord['Material Category'].value ===\r\n                            this.props.Login.masterData.SelectedMaterialCategoryFilter.nmaterialcatcode ? false : true : false\r\n                }\r\n\r\n                // if(this.state.selectedRecord['Material Category'].value!==this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode){\r\n                //     masterData={...masterData,searchedData}\r\n                // }\r\n\r\n            }\r\n\r\n            // if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n            //     // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            //     //     const updateInfo = {\r\n            //     //         typeName: DEFAULT_RETURN,\r\n            //     //         data: {\r\n            //     //             loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n            //     //         }\r\n            //     //     }\r\n            //     //     this.props.updateStore(updateInfo);\r\n            //     // }\r\n            //     // else {\r\n            //     //     this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            //     // }\r\n            // } else {\r\n            if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                this.ConfirmComponent()\r\n            }\r\n            else {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\r\n            const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata\r\n            const dynamicobj = {};\r\n            let jsonuidata = {}\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        //if (component.inputtype === 'combo') {\r\n                        // if (this.state.selectedRecord[component.label]) {\r\n                        //     dynamicobj[component.label] = {\r\n                        //         label: this.state.selectedRecord[component.label][\"label\"],\r\n                        //         value: this.state.selectedRecord[component.label][\"value\"]\r\n                        //     }\r\n\r\n                        // }\r\n                        //     jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                        //     component.label ? 'Yes' : 'No' :  'No' \r\n                        // }\r\n                        // else {\r\n                        if (component.inputtype === 'checkbox') {\r\n                            //  if (this.state.selectedRecord[component.label]) {\r\n                            dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                            jsonuidata[component.label] = this.state.selectedRecord[component.label] ?\r\n                               // component.label ? 'Yes' : 'No' : 'No'\r\n                                component.label ? this.props.intl.formatMessage({ id: \"IDS_YES\" }): \r\n                                this.props.intl.formatMessage({ id: \"IDS_NO\" }) : this.props.intl.formatMessage({ id: \"IDS_NO\" })\r\n                              \r\n                            //   }\r\n                            // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                            // component.label ? 'Yes' : 'No' :  'No' \r\n                        }\r\n                        else {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                                jsonuidata[component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                // if (componentrow.inputtype === 'combo') {\r\n                                //     // if (this.state.selectedRecord[componentrow.label]) {\r\n                                //     //     dynamicobj[componentrow.label] =\r\n                                //     //     {\r\n                                //     //         label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                //     //         value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                //     //     }\r\n\r\n                                //     // }\r\n                                //     jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //         componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                // }\r\n                                // else {\r\n                                //     if (this.state.selectedRecord[componentrow.label]) {\r\n                                //         dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                //         jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //          componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                //     }\r\n                                //     //jsonuidata[componentrow.label] =  this.state.selectedRecord[componentrow.label] ?\r\n                                //     //componentrow.label ? 'Yes' : 'No' :  'No' \r\n                                // }\r\n                                if (componentrow.inputtype === 'checkbox') {\r\n                                    //  if (this.state.selectedRecord[componentrow.label]) {\r\n                                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        componentrow.label ? 'Yes' : 'No' : 'No'\r\n                                    //  }\r\n                                    // jsonuidata[component.label] =  this.state.selectedRecord[component.label] ?\r\n                                    // component.label ? 'Yes' : 'No' :  'No' \r\n                                }\r\n                                else {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                        jsonuidata[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] =\r\n                    this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode\r\n            }\r\n            else {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] = 0\r\n            }\r\n            inputData[\"jsonuidata\"] = JSON.stringify(jsonuidata)\r\n            inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 1;\r\n            inputData['nmaterialconfigcode'] = nmaterialconfigcode\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            let masterData = this.props.Login.masterData\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            inputParam = this.onSaveMaterialFile();\r\n            let masterData = this.props.Login.masterData\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\r\n\r\n            let masterData = this.props.Login.masterData\r\n            const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata\r\n            const dynamicobj = {};\r\n            inputData[\"DateList\"] = [];\r\n            inputData[\"jsonuidata\"] = {};\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.inputtype === 'combo') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"]\r\n                                }\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label][\"label\"]\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                                inputData[\"jsonuidata\"][`tz${component.label}`] = dynamicobj[`tz${component.label}`].label\r\n                                inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label]\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (this.state.selectedRecord.hasOwnProperty(component.label)) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                                inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label]\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] =\r\n                                        {\r\n                                            label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                            value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                        }\r\n                                        inputData[\"jsonuidata\"][component.label] = dynamicobj[component.label].label\r\n                                    }\r\n                                }\r\n                                else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                        inputData[\"jsonuidata\"][`tz${componentrow.label}`] = dynamicobj[`tz${componentrow.label}`].label\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label]\r\n                                    }\r\n\r\n                                }\r\n                                else {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = dynamicobj[componentrow.label]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            /* ALPD-925 Begin */\r\n            inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode;\r\n            /* ALPD-925 End */\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialProperties.length > 0) {\r\n                inputData[\"nmaterialpropertycode\"] =\r\n                    this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode\r\n            } else {\r\n                inputData[\"nmaterialpropertycode\"] = 0\r\n            }\r\n            //inputData[\"DateList\"] = JSON.stringify(DateList) \r\n            inputData[\"jsonuidata\"] = { ...inputData[\"jsonuidata\"], 'nmaterialconfigcode': nmaterialconfigcode }\r\n            inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"])\r\n\r\n            inputData[\"materialProperty\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 2;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.operation !== \"update\") {\r\n                let showMaterialSection = this.props.Login.showMaterialSection\r\n                let newarr = []\r\n                let newarr1 = []\r\n                let postParam = undefined;\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\r\n                    newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        return {\r\n                            \"ssectionname\": temp.label,\r\n                            \"nsectioncode\": temp.value,\r\n                            \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                            \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                            'nmaterialconfigcode': nmaterialconfigcode\r\n                        }\r\n                    })\r\n                    newarr1[\"nsectioncode\"] = \"\"\r\n                    // let nsectioncode;\r\n                    this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        newarr1[\"nsectioncode\"] += temp.value + ','\r\n                    })\r\n                    newarr1 = {\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        \"nsectioncode\": newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1),\r\n                        'nmaterialconfigcode': nmaterialconfigcode\r\n                    }\r\n                }\r\n                else {\r\n                    newarr.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode': nmaterialconfigcode\r\n                    });\r\n                    newarr1 = {\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        'nmaterialconfigcode': nmaterialconfigcode\r\n                    }\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr)\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr1)\r\n                inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode\r\n\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    operation: \"create\",\r\n                    showMaterialSection: showMaterialSection,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef, postParam: postParam, isChild: true\r\n                }\r\n            }\r\n            else {\r\n                let newarrobj = []\r\n                let postParam = {\r\n                    inputListName: \"MaterialSection\",\r\n                    selectedObject: \"SelectedMaterialSection\",\r\n                    primaryKeyField: \"nmaterialsectioncode\",\r\n                }\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode': nmaterialconfigcode\r\n                    });\r\n                }\r\n                else {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0,\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        'nmaterialconfigcode': nmaterialconfigcode\r\n                    });\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj)\r\n                inputData[\"MaterialSection\"] = {\r\n                    \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] ? this.state.selectedRecord[\"nreorderlevel\"] : 0\r\n\r\n                }\r\n                inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue\r\n                inputData[\"nmaterialconfigcode\"] = nmaterialconfigcode\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    showMaterialSection: false,\r\n                    operation: \"update\",\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef, postParam: postParam, isChild: true\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     // const re = /^[0-9\\b]+$/;\r\n    //     // let selectedRecord = this.state.selectedRecord\r\n    //     // if (re.test(value)) {\r\n    //     //     selectedRecord[name] = value;\r\n    //     //     this.setState({selectedRecord})\r\n    //     //  }\r\n    //     let selectedRecord = this.state.selectedRecord\r\n    //     selectedRecord[name] = value;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    // handleDateChange = (dateValue, dateName) => {\r\n    //     const { selectedRecord } = this.state;\r\n    //     selectedRecord[dateName] = dateValue;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        // let value = event.target.value;\r\n\r\n        // if (isNaN(value)) {\r\n        // if (parseInt(value) < 10) {\r\n        //  let x=value.toString().replace(/\\D/g,'')\r\n        // if (value === 0) {\r\n        //     delete selectedRecord[name]\r\n        //     selectedRecord[name]=''\r\n        // }\r\n        // else {\r\n        if (name === \"Open Expiry\" || name === \"Next Validation\") {\r\n            if (value === 0) {\r\n                selectedRecord[name] = \"\";\r\n            }\r\n            else {\r\n                selectedRecord[name] = value;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[name] = value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n        //   }\r\n\r\n        // }\r\n        // }\r\n\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     console.log(\"value:\", value, name);\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (name === \"nroundingdigits\") {\r\n\r\n    //         if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n    //             console.log(\"val:\", value.target.value);\r\n    //             selectedRecord[name] = value.target.value;\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         selectedRecord[name] = value;\r\n    //     }\r\n\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n            \"ok\", \"cancel\", () => this.copyAlertSave());\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        let postParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\",\r\n            primaryKeyField: \"nmaterialcode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n            fetchUrl: \"material/getMaterialByID\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n        const inputParam = {\r\n            methodUrl: \"Material\",\r\n            classUrl: \"material\",\r\n            inputData: {\r\n                \"nmaterialconfigcode\": this.props.Login.masterData.selectedTemplate[0].nmaterialconfigcode,\r\n                \"material\": this.props.Login.masterData.SelectedMaterial,\r\n                \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"Material\",\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"Material\", id: \"material\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        this.setState({ sectionDataState: { skip: 0, take: 10 } })\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialTypeFilter, this.props.Login.masterData.SelectedMaterialCategoryFilter,\r\n                this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, initialcombochangeget, getAddMaterialPopup, viewAttachment, getMaterialReload,\r\n    crudMaster, getMaterialDetails, getMaterialEdit, getMaterialByTypeCode, addMaterialFile\r\n    , getAddMaterialSectionPopup, getMaterialSectionEdit, filterColumnData, validateEsignCredential, addSafetyInstructions, addMaterialProperty\r\n})(injectIntl(Material));\r\n\r\n"]},"metadata":{},"sourceType":"module"}