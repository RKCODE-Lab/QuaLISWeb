{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddKpiBand.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component'; //import FormTextarea from '../../components/form-textarea/form-textarea.component';\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\n\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddKpiBand = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PRODUCTNAME\"\n    }),\n    isSearchable: true,\n    name: \"nproductcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.productList || [],\n    optionId: \"nproductcode\",\n    optionValue: \"sproductname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nproductcode\"] : \"\",\n    onChange: event => props.onComboChange(event, 'nproductcode'),\n    isMulti: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_KPIBANDNAME\"\n    }),\n    name: \"skpibandname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_KPIBANDNAME\"\n    }),\n    value: props.selectedRecord[\"skpibandname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    readOnly: props.userLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nnumberofdays\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFDAYS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFDAYS\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nnumberofdays\"] //max={99}\n    ,\n    min: 0,\n    strict: true,\n    maxLength: 5,\n    onChange: event => props.onNumericInputOnChange(event, \"nnumberofdays\") //onChange={(event) => props.onInputOnChange(event, \"nnumberofdays\")}\n    //noStyle={true}\n    ,\n    precision: 0,\n    className: \"form-control\",\n    noStyle: true,\n    isMandatory: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nbeforewindowperiod\",\n    label: props.intl.formatMessage({\n      id: \"IDS_BEFOREWINDOWPERIOD\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_BEFOREWINDOWPERIOD\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nbeforewindowperiod\"] //max={99}\n    ,\n    min: 0,\n    strict: true,\n    maxLength: 5,\n    onChange: event => props.onNumericInputOnChange(event, \"nbeforewindowperiod\"),\n    noStyle: true,\n    precision: 0,\n    className: \"form-control\",\n    isMandatory: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nafterwindowperiod\",\n    label: props.intl.formatMessage({\n      id: \"IDS_AFTERWINDOWPERIOD\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_AFTERWINDOWPERIOD\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nafterwindowperiod\"] //max={99}\n    ,\n    min: 0,\n    strict: true,\n    maxLength: 5,\n    onChange: event => props.onNumericInputOnChange(event, \"nafterwindowperiod\"),\n    noStyle: true,\n    precision: 0,\n    className: \"form-control\",\n    isMandatory: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_BEFOREPERIODCODE\"\n    }),\n    isSearchable: false,\n    name: \"nbeforeperiodcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.periodList || [],\n    optionId: \"nperiodcode\",\n    optionValue: \"speriodname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nbeforeperiodcode\"] : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboChange(event, 'nbeforeperiodcode'),\n    isMulti: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_AFTERPERIODCODE\"\n    }),\n    isSearchable: false,\n    name: \"nafterperiodcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    options: props.periodList || [],\n    optionId: \"nperiodcode\",\n    optionValue: \"speriodname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nafterperiodcode\"] : \"\",\n    showOption: true,\n    required: true,\n    onChange: event => props.onComboChange(event, 'nafterperiodcode'),\n    isMulti: false,\n    closeMenuOnSelect: true //alphabeticalSort={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(AddKpiBand);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/basemaster/AddKpiBand.js"],"names":["React","Row","Col","FormInput","FormSelectSearch","FormNumericInput","injectIntl","AddKpiBand","props","intl","formatMessage","id","productList","selectedRecord","event","onComboChange","onInputOnChange","userLogged","onNumericInputOnChange","periodList"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddKpiBand = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCTNAME\" })}\r\n                    isSearchable={true}\r\n                    name={\"nproductcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={props.productList || []}\r\n                    optionId='nproductcode'\r\n                    optionValue='sproductname'\r\n\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nproductcode\"] : \"\"}\r\n\r\n                    onChange={(event) => props.onComboChange(event, 'nproductcode')}\r\n                    isMulti={false}\r\n\r\n                    closeMenuOnSelect={true}\r\n                //alphabeticalSort={true}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_KPIBANDNAME\" })}\r\n                    name={\"skpibandname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_KPIBANDNAME\" })}\r\n                    value={props.selectedRecord[\"skpibandname\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                    readOnly={props.userLogged}\r\n                />\r\n\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormNumericInput\r\n                    name=\"nnumberofdays\"\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMBEROFDAYS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFDAYS\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"nnumberofdays\"]}\r\n                    //max={99}\r\n                    min={0}\r\n                    strict={true}\r\n                    maxLength={5}\r\n                    onChange={(event) => props.onNumericInputOnChange(event, \"nnumberofdays\")}\r\n                    //onChange={(event) => props.onInputOnChange(event, \"nnumberofdays\")}\r\n                    //noStyle={true}\r\n                    precision={0}\r\n                    className=\"form-control\"\r\n                    noStyle={true}\r\n                    isMandatory={true}\r\n                    errors=\"Please provide a valid number.\"\r\n                />\r\n\r\n            </Col>\r\n\r\n            <Col md={6} className={\"p-0\"}>\r\n                <Col md={12}>\r\n                    <FormNumericInput\r\n                        name=\"nbeforewindowperiod\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_BEFOREWINDOWPERIOD\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_BEFOREWINDOWPERIOD\" })}\r\n                        type=\"number\"\r\n                        value={props.selectedRecord[\"nbeforewindowperiod\"]}\r\n                        //max={99}\r\n                        min={0}\r\n                        strict={true}\r\n                        maxLength={5}\r\n                        onChange={(event) => props.onNumericInputOnChange(event, \"nbeforewindowperiod\")}\r\n                        noStyle={true}\r\n                        precision={0}\r\n                        className=\"form-control\"\r\n\r\n                        isMandatory={true}\r\n                        errors=\"Please provide a valid number.\"\r\n                    />\r\n\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n                    <FormNumericInput\r\n                        name=\"nafterwindowperiod\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_AFTERWINDOWPERIOD\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_AFTERWINDOWPERIOD\" })}\r\n                        type=\"number\"\r\n                        value={props.selectedRecord[\"nafterwindowperiod\"]}\r\n                        //max={99}\r\n                        min={0}\r\n                        strict={true}\r\n                        maxLength={5}\r\n                        onChange={(event) => props.onNumericInputOnChange(event, \"nafterwindowperiod\")}\r\n                        noStyle={true}\r\n                        precision={0}\r\n                        className=\"form-control\"\r\n\r\n                        isMandatory={true}\r\n                        errors=\"Please provide a valid number.\"\r\n                    />\r\n\r\n                </Col>\r\n            </Col>\r\n            <Col md={6} className={\"p-0\"}>\r\n                <Col md={12}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_BEFOREPERIODCODE\" })}\r\n                        isSearchable={false}\r\n                        name={\"nbeforeperiodcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={true}\r\n                        options={props.periodList || []}\r\n                        optionId='nperiodcode'\r\n                        optionValue='speriodname'\r\n\r\n                        value={props.selectedRecord ? props.selectedRecord[\"nbeforeperiodcode\"] : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n\r\n                        onChange={(event) => props.onComboChange(event, 'nbeforeperiodcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={12}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_AFTERPERIODCODE\" })}\r\n                        isSearchable={false}\r\n                        name={\"nafterperiodcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={true}\r\n                        options={props.periodList || []}\r\n                        optionId='nperiodcode'\r\n                        optionValue='speriodname'\r\n\r\n                        value={props.selectedRecord ? props.selectedRecord[\"nafterperiodcode\"] : \"\"}\r\n                        showOption={true}\r\n                        required={true}\r\n\r\n                        onChange={(event) => props.onComboChange(event, 'nafterperiodcode')}\r\n                        isMulti={false}\r\n                        closeMenuOnSelect={true}\r\n                    //alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddKpiBand);\r\n"]},"metadata":{},"sourceType":"module"}