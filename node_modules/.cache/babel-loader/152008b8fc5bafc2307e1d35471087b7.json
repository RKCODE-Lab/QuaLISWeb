{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData}from'../components/CommonScript';//getComboLabelValue,, searchData\nimport{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{ColumnType,queryTypeFilter}from'../components/Enumeration';import{format}from'date-fns';export function getRulesEngineAdd(userInfo,rulesengine,inputParam,masterData){var testcomments=[];var reportcomments=[];var predefcomments=[];var sampletestcommentsList=[];var selectedRecord={};var addGroupList=[];return function(dispatch){dispatch(initRequest(true));var url=[];if(rulesengine){url.push(rsapi.post(\"/rulesengine/getdatabasetables\",{userinfo:userInfo}));}else{url.push(rsapi.post(\"/rulesengine/getRulesEngineAdd\",{userinfo:userInfo}));url.push(rsapi.post(\"/grade/getGrade\",{userinfo:userInfo}));url.push(rsapi.post(\"/site/getSite\",{userinfo:userInfo}));url.push(rsapi.post(\"/sampletestcomments/getSampleTestComments\",{userinfo:userInfo}));url.push(rsapi.post(\"/sampletestcomments/getCommentType\",{userinfo:userInfo}));url.push(rsapi.post(\"/sampletestcomments/getCommentSubType\",{userinfo:userInfo}));}Axios.all(url).then(function(response){if(rulesengine){var DiagnosticCase=constructOptionList(response[0].data[\"DiagnosticCase\"]||[],\"ndiagnosticcasecode\",\"sdiagnosticcasename\",false,false,false);var tableListMap=constructOptionList(response[0].data[\"TestParameter\"]||[],\"ntestparametercode\",\"stestparametersynonym\",false,false,false);var Grade=constructOptionList(response[1].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,false);var resultType=constructOptionList(response[0].data[\"ResultType\"]||[],\"nresultypecode\",\"sdisplayname\",undefined,undefined,undefined);var site=constructOptionList(response[2].data||[],\"nsitecode\",\"ssitename\",false,false,false);var CommentType=constructOptionList(response[4].data['CommentType']||[],\"ncommenttypecode\",\"scommenttype\",false,false,false);var commentsubtypelst=response[5].data['CommentSubType'];var w=commentsubtypelst.filter(function(x){return x.ncommentsubtypecode===3||x.ncommentsubtypecode===6;});var CommentSubType=constructOptionList(w||[],\"ncommentsubtypecode\",\"scommentsubtype\",false,false,false);var commentlist=response[3].data;var x=commentlist.filter(function(x){return x.ncommentsubtypecode===1;});var y=commentlist.filter(function(x){return x.ncommentsubtypecode===4;});var z=commentlist.filter(function(x){return x.ncommentsubtypecode===3;});testcomments=constructOptionList(x||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");reportcomments=constructOptionList(y||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");predefcomments=constructOptionList(z||[],\"nsampletestcommentscode\",\"spredefinedname\",false,false,false).get(\"OptionList\");masterData['testParameter']={};masterData['testParameterComments']={};masterData['testParameterreportComments']={};masterData['testComments']={};masterData['reportComments']={};masterData['testSite']={};selectedRecord[\"groupList\"]=[];selectedRecord[\"groupList\"][0]=[];selectedRecord[\"groupList\"][0][\"button_and\"]=true;selectedRecord[\"groupList\"][0][0]={};addGroupList[0]=1;dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({loading:false,operation:'create',databaseTableList:tableListMap.get(\"OptionList\"),DiagnosticCaseList:DiagnosticCase.get(\"OptionList\"),GradeList:Grade.get(\"OptionList\"),siteList:site.get(\"OptionList\"),openPortalModal:true,resultTypeList:resultType.get(\"OptionList\"),screenName:\"IDS_QUERYBUILDER\",rulesengine:rulesengine,testcomments:testcomments,reportcomments:reportcomments},inputParam),{},{siteObject:{},testCommentObject:{},reportCommentObject:{},testInitiateTests:[],testCommentsTests:[],reportCommentsTests:[],testCommentsTestsTab:[],reportCommentsTestsTab:[],testInitiateSiteTab:[],activeTabIndex:0,masterData:masterData,rulesOption:tableListMap.get(\"OptionList\"),testInitiateTestOptions:tableListMap.get(\"OptionList\"),testCommentsTestOptions:tableListMap.get(\"OptionList\"),reportCommentsTestOptions:tableListMap.get(\"OptionList\"),CommentType:CommentType.get(\"OptionList\"),CommentSubType:CommentSubType.get(\"OptionList\"),predefcomments:predefcomments,openModalPopup:false,openmodalsavePopup:false,addGroupList:addGroupList,selectedRecord:selectedRecord,viewColumnListByRule:tableListMap.get(\"OptionList\")})});}else{var _DiagnosticCase=constructOptionList(response[0].data[\"DiagnosticCase\"]||[],\"ndiagnosticcasecode\",\"sdiagnosticcasename\",false,false,false);var _Grade=constructOptionList(response[1].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,false);var viewListMap=constructOptionList(response[0].data[\"TestParameter\"]||[],\"ntestparametercode\",\"stestparametersynonym\",undefined,undefined,undefined);var _resultType=constructOptionList(response[0].data[\"ResultType\"]||[],\"nresultypecode\",\"sdisplayname\",undefined,undefined,undefined);var _site=constructOptionList(response[2].data||[],\"nsitecode\",\"ssitename\",false,false,false);var _CommentType=constructOptionList(response[4].data['CommentType']||[],\"ncommenttypecode\",\"scommenttype\",false,false,false);var _commentsubtypelst=response[5].data['CommentSubType'];var _w=_commentsubtypelst.filter(function(x){return x.ncommentsubtypecode===3||x.ncommentsubtypecode===6;});var _CommentSubType=constructOptionList(_w||[],\"ncommentsubtypecode\",\"scommentsubtype\",false,false,false);var _commentlist=response[3].data;var _x=_commentlist.filter(function(x){return x.ncommentsubtypecode===1;});var _y=_commentlist.filter(function(x){return x.ncommentsubtypecode===4;});var _z=_commentlist.filter(function(x){return x.ncommentsubtypecode===3;});testcomments=constructOptionList(_x||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");reportcomments=constructOptionList(_y||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");predefcomments=constructOptionList(_z||[],\"nsampletestcommentscode\",\"spredefinedname\",false,false,false).get(\"OptionList\");masterData['testParameter']={};masterData['testParameterComments']={};masterData['testParameterreportComments']={};masterData['testComments']={};masterData['reportComments']={};masterData['testSite']={};selectedRecord[\"groupList\"]=[];selectedRecord[\"groupList\"][0]=[];selectedRecord[\"groupList\"][0][\"button_and\"]=true;selectedRecord[\"groupList\"][0][0]={};addGroupList[0]=1;dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({loading:false,operation:'create',databaseviewList:viewListMap.get(\"OptionList\"),testcomments:testcomments,reportcomments:reportcomments,DiagnosticCaseList:_DiagnosticCase.get(\"OptionList\"),GradeList:_Grade.get(\"OptionList\"),siteList:_site.get(\"OptionList\"),resultTypeList:_resultType.get(\"OptionList\"),openPortalModal:true,screenName:\"IDS_ADDRULESENGINE\",rulesengine:rulesengine},inputParam),{},{siteObject:{},testCommentObject:{},reportCommentObject:{},testInitiateTests:[],testCommentsTests:[],reportCommentsTests:[],testCommentsTestsTab:[],reportCommentsTestsTab:[],testInitiateSiteTab:[],activeTabIndex:0,masterData:masterData,rulesOption:viewListMap.get(\"OptionList\"),testInitiateTestOptions:viewListMap.get(\"OptionList\"),testCommentsTestOptions:viewListMap.get(\"OptionList\"),reportCommentsTestOptions:viewListMap.get(\"OptionList\"),CommentType:_CommentType.get(\"OptionList\"),CommentSubType:_CommentSubType.get(\"OptionList\"),predefcomments:predefcomments,openModalPopup:false,openmodalsavePopup:false,addGroupList:addGroupList,selectedRecord:selectedRecord,viewColumnListByRule:viewListMap.get(\"OptionList\")})});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSelectedRulesEngine(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/rulesengine/getSelectedRulesEngine\",{'userinfo':userInfo,\"ntransactionrulesenginecode\":inputParam.ntransactionrulesenginecode,nproductcatcode:masterData.SelectedProductCategory.nproductcatcode}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{SelectedRulesEngine:response.data[\"SelectedRulesEngine\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRulesEngine(nproductcatcode,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/rulesengine/getRulesEngine\",{'userinfo':userInfo,\"nproductcatcode\":nproductcatcode}).then(function(response){masterData=_objectSpread({},response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEditRulesEngine(operation,masterData,ncontrolCode,userInfo){var testcomments=[];var reportcomments=[];var predefcomments=[];return function(dispatch){var urlArray=[];var selectedRecord={};urlArray.push(rsapi.post(\"rulesengine/getEditRulesEngine\",{'ntransactionrulesenginecode':masterData.SelectedRulesEngine['ntransactionrulesenginecode'],'masterData':masterData,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"/grade/getGrade\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/site/getSite\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/sampletestcomments/getSampleTestComments\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/rulesengine/getRulesEngineAdd\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/productcategory/getProductCategory\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/sampletestcomments/getCommentType\",{userinfo:userInfo}));urlArray.push(rsapi.post(\"/sampletestcomments/getCommentSubType\",{userinfo:userInfo}));dispatch(initRequest(true));Axios.all(urlArray).then(function(response){masterData['testParameter']={};masterData['testParameterComments']={};masterData['testParameterreportComments']={};var responsedata=response[0].data;var srulename=responsedata['RulesEngineEdit'][0]['srulename'];var groupList=responsedata['RulesEngineEdit'][0]['jsondata'];var outcomeList=responsedata['RulesEngineEdit'][0]['jsonuidata'];selectedRecord[\"groupList\"]=[];groupList.map(function(ruleslist,index){if(ruleslist.hasOwnProperty('button_or')){selectedRecord[\"groupList\"][index]=ruleslist[\"button_or\"];selectedRecord[\"groupList\"][index][\"button_or\"]=true;}if(ruleslist.hasOwnProperty('button_and')){selectedRecord[\"groupList\"][index]=ruleslist[\"button_and\"];selectedRecord[\"groupList\"][index][\"button_and\"]=true;}if(ruleslist.hasOwnProperty('button_not_button_and')){selectedRecord[\"groupList\"][index]=ruleslist[\"button_not_button_and\"];selectedRecord[\"groupList\"][index][\"button_and\"]=true;selectedRecord[\"groupList\"][index][\"button_not\"]=true;}if(ruleslist.hasOwnProperty('button_not_button_or')){selectedRecord[\"groupList\"][index]=ruleslist[\"button_not_button_or\"];selectedRecord[\"groupList\"][index][\"button_or\"]=true;selectedRecord[\"groupList\"][index][\"button_not\"]=true;}});// if (responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_not_button_and')) {\n//     selectedRecord[\"groupList\"]['button_not'] = true\n// }\n// if (responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_not_button_or')) {\n//     selectedRecord[\"groupList\"]['button_not'] = true\n// }\nif(responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_or')){selectedRecord[\"groupList\"]['button_or']=true;}else{selectedRecord[\"groupList\"]['button_and']=true;}selectedRecord['srulename']=srulename;selectedRecord['srulenamecopy']=srulename;// selectedRecord[\"groupList\"][0][\"button_and\"] = true\nvar addGroupList=[];addGroupList=responsedata['RulesEngineEdit'][0]['jsonuidata']['addGroupList'];var DiagnosticCase=constructOptionList(response[4].data[\"DiagnosticCase\"]||[],\"ndiagnosticcasecode\",\"sdiagnosticcasename\",false,false,false);var Grade=constructOptionList(response[1].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,false);var viewListMap=constructOptionList(response[4].data[\"TestParameter\"]||[],\"ntestparametercode\",\"stestparametersynonym\",undefined,undefined,undefined);var resultType=constructOptionList(response[4].data[\"ResultType\"]||[],\"nresultypecode\",\"sdisplayname\",undefined,undefined,undefined);var site=constructOptionList(response[2].data||[],\"nsitecode\",\"ssitename\",false,false,false);var CommentType=constructOptionList(response[6].data['CommentType']||[],\"ncommenttypecode\",\"scommenttype\",false,false,false);var commentsubtypelst=response[7].data['CommentSubType'];var w=commentsubtypelst.filter(function(x){return x.ncommentsubtypecode===3||x.ncommentsubtypecode===6;});var CommentSubType=constructOptionList(w||[],\"ncommentsubtypecode\",\"scommentsubtype\",false,false,false);var commentlist=response[3].data;var x=commentlist.filter(function(x){return x.ncommentsubtypecode===1;});var y=commentlist.filter(function(x){return x.ncommentsubtypecode===4;});var z=commentlist.filter(function(x){return x.ncommentsubtypecode===3;});testcomments=constructOptionList(x||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");reportcomments=constructOptionList(y||[],\"nsampletestcommentscode\",\"sdescription\",false,false,false).get(\"OptionList\");predefcomments=constructOptionList(z||[],\"nsampletestcommentscode\",\"spredefinedname\",false,false,false).get(\"OptionList\");masterData['testParameter']=outcomeList['testInitiateTests']&&outcomeList['testInitiateTests'];masterData['testParameterComments']=outcomeList['testCommentsTests']&&outcomeList['testCommentsTests'];masterData['testParameterreportComments']=outcomeList['reportCommentsTests']&&outcomeList['reportCommentsTests'];masterData[\"testComments\"]=outcomeList['testCommentObject']&&outcomeList['testCommentObject'];masterData[\"reportComments\"]=outcomeList['reportCommentObject']&&outcomeList['reportCommentObject'];masterData[\"testSite\"]=outcomeList['siteObject']&&outcomeList['siteObject'];selectedRecord[\"nproductcatcode\"]=outcomeList['nproductcatcode']&&outcomeList['nproductcatcode'];selectedRecord[\"groupListJoins\"]=outcomeList['groupListJoins']&&outcomeList['groupListJoins'];dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:\"IDS_EDITRULESENGINE\",selectedRecord:selectedRecord,openPortalModal:true,ncontrolCode:ncontrolCode,loading:false,addGroupList:addGroupList,viewColumnListByRule:viewListMap.get(\"OptionList\"),rulesOption:viewListMap.get(\"OptionList\"),testcomments:testcomments,reportcomments:reportcomments,DiagnosticCaseList:DiagnosticCase.get(\"OptionList\"),GradeList:Grade.get(\"OptionList\"),siteList:site.get(\"OptionList\"),resultTypeList:resultType.get(\"OptionList\"),testInitiateTests:outcomeList['testInitiateTests']&&outcomeList['testInitiateTests'],testCommentsTests:outcomeList['testCommentsTests']&&outcomeList['testCommentsTests'],reportCommentsTests:outcomeList['reportCommentsTests']&&outcomeList['reportCommentsTests'],siteObject:outcomeList['siteObject']&&outcomeList['siteObject'],testCommentObject:outcomeList['testCommentObject']&&outcomeList['testCommentObject'],reportCommentObject:outcomeList['reportCommentObject']&&outcomeList['reportCommentObject'],testInitiateSiteTab:outcomeList['testInitiateSiteTab'],testCommentsTestsTab:outcomeList['testCommentsTestsTab'],reportCommentsTestsTab:outcomeList['reportCommentsTestsTab'],CommentType:CommentType.get(\"OptionList\"),CommentSubType:CommentSubType.get(\"OptionList\"),predefcomments:predefcomments,openModalPopup:false,openmodalsavePopup:false,activeTabIndex:0,action:\"update\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/RuleEngineAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","Axios","initRequest","intl","ColumnType","queryTypeFilter","format","getRulesEngineAdd","userInfo","rulesengine","inputParam","masterData","testcomments","reportcomments","predefcomments","sampletestcommentsList","selectedRecord","addGroupList","dispatch","url","push","post","userinfo","all","then","response","DiagnosticCase","data","tableListMap","Grade","resultType","undefined","site","CommentType","commentsubtypelst","w","filter","x","ncommentsubtypecode","CommentSubType","commentlist","y","z","get","type","payload","loading","operation","databaseTableList","DiagnosticCaseList","GradeList","siteList","openPortalModal","resultTypeList","screenName","siteObject","testCommentObject","reportCommentObject","testInitiateTests","testCommentsTests","reportCommentsTests","testCommentsTestsTab","reportCommentsTestsTab","testInitiateSiteTab","activeTabIndex","rulesOption","testInitiateTestOptions","testCommentsTestOptions","reportCommentsTestOptions","openModalPopup","openmodalsavePopup","viewColumnListByRule","viewListMap","databaseviewList","catch","error","status","message","warn","getSelectedRulesEngine","ntransactionrulesenginecode","nproductcatcode","SelectedProductCategory","SelectedRulesEngine","getRulesEngine","getEditRulesEngine","ncontrolCode","urlArray","responsedata","srulename","groupList","outcomeList","map","ruleslist","index","hasOwnProperty","action","formatMessage","id"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport {\r\n    constructOptionList,\r\n    sortData\r\n} from '../components/CommonScript' //getComboLabelValue,, searchData\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport {\r\n    initRequest\r\n} from './LoginAction';\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport {\r\n    ColumnType,\r\n    queryTypeFilter\r\n} from '../components/Enumeration';\r\nimport { format } from 'date-fns';\r\n\r\nexport function getRulesEngineAdd(userInfo, rulesengine, inputParam, masterData) {\r\n    let testcomments = []\r\n    let reportcomments = []\r\n    let predefcomments = []\r\n    let sampletestcommentsList = []\r\n    let selectedRecord = {}\r\n    let addGroupList = []\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let url = [];\r\n        if (rulesengine) {\r\n            url.push(rsapi.post(\"/rulesengine/getdatabasetables\", {\r\n                userinfo: userInfo\r\n            }));\r\n\r\n        } else {\r\n            url.push(rsapi.post(\"/rulesengine/getRulesEngineAdd\", {\r\n                userinfo: userInfo\r\n            }));\r\n            url.push(rsapi.post(\"/grade/getGrade\", {\r\n                userinfo: userInfo\r\n            }));\r\n            url.push(rsapi.post(\"/site/getSite\", {\r\n                userinfo: userInfo\r\n            }));\r\n            url.push(rsapi.post(\"/sampletestcomments/getSampleTestComments\", {\r\n                userinfo: userInfo\r\n            }));\r\n            url.push(rsapi.post(\"/sampletestcomments/getCommentType\", {\r\n                userinfo: userInfo\r\n            }));\r\n            url.push(rsapi.post(\"/sampletestcomments/getCommentSubType\", {\r\n                userinfo: userInfo\r\n            }));\r\n        }\r\n        Axios.all(url)\r\n            .then(response => {\r\n                if (rulesengine) {\r\n\r\n\r\n                    const DiagnosticCase = constructOptionList(response[0].data[\"DiagnosticCase\"] || [], \"ndiagnosticcasecode\", \"sdiagnosticcasename\", false, false, false);\r\n                    const tableListMap = constructOptionList(response[0].data[\"TestParameter\"] || [], \"ntestparametercode\", \"stestparametersynonym\", false, false, false);\r\n                    const Grade = constructOptionList(response[1].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, false);\r\n                    const resultType = constructOptionList(response[0].data[\"ResultType\"] || [], \"nresultypecode\", \"sdisplayname\", undefined, undefined, undefined);\r\n                    const site = constructOptionList(response[2].data || [], \"nsitecode\", \"ssitename\", false, false, false);\r\n                    const CommentType = constructOptionList(response[4].data['CommentType'] || [], \"ncommenttypecode\", \"scommenttype\", false, false, false);\r\n\r\n\r\n\r\n                    let commentsubtypelst = response[5].data['CommentSubType']\r\n                    let w = commentsubtypelst.filter(x => x.ncommentsubtypecode === 3 || x.ncommentsubtypecode === 6)\r\n                    const CommentSubType = constructOptionList(w || [], \"ncommentsubtypecode\", \"scommentsubtype\", false, false, false);\r\n\r\n                    let commentlist = response[3].data\r\n                    let x = commentlist.filter(x => x.ncommentsubtypecode === 1)\r\n                    let y = commentlist.filter(x => x.ncommentsubtypecode === 4)\r\n                    let z = commentlist.filter(x => x.ncommentsubtypecode === 3)\r\n\r\n                    testcomments = (constructOptionList(x || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                    reportcomments = (constructOptionList(y || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                    predefcomments = (constructOptionList(z || [], \"nsampletestcommentscode\", \"spredefinedname\", false, false, false)).get(\"OptionList\");\r\n\r\n                    masterData['testParameter'] = {}\r\n                    masterData['testParameterComments'] = {}\r\n                    masterData['testParameterreportComments'] = {}\r\n                    masterData['testComments'] = {}\r\n                    masterData['reportComments'] = {}\r\n                    masterData['testSite'] = {}\r\n\r\n                    selectedRecord[\"groupList\"] = [];\r\n                    selectedRecord[\"groupList\"][0] = [];\r\n                    selectedRecord[\"groupList\"][0][\"button_and\"] = true;\r\n                    selectedRecord[\"groupList\"][0][0] = {};\r\n                    addGroupList[0] = 1;\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            operation: 'create',\r\n                            databaseTableList: tableListMap.get(\"OptionList\"),\r\n                            DiagnosticCaseList: DiagnosticCase.get(\"OptionList\"),\r\n                            GradeList: Grade.get(\"OptionList\"),\r\n                            siteList: site.get(\"OptionList\"),\r\n                            openPortalModal: true,\r\n                            resultTypeList: resultType.get(\"OptionList\"),\r\n                            screenName: \"IDS_QUERYBUILDER\",\r\n                            rulesengine,\r\n                            testcomments,\r\n                            reportcomments,\r\n                            ...inputParam,\r\n                            siteObject: {},\r\n                            testCommentObject: {},\r\n                            reportCommentObject: {},\r\n                            testInitiateTests: [],\r\n                            testCommentsTests: [],\r\n                            reportCommentsTests: []\r\n                            ,\r\n\r\n                            testCommentsTestsTab: [],\r\n                            reportCommentsTestsTab: [],\r\n                            testInitiateSiteTab: [],\r\n                            activeTabIndex: 0,\r\n                            masterData,\r\n                            rulesOption: tableListMap.get(\"OptionList\"),\r\n                            testInitiateTestOptions: tableListMap.get(\"OptionList\"),\r\n                            testCommentsTestOptions: tableListMap.get(\"OptionList\"),\r\n                            reportCommentsTestOptions: tableListMap.get(\"OptionList\"),\r\n                            CommentType: CommentType.get(\"OptionList\"),\r\n                            CommentSubType: CommentSubType.get(\"OptionList\"),\r\n                            predefcomments,\r\n                            openModalPopup: false,\r\n                            openmodalsavePopup: false,\r\n                            addGroupList,\r\n                            selectedRecord,\r\n                            viewColumnListByRule: tableListMap.get(\"OptionList\")\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n                    const DiagnosticCase = constructOptionList(response[0].data[\"DiagnosticCase\"] || [], \"ndiagnosticcasecode\", \"sdiagnosticcasename\", false, false, false);\r\n                    const Grade = constructOptionList(response[1].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, false);\r\n                    const viewListMap = constructOptionList(response[0].data[\"TestParameter\"] || [], \"ntestparametercode\", \"stestparametersynonym\", undefined, undefined, undefined);\r\n                    const resultType = constructOptionList(response[0].data[\"ResultType\"] || [], \"nresultypecode\", \"sdisplayname\", undefined, undefined, undefined);\r\n                    const site = constructOptionList(response[2].data || [], \"nsitecode\", \"ssitename\", false, false, false);\r\n                    const CommentType = constructOptionList(response[4].data['CommentType'] || [], \"ncommenttypecode\", \"scommenttype\", false, false, false);\r\n                    let commentsubtypelst = response[5].data['CommentSubType']\r\n                    let w = commentsubtypelst.filter(x => x.ncommentsubtypecode === 3 || x.ncommentsubtypecode === 6)\r\n                    const CommentSubType = constructOptionList(w || [], \"ncommentsubtypecode\", \"scommentsubtype\", false, false, false);\r\n\r\n                    let commentlist = response[3].data\r\n                    let x = commentlist.filter(x => x.ncommentsubtypecode === 1)\r\n                    let y = commentlist.filter(x => x.ncommentsubtypecode === 4)\r\n                    let z = commentlist.filter(x => x.ncommentsubtypecode === 3)\r\n\r\n                    testcomments = (constructOptionList(x || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                    reportcomments = (constructOptionList(y || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                    predefcomments = (constructOptionList(z || [], \"nsampletestcommentscode\", \"spredefinedname\", false, false, false)).get(\"OptionList\");\r\n\r\n                    masterData['testParameter'] = {}\r\n                    masterData['testParameterComments'] = {}\r\n                    masterData['testParameterreportComments'] = {}\r\n                    masterData['testComments'] = {}\r\n                    masterData['reportComments'] = {}\r\n                    masterData['testSite'] = {}\r\n\r\n\r\n                    selectedRecord[\"groupList\"] = [];\r\n                    selectedRecord[\"groupList\"][0] = [];\r\n                    selectedRecord[\"groupList\"][0][\"button_and\"] = true;\r\n                    selectedRecord[\"groupList\"][0][0] = {};\r\n                    addGroupList[0] = 1;\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            operation: 'create',\r\n                            databaseviewList: viewListMap.get(\"OptionList\"),\r\n                            testcomments,\r\n                            reportcomments,\r\n                            DiagnosticCaseList: DiagnosticCase.get(\"OptionList\"),\r\n                            GradeList: Grade.get(\"OptionList\"),\r\n                            siteList: site.get(\"OptionList\"),\r\n                            resultTypeList: resultType.get(\"OptionList\"),\r\n                            openPortalModal: true,\r\n                            screenName: \"IDS_ADDRULESENGINE\",\r\n                            rulesengine,\r\n                            ...inputParam,\r\n\r\n                            siteObject: {},\r\n                            testCommentObject: {},\r\n                            reportCommentObject: {},\r\n                            testInitiateTests: [],\r\n                            testCommentsTests: [],\r\n                            reportCommentsTests: []\r\n                            ,\r\n\r\n                            testCommentsTestsTab: [],\r\n                            reportCommentsTestsTab: [],\r\n                            testInitiateSiteTab: [],\r\n                            activeTabIndex: 0,\r\n                            masterData,\r\n                            rulesOption: viewListMap.get(\"OptionList\"),\r\n                            testInitiateTestOptions: viewListMap.get(\"OptionList\"),\r\n                            testCommentsTestOptions: viewListMap.get(\"OptionList\"),\r\n                            reportCommentsTestOptions: viewListMap.get(\"OptionList\"),\r\n                            CommentType: CommentType.get(\"OptionList\"),\r\n                            CommentSubType: CommentSubType.get(\"OptionList\"),\r\n                            predefcomments,\r\n                            openModalPopup: false,\r\n                            openmodalsavePopup: false,\r\n                            addGroupList,\r\n                            selectedRecord,\r\n                            viewColumnListByRule: viewListMap.get(\"OptionList\")\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSelectedRulesEngine(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/rulesengine/getSelectedRulesEngine\",\r\n            { 'userinfo': userInfo, \"ntransactionrulesenginecode\": inputParam.ntransactionrulesenginecode, nproductcatcode: masterData.SelectedProductCategory.nproductcatcode })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, SelectedRulesEngine: response.data[\"SelectedRulesEngine\"]\r\n                };\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getRulesEngine(nproductcatcode, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/rulesengine/getRulesEngine\",\r\n            { 'userinfo': userInfo, \"nproductcatcode\": nproductcatcode })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...response.data\r\n                };\r\n                sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function getEditRulesEngine(operation, masterData, ncontrolCode, userInfo) {\r\n    let testcomments = []\r\n    let reportcomments = []\r\n    let predefcomments = []\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        let selectedRecord = {}\r\n        urlArray.push(rsapi.post(\"rulesengine/getEditRulesEngine\", {\r\n            'ntransactionrulesenginecode':\r\n                masterData.SelectedRulesEngine['ntransactionrulesenginecode'], 'masterData': masterData, \"userinfo\": userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/grade/getGrade\", {\r\n            userinfo: userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/site/getSite\", {\r\n            userinfo: userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/sampletestcomments/getSampleTestComments\", {\r\n            userinfo: userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/rulesengine/getRulesEngineAdd\", {\r\n            userinfo: userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/productcategory/getProductCategory\", {\r\n            userinfo: userInfo\r\n        }));\r\n\r\n        urlArray.push(rsapi.post(\"/sampletestcomments/getCommentType\", {\r\n            userinfo: userInfo\r\n        }));\r\n        urlArray.push(rsapi.post(\"/sampletestcomments/getCommentSubType\", {\r\n            userinfo: userInfo\r\n        }));\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                masterData['testParameter'] = {}\r\n                masterData['testParameterComments'] = {}\r\n                masterData['testParameterreportComments'] = {}\r\n                let responsedata = response[0].data\r\n                let srulename = responsedata['RulesEngineEdit'][0]['srulename']\r\n                let groupList = responsedata['RulesEngineEdit'][0]['jsondata']\r\n                let outcomeList = responsedata['RulesEngineEdit'][0]['jsonuidata']\r\n                selectedRecord[\"groupList\"] = []\r\n                groupList.map((ruleslist, index) => {\r\n\r\n                    if (ruleslist.hasOwnProperty('button_or')) {\r\n                        selectedRecord[\"groupList\"][index] = ruleslist[\"button_or\"]\r\n                        selectedRecord[\"groupList\"][index][\"button_or\"] = true\r\n                    }\r\n                    if (ruleslist.hasOwnProperty('button_and')) {\r\n                        selectedRecord[\"groupList\"][index] = ruleslist[\"button_and\"]\r\n                        selectedRecord[\"groupList\"][index][\"button_and\"] = true\r\n                    }\r\n                    if (ruleslist.hasOwnProperty('button_not_button_and')) {\r\n                        selectedRecord[\"groupList\"][index] = ruleslist[\"button_not_button_and\"]\r\n                        selectedRecord[\"groupList\"][index][\"button_and\"] = true\r\n                        selectedRecord[\"groupList\"][index][\"button_not\"] = true\r\n                    }\r\n                    if (ruleslist.hasOwnProperty('button_not_button_or')) {\r\n                        selectedRecord[\"groupList\"][index] = ruleslist[\"button_not_button_or\"]\r\n                        selectedRecord[\"groupList\"][index][\"button_or\"] = true\r\n                        selectedRecord[\"groupList\"][index][\"button_not\"] = true\r\n                    }\r\n                })\r\n                // if (responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_not_button_and')) {\r\n                //     selectedRecord[\"groupList\"]['button_not'] = true\r\n                // }\r\n                // if (responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_not_button_or')) {\r\n                //     selectedRecord[\"groupList\"]['button_not'] = true\r\n                // }\r\n                if (responsedata['RulesEngineEdit'][0]['jsondata'].hasOwnProperty('button_or')) {\r\n                    selectedRecord[\"groupList\"]['button_or'] = true\r\n                }\r\n                else {\r\n                    selectedRecord[\"groupList\"]['button_and'] = true\r\n                }\r\n                selectedRecord['srulename'] = srulename\r\n                selectedRecord['srulenamecopy'] = srulename\r\n                // selectedRecord[\"groupList\"][0][\"button_and\"] = true\r\n                let addGroupList = []\r\n                addGroupList = responsedata['RulesEngineEdit'][0]['jsonuidata']['addGroupList']\r\n                const DiagnosticCase = constructOptionList(response[4].data[\"DiagnosticCase\"] || [], \"ndiagnosticcasecode\", \"sdiagnosticcasename\", false, false, false);\r\n                const Grade = constructOptionList(response[1].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, false);\r\n                const viewListMap = constructOptionList(response[4].data[\"TestParameter\"] || [], \"ntestparametercode\", \"stestparametersynonym\", undefined, undefined, undefined);\r\n                const resultType = constructOptionList(response[4].data[\"ResultType\"] || [], \"nresultypecode\", \"sdisplayname\", undefined, undefined, undefined);\r\n                const site = constructOptionList(response[2].data || [], \"nsitecode\", \"ssitename\", false, false, false);\r\n                const CommentType = constructOptionList(response[6].data['CommentType'] || [], \"ncommenttypecode\", \"scommenttype\", false, false, false);\r\n                let commentsubtypelst = response[7].data['CommentSubType']\r\n                let w = commentsubtypelst.filter(x => x.ncommentsubtypecode === 3 || x.ncommentsubtypecode === 6)\r\n                const CommentSubType = constructOptionList(w || [], \"ncommentsubtypecode\", \"scommentsubtype\", false, false, false);\r\n                let commentlist = response[3].data\r\n                let x = commentlist.filter(x => x.ncommentsubtypecode === 1)\r\n                let y = commentlist.filter(x => x.ncommentsubtypecode === 4)\r\n                let z = commentlist.filter(x => x.ncommentsubtypecode === 3)\r\n                testcomments = (constructOptionList(x || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                reportcomments = (constructOptionList(y || [], \"nsampletestcommentscode\", \"sdescription\", false, false, false)).get(\"OptionList\");\r\n                predefcomments = (constructOptionList(z || [], \"nsampletestcommentscode\", \"spredefinedname\", false, false, false)).get(\"OptionList\");\r\n\r\n                masterData['testParameter'] = outcomeList['testInitiateTests'] && outcomeList['testInitiateTests']\r\n                masterData['testParameterComments'] = outcomeList['testCommentsTests'] && outcomeList['testCommentsTests']\r\n                masterData['testParameterreportComments'] = outcomeList['reportCommentsTests'] && outcomeList['reportCommentsTests']\r\n\r\n                masterData[\"testComments\"] = outcomeList['testCommentObject'] && outcomeList['testCommentObject']\r\n                masterData[\"reportComments\"] = outcomeList['reportCommentObject'] && outcomeList['reportCommentObject']\r\n                masterData[\"testSite\"] = outcomeList['siteObject'] && outcomeList['siteObject']\r\n                selectedRecord[\"nproductcatcode\"] = outcomeList['nproductcatcode'] && outcomeList['nproductcatcode']\r\n                selectedRecord[\"groupListJoins\"] = outcomeList['groupListJoins'] && outcomeList['groupListJoins']\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        operation: operation, screenName: \"IDS_EDITRULESENGINE\", selectedRecord,\r\n                        openPortalModal: true, ncontrolCode: ncontrolCode, loading: false, addGroupList,\r\n\r\n                        viewColumnListByRule: viewListMap.get(\"OptionList\"),\r\n                        rulesOption: viewListMap.get(\"OptionList\"),\r\n                        testcomments,\r\n                        reportcomments,\r\n                        DiagnosticCaseList: DiagnosticCase.get(\"OptionList\"),\r\n                        GradeList: Grade.get(\"OptionList\"),\r\n                        siteList: site.get(\"OptionList\"),\r\n                        resultTypeList: resultType.get(\"OptionList\"),\r\n                        testInitiateTests: outcomeList['testInitiateTests'] && outcomeList['testInitiateTests'],\r\n                        testCommentsTests: outcomeList['testCommentsTests'] && outcomeList['testCommentsTests'],\r\n                        reportCommentsTests: outcomeList['reportCommentsTests'] && outcomeList['reportCommentsTests'],\r\n                        siteObject: outcomeList['siteObject'] && outcomeList['siteObject'],\r\n                        testCommentObject: outcomeList['testCommentObject'] && outcomeList['testCommentObject'],\r\n                        reportCommentObject: outcomeList['reportCommentObject'] && outcomeList['reportCommentObject'],\r\n                        testInitiateSiteTab: outcomeList['testInitiateSiteTab'],\r\n                        testCommentsTestsTab: outcomeList['testCommentsTestsTab'],\r\n                        reportCommentsTestsTab: outcomeList['reportCommentsTestsTab'],\r\n                        CommentType: CommentType.get(\"OptionList\"),\r\n                        CommentSubType: CommentSubType.get(\"OptionList\"),\r\n                        predefcomments,\r\n                        openModalPopup: false,\r\n                        openmodalsavePopup: false,\r\n                        activeTabIndex: 0,\r\n                        action: \"update\"\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}