{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingusertechniqueview\\\\UserTechniqueView.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { callService, filterColumnData, getUserTechniqueViewDetail, changeUserTechniqueViewFilter, getUserTechniqueViewFilterChange } from '../../../actions';\nimport ListMaster from '../../../components/list-master/list-master.component';\nimport ReactTooltip from 'react-tooltip';\nimport { convertDateValuetoString, getControlMap, constructOptionList, formatInputDate } from '../../../components/CommonScript';\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport UserTechniqueViewDateFilter from '../../../pages/competencemanagement/trainingusertechniqueview/UserTechniqueViewDateFilter';\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass UserTechniqueView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (fieldName === \"ntechniquecode\") {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord['ntechniquecode'] = comboData;\n        this.props.getUserTechniqueViewFilterChange(comboData.item.ntechniquecode, this.props.Login.masterData, this.props.Login.userInfo);\n      } else if (fieldName === \"nusercode\") {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[\"nusercode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      let fromDate = this.props.Login.masterData.FromDate;\n      let toDate = this.props.Login.masterData.ToDate;\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\n        fromDate = selectedRecord[\"fromdate\"];\n      }\n\n      if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\n        toDate = selectedRecord[\"todate\"];\n      }\n\n      let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\n      let inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo,\n          fromDate: obj.fromDate,\n          toDate: obj.toDate,\n          currentDate: null,\n          ntechniquecode: this.state.selectedRecord['ntechniquecode'].value,\n          nusercode: this.state.selectedRecord['nusercode'].value,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"usertechniqueview\",\n        methodUrl: \"UserTechniqueByFilter\",\n        displayName: \"IDS_USERTECHNIQUEVIEW\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.changeUserTechniqueViewFilter(inputParam, this.props.Login.masterData.filterTechnique, this.props.Login.masterData.filterUsers);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let fromDate = this.props.Login.masterData.FromDate;\n      let toDate = this.props.Login.masterData.ToDate;\n      let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\n      let inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          currentdate: formatInputDate(new Date(), true)\n        },\n        classUrl: \"usertechniqueview\",\n        methodUrl: \"UserTechniqueView\",\n        userInfo: this.props.Login.userInfo,\n        displayName: \"IDS_USERTECHNIQUEVIEW\"\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      selectedRecord: {},\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"strainingvenue\", \"strainingtopic\", \"strainername\", \"susername\"];\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || this.props.Login.masterData && this.props.Login.masterData.FromDate, this.state.selectedRecord[\"todate\"] || this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    let fromDate = obj.fromDate;\n    let toDate = obj.toDate;\n    const filterParam = {\n      inputListName: \"UserTechniqueView\",\n      selectedObject: \"SelectedUserTechniqueView\",\n      primaryKeyField: \"nparticipantcode\",\n      fetchUrl: \"usertechniqueview/getUserTechniqueViewDetails\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    let breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      searchRef: this.searchRef,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_USERTECHNIQUEVIEW\"\n      }),\n      userRoleControlRights: this.state.userRoleControlRights,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.UserTechniqueView,\n      showFilter: this.props.Login.showFilter,\n      showFilterIcon: true,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      reloadData: this.reloadData,\n      getMasterDetail: UserTechniqueView => this.props.getUserTechniqueViewDetail(UserTechniqueView, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedUserTechniqueView,\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      primaryKeyField: \"nparticipantcode\",\n      mainField: \"susername\",\n      firstField: \"strainingtopic\",\n      secondField: \"stechniquename\",\n      filterComponent: [{\n        \"IDS_USERTECHNIQUEVIEWFILTER\": /*#__PURE__*/React.createElement(UserTechniqueViewDateFilter, {\n          selectedRecord: this.state.selectedRecord || {},\n          value: this.state.value || {},\n          handleDateChange: this.handleDateChange,\n          fromDate: fromDate,\n          toDate: toDate,\n          userInfo: this.props.Login.userInfo //onFilterChange={this.onFilterChange}\n          ,\n          filterTechnique: this.state.filterTechnique || [],\n          filterUsers: this.state.filterUsers || [],\n          onComboChange: this.onComboChange,\n          handleFilterDateChange: this.handleFilterDateChange,\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || {},\n          FilterStatus: this.state.stateFilterStatus || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.UserTechniqueView && this.props.Login.masterData.UserTechniqueView.length > 0 && this.props.Login.masterData.SelectedUserTechniqueView ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.susername), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 40\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PARITCIPANTNAME\",\n      message: \"Patient Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.susername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGTOPIC\",\n      message: \"Training Topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.strainingtopic))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TECHNIQUE\",\n      message: \"Technique\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.stechniquename))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAINERNAME\",\n      message: \"Trainer Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.strainername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGVENUE\",\n      message: \"Training Venue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.SelectedUserTechniqueView.strainingvenue)))))) : \"\"))))));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n    let object = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    breadCrumbData.push({\n      \"label\": \"IDS_FROM\",\n      \"value\": object.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": object.breadCrumbto\n    }, {\n      \"label\": \"IDS_TECHNIQUE\",\n      \"value\": this.props.Login.masterData.SelectedTechnique ? this.props.Login.masterData.SelectedTechnique[\"stechniquename\"] : \"NA\"\n    }, {\n      \"label\": \"IDS_USER\",\n      \"value\": this.props.Login.masterData.SelectedUsers ? this.props.Login.masterData.SelectedUsers[\"susername\"] : \"NA\"\n    });\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let isComponentUpdated = false;\n    let selectedRecord = this.state.selectedRecord || {};\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      isComponentUpdated = true;\n    }\n\n    let userRoleControlRights = this.state.userRoleControlRights || [];\n    let controlMap = this.state.controlMap || new Map();\n\n    if (this.props.Login.userInfo && this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const nformCode = this.props.Login.userInfo.nformcode;\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[nformCode] && Object.values(this.props.Login.userRoleControlRights[nformCode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, nformCode);\n      isComponentUpdated = true;\n    }\n\n    let filterTechnique = this.state.filterTechnique || {};\n    let filterUsers = this.state.filterUsers || {};\n\n    if (this.props.Login.masterData.filterTechnique !== previousProps.Login.masterData.filterTechnique) {\n      const trainingupdateMap = constructOptionList(this.props.Login.masterData.filterTechnique || [], \"ntechniquecode\", \"stechniquename\", 'ntechniquecode', 'ascending', false);\n      filterTechnique = trainingupdateMap.get(\"OptionList\");\n      selectedRecord['ntechniquecode'] = this.props.Login.masterData.filterTechnique && this.props.Login.masterData.filterTechnique.length > 0 ? {\n        \"value\": this.props.Login.masterData.filterTechnique[0].ntechniquecode,\n        \"label\": this.props.Login.masterData.filterTechnique[0].stechniquename\n      } : \"\";\n      isComponentUpdated = true;\n    }\n\n    if (this.props.Login.masterData.filterUsers !== previousProps.Login.masterData.filterUsers) {\n      const usersmap = constructOptionList(this.props.Login.masterData.filterUsers || [], \"nusercode\", \"susername\", 'nusercode', 'ascending', false);\n      filterUsers = usersmap.get(\"OptionList\");\n      selectedRecord['nusercode'] = this.props.Login.masterData.filterUsers && this.props.Login.masterData.filterUsers.length > 0 ? {\n        \"value\": this.props.Login.masterData.filterUsers[0].nusercode,\n        \"label\": this.props.Login.masterData.filterUsers[0].susername\n      } : \"\";\n      isComponentUpdated = true;\n    }\n\n    if (isComponentUpdated) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        filterTechnique,\n        filterUsers\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  filterColumnData,\n  getUserTechniqueViewDetail,\n  changeUserTechniqueViewFilter,\n  getUserTechniqueViewFilterChange\n})(injectIntl(UserTechniqueView));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/trainingusertechniqueview/UserTechniqueView.jsx"],"names":["React","Component","Row","Col","Card","FormGroup","FormLabel","connect","injectIntl","FormattedMessage","callService","filterColumnData","getUserTechniqueViewDetail","changeUserTechniqueViewFilter","getUserTechniqueViewFilterChange","ListMaster","ReactTooltip","convertDateValuetoString","getControlMap","constructOptionList","formatInputDate","DEFAULT_RETURN","BreadcrumbComponent","Affix","UserTechniqueViewDateFilter","ReadOnlyText","ContentPanel","mapStateToProps","state","Login","UserTechniqueView","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onComboChange","comboData","fieldName","item","ntechniquecode","masterData","userInfo","onFilterSubmit","searchRef","current","value","fromDate","FromDate","toDate","ToDate","undefined","obj","inputParam","inputData","currentDate","nusercode","userinfo","classUrl","methodUrl","displayName","filterTechnique","filterUsers","reloadData","currentdate","Date","userRoleControlRights","controlMap","Map","createRef","searchFieldList","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","breadCrumbData","filterData","length","intl","formatMessage","id","searchedData","showFilter","openFilter","closeFilter","SelectedUserTechniqueView","handleFilterDateChange","FilterStatusValue","stateFilterStatus","susername","strainingtopic","stechniquename","strainername","strainingvenue","generateBreadCrumData","object","push","breadCrumbFrom","breadCrumbto","SelectedTechnique","SelectedUsers","componentDidUpdate","previousProps","isComponentUpdated","nformcode","nformCode","Object","values","map","ncontrolcode","trainingupdateMap","get","usersmap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col,Card,FormGroup, FormLabel} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport { callService,filterColumnData,getUserTechniqueViewDetail,changeUserTechniqueViewFilter,getUserTechniqueViewFilterChange } from '../../../actions';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { convertDateValuetoString, getControlMap,constructOptionList,formatInputDate  } from '../../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport UserTechniqueViewDateFilter from '../../../pages/competencemanagement/trainingusertechniqueview/UserTechniqueViewDateFilter';\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\n \r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass UserTechniqueView extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        }\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"strainingvenue\", \"strainingtopic\", \"strainername\",\"susername\"]\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n            this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n            this.props.Login.userInfo)\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const filterParam = {\r\n            inputListName: \"UserTechniqueView\", selectedObject: \"SelectedUserTechniqueView\", primaryKeyField: \"nparticipantcode\",\r\n            fetchUrl: \"usertechniqueview/getUserTechniqueViewDetails\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        let breadCrumbData = this.state.filterData || [];\r\n\r\n        return(\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                }\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                    <Row noGutters={true}>\r\n                    <Col md={4}>\r\n                    <ListMaster \r\n                                searchRef={this.searchRef}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_USERTECHNIQUEVIEW\" })}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.UserTechniqueView}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                showFilterIcon={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                reloadData={this.reloadData}\r\n                                getMasterDetail={(UserTechniqueView) => this.props.getUserTechniqueViewDetail(UserTechniqueView, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedUserTechniqueView}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                primaryKeyField=\"nparticipantcode\"\r\n                                mainField=\"susername\"\r\n                                firstField=\"strainingtopic\"\r\n                                secondField=\"stechniquename\"\r\n                                filterComponent={[\r\n                                    {\r\n                                      \"IDS_USERTECHNIQUEVIEWFILTER\": (\r\n                                        <UserTechniqueViewDateFilter\r\n                                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                                    value={this.state.value || {}}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    fromDate={fromDate}\r\n                                                    toDate={toDate}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    //onFilterChange={this.onFilterChange}\r\n\r\n                                                    filterTechnique={this.state.filterTechnique || []}\r\n                                                    filterUsers={this.state.filterUsers || []}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    handleFilterDateChange={this.handleFilterDateChange}\r\n                                                    FilterStatusValue={this.props.Login.masterData.FilterStatusValue || {}}\r\n                                                    FilterStatus={this.state.stateFilterStatus || []}\r\n\r\n\r\n                                                    \r\n                                                  \r\n\r\n\r\n                                                   \r\n                                                />\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                \r\n\r\n                                \r\n                           \r\n                            />\r\n                    </Col>\r\n                    <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                {this.props.Login.masterData.UserTechniqueView && this.props.Login.masterData.UserTechniqueView.length > 0 && this.props.Login.masterData.SelectedUserTechniqueView ?\r\n                                <>\r\n                                   <Card.Header>\r\n                                     <Card.Title>\r\n                                       {this.props.Login.masterData.SelectedUserTechniqueView.susername}\r\n\r\n                                     </Card.Title>\r\n                                     <Card.Subtitle>\r\n                                     <div className=\"d-flex product-category\">\r\n                                       <h2 className=\"product-title-sub flex-grow-1\">\r\n                                            \r\n                                       </h2>\r\n                                       \r\n                                     </div>\r\n                                     </Card.Subtitle>\r\n  \r\n                                    </Card.Header>   \r\n                                    <Card.Body className=\"form-static-wrap\">\r\n                                        <Row>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_PARITCIPANTNAME\" message=\"Patient Name\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.Login.masterData.SelectedUserTechniqueView.susername}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGTOPIC\" message=\"Training Topic\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.Login.masterData.SelectedUserTechniqueView.strainingtopic}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_TECHNIQUE\" message=\"Technique\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.Login.masterData.SelectedUserTechniqueView.stechniquename}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_TRAINERNAME\" message=\"Trainer Name\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.Login.masterData.SelectedUserTechniqueView.strainername}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGVENUE\" message=\"Training Venue\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.Login.masterData.SelectedUserTechniqueView.strainingvenue}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        \r\n\r\n\r\n                                    </Card.Body>\r\n\r\n                                </>:\"\"\r\n                                }\r\n                                </Card>\r\n                            </ContentPanel>   \r\n                            </Col>\r\n                    </Row>\r\n                    \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n \r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if(fieldName === \"ntechniquecode\"){\r\n\r\n            const selectedRecord =this.state.selectedRecord || {};\r\n            selectedRecord['ntechniquecode']=comboData;\r\n            this.props.getUserTechniqueViewFilterChange(comboData.item.ntechniquecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n           \r\n        }else if(fieldName === \"nusercode\"){\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[\"nusercode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n           \r\n          \r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n            fromDate = selectedRecord[\"fromdate\"];\r\n        }\r\n        if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n            toDate = selectedRecord[\"todate\"];\r\n        }\r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n        let inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                currentDate: null,\r\n                ntechniquecode: this.state.selectedRecord['ntechniquecode'].value,\r\n                nusercode: this.state.selectedRecord['nusercode'].value,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n\r\n            classUrl: \"usertechniqueview\",\r\n            methodUrl: \"UserTechniqueByFilter\",\r\n            displayName: \"IDS_USERTECHNIQUEVIEW\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.changeUserTechniqueViewFilter(inputParam, this.props.Login.masterData.filterTechnique,this.props.Login.masterData.filterUsers);\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n            let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n            let inputParam = {\r\n                inputData: {\r\n\r\n                    userinfo: this.props.Login.userInfo,\r\n                    currentdate: formatInputDate(new Date(), true)\r\n                },\r\n                classUrl: \"usertechniqueview\",\r\n                methodUrl: \"UserTechniqueView\",\r\n                userInfo: this.props.Login.userInfo,\r\n                displayName:\"IDS_USERTECHNIQUEVIEW\"\r\n\r\n            };\r\n            this.props.callService(inputParam);\r\n    }\r\n\r\n      generateBreadCrumData() {\r\n          const breadCrumbData = [];\r\n          let object =convertDateValuetoString(this.props.Login.masterData.FromDate,this.props.Login.masterData.ToDate,this.props.Login.userInfo)\r\n            breadCrumbData.push(\r\n              {\r\n                    \"label\":\"IDS_FROM\",\r\n                    \"value\":object.breadCrumbFrom\r\n              },\r\n              {\r\n                    \"label\":\"IDS_TO\",\r\n                    \"value\":object.breadCrumbto\r\n              },\r\n              {\r\n                    \"label\":\"IDS_TECHNIQUE\",\r\n                    \"value\": this.props.Login.masterData.SelectedTechnique ? this.props.Login.masterData.SelectedTechnique[\"stechniquename\"]: \"NA\"\r\n               },\r\n               {\r\n                    \"label\":\"IDS_USER\",\r\n                    \"value\": this.props.Login.masterData.SelectedUsers ? this.props.Login.masterData.SelectedUsers[\"susername\"]: \"NA\"\r\n               }\r\n\r\n         );\r\n          return breadCrumbData;\r\n        }\r\n      \r\n\r\n        componentDidUpdate(previousProps) {\r\n            let isComponentUpdated = false;\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                selectedRecord = this.props.Login.selectedRecord;\r\n                isComponentUpdated = true;\r\n            }\r\n    \r\n            let userRoleControlRights = this.state.userRoleControlRights || [];\r\n            let controlMap = this.state.controlMap || new Map();\r\n            if (this.props.Login.userInfo && this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const nformCode = this.props.Login.userInfo.nformcode;\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[nformCode] && Object.values(this.props.Login.userRoleControlRights[nformCode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode));\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, nformCode);\r\n                isComponentUpdated = true;\r\n            }\r\n            let filterTechnique = this.state.filterTechnique || {};\r\n            let filterUsers = this.state.filterUsers || {};\r\n    \r\n           \r\n\r\n            if (this.props.Login.masterData.filterTechnique !== previousProps.Login.masterData.filterTechnique) {\r\n                const trainingupdateMap = constructOptionList(this.props.Login.masterData.filterTechnique || [], \"ntechniquecode\",\r\n                                          \"stechniquename\", 'ntechniquecode', 'ascending', false);\r\n              filterTechnique = trainingupdateMap.get(\"OptionList\");\r\n\r\n               \r\n              selectedRecord['ntechniquecode']= this.props.Login.masterData.filterTechnique && this.props.Login.masterData.filterTechnique.length > 0 ? {\r\n                                                \"value\": this.props.Login.masterData.filterTechnique[0].ntechniquecode,\r\n                                                \"label\": this.props.Login.masterData.filterTechnique[0].stechniquename\r\n                    } : \"\"\r\n               isComponentUpdated = true;\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.filterUsers !== previousProps.Login.masterData.filterUsers) {\r\n                const usersmap = constructOptionList(this.props.Login.masterData.filterUsers || [], \"nusercode\",\r\n                                          \"susername\", 'nusercode', 'ascending', false);\r\n                                          filterUsers = usersmap.get(\"OptionList\");\r\n\r\n               \r\n                selectedRecord['nusercode']= this.props.Login.masterData.filterUsers && this.props.Login.masterData.filterUsers.length > 0 ? {\r\n                                             \"value\": this.props.Login.masterData.filterUsers[0].nusercode,\r\n                                             \"label\": this.props.Login.masterData.filterUsers[0].susername\r\n                    } : \"\"\r\n                \r\n                isComponentUpdated = true;\r\n            }\r\n\r\n            if (isComponentUpdated) {\r\n                this.setState({ userRoleControlRights, controlMap, selectedRecord, filterTechnique,filterUsers });\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n                const filterData = this.generateBreadCrumData();\r\n                this.setState({ filterData });\r\n            }\r\n        }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService,filterColumnData,getUserTechniqueViewDetail,changeUserTechniqueViewFilter,getUserTechniqueViewFilterChange\r\n})(injectIntl(UserTechniqueView));\r\n"]},"metadata":{},"sourceType":"module"}