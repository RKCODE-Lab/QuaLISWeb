{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateValue = exports.validateTree = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _configUtils = require(\"./configUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _defaultUtils = require(\"../utils/defaultUtils\");\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _immutable = require(\"immutable\");\n\nvar typeOf = function typeOf(v) {\n  if ((0, _typeof2[\"default\"])(v) == \"object\" && v !== null && Array.isArray(v)) return \"array\";else return (0, _typeof2[\"default\"])(v);\n};\n\nvar isTypeOf = function isTypeOf(v, type) {\n  if (typeOf(v) == type) return true;\n  if (type == \"number\" && !isNaN(v)) return true; //can be casted\n\n  return false;\n};\n\nvar validateTree = function validateTree(tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n\n  var c = {\n    config: config,\n    oldConfig: oldConfig,\n    removeEmptyGroups: removeEmptyGroups,\n    removeIncompleteRules: removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nexports.validateTree = validateTree;\n\nfunction validateItem(item, path, itemId, meta, c) {\n  var type = item.get(\"type\");\n  var children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup(item, path, itemId, meta, c) {\n  var removeEmptyGroups = c.removeEmptyGroups;\n  var id = item.get(\"id\");\n  var children = item.get(\"children1\");\n  var oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  } //validate children\n\n\n  var submeta = {};\n  children = children.map(function (currentChild, childId) {\n    return validateItem(currentChild, path.concat(id), childId, submeta, c);\n  });\n  if (removeEmptyGroups) children = children.filter(function (currentChild) {\n    return currentChild != undefined;\n  });\n  var sanitized = submeta.sanitized || oldChildren.size != children.size;\n\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized) meta.sanitized = true;\n  if (sanitized && item) item = item.set(\"children1\", children);\n  return item;\n}\n\nfunction validateRule(item, path, itemId, meta, c) {\n  var removeIncompleteRules = c.removeIncompleteRules,\n      config = c.config,\n      oldConfig = c.oldConfig;\n  var showErrorMessage = config.settings.showErrorMessage;\n  var id = item.get(\"id\");\n  var properties = item.get(\"properties\");\n  var field = properties.get(\"field\") || null;\n  var operator = properties.get(\"operator\") || null;\n  var operatorOptions = properties.get(\"operatorOptions\");\n  var valueSrc = properties.get(\"valueSrc\");\n  var value = properties.get(\"value\");\n  var valueError = properties.get(\"valueError\");\n  var oldSerialized = {\n    field: field,\n    operator: operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null\n  };\n\n  var _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  } //validate field\n\n\n  var fieldDefinition = field ? (0, _configUtils.getFieldConfig)(config, field) : null;\n\n  if (field && !fieldDefinition) {\n    _stuff.logger.warn(\"No config for field \".concat(field));\n\n    field = null;\n  }\n\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce(function (map, key) {\n      return map[\"delete\"](key);\n    }, properties);\n    operator = null;\n  } //validate operator\n  // Backward compatibility: obsolete operator range_between\n\n\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(\"Fixed operator \".concat(properties.get(\"operator\"), \" to \").concat(operator));\n    properties = properties.set(\"operator\", operator);\n  }\n\n  var operatorDefinition = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n\n  if (operator && !operatorDefinition) {\n    console.warn(\"No config for operator \".concat(operator));\n    operator = null;\n  }\n\n  var availOps = field ? (0, _ruleUtils.getOperatorsForField)(config, field) : [];\n\n  if (!availOps) {\n    console.warn(\"Type of field \".concat(field, \" is not supported\"));\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(\"Fixed operator \".concat(properties.get(\"operator\"), \" to \").concat(operator, \" for \").concat(field));\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(\"Operator \".concat(operator, \" is not supported for field \").concat(field));\n      operator = null;\n    }\n  }\n\n  if (operator == null) {\n    properties = properties[\"delete\"](\"operatorOptions\");\n    properties = properties[\"delete\"](\"valueSrc\");\n    properties = properties[\"delete\"](\"value\");\n  } //validate operator options\n\n\n  operatorOptions = properties.get(\"operatorOptions\");\n\n  var _operatorCardinality = operator ? (0, _stuff.defaultValue)(operatorDefinition.cardinality, 1) : null;\n\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties[\"delete\"](\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = (0, _defaultUtils.defaultOperatorOptions)(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  } //validate values\n\n\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n\n  var _getNewValueForFieldO = (0, _ruleUtils.getNewValueForFieldOp)(config, oldConfig, properties, field, operator, null, true),\n      newValue = _getNewValueForFieldO.newValue,\n      newValueSrc = _getNewValueForFieldO.newValueSrc,\n      newValueError = _getNewValueForFieldO.newValueError;\n\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  var newSerialized = {\n    field: field,\n    operator: operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null\n  };\n  var sanitized = !(0, _stuff.deepEqual)(oldSerialized, newSerialized);\n  var isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized) meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules) item = undefined;else if (sanitized) item = item.set(\"properties\", properties);\n  return item;\n}\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\n\n\nvar validateValue = function validateValue(config, leftField, field, operator, value, valueType, valueSrc, asyncListValues) {\n  var canFix = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var isEndValue = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var isRawValue = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : true;\n  var validError = null;\n  var fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      var _validateFieldValue = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateFieldValue2 = (0, _slicedToArray2[\"default\"])(_validateFieldValue, 2);\n\n      validError = _validateFieldValue2[0];\n      fixedValue = _validateFieldValue2[1];\n    } else if (valueSrc == \"func\") {\n      var _validateFuncValue = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateFuncValue2 = (0, _slicedToArray2[\"default\"])(_validateFuncValue, 2);\n\n      validError = _validateFuncValue2[0];\n      fixedValue = _validateFuncValue2[1];\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      var _validateNormalValue = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateNormalValue2 = (0, _slicedToArray2[\"default\"])(_validateNormalValue, 2);\n\n      validError = _validateNormalValue2[0];\n      fixedValue = _validateNormalValue2[1];\n    }\n\n    if (!validError) {\n      var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n      var w = (0, _ruleUtils.getWidgetForFieldOp)(config, field, operator, valueSrc);\n      var operatorDefinition = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n      var fieldWidgetDefinition = (0, _omit[\"default\"])((0, _configUtils.getFieldWidgetConfig)(config, field, operator, w, valueSrc), [\"factory\"]);\n      var rightFieldDefinition = valueSrc == \"field\" ? (0, _configUtils.getFieldConfig)(config, value) : null;\n      var fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      var fn = fieldWidgetDefinition.validateValue;\n\n      if (typeof fn == \"function\") {\n        var args = [fixedValue, fieldSettings, operator, operatorDefinition];\n        if (valueSrc == \"field\") args.push(rightFieldDefinition);\n        var validResult = fn.apply(void 0, args);\n\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false) validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", \"Field \".concat(field, \": \").concat(validError));\n  }\n\n  return [validError, validError ? value : fixedValue];\n};\n\nexports.validateValue = validateValue;\n\nvar validateValueInList = function validateValueInList(value, listValues) {\n  var values = _immutable.List.isList(value) ? value.toJS() : value instanceof Array ? (0, _toConsumableArray2[\"default\"])(value) : undefined;\n\n  if (values) {\n    for (var i = 0; i < values.length; i++) {\n      var vv = (0, _stuff.getItemInListValues)(listValues, values[i]);\n\n      if (vv == undefined) {\n        return [\"Value \".concat(value[i], \" is not in list of values\"), values];\n      } else {\n        values[i] = vv.value;\n      }\n    }\n\n    return [null, values];\n  } else {\n    var _vv = (0, _stuff.getItemInListValues)(listValues, value);\n\n    if (_vv == undefined) {\n      return [\"Value \".concat(value, \" is not in list of values\"), value];\n    } else {\n      value = _vv.value;\n    }\n\n    return [null, value];\n  }\n};\n/**\n* \n*/\n\n\nvar validateNormalValue = function validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fixedValue = value;\n\n  if (field) {\n    var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n    var w = (0, _ruleUtils.getWidgetForFieldOp)(config, field, operator, valueSrc);\n    var wConfig = config.widgets[w];\n    var wType = wConfig.type;\n    var jsType = wConfig.jsType;\n    var fieldSettings = fieldConfig.fieldSettings;\n    if (valueType != wType) return [\"Value should have type \".concat(wType, \", but got value of type \").concat(valueType), value];\n\n    if (jsType && !isTypeOf(value, jsType) && !fieldSettings.listValues) {\n      //tip: can skip tye check for listValues\n      return [\"Value should have JS type \".concat(jsType, \", but got value of type \").concat((0, _typeof2[\"default\"])(value)), value];\n    }\n\n    if (fieldSettings) {\n      var listValues = asyncListValues || fieldSettings.listValues;\n\n      if (listValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, listValues);\n      }\n\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [\"Value \".concat(value, \" < min \").concat(fieldSettings.min), value];\n      }\n\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [\"Value \".concat(value, \" > max \").concat(fieldSettings.max), value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n/**\n* \n*/\n\n\nvar validateFieldValue = function validateFieldValue(leftField, field, value, _valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fieldSeparator = config.settings.fieldSeparator;\n  var isFuncArg = (0, _typeof2[\"default\"])(field) == \"object\" && (field === null || field === void 0 ? void 0 : field._isFuncArg);\n  var leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  var rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  var rightFieldDefinition = (0, _configUtils.getFieldConfig)(config, value);\n  if (!rightFieldDefinition) return [\"Unknown field \".concat(value), value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg) return [\"Can't compare field \".concat(leftField, \" with itself\"), value];\n  if (valueType && valueType != rightFieldDefinition.type) return [\"Field \".concat(value, \" is of type \").concat(rightFieldDefinition.type, \", but expected \").concat(valueType), value];\n  return [null, value];\n};\n/**\n* \n*/\n\n\nvar validateFuncValue = function validateFuncValue(leftField, field, value, _valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fixedValue = value;\n\n  if (value) {\n    var funcKey = value.get(\"func\");\n\n    if (funcKey) {\n      var funcConfig = (0, _configUtils.getFuncConfig)(config, funcKey);\n\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType) return [\"Function \".concat(funcKey, \" should return value of type \").concat(funcConfig.returnType, \", but got \").concat(valueType), value];\n\n        for (var argKey in funcConfig.args) {\n          var argConfig = funcConfig.args[argKey];\n          var args = fixedValue.get(\"args\");\n          var argVal = args ? args.get(argKey) : undefined;\n          var fieldDef = (0, _configUtils.getFieldConfig)(config, argConfig);\n          var argValue = argVal ? argVal.get(\"value\") : undefined;\n          var argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n\n          if (argValue !== undefined) {\n            var _validateValue = validateValue(config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false),\n                _validateValue2 = (0, _slicedToArray2[\"default\"])(_validateValue, 2),\n                argValidError = _validateValue2[0],\n                fixedArgVal = _validateValue2[1];\n\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [\"Invalid value of arg \".concat(argKey, \" for func \").concat(funcKey, \": \").concat(argValidError), value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [\"Value of arg \".concat(argKey, \" for func \").concat(funcKey, \" is required\"), value];\n          }\n        }\n      } else return [\"Unknown function \".concat(funcKey), value];\n    } // else it's not function value\n\n  } // empty value\n\n\n  return [null, fixedValue];\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/utils/validation.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","validateValue","validateTree","_toConsumableArray2","_slicedToArray2","_typeof2","_configUtils","_ruleUtils","_stuff","_defaultUtils","_omit","_immutable","typeOf","v","Array","isArray","isTypeOf","type","isNaN","tree","_oldTree","config","oldConfig","removeEmptyGroups","removeIncompleteRules","undefined","settings","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","c","validateItem","item","path","itemId","meta","get","children","size","validateGroup","validateRule","id","oldChildren","set","sanitized","submeta","map","currentChild","childId","concat","filter","length","showErrorMessage","properties","field","operator","operatorOptions","valueSrc","valueError","oldSerialized","toJS","_wasValid","includes","fieldDefinition","getFieldConfig","logger","warn","reduce","key","console","info","operatorDefinition","getOperatorConfig","availOps","getOperatorsForField","indexOf","_operatorCardinality","defaultValue","cardinality","options","defaultOperatorOptions","_getNewValueForFieldO","getNewValueForFieldOp","newValue","newValueSrc","newValueError","newSerialized","deepEqual","isComplete","leftField","valueType","asyncListValues","canFix","arguments","isEndValue","isRawValue","validError","fixedValue","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fieldConfig","w","getWidgetForFieldOp","fieldWidgetDefinition","getFieldWidgetConfig","rightFieldDefinition","fieldSettings","fn","args","push","validResult","apply","validateValueInList","listValues","values","List","isList","i","vv","getItemInListValues","_vv","wConfig","widgets","wType","jsType","allowCustomValues","min","max","_valueSrc","fieldSeparator","isFuncArg","_isFuncArg","leftFieldStr","join","rightFieldStr","funcKey","funcConfig","getFuncConfig","returnType","argKey","argConfig","argVal","fieldDef","argValue","argValueSrc","_validateValue","_validateValue2","argValidError","fixedArgVal","deleteIn","setIn"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateValue = exports.validateTree = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _configUtils = require(\"./configUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _defaultUtils = require(\"../utils/defaultUtils\");\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _immutable = require(\"immutable\");\n\nvar typeOf = function typeOf(v) {\n  if ((0, _typeof2[\"default\"])(v) == \"object\" && v !== null && Array.isArray(v)) return \"array\";else return (0, _typeof2[\"default\"])(v);\n};\n\nvar isTypeOf = function isTypeOf(v, type) {\n  if (typeOf(v) == type) return true;\n  if (type == \"number\" && !isNaN(v)) return true; //can be casted\n\n  return false;\n};\n\nvar validateTree = function validateTree(tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n\n  var c = {\n    config: config,\n    oldConfig: oldConfig,\n    removeEmptyGroups: removeEmptyGroups,\n    removeIncompleteRules: removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nexports.validateTree = validateTree;\n\nfunction validateItem(item, path, itemId, meta, c) {\n  var type = item.get(\"type\");\n  var children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup(item, path, itemId, meta, c) {\n  var removeEmptyGroups = c.removeEmptyGroups;\n  var id = item.get(\"id\");\n  var children = item.get(\"children1\");\n  var oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  } //validate children\n\n\n  var submeta = {};\n  children = children.map(function (currentChild, childId) {\n    return validateItem(currentChild, path.concat(id), childId, submeta, c);\n  });\n  if (removeEmptyGroups) children = children.filter(function (currentChild) {\n    return currentChild != undefined;\n  });\n  var sanitized = submeta.sanitized || oldChildren.size != children.size;\n\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized) meta.sanitized = true;\n  if (sanitized && item) item = item.set(\"children1\", children);\n  return item;\n}\n\nfunction validateRule(item, path, itemId, meta, c) {\n  var removeIncompleteRules = c.removeIncompleteRules,\n      config = c.config,\n      oldConfig = c.oldConfig;\n  var showErrorMessage = config.settings.showErrorMessage;\n  var id = item.get(\"id\");\n  var properties = item.get(\"properties\");\n  var field = properties.get(\"field\") || null;\n  var operator = properties.get(\"operator\") || null;\n  var operatorOptions = properties.get(\"operatorOptions\");\n  var valueSrc = properties.get(\"valueSrc\");\n  var value = properties.get(\"value\");\n  var valueError = properties.get(\"valueError\");\n  var oldSerialized = {\n    field: field,\n    operator: operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null\n  };\n\n  var _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  } //validate field\n\n\n  var fieldDefinition = field ? (0, _configUtils.getFieldConfig)(config, field) : null;\n\n  if (field && !fieldDefinition) {\n    _stuff.logger.warn(\"No config for field \".concat(field));\n\n    field = null;\n  }\n\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce(function (map, key) {\n      return map[\"delete\"](key);\n    }, properties);\n    operator = null;\n  } //validate operator\n  // Backward compatibility: obsolete operator range_between\n\n\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(\"Fixed operator \".concat(properties.get(\"operator\"), \" to \").concat(operator));\n    properties = properties.set(\"operator\", operator);\n  }\n\n  var operatorDefinition = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n\n  if (operator && !operatorDefinition) {\n    console.warn(\"No config for operator \".concat(operator));\n    operator = null;\n  }\n\n  var availOps = field ? (0, _ruleUtils.getOperatorsForField)(config, field) : [];\n\n  if (!availOps) {\n    console.warn(\"Type of field \".concat(field, \" is not supported\"));\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(\"Fixed operator \".concat(properties.get(\"operator\"), \" to \").concat(operator, \" for \").concat(field));\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(\"Operator \".concat(operator, \" is not supported for field \").concat(field));\n      operator = null;\n    }\n  }\n\n  if (operator == null) {\n    properties = properties[\"delete\"](\"operatorOptions\");\n    properties = properties[\"delete\"](\"valueSrc\");\n    properties = properties[\"delete\"](\"value\");\n  } //validate operator options\n\n\n  operatorOptions = properties.get(\"operatorOptions\");\n\n  var _operatorCardinality = operator ? (0, _stuff.defaultValue)(operatorDefinition.cardinality, 1) : null;\n\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties[\"delete\"](\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = (0, _defaultUtils.defaultOperatorOptions)(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  } //validate values\n\n\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n\n  var _getNewValueForFieldO = (0, _ruleUtils.getNewValueForFieldOp)(config, oldConfig, properties, field, operator, null, true),\n      newValue = _getNewValueForFieldO.newValue,\n      newValueSrc = _getNewValueForFieldO.newValueSrc,\n      newValueError = _getNewValueForFieldO.newValueError;\n\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  var newSerialized = {\n    field: field,\n    operator: operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null\n  };\n  var sanitized = !(0, _stuff.deepEqual)(oldSerialized, newSerialized);\n  var isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized) meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules) item = undefined;else if (sanitized) item = item.set(\"properties\", properties);\n  return item;\n}\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\n\n\nvar validateValue = function validateValue(config, leftField, field, operator, value, valueType, valueSrc, asyncListValues) {\n  var canFix = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var isEndValue = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var isRawValue = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : true;\n  var validError = null;\n  var fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      var _validateFieldValue = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateFieldValue2 = (0, _slicedToArray2[\"default\"])(_validateFieldValue, 2);\n\n      validError = _validateFieldValue2[0];\n      fixedValue = _validateFieldValue2[1];\n    } else if (valueSrc == \"func\") {\n      var _validateFuncValue = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateFuncValue2 = (0, _slicedToArray2[\"default\"])(_validateFuncValue, 2);\n\n      validError = _validateFuncValue2[0];\n      fixedValue = _validateFuncValue2[1];\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      var _validateNormalValue = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n\n      var _validateNormalValue2 = (0, _slicedToArray2[\"default\"])(_validateNormalValue, 2);\n\n      validError = _validateNormalValue2[0];\n      fixedValue = _validateNormalValue2[1];\n    }\n\n    if (!validError) {\n      var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n      var w = (0, _ruleUtils.getWidgetForFieldOp)(config, field, operator, valueSrc);\n      var operatorDefinition = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n      var fieldWidgetDefinition = (0, _omit[\"default\"])((0, _configUtils.getFieldWidgetConfig)(config, field, operator, w, valueSrc), [\"factory\"]);\n      var rightFieldDefinition = valueSrc == \"field\" ? (0, _configUtils.getFieldConfig)(config, value) : null;\n      var fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      var fn = fieldWidgetDefinition.validateValue;\n\n      if (typeof fn == \"function\") {\n        var args = [fixedValue, fieldSettings, operator, operatorDefinition];\n        if (valueSrc == \"field\") args.push(rightFieldDefinition);\n        var validResult = fn.apply(void 0, args);\n\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false) validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", \"Field \".concat(field, \": \").concat(validError));\n  }\n\n  return [validError, validError ? value : fixedValue];\n};\n\nexports.validateValue = validateValue;\n\nvar validateValueInList = function validateValueInList(value, listValues) {\n  var values = _immutable.List.isList(value) ? value.toJS() : value instanceof Array ? (0, _toConsumableArray2[\"default\"])(value) : undefined;\n\n  if (values) {\n    for (var i = 0; i < values.length; i++) {\n      var vv = (0, _stuff.getItemInListValues)(listValues, values[i]);\n\n      if (vv == undefined) {\n        return [\"Value \".concat(value[i], \" is not in list of values\"), values];\n      } else {\n        values[i] = vv.value;\n      }\n    }\n\n    return [null, values];\n  } else {\n    var _vv = (0, _stuff.getItemInListValues)(listValues, value);\n\n    if (_vv == undefined) {\n      return [\"Value \".concat(value, \" is not in list of values\"), value];\n    } else {\n      value = _vv.value;\n    }\n\n    return [null, value];\n  }\n};\n/**\n* \n*/\n\n\nvar validateNormalValue = function validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fixedValue = value;\n\n  if (field) {\n    var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n    var w = (0, _ruleUtils.getWidgetForFieldOp)(config, field, operator, valueSrc);\n    var wConfig = config.widgets[w];\n    var wType = wConfig.type;\n    var jsType = wConfig.jsType;\n    var fieldSettings = fieldConfig.fieldSettings;\n    if (valueType != wType) return [\"Value should have type \".concat(wType, \", but got value of type \").concat(valueType), value];\n\n    if (jsType && !isTypeOf(value, jsType) && !fieldSettings.listValues) {\n      //tip: can skip tye check for listValues\n      return [\"Value should have JS type \".concat(jsType, \", but got value of type \").concat((0, _typeof2[\"default\"])(value)), value];\n    }\n\n    if (fieldSettings) {\n      var listValues = asyncListValues || fieldSettings.listValues;\n\n      if (listValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, listValues);\n      }\n\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [\"Value \".concat(value, \" < min \").concat(fieldSettings.min), value];\n      }\n\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [\"Value \".concat(value, \" > max \").concat(fieldSettings.max), value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n/**\n* \n*/\n\n\nvar validateFieldValue = function validateFieldValue(leftField, field, value, _valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fieldSeparator = config.settings.fieldSeparator;\n  var isFuncArg = (0, _typeof2[\"default\"])(field) == \"object\" && (field === null || field === void 0 ? void 0 : field._isFuncArg);\n  var leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  var rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  var rightFieldDefinition = (0, _configUtils.getFieldConfig)(config, value);\n  if (!rightFieldDefinition) return [\"Unknown field \".concat(value), value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg) return [\"Can't compare field \".concat(leftField, \" with itself\"), value];\n  if (valueType && valueType != rightFieldDefinition.type) return [\"Field \".concat(value, \" is of type \").concat(rightFieldDefinition.type, \", but expected \").concat(valueType), value];\n  return [null, value];\n};\n/**\n* \n*/\n\n\nvar validateFuncValue = function validateFuncValue(leftField, field, value, _valueSrc, valueType, asyncListValues, config) {\n  var operator = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var isEndValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var canFix = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var fixedValue = value;\n\n  if (value) {\n    var funcKey = value.get(\"func\");\n\n    if (funcKey) {\n      var funcConfig = (0, _configUtils.getFuncConfig)(config, funcKey);\n\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType) return [\"Function \".concat(funcKey, \" should return value of type \").concat(funcConfig.returnType, \", but got \").concat(valueType), value];\n\n        for (var argKey in funcConfig.args) {\n          var argConfig = funcConfig.args[argKey];\n          var args = fixedValue.get(\"args\");\n          var argVal = args ? args.get(argKey) : undefined;\n          var fieldDef = (0, _configUtils.getFieldConfig)(config, argConfig);\n          var argValue = argVal ? argVal.get(\"value\") : undefined;\n          var argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n\n          if (argValue !== undefined) {\n            var _validateValue = validateValue(config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false),\n                _validateValue2 = (0, _slicedToArray2[\"default\"])(_validateValue, 2),\n                argValidError = _validateValue2[0],\n                fixedArgVal = _validateValue2[1];\n\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [\"Invalid value of arg \".concat(argKey, \" for func \").concat(funcKey, \": \").concat(argValidError), value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [\"Value of arg \".concat(argKey, \" for func \").concat(funcKey, \" is required\"), value];\n          }\n        }\n      } else return [\"Unknown function \".concat(funcKey), value];\n    } // else it's not function value\n\n  } // empty value\n\n\n  return [null, fixedValue];\n};"]},"metadata":{},"sourceType":"script"}