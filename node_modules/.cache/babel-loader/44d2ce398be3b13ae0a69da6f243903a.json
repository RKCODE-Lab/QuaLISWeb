{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData } from '../components/CommonScript'; //, getComboLabelValue, searchData\n\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { transactionStatus } from '../components/Enumeration';\nexport function getSupplierDetail(supplier, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"supplier/getSupplier\", {\n      nsuppliercode: supplier.nsuppliercode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getSupplierComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (operation === \"create\" || operation === \"update\" && masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED) {\n      const countryService = rsapi.post(\"country/getCountry\", {\n        userinfo: userInfo\n      });\n      let urlArray = [];\n\n      if (operation === \"create\") {\n        urlArray = [countryService];\n      } else {\n        const supplierById = rsapi.post(\"supplier/getActiveSupplierById\", {\n          [primaryKeyName]: primaryKeyValue,\n          \"userinfo\": userInfo\n        }); //this.props.Login.userInfo\n\n        urlArray = [countryService, supplierById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let country = [];\n        let selectedRecord = {};\n\n        if (operation === \"update\") {\n          selectedRecord = response[1].data;\n          country.push({\n            \"value\": response[1].data[\"ncountrycode\"],\n            \"label\": response[1].data[\"scountryname\"]\n          });\n          selectedRecord[\"ncountrycode\"] = country[0];\n        } else {\n          selectedRecord[\"ntransactionstatus\"] = 1;\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            countryList: response[0].data || [],\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n}\nexport function getSupplierCategoryComboDataService(supplierparam) {\n  return function (dispatch) {\n    if (supplierparam.masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED) {\n      const contactData = {\n        \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\n        \"userinfo\": supplierparam.userInfo\n      };\n      const contactService = rsapi.post(\"suppliercategory/getSupplierCategoryBySupplierCode\", contactData);\n      let urlArray = [];\n\n      if (supplierparam.operation === \"create\") {\n        urlArray = [contactService];\n      } else {\n        const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", {\n          [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue,\n          \"userinfo\": supplierparam.userInfo\n        });\n        urlArray = [contactService, contactById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {}; //let selectedSupplierCategory = {};\n\n        if (supplierparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            supplierCategory: response[0].data || [],\n            selectedSupplierCategory: [],\n            selectedRecord,\n            openChildModal: true,\n            operation: supplierparam.operation,\n            screenName: supplierparam.screenName,\n            ncontrolCode: supplierparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: supplierparam.masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n}\nexport function getMaterialCategoryComboDataService(materialparam) {\n  return function (dispatch) {\n    if (materialparam.masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED) {\n      const materialData = {\n        \"nsuppliercode\": materialparam.masterData.SelectedSupplier.nsuppliercode,\n        \"userinfo\": materialparam.userInfo\n      };\n      const materialService = rsapi.post(\"materialcategory/getMaterialCategoryBYSupplierCode\", materialData);\n      let urlArray = [];\n\n      if (materialparam.operation === \"create\") {\n        urlArray = [materialService];\n      } else {\n        const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", {\n          [materialparam.primaryKeyField]: materialparam.primaryKeyValue,\n          \"userinfo\": materialparam.userInfo\n        });\n        urlArray = [materialService, contactById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = undefined;\n\n        if (materialparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            materialCategory: response[0].data || [],\n            selectedMaterialCategory: [],\n            selectedRecord,\n            openChildModal: true,\n            operation: materialparam.operation,\n            screenName: materialparam.screenName,\n            ncontrolCode: materialparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: materialparam.masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n} // export function filterColumnDataSupplier(filterValue, masterData, userInfo) {\n//     return function (dispatch) {\n//         let supplierCode = 0;\n//         let searchedData = undefined;\n//         if (filterValue === \"\") {\n//             supplierCode = masterData[\"Supplier\"][0].nsuppliercode;\n//         }\n//         else {\n//             searchedData = searchData(filterValue, masterData[\"Supplier\"], \"ssuppliername\");\n//             if (searchedData.length > 0) {\n//                 supplierCode = searchedData[0].nsuppliercode;\n//             }\n//             else {\n//                 masterData[\"Supplier\"] = [];\n//                 masterData[\"SupplierCategory\"] = [];\n//                 masterData[\"MaterialCategory\"] = [];\n//                 masterData[\"SelectedSupplier\"] = [];\n//                 masterData[\"searchedData\"] = [];\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\n//             }\n//         }\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"supplier/getSupplier\", { nsuppliercode: supplierCode, userinfo: userInfo })\n//             .then(response => {\n//                 masterData[\"Supplier\"] = response.data[\"Supplier\"];\n//                 masterData[\"SupplierCategory\"] = response.data[\"SupplierCategory\"];\n//                 masterData[\"MaterialCategory\"] = response.data[\"MaterialCategory\"];\n//                 masterData[\"SelectedSupplier\"] = response.data[\"SelectedSupplier\"];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/SupplierAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","Axios","initRequest","intl","transactionStatus","getSupplierDetail","supplier","userInfo","masterData","dispatch","post","nsuppliercode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getSupplierComboService","screenName","operation","primaryKeyName","primaryKeyValue","ncontrolCode","SelectedSupplier","ntransactionstatus","RETIRED","countryService","userinfo","urlArray","supplierById","all","country","selectedRecord","push","countryList","openModal","stranstatus","getSupplierCategoryComboDataService","supplierparam","contactData","contactService","contactById","primaryKeyField","supplierCategory","selectedSupplierCategory","openChildModal","getMaterialCategoryComboDataService","materialparam","materialData","materialService","undefined","materialCategory","selectedMaterialCategory"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript'//, getComboLabelValue, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getSupplierDetail(supplier, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"supplier/getSupplier\", {\r\n            nsuppliercode: supplier.nsuppliercode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSupplierComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\" || (operation === \"update\" && masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n\r\n\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: userInfo });\r\n\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n\r\n                urlArray = [countryService];\r\n            }\r\n            else {\r\n                const supplierById = rsapi.post(\"supplier/getActiveSupplierById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });//this.props.Login.userInfo\r\n\r\n                urlArray = [countryService, supplierById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let country = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n\r\n\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n\r\n                    }\r\n                    else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getSupplierCategoryComboDataService(supplierparam) {\r\n    return function (dispatch) {\r\n        if (supplierparam.masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n            const contactData = {\r\n                \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\r\n                \"userinfo\": supplierparam.userInfo\r\n\r\n            };\r\n\r\n            const contactService = rsapi.post(\"suppliercategory/getSupplierCategoryBySupplierCode\", contactData);\r\n\r\n            let urlArray = [];\r\n            if (supplierparam.operation === \"create\") {\r\n\r\n                urlArray = [contactService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", { [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue, \"userinfo\": supplierparam.userInfo });\r\n                urlArray = [contactService, contactById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let selectedRecord = {};\r\n                    //let selectedSupplierCategory = {};\r\n                    if (supplierparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            supplierCategory: response[0].data || [],\r\n                            selectedSupplierCategory: [],\r\n\r\n                            selectedRecord,\r\n                            openChildModal: true,\r\n\r\n                            operation: supplierparam.operation, screenName: supplierparam.screenName,\r\n                            ncontrolCode: supplierparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getMaterialCategoryComboDataService(materialparam) {\r\n    return function (dispatch) {\r\n        if (materialparam.masterData.SelectedSupplier.ntransactionstatus !== transactionStatus.RETIRED) {\r\n\r\n            const materialData = {\r\n                \"nsuppliercode\": materialparam.masterData.SelectedSupplier.nsuppliercode,\r\n                \"userinfo\": materialparam.userInfo\r\n\r\n            };\r\n\r\n            const materialService = rsapi.post(\"materialcategory/getMaterialCategoryBYSupplierCode\", materialData);\r\n\r\n            let urlArray = [];\r\n            if (materialparam.operation === \"create\") {\r\n\r\n                urlArray = [materialService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", { [materialparam.primaryKeyField]: materialparam.primaryKeyValue, \"userinfo\": materialparam.userInfo });\r\n                urlArray = [materialService, contactById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let selectedRecord = undefined;\r\n                    if (materialparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            materialCategory: response[0].data || [],\r\n                            selectedMaterialCategory: [],\r\n\r\n                            selectedRecord,\r\n                            openChildModal: true,\r\n\r\n                            operation: materialparam.operation, screenName: materialparam.screenName,\r\n                            ncontrolCode: materialparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n// export function filterColumnDataSupplier(filterValue, masterData, userInfo) {\r\n//     return function (dispatch) {\r\n\r\n//         let supplierCode = 0;\r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\") {\r\n//             supplierCode = masterData[\"Supplier\"][0].nsuppliercode;\r\n//         }\r\n//         else {\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"Supplier\"], \"ssuppliername\");\r\n\r\n//             if (searchedData.length > 0) {\r\n//                 supplierCode = searchedData[0].nsuppliercode;\r\n//             }\r\n//             else {\r\n//                 masterData[\"Supplier\"] = [];\r\n//                 masterData[\"SupplierCategory\"] = [];\r\n//                 masterData[\"MaterialCategory\"] = [];\r\n//                 masterData[\"SelectedSupplier\"] = [];\r\n//                 masterData[\"searchedData\"] = [];\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\r\n//             }\r\n\r\n//         }\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"supplier/getSupplier\", { nsuppliercode: supplierCode, userinfo: userInfo })\r\n//             .then(response => {\r\n//                 masterData[\"Supplier\"] = response.data[\"Supplier\"];\r\n//                 masterData[\"SupplierCategory\"] = response.data[\"SupplierCategory\"];\r\n//                 masterData[\"MaterialCategory\"] = response.data[\"MaterialCategory\"];\r\n//                 masterData[\"SelectedSupplier\"] = response.data[\"SelectedSupplier\"];\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}