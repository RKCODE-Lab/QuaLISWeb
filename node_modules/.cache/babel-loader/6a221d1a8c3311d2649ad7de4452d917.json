{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddOpenDate.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst AddOpenDate = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntranscode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.Status,\n    value: props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    isMulti: false,\n    isSearchable: true,\n    isMandatory: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntranscode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dopendate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_OPENDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dopendate\"],\n    dateFormat: props.userInfo.ssitedate,\n    minDate: props.currentTime,\n    isClearable: false,\n    required: true,\n    isMandatory: true,\n    onChange: date => props.handleDateChange(\"dopendate\", date),\n    value: props.selectedRecord[\"dopendate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzopendate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzopendate\"],\n    defaultValue: props.selectedRecord[\"ntzopendate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzopendate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REASON\"\n    }),\n    name: \"sopenreason\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_OPENREASON\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddOpenDate);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddOpenDate.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormTextarea","FormSelectSearch","AddOpenDate","props","intl","formatMessage","id","Status","selectedRecord","event","onComboChange","userInfo","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddOpenDate=(props)=>{\r\n    return(\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n        <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.Status}\r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                              defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                              onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n        </Col>\r\n\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dopendate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_OPENDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dopendate\"]}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             minDate={props.currentTime}\r\n                             isClearable={false}\r\n                             required={true}\r\n                             isMandatory={true}\r\n                             onChange={date => props.handleDateChange(\"dopendate\", date)}\r\n                            value={props.selectedRecord[\"dopendate\"]}\r\n                            />\r\n                        </Col>\r\n\r\n                            <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzopendate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzopendate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzopendate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzopendate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n        <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                    name={\"sopenreason\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_OPENREASON\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n    </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddOpenDate);"]},"metadata":{},"sourceType":"module"}