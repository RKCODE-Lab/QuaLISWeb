{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getReleasedSelectedSampleSubSampleTest, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData } from '../../components/CommonScript';\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport BreadcrumbComponentToolbar from '../../components/ToolbarBreadcrumb.Component';\nimport COAReleaseFilter from '../coarelease/COAReleaseFilter';\nimport { Affix } from 'rsuite';\nimport ModalShow from '../../components/ModalShow';\nimport AddRelease from '../coarelease/AddRelease';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faCloudDownloadAlt, faExpandArrowsAlt, faRecycle } from '@fortawesome/free-solid-svg-icons';\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Iframe from 'react-iframe';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport Reports from '../reports/viewreports/Reports';\nimport { SampleType } from '../../components/Enumeration';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n      this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            }; //  if(this.props.Login.masterData.SampleTypeValue.nsampletypecode===sam)\n\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? null // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleasedFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleaseFilterBasedTest(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"];\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ntype: 2,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 // && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\n      // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.searchedGridData = (filterValue, filterParam) => {\n      let masterData1 = filterParam.masterData;\n      let primaryKeyValue = 0;\n      let searchedData = undefined;\n\n      if (filterValue === \"\") {\n        if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\n          primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField]; // }\n        }\n      } else {\n        if (filterParam.isjsondata) {\n          searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\n        } else {\n          searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\n        }\n\n        masterData1[\"searchedData3\"] = searchedData.test;\n        masterData1[\"searchedData1\"] = searchedData.sample;\n        masterData1[\"searchedData2\"] = searchedData.subsample; //    masterData1[\"searchedData\"][\"selected\"]=false\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...masterData1\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.searchNestedGridData = (filterValue, originalData, fieldList, masterData) => {\n      let searchedData = [];\n      let ntransactionsamplecode = [];\n      let subdata = [];\n      let detail = [];\n      let npreregno = [];\n      Object.entries(originalData).map(item1 => {\n        item1[1].map(item => {\n          detail.push(item);\n        });\n      });\n      let temp = detail.filter(item => {\n        const itemArray = [];\n        fieldList.map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\");\n        return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n      });\n      temp.map(item1 => {\n        if (!npreregno.includes(item1.npreregno)) npreregno.push(item1.npreregno);\n        if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode)) ntransactionsamplecode.push(item1.ntransactionsamplecode);\n      });\n      let test = groupBy(temp, 'ntransactionsamplecode');\n      let sample = masterData.ReleaseSample.filter(item => {\n        for (var i = 0; i < npreregno.length; i++) {\n          if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      Object.entries(masterData.ReleaseSubSample).map(item1 => {\n        item1[1].map(item => {\n          subdata.push(item);\n        });\n      });\n      let subsample1 = subdata.filter(item => {\n        for (var i = 0; i < ntransactionsamplecode.length; i++) {\n          if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      let subsample = groupBy(subsample1, \"npreregno\");\n\n      function groupBy(objectArray, property) {\n        return objectArray.reduce((acc, obj) => {\n          const key = obj[property];\n\n          if (!acc[key]) {\n            acc[key] = [];\n          }\n\n          acc[key].push(obj);\n          return acc;\n        }, {});\n      }\n\n      searchedData = {\n        test,\n        sample,\n        subsample\n      };\n      return searchedData;\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        //  if (comboData.value !== this.props.Login.masterData.ProjectTypeValue.nprojecttypecode) {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          //  nregtypecode: comboData.value,\n          //  ProjectTypeValue: comboData.item,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData //  RegTypeValue: comboData.item\n\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData); // }\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          ModalStatusValue: true,\n          preregCheck: true,\n          isAddPopup: true,\n          ntype: 2,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData,\n            searchSampleRef: this.searchSampleRef,\n            searchSubSampleRef: this.searchSubSampleRef,\n            searchTestRef: this.searchTestRef,\n            skip: this.state.skip,\n            take: this.state.take,\n            testskip: this.state.testskip,\n            testtake: this.state.testtake\n          };\n          this.props.getReleasedSample(inputParam);\n        }\n      } // else if (fieldName === 'nprojectmastercode') {\n      //    // if (comboData.value !== this.props.Login.masterData.ProjectMasterValue.nprojectmastercode) {\n      //     const selectedRecord = this.state.selectedRecord || {};\n      //     selectedRecord[fieldName] = comboData;\n      //     this.setState({ selectedRecord });\n      //    // }\n      // }\n\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = (inputData, row) => {\n      // this.props.generateReport()\n      this.onSaveModalClick(true, row, 'IDS_DOWNLOADFILE', true);\n    };\n\n    this.downloadReleasedFile = action => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n      let sample = this.state.npreregno.filter((c, index) => {\n        return this.state.npreregno.indexOf(c) === index;\n      });\n      let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n        return this.state.ntransactionsamplecode.indexOf(c) === index;\n      });\n      let test = this.state.ntransactiontestcode.filter((c, index) => {\n        return this.state.ntransactiontestcode.indexOf(c) === index;\n      });\n      npreregno = sample.map(x => x).join(\",\");\n      ntransactionsamplecode = subsample.map(x => x).join(\",\");\n      ntransactiontestcode = test.map(x => x).join(\",\");\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n      // if (ntransCode === transactionStatus.ALL) {\n      //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      // } else {\n      //     ntransCode = ntransCode\n      // }\n\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          ntransactiontestcode: ntransactiontestcode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          APSelectedSample: this.props.Login.masterData.APSelectedSample,\n          APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          checkBoxOperation: 3,\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.regenerateReleasedFile = action => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n      let sample = this.state.npreregno.filter((c, index) => {\n        return this.state.npreregno.indexOf(c) === index;\n      });\n      let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n        return this.state.ntransactionsamplecode.indexOf(c) === index;\n      });\n      let test = this.state.ntransactiontestcode.filter((c, index) => {\n        return this.state.ntransactiontestcode.indexOf(c) === index;\n      });\n      npreregno = sample.map(x => x).join(\",\");\n      ntransactionsamplecode = subsample.map(x => x).join(\",\");\n      ntransactiontestcode = test.map(x => x).join(\",\");\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n      // if (ntransCode === transactionStatus.ALL) {\n      //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      // } else {\n      //     ntransCode = ntransCode\n      // }\n\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          ntransactionsamplecode: ntransactionsamplecode,\n          ntransactiontestcode: ntransactiontestcode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          APSelectedSample: this.props.Login.masterData.APSelectedSample,\n          APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          checkBoxOperation: 3,\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.onSaveModalClick = (nflag, row, action, preview) => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n\n      if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n        if (this.state.npreregno && this.state.npreregno.length > 0 || preview === true) {\n          let sample = this.state.npreregno.filter((c, index) => {\n            return this.state.npreregno.indexOf(c) === index;\n          });\n          let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\n          });\n          let test = this.state.ntransactiontestcode.filter((c, index) => {\n            return this.state.ntransactiontestcode.indexOf(c) === index;\n          });\n\n          if (nflag === true) {\n            npreregno = row.dataItem['npreregno'];\n          } else {\n            npreregno = sample.map(x => x).join(\",\");\n          }\n\n          ntransactionsamplecode = subsample.map(x => x).join(\",\");\n          ntransactiontestcode = test.map(x => x).join(\",\");\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\n          // if (ntransCode === transactionStatus.ALL) {\n          //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n          // } else {\n          //     ntransCode = ntransCode\n          // }\n\n          const inputParam = {\n            inputData: {\n              change: this.props.Login.change,\n              npreregno: String(npreregno),\n              ntransactionsamplecode: ntransactionsamplecode,\n              ntransactiontestcode: ntransactiontestcode,\n              nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              // nTransStatus: ntransCode,\n              // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n              //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n              //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nflag: 2,\n              ntype: 1,\n              userinfo: this.props.Login.userInfo,\n              APSelectedSample: this.props.Login.masterData.APSelectedSample,\n              APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n              APSelectedTest: this.props.Login.masterData.APSelectedTest,\n              // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              // ncontrolCode,\n              checkBoxOperation: 3,\n              action,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          };\n\n          if (nflag === true) {\n            this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, \"isPreview\");\n          } else {\n            this.props.getReleasedSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchRef: this.searchRef,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          }); //    this.props.Login.masterData.ReleaseSample.map(data => {\n          //        if (data.npreregno === value.npreregno) {\n          //         data.selected = checked\n          //        }\n          //    })\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = [];\n\n      if (subsamplecode !== undefined) {\n        transactionsamplecode = subsamplecode;\n        transactionsamplecode.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n      } else {\n        let rFlag = true;\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        } // let x;\n        // let i;\n        // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\n        //     x=i\n        //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\n        //             // item.selected = checked;\n        //             rFlag = false;\n        //             break;\n        //         }\n        // }\n        // if (rFlag === true) {\n        //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\n        // }\n\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        }); //this.setState({headerSelect:checked})  \n\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } // }else\n      // {\n      //     this.setState({npreregno:[]})\n      // }\n\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo); \n\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        } // Don't Remove\n        // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n        //     ntransactiontestcode.push(item.ntransactiontestcode)\n        // }\n\n      } else {\n        const npreregno1 = npreregno.filter(data => data !== item.npreregno);\n        npreregno = npreregno1;\n        const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = ntransactionsamplecode1; // Don't Remove\n        // const ntransactiontestcode1 = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\n        // ntransactiontestcode = ntransactiontestcode1\n      } //      const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //         npreregno: npreregno,\n      //         ntransactionsamplecode:ntransactionsamplecode,\n      //         ntransactiontestcode:ntransactiontestcode\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: ntransactionsamplecode,\n        ntransactiontestcode: ntransactiontestcode\n      });\n    };\n\n    this.formRef = React.createRef();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: []\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\"];\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCT\",\n      \"dataField\": \"Specimen Type\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCTCATEGORY\",\n      \"dataField\": \"Specimen Category\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"200px\"\n    }];\n    this.sampleColumnList = [{\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_SAMPLENAME\",\n      \"dataField\": \"Sample Name\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  expandNextData(y) {\n    let change = [];\n    let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\n    let data = x.data.every(item => {\n      return item.expanded === true;\n    });\n\n    if (data === true) {\n      change = true;\n    } else {\n      change = false;\n    }\n\n    this.expandFunc({\n      change: change\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      //filePath = fileViewUrl() + \"/Connecting_to_Databases01/\";\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntype: 2,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    const filterTestParam = {\n      inputListName: \"ReleaseTest\",\n      //  selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      //    fetchUrl: this.getActiveTestURL(),\n      // fecthInputObject: {\n      //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n      //     userinfo: this.props.Login.userInfo,\n      //     checkBoxOperation: 3,\n      //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      // },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.combinedSearchField || []\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\") && this.state.controlMap.get('Release').ncontrolcode;\n    const filterSubSampleParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n        'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const filterModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'preregCheck': true,\n        'ModalStatusValue': true,\n        // 'ncoahistorycode':COAHistory\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Release\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory,\n      getMasterDetail: ReleaseSample => this.props.getReleasedDataDetails({ ...filterSubSampleParam,\n        ...ReleaseSample\n      }),\n      selectedMaster: this.props.Login.masterData.selectedReleaseHistory,\n      primaryKeyField: \"ncoaparentcode\",\n      mainField: \"sreportno\",\n      firstField: \"susername\",\n      secondField: \"sgenerateddate\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: releaseId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getApprovedSample(filterModalParam),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      //  hidden={this.state.userRoleControlRights.indexOf(this.state.quarantineId) === -1}\n      ,\n      onClick: () => this.downloadReleasedFile('IDS_DOWNLOADFILE'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Generate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      //  hidden={this.state.userRoleControlRights.indexOf(this.state.quarantineId) === -1}\n      ,\n      onClick: () => this.regenerateReleasedFile('IDS_REGENERATEFILE'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReGenerate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWREPORT\"\n      }),\n      onClick: () => this.viewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpandArrowsAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      handleExpandChange: this.handleExpandChange,\n      childHandleExpandChange: this.childHandleExpandChange,\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectAll: this.props.Login.childSelectAll,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      subChildSelectAll: this.props.Login.subChildSelectAll,\n      selectionChange: this.selectionChange,\n      selectAll: this.props.Login.selectAll,\n      releaseRecord: //this.props.getCOAReportType\n      this.onSaveModalClick,\n      viewDownloadFile: this.viewDownloadFile,\n      regnerateFile: this.regnerateFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 45\n      }\n    })))) : \"\"))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: \"xl\",\n      closeModal: this.closeModal // operation={this.props.Login.operation}\n      ,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASE\"\n      }),\n      onSaveClick: this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore // selectedRecord={this.state.selectedRecord || {}}\n      //  mandatoryFields={this.props.Login.operation == \"create\" ? this.mandatoryFields || [] : this.mandatoryUpdateFields || []}\n      ,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 37\n        }\n      }, this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojecttypecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.ProjectTypeList // optionId=\"ntimezonecode\"\n        // optionValue=\"stimezoneid\"\n        ,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: false // isClearable={false}                               \n        ///  isDisabled={ this.state.selectedRecord&&this.state.selectedRecord[\"ncoareporttypecode\"]===7?false:true}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojecttypecode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 37\n        }\n      }, this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojectmastercode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTCODE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.projectMasterList // optionId=\"ntimezonecode\"\n        // optionValue=\"stimezoneid\"\n        ,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true // isClearable={false}                               \n        ,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojectmastercode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc //expandData={this.expandData}\n        ,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px',\n        isActionRequired: true //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n        ,\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: //this.props.getCOAReportType\n        this.onSaveModalClick,\n        viewDownloadFile: this.viewDownloadFile,\n        regnerateFile: this.regnerateFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      combinedSearchField,\n      checkedflag,\n      npreregno\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n      npreregno = this.props.Login.npreregno;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []; // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      SingleItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\n      sampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      subsampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      testSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        combinedSearchField,\n        checkedflag,\n        npreregno: []\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        const reportFilePath = this.props.Login.masterData.ReportPDFFile;\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n          reportFilePath\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.state.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        const npreregno = []; //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n        // const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n\n        const reportFilePath = this.props.Login.ntransactiontestcode || [];\n        this.setState({\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\n          npreregno,\n          //ntransactionsamplecode, ntransactiontestcode,\n          dataState\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getReleasedSelectedSampleSubSampleTest,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","ListWrapper","Row","Col","Card","FormGroup","FormLabel","Nav","toast","process","connect","FormattedMessage","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getReleasedSelectedSampleSubSampleTest","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchJsonData","designProperties","transactionStatus","DataGridWithMultipleGrid","BreadcrumbComponentToolbar","COAReleaseFilter","Affix","ModalShow","AddRelease","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","SampleInfoView","ReadOnlyText","ContentPanel","ProductList","faCloudDownloadAlt","faExpandArrowsAlt","faRecycle","FontIconWrap","FormSelectSearch","FontAwesomeIcon","Iframe","fileViewUrl","reportUrl","DocViewer","Reports","SampleType","mapStateToProps","state","Login","Release","Component","constructor","props","dataStateChange","event","setState","dataState","dataResult","data","expandNextData","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","nsectioncode","UserSectionValue","UserSection","map","join","ReportTypeValue","ncoareporttypecode","updateInfo","typeName","DesignTemplateMappingValue","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","napprovalconfigversioncode","ntransactionstatus","FilterStatusValue","stransactionstatus","FilterStatus","JobStatusValue","njobstatuscode","TestValue","ntestcode","getReleaseFilterBasedTest","onFilterSubmit","searchRef","current","change","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realFilterStatusValue","realApprovalVersionValue","realUserSectionValue","realTestValue","realReportTypeValue","realDesignTemplateMappingValue","npreregno","parseInt","undefined","RELEASED","napprovalconfigcode","section","nneedsubsample","nneedtemplatebasedflow","ntype","searchSampleRef","searchSubSampleRef","searchTestRef","skip","take","testskip","testtake","warn","intl","formatMessage","id","searchedGridData","filterValue","filterParam","masterData1","primaryKeyValue","searchedData","inputListName","length","primaryKeyField","isjsondata","searchFieldList","searchNestedGridData","test","sample","subsample","originalData","fieldList","ntransactionsamplecode","subdata","detail","Object","entries","item1","push","temp","filter","itemArray","itemKey","toLowerCase","toString","findIndex","element","includes","groupBy","ReleaseSample","i","ReleaseSubSample","subsample1","objectArray","property","reduce","acc","key","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","checkFlag","viewReport","ReportPDFFile","showReport","onComboChange","selectedRecord","nprojecttypecode","nprojectmastercode","ModalStatusValue","preregCheck","isAddPopup","sfilterstatus","closeModalShow","loadEsign","modalShow","selectedId","viewDownloadFile","row","onSaveModalClick","downloadReleasedFile","action","ntransactiontestcode","c","index","indexOf","x","ncoaparentcode","selectedReleaseHistory","APSelectedSample","APSelectedSubSample","APSelectedTest","checkBoxOperation","regenerateReleasedFile","preview","dataItem","info","reloadData","activeTestTab","activeSampleTab","activeSubSampleTab","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","samplePrintHistoryDataState","sampleHistoryDataState","closeModal","openModal","operation","closeDocModal","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","screenData","selectionChange","checkedflag","checked","syntheticEvent","target","selected","preregno","ncoahistorycode","ssystemfilename","coaFileInfo","childHeaderSelectionChange","dataItems","subsamplecode","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","rFlag","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","npreregno1","ntransactionsamplecode1","formRef","createRef","settings","masterStatus","error","childDataResult","userRoleControlRights","controlMap","Map","SampletypeList","ProjecttypeList","ProjectMasterList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","SampleGridItem","combinedSearchField","stateDynamicDesign","extractedColumnList","sampleColumnList","testColumnList","searchedData1","expanded","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","filePath","filetype","reportFilePath","selectedObject","fetchUrl","fecthInputObject","isSearch","filterTestParam","isSingleSelect","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","has","get","ncontrolcode","filterSubSampleParam","filterModalParam","PARTIAL","ReleaseHistory","openFilter","closeFilter","showFilter","ConfigVersionList","DesignTemplateMapping","UserSectionList","TestList","onDesignTemplateChange","values","sreportno","ReleasedSampleDetails","subChildDataResult","DynamicGridItem","DynamicTestGridItem","handleExpandChange","childHandleExpandChange","searchedData2","ReleasedSubSampleDetails","DynamicSubSampleGridItem","searchedData3","ReleasedTestDetails","selectedsubcild","childSelectAll","subChildSelectAll","selectAll","regnerateFile","onInputOnChange","ProjectTypeList","projectMasterList","componentDidUpdate","previousProps","sampleListColumns","subSampleListColumns","testListColumns","SingleItem","sampleListMainField","subSampleListMainField","testListMainField","SampleGridExpandableItem","testMoreField","selectedFilter","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","DynamicGridMoreField","bool","nformcode","nsubsampleneed","NO","SampletypeListMap","ReporttypeListMap","ReportType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","testListFields","releasetestfields","samplegridmoreitem","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","DesignTemplateMappingMap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getReleasedSelectedSampleSubSampleTest,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData } from '../../components/CommonScript';\r\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport BreadcrumbComponentToolbar from '../../components/ToolbarBreadcrumb.Component';\r\nimport COAReleaseFilter from '../coarelease/COAReleaseFilter';\r\nimport { Affix } from 'rsuite';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport AddRelease from '../coarelease/AddRelease';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faCloudDownloadAlt, faExpandArrowsAlt, faRecycle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Iframe from 'react-iframe';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport Reports from '../reports/viewreports/Reports';\r\nimport { SampleType } from '../../components/Enumeration';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\"];\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"Specimen Type\", \"width\": \"200px\"\r\n            },\r\n            { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"Specimen Category\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n        ];\r\n\r\n        this.sampleColumnList = [{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        this.testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n    }\r\n\r\n\r\n\r\n    expandNextData(y) {\r\n        let change = []\r\n        let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n        let data = x.data.every(item => {\r\n            return item.expanded === true\r\n        })\r\n        if (data === true) {\r\n            change = true\r\n        } else {\r\n            change = false\r\n        }\r\n        this.expandFunc({ change: change })\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        this.expandNextData(event.dataState);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    //  if(this.props.Login.masterData.SampleTypeValue.nsampletypecode===sam)\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? null\r\n                            // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getReleasedFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                        //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                        , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n                    }\r\n\r\n                    this.props.getReleaseFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            // && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode ) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    searchedGridData = (filterValue, filterParam) => {\r\n\r\n        let masterData1 = filterParam.masterData;\r\n\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\r\n\r\n                primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n                // }\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\r\n\r\n            }\r\n            masterData1[\"searchedData3\"] = searchedData.test;\r\n            masterData1[\"searchedData1\"] = searchedData.sample;\r\n            masterData1[\"searchedData2\"] = searchedData.subsample;\r\n\r\n            //    masterData1[\"searchedData\"][\"selected\"]=false\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...masterData1 }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    searchNestedGridData = (filterValue, originalData, fieldList, masterData) => {\r\n        let searchedData = [];\r\n        let ntransactionsamplecode = [];\r\n        let subdata = [];\r\n        let detail = []\r\n        let npreregno = []\r\n\r\n        Object.entries(originalData).map(item1 => {\r\n            item1[1].map(item => {\r\n                detail.push(item)\r\n            })\r\n        })\r\n\r\n        let temp =\r\n            detail.filter(item => {\r\n                const itemArray = [];\r\n\r\n                fieldList.map(itemKey =>\r\n                    item[itemKey] && item[itemKey] !== null ?\r\n                        itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n                            : item[itemKey].toString().toLowerCase())\r\n                        : \"\")\r\n                return itemArray\r\n                    .findIndex(element => element\r\n                        .includes(filterValue.toLowerCase())) > -1\r\n\r\n            })\r\n\r\n        temp.map(item1 => {\r\n            if (!npreregno.includes(item1.npreregno))\r\n                npreregno.push(item1.npreregno)\r\n            if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode))\r\n                ntransactionsamplecode.push(item1.ntransactionsamplecode)\r\n        })\r\n        let test = groupBy(temp, 'ntransactionsamplecode');\r\n        let sample = masterData.ReleaseSample.filter(item => {\r\n\r\n            for (var i = 0; i < npreregno.length; i++) {\r\n                if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\r\n                    return item\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        Object.entries(masterData.ReleaseSubSample).map(item1 => {\r\n            item1[1].map(item => {\r\n                subdata.push(item)\r\n            })\r\n        })\r\n        let subsample1 = subdata.filter(item => {\r\n\r\n            for (var i = 0; i < ntransactionsamplecode.length; i++) {\r\n                if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\r\n                    return item\r\n                }\r\n            }\r\n\r\n        })\r\n        let subsample = groupBy(subsample1, \"npreregno\");\r\n        function groupBy(objectArray, property) {\r\n            return objectArray.reduce((acc, obj) => {\r\n                const key = obj[property];\r\n                if (!acc[key]) {\r\n                    acc[key] = [];\r\n                }\r\n                acc[key].push(obj);\r\n                return acc;\r\n            }, {});\r\n        }\r\n        searchedData = { test, sample, subsample }\r\n        return searchedData;\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                checkFlag: \"1\",\r\n                count: count\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            //filePath = fileViewUrl() + \"/Connecting_to_Databases01/\";\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n\r\n                ntype: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"ReleaseTest\",\r\n            //  selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            //    fetchUrl: this.getActiveTestURL(),\r\n            // fecthInputObject: {\r\n            //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n            //     userinfo: this.props.Login.userInfo,\r\n            //     checkBoxOperation: 3,\r\n            //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            // },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.combinedSearchField || [],\r\n\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\")\r\n            && this.state.controlMap.get('Release').ncontrolcode;\r\n\r\n\r\n        const filterSubSampleParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n               \"napprovalconfigcode\": this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,                'nneedsubsample': (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n        const filterModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'preregCheck': true,\r\n                'ModalStatusValue': true,\r\n                // 'ncoahistorycode':COAHistory\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n\r\n\r\n            }\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                        {/* <SplitterLayout\r\n                                borderColor=\"#999\"\r\n                                primaryIndex={1}\r\n                                percentage={true}\r\n                                secondaryInitialSize={30}\r\n                            > */}\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Release\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...filterSubSampleParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                 firstField=\"susername\"\r\n                                 secondField=\"sgenerateddate\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(filterModalParam)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            UserSection={this.state.UserSectionList || []}\r\n                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            Test={this.state.TestList || []}\r\n                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            //  hidden={this.state.userRoleControlRights.indexOf(this.state.quarantineId) === -1}\r\n                                                            onClick={() => this.downloadReleasedFile('IDS_DOWNLOADFILE')}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            //  hidden={this.state.userRoleControlRights.indexOf(this.state.quarantineId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile('IDS_REGENERATEFILE')}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link>\r\n\r\n\r\n                                                    </ProductList>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                expandField=\"expanded\"\r\n                                                handleExpandChange={this.handleExpandChange}\r\n                                                childHandleExpandChange={this.childHandleExpandChange}\r\n\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.searchedData2 ||\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.searchedData3 ||\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectAll={this.props.Login.childSelectAll}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                selectionChange={this.selectionChange}\r\n                                                selectAll={this.props.Login.selectAll}\r\n                                                releaseRecord={//this.props.getCOAReportType\r\n                                                    this.onSaveModalClick}\r\n                                                viewDownloadFile={this.viewDownloadFile}\r\n                                                regnerateFile={this.regnerateFile}\r\n                                            />\r\n                                            {/* {this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0\r\n                            && this.state.reportFilePath ?\r\n                            <Iframe \r\n                                url={filePath}\r\n                                width=\"98%\"\r\n                                height=\"1000px\"\r\n                                id=\"reportviewID\"\r\n                                className=\"reportview\"\r\n                                display=\"initial\"\r\n                                position=\"relative\" />:\"\"\r\n                        } */}\r\n\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        size={\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        // operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                        onSaveClick={this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        // selectedRecord={this.state.selectedRecord || {}}\r\n                        //  mandatoryFields={this.props.Login.operation == \"create\" ? this.mandatoryFields || [] : this.mandatoryUpdateFields || []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <>\r\n                                <Row>\r\n                                    {/* <Col md={4}>\r\n            <FormSelectSearch\r\n                    name={\"ncoareporttypecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={this.props.Login.ReportTypeList}\r\n                    // optionId=\"ntimezonecode\"\r\n                    // optionValue=\"stimezoneid\"\r\n                    value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ncoareporttypecode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    // isClearable={false}                               \r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => this.onComboChange(event, 'ncoareporttypecode', 1)}\r\n                                />  \r\n                                </Col> */}\r\n                                    <Col md={4}>\r\n                                        {this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 &&\r\n                                            <FormSelectSearch\r\n                                                name={\"nprojecttypecode\"}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={this.props.Login.ProjectTypeList}\r\n                                                // optionId=\"ntimezonecode\"\r\n                                                // optionValue=\"stimezoneid\"\r\n                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={false}\r\n                                                // isClearable={false}                               \r\n\r\n                                                ///  isDisabled={ this.state.selectedRecord&&this.state.selectedRecord[\"ncoareporttypecode\"]===7?false:true}\r\n                                                closeMenuOnSelect={true}\r\n                                                alphabeticalSort={true}\r\n                                                onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                            />\r\n                                        }\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 &&\r\n\r\n                                            <FormSelectSearch\r\n                                                name={\"nprojectmastercode\"}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={this.props.Login.projectMasterList}\r\n                                                // optionId=\"ntimezonecode\"\r\n                                                // optionValue=\"stimezoneid\"\r\n                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isSearchable={true}\r\n                                                // isClearable={false}                               \r\n                                                isDisabled={false}\r\n                                                closeMenuOnSelect={true}\r\n                                                alphabeticalSort={true}\r\n                                                onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                            />\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                                <DataGridWithMultipleGrid\r\n                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                    data={this.state.data}\r\n                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    expandNextData={this.expandNextData}\r\n                                    checkFunction={this.checkFunction}\r\n                                    checkFunction1={this.checkFunction1}\r\n                                    expandFunc={this.expandFunc}\r\n                                    //expandData={this.expandData}\r\n                                    childDataResult={this.state.childDataResult}\r\n                                    subChildDataResult={this.state.subChildDataResult}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                    expandField=\"expanded\"\r\n                                    handleExpandChange={this.handleExpandChange}\r\n                                    childHandleExpandChange={this.childHandleExpandChange}\r\n                                    isCheckBoxRequired={true}\r\n\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    gridTop={'10px'}\r\n                                    isActionRequired={true}\r\n                                    //   isToolBarRequired={true}\r\n                                    //  isExpandRequired={true}\r\n                                    //   isDownloadRequired={true}\r\n                                    isCollapseRequired={true}\r\n\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasChild={true}\r\n                                    hasSubChild={true}\r\n                                    childList={\r\n                                        this.props.Login.masterData.searchedData2 ||\r\n                                        this.props.Login.masterData.ReleaseSubSample\r\n                                    }\r\n                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                    childMappingField={\"npreregno\"}\r\n                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                    // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                    subChildList={\r\n                                        this.props.Login.masterData.searchedData3 ||\r\n                                        this.props.Login.masterData.ReleaseTest\r\n                                    }\r\n                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                    methodUrl={\"Release\"}\r\n                                    headerSelectionChange={this.headerSelectionChange}\r\n                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                    childSelectionChange={this.childSelectionChange}\r\n                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                    selectionChange={this.selectionChange}\r\n                                    selectAll={this.props.Login.selectAll}\r\n                                    releaseRecord={//this.props.getCOAReportType\r\n                                        this.onSaveModalClick}\r\n                                    viewDownloadFile={this.viewDownloadFile}\r\n                                    regnerateFile={this.regnerateFile}\r\n                                />\r\n                            </>}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            //  if (comboData.value !== this.props.Login.masterData.ProjectTypeValue.nprojecttypecode) {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                //  nregtypecode: comboData.value,\r\n                //  ProjectTypeValue: comboData.item,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                //  RegTypeValue: comboData.item\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n            // }\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                ModalStatusValue: true,\r\n                preregCheck: true,\r\n                isAddPopup: true,\r\n                ntype: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    searchSampleRef: this.searchSampleRef,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    skip: this.state.skip,\r\n                    take: this.state.take,\r\n                    testskip: this.state.testskip,\r\n                    testtake: this.state.testtake,\r\n\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n        }\r\n        // else if (fieldName === 'nprojectmastercode') {\r\n        //    // if (comboData.value !== this.props.Login.masterData.ProjectMasterValue.nprojectmastercode) {\r\n        //     const selectedRecord = this.state.selectedRecord || {};\r\n        //     selectedRecord[fieldName] = comboData;\r\n\r\n        //     this.setState({ selectedRecord });\r\n        //    // }\r\n        // }\r\n\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    viewDownloadFile = (inputData, row) => {\r\n        // this.props.generateReport()\r\n        this.onSaveModalClick(true, row, 'IDS_DOWNLOADFILE', true)\r\n    }\r\n    // regnerateFile = (inputData, row) => {\r\n    //     // this.props.generateReport()\r\n    //     this.onSaveModalClick(true, row, 'IDS_REGENERATEFILE')\r\n    // }\r\n    downloadReleasedFile = (action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        let sample = this.state.npreregno.filter((c, index) => {\r\n            return this.state.npreregno.indexOf(c) === index;\r\n        });\r\n        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n        });\r\n        let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n            return this.state.ntransactiontestcode.indexOf(c) === index;\r\n        });\r\n\r\n        npreregno = sample.map(x => x).join(\",\")\r\n\r\n        ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n        ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n        // if (ntransCode === transactionStatus.ALL) {\r\n        //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        // } else {\r\n        //     ntransCode = ntransCode\r\n        // }\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                    null,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                ntransactionstatus: String(transactionStatus.RELEASED),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                ntype: 1,\r\n                userinfo: this.props.Login.userInfo,\r\n                APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                checkBoxOperation: 3,\r\n                action,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n    regenerateReleasedFile = (action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        let sample = this.state.npreregno.filter((c, index) => {\r\n            return this.state.npreregno.indexOf(c) === index;\r\n        });\r\n        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n        });\r\n        let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n            return this.state.ntransactiontestcode.indexOf(c) === index;\r\n        });\r\n\r\n        npreregno = sample.map(x => x).join(\",\")\r\n\r\n        ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n        ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n        // if (ntransCode === transactionStatus.ALL) {\r\n        //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        // } else {\r\n        //     ntransCode = ntransCode\r\n        // }\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n               // npreregno: this.props.Login.masterData.selectedReleaseHistory.npreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                    null,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                ntransactionstatus: String(transactionStatus.RELEASED),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                ntype: 1,\r\n                userinfo: this.props.Login.userInfo,\r\n                APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                checkBoxOperation: 3,\r\n                action,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n        \r\n    }\r\n    onSaveModalClick = (nflag, row, action, preview) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        if (this.props.Login.masterData.ReleaseSample&&this.props.Login.masterData.ReleaseSample.length!==0) {\r\n\r\n        if (this.state.npreregno && this.state.npreregno.length > 0 || preview === true) {\r\n            let sample = this.state.npreregno.filter((c, index) => {\r\n                return this.state.npreregno.indexOf(c) === index;\r\n            });\r\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n            });\r\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                return this.state.ntransactiontestcode.indexOf(c) === index;\r\n            });\r\n            if (nflag === true) {\r\n                npreregno = row.dataItem['npreregno']\r\n\r\n            }\r\n            else {\r\n                npreregno = sample.map(x => x).join(\",\")\r\n            }\r\n            ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n            ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            // if (ntransCode === transactionStatus.ALL) {\r\n            //     ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            // } else {\r\n            //     ntransCode = ntransCode\r\n            // }\r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: String(npreregno),\r\n                    ntransactionsamplecode: ntransactionsamplecode,\r\n                    ntransactiontestcode: ntransactiontestcode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                    ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    ntype: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    checkBoxOperation: 3,\r\n                    action,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n            if (nflag === true) {\r\n                this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, \"isPreview\")\r\n            }\r\n            else {\r\n                this.props.getReleasedSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\" }));\r\n        }\r\n    }\r\n    else {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\" }));\r\n    }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField, combinedSearchField, checkedflag, npreregno } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n            npreregno = this.props.Login.npreregno\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\r\n            sampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            subsampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            testSearchField.map(item => { combinedSearchField.push(item) });\r\n\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField, combinedSearchField, checkedflag\r\n                , npreregno :[]\r\n            });\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                const reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                    reportFilePath\r\n\r\n\r\n                });\r\n\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.state.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                   const npreregno =  [];\r\n                //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n\r\n                // const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n\r\n                const reportFilePath = this.props.Login.ntransactiontestcode || [];\r\n\r\n                this.setState({\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\r\n                       npreregno,\r\n                    //ntransactionsamplecode, ntransactiontestcode,\r\n                    dataState\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realReportTypeValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n           // && realFilterStatusValue.sfilterstatus !== null\r\n         && inputData.ncoareporttypecode !==-1\r\n        ) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchRef: this.searchRef,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n                //    this.props.Login.masterData.ReleaseSample.map(data => {\r\n                //        if (data.npreregno === value.npreregno) {\r\n                //         data.selected = checked\r\n\r\n                //        }\r\n                //    })\r\n            })\r\n\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = []\r\n        if (subsamplecode !== undefined) {\r\n            transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            let rFlag = true;\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n            // let x;\r\n            // let i;\r\n            // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\r\n            //     x=i\r\n            //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\r\n            //             // item.selected = checked;\r\n            //             rFlag = false;\r\n            //             break;\r\n            //         }\r\n            // }\r\n\r\n            // if (rFlag === true) {\r\n            //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\r\n            // }\r\n        }\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            //this.setState({headerSelect:checked})  \r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n          else {\r\n            this.setState({npreregno:[],ntransactionsamplecode:[],ntransactiontestcode:[]})\r\n          }\r\n        // }else\r\n        // {\r\n        //     this.setState({npreregno:[]})\r\n        // }\r\n\r\n\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo); \r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n\r\n\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            // Don't Remove\r\n            // if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n            //     ntransactiontestcode.push(item.ntransactiontestcode)\r\n            // }\r\n        }\r\n        else {\r\n            const npreregno1 = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = npreregno1\r\n\r\n            const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = ntransactionsamplecode1\r\n            // Don't Remove\r\n            // const ntransactiontestcode1 = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            // ntransactiontestcode = ntransactiontestcode1\r\n        }\r\n        //      const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n        //         npreregno: npreregno,\r\n        //         ntransactionsamplecode:ntransactionsamplecode,\r\n        //         ntransactiontestcode:ntransactiontestcode\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ npreregno: checkedflag === false ? [] : npreregno, ntransactionsamplecode: ntransactionsamplecode, ntransactiontestcode: ntransactiontestcode })\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getReleasedSelectedSampleSubSampleTest, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, getApprovedSample\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}