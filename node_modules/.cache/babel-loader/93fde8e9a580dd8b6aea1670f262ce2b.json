{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { NodeSelection, insertNode } from '@progress/kendo-editor-common';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\n/**\n * @hidden\n */\n\nvar InsertImageDialog = function (_super) {\n  __extends(InsertImageDialog, _super);\n\n  function InsertImageDialog() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.src = null;\n    _this.altText = null;\n    _this.title = null;\n    _this.width = null;\n    _this.height = null;\n\n    _this.onClose = function () {\n      _this.props.view.focus();\n\n      _this.props.onClose();\n    };\n\n    _this.onInsert = function () {\n      var _a = _this.props,\n          view = _a.view,\n          settings = _a.settings;\n      var nodes = view.state.schema.nodes;\n      var nodeType = nodes[settings.node];\n      var data = {\n        src: _this.src ? _this.src.value : null,\n        title: _this.title ? _this.title.value : null,\n        alt: _this.altText ? _this.altText.value : null,\n        width: _this.width ? _this.width.value : null,\n        height: _this.height ? _this.height.value : null\n      };\n      var attrs = Object.keys(data).filter(function (key) {\n        return data[key] !== null && data[key] !== '';\n      }).reduce(function (acc, curr) {\n        var _a;\n\n        return Object.assign(acc, (_a = {}, _a[curr] = data[curr], _a));\n      }, {});\n      var newImage = nodeType.createAndFill(attrs);\n      var insertImageCmd = insertNode(newImage, true);\n      insertImageCmd(view.state, function (tr) {\n        return view.dispatch(tr.setMeta('commandName', settings.commandName).setMeta('args', attrs));\n      });\n\n      _this.onClose();\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  InsertImageDialog.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        view = _a.view,\n        settings = _a.settings,\n        dir = _a.dir,\n        render = _a.render;\n    var _b = settings.messages,\n        insertImageDialogTitle = _b.insertImageDialogTitle,\n        insertImageAddress = _b.insertImageAddress,\n        insertImageTitle = _b.insertImageTitle,\n        insertImageAltText = _b.insertImageAltText,\n        insertImageWidth = _b.insertImageWidth,\n        insertImageHeight = _b.insertImageHeight,\n        insertImageCancel = _b.insertImageCancel,\n        insertImageInsert = _b.insertImageInsert;\n    var localization = provideLocalizationService(this);\n    var state = view && view.state;\n    var attrs = {};\n\n    if (state && state.selection instanceof NodeSelection && state.selection.node.type === state.schema.nodes[settings.node]) {\n      attrs = state.selection.node.attrs;\n    }\n\n    var content = React.createElement(\"div\", {\n      className: \"k-edit-form-container\"\n    }, React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-image-url\"\n    }, localization.toLanguageString(insertImageAddress, messages[insertImageAddress]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-image-url\",\n      defaultValue: attrs.src,\n      ref: function ref(e) {\n        return _this.src = e;\n      },\n      autoFocus: true\n    })), React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-image-alt\"\n    }, localization.toLanguageString(insertImageAltText, messages[insertImageAltText]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-image-alt\",\n      defaultValue: attrs.alt,\n      ref: function ref(e) {\n        return _this.altText = e;\n      }\n    })), React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-image-title\"\n    }, localization.toLanguageString(insertImageTitle, messages[insertImageTitle]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-image-title\",\n      defaultValue: attrs.title,\n      ref: function ref(e) {\n        return _this.title = e;\n      }\n    })), React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-image-width\"\n    }, localization.toLanguageString(insertImageWidth, messages[insertImageWidth]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-image-width\",\n      defaultValue: attrs.width,\n      ref: function ref(e) {\n        return _this.width = e;\n      }\n    })), React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-image-height\"\n    }, localization.toLanguageString(insertImageHeight, messages[insertImageHeight]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-image-height\",\n      defaultValue: attrs.height,\n      ref: function ref(e) {\n        return _this.height = e;\n      }\n    })));\n    var actionButtons = [React.createElement(Button, {\n      onClick: this.onClose,\n      dir: dir,\n      key: \"cancel\"\n    }, localization.toLanguageString(insertImageCancel, messages[insertImageCancel])), React.createElement(Button, {\n      onClick: this.onInsert,\n      primary: true,\n      dir: dir,\n      key: \"insert\"\n    }, localization.toLanguageString(insertImageInsert, messages[insertImageInsert]))];\n    var dialog = React.createElement(Dialog, {\n      title: localization.toLanguageString(insertImageDialogTitle, messages[insertImageDialogTitle]),\n      onClose: this.onClose,\n      key: \"dialog\",\n      closeIcon: true,\n      dir: dir,\n      style: dir === 'rtl' ? {\n        textAlign: 'right'\n      } : undefined\n    }, content, React.createElement(DialogActionsBar, null, actionButtons));\n    return render ? render(dialog, {\n      content: content,\n      actionButtons: actionButtons\n    }) : createPortal(dialog, document.body);\n  };\n\n  return InsertImageDialog;\n}(React.Component);\n\nexport { InsertImageDialog };\nregisterForLocalization(InsertImageDialog);","map":{"version":3,"sources":["../../../src/dialogs/insertImage.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { NodeSelection, insertNode } from '@progress/kendo-editor-common';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\n/**\n * @hidden\n */\nvar InsertImageDialog = /** @class */ (function (_super) {\n    __extends(InsertImageDialog, _super);\n    function InsertImageDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.src = null;\n        _this.altText = null;\n        _this.title = null;\n        _this.width = null;\n        _this.height = null;\n        _this.onClose = function () {\n            _this.props.view.focus();\n            _this.props.onClose();\n        };\n        _this.onInsert = function () {\n            var _a = _this.props, view = _a.view, settings = _a.settings;\n            var nodes = view.state.schema.nodes;\n            var nodeType = nodes[settings.node];\n            var data = {\n                src: _this.src ? _this.src.value : null,\n                title: _this.title ? _this.title.value : null,\n                alt: _this.altText ? _this.altText.value : null,\n                width: _this.width ? _this.width.value : null,\n                height: _this.height ? _this.height.value : null\n            };\n            var attrs = Object.keys(data)\n                .filter(function (key) { return data[key] !== null && data[key] !== ''; })\n                .reduce(function (acc, curr) {\n                var _a;\n                return Object.assign(acc, (_a = {}, _a[curr] = data[curr], _a));\n            }, {});\n            var newImage = nodeType.createAndFill(attrs);\n            var insertImageCmd = insertNode(newImage, true);\n            insertImageCmd(view.state, function (tr) { return view.dispatch(tr.setMeta('commandName', settings.commandName).setMeta('args', attrs)); });\n            _this.onClose();\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    InsertImageDialog.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, view = _a.view, settings = _a.settings, dir = _a.dir, render = _a.render;\n        var _b = settings.messages, insertImageDialogTitle = _b.insertImageDialogTitle, insertImageAddress = _b.insertImageAddress, insertImageTitle = _b.insertImageTitle, insertImageAltText = _b.insertImageAltText, insertImageWidth = _b.insertImageWidth, insertImageHeight = _b.insertImageHeight, insertImageCancel = _b.insertImageCancel, insertImageInsert = _b.insertImageInsert;\n        var localization = provideLocalizationService(this);\n        var state = view && view.state;\n        var attrs = {};\n        if (state && state.selection instanceof NodeSelection &&\n            state.selection.node.type === state.schema.nodes[settings.node]) {\n            attrs = state.selection.node.attrs;\n        }\n        var content = (React.createElement(\"div\", { className: \"k-edit-form-container\" },\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-image-url\" }, localization.toLanguageString(insertImageAddress, messages[insertImageAddress]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-image-url\", defaultValue: attrs.src, ref: function (e) { return _this.src = e; }, autoFocus: true })),\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-image-alt\" }, localization.toLanguageString(insertImageAltText, messages[insertImageAltText]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-image-alt\", defaultValue: attrs.alt, ref: function (e) { return _this.altText = e; } })),\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-image-title\" }, localization.toLanguageString(insertImageTitle, messages[insertImageTitle]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-image-title\", defaultValue: attrs.title, ref: function (e) { return _this.title = e; } })),\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-image-width\" }, localization.toLanguageString(insertImageWidth, messages[insertImageWidth]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-image-width\", defaultValue: attrs.width, ref: function (e) { return _this.width = e; } })),\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-image-height\" }, localization.toLanguageString(insertImageHeight, messages[insertImageHeight]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-image-height\", defaultValue: attrs.height, ref: function (e) { return _this.height = e; } }))));\n        var actionButtons = [(React.createElement(Button, { onClick: this.onClose, dir: dir, key: \"cancel\" }, localization.toLanguageString(insertImageCancel, messages[insertImageCancel]))), (React.createElement(Button, { onClick: this.onInsert, primary: true, dir: dir, key: \"insert\" }, localization.toLanguageString(insertImageInsert, messages[insertImageInsert])))];\n        var dialog = (React.createElement(Dialog, { title: localization.toLanguageString(insertImageDialogTitle, messages[insertImageDialogTitle]), onClose: this.onClose, key: \"dialog\", closeIcon: true, dir: dir, style: dir === 'rtl' ? { textAlign: 'right' } : undefined },\n            content,\n            React.createElement(DialogActionsBar, null, actionButtons)));\n        return render ? render(dialog, { content: content, actionButtons: actionButtons }) :\n            createPortal(dialog, document.body);\n    };\n    return InsertImageDialog;\n}(React.Component));\nexport { InsertImageDialog };\nregisterForLocalization(InsertImageDialog);\n//# sourceMappingURL=insertImage.js.map"]},"metadata":{},"sourceType":"module"}