{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\MethodValidityTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { faPlus, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst MethodValidityTab = props => {\n  const addId = props.controlMap.has(\"AddMethodValidity\") && props.controlMap.get(\"AddMethodValidity\").ncontrolcode;\n  const approveId = props.controlMap.has(\"ApprovalMethodValidity\") && props.controlMap.get(\"ApprovalMethodValidity\").ncontrolcode; //const editId = props.controlMap.has(\"EditMethodValidity\") && props.controlMap.get(\"EditMethodValidity\").ncontrolcode;\n\n  const deleteId = props.controlMap.has(\"DeleteMethodValidity\") && props.controlMap.get(\"DeleteMethodValidity\").ncontrolcode;\n  const methodValidityColumnList = [{\n    \"idsName\": \"IDS_METHODVALIDITYSTARTDATE\",\n    \"dataField\": \"svaliditystartdate\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_VALIDITYENDDATE\",\n    \"dataField\": \"svalidityenddate\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_DISPLAYSTATUS\",\n    \"dataField\": \"sdisplaystatus\",\n    \"width\": \"200px\"\n  }];\n  const methodUrl = \"MethodValidity\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addmethodvalidity\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addId) === -1,\n    onClick: () => props.openChildModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_METHODVALIDITY\",\n    defaultMessage: \"Method Validity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"approvalmethodvalidity\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(approveId) === -1,\n    onClick: () => props.onApproveClick(\"MethodValidity\", \"approve\", \"nmethodvaliditycode\", approveId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faThumbsUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), \" \"))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid //key=\"methodvaliditykey\"\n  , {\n    primaryKeyField: \"nmethodvaliditycode\",\n    selectedId: props.operation === \"update\" ? props.selectedId : props.selectedComponent ? props.selectedComponent.nmethodvaliditycode : null,\n    data: props.MethodValidity,\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: methodValidityColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    fetchRecord: props.fetchMethodValidityById,\n    editParam: props.editParam,\n    inputParam: props.inputParam,\n    userInfo: props.userInfo,\n    deleteRecord: props.deleteRecord,\n    handleRowClick: props.handleComponentRowClick,\n    pageable: false,\n    scrollable: 'scrollable',\n    gridHeight: '600px',\n    isActionRequired: true,\n    deleteParam: {\n      operation: \"delete\",\n      methodUrl\n    },\n    methodUrl: methodUrl,\n    hideColumnFilter: false,\n    onSwitchChange: props.defaultRecord,\n    switchParam: {\n      operation: \"Default\",\n      methodUrl\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(MethodValidityTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/MethodValidityTab.jsx"],"names":["React","injectIntl","FormattedMessage","faPlus","faThumbsUp","Nav","Row","Col","FontAwesomeIcon","DataGrid","transactionStatus","MethodValidityTab","props","addId","controlMap","has","get","ncontrolcode","approveId","deleteId","methodValidityColumnList","methodUrl","userRoleControlRights","indexOf","openChildModal","onApproveClick","operation","selectedId","selectedComponent","nmethodvaliditycode","MethodValidity","dataResult","dataState","dataStateChange","fetchMethodValidityById","editParam","inputParam","userInfo","deleteRecord","handleComponentRowClick","defaultRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { faPlus ,faThumbsUp} from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst MethodValidityTab = (props) => {\r\n    const addId = props.controlMap.has(\"AddMethodValidity\") && props.controlMap.get(\"AddMethodValidity\").ncontrolcode;\r\n    const approveId = props.controlMap.has(\"ApprovalMethodValidity\") && props.controlMap.get(\"ApprovalMethodValidity\").ncontrolcode;\r\n    //const editId = props.controlMap.has(\"EditMethodValidity\") && props.controlMap.get(\"EditMethodValidity\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"DeleteMethodValidity\") && props.controlMap.get(\"DeleteMethodValidity\").ncontrolcode;\r\n    const methodValidityColumnList = [\r\n        {\"idsName\":\"IDS_METHODVALIDITYSTARTDATE\",\"dataField\":\"svaliditystartdate\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_VALIDITYENDDATE\",\"dataField\":\"svalidityenddate\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_DISPLAYSTATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"200px\"}\r\n    ];\r\n    const methodUrl = \"MethodValidity\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addmethodvalidity\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                        onClick={()=>props.openChildModal()}>\r\n                        \r\n                        <FontAwesomeIcon icon = { faPlus } />{\" \"}\r\n                        <FormattedMessage id=\"IDS_METHODVALIDITY\" defaultMessage=\"Method Validity\"></FormattedMessage>\r\n                    </Nav.Link>\r\n                    <Nav.Link name=\"approvalmethodvalidity\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(approveId) === -1}\r\n                        onClick={() => props.onApproveClick(\"MethodValidity\", \"approve\", \"nmethodvaliditycode\", approveId)}>\r\n                        \r\n                        <FontAwesomeIcon icon = { faThumbsUp } />{\" \"}\r\n                        {/* <FormattedMessage id=\"IDS_APPROVALMETHODVALIDITY\" defaultMessage=\"Method Validity\"></FormattedMessage> */}\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        //key=\"methodvaliditykey\"\r\n                        primaryKeyField = \"nmethodvaliditycode\"\r\n                        selectedId={props.operation === \"update\" ? props.selectedId : props.selectedComponent ?\r\n                            props.selectedComponent.nmethodvaliditycode : null}\r\n                        data = {props.MethodValidity}\r\n                        dataResult = {props.dataResult}\r\n                        dataState = {props.dataState}\r\n                        dataStateChange = {props.dataStateChange}\r\n                        extractedColumnList = {methodValidityColumnList}\r\n                        controlMap = {props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        fetchRecord={props.fetchMethodValidityById}\r\n                        editParam={props.editParam}\r\n                        inputParam = {props.inputParam}\r\n                        userInfo = {props.userInfo}\r\n                        deleteRecord = {props.deleteRecord}\r\n                        handleRowClick={props.handleComponentRowClick}\r\n                        pageable={false}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight = {'600px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange = {props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}} \r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(MethodValidityTab);"]},"metadata":{},"sourceType":"module"}