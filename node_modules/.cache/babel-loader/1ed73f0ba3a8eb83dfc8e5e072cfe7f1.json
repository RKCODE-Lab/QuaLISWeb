{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryFilter.jsx\";\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl'; //import { comboChangeUserRolePolicy } from '../../actions';\n\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nclass ResultEntryFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showMoreToggle = () => {\n      this.setState({\n        showMore: !this.state.showMore\n      });\n    };\n\n    this.state = {\n      showMore: false\n    };\n  }\n\n  render() {\n    console.log(\"date:\", this.props.fromDate, this.props.toDate);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side_more_filter_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      selected: this.props.fromDate,\n      value: this.props.fromDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.onFilterComboChange(date, \"fromDate\"),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      selected: this.props.toDate,\n      value: this.props.toDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.onFilterComboChange(date, \"toDate\"),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nsampletypecode\",\n      optionId: \"nsampletypecode\",\n      optionValue: \"ssampletypename\",\n      className: \"form-control\",\n      options: this.props.SampleType,\n      value: this.props.SampleTypeValue ? {\n        \"label\": this.props.SampleTypeValue.ssampletypename,\n        \"value\": this.props.SampleTypeValue.nsampletypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nsampletypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nregtypecode\",\n      className: \"form-control\",\n      options: this.props.RegType,\n      value: this.props.RegTypeValue ? {\n        \"label\": this.props.RegTypeValue.sregtypename,\n        \"value\": this.props.RegTypeValue.nregtypecode\n      } : \"\",\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\",\n      className: \"form-control\",\n      options: this.props.RegSubType,\n      value: this.props.RegSubTypeValue ? {\n        \"label\": this.props.RegSubTypeValue.sregsubtypename,\n        \"value\": this.props.RegSubTypeValue.nregsubtypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregsubtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TESTSTATUS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"ntransactionstatus\",\n      optionId: \"ntransactionstatus\",\n      optionValue: \"sfilterstatus\",\n      className: \"form-control\",\n      options: this.props.FilterStatus,\n      value: this.props.FilterStatusValue ? {\n        \"label\": this.props.FilterStatusValue.sfilterstatus,\n        \"value\": this.props.FilterStatusValue.ntransactionstatus\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"filter\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }))), !this.state.showMore ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_open\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 85\n      }\n    }), \" \") : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: `side_more_filter ${this.state.showMore ? 'active' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_close\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 86\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"sversionname\",\n      optionId: \"napprovalconfigversioncode\",\n      optionValue: \"sversionname\",\n      className: \"form-control\",\n      options: this.props.ApprovalVersion,\n      value: this.props.ApprovalVersionValue ? {\n        \"label\": this.props.ApprovalVersionValue.sversionname,\n        \"value\": this.props.ApprovalVersionValue.napprovalconfigversioncode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"version\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TEST\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"ntestcode\",\n      optionId: \"ntestcode\",\n      optionValue: \"stestsynonym\",\n      className: \"form-control\",\n      options: this.props.Test,\n      value: this.props.TestValue ? {\n        \"label\": this.props.TestValue.stestsynonym,\n        \"value\": this.props.TestValue.ntestcode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"test\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default injectIntl(ResultEntryFilter);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryFilter.jsx"],"names":["faAngleDoubleRight","faTimes","FontAwesomeIcon","React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","ResultEntryFilter","Component","constructor","props","showMoreToggle","setState","showMore","state","render","console","log","fromDate","toDate","intl","formatMessage","id","userInfo","ssitedate","date","onFilterComboChange","SampleType","SampleTypeValue","ssampletypename","nsampletypecode","event","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode","FilterStatus","FilterStatusValue","sfilterstatus","ntransactionstatus","ApprovalVersion","ApprovalVersionValue","sversionname","napprovalconfigversioncode","Test","TestValue","stestsynonym","ntestcode"],"mappings":"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","sourcesContent":["import { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n//import { comboChangeUserRolePolicy } from '../../actions';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nclass ResultEntryFilter extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore:false\r\n        }\r\n    }\r\n\r\n    showMoreToggle =() =>{\r\n        this.setState({\r\n            showMore : !this.state.showMore\r\n           \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"date:\", this.props.fromDate, this.props.toDate);\r\n        return (\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.onFilterComboChange(date, \"fromDate\")}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.onFilterComboChange(date, \"toDate\")}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue ? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nsampletypecode\")}\r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue ? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregtypecode\")}\r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue ? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregsubtypecode\")}\r\n                        />\r\n\r\n                        {/* <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_JOBSTATUS\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_JOBSTATUS\" })}\r\n                            name=\"sidsjobstatusname\"\r\n                            optionId=\"njobstatuscode\"\r\n                            optionValue=\"sidsjobstatusname\"\r\n                            className='form-control'\r\n                            options={props.REJobStatus}\r\n                            value={props.JobStatusValue ? { \"label\": props.JobStatusValue.sidsjobstatusname, \"value\": props.JobStatusValue.njobstatuscode } : \"\"}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => props.onFilterComboChange(event, \"jobstatus\")}\r\n                        /> */}\r\n\r\n              {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_DESIGNTEMPLATE\" })}\r\n                    isSearchable={true}\r\n                    name={\"ndesigntemplatemappingcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.DynamicDesignMapping}\r\n                    optionId=\"ndesigntemplatemappingcode\"\r\n                    optionValue=\"sregtemplatename\"\r\n                    value={this.props.DesignTemplateMappingValue ? { \"label\": this.props.DesignTemplateMappingValue.sregtemplatename, \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"ndesigntemplatemappingcode\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onDesignTemplateChange(event, 'ndesigntemplatemappingcode', 'DesignTemplateMappingValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> */}\r\n\r\n\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTSTATUS\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"ntransactionstatus\"\r\n                            optionId=\"ntransactionstatus\"\r\n                            optionValue=\"sfilterstatus\"\r\n                            className='form-control'\r\n                            options={this.props.FilterStatus}\r\n                            value={this.props.FilterStatusValue ? { \"label\": this.props.FilterStatusValue.sfilterstatus, \"value\": this.props.FilterStatusValue.ntransactionstatus } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"filter\")}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.showMore ? \r\n                <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}   \r\n                <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONFIGVERSION\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"sversionname\"\r\n                                optionId=\"napprovalconfigversioncode\"\r\n                                optionValue=\"sversionname\"\r\n                                className='form-control'\r\n                                options={this.props.ApprovalVersion}\r\n                                value={this.props.ApprovalVersionValue ? { \"label\": this.props.ApprovalVersionValue.sversionname, \"value\": this.props.ApprovalVersionValue.napprovalconfigversioncode } : \"\"}\r\n                                isMandatory={false}\r\n                            \r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"version\")}\r\n                            />\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                name=\"ntestcode\"\r\n                                optionId=\"ntestcode\"\r\n                                optionValue=\"stestsynonym\"\r\n                                className='form-control'\r\n                                options={this.props.Test}\r\n                                value={this.props.TestValue ? { \"label\": this.props.TestValue.stestsynonym, \"value\": this.props.TestValue.ntestcode } : \"\"}\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"test\")}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>  \r\n            </div> \r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ResultEntryFilter)"]},"metadata":{},"sourceType":"module"}