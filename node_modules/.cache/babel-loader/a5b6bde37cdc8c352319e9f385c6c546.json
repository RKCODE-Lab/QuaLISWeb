{"ast":null,"code":"export const stringOperatorData = [{\n  label: \"equals(=)\",\n  value: 1,\n  items: {\n    label: \"==\",\n    value: 1,\n    symbol: \"$eq\",\n    isInputVisible: false,\n    symbolType: 1,\n    needmasterdata: false\n  }\n}, {\n  label: \"!=\",\n  value: 2,\n  items: {\n    label: \"!=\",\n    value: 2,\n    symbol: \"$ne\",\n    isInputVisible: false,\n    symbolType: 1,\n    needmasterdata: false\n  }\n}, {\n  label: \"Is empty\",\n  value: 3,\n  items: {\n    label: \"Is empty\",\n    value: 3,\n    symbol: \"$eq\",\n    isInputVisible: false,\n    symbolType: 2,\n    needmasterdata: false\n  }\n}, {\n  label: \"Is not empty\",\n  value: 4,\n  items: {\n    label: \"Is not empty\",\n    value: 4,\n    symbol: \"$ne\",\n    isInputVisible: false,\n    symbolType: 2,\n    needmasterdata: false\n  }\n}, {\n  label: \"Is null\",\n  value: 5,\n  items: {\n    label: \"Is null\",\n    value: 5,\n    symbol: \"$nnull\",\n    isInputVisible: false,\n    symbolType: 3,\n    needmasterdata: false\n  }\n}, {\n  label: \"Is not null\",\n  value: 6,\n  items: {\n    label: \"Is not null\",\n    value: 6,\n    symbol: \"$null\",\n    isInputVisible: false,\n    symbolType: 3,\n    needmasterdata: false\n  }\n}, {\n  label: \"Like\",\n  value: 7,\n  items: {\n    label: \"Like\",\n    value: 7,\n    symbol: \"$like\",\n    replacewith: \"'%_%'\",\n    isInputVisible: false,\n    symbolType: 4,\n    needmasterdata: false\n  }\n}, {\n  label: \"Not like\",\n  value: 8,\n  items: {\n    label: \"Not like\",\n    value: 8,\n    symbol: \"$nlike\",\n    replacewith: \"'%_%'\",\n    isInputVisible: false,\n    symbolType: 4,\n    needmasterdata: false\n  }\n}, {\n  label: \"Starts with\",\n  value: 9,\n  items: {\n    label: \"Starts with\",\n    value: 9,\n    symbol: \"$like\",\n    replacewith: \"'_%'\",\n    isInputVisible: false,\n    symbolType: 4,\n    needmasterdata: false\n  }\n}, {\n  label: \"Ends with\",\n  value: 10,\n  items: {\n    label: \"Ends with\",\n    value: 10,\n    symbol: \"$like\",\n    replacewith: \"'%_'\",\n    isInputVisible: false,\n    symbolType: 4,\n    needmasterdata: false\n  }\n}, {\n  label: \"Any in\",\n  value: 11,\n  items: {\n    label: \"Any in\",\n    value: 3,\n    symbol: \"$in\",\n    isInputVisible: false,\n    ismulti: true,\n    symbolType: 6,\n    needmasterdata: false\n  }\n}, {\n  label: \"Not in\",\n  value: 12,\n  items: {\n    label: \"Not in\",\n    value: 4,\n    symbol: \"$nin\",\n    isInputVisible: false,\n    ismulti: true,\n    symbolType: 6,\n    needmasterdata: false\n  }\n}];\nexport const numericOperatorData = [{\n  label: \"equals(=)\",\n  value: 1,\n  items: {\n    label: \"==\",\n    value: 1,\n    symbol: \"$eq\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, {\n  label: \"!=\",\n  value: 2,\n  items: {\n    label: \"!=\",\n    value: 2,\n    symbol: \"$ne\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, {\n  label: \"<\",\n  value: 3,\n  items: {\n    label: \"<\",\n    value: 3,\n    symbol: \"$lt\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, {\n  label: \"<=\",\n  value: 4,\n  items: {\n    label: \"<=\",\n    value: 4,\n    symbol: \"$lte\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, {\n  label: \">\",\n  value: 5,\n  items: {\n    label: \">\",\n    value: 5,\n    symbol: \"$gt\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, {\n  label: \">=\",\n  value: 6,\n  items: {\n    label: \">=\",\n    value: 6,\n    symbol: \"$gte\",\n    isInputVisible: true,\n    symbolType: 1\n  }\n}, // { label: \"Between\", value: 7, items: { label: \"Between\", value: 7, symbol: \"\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\n// { label: \"Not between\", value: 8, items: { label: \"Not between\", value: 8, symbol: \"$not\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\n{\n  label: \"Is null\",\n  value: 9,\n  items: {\n    label: \"Is null\",\n    value: 9,\n    symbol: \"$nnull\",\n    isInputVisible: false,\n    symbolType: 3\n  }\n}, {\n  label: \"Is not null\",\n  value: 10,\n  items: {\n    label: \"Is not null\",\n    value: 10,\n    symbol: \"$null\",\n    isInputVisible: false,\n    symbolType: 3\n  }\n}];\nexport const conditionalOperatorData = [{\n  label: \"equals (=)\",\n  value: 1,\n  items: {\n    label: \"equals (=)\",\n    value: 1,\n    symbol: \"$eq\",\n    isInputVisible: true,\n    ismulti: false,\n    symbolType: 1\n  }\n}, {\n  label: \"not equals (!=)\",\n  value: 2,\n  items: {\n    label: \"not equals (!=)\",\n    value: 2,\n    symbol: \"$ne\",\n    isInputVisible: true,\n    ismulti: false,\n    symbolType: 1\n  }\n}, {\n  label: \"Any in\",\n  value: 3,\n  items: {\n    label: \"Any in\",\n    value: 3,\n    symbol: \"$in\",\n    isInputVisible: true,\n    ismulti: true,\n    symbolType: 6\n  }\n}, {\n  label: \"Not in\",\n  value: 4,\n  items: {\n    label: \"Not in\",\n    value: 4,\n    symbol: \"$nin\",\n    isInputVisible: true,\n    ismulti: true,\n    symbolType: 6\n  }\n}, {\n  label: \"Is null\",\n  value: 5,\n  items: {\n    label: \"Is null\",\n    value: 5,\n    symbol: \"$nnull\",\n    isInputVisible: false,\n    ismulti: false,\n    symbolType: 3\n  }\n}, {\n  label: \"Is not null\",\n  value: 6,\n  items: {\n    label: \"Is not null\",\n    value: 6,\n    symbol: \"$null\",\n    isInputVisible: false,\n    ismulti: false,\n    symbolType: 3\n  }\n}];\nexport const joinConditionData = [{\n  label: \"Inner join\",\n  value: 1,\n  items: {\n    label: \"Inner join\",\n    value: 1,\n    symbol: \"inner\"\n  }\n}, {\n  label: \"Left join\",\n  value: 2,\n  items: {\n    label: \"Left join\",\n    value: 2,\n    symbol: \"left\"\n  }\n}, {\n  label: \"Right join\",\n  value: 3,\n  items: {\n    label: \"Right join\",\n    value: 3,\n    symbol: \"right\"\n  }\n}];\nexport const aggregateFunction = [{\n  label: \"Min\",\n  value: 1,\n  items: {\n    label: \"Min\",\n    value: 1\n  }\n}, {\n  label: \"Max\",\n  value: 2,\n  items: {\n    label: \"Max\",\n    value: 2\n  }\n}, {\n  label: \"Sum\",\n  value: 3,\n  items: {\n    label: \"Sum\",\n    value: 3\n  }\n}, {\n  label: \"Count\",\n  value: 4,\n  items: {\n    label: \"Count\",\n    value: 4\n  }\n}, {\n  label: \"Avg\",\n  value: 5,\n  items: {\n    label: \"Avg\",\n    value: 5\n  }\n}];\nexport const orderByList = [{\n  label: \"asc\",\n  value: 1,\n  items: {\n    label: \"asc\",\n    value: 1\n  }\n}, {\n  label: \"desc\",\n  value: 2,\n  items: {\n    label: \"desc\",\n    value: 2\n  }\n}];","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/RuleEngineQueryBuilderData.js"],"names":["stringOperatorData","label","value","items","symbol","isInputVisible","symbolType","needmasterdata","replacewith","ismulti","numericOperatorData","conditionalOperatorData","joinConditionData","aggregateFunction","orderByList"],"mappings":"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","sourcesContent":["export const stringOperatorData = [\r\n    { label: \"equals(=)\", value: 1, items: { label: \"==\", value: 1, symbol: \"$eq\", isInputVisible: false, symbolType: 1, needmasterdata: false } },\r\n    { label: \"!=\", value: 2, items: { label: \"!=\", value: 2, symbol: \"$ne\", isInputVisible: false, symbolType: 1, needmasterdata: false } },\r\n    { label: \"Is empty\", value: 3, items: { label: \"Is empty\", value: 3, symbol: \"$eq\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\r\n    { label: \"Is not empty\", value: 4, items: { label: \"Is not empty\", value: 4, symbol: \"$ne\", isInputVisible: false, symbolType: 2, needmasterdata: false } },\r\n    { label: \"Is null\", value: 5, items: { label: \"Is null\", value: 5, symbol: \"$nnull\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\r\n    { label: \"Is not null\", value: 6, items: { label: \"Is not null\", value: 6, symbol: \"$null\", isInputVisible: false, symbolType: 3, needmasterdata: false } },\r\n    { label: \"Like\", value: 7, items: { label: \"Like\", value: 7, symbol: \"$like\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    { label: \"Not like\", value: 8, items: { label: \"Not like\", value: 8, symbol: \"$nlike\", replacewith: \"'%_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    { label: \"Starts with\", value: 9, items: { label: \"Starts with\", value: 9, symbol: \"$like\", replacewith: \"'_%'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    { label: \"Ends with\", value: 10, items: { label: \"Ends with\", value: 10, symbol: \"$like\", replacewith: \"'%_'\", isInputVisible: false, symbolType: 4, needmasterdata: false } },\r\n    { label: \"Any in\", value: 11, items: { label: \"Any in\", value: 3, symbol: \"$in\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } },\r\n    { label: \"Not in\", value: 12, items: { label: \"Not in\", value: 4, symbol: \"$nin\", isInputVisible: false, ismulti: true, symbolType: 6, needmasterdata: false } }\r\n];\r\n\r\nexport const numericOperatorData = [\r\n    { label: \"equals(=)\", value: 1, items: { label: \"==\", value: 1, symbol: \"$eq\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"!=\", value: 2, items: { label: \"!=\", value: 2, symbol: \"$ne\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"<\", value: 3, items: { label: \"<\", value: 3, symbol: \"$lt\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \"<=\", value: 4, items: { label: \"<=\", value: 4, symbol: \"$lte\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \">\", value: 5, items: { label: \">\", value: 5, symbol: \"$gt\", isInputVisible: true, symbolType: 1 } },\r\n    { label: \">=\", value: 6 , items: { label: \">=\", value: 6, symbol: \"$gte\", isInputVisible: true, symbolType: 1 }},\r\n    // { label: \"Between\", value: 7, items: { label: \"Between\", value: 7, symbol: \"\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\r\n    // { label: \"Not between\", value: 8, items: { label: \"Not between\", value: 8, symbol: \"$not\", replacewith: [\"$gte\", \"$lte\"], isInputVisible: true, symbolType: 5 } },\r\n    { label: \"Is null\", value: 9, items: { label: \"Is null\", value: 9, symbol: \"$nnull\", isInputVisible: false, symbolType: 3 } },\r\n    { label: \"Is not null\", value: 10, items: { label: \"Is not null\", value: 10, symbol: \"$null\", isInputVisible: false, symbolType: 3 } }\r\n];\r\n\r\nexport const conditionalOperatorData = [\r\n    { label: \"equals (=)\", value: 1, items: { label: \"equals (=)\", value: 1, symbol: \"$eq\", isInputVisible: true, ismulti: false, symbolType: 1 } },\r\n    { label: \"not equals (!=)\", value: 2, items: { label: \"not equals (!=)\", value: 2, symbol: \"$ne\", isInputVisible: true, ismulti: false, symbolType: 1 } },\r\n    { label: \"Any in\", value: 3, items: { label: \"Any in\", value: 3, symbol: \"$in\", isInputVisible: true, ismulti: true, symbolType: 6 } },\r\n    { label: \"Not in\", value: 4, items: { label: \"Not in\", value: 4, symbol: \"$nin\", isInputVisible: true, ismulti: true, symbolType: 6 } },\r\n    { label: \"Is null\", value: 5, items: { label: \"Is null\", value: 5, symbol: \"$nnull\", isInputVisible: false, ismulti: false, symbolType: 3 } },\r\n    { label: \"Is not null\", value: 6, items: { label: \"Is not null\", value: 6, symbol: \"$null\", isInputVisible: false, ismulti: false, symbolType: 3 } }\r\n];\r\n\r\nexport const joinConditionData = [\r\n    { label: \"Inner join\", value: 1, items: { label: \"Inner join\", value: 1, symbol: \"inner\" } },\r\n    { label: \"Left join\", value: 2, items: { label: \"Left join\", value: 2, symbol: \"left\" } },\r\n    { label: \"Right join\", value: 3, items: { label: \"Right join\", value: 3, symbol: \"right\" } }\r\n];\r\n\r\nexport const aggregateFunction = [\r\n    { label: \"Min\", value: 1, items: { label: \"Min\", value: 1 } },\r\n    { label: \"Max\", value: 2, items: { label: \"Max\", value: 2 } },\r\n    { label: \"Sum\", value: 3, items: {  label: \"Sum\", value: 3 } },\r\n    { label: \"Count\", value: 4, items: { label: \"Count\", value: 4 } },\r\n    { label: \"Avg\", value: 5, items: {  label: \"Avg\", value: 5 } }\r\n];\r\n\r\nexport const orderByList = [\r\n    { label: \"asc\", value: 1, items: { label: \"asc\", value: 1 } },\r\n    { label: \"desc\", value: 2, items: { label: \"desc\", value: 2 } }\r\n];"]},"metadata":{},"sourceType":"module"}