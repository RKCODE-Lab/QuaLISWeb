{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{faSearch}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React,{useState,useRef,useEffect}from'react';import{Form,InputGroup,ListGroup,Media}from'react-bootstrap';import'./SearchBar.css';//import { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\nimport{SearchIcon,MediaHeader,MediaSubHeader}from'../App.styles';import PerfectScrollbar from'react-perfect-scrollbar';import{ListMasterWrapper}from'../list-master/list-master.styles';import FormIconForDropDown from'../../pages/home/FormIconForDropDown';var SearchBar=function SearchBar(props){var options=props.options,onInputChange=props.onInputChange,onInputChange1=props.onInputChange1,optionDisplayMember=props.optionDisplayMember,onClickButton=props.onClickButton;var ulRef=useRef();var inputRef=props.inputRef;// const searchValue = props.searchValue;\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];useEffect(function(){inputRef.current.focus();inputRef.current.value=props.searchText;// inputRef.current.addEventListener('keydown', (event) => { \n//   onInputChange(event);\n//   //console.log(event)\n// });\ninputRef.current.addEventListener('keydown',function(event){if(event.key==='Escape'){onInputChange1(event);}});inputRef.current.addEventListener('keypress',function(event){event.stopPropagation();if(event.key!==''&&ulRef.current){ulRef.current.style.display='flex';}onInputChange(event);//console.log(event)\n});inputRef.current.addEventListener('click',function(event){event.stopPropagation();if(event.target.value!==''&&ulRef.current){ulRef.current.style.display='flex';onInputChange(event,inputRef);}});document.addEventListener('click',function(event){if(ulRef!==undefined&&ulRef.current){ulRef.current.style.display='none';}});},[]);var _onClick=function onClick(inputRef,option){inputRef.current.value=\"\";onClickButton(option);};var onFocusInput=function onFocusInput(){setFocus(true);};return/*#__PURE__*/React.createElement(\"div\",{className:\"search-bar-dropdown\"},/*#__PURE__*/React.createElement(InputGroup,{className:\"list-group-search \".concat(focus?'searchMinFocus':'searchMin')},/*#__PURE__*/React.createElement(Form.Control,{id:\"search-bar\",type:\"text\",className:\"form-control\",placeholder:props.intl.formatMessage({id:\"IDS_SEARCHFROMS\"})//\"Search Forms\"\n,ref:inputRef,onChange:onInputChange// onFocus={(e)=>{onFocusInput(e)}}\n// onBlur={(e)=>{setFocus(false)}}\n,autoComplete:\"off\",required:false//value={searchValue}\n})),props.pathname&&props.pathname!=='/home'&&/*#__PURE__*/React.createElement(\"ul\",{id:\"results\",className:\"list-group \".concat(options.length>0?'border-bottom':\"border-bottom-0\"),ref:ulRef},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(ListMasterWrapper,null,/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},options&&options.map(function(option,index){return/*#__PURE__*/React.createElement(ListGroup.Item,{className:\"list-bgcolor\",onClick:function onClick(e){_onClick(inputRef,option);}},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(FormIconForDropDown,{nformcode:option['nformcode'],index:index,option:option}),/*#__PURE__*/React.createElement(Media.Body,null,/*#__PURE__*/React.createElement(MediaHeader,{\"data-tip\":option[optionDisplayMember]},option[optionDisplayMember]))))// <button\n//   type=\"button\"\n//   key={index}\n//   onClick={(e) => {\n//     onClick(inputRef, option);\n//   }}\n//   className=\"list-group-item list-group-item-action\"\n// >\n//   {option[optionDisplayMember]}\n// </button>\n;}))))));};export default SearchBar;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/searchbarcomponent/SearchBar.jsx"],"names":["faSearch","FontAwesomeIcon","React","useState","useRef","useEffect","Form","InputGroup","ListGroup","Media","SearchIcon","MediaHeader","MediaSubHeader","PerfectScrollbar","ListMasterWrapper","FormIconForDropDown","SearchBar","props","options","onInputChange","onInputChange1","optionDisplayMember","onClickButton","ulRef","inputRef","focus","setFocus","current","value","searchText","addEventListener","event","key","stopPropagation","style","display","target","document","undefined","onClick","option","onFocusInput","intl","formatMessage","id","pathname","length","map","index","e"],"mappings":"0LAAA,OAASA,QAAT,KAAyB,mCAAzB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,KAAtC,KAAmD,iBAAnD,CACA,MAAO,iBAAP,CACA;AAEA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,cAAlC,KAAwD,eAAxD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,OAASC,iBAAT,KAAkC,mCAAlC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sCAAhC,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAQC,CAAAA,OAAR,CAAsFD,KAAtF,CAAQC,OAAR,CAAiBC,aAAjB,CAAsFF,KAAtF,CAAiBE,aAAjB,CAA+BC,cAA/B,CAAsFH,KAAtF,CAA+BG,cAA/B,CAA+CC,mBAA/C,CAAsFJ,KAAtF,CAA+CI,mBAA/C,CAAoEC,aAApE,CAAsFL,KAAtF,CAAoEK,aAApE,CACA,GAAMC,CAAAA,KAAK,CAAGnB,MAAM,EAApB,CACA,GAAMoB,CAAAA,QAAQ,CAAGP,KAAK,CAACO,QAAvB,CACD;AACC,cAA0BrB,QAAQ,CAAC,KAAD,CAAlC,wCAAOsB,KAAP,eAAcC,QAAd,eACArB,SAAS,CAAC,UAAM,CACdmB,QAAQ,CAACG,OAAT,CAAiBF,KAAjB,GACAD,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAyBX,KAAK,CAACY,UAA/B,CACA;AACA;AACA;AACA;AACAL,QAAQ,CAACG,OAAT,CAAiBG,gBAAjB,CAAkC,SAAlC,CAA6C,SAACC,KAAD,CAAW,CACpD,GAAGA,KAAK,CAACC,GAAN,GAAc,QAAjB,CAA0B,CACxBZ,cAAc,CAACW,KAAD,CAAd,CACD,CACJ,CAJD,EAKAP,QAAQ,CAACG,OAAT,CAAiBG,gBAAjB,CAAkC,UAAlC,CAA8C,SAACC,KAAD,CAAW,CACvDA,KAAK,CAACE,eAAN,GACA,GAAIF,KAAK,CAACC,GAAN,GAAc,EAAd,EAAoBT,KAAK,CAACI,OAA9B,CAAuC,CACrCJ,KAAK,CAACI,OAAN,CAAcO,KAAd,CAAoBC,OAApB,CAA8B,MAA9B,CACD,CACDhB,aAAa,CAACY,KAAD,CAAb,CACA;AACD,CAPD,EAQAP,QAAQ,CAACG,OAAT,CAAiBG,gBAAjB,CAAkC,OAAlC,CAA2C,SAACC,KAAD,CAAW,CACpDA,KAAK,CAACE,eAAN,GACA,GAAIF,KAAK,CAACK,MAAN,CAAaR,KAAb,GAAuB,EAAvB,EAA6BL,KAAK,CAACI,OAAvC,CAAgD,CAC9CJ,KAAK,CAACI,OAAN,CAAcO,KAAd,CAAoBC,OAApB,CAA8B,MAA9B,CACAhB,aAAa,CAACY,KAAD,CAAQP,QAAR,CAAb,CACD,CACF,CAND,EAOAa,QAAQ,CAACP,gBAAT,CAA0B,OAA1B,CAAmC,SAACC,KAAD,CAAW,CAC5C,GAAIR,KAAK,GAAKe,SAAV,EAAuBf,KAAK,CAACI,OAAjC,CAA0C,CACxCJ,KAAK,CAACI,OAAN,CAAcO,KAAd,CAAoBC,OAApB,CAA8B,MAA9B,CACD,CACF,CAJD,EAKD,CAhCQ,CAgCN,EAhCM,CAAT,CAkCA,GAAMI,CAAAA,QAAO,CAAG,QAAVA,CAAAA,OAAU,CAACf,QAAD,CAAWgB,MAAX,CAAsB,CACpChB,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAyB,EAAzB,CACAN,aAAa,CAACkB,MAAD,CAAb,CACD,CAHD,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBf,QAAQ,CAAC,IAAD,CAAR,CACD,CAFD,CAIA,mBACE,2BAAK,SAAS,CAAC,qBAAf,eACE,oBAAC,UAAD,EAAY,SAAS,6BAAuBD,KAAK,CAAG,gBAAH,CAAsB,WAAlD,CAArB,eAGE,oBAAC,IAAD,CAAM,OAAN,EACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,cAHZ,CAIE,WAAW,CAAER,KAAK,CAACyB,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CACb;AALF,CAME,GAAG,CAAEpB,QANP,CAOE,QAAQ,CAAEL,aACV;AACA;AATF,CAUE,YAAY,CAAC,KAVf,CAWE,QAAQ,CAAE,KACV;AAZF,EAHF,CADF,CAmBGF,KAAK,CAAC4B,QAAN,EAAkB5B,KAAK,CAAC4B,QAAN,GAAmB,OAArC,eACC,0BAAI,EAAE,CAAC,SAAP,CAAiB,SAAS,sBAAiB3B,OAAO,CAAC4B,MAAR,CAAiB,CAAjB,CAAqB,eAArB,CAAuC,iBAAxD,CAA1B,CAAuG,GAAG,CAAEvB,KAA5G,eACA,oBAAC,gBAAD,mBACE,oBAAC,iBAAD,mBACE,oBAAC,SAAD,EAAW,EAAE,CAAC,IAAd,EACGL,OAAO,EAAIA,OAAO,CAAC6B,GAAR,CAAY,SAACP,MAAD,CAASQ,KAAT,CAAmB,CACzC,mBACE,oBAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,eAAzB,CAA2C,OAAO,CAAE,iBAACC,CAAD,CAAO,CACzDV,QAAO,CAACf,QAAD,CAAWgB,MAAX,CAAP,CACD,CAFD,eAGE,oBAAC,KAAD,mBACE,oBAAC,mBAAD,EAAqB,SAAS,CAAEA,MAAM,CAAC,WAAD,CAAtC,CAAqD,KAAK,CAAEQ,KAA5D,CAAmE,MAAM,CAAER,MAA3E,EADF,cAGE,oBAAC,KAAD,CAAO,IAAP,mBACE,oBAAC,WAAD,EAAa,WAAUA,MAAM,CAACnB,mBAAD,CAA7B,EACEmB,MAAM,CAACnB,mBAAD,CADR,CADF,CAHF,CAHF,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBF,CAwBD,CAzBW,CADd,CADF,CADF,CADA,CApBJ,CADF,CA4DD,CA9GD,CAgHA,cAAeL,CAAAA,SAAf","sourcesContent":["import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Form, InputGroup, ListGroup, Media } from 'react-bootstrap';\r\nimport './SearchBar.css'\r\n//import { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\r\n\r\nimport { SearchIcon, MediaHeader, MediaSubHeader } from '../App.styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { ListMasterWrapper } from '../list-master/list-master.styles';\r\nimport FormIconForDropDown from '../../pages/home/FormIconForDropDown';\r\n\r\n\r\nconst SearchBar = (props) => {\r\n  const { options, onInputChange,onInputChange1, optionDisplayMember, onClickButton } = props;\r\n  const ulRef = useRef();\r\n  const inputRef = props.inputRef;\r\n // const searchValue = props.searchValue;\r\n  const [focus, setFocus] = useState(false)\r\n  useEffect(() => {    \r\n    inputRef.current.focus();\r\n    inputRef.current.value = props.searchText;\r\n    // inputRef.current.addEventListener('keydown', (event) => { \r\n    //   onInputChange(event);\r\n    //   //console.log(event)\r\n    // });\r\n    inputRef.current.addEventListener('keydown', (event) => {    \r\n        if(event.key === 'Escape'){            \r\n          onInputChange1(event);\r\n        }\r\n    });\r\n    inputRef.current.addEventListener('keypress', (event) => {      \r\n      event.stopPropagation();\r\n      if (event.key !== '' && ulRef.current) {\r\n        ulRef.current.style.display = 'flex';\r\n      }\r\n      onInputChange(event);\r\n      //console.log(event)\r\n    });\r\n    inputRef.current.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      if (event.target.value !== '' && ulRef.current) {\r\n        ulRef.current.style.display = 'flex';\r\n        onInputChange(event, inputRef);\r\n      }\r\n    });\r\n    document.addEventListener('click', (event) => {\r\n      if (ulRef !== undefined && ulRef.current) {\r\n        ulRef.current.style.display = 'none';\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onClick = (inputRef, option) => {\r\n    inputRef.current.value = \"\";\r\n    onClickButton(option)\r\n  }\r\n\r\n\r\n  const onFocusInput = () => {\r\n    setFocus(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar-dropdown\">\r\n      <InputGroup className={`list-group-search ${focus ? 'searchMinFocus' : 'searchMin'}`}>\r\n\r\n\r\n        <Form.Control\r\n          id=\"search-bar\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SEARCHFROMS\" })}\r\n          //\"Search Forms\"\r\n          ref={inputRef}\r\n          onChange={onInputChange}\r\n          // onFocus={(e)=>{onFocusInput(e)}}\r\n          // onBlur={(e)=>{setFocus(false)}}\r\n          autoComplete=\"off\"\r\n          required={false}\r\n          //value={searchValue}\r\n        />\r\n      </InputGroup>\r\n      {props.pathname && props.pathname !== '/home' &&\r\n        <ul id=\"results\" className= {`list-group ${options.length > 0 ? 'border-bottom' : \"border-bottom-0\"}`} ref={ulRef}>\r\n        <PerfectScrollbar>\r\n          <ListMasterWrapper >\r\n            <ListGroup as=\"ul\"  >\r\n              {options && options.map((option, index) => {\r\n                return (\r\n                  <ListGroup.Item className={`list-bgcolor`} onClick={(e) => {\r\n                    onClick(inputRef, option);\r\n                  }}>\r\n                    <Media>\r\n                      <FormIconForDropDown nformcode={option['nformcode']} index={index} option={option} />\r\n\r\n                      <Media.Body>\r\n                        <MediaHeader data-tip={option[optionDisplayMember]}\r\n                        >{option[optionDisplayMember]}</MediaHeader>\r\n                      </Media.Body>\r\n                    </Media>\r\n                  </ListGroup.Item>\r\n                  // <button\r\n                  //   type=\"button\"\r\n                  //   key={index}\r\n                  //   onClick={(e) => {\r\n                  //     onClick(inputRef, option);\r\n                  //   }}\r\n                  //   className=\"list-group-item list-group-item-action\"\r\n                  // >\r\n                  //   {option[optionDisplayMember]}\r\n                  // </button>\r\n                );\r\n              })}\r\n              {/* </ul> */}\r\n            </ListGroup>\r\n          </ListMasterWrapper>\r\n          \r\n          </PerfectScrollbar>\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}