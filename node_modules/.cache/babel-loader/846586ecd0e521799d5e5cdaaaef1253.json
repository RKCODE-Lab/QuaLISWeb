{"ast":null,"code":"import React from'react';import{Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage}from'react-intl';import{faPlus}from'@fortawesome/free-solid-svg-icons';import CustomAccordion from'../../components/custom-accordion/custom-accordion.component';import ParameterTabAccordion from'./ParameterTabAccordion';import ReactTooltip from'react-tooltip';var ParameterTab=function ParameterTab(props){var addParameterId=props.controlMap.has(\"AddParameter\")&&props.controlMap.get(\"AddParameter\").ncontrolcode;function testParameterAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameter){return accordionMap.set(testParameter.ntestparametercode,/*#__PURE__*/React.createElement(ParameterTabAccordion,{testParameter:testParameter,userRoleControlRights:props.userRoleControlRights,controlMap:props.controlMap,userInfo:props.userInfo,masterData:props.masterData,selectedParameter:props.masterData.selectedParameter,addParameter:props.addParameter,deleteAction:props.deleteAction,ConfirmDelete:props.ConfirmDelete,addCodedResult:props.addCodedResult,addFormula:props.addFormula,onSwitchChange:props.onSwitchChange,addParameterSpecification:props.addParameterSpecification,testFormula:props.masterData.TestFormula,testParameterNumeric:props.masterData.TestParameterNumeric,testPredefinedParameter:props.masterData.TestPredefinedParameter}));});return accordionMap;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addParameterId)===-1,onClick:function onClick(){return props.addParameter(\"create\",{},props.userInfo,addParameterId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDPARAMETER\",defaultMessage:\"Add Parameter\"})))),props.TestParameter&&props.TestParameter.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",accordionTitle:\"sparametername\",accordionComponent:testParameterAccordion(props.TestParameter),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getTestDetails,accordionPrimaryKey:\"ntestparametercode\",accordionObjectName:\"testParameter\",selectedKey:props.masterData.selectedParameter?props.masterData.selectedParameter.ntestparametercode:0}));};export default ParameterTab;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testmanagement/ParameterTab.jsx"],"names":["React","Nav","FontAwesomeIcon","FormattedMessage","faPlus","CustomAccordion","ParameterTabAccordion","ReactTooltip","ParameterTab","props","addParameterId","controlMap","has","get","ncontrolcode","testParameterAccordion","TestParameter","accordionMap","Map","map","testParameter","set","ntestparametercode","userRoleControlRights","userInfo","masterData","selectedParameter","addParameter","deleteAction","ConfirmDelete","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","TestFormula","TestParameterNumeric","TestPredefinedParameter","indexOf","length","nFlag","getTestDetails"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\nimport ParameterTabAccordion from './ParameterTabAccordion';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst ParameterTab = (props) => {\r\n    const addParameterId = props.controlMap.has(\"AddParameter\") && props.controlMap.get(\"AddParameter\").ncontrolcode;\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.ntestparametercode,\r\n                <ParameterTabAccordion\r\n                    testParameter={testParameter}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    masterData={props.masterData}\r\n                    selectedParameter={props.masterData.selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    ConfirmDelete={props.ConfirmDelete}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testFormula={props.masterData.TestFormula}\r\n                    testParameterNumeric={props.masterData.TestParameterNumeric}\r\n                    testPredefinedParameter={props.masterData.TestPredefinedParameter}\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\r\n                        onClick={() => props.addParameter(\"create\", {}, props.userInfo, addParameterId)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_ADDPARAMETER\" defaultMessage=\"Add Parameter\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            {props.TestParameter && props.TestParameter.length > 0 &&\r\n                <CustomAccordion\r\n                    key=\"parameteraccordion\"\r\n                    accordionTitle={\"sparametername\"}\r\n                    accordionComponent={testParameterAccordion(props.TestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                    accordionClick={props.getTestDetails}\r\n                    accordionPrimaryKey={\"ntestparametercode\"}\r\n                    accordionObjectName={\"testParameter\"}\r\n                    selectedKey={props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParameterTab;"]},"metadata":{},"sourceType":"module"}