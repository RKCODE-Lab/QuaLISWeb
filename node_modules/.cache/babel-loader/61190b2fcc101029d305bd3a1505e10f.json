{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\approvalconfig\\\\SampleFilter.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { ApprovalSubType } from '../../../components/Enumeration';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\n\nclass SampleFilter extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, this.props.approvalSubTypeOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_APPROVALSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }) // menuPosition=\"fixed\"\n      ,\n      name: \"napprovalsubtypecode\",\n      optionId: \"napprovalsubtypecode\",\n      optionValue: \"ssubtypename\",\n      options: this.props.approvalSubTypeOptions,\n      value: this.props.approvalSubTypeValue,\n      onChange: event => this.props.filterComboChange(event, 'napprovalsubtypecode'),\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.approvalSubTypeValue && this.props.approvalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL ? /*#__PURE__*/React.createElement(React.Fragment, null, this.props.registrationTypeOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nregtypecode\",\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\" // menuPosition=\"fixed\"\n      ,\n      options: this.props.registrationTypeOptions,\n      value: this.props.registrationTypeValue,\n      onChange: event => this.props.filterComboChange(event, 'nregtypecode'),\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }) : \"\", this.props.registrationSubTypeOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\" // menuPosition=\"fixed\"\n      ,\n      options: this.props.registrationSubTypeOptions,\n      value: this.props.registrationSubTypeValue,\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      onChange: event => this.props.filterComboChange(event, 'nregsubtypecode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }) : \"\") : \"\", this.props.userroleTemplateOptions ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_USERROLETEMPLATE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\" // menuPosition=\"fixed\"\n      ,\n      options: this.props.userroleTemplateOptions,\n      value: this.props.userroleTemplateValue,\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      onChange: event => this.props.filterComboChange(event, 'ntreeversiontempcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }) : \"\"));\n  }\n\n}\n\nexport default injectIntl(SampleFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/configurationmaster/approvalconfig/SampleFilter.jsx"],"names":["React","Row","Col","injectIntl","ApprovalSubType","FormSelectSearch","SampleFilter","Component","render","props","approvalSubTypeOptions","intl","formatMessage","id","approvalSubTypeValue","event","filterComboChange","value","TESTRESULTAPPROVAL","registrationTypeOptions","registrationTypeValue","registrationSubTypeOptions","registrationSubTypeValue","userroleTemplateOptions","userroleTemplateValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,gBAAP,MAA6B,qEAA7B;;AACA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAEvCC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,sBAAX,gBACG,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADf;AAEI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFjB,CAGI;AAHJ;AAII,MAAA,IAAI,EAAC,sBAJT;AAKI,MAAA,QAAQ,EAAC,sBALb;AAMI,MAAA,WAAW,EAAC,cANhB;AAOI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,sBAPxB;AAQI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWK,oBARtB;AASI,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKN,KAAL,CAAWO,iBAAX,CAA6BD,KAA7B,EAAoC,sBAApC,CATzB;AAUI,MAAA,WAAW,EAAE,KAVjB;AAWI,MAAA,OAAO,EAAE,KAXb;AAYI,MAAA,YAAY,EAAE,KAZlB;AAaI,MAAA,UAAU,EAAE,KAbhB;AAcI,MAAA,gBAAgB,EAAE,KAdtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAiBK,EAlBV,EAoBK,KAAKN,KAAL,CAAWK,oBAAX,IAAmC,KAAKL,KAAL,CAAWK,oBAAX,CAAgCG,KAAhC,KAA0Cb,eAAe,CAACc,kBAA7F,gBACG,0CACK,KAAKT,KAAL,CAAWU,uBAAX,gBAEG,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADf;AAEI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFjB;AAGI,MAAA,IAAI,EAAC,cAHT;AAII,MAAA,QAAQ,EAAC,cAJb;AAKI,MAAA,WAAW,EAAC,cALhB,CAMI;AANJ;AAOI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWU,uBAPxB;AAQI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWW,qBARtB;AASI,MAAA,QAAQ,EAAGL,KAAD,IAAW,KAAKN,KAAL,CAAWO,iBAAX,CAA6BD,KAA7B,EAAoC,cAApC,CATzB;AAUI,MAAA,WAAW,EAAE,KAVjB;AAWI,MAAA,OAAO,EAAE,KAXb;AAYI,MAAA,YAAY,EAAE,KAZlB;AAaI,MAAA,UAAU,EAAE,KAbhB;AAcI,MAAA,gBAAgB,EAAE,KAdtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,GAmBK,EApBV,EAqBK,KAAKN,KAAL,CAAWY,0BAAX,gBAEG,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADf;AAEI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFjB;AAGI,MAAA,IAAI,EAAC,iBAHT;AAII,MAAA,QAAQ,EAAC,iBAJb;AAKI,MAAA,WAAW,EAAC,iBALhB,CAMI;AANJ;AAOI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWY,0BAPxB;AAQI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWa,wBARtB;AASI,MAAA,WAAW,EAAE,KATjB;AAUI,MAAA,OAAO,EAAE,KAVb;AAWI,MAAA,YAAY,EAAE,KAXlB;AAYI,MAAA,UAAU,EAAE,KAZhB;AAaI,MAAA,gBAAgB,EAAE,KAbtB;AAcI,MAAA,QAAQ,EAAGP,KAAD,IAAW,KAAKN,KAAL,CAAWO,iBAAX,CAA6BD,KAA7B,EAAoC,iBAApC,CAdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,GAmBK,EAxCV,CADH,GA2CK,EA/DV,EAgEK,KAAKN,KAAL,CAAWc,uBAAX,gBAEG,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADf;AAEI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFjB;AAGI,MAAA,IAAI,EAAC,iBAHT;AAII,MAAA,QAAQ,EAAC,iBAJb;AAKI,MAAA,WAAW,EAAC,iBALhB,CAMI;AANJ;AAOI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWc,uBAPxB;AAQI,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWe,qBARtB;AASI,MAAA,WAAW,EAAE,KATjB;AAUI,MAAA,OAAO,EAAE,KAVb;AAWI,MAAA,YAAY,EAAE,KAXlB;AAYI,MAAA,UAAU,EAAE,KAZhB;AAaI,MAAA,gBAAgB,EAAE,KAbtB;AAcI,MAAA,QAAQ,EAAGT,KAAD,IAAW,KAAKN,KAAL,CAAWO,iBAAX,CAA6BD,KAA7B,EAAoC,sBAApC,CAdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,GAmBK,EAnFV,CADJ,CADJ;AA0FH;;AA7FsC;;AA+F3C,eAAeZ,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ApprovalSubType } from '../../../components/Enumeration'\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component'\r\nclass SampleFilter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    {this.props.approvalSubTypeOptions ?\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_APPROVALSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            // menuPosition=\"fixed\"\r\n                            name=\"napprovalsubtypecode\"\r\n                            optionId=\"napprovalsubtypecode\"\r\n                            optionValue=\"ssubtypename\"\r\n                            options={this.props.approvalSubTypeOptions}\r\n                            value={this.props.approvalSubTypeValue}\r\n                            onChange={(event) => this.props.filterComboChange(event, 'napprovalsubtypecode')}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                        />\r\n                        : \"\"}\r\n\r\n                    {this.props.approvalSubTypeValue && this.props.approvalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL ?\r\n                        <>\r\n                            {this.props.registrationTypeOptions ?\r\n\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"nregtypecode\"\r\n                                    optionId=\"nregtypecode\"\r\n                                    optionValue=\"sregtypename\"\r\n                                    // menuPosition=\"fixed\"\r\n                                    options={this.props.registrationTypeOptions}\r\n                                    value={this.props.registrationTypeValue}\r\n                                    onChange={(event) => this.props.filterComboChange(event, 'nregtypecode')}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    isDisabled={false}\r\n                                    alphabeticalSort={false}\r\n                                />\r\n\r\n                                : \"\"}\r\n                            {this.props.registrationSubTypeOptions ?\r\n\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"nregsubtypecode\"\r\n                                    optionId=\"nregsubtypecode\"\r\n                                    optionValue=\"sregsubtypename\"\r\n                                    // menuPosition=\"fixed\"\r\n                                    options={this.props.registrationSubTypeOptions}\r\n                                    value={this.props.registrationSubTypeValue}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    isDisabled={false}\r\n                                    alphabeticalSort={false}\r\n                                    onChange={(event) => this.props.filterComboChange(event, 'nregsubtypecode')}\r\n                                />\r\n\r\n                                : \"\"}\r\n                        </>\r\n                        : \"\"}\r\n                    {this.props.userroleTemplateOptions ?\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_USERROLETEMPLATE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            // menuPosition=\"fixed\"\r\n                            options={this.props.userroleTemplateOptions}\r\n                            value={this.props.userroleTemplateValue}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            onChange={(event) => this.props.filterComboChange(event, 'ntreeversiontempcode')}\r\n                        />\r\n\r\n                        : \"\"}\r\n                </Col>\r\n            </Row>\r\n\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(SampleFilter);"]},"metadata":{},"sourceType":"module"}