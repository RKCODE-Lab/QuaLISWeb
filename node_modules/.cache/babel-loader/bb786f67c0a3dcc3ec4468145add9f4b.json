{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import AddModuleSorting from'../credentialmanagement/AddModuleSorting';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import DataGrid from'../../components/data-grid/data-grid.component';import{callService,updateStore,crudMaster,validateEsignCredential,viewAttachment,getModuleSortingComboService}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{getControlMap,showEsign,sortData}from'../../components/CommonScript';import{ListWrapper}from'../../components/client-group.styles';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ModuleSorting=/*#__PURE__*/function(_React$Component){_inherits(ModuleSorting,_React$Component);var _super=_createSuper(ModuleSorting);function ModuleSorting(props){var _this;_classCallCheck(this,ModuleSorting);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;if(_this.props.Login.loadEsign){loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;;_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){var dataState=undefined;var selectedId=null;var inputData=[];var selectedRecord=_this.state.selectedRecord;var prevRecord=_this.state.selectedRecord[0].nmodulecode.value;if(_this.props.Login.operation===\"update\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;}inputData[\"nformcode\"]=_this.state.selectedRecord.nformcode.value;inputData[\"nmodulecode\"]=_this.state.selectedRecord.nmodulecode.value;if(prevRecord!=inputData.nmodulecode){inputData[\"nmenucode\"]=_this.state.selectedRecord.nmodulecode.item.nmenucode;}else{inputData[\"nmenucode\"]=_this.state.selectedRecord.nmenucode.value;}var inputParam={classUrl:\"modulesorting\",methodUrl:\"ModuleSorting\",inputData:_objectSpread({userinfo:_this.props.Login.userInfo},inputData),operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType,formRef:formRef,selectedId:selectedId,dataState:dataState,selectedRecord:selectedRecord};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation,selectedId:selectedId}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}// }\n// else{\n//     let openModal = false;\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: { openModal }\n//     }\n//     this.props.updateStore(updateInfo);\n//}\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.inputParam.displayName};_this.props.callService(inputParam);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(ModuleSorting,[{key:\"render\",value:function render(){var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"controlType\":\"combobox\",\"idsName\":\"IDS_FORMNAME\",\"dataField\":\"sformdisplayname\",\"width\":\"150px\"},{\"controlType\":\"combobox\",\"idsName\":\"IDS_MODULENAME\",\"dataField\":\"smoduledisplayname\",\"width\":\"150px\"}];primaryKeyField=\"nformcode\";}var mandatoryFields=[];var editID=this.props.Login.inputParam&&this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),primaryKeyField:\"nformcode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editID};sortData(this.props.Login.masterData,'ascending','nformcode');return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,selectedId:this.props.Login.selectedId,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.getModuleSortingComboService,reloadData:this.reloadData,editParam:editParam,scrollable:\"scrollable\",gridHeight:\"600px\",isDownloadExcelRequired:false,isActionRequired:true,isToolBarRequired:true,pageable:true}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,selectedRecord:this.state.selectedRecord||{},updateStore:this.props.updateStore,mandatoryFields:mandatoryFields,esign:this.props.Login.loadEsign,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddModuleSorting,{selectedRecord:this.props.Login.selectedRecord||{},onComboChange:this.onComboChange,moduleSortingData:this.props.Login.moduleSortingData,formMapList:this.props.Login.formMapList,moduleMapList:this.props.Login.moduleMapList,menuMapList:this.props.Login.menuMapList,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}]);return ModuleSorting;}(React.Component);export default connect(mapStateToProps,{callService:callService,updateStore:updateStore,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,viewAttachment:viewAttachment,getModuleSortingComboService:getModuleSortingComboService})(injectIntl(ModuleSorting));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/ModuleSorting.jsx"],"names":["React","connect","injectIntl","Row","Col","process","AddModuleSorting","SlideOutModal","Esign","DataGrid","callService","updateStore","crudMaster","validateEsignCredential","viewAttachment","getModuleSortingComboService","DEFAULT_RETURN","getControlMap","showEsign","sortData","ListWrapper","mapStateToProps","state","Login","ModuleSorting","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedId","updateInfo","typeName","onComboChange","comboData","fieldName","onSaveClick","saveType","formRef","undefined","inputData","prevRecord","nmodulecode","value","operation","nformcode","item","nmenucode","inputParam","classUrl","methodUrl","userinfo","userInfo","displayName","userRoleControlRights","ncontrolCode","screenData","masterData","screenName","intl","formatMessage","id","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","onInputOnChange","target","type","name","checked","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","primaryKeyField","mandatoryFields","editID","has","concat","get","ncontrolcode","editParam","moduleSortingData","formMapList","moduleMapList","menuMapList","previousProps","Object","values","map","push","isOpen","Component"],"mappings":"i5BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,0CAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,OAASC,WAAT,CAAqBC,WAArB,CAAiCC,UAAjC,CAA4CC,uBAA5C,CAAoEC,cAApE,CAAoFC,4BAApF,KAAuH,eAAvH,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,+BAAnD,CACA,OAASC,WAAT,KAA4B,sCAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAIMC,CAAAA,a,0HAEF,uBAAYC,KAAZ,CAAkB,+CACd,uBAAMA,KAAN,EADc,MAoBtBC,eApBsB,CAoBJ,SAACC,KAAD,CAAW,CACzB,MAAKC,QAAL,CAAc,CACVC,UAAU,CAAExB,OAAO,CAAC,MAAKiB,KAAL,CAAWQ,IAAZ,CAAkBH,KAAK,CAACI,SAAxB,CADT,CAEVA,SAAS,CAAEJ,KAAK,CAACI,SAFP,CAAd,EAIH,CAzBqB,OA2BtBC,UA3BsB,CA2BT,UAAM,CACf,GAAIC,CAAAA,SAAS,CAAG,MAAKR,KAAL,CAAWF,KAAX,CAAiBU,SAAjC,CACA,GAAIC,CAAAA,SAAS,CAAG,MAAKT,KAAL,CAAWF,KAAX,CAAiBW,SAAjC,CACA,GAAIC,CAAAA,cAAc,CAAG,MAAKV,KAAL,CAAWF,KAAX,CAAiBY,cAAtC,CACA,GAAIC,CAAAA,UAAU,CAAG,MAAKX,KAAL,CAAWF,KAAX,CAAiBa,UAAlC,CACA,GAAI,MAAKX,KAAL,CAAWF,KAAX,CAAiBU,SAArB,CAAgC,CACxBA,SAAS,CAAG,KAAZ,CACAE,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,aAAD,CAAd,CAA8B,EAA9B,CACP,CALD,IAKO,CACHD,SAAS,CAAG,KAAZ,CACAC,cAAc,CAAG,EAAjB,CACAC,UAAU,CAAC,IAAX,CACH,CACD,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfc,IAAI,CAAE,CAAEI,SAAS,CAATA,SAAF,CAAaD,SAAS,CAATA,SAAb,CAAwBE,cAAc,CAAdA,cAAxB,CAAwCC,UAAU,CAAVA,UAAxC,CAFS,CAAnB,CAIA,MAAKX,KAAL,CAAWd,WAAX,CAAuB0B,UAAvB,EACH,CA/CqB,OAiDrBE,aAjDqB,CAiDL,SAACC,SAAD,CAAYC,SAAZ,CAA0B,CACvC,GAAMN,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAX,EAA6B,EAApD,CACAA,cAAc,CAACM,SAAD,CAAd,CAA4BD,SAA5B,CAAsC,CAEtC,MAAKZ,QAAL,CAAc,CAACO,cAAc,CAAdA,cAAD,CAAd,EACH,CAtDqB,OAwDtBO,WAxDsB,CAwDR,SAACC,QAAD,CAAWC,OAAX,CAAuB,CACjC,GAAIb,CAAAA,SAAS,CAAGc,SAAhB,CACA,GAAIT,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAIU,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAMX,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAlC,CACA,GAAIY,CAAAA,UAAU,CAAG,MAAKzB,KAAL,CAAWa,cAAX,CAA0B,CAA1B,EAA6Ba,WAA7B,CAAyCC,KAA1D,CACA,GAAI,MAAKxB,KAAL,CAAWF,KAAX,CAAiB2B,SAAjB,GAA+B,QAAnC,CAA6C,CACzCnB,SAAS,CAAG,MAAKT,KAAL,CAAWS,SAAvB,CACAK,UAAU,CAAG,MAAKX,KAAL,CAAWF,KAAX,CAAiBa,UAA9B,CACH,CACDU,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAKxB,KAAL,CAAWa,cAAX,CAA0BgB,SAA1B,CAAoCF,KAA7D,CACAH,SAAS,CAAC,aAAD,CAAT,CAA2B,MAAKxB,KAAL,CAAWa,cAAX,CAA0Ba,WAA1B,CAAsCC,KAAjE,CAEJ,GAAGF,UAAU,EAAID,SAAS,CAACE,WAA3B,CAAuC,CACnCF,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAKxB,KAAL,CAAWa,cAAX,CAA0Ba,WAA1B,CAAsCI,IAAtC,CAA2CC,SAApE,CACH,CAFD,IAEM,CACFP,SAAS,CAAC,WAAD,CAAT,CAAyB,MAAKxB,KAAL,CAAWa,cAAX,CAA0BkB,SAA1B,CAAoCJ,KAA7D,CACH,CACG,GAAMK,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,eADK,CAEfC,SAAS,CAAE,eAFI,CAGfV,SAAS,gBAAGW,QAAQ,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiBmC,QAA9B,EAA2CZ,SAA3C,CAHM,CAIfI,SAAS,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiB2B,SAJb,CAKfS,WAAW,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAL1B,CAKuChB,QAAQ,CAARA,QALvC,CAKiDC,OAAO,CAAPA,OALjD,CAK0DR,UAAU,CAAVA,UAL1D,CAKsEL,SAAS,CAATA,SALtE,CAMfI,cAAc,CAAdA,cANe,CAAnB,CAUA,GAAIjB,SAAS,CAAC,MAAKO,KAAL,CAAWF,KAAX,CAAiBqC,qBAAlB,CAAyC,MAAKnC,KAAL,CAAWF,KAAX,CAAiBmC,QAAjB,CAA0BP,SAAnE,CAA8E,MAAK1B,KAAL,CAAWF,KAAX,CAAiBsC,YAA/F,CAAb,CAA2H,CACvH,GAAMxB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEtB,cADK,CAEfc,IAAI,CAAE,CACFG,SAAS,CAAE,IADT,CACe6B,UAAU,CAAE,CAAER,UAAU,CAAVA,UAAF,CAAcS,UAAU,CAAE,MAAKtC,KAAL,CAAWF,KAAX,CAAiBwC,UAA3C,CAD3B,CAEF7B,SAAS,CAAE,IAFT,CAEe8B,UAAU,CAAE,MAAKvC,KAAL,CAAWwC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,MAAK1C,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAAlC,CAA9B,CAF3B,CAGFT,SAAS,CAAE,MAAKzB,KAAL,CAAWF,KAAX,CAAiB2B,SAH1B,CAGqCd,UAAU,CAAVA,UAHrC,CAFS,CAAnB,CAQA,MAAKX,KAAL,CAAWd,WAAX,CAAuB0B,UAAvB,EACH,CAVD,IAWK,CACD,MAAKZ,KAAL,CAAWb,UAAX,CAAsB0C,UAAtB,CAAkC,MAAK7B,KAAL,CAAWF,KAAX,CAAiBwC,UAAnD,CAA+D,WAA/D,EACH,CAEL;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGC,CA/GqB,OAiHtBK,aAjHsB,CAiHN,UAAM,CAClB,GAAMd,CAAAA,UAAU,CAAG,CACfR,SAAS,CAAE,CACP,0CACO,MAAKrB,KAAL,CAAWF,KAAX,CAAiBmC,QADxB,MAEIW,OAAO,CAAE,MAAK/C,KAAL,CAAWa,cAAX,CAA0B,eAA1B,CAFb,CAGImC,WAAW,CAAC,MAAKhD,KAAL,CAAWa,cAAX,CAA0B,aAA1B,GAA4C,MAAKb,KAAL,CAAWa,cAAX,CAA0B,aAA1B,EAAyCc,KAHrG,CAIIsB,iBAAiB,CAAC,MAAKjD,KAAL,CAAWa,cAAX,CAA0B,aAA1B,GAA4C,MAAKb,KAAL,CAAWa,cAAX,CAA0B,aAA1B,EAAyCqC,KAJ3G,EADO,CAQPC,QAAQ,CAAE,MAAKnD,KAAL,CAAWa,cAAX,CAA0B,eAA1B,CARH,CADI,CAWf2B,UAAU,CAAE,MAAKrC,KAAL,CAAWF,KAAX,CAAiBuC,UAXd,CAAnB,CAaA,MAAKrC,KAAL,CAAWZ,uBAAX,CAAmCyC,UAAnC,CAA+C,WAA/C,EACH,CAhIqB,OAkItBoB,UAlIsB,CAkIT,UAAM,CACf,GAAMpB,CAAAA,UAAU,CAAG,CACfR,SAAS,CAAE,CAAE,WAAY,MAAKrB,KAAL,CAAWF,KAAX,CAAiBmC,QAA/B,CADI,CAGfH,QAAQ,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BC,QAHvB,CAIfC,SAAS,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,SAJxB,CAKfE,QAAQ,CAAE,MAAKjC,KAAL,CAAWF,KAAX,CAAiBmC,QALZ,CAMfC,WAAW,CAAE,MAAKlC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAN1B,CAAnB,CASA,MAAKlC,KAAL,CAAWf,WAAX,CAAuB4C,UAAvB,EACH,CA7IqB,OA+ItBqB,eA/IsB,CA+IJ,SAAChD,KAAD,CAAW,CAEzB,GAAMQ,CAAAA,cAAc,CAAG,MAAKb,KAAL,CAAWa,cAAX,EAA6B,EAApD,CACA,GAAIR,KAAK,CAACiD,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClC1C,cAAc,CAACR,KAAK,CAACiD,MAAN,CAAaE,IAAd,CAAd,CAAoCnD,KAAK,CAACiD,MAAN,CAAaG,OAAb,GAAyB,IAAzB,CAAgC,CAAhC,CAAoC,CAAxE,CACH,CAFD,IAGK,CACD5C,cAAc,CAACR,KAAK,CAACiD,MAAN,CAAaE,IAAd,CAAd,CAAoCnD,KAAK,CAACiD,MAAN,CAAa3B,KAAjD,CACH,CACD,MAAKrB,QAAL,CAAc,CAAEO,cAAc,CAAdA,cAAF,CAAd,EACH,CAzJqB,CAEd,MAAKS,OAAL,CAAa5C,KAAK,CAACgF,SAAN,EAAb,CACA,MAAKC,mBAAL,CAA2B,EAA3B,CAEA,GAAMlD,CAAAA,UAAS,CAAG,CACdmD,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,MAAK1D,KAAL,CAAWF,KAAX,CAAiB6D,QAAjB,CAA4BC,QAAQ,CAAC,MAAK5D,KAAL,CAAWF,KAAX,CAAiB6D,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAF9D,CAAlB,CAKA,MAAK9D,KAAL,CAAa,CACTQ,IAAI,CAAE,EADG,CACCwD,YAAY,CAAE,EADf,CACmBC,KAAK,CAAE,EAD1B,CAC8BpD,cAAc,CAAE,EAD9C,CAETN,UAAU,CAAE,EAFH,CAGTE,SAAS,CAAEA,UAHF,CAIT6B,qBAAqB,CAAE,EAJd,CAKT4B,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EALH,CAAb,CAVc,aAkBrB,C,gDAyID,iBAAS,CACL,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CAGI,GAAI,KAAKjE,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,GAAgCT,SAApC,CAA+C,CAE3C,KAAKoC,mBAAL,CAA2B,CACvB,CAAE,cAAe,UAAjB,CAA6B,UAAW,cAAxC,CAAuD,YAAa,kBAApE,CAAwF,QAAS,OAAjG,CADuB,CAEvB,CAAE,cAAe,UAAjB,CAA6B,UAAW,gBAAxC,CAAyD,YAAa,oBAAtE,CAA4F,QAAS,OAArG,CAFuB,CAA3B,CAIAS,eAAe,CAAG,WAAlB,CACH,CACD,GAAIC,CAAAA,eAAe,CAAC,EAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,KAAKnE,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAWkE,UAAX,CAAsBK,GAAtB,CAA0B,OAAOC,MAAP,CAAc,KAAKrE,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,SAA1C,CAA1B,CAA/B,EACV,KAAKlC,KAAL,CAAWkE,UAAX,CAAsBO,GAAtB,CAA0B,OAAOD,MAAP,CAAc,KAAKrE,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,SAA1C,CAA1B,EAAgFwC,YADrF,CAGA,GAAMC,CAAAA,SAAS,CAAG,CAClBjC,UAAU,CAAE,KAAKvC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAK7B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAA3D,EAA0E,KAAKlC,KAAL,CAAWwC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,KAAK1C,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BK,WAAlC,CAA9B,CADpE,CACoJ+B,eAAe,CAAE,WADrK,CACkLxC,SAAS,CAAE,QAD7L,CAElBI,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiB+B,UAFX,CAEuBI,QAAQ,CAAE,KAAKjC,KAAL,CAAWF,KAAX,CAAiBmC,QAFlD,CAE4DG,YAAY,CAAE+B,MAF1E,CAAlB,CAKAzE,QAAQ,CAAC,KAAKM,KAAL,CAAWF,KAAX,CAAiBwC,UAAlB,CAA6B,WAA7B,CAAyC,WAAzC,CAAR,CAEA,mBAAO,qDACC,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,qBAAvB,EAEK,KAAKzC,KAAL,CAAWQ,IAAX,cACO,oBAAC,QAAD,EACI,eAAe,CAAE4D,eADrB,CAEI,UAAU,CAAE,KAAKjE,KAAL,CAAWF,KAAX,CAAiBa,UAFjC,CAGI,IAAI,CAAE,KAAKd,KAAL,CAAWQ,IAHrB,CAII,UAAU,CAAE,KAAKR,KAAL,CAAWO,UAJ3B,CAKI,SAAS,CAAE,KAAKP,KAAL,CAAWS,SAL1B,CAMI,eAAe,CAAE,KAAKL,eAN1B,CAOI,mBAAmB,CAAE,KAAKuD,mBAP9B,CAQI,UAAU,CAAE,KAAK3D,KAAL,CAAWkE,UAR3B,CASI,qBAAqB,CAAE,KAAKlE,KAAL,CAAWsC,qBATtC,CAUI,UAAU,CAAE,KAAKnC,KAAL,CAAWF,KAAX,CAAiB+B,UAVjC,CAWI,QAAQ,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiBmC,QAX/B,CAYI,WAAW,CAAE,KAAKjC,KAAL,CAAWV,4BAZ5B,CAaI,UAAU,CAAE,KAAK2D,UAbrB,CAcI,SAAS,CAAEuB,SAdf,CAeI,UAAU,CAAE,YAfhB,CAgBI,UAAU,CAAI,OAhBlB,CAiBI,uBAAuB,CAAE,KAjB7B,CAkBI,gBAAgB,CAAE,IAlBtB,CAmBI,iBAAiB,CAAE,IAnBvB,CAoBI,QAAQ,CAAE,IApBd,EADP,CAuBS,EAzBd,CADJ,CADJ,CADD,CAiCE,KAAKxE,KAAL,CAAWF,KAAX,CAAiBW,SAAjB,eACG,oBAAC,aAAD,EACI,IAAI,CAAE,KAAKT,KAAL,CAAWF,KAAX,CAAiBW,SAD3B,CAEI,UAAU,CAAE,KAAKF,UAFrB,CAGI,SAAS,CAAE,KAAKP,KAAL,CAAWF,KAAX,CAAiB2B,SAHhC,CAII,UAAU,CAAE,KAAKzB,KAAL,CAAWF,KAAX,CAAiB+B,UAJjC,CAKI,UAAU,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiByC,UALjC,CAMI,WAAW,CAAE,KAAKtB,WANtB,CAOI,aAAa,CAAE,KAAK0B,aAPxB,CAQI,YAAY,CAAE,KAAK3C,KAAL,CAAWF,KAAX,CAAiB+D,YARnC,CASI,cAAc,CAAE,KAAKhE,KAAL,CAAWa,cAAX,EAA6B,EATjD,CAUI,WAAW,CAAE,KAAKV,KAAL,CAAWd,WAV5B,CAWI,eAAe,CAAEgF,eAXrB,CAYI,KAAK,CAAE,KAAKlE,KAAL,CAAWF,KAAX,CAAiBU,SAZ5B,CAaI,YAAY,CACR,KAAKR,KAAL,CAAWF,KAAX,CAAiBU,SAAjB,cACA,oBAAC,KAAD,EACI,SAAS,CAAE,KAAKR,KAAL,CAAWF,KAAX,CAAiB2B,SADhC,CAEI,eAAe,CAAE,KAAKyB,eAF1B,CAGI,UAAU,CAAE,KAAKlD,KAAL,CAAWF,KAAX,CAAiB+B,UAHjC,CAII,cAAc,CAAE,KAAKhC,KAAL,CAAWa,cAAX,EAA6B,EAJjD,EADA,cAQA,oBAAC,gBAAD,EACA,cAAc,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBY,cAAjB,EAAmC,EADnD,CAEA,aAAa,CAAE,KAAKI,aAFpB,CAGA,iBAAiB,CAAE,KAAKd,KAAL,CAAWF,KAAX,CAAiB2E,iBAHpC,CAIA,WAAW,CAAE,KAAKzE,KAAL,CAAWF,KAAX,CAAiB4E,WAJ9B,CAKA,aAAa,CAAE,KAAK1E,KAAL,CAAWF,KAAX,CAAiB6E,aALhC,CAMA,WAAW,CAAE,KAAK3E,KAAL,CAAWF,KAAX,CAAiB8E,WAN9B,CAOA,SAAS,CAAE,KAAK5E,KAAL,CAAWF,KAAX,CAAiB2B,SAP5B,CAQA,UAAU,CAAE,KAAKzB,KAAL,CAAWF,KAAX,CAAiB+B,UAR7B,EAtBR,EAlCL,CAAP,CAsEP,C,kCAED,4BAAmBgD,aAAnB,CAAkC,CAC9B,GAAI,KAAK7E,KAAL,CAAWF,KAAX,CAAiBwC,UAAjB,GAAgCuC,aAAa,CAAC/E,KAAd,CAAoBwC,UAAxD,CAAoE,CAChE,GAAI,KAAKtC,KAAL,CAAWF,KAAX,CAAiBmC,QAAjB,CAA0BP,SAA1B,GAAwCmD,aAAa,CAAC/E,KAAd,CAAoBmC,QAApB,CAA6BP,SAAzE,CAAoF,CAChF,GAAMS,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAKnC,KAAL,CAAWF,KAAX,CAAiBqC,qBAArB,CAA4C,CACxC,KAAKnC,KAAL,CAAWF,KAAX,CAAiBqC,qBAAjB,CAAuC,KAAKnC,KAAL,CAAWF,KAAX,CAAiBmC,QAAjB,CAA0BP,SAAjE,GAA+EoD,MAAM,CAACC,MAAP,CAAc,KAAK/E,KAAL,CAAWF,KAAX,CAAiBqC,qBAAjB,CAAuC,KAAKnC,KAAL,CAAWF,KAAX,CAAiBmC,QAAjB,CAA0BP,SAAjE,CAAd,EAA2FsD,GAA3F,CAA+F,SAAArD,IAAI,QAC9KQ,CAAAA,qBAAqB,CAAC8C,IAAtB,CAA2BtD,IAAI,CAAC4C,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMR,CAAAA,UAAU,CAAGvE,aAAa,CAAC,KAAKQ,KAAL,CAAWF,KAAX,CAAiBqC,qBAAlB,CAAyC,KAAKnC,KAAL,CAAWF,KAAX,CAAiBmC,QAAjB,CAA0BP,SAAnE,CAAhC,CACA,KAAKvB,QAAL,CAAc,CACVgC,qBAAqB,CAArBA,qBADU,CACa4B,UAAU,CAAVA,UADb,CACyB1D,IAAI,CAAE,KAAKL,KAAL,CAAWF,KAAX,CAAiBwC,UADhD,CAEVlC,UAAU,CAAExB,OAAO,CAAC,KAAKoB,KAAL,CAAWF,KAAX,CAAiBwC,UAAlB,CAA8B,KAAKzC,KAAL,CAAWS,SAAzC,CAFT,CAAd,EAIH,CAXD,IAYK,CACD,GAAMA,CAAAA,SAAN,CAAoB,KAAKT,KAAzB,CAAMS,SAAN,CACA,GAAI,KAAKN,KAAL,CAAWF,KAAX,CAAiBQ,SAAjB,GAA+Bc,SAAnC,CAA8C,CAC1Cd,SAAS,CAAG,CAAEmD,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAK1D,KAAL,CAAWF,KAAX,CAAiB6D,QAAjB,CAA4BC,QAAQ,CAAC,KAAK5D,KAAL,CAAWF,KAAX,CAAiB6D,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAvF,CAAZ,CACH,CAED,KAAKxD,QAAL,CAAc,CACVE,IAAI,CAAE,KAAKL,KAAL,CAAWF,KAAX,CAAiBwC,UADb,CAEV4C,MAAM,CAAE,KAFE,CAGVxE,cAAc,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBY,cAHvB,CAIVN,UAAU,CAAExB,OAAO,CAAC,KAAKoB,KAAL,CAAWF,KAAX,CAAiBwC,UAAlB,CAA8BhC,SAA9B,CAJT,CAKVA,SAAS,CAATA,SALU,CAAd,EAOH,CACJ,CA3BD,IA2BO,IAAI,KAAKN,KAAL,CAAWF,KAAX,CAAiBY,cAAjB,GAAoCmE,aAAa,CAAC/E,KAAd,CAAoBY,cAA5D,CAA4E,CAC/E,KAAKP,QAAL,CAAc,CAAEO,cAAc,CAAE,KAAKV,KAAL,CAAWF,KAAX,CAAiBY,cAAnC,CAAd,EACH,CACJ,C,2BA5R2BnC,KAAK,CAAC4G,S,EA+RlC,cAAe3G,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAAEX,WAAW,CAAXA,WAAF,CAAcC,WAAW,CAAXA,WAAd,CAA0BC,UAAU,CAAVA,UAA1B,CAAqCC,uBAAuB,CAAvBA,uBAArC,CAA6DC,cAAc,CAAdA,cAA7D,CAA6EC,4BAA4B,CAA5BA,4BAA7E,CAAlB,CAAP,CAAqIb,UAAU,CAACsB,aAAD,CAA/I,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport AddModuleSorting from '../credentialmanagement/AddModuleSorting';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { callService,updateStore,crudMaster,validateEsignCredential,viewAttachment, getModuleSortingComboService} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { getControlMap, showEsign, sortData } from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ModuleSorting extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.formRef=React.createRef();\r\n        this.extractedColumnList = [];\r\n    \r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n\r\n}\r\n\r\ndataStateChange = (event) => {\r\n    this.setState({\r\n        dataResult: process(this.state.data, event.dataState),\r\n        dataState: event.dataState\r\n    });\r\n}\r\n\r\ncloseModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let selectedId = this.props.Login.selectedId;\r\n    if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            selectedRecord['esignpassword'] = \"\"\r\n            selectedRecord['esigncomments'] = \"\"\r\n            selectedRecord['esignreason']=\"\"\r\n    } else {\r\n        openModal = false;\r\n        selectedRecord = {};\r\n        selectedId=null;\r\n    }\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord, selectedId }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n}\r\n\r\n onComboChange = (comboData, fieldName) => {      \r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = comboData;;   \r\n \r\n    this.setState({selectedRecord});        \r\n}\r\n\r\nonSaveClick = (saveType, formRef) => {\r\n    let dataState = undefined;\r\n    let selectedId = null;\r\n    let inputData = [];\r\n    const selectedRecord = this.state.selectedRecord;\r\n    let prevRecord = this.state.selectedRecord[0].nmodulecode.value;\r\n    if (this.props.Login.operation === \"update\") {\r\n        dataState = this.state.dataState;\r\n        selectedId = this.props.Login.selectedId;\r\n    }\r\n    inputData[\"nformcode\"] = this.state.selectedRecord.nformcode.value;\r\n    inputData[\"nmodulecode\"] = this.state.selectedRecord.nmodulecode.value;\r\n  \r\nif(prevRecord != inputData.nmodulecode){\r\n    inputData[\"nmenucode\"] = this.state.selectedRecord.nmodulecode.item.nmenucode;\r\n} else{\r\n    inputData[\"nmenucode\"] = this.state.selectedRecord.nmenucode.value;\r\n}\r\n    const inputParam = {\r\n        classUrl: \"modulesorting\",\r\n        methodUrl: \"ModuleSorting\",\r\n        inputData: {userinfo: this.props.Login.userInfo, ...inputData},\r\n        operation: this.props.Login.operation,\r\n        displayName: this.props.Login.inputParam.displayName, saveType, formRef, selectedId, dataState,\r\n        selectedRecord\r\n       \r\n    }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                operation: this.props.Login.operation, selectedId\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n    \r\n// }\r\n// else{\r\n//     let openModal = false;\r\n    \r\n//     const updateInfo = {\r\n//         typeName: DEFAULT_RETURN,\r\n//         data: { openModal }\r\n//     }\r\n//     this.props.updateStore(updateInfo);\r\n//}\r\n\r\n    \r\n}\r\n\r\nvalidateEsign = () => {\r\n    const inputParam = {\r\n        inputData: {\r\n            \"userinfo\": {\r\n                ...this.props.Login.userInfo,\r\n                sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n           \r\n            },\r\n            password: this.state.selectedRecord[\"esignpassword\"]\r\n        },\r\n        screenData: this.props.Login.screenData\r\n    }\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n}\r\n\r\nreloadData = () => {\r\n    const inputParam = {\r\n        inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: this.props.Login.inputParam.methodUrl,\r\n        userInfo: this.props.Login.userInfo,\r\n        displayName: this.props.Login.inputParam.displayName\r\n    };\r\n\r\n    this.props.callService(inputParam);\r\n}\r\n\r\nonInputOnChange = (event) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === 'checkbox') {\r\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    }\r\n    else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n}\r\n\r\nrender() {\r\n    let primaryKeyField = \"\";\r\n\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [        \r\n                { \"controlType\": \"combobox\", \"idsName\": \"IDS_FORMNAME\",\"dataField\": \"sformdisplayname\", \"width\": \"150px\" },     \r\n                { \"controlType\": \"combobox\", \"idsName\": \"IDS_MODULENAME\",\"dataField\": \"smoduledisplayname\", \"width\": \"150px\" },\r\n            ]\r\n            primaryKeyField = \"nformcode\";\r\n        }\r\n        let mandatoryFields=[];\r\n  \r\n        const editID = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n          && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editParam = {\r\n        screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nformcode\", operation: \"update\",\r\n        inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editID\r\n        };\r\n\r\n        sortData(this.props.Login.masterData,'ascending','nformcode');\r\n\r\n        return(<>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n    \r\n                            {this.state.data ?\r\n                                    <DataGrid\r\n                                        primaryKeyField={primaryKeyField}\r\n                                        selectedId={this.props.Login.selectedId}\r\n                                        data={this.state.data}\r\n                                        dataResult={this.state.dataResult}\r\n                                        dataState={this.state.dataState}\r\n                                        dataStateChange={this.dataStateChange}\r\n                                        extractedColumnList={this.extractedColumnList}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        fetchRecord={this.props.getModuleSortingComboService}\r\n                                        reloadData={this.reloadData}\r\n                                        editParam={editParam}\r\n                                        scrollable={\"scrollable\"}\r\n                                        gridHeight = {\"600px\"}\r\n                                        isDownloadExcelRequired={false}\r\n                                        isActionRequired={true}\r\n                                        isToolBarRequired={true}\r\n                                        pageable={true}\r\n                                    />\r\n                                    : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        updateStore={this.props.updateStore}\r\n                        mandatoryFields={mandatoryFields}\r\n                        esign={this.props.Login.loadEsign}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <AddModuleSorting\r\n                            selectedRecord={this.props.Login.selectedRecord || {}}\r\n                            onComboChange={this.onComboChange}\r\n                            moduleSortingData={this.props.Login.moduleSortingData} \r\n                            formMapList={this.props.Login.formMapList}\r\n                            moduleMapList={this.props.Login.moduleMapList}\r\n                            menuMapList={this.props.Login.menuMapList}\r\n                            operation={this.props.Login.operation}\r\n                            inputParam={this.props.Login.inputParam} \r\n                        />}\r\n                    />\r\n                }\r\n                            \r\n        </>);\r\n}\r\n\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n            });\r\n        }\r\n        else {\r\n            let { dataState } = this.state;\r\n            if (this.props.Login.dataState === undefined) {\r\n                dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n            }\r\n\r\n            this.setState({\r\n                data: this.props.Login.masterData,\r\n                isOpen: false,\r\n                selectedRecord: this.props.Login.selectedRecord,\r\n                dataResult: process(this.props.Login.masterData, dataState),\r\n                dataState\r\n            });\r\n        }\r\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n        this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n    }\r\n}\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService,updateStore,crudMaster,validateEsignCredential,viewAttachment, getModuleSortingComboService})(injectIntl(ModuleSorting));\r\n"]},"metadata":{},"sourceType":"module"}