{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from\"../rsapi\";import{toast}from\"react-toastify\";import{DEFAULT_RETURN}from\"./LoginTypes\";import Axios from\"axios\";import{initRequest,updateStore}from\"./LoginAction\";import{transactionStatus}from\"../components/Enumeration\";import{constructOptionList,showEsign}from\"../components/CommonScript\";import{crudMaster}from'./ServiceAction';import{intl}from\"../components/App\";export function getCommentsCombo(inputParam){return function(dispatch){if(inputParam.masterList&&inputParam.masterList.length>0){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/sampletestcomments/getSampleTestComments\",{userinfo:inputParam.userInfo})];if(inputParam.operation===\"update\"){urlArray.push(rsapi.post(\"/comments/getEdit\".concat(inputParam.methodUrl),{userinfo:inputParam.userInfo,selectedrecord:inputParam.editRow}));}Axios.all(urlArray).then(function(response){var _payload;var sampleTestComments=response[0].data;var selectedRecord={};var defaultLink=sampleTestComments.filter(function(item){return item.ndefaultstatus===transactionStatus.YES;});var sampleTestCommentsMap=constructOptionList(sampleTestComments||[],\"nsampletestcommentcode\",\"ssampletestcommentname\",undefined,undefined,true);sampleTestComments=sampleTestCommentsMap.get(\"OptionList\");var editObject={};if(inputParam.operation===\"update\"){editObject=response[1].data;var nsamplecommentscode={};nsamplecommentscode={\"label\":editObject.ssampletestcommentname,\"value\":editObject.nsampletestcommentcode};selectedRecord=_objectSpread(_objectSpread({},editObject),{},{nsamplecommentscode:nsamplecommentscode});}else{selectedRecord={nsamplecommentscode:defaultLink.length>0?{\"label\":defaultLink[0].ssampletestcommentname,\"value\":defaultLink[0].nsampletestcommentcode}:\"\"};}dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,inputParam.modalName,true),_defineProperty(_payload,\"operation\",inputParam.operation),_defineProperty(_payload,\"screenName\",inputParam.screenName),_defineProperty(_payload,\"ncontrolCode\",inputParam.ncontrolCode),_defineProperty(_payload,\"selectedRecord\",selectedRecord),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"sampleTestComments\",sampleTestComments),_defineProperty(_payload,\"modalType\",'comment'),_defineProperty(_payload,\"modalName\",[inputParam.modalName]),_defineProperty(_payload,\"editObject\",editObject),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:inputParam.masterAlertStatus}));}};}export function deleteComment(deleteParam){return function(dispatch){var _inputData;var methodUrl=deleteParam.methodUrl;var selected=deleteParam.selectedRecord;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selected),_defineProperty(_inputData,\"npreregno\",deleteParam.npreregno),_defineProperty(_inputData,\"ntransactiontestcode\",deleteParam.ntransactiontestcode),_defineProperty(_inputData,\"ntransactionsamplecode\",deleteParam.ntransactionsamplecode),_defineProperty(_inputData,\"userinfo\",deleteParam.userInfo),_inputData),classUrl:\"comments\",operation:'delete',methodUrl:methodUrl,screenName:deleteParam.screenName};var masterData=deleteParam.masterData;if(showEsign(deleteParam.esignRights,deleteParam.userInfo.nformcode,deleteParam.ncontrolCode)){// dispatch({\n//     type: DEFAULT_RETURN,\n//     payload: {\n//         loadEsign: true,\n//         screenData: { inputParam, masterData },\n//         openCommentModal: true,\n//         screenName: deleteParam.screenName,\n//         operation: 'delete',\n//         selectedRecord: {}\n//     }\n// });\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openCommentModal:true,screenName:deleteParam.screenName,operation:'delete',selectedRecord:{}}};dispatch(updateStore(updateInfo));}else{dispatch(crudMaster(inputParam,masterData,\"openCommentModal\",{}));}};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/CommentsAction.js"],"names":["rsapi","toast","DEFAULT_RETURN","Axios","initRequest","updateStore","transactionStatus","constructOptionList","showEsign","crudMaster","intl","getCommentsCombo","inputParam","dispatch","masterList","length","urlArray","post","userinfo","userInfo","operation","push","concat","methodUrl","selectedrecord","editRow","all","then","response","sampleTestComments","data","selectedRecord","defaultLink","filter","item","ndefaultstatus","YES","sampleTestCommentsMap","undefined","get","editObject","nsamplecommentscode","ssampletestcommentname","nsampletestcommentcode","type","payload","modalName","screenName","ncontrolCode","catch","error","loading","status","message","warn","formatMessage","id","masterAlertStatus","deleteComment","deleteParam","selected","inputData","toLowerCase","npreregno","ntransactiontestcode","ntransactionsamplecode","classUrl","masterData","esignRights","nformcode","updateInfo","typeName","loadEsign","screenData","openCommentModal"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport Axios from \"axios\";\r\nimport { initRequest, updateStore } from \"./LoginAction\";\r\nimport { transactionStatus } from \"../components/Enumeration\";\r\nimport { constructOptionList, showEsign } from \"../components/CommonScript\";\r\nimport { crudMaster } from './ServiceAction'\r\nimport { intl } from \"../components/App\";\r\n\r\nexport function getCommentsCombo(inputParam) {\r\n    return (dispatch) => {\r\n        if (inputParam.masterList && inputParam.masterList.length > 0) {\r\n            dispatch(initRequest(true));\r\n            let urlArray = [rsapi.post(\"/sampletestcomments/getSampleTestComments\", { userinfo: inputParam.userInfo })];\r\n            if (inputParam.operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"/comments/getEdit\".concat(inputParam.methodUrl), { userinfo: inputParam.userInfo, selectedrecord: inputParam.editRow }))\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let sampleTestComments = response[0].data;\r\n                    let selectedRecord = {};\r\n                    const defaultLink = sampleTestComments.filter(item => item.ndefaultstatus === transactionStatus.YES);\r\n                    const sampleTestCommentsMap  = constructOptionList(sampleTestComments || [], \"nsampletestcommentcode\",\"ssampletestcommentname\" , undefined, undefined, true);\r\n                    sampleTestComments = sampleTestCommentsMap.get(\"OptionList\");\r\n                    let editObject = {};\r\n                    if (inputParam.operation === \"update\") {\r\n                        editObject = response[1].data;\r\n                        let nsamplecommentscode = {};\r\n                        nsamplecommentscode = { \"label\": editObject.ssampletestcommentname, \"value\": editObject.nsampletestcommentcode }\r\n                        selectedRecord = {\r\n                            ...editObject, nsamplecommentscode\r\n                        };\r\n                    } else {\r\n                        selectedRecord = {\r\n                            nsamplecommentscode: defaultLink.length > 0 ? { \"label\": defaultLink[0].ssampletestcommentname, \"value\": defaultLink[0].nsampletestcommentcode } : \"\",\r\n\r\n                        };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            [inputParam.modalName]: true,\r\n                            operation: inputParam.operation,\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            selectedRecord, loading: false,\r\n                            sampleTestComments,\r\n                            modalType: 'comment',\r\n                            modalName: [inputParam.modalName],\r\n                            editObject\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: inputParam.masterAlertStatus }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function deleteComment(deleteParam) {\r\n    return (dispatch) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.selectedRecord;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                [methodUrl.toLowerCase()]: selected,\r\n                npreregno: deleteParam.npreregno,\r\n                ntransactiontestcode: deleteParam.ntransactiontestcode,\r\n                ntransactionsamplecode: deleteParam.ntransactionsamplecode,\r\n                userinfo: deleteParam.userInfo\r\n            },\r\n            classUrl: \"comments\",\r\n            operation: 'delete',\r\n            methodUrl: methodUrl,\r\n            screenName: deleteParam.screenName\r\n        }\r\n        const masterData = deleteParam.masterData;\r\n        if (showEsign(deleteParam.esignRights, deleteParam.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            // dispatch({\r\n            //     type: DEFAULT_RETURN,\r\n            //     payload: {\r\n            //         loadEsign: true,\r\n            //         screenData: { inputParam, masterData },\r\n            //         openCommentModal: true,\r\n            //         screenName: deleteParam.screenName,\r\n            //         operation: 'delete',\r\n            //         selectedRecord: {}\r\n            //     }\r\n            // });\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {   \r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openCommentModal: true,\r\n                    screenName: deleteParam.screenName,\r\n                    operation: 'delete',\r\n                    selectedRecord: {}}\r\n            }\r\n            dispatch(updateStore(updateInfo));\r\n        } else {\r\n            dispatch(crudMaster(inputParam, masterData, \"openCommentModal\", {}));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}