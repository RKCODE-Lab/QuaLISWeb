{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{sortData}from'../components/CommonScript';export function SyncRecords(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/synchronization/syncRecords\",{'userinfo':userInfo}).then(function(response){if(response.data[\"SyncMessage\"]){toast.info(response.data[\"SyncMessage\"]);}//masterData = {...masterData, ...response.data}; \nvar masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSyncHistoryDetail(syncHistory,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));console.log(\"syncHistory:\",syncHistory);return rsapi.post(\"synchistory/getSyncHistory\",{nsyncbatchcode:syncHistory.nsyncbatchcode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SyncConfigurationAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","toast","sortData","SyncRecords","userInfo","dispatch","post","then","response","data","info","masterData","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getSyncHistoryDetail","syncHistory","console","log","nsyncbatchcode","userinfo"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAAQC,QAAR,KAAuB,4BAAvB,CAEA,MAAO,SAASC,CAAAA,WAAT,CAAsBC,QAAtB,CAAgC,CACnC,MAAO,UAAUC,QAAV,CAAoB,CACvBA,QAAQ,CAACL,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,KAAK,CAACQ,IAAN,CAAW,8BAAX,CACI,CAAE,WAAYF,QAAd,CADJ,EAEKG,IAFL,CAEU,SAAAC,QAAQ,CAAI,CAEd,GAAGA,QAAQ,CAACC,IAAT,CAAc,aAAd,CAAH,CACA,CACIR,KAAK,CAACS,IAAN,CAAWF,QAAQ,CAACC,IAAT,CAAc,aAAd,CAAX,EACH,CACD;AACA,GAAME,CAAAA,UAAU,CAAGH,QAAQ,CAACC,IAA5B,CACAP,QAAQ,CAACS,UAAD,CAAR,CACAN,QAAQ,CAAC,CAACO,IAAI,CAAEb,cAAP,CAAuBc,OAAO,CAAC,CAACF,UAAU,CAAVA,UAAD,CAAaG,SAAS,CAAC,IAAvB,CAA6BC,SAAS,CAACC,SAAvC,CACnCC,OAAO,CAAC,KAD2B,CAA/B,CAAD,CAAR,CAEH,CAbL,EAcKC,KAdL,CAcW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLO,IAAI,CAAEb,cADD,CAELc,OAAO,CAAE,CACLI,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIE,KAAK,CAACX,QAAN,CAAeY,MAAf,GAA0B,GAA9B,CAAmC,CAC/BnB,KAAK,CAACkB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAEO,CACHpB,KAAK,CAACqB,IAAN,CAAWH,KAAK,CAACX,QAAN,CAAeC,IAA1B,EACH,CACJ,CA1BL,EA2BH,CA7BD,CA8BH,CAED,MAAO,SAASc,CAAAA,oBAAT,CAA+BC,WAA/B,CAA4CpB,QAA5C,CAAsDO,UAAtD,CAAkE,CACrE,MAAO,UAAUN,QAAV,CAAoB,CAC3BA,QAAQ,CAACL,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAyB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BF,WAA5B,EACA,MAAO1B,CAAAA,KAAK,CAACQ,IAAN,CAAW,4BAAX,CAAyC,CAACqB,cAAc,CAACH,WAAW,CAACG,cAA5B,CAA4CC,QAAQ,CAACxB,QAArD,CAAzC,EACPG,IADO,CACF,SAAAC,QAAQ,CAAE,CACXG,UAAU,gCAAOA,UAAP,EAAsBH,QAAQ,CAACC,IAA/B,CAAV,CACAP,QAAQ,CAACS,UAAD,CAAR,CACAN,QAAQ,CAAC,CAACO,IAAI,CAAEb,cAAP,CAAuBc,OAAO,CAAC,CAACF,UAAU,CAAVA,UAAD,CAAaG,SAAS,CAAC,IAAvB,CAA6BC,SAAS,CAACC,SAAvC,CACnCC,OAAO,CAAC,KAD2B,CAA/B,CAAD,CAAR,CAEJ,CANO,EAOPC,KAPO,CAOD,SAAAC,KAAK,CAAE,CACTd,QAAQ,CAAC,CAACO,IAAI,CAAEb,cAAP,CAAuBc,OAAO,CAAE,CAACI,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACD,GAAIE,KAAK,CAACX,QAAN,CAAeY,MAAf,GAA0B,GAA9B,CAAkC,CAC9BnB,KAAK,CAACkB,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACApB,KAAK,CAACqB,IAAN,CAAWH,KAAK,CAACX,QAAN,CAAeC,IAA1B,EACH,CAEJ,CAhBO,CAAP,CAiBH,CApBG,CAoBF","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport {sortData} from '../components/CommonScript';\r\n\r\nexport function SyncRecords (userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/synchronization/syncRecords\",\r\n            { 'userinfo': userInfo})\r\n            .then(response => {             \r\n\r\n                if(response.data[\"SyncMessage\"])\r\n                {\r\n                    toast.info(response.data[\"SyncMessage\"]);\r\n                }\r\n                //masterData = {...masterData, ...response.data}; \r\n                const masterData = response.data;      \r\n                sortData(masterData);\r\n                dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n                     loading:false}}); \r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSyncHistoryDetail (syncHistory, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    console.log(\"syncHistory:\", syncHistory);\r\n    return rsapi.post(\"synchistory/getSyncHistory\", {nsyncbatchcode:syncHistory.nsyncbatchcode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}"]},"metadata":{},"sourceType":"module"}