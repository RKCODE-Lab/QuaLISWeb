{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import React from'react';import{Row,Col,Nav}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{faPlus,faPencilAlt}from'@fortawesome/free-solid-svg-icons';// import ReactTooltip from 'react-tooltip';\nvar QuotationDetailTab=function QuotationDetailTab(props){console.log(props);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters text-right border-bottom pt-2 pb-2\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addPrice\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(props.addQuotationTestId)===-1,onClick:function onClick(){return props.getQuotationAddTestService(\"IDS_TEST\",\"create\",props.masterData,props.userInfo,props.addQuotationTestId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TEST\",defaultMessage:\"Test\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"updatePrice\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(props.updateQuotationTestId)===-1,onClick:function onClick(){return props.getQuotationPricingEditService(_objectSpread(_objectSpread({},props.editTestPriceParam),{},{\"updateType\":\"All\",dataState:undefined}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_PRICE\",defaultMessage:\"Price\"}))))),/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nquotationtestcode\",data:props.data//  dataResult={process(this.props.Login.masterData.QuotationTest || [], this.state.quotationDataState)}\n,dataResult:props.dataResult//   dataState={this.state.quotationDataState}\n,dataState:props.dataState// dataStateChange={this.dataStateChange}\n//   dataStateChange={(event) => this.setState({ quotationDataState: event.dataState })}\n,dataStateChange:props.dataStateChange,extractedColumnList:props.columnList,expandField:\"expanded\",controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,fetchRecord:props.getQuotationPricingEditService,editParam:_objectSpread(_objectSpread({},props.editTestPriceParam),{},{\"updateType\":\"Single\",dataState:props.dataState}),gridHeight:'335px',deleteRecord:props.deleteRecord,deleteParam:{operation:\"delete\"},methodUrl:\"QuotationTest\",addRecord:function addRecord(){return _this.openModal(props.addQuotationTestId);},pageable:true,scrollable:'scrollable',isActionRequired:true,isToolBarRequired:false,selectedId:props.selectedId}))));};export default injectIntl(QuotationDetailTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/quotation/QuotationDetailTab.jsx"],"names":["React","Row","Col","Nav","FormattedMessage","injectIntl","FontAwesomeIcon","DataGrid","faPlus","faPencilAlt","QuotationDetailTab","props","console","log","userRoleControlRights","indexOf","addQuotationTestId","getQuotationAddTestService","masterData","userInfo","updateQuotationTestId","getQuotationPricingEditService","editTestPriceParam","dataState","undefined","data","dataResult","dataStateChange","columnList","controlMap","inputParam","deleteRecord","operation","openModal","selectedId"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus,faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst QuotationDetailTab = (props) => {\r\n    console.log(props);\r\n    return (<>\r\n        <Row className=\"no-gutters text-right border-bottom pt-2 pb-2\" >\r\n            <Col md={12}>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\"/> */}\r\n                    <Nav.Link name=\"addPrice\" className=\"add-txt-btn\" \r\n                                              hidden={props.userRoleControlRights.indexOf(props.addQuotationTestId) === -1}\r\n                                              onClick={()=>props.getQuotationAddTestService(\"IDS_TEST\", \"create\", props.masterData, props.userInfo, props.addQuotationTestId)}\r\n                                              >\r\n                            <FontAwesomeIcon icon={faPlus} /> { } \r\n                            <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                      </Nav.Link>\r\n                     <Nav.Link name=\"updatePrice\" className=\"add-txt-btn\" \r\n                                              hidden={props.userRoleControlRights.indexOf(props.updateQuotationTestId) === -1}\r\n                                              onClick={()=>props.getQuotationPricingEditService({...props.editTestPriceParam, \"updateType\":\"All\", dataState:undefined})}\r\n                                              >\r\n                              <FontAwesomeIcon icon={faPencilAlt} /> { }\r\n                              <FormattedMessage id='IDS_PRICE' defaultMessage='Price' />\r\n                     </Nav.Link>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"no-gutters\">\r\n            <Col md={12}>\r\n                <DataGrid\r\n                     primaryKeyField={\"nquotationtestcode\"}\r\n                        data={props.data}\r\n                    //  dataResult={process(this.props.Login.masterData.QuotationTest || [], this.state.quotationDataState)}\r\n                        dataResult={props.dataResult}\r\n                   //   dataState={this.state.quotationDataState}\r\n                        dataState={props.dataState}\r\n                     // dataStateChange={this.dataStateChange}\r\n                     //   dataStateChange={(event) => this.setState({ quotationDataState: event.dataState })}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={props.columnList}\r\n                        expandField=\"expanded\"\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam={props.inputParam}\r\n                        userInfo={props.userInfo}\r\n                        fetchRecord={props.getQuotationPricingEditService}\r\n                        editParam={{...props.editTestPriceParam, \"updateType\":\"Single\", dataState:props.dataState}}\r\n                        gridHeight={'335px'}\r\n                        deleteRecord={props.deleteRecord}\r\n                        deleteParam={{operation:\"delete\"}}\r\n                        methodUrl={\"QuotationTest\"}\r\n                        addRecord = {() => this.openModal(props.addQuotationTestId)}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        isActionRequired={true}\r\n                        isToolBarRequired={false}\r\n                        selectedId={props.selectedId}\r\n                        \r\n                />\r\n\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    );\r\n}\r\nexport default injectIntl(QuotationDetailTab);"]},"metadata":{},"sourceType":"module"}