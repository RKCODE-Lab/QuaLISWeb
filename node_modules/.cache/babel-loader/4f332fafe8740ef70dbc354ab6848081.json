{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{toast}from'react-toastify';import{FormattedMessage}from'react-intl';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{ReadOnlyText}from'../../components/App.styles';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,validateEsignCredential,updateStore,getHoildaysYear,selectCheckBoxYear,getCommonHolidays,filterColumnData,getPublicHolidays,sendApproveYearVersion,getCommonAndPublicHolidays}from'../../actions';import ListMaster from'../../components/list-master/list-master.component';import{ContentPanel}from'../../pages/product/product.styled';import{showEsign,getControlMap}from'../../components/CommonScript';import Esign from'../audittrail/Esign';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import HolidayPlannerTab from'../../pages/configurationmaster/HolidayPlannerTab';import AddYear from'../../pages/configurationmaster/AddYear';import{transactionStatus}from'../../components/Enumeration';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import ReactTooltip from'react-tooltip';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var HolidayPlanner=/*#__PURE__*/function(_Component){_inherits(HolidayPlanner,_Component);var _super=_createSuper(HolidayPlanner);function HolidayPlanner(props){var _this;_classCallCheck(this,HolidayPlanner);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteHolidaysYear(\"delete\",deleteId);});};_this.handleFilterDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.editHolidayYear=function(editId){// let checkApproved = 0;\n// this.props.Login.masterData.YearVersion.forEach(item => {\n//     if (item.ntransactionstatus === transactionStatus.APPROVED) {\n//         checkApproved = 1;\n//     }\n// }\n// )\n// if (checkApproved === 0) {\n_this.props.getHoildaysYear(\"IDS_HOLIDAYPLANNER\",\"update\",\"nyearcode\",_this.props.Login.masterData,_this.props.Login.userInfo,editId);// }\n// else {\n//     toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITONEOFTHEVERSIONISAPPROVED\" }));\n// }\n};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"holidayplanner\",methodUrl:\"HolidayPlanner\",userInfo:_this.props.Login.userInfo,displayName:\"IDS_HOLIDAYPLANNER\"};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){// if (this.state.selectedRecord[\"syear\"] === 0 || this.state.selectedRecord[\"syear\"].toString().length < 4) {\n//     toast.warn(intl.formatMessage({ id: \"IDS_INVALIDYEAR\" }));\n// }\n// else {\nvar inputData=[];var postParam=undefined;inputData[\"userinfo\"]=_this.props.Login.userInfo;var fieldList=[\"nyearcode\",\"sdescription\"];var holidayYear=_this.state.selectedRecord[\"syear\"];if(_this.props.Login.operation===\"update\"){postParam={inputListName:\"HolidayYear\",selectedObject:\"selectedYear\",primaryKeyField:\"nyearcode\"};inputData[\"holidaysyear\"]={};fieldList.map(function(item){return inputData[\"holidaysyear\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});inputData[\"holidaysyear\"][\"syear\"]=holidayYear.getFullYear();}else{inputData[\"holidaysyear\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};fieldList.map(function(item){return inputData[\"holidaysyear\"][item]=_this.state.selectedRecord[item];});inputData[\"holidaysyear\"][\"syear\"]=holidayYear.getFullYear();}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"HolidaysYear\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.DeleteHolidaysYear=function(operation,ncontrolCode){var inputData=[];inputData[\"holidaysyear\"]=_this.props.Login.masterData.selectedYear;inputData[\"userinfo\"]=_this.props.Login.userInfo;var inputParam={methodUrl:\"HolidaysYear\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:\"delete\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"HolidayPlanner\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};var dataState={skip:0,take:10};_this.state={selectedRecord:{},dataResult:[],dataState:dataState,masterStatus:\"\",error:\"\",HolidayYear:[],operation:\"\",selectedYear:undefined,screenName:\"HolidayPlanner\",CurrentYearVersion:0,userRoleControlRights:[],controlMap:new Map()};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(HolidayPlanner,[{key:\"render\",value:function render(){var _this2=this;// let userStatusCSS = \"\";\n// if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 8) {\n//     userStatusCSS = \"outline-secondary\";\n// }\n// else if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 22) {\n//     userStatusCSS = \"outline-success\";\n// }\n// else if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 53) {\n//     userStatusCSS = \"outline-correction\";\n// } else {\n//     userStatusCSS = \"outline-Final\";\n// }\nthis.extractedColumnList=[{\"idsName\":\"IDS_YEAR\",\"mandatory\":true,\"dataField\":\"syear\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var addId=this.state.controlMap.has(\"AddHolidaysYear\")&&this.state.controlMap.get(\"AddHolidaysYear\").ncontrolcode;var editId=this.state.controlMap.has(\"EditHolidaysYear\")&&this.state.controlMap.get(\"EditHolidaysYear\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteHolidaysYear\")&&this.state.controlMap.get(\"DeleteHolidaysYear\").ncontrolcode;var filterParam={inputListName:\"HolidayYear\",selectedObject:\"selectedYear\",primaryKeyField:\"nyearcode\",fetchUrl:\"holidayplanner/getSelectionAllHolidayPlanner\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"syear\",\"sdescription\"]};var mandatoryFields=[];this.extractedColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster//filterColumnData ={(e)=>this.filterColumnData(e)}\n,{formatMessage:this.props.intl.formatMessage,screenName:this.props.intl.formatMessage({id:\"IDS_HOLIDAYPLANNER\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.HolidayYear,getMasterDetail:function getMasterDetail(HolidayYear){return _this2.props.selectCheckBoxYear(HolidayYear,_this2.props.Login.masterData,_this2.props.Login.userInfo);},selectedMaster:this.props.Login.masterData.selectedYear,primaryKeyField:\"nyearcode\",mainField:\"syear\"// firstField=\"sdescription\"\n,filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.getHoildaysYear(\"IDS_HOLIDAYPLANNER\",\"create\",\"nyearcode\",_this2.props.Login.masterData,_this2.props.Login.userInfo,779);},isMultiSelecct:false,hideCheckLabel:true,hidePaging:true})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},this.props.Login.masterData.HolidayYear&&this.props.Login.masterData.HolidayYear.length>0&&this.props.Login.masterData.selectedYear?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip-list-wrap\"}),/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedYear.syear),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline \"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),\"data-for\":\"tooltip-list-wrap\",onClick:function onClick(e){return _this2.editHolidayYear(editId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",href:\"\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip-list-wrap\",onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:'IDS_DESCRIPTION',message:\"Description\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.selectedYear.sdescription&&this.props.Login.masterData.selectedYear.sdescription)))),/*#__PURE__*/React.createElement(HolidayPlannerTab,{operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,masterStatus:this.props.Login.masterStatus,openChildModal:this.props.Login.openChildModal,updateStore:this.props.updateStore,selectedRecord:this.props.Login.selectedRecord,ncontrolCode:this.props.Login.ncontrolCode,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,controlMap:this.state.controlMap,CurrentYearVersion:this.props.Login.CurrentYearVersion,getCommonHolidays:this.props.getCommonHolidays,getPublicHolidays:this.props.getPublicHolidays,sendApproveYearVersion:this.props.sendApproveYearVersion,getCommonAndPublicHolidays:this.props.getCommonAndPublicHolidays,selectedId:this.props.Login.selectedId,timeZoneList:this.props.Login.timeZoneList||[],setting:this.props.Login.settings}))):\"\")))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddYear,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,handleFilterDateChange:this.handleFilterDateChange,operation:this.props.operation,inputParam:this.props.inputParam})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return HolidayPlanner;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getHoildaysYear:getHoildaysYear,selectCheckBoxYear:selectCheckBoxYear,getCommonHolidays:getCommonHolidays,filterColumnData:filterColumnData,getPublicHolidays:getPublicHolidays,sendApproveYearVersion:sendApproveYearVersion,getCommonAndPublicHolidays:getCommonAndPublicHolidays})(injectIntl(HolidayPlanner));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/HolidayPlanner.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","ReadOnlyText","SlideOutModal","connect","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getHoildaysYear","selectCheckBoxYear","getCommonHolidays","filterColumnData","getPublicHolidays","sendApproveYearVersion","getCommonAndPublicHolidays","ListMaster","ContentPanel","showEsign","getControlMap","Esign","DEFAULT_RETURN","HolidayPlannerTab","AddYear","transactionStatus","ConfirmMessage","ReactTooltip","mapStateToProps","state","Login","HolidayPlanner","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","DeleteHolidaysYear","handleFilterDateChange","dateName","dateValue","Date","setState","editHolidayYear","editId","masterData","userInfo","reloadData","searchRef","current","value","inputParam","inputData","classUrl","methodUrl","displayName","onSaveClick","saveType","formRef","postParam","undefined","fieldList","holidayYear","inputListName","selectedObject","primaryKeyField","map","item","getFullYear","nmastersitecode","userRoleControlRights","nformcode","ncontrolCode","screenData","selectedYear","screenName","onNumericInputOnChange","name","onInputOnChange","event","target","type","checked","YES","NO","ACTIVE","DEACTIVE","validateEsign","sreason","password","dataState","skip","take","dataResult","masterStatus","error","HolidayYear","CurrentYearVersion","controlMap","Map","createRef","extractedColumnList","addId","has","get","ncontrolcode","filterParam","fetchUrl","fecthInputObject","userinfo","searchFieldList","mandatoryFields","forEach","mandatory","push","searchedData","length","syear","indexOf","e","sdescription","errorCode","openChildModal","timeZoneList","settings","previousProps","Object","values","modalName","warn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getHoildaysYear, selectCheckBoxYear,\r\n    getCommonHolidays, filterColumnData,\r\n    getPublicHolidays, sendApproveYearVersion, getCommonAndPublicHolidays\r\n} from '../../actions';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ContentPanel } from '../../pages/product/product.styled';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport HolidayPlannerTab from '../../pages/configurationmaster/HolidayPlannerTab';\r\nimport AddYear from '../../pages/configurationmaster/AddYear';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass HolidayPlanner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            selectedRecord: {}, dataResult: [],\r\n            dataState: dataState,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            HolidayYear: [],\r\n            operation: \"\",\r\n            selectedYear: undefined,\r\n            screenName: \"HolidayPlanner\",\r\n            CurrentYearVersion: 0,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    render() {\r\n\r\n        // let userStatusCSS = \"\";\r\n        // if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 8) {\r\n        //     userStatusCSS = \"outline-secondary\";\r\n        // }\r\n        // else if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 22) {\r\n        //     userStatusCSS = \"outline-success\";\r\n        // }\r\n        // else if (this.props.Login.masterData.selectedYear && this.props.Login.masterData.selectedYear.ntransactionstatus === 53) {\r\n        //     userStatusCSS = \"outline-correction\";\r\n        // } else {\r\n        //     userStatusCSS = \"outline-Final\";\r\n        // }\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_YEAR\", \"mandatory\": true, \"dataField\": \"syear\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n\r\n        const addId = this.state.controlMap.has(\"AddHolidaysYear\") && this.state.controlMap.get(\"AddHolidaysYear\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditHolidaysYear\") && this.state.controlMap.get(\"EditHolidaysYear\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteHolidaysYear\") && this.state.controlMap.get(\"DeleteHolidaysYear\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"HolidayYear\", selectedObject: \"selectedYear\", primaryKeyField: \"nyearcode\",\r\n            fetchUrl: \"holidayplanner/getSelectionAllHolidayPlanner\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"syear\", \"sdescription\"]\r\n        };\r\n\r\n        const mandatoryFields = [];\r\n        this.extractedColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_HOLIDAYPLANNER\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.HolidayYear}\r\n                                getMasterDetail={(HolidayYear) => this.props.selectCheckBoxYear(HolidayYear, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedYear}\r\n                                primaryKeyField=\"nyearcode\"\r\n                                mainField=\"syear\"\r\n                                // firstField=\"sdescription\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getHoildaysYear(\"IDS_HOLIDAYPLANNER\", \"create\", \"nyearcode\", this.props.Login.masterData, this.props.Login.userInfo, 779)}\r\n                                isMultiSelecct={false}\r\n                                hideCheckLabel={true}\r\n                                hidePaging={true}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            <Row><Col md={12}>\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    {this.props.Login.masterData.HolidayYear && this.props.Login.masterData.HolidayYear.length > 0 && this.props.Login.masterData.selectedYear ?\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Header>\r\n                                                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-list-wrap\" />\r\n                                                <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedYear.syear}</Card.Title>\r\n                                                <Card.Subtitle>\r\n\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        </h2>\r\n                                                        {/* <Col md='6'> */}\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n\r\n                                                        <div className=\"d-inline \">\r\n\r\n                                                            {/* <ProductList className=\"d-inline dropdown badget_menu\"> */}\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                data-for=\"tooltip-list-wrap\"\r\n                                                                onClick={(e) => this.editHolidayYear(editId)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                data-for=\"tooltip-list-wrap\"\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    handleClickDelete={() => this.DeleteHolidaysYear(\"delete\", deleteId)}\r\n                                                                /> */}\r\n                                                            </Nav.Link>\r\n                                                            {/* </ProductList> */}\r\n\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                        {/* </Col> */}\r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id={'IDS_DESCRIPTION'} message=\"Description\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.selectedYear.sdescription && this.props.Login.masterData.selectedYear.sdescription}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* </Card.Body>\r\n                                            <Card.Body> */}\r\n                                                <HolidayPlannerTab\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    CurrentYearVersion={this.props.Login.CurrentYearVersion}\r\n                                                    getCommonHolidays={this.props.getCommonHolidays}\r\n                                                    getPublicHolidays={this.props.getPublicHolidays}\r\n                                                    sendApproveYearVersion={this.props.sendApproveYearVersion}\r\n                                                    getCommonAndPublicHolidays={this.props.getCommonAndPublicHolidays}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    timeZoneList={this.props.Login.timeZoneList || []}\r\n                                                    setting = {this.props.Login.settings}\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </Card> : \"\"}\r\n                                </ContentPanel>\r\n                            </Col></Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddYear\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                operation={this.props.operation}\r\n                                inputParam={this.props.inputParam}\r\n                            />}\r\n                    />}\r\n            </>\r\n\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }), () => this.DeleteHolidaysYear(\"delete\", deleteId));\r\n    }\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    editHolidayYear = (editId) => {\r\n\r\n        // let checkApproved = 0;\r\n        // this.props.Login.masterData.YearVersion.forEach(item => {\r\n        //     if (item.ntransactionstatus === transactionStatus.APPROVED) {\r\n        //         checkApproved = 1;\r\n        //     }\r\n        // }\r\n        // )\r\n        // if (checkApproved === 0) {\r\n        this.props.getHoildaysYear(\"IDS_HOLIDAYPLANNER\", \"update\", \"nyearcode\", this.props.Login.masterData, this.props.Login.userInfo, editId)\r\n        // }\r\n        // else {\r\n        //     toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITONEOFTHEVERSIONISAPPROVED\" }));\r\n        // }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"holidayplanner\",\r\n            methodUrl: \"HolidayPlanner\",\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: \"IDS_HOLIDAYPLANNER\"\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        // if (this.state.selectedRecord[\"syear\"] === 0 || this.state.selectedRecord[\"syear\"].toString().length < 4) {\r\n        //     toast.warn(intl.formatMessage({ id: \"IDS_INVALIDYEAR\" }));\r\n        // }\r\n        // else {\r\n        let inputData = [];\r\n\r\n        let postParam = undefined;\r\n\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let fieldList = [\"nyearcode\", \"sdescription\"];\r\n        const holidayYear = this.state.selectedRecord[\"syear\"]\r\n        if (this.props.Login.operation === \"update\") {\r\n\r\n            postParam = { inputListName: \"HolidayYear\", selectedObject: \"selectedYear\", primaryKeyField: \"nyearcode\" };\r\n\r\n            inputData[\"holidaysyear\"] = {};\r\n            fieldList.map(item => {\r\n                return inputData[\"holidaysyear\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n            inputData[\"holidaysyear\"][\"syear\"] = holidayYear.getFullYear();\r\n        }\r\n        else {\r\n            inputData[\"holidaysyear\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            fieldList.map(item => {\r\n                return inputData[\"holidaysyear\"][item] = this.state.selectedRecord[item]\r\n            })\r\n            inputData[\"holidaysyear\"][\"syear\"] = holidayYear.getFullYear();\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"HolidaysYear\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation, saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    DeleteHolidaysYear = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"holidaysyear\"] = this.props.Login.masterData.selectedYear;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const inputParam = {\r\n            methodUrl: \"HolidaysYear\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\"\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"HolidayPlanner\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getHoildaysYear, selectCheckBoxYear,\r\n    getCommonHolidays, filterColumnData,\r\n    getPublicHolidays, sendApproveYearVersion, getCommonAndPublicHolidays\r\n})(injectIntl(HolidayPlanner));"]},"metadata":{},"sourceType":"module"}