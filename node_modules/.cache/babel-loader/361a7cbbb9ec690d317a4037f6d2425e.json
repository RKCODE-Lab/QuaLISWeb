{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card}from'react-bootstrap';import{toast}from'react-toastify';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,fetchRecordDashBoardType,getSqlQueryDataService,getSqlQueryColumns,getAddDashboardDesign,selectCheckBoxDashBoardTypes,selectCheckBoxDashBoardView,checkParametersAvailable,getReportViewChildDataListForDashBoard,getAllSelectionDashBoardView,updateStore,validateEsignCredential,filterColumnData}from'../../actions';import ListMaster from'../../components/list-master/list-master.component';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ProductList}from'../../pages/product/product.styled';import{getControlMap,formatInputDate,rearrangeDateFormat}from'../../components/CommonScript';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{transactionStatus,designComponents}from'../../components/Enumeration';import AreaChart from'../dashboardtypes/charts/AreaChart';import PieChart from'../dashboardtypes/charts/PieChart';import DashBoardDynamicControls from'../dashboardtypes/DashBoardDynamicControls';import{chartType}from'../../components/Enumeration';import BubbleChart from'../dashboardtypes/charts/BubbleChart';//import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var DashBoardView=/*#__PURE__*/function(_React$Component){_inherits(DashBoardView,_React$Component);var _super=_createSuper(DashBoardView);function DashBoardView(props){var _this;_classCallCheck(this,DashBoardView);_this=_super.call(this,props);_this.openModal=function(input){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},operation:input.operation,screenName:\"IDS_DASHBOARDTYPES\",openModal:true,ncontrolCode:input.ncontrolCode,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;// if (this.props.Login.loadEsign) {\n//     if (this.props.Login.operation === \"delete\") {\n//         loadEsign = false;\n//         openModal = false;\n//         selectedRecord = {};\n//     }\n//     else {\n//         loadEsign = false;\n//     }\n// }\n// else {\nopenModal=false;//selectedRecord = {};\n//}\n_this.props.Login.masterData.viewDashBoardDesignConfigList.map(function(item){if(item.ndesigncomponentcode===designComponents.DATEPICKER){selectedRecord[item.sfieldname]=rearrangeDateFormat(_this.props.Login.userInfo,item.dataList[0]);}else if(item.ndesigncomponentcode===designComponents.COMBOBOX){var comboList=item.dataList;var getList=comboList.filter(function(lst){return lst.value===parseInt(item.sdefaultvalue);});if(getList.length>0){selectedRecord[item.sfieldname]={label:getList[0].label,value:getList[0].value};}else{selectedRecord[item.sfieldname]=undefined;}}else{selectedRecord[item.sfieldname]=item.sdefaultvalue;}return null;});var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,//loadEsign, \nselectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"dashboardview\",methodUrl:\"DashBoardView\",displayName:\"IDS_DASHBOARDVIEW\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onNumericInputOnChange=function(value,name,item){var _objectSpread2;var selectedRecord=_this.state.selectedRecord||{};var selectedRecord2=_this.state.selectedRecord2||{};selectedRecord[name]=value;selectedRecord2[name]=value;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread2={},_defineProperty(_objectSpread2,name,value),_defineProperty(_objectSpread2,name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread2,name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread2)),parentcode:value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onInputOnChange=function(event,item){var _objectSpread3;var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread3={},_defineProperty(_objectSpread3,event.target.name,selectedRecord[event.target.name]),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread3,event.target.name.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread3)),parentcode:selectedRecord[event.target.name].toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onComboChange=function(comboData,fieldName,item){var _objectSpread4;//console.log(\"combo data:\", comboData, fieldName, item);\nvar selectedRecord=_this.state.selectedRecord||{};var selectedRecord2=_this.state.selectedRecord2||{};selectedRecord[fieldName]=comboData;selectedRecord2[fieldName]=comboData===null?-1:comboData.value;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread4={},_defineProperty(_objectSpread4,fieldName,comboData===null?-1:comboData.value),_defineProperty(_objectSpread4,fieldName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread4,fieldName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread4)),parentcode:comboData===null?\"-1\":comboData.value.toString(),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.handleDateChange=function(dateName,dateValue,item){var _objectSpread5;var selectedRecord=_this.state.selectedRecord;var selectedRecord2=_this.state.selectedRecord2||{};if(dateValue===null){dateValue=rearrangeDateFormat(_this.props.Login.userInfo,item.dataList[0]);}selectedRecord[dateName]=dateValue;selectedRecord2[dateName]=dateValue;var inputData={dashboarddesignconfig:item,inputfielddata:_objectSpread(_objectSpread({},_this.props.Login.inputFieldData),{},(_objectSpread5={},_defineProperty(_objectSpread5,dateName,formatInputDate(dateValue,true)),_defineProperty(_objectSpread5,dateName.concat(\"_componentcode\"),item.ndesigncomponentcode),_defineProperty(_objectSpread5,dateName.concat(\"_componentname\"),item.sdesigncomponentname),_objectSpread5)),parentcode:formatInputDate(dateValue,true),parentid:item.ndashboarddesigncode,userinfo:_this.props.Login.userInfo,ndashboardtypecode:_this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode};var inputParam={viewDashBoardDesignConfigList:_this.props.Login.masterData.viewDashBoardDesignConfigList,selectedRecord:selectedRecord,inputData:inputData};_this.props.getReportViewChildDataListForDashBoard(inputParam);};_this.onSaveClick=function(){var inputFieldData=_this.props.Login.inputFieldData;var inputParam={dashboardtypes:_this.props.Login.masterData.selectedDashBoardTypes,inputfielddata:inputFieldData,userinfo:_this.props.Login.userInfo};_this.props.selectCheckBoxDashBoardView(\"DashBoardView\",_this.state.selectedRecord,_this.props.Login.masterData,inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.gridColumnList=[];var dataState={skip:0,take:10};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},selectedRecord2:{},dataResult:[],dataState:dataState,isOpen:false,controlMap:new Map(),userRoleControlRights:[],sqlQueryCode:0,chartTypeCode:0,chartSeries:[{xField:[],yField:[],chartTitle:\"\"}],displayColorPicker:false,color:{r:'241',g:'112',b:'19',a:'1'}};_this.searchRef=React.createRef();return _this;}_createClass(DashBoardView,[{key:\"render\",value:function render(){var _this2=this;var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))&&this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;var filterParam={inputListName:\"DashBoardView\",selectedObject:\"selectedDashBoardTypes\",primaryKeyField:\"ndashboardtypecode\",fetchUrl:\"dashboardview/getAllSelectionDashBoardView\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"sdashboardtypename\",\"schartname\",\"ssqlqueryname\"]};//  console.log(\"Chart Property : \", this.props.ChartProperty);\nthis.extractedColumnList=[{\"idsName\":\"IDS_DASHBOARDNAME\",\"dataField\":\"sdashboardtypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"ndesigncomponentcode\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"300px\"},{\"idsName\":\"IDS_EXISTINGLINKTABLE\",\"dataField\":\"nsqlquerycode\",\"width\":\"200px\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"200px\"},{\"idsName\":\"IDS_DAYS\",\"dataField\":\"ndays\",\"width\":\"200px\"}];this.gridColumnList=[{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sfieldname\",\"width\":\"300px\"},{\"idsName\":\"IDS_DISPLAYNAME\",\"dataField\":\"sdisplayname\",\"width\":\"200px\"},{\"idsName\":\"IDS_INPUTTYPE\",\"dataField\":\"ndesigncomponentcode\",\"width\":\"200px\"}];var mandatoryFields=[];// console.log(\"props DV:\", this.props.Login);\nvar fieldList=this.props.Login.masterData.viewDashBoardDesignConfigList||[];fieldList.forEach(function(item){if(item.nmandatory===transactionStatus.YES){//if (item.ndesigncomponentcode !== designComponents.PATH ){\nmandatoryFields.push({\"idsName\":item.sdisplayname,\"dataField\":item.sfieldname,\"mandatoryLabel\":\"IDS_PROVIDE\",\"controlType\":\"textbox\"});}});//console.log(\"masterdata: DV\", this.props.Login.masterData);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster//filterColumnData ={(e)=>this.filterColumnData(e)}\n,{formatMessage:this.props.intl.formatMessage,screenName:this.props.intl.formatMessage({id:\"IDS_DASHBOARDVIEW\"}),masterData:this.props.Login.masterData||[],userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.DashBoardView,getMasterDetail:function getMasterDetail(DashBoardTypes){return _this2.props.getAllSelectionDashBoardView(DashBoardTypes,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedDashBoardTypes,primaryKeyField:\"ndashboardtypecode\",mainField:\"sdashboardtypename\",firstField:\"schartname\"// secondField=\"stransdisplaystatus\"\n// isIDSField=\"Yes\"\n,filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:true//allowDuplicateHits={true}\n// openModal={() => this.props.fetchRecordDashBoardType(AddDashBoardtype, this.props.Login.masterData.selectedDashBoardTypes)}\n// openModal={() => this.props.getAddDashboardDesign(this.props.Login.masterData.selectedDashBoardTypes,this.props.Login.userInfo)}\n})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},this.props.Login.masterData.DashBoardView&&this.props.Login.masterData.DashBoardView.length>0&&this.props.Login.masterData.selectedDashBoardTypes?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.PIECHART||this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.DONUT?/*#__PURE__*/React.createElement(PieChart,{series:this.props.Login.masterData.pieChart,dashBoardType:this.props.Login.masterData,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.props.checkParametersAvailable,chartTypeName:this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.PIECHART?\"pie\":\"donut\",valueField:\"valueField\",categoryField:\"categoryField\",style:{height:550},selectedRecord:this.state.selectedRecord}):this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode!==chartType.BUBBLE?/*#__PURE__*/React.createElement(AreaChart,{xSeries:this.props.Login.masterData.xSeries,ySeries:this.props.Login.masterData.ySeries,dashBoardType:this.props.Login.masterData,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.props.checkParametersAvailable,style:{height:550},selectedRecord:this.state.selectedRecord//chartTypeName={\"column\"}\n,chartTypeName:this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.AREACHART?\"area\":this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.COLUMNCHART?\"column\":this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode===chartType.BARCHART?\"bar\":\"area\"}):/*#__PURE__*/React.createElement(BubbleChart,{bubbleSeries:this.props.Login.masterData.bubbleSeries,chartData:this.props.Login.masterData.chartData,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,checkParametersAvailable:this.props.checkParametersAvailable,style:{height:550}}))):\"\")))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:\"filter\"//this.props.Login.operation}\n,inputParam:this.props.Login.inputParam,screenName:\"IDS_PARAMETER\"//this.props.Login.screenName}\n,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:/*#__PURE__*/ // this.props.Login.loadEsign ?\n// <Esign operation={this.props.Login.operation}\n//     onInputOnChange={this.onInputOnChange}\n//     inputParam={this.props.Login.inputParam}\n//     selectedRecord={this.state.selectedRecord || {}}\n// />\n// :\nReact.createElement(DashBoardDynamicControls,{selectedRecord:this.props.Login.selectedRecord||{},onInputOnChange:this.onInputOnChange,onNumericInputOnChange:this.onNumericInputOnChange,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,viewDashBoardDesignConfigList:this.props.Login.masterData.viewDashBoardDesignConfigList||[],operation:\"filter\"//this.props.Login.operation}\n,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData});}else{this.setState({data:this.props.Login.masterData,selectedRecord:this.props.Login.selectedRecord,isOpen:false});}// let respObj = {};\n// if (this.props.Login.masterData.viewDashBoardDesignConfigList !== undefined && this.props.Login.masterData.viewDashBoardDesignConfigList.length > 0) {\n//     sortByField(this.props.Login.masterData.viewDashBoardDesignConfigList, \"ascending\", \"ndashboarddesigncode\");\n//     respObj[\"openModal\"] = true;\n//     respObj[\"viewDashBoardDesignConfigList\"] = this.props.Login.masterData.viewDashBoardDesignConfigList;\n//     let selectedRecord = {};           \n//     respObj[\"viewDashBoardDesignConfigList\"].map(item => {\n//       if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n//         selectedRecord[item.sfieldname] = new Date(item.dataList[0])\n//       }\n//       else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n//         const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\n//           item.sdisplaymember, undefined, undefined, true);\n//         const comboList = comboMap.get(\"OptionList\");\n//         item.dataList = comboList;\n//       }\n//       return null;\n//     });   \n//     respObj[\"selectedRecord\"] = selectedRecord;\n// }\n// else{\n//     respObj[\"openModal\"] = false;\n// }   \n// this.setState({ ...respObj });\n}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(state.selectedRecord===undefined){return{openModal:false};}return null;}}]);return DashBoardView;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,fetchRecordDashBoardType:fetchRecordDashBoardType,selectCheckBoxDashBoardTypes:selectCheckBoxDashBoardTypes,getSqlQueryDataService:getSqlQueryDataService,getSqlQueryColumns:getSqlQueryColumns,getAddDashboardDesign:getAddDashboardDesign,selectCheckBoxDashBoardView:selectCheckBoxDashBoardView,checkParametersAvailable:checkParametersAvailable,getReportViewChildDataListForDashBoard:getReportViewChildDataListForDashBoard,getAllSelectionDashBoardView:getAllSelectionDashBoardView,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData})(injectIntl(DashBoardView));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dashboardtypes/DashBoardView.jsx"],"names":["React","Row","Col","Card","toast","connect","injectIntl","callService","crudMaster","fetchRecordDashBoardType","getSqlQueryDataService","getSqlQueryColumns","getAddDashboardDesign","selectCheckBoxDashBoardTypes","selectCheckBoxDashBoardView","checkParametersAvailable","getReportViewChildDataListForDashBoard","getAllSelectionDashBoardView","updateStore","validateEsignCredential","filterColumnData","ListMaster","DEFAULT_RETURN","ProductList","getControlMap","formatInputDate","rearrangeDateFormat","SlideOutModal","transactionStatus","designComponents","AreaChart","PieChart","DashBoardDynamicControls","chartType","BubbleChart","mapStateToProps","state","Login","DashBoardView","props","openModal","input","updateInfo","typeName","data","selectedRecord","operation","screenName","ncontrolCode","loading","closeModal","masterData","viewDashBoardDesignConfigList","map","item","ndesigncomponentcode","DATEPICKER","sfieldname","userInfo","dataList","COMBOBOX","comboList","getList","filter","lst","value","parseInt","sdefaultvalue","length","label","undefined","selectedId","reloadData","searchRef","current","inputParam","inputData","classUrl","methodUrl","displayName","onNumericInputOnChange","name","selectedRecord2","dashboarddesignconfig","inputfielddata","inputFieldData","concat","sdesigncomponentname","parentcode","toString","parentid","ndashboarddesigncode","userinfo","ndashboardtypecode","selectedDashBoardTypes","onInputOnChange","event","target","type","checked","YES","NO","onComboChange","comboData","fieldName","handleDateChange","dateName","dateValue","onSaveClick","dashboardtypes","validateEsign","sreason","password","screenData","formRef","createRef","extractedColumnList","gridColumnList","dataState","skip","take","masterStatus","error","dataResult","isOpen","controlMap","Map","userRoleControlRights","sqlQueryCode","chartTypeCode","chartSeries","xField","yField","chartTitle","displayColorPicker","color","r","g","b","a","addId","has","get","ncontrolcode","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","searchFieldList","mandatoryFields","fieldList","forEach","nmandatory","push","sdisplayname","intl","formatMessage","id","searchedData","DashBoardTypes","ncharttypecode","PIECHART","DONUT","pieChart","height","BUBBLE","xSeries","ySeries","AREACHART","COLUMNCHART","BARCHART","bubbleSeries","chartData","loadEsign","previousProps","setState","nformcode","Object","values","warn","Component"],"mappings":"u7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,wBAD7B,CACuDC,sBADvD,CAEIC,kBAFJ,CAEwBC,qBAFxB,CAE+CC,4BAF/C,CAGIC,2BAHJ,CAGiCC,wBAHjC,CAG2DC,sCAH3D,CAIIC,4BAJJ,CAKIC,WALJ,CAKiBC,uBALjB,CAK0CC,gBAL1C,KAMO,eANP,CAOA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,WAAT,KAA4B,oCAA5B,CACA,OAASC,aAAT,CAAwBC,eAAxB,CAAyCC,mBAAzC,KAAoE,+BAApE,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,OAASC,iBAAT,CAA4BC,gBAA5B,KAAoD,8BAApD,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4CAArC,CACA,OAASC,SAAT,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAKMC,CAAAA,a,0HACF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EADe,MAyBnBC,SAzBmB,CAyBP,SAACC,KAAD,CAAW,CACnB,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErB,cADK,CAEfsB,IAAI,CAAE,CACFC,cAAc,CAAE,EADd,CACkBC,SAAS,CAAEL,KAAK,CAACK,SADnC,CAEFC,UAAU,CAAE,oBAFV,CAGFP,SAAS,CAAE,IAHT,CAGeQ,YAAY,CAAEP,KAAK,CAACO,YAHnC,CAIFC,OAAO,CAAE,KAJP,CAFS,CAAnB,CASA,MAAKV,KAAL,CAAWrB,WAAX,CAAuBwB,UAAvB,EACH,CApCkB,OAsCnBQ,UAtCmB,CAsCN,UAAM,CACf,GAAIV,CAAAA,SAAS,CAAG,MAAKD,KAAL,CAAWF,KAAX,CAAiBG,SAAjC,CACA,GAAIK,CAAAA,cAAc,CAAG,MAAKN,KAAL,CAAWF,KAAX,CAAiBQ,cAAtC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIL,SAAS,CAAG,KAAZ,CACA;AACJ;AAEA,MAAKD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0DC,GAA1D,CAA8D,SAAAC,IAAI,CAAI,CAElE,GAAIA,IAAI,CAACC,oBAAL,GAA8B1B,gBAAgB,CAAC2B,UAAnD,CAA+D,CAC3DX,cAAc,CAACS,IAAI,CAACG,UAAN,CAAd,CAAkC/B,mBAAmB,CAAC,MAAKa,KAAL,CAAWF,KAAX,CAAiBqB,QAAlB,CAA2BJ,IAAI,CAACK,QAAL,CAAc,CAAd,CAA3B,CAArD,CACH,CAFD,IAGK,IAAIL,IAAI,CAACC,oBAAL,GAA8B1B,gBAAgB,CAAC+B,QAAnD,CAA6D,CAC9D,GAAMC,CAAAA,SAAS,CAAIP,IAAI,CAACK,QAAxB,CAEA,GAAIG,CAAAA,OAAO,CAAGD,SAAS,CAACE,MAAV,CAAiB,SAAAC,GAAG,CAAI,CAClC,MAAOA,CAAAA,GAAG,CAACC,KAAJ,GAAcC,QAAQ,CAACZ,IAAI,CAACa,aAAN,CAA7B,CACH,CAFa,CAAd,CAIA,GAAIL,OAAO,CAACM,MAAR,CAAiB,CAArB,CAAwB,CACpBvB,cAAc,CAACS,IAAI,CAACG,UAAN,CAAd,CAAkC,CAAEY,KAAK,CAAEP,OAAO,CAAC,CAAD,CAAP,CAAWO,KAApB,CAA2BJ,KAAK,CAAEH,OAAO,CAAC,CAAD,CAAP,CAAWG,KAA7C,CAAlC,CAEH,CAHD,IAGO,CACHpB,cAAc,CAACS,IAAI,CAACG,UAAN,CAAd,CAAkCa,SAAlC,CACH,CACJ,CAbI,IAcA,CACDzB,cAAc,CAACS,IAAI,CAACG,UAAN,CAAd,CAAkCH,IAAI,CAACa,aAAvC,CACH,CAED,MAAO,KAAP,CACH,CAxBD,EA2BA,GAAMzB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErB,cADK,CAEfsB,IAAI,CAAE,CAAEJ,SAAS,CAATA,SAAF,CAAa;AACfK,cAAc,CAAdA,cADE,CACc0B,UAAU,CAAE,IAD1B,CAFS,CAAnB,CAKA,MAAKhC,KAAL,CAAWrB,WAAX,CAAuBwB,UAAvB,EACH,CAzFkB,OAqRnB8B,UArRmB,CAqRN,UAAM,CACf,MAAKC,SAAL,CAAeC,OAAf,CAAuBT,KAAvB,CAA+B,EAA/B,CACA,GAAMU,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,CAAE,WAAY,MAAKrC,KAAL,CAAWF,KAAX,CAAiBqB,QAA/B,CADI,CAEfmB,QAAQ,CAAE,eAFK,CAGfC,SAAS,CAAE,eAHI,CAIfC,WAAW,CAAE,mBAJE,CAKfrB,QAAQ,CAAE,MAAKnB,KAAL,CAAWF,KAAX,CAAiBqB,QALZ,CAAnB,CAQA,MAAKnB,KAAL,CAAWhC,WAAX,CAAuBoE,UAAvB,EACH,CAhSkB,OAkSnBK,sBAlSmB,CAkSM,SAACf,KAAD,CAAQgB,IAAR,CAAc3B,IAAd,CAAuB,oBAC5C,GAAMT,CAAAA,cAAc,CAAG,MAAKT,KAAL,CAAWS,cAAX,EAA6B,EAApD,CACA,GAAMqC,CAAAA,eAAe,CAAG,MAAK9C,KAAL,CAAW8C,eAAX,EAA8B,EAAtD,CACArC,cAAc,CAACoC,IAAD,CAAd,CAAuBhB,KAAvB,CACAiB,eAAe,CAACD,IAAD,CAAf,CAAwBhB,KAAxB,CACA,GAAMW,CAAAA,SAAS,CAAG,CACdO,qBAAqB,CAAE7B,IADT,CAEd8B,cAAc,gCACP,MAAK7C,KAAL,CAAWF,KAAX,CAAiBgD,cADV,uDAETJ,IAFS,CAEFhB,KAFE,iCAGTgB,IAAI,CAACK,MAAL,CAAY,gBAAZ,CAHS,CAGuBhC,IAAI,CAACC,oBAH5B,iCAIT0B,IAAI,CAACK,MAAL,CAAY,gBAAZ,CAJS,CAIuBhC,IAAI,CAACiC,oBAJ5B,kBAFA,CASdC,UAAU,CAAEvB,KAAK,CAACwB,QAAN,EATE,CAUdC,QAAQ,CAAEpC,IAAI,CAACqC,oBAVD,CAWdC,QAAQ,CAAE,MAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAXb,CAYdmC,kBAAkB,CAAE,MAAKtD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDD,kBAZzD,CAAlB,CAeA,GAAMlB,CAAAA,UAAU,CAAG,CACfvB,6BAA6B,CAAE,MAAKb,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAD5C,CAEfP,cAAc,CAAdA,cAFe,CAGf+B,SAAS,CAATA,SAHe,CAAnB,CAMA,MAAKrC,KAAL,CAAWvB,sCAAX,CAAkD2D,UAAlD,EACH,CA7TkB,OA+TnBoB,eA/TmB,CA+TD,SAACC,KAAD,CAAQ1C,IAAR,CAAiB,oBAC/B,GAAMT,CAAAA,cAAc,CAAG,MAAKT,KAAL,CAAWS,cAAX,EAA6B,EAApD,CAEA,GAAImD,KAAK,CAACC,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCrD,cAAc,CAACmD,KAAK,CAACC,MAAN,CAAahB,IAAd,CAAd,CAAoCe,KAAK,CAACC,MAAN,CAAaE,OAAb,GAAyB,IAAzB,CAAgCvE,iBAAiB,CAACwE,GAAlD,CAAwDxE,iBAAiB,CAACyE,EAA9G,CACH,CAFD,IAGK,CACDxD,cAAc,CAACmD,KAAK,CAACC,MAAN,CAAahB,IAAd,CAAd,CAAoCe,KAAK,CAACC,MAAN,CAAahC,KAAjD,CACH,CAED,GAAMW,CAAAA,SAAS,CAAG,CACdO,qBAAqB,CAAE7B,IADT,CAEd8B,cAAc,gCACP,MAAK7C,KAAL,CAAWF,KAAX,CAAiBgD,cADV,uDAETW,KAAK,CAACC,MAAN,CAAahB,IAFJ,CAEWpC,cAAc,CAACmD,KAAK,CAACC,MAAN,CAAahB,IAAd,CAFzB,iCAGTe,KAAK,CAACC,MAAN,CAAahB,IAAb,CAAkBK,MAAlB,CAAyB,gBAAzB,CAHS,CAGoChC,IAAI,CAACC,oBAHzC,iCAITyC,KAAK,CAACC,MAAN,CAAahB,IAAb,CAAkBK,MAAlB,CAAyB,gBAAzB,CAJS,CAIoChC,IAAI,CAACiC,oBAJzC,kBAFA,CASdC,UAAU,CAAE3C,cAAc,CAACmD,KAAK,CAACC,MAAN,CAAahB,IAAd,CAAd,CAAkCQ,QAAlC,EATE,CAUdC,QAAQ,CAAEpC,IAAI,CAACqC,oBAVD,CAWdC,QAAQ,CAAE,MAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAXb,CAYdmC,kBAAkB,CAAE,MAAKtD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDD,kBAZzD,CAAlB,CAeA,GAAMlB,CAAAA,UAAU,CAAG,CACfvB,6BAA6B,CAAE,MAAKb,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAD5C,CAEfP,cAAc,CAAdA,cAFe,CAGf+B,SAAS,CAATA,SAHe,CAAnB,CAMA,MAAKrC,KAAL,CAAWvB,sCAAX,CAAkD2D,UAAlD,EACH,CA/VkB,OAiWnB2B,aAjWmB,CAiWH,SAACC,SAAD,CAAYC,SAAZ,CAAuBlD,IAAvB,CAAgC,oBAC5C;AACA,GAAMT,CAAAA,cAAc,CAAG,MAAKT,KAAL,CAAWS,cAAX,EAA6B,EAApD,CACA,GAAMqC,CAAAA,eAAe,CAAG,MAAK9C,KAAL,CAAW8C,eAAX,EAA8B,EAAtD,CACArC,cAAc,CAAC2D,SAAD,CAAd,CAA4BD,SAA5B,CACArB,eAAe,CAACsB,SAAD,CAAf,CAA6BD,SAAS,GAAK,IAAd,CAAqB,CAAC,CAAtB,CAA0BA,SAAS,CAACtC,KAAjE,CACA,GAAMW,CAAAA,SAAS,CAAG,CACdO,qBAAqB,CAAE7B,IADT,CAEd8B,cAAc,gCACP,MAAK7C,KAAL,CAAWF,KAAX,CAAiBgD,cADV,uDAETmB,SAFS,CAEGD,SAAS,GAAK,IAAd,CAAqB,CAAC,CAAtB,CAA0BA,SAAS,CAACtC,KAFvC,iCAGTuC,SAAS,CAAClB,MAAV,CAAiB,gBAAjB,CAHS,CAG4BhC,IAAI,CAACC,oBAHjC,iCAITiD,SAAS,CAAClB,MAAV,CAAiB,gBAAjB,CAJS,CAI4BhC,IAAI,CAACiC,oBAJjC,kBAFA,CASdC,UAAU,CAAEe,SAAS,GAAK,IAAd,CAAqB,IAArB,CAA4BA,SAAS,CAACtC,KAAV,CAAgBwB,QAAhB,EAT1B,CAUdC,QAAQ,CAAEpC,IAAI,CAACqC,oBAVD,CAWdC,QAAQ,CAAE,MAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAXb,CAYdmC,kBAAkB,CAAE,MAAKtD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDD,kBAZzD,CAAlB,CAeA,GAAMlB,CAAAA,UAAU,CAAG,CACfvB,6BAA6B,CAAE,MAAKb,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAD5C,CAEfP,cAAc,CAAdA,cAFe,CAGf+B,SAAS,CAATA,SAHe,CAAnB,CAMA,MAAKrC,KAAL,CAAWvB,sCAAX,CAAkD2D,UAAlD,EACH,CA7XkB,OA+XnB8B,gBA/XmB,CA+XA,SAACC,QAAD,CAAWC,SAAX,CAAsBrD,IAAtB,CAA+B,oBAC9C,GAAQT,CAAAA,cAAR,CAA2B,MAAKT,KAAhC,CAAQS,cAAR,CACA,GAAMqC,CAAAA,eAAe,CAAG,MAAK9C,KAAL,CAAW8C,eAAX,EAA8B,EAAtD,CAEA,GAAIyB,SAAS,GAAK,IAAlB,CAAuB,CACnBA,SAAS,CAAGjF,mBAAmB,CAAC,MAAKa,KAAL,CAAWF,KAAX,CAAiBqB,QAAlB,CAA2BJ,IAAI,CAACK,QAAL,CAAc,CAAd,CAA3B,CAA/B,CACH,CAEDd,cAAc,CAAC6D,QAAD,CAAd,CAA2BC,SAA3B,CACAzB,eAAe,CAACwB,QAAD,CAAf,CAA4BC,SAA5B,CAEA,GAAM/B,CAAAA,SAAS,CAAG,CACdO,qBAAqB,CAAE7B,IADT,CAEd8B,cAAc,gCACP,MAAK7C,KAAL,CAAWF,KAAX,CAAiBgD,cADV,uDAETqB,QAFS,CAEEjF,eAAe,CAACkF,SAAD,CAAY,IAAZ,CAFjB,iCAGTD,QAAQ,CAACpB,MAAT,CAAgB,gBAAhB,CAHS,CAG2BhC,IAAI,CAACC,oBAHhC,iCAITmD,QAAQ,CAACpB,MAAT,CAAgB,gBAAhB,CAJS,CAI2BhC,IAAI,CAACiC,oBAJhC,kBAFA,CASdC,UAAU,CAAE/D,eAAe,CAACkF,SAAD,CAAY,IAAZ,CATb,CAUdjB,QAAQ,CAAEpC,IAAI,CAACqC,oBAVD,CAWdC,QAAQ,CAAE,MAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAXb,CAYdmC,kBAAkB,CAAE,MAAKtD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDD,kBAZzD,CAAlB,CAeA,GAAMlB,CAAAA,UAAU,CAAG,CACfvB,6BAA6B,CAAE,MAAKb,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAD5C,CAEfP,cAAc,CAAdA,cAFe,CAGf+B,SAAS,CAATA,SAHe,CAAnB,CAMA,MAAKrC,KAAL,CAAWvB,sCAAX,CAAkD2D,UAAlD,EACH,CAhakB,OAkanBiC,WAlamB,CAkaL,UAAM,CAChB,GAAMvB,CAAAA,cAAc,CAAG,MAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,cAAxC,CAEA,GAAMV,CAAAA,UAAU,CAAG,CACfkC,cAAc,CAAE,MAAKtE,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAD7B,CAEfV,cAAc,CAAEC,cAFD,CAGfO,QAAQ,CAAE,MAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAHZ,CAAnB,CAMA,MAAKnB,KAAL,CAAWzB,2BAAX,CAAuC,eAAvC,CAAwD,MAAKsB,KAAL,CAAWS,cAAnE,CAAmF,MAAKN,KAAL,CAAWF,KAAX,CAAiBc,UAApG,CAAgHwB,UAAhH,EAEF,CA7aiB,OAwenBmC,aAxemB,CAweH,UAAM,CAClB,GAAMnC,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,CACP,0CACO,MAAKrC,KAAL,CAAWF,KAAX,CAAiBqB,QADxB,MAEIqD,OAAO,CAAE,MAAK3E,KAAL,CAAWS,cAAX,CAA0B,eAA1B,CAFb,EADO,CAKPmE,QAAQ,CAAE,MAAK5E,KAAL,CAAWS,cAAX,CAA0B,eAA1B,CALH,CADI,CAQfoE,UAAU,CAAE,MAAK1E,KAAL,CAAWF,KAAX,CAAiB4E,UARd,CAAnB,CAUA,MAAK1E,KAAL,CAAWpB,uBAAX,CAAmCwD,UAAnC,CAA+C,WAA/C,EACH,CApfkB,CAGf,MAAKuC,OAAL,CAAelH,KAAK,CAACmH,SAAN,EAAf,CACA,MAAKC,mBAAL,CAA2B,EAA3B,CACA,MAAKC,cAAL,CAAsB,EAAtB,CAGA,GAAMC,CAAAA,SAAS,CAAG,CACdC,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,EAFQ,CAAlB,CAIA,MAAKpF,KAAL,CAAa,CACTQ,IAAI,CAAE,EADG,CACC6E,YAAY,CAAE,EADf,CACmBC,KAAK,CAAE,EAD1B,CAC8B7E,cAAc,CAAE,EAD9C,CACkDqC,eAAe,CAAE,EADnE,CAETyC,UAAU,CAAE,EAFH,CAGTL,SAAS,CAAEA,SAHF,CAITM,MAAM,CAAE,KAJC,CAIMC,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAJlB,CAI6BC,qBAAqB,CAAE,EAJpD,CAKTC,YAAY,CAAE,CALL,CAKQC,aAAa,CAAE,CALvB,CAK0BC,WAAW,CAAE,CAAC,CAAEC,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,EAAtB,CAA0BC,UAAU,CAAE,EAAtC,CAAD,CALvC,CAOTC,kBAAkB,CAAE,KAPX,CAOkBC,KAAK,CAAE,CAAEC,CAAC,CAAE,KAAL,CAAYC,CAAC,CAAE,KAAf,CAAsBC,CAAC,CAAE,IAAzB,CAA+BC,CAAC,CAAE,GAAlC,CAPzB,CAAb,CAUA,MAAKlE,SAAL,CAAiBzE,KAAK,CAACmH,SAAN,EAAjB,CAtBe,aAuBlB,C,gDAqFD,iBAAS,iBAEL,GAAMyB,CAAAA,KAAK,CAAG,KAAKrG,KAAL,CAAWF,KAAX,CAAiBsC,UAAjB,EAA+B,KAAKvC,KAAL,CAAWyF,UAAX,CAAsBgB,GAAtB,CAA0B,MAAMvD,MAAN,CAAa,KAAK/C,KAAL,CAAWF,KAAX,CAAiBsC,UAAjB,CAA4BG,SAAzC,CAA1B,CAA/B,EACP,KAAK1C,KAAL,CAAWyF,UAAX,CAAsBiB,GAAtB,CAA0B,MAAMxD,MAAN,CAAa,KAAK/C,KAAL,CAAWF,KAAX,CAAiBsC,UAAjB,CAA4BG,SAAzC,CAA1B,EAA+EiE,YADtF,CAGA,GAAMC,CAAAA,WAAW,CAAG,CAChBC,aAAa,CAAE,eADC,CACgBC,cAAc,CAAE,wBADhC,CAC0DC,eAAe,CAAE,oBAD3E,CAEhBC,QAAQ,CAAE,4CAFM,CAEwCC,gBAAgB,CAAE,CAAEzD,QAAQ,CAAE,KAAKrD,KAAL,CAAWF,KAAX,CAAiBqB,QAA7B,CAF1D,CAGhBP,UAAU,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,UAHb,CAIhBmG,eAAe,CAAE,CAAC,oBAAD,CAAuB,YAAvB,CAAqC,eAArC,CAJD,CAApB,CAMF;AAEE,KAAKlC,mBAAL,CAA2B,CACvB,CAAE,UAAW,mBAAb,CAAkC,YAAa,oBAA/C,CAAqE,QAAS,OAA9E,CADuB,CAEvB,CAAE,UAAW,eAAb,CAA8B,YAAa,sBAA3C,CAAmE,QAAS,OAA5E,CAFuB,CAGvB,CAAE,UAAW,gBAAb,CAA+B,YAAa,YAA5C,CAA0D,QAAS,OAAnE,CAHuB,CAIvB,CAAE,UAAW,uBAAb,CAAsC,YAAa,eAAnD,CAAoE,QAAS,OAA7E,CAJuB,CAKvB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CALuB,CAMvB,CAAE,UAAW,UAAb,CAAyB,YAAa,OAAtC,CAA+C,QAAS,OAAxD,CANuB,CAA3B,CAQA,KAAKC,cAAL,CAAsB,CAClB,CAAE,UAAW,gBAAb,CAA+B,YAAa,YAA5C,CAA0D,QAAS,OAAnE,CADkB,CAElB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CAFkB,CAGlB,CAAE,UAAW,eAAb,CAA8B,YAAa,sBAA3C,CAAmE,QAAS,OAA5E,CAHkB,CAAtB,CAMA,GAAMkC,CAAAA,eAAe,CAAG,EAAxB,CAED;AACC,GAAMC,CAAAA,SAAS,CAAG,KAAKjH,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,EAA6D,EAA/E,CACAoG,SAAS,CAACC,OAAV,CAAkB,SAAAnG,IAAI,CAAI,CACtB,GAAIA,IAAI,CAACoG,UAAL,GAAoB9H,iBAAiB,CAACwE,GAA1C,CAA8C,CAC9C;AACImD,eAAe,CAACI,IAAhB,CAAqB,CAAE,UAAWrG,IAAI,CAACsG,YAAlB,CAAgC,YAAatG,IAAI,CAACG,UAAlD,CAAgE,iBAAiB,aAAjF,CAAgG,cAAe,SAA/G,CAArB,EACH,CACJ,CALD,EAOA;AACA,mBACI,qDACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,UAAW;AAAZ,EACI,aAAa,CAAE,KAAKlB,KAAL,CAAWsH,IAAX,CAAgBC,aADnC,CAEI,UAAU,CAAE,KAAKvH,KAAL,CAAWsH,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CAFhB,CAGI,UAAU,CAAE,KAAKxH,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,EAA+B,EAH/C,CAII,QAAQ,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBqB,QAJ/B,CAKI,UAAU,CAAE,KAAKnB,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B6G,YAA5B,EAA4C,KAAKzH,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4Bb,aALxF,CAMI,eAAe,CAAE,yBAAC2H,cAAD,QAAoB,CAAA,MAAI,CAAC1H,KAAL,CAAWtB,4BAAX,CAAwCgJ,cAAxC,CAAwD,MAAI,CAAC1H,KAAL,CAAWF,KAAX,CAAiBqB,QAAzE,CAAmF,MAAI,CAACnB,KAAL,CAAWF,KAAX,CAAiBc,UAApG,CAApB,EANrB,CAOI,cAAc,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAPhD,CAQI,eAAe,CAAC,oBARpB,CASI,SAAS,CAAC,oBATd,CAUI,UAAU,CAAC,YACX;AACA;AAZJ,CAaI,gBAAgB,CAAE,KAAKvD,KAAL,CAAWnB,gBAbjC,CAcI,WAAW,CAAE4H,WAdjB,CAeI,qBAAqB,CAAE,KAAK5G,KAAL,CAAW2F,qBAftC,CAgBI,KAAK,CAAEa,KAhBX,CAiBI,SAAS,CAAE,KAAKnE,SAjBpB,CAkBI,UAAU,CAAE,KAAKD,UAlBrB,CAmBI,UAAU,CAAE,IAChB;AACA;AACA;AAtBA,EADJ,CADJ,cA2BI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eAGI,oBAAC,WAAD,EAAa,SAAS,CAAC,oBAAvB,EACK,KAAKjC,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4Bb,aAA5B,EAA6C,KAAKC,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4Bb,aAA5B,CAA0C8B,MAA1C,CAAmD,CAAhG,EAAqG,KAAK7B,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAAjI,cACG,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,eACI,oBAAC,IAAD,CAAM,IAAN,MACM,KAAKvD,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAACkI,QAAhF,EACE,KAAK5H,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAACmI,KADnF,cAEG,oBAAC,QAAD,EACI,MAAM,CAAE,KAAK7H,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BkH,QADxC,CAEI,aAAa,CAAE,KAAK9H,KAAL,CAAWF,KAAX,CAAiBc,UAFpC,CAGI,UAAU,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,UAHjC,CAII,QAAQ,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBqB,QAJ/B,CAKI,wBAAwB,CAAE,KAAKnB,KAAL,CAAWxB,wBALzC,CAMI,aAAa,CAAE,KAAKwB,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAACkI,QAAhF,CAA2F,KAA3F,CAAmG,OANtH,CAOI,UAAU,CAAE,YAPhB,CAQI,aAAa,CAAE,eARnB,CASI,KAAK,CAAE,CAAEG,MAAM,CAAE,GAAV,CATX,CAUI,cAAc,CAAE,KAAKlI,KAAL,CAAWS,cAV/B,EAFH,CAgBG,KAAKN,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAACsI,MAAhF,cACI,oBAAE,SAAF,EACI,OAAO,CAAE,KAAKhI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BqH,OADzC,CAEI,OAAO,CAAE,KAAKjI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BsH,OAFzC,CAGI,aAAa,CAAE,KAAKlI,KAAL,CAAWF,KAAX,CAAiBc,UAHpC,CAII,UAAU,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,UAJjC,CAKI,QAAQ,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBqB,QAL/B,CAMI,wBAAwB,CAAE,KAAKnB,KAAL,CAAWxB,wBANzC,CAOI,KAAK,CAAE,CAAEuJ,MAAM,CAAE,GAAV,CAPX,CAQI,cAAc,CAAE,KAAKlI,KAAL,CAAWS,cAC3B;AATJ,CAUI,aAAa,CAAE,KAAKN,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAACyI,SAAhF,CAA4F,MAA5F,CACX,KAAKnI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAAC0I,WAAhF,CAA8F,QAA9F,CACI,KAAKpI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2C,sBAA5B,CAAmDoE,cAAnD,GAAsEjI,SAAS,CAAC2I,QAAhF,CAA2F,KAA3F,CAAmG,MAZ/G,EADJ,cAgBI,oBAAC,WAAD,EACI,YAAY,CAAE,KAAKrI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B0H,YAD9C,CAEI,SAAS,CAAE,KAAKtI,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4B2H,SAF3C,CAGI,UAAU,CAAE,KAAKvI,KAAL,CAAWF,KAAX,CAAiBc,UAHjC,CAII,QAAQ,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBqB,QAJ/B,CAKI,wBAAwB,CAAE,KAAKnB,KAAL,CAAWxB,wBALzC,CAMI,KAAK,CAAE,CAAEuJ,MAAM,CAAE,GAAV,CANX,EAjCZ,CADJ,CADH,CAiDa,EAlDlB,CAHJ,CA3BJ,CADJ,CADJ,CAwFK,KAAK/H,KAAL,CAAWF,KAAX,CAAiBG,SAAjB,eACG,oBAAC,aAAD,EAAe,IAAI,CAAE,KAAKD,KAAL,CAAWF,KAAX,CAAiBG,SAAtC,CACI,UAAU,CAAE,KAAKU,UADrB,CAEI,SAAS,CAAE,QAAS;AAFxB,CAGI,UAAU,CAAE,KAAKX,KAAL,CAAWF,KAAX,CAAiBsC,UAHjC,CAII,UAAU,CAAE,eAAgB;AAJhC,CAKI,WAAW,CAAE,KAAKiC,WALtB,CAMI,KAAK,CAAE,KAAKrE,KAAL,CAAWF,KAAX,CAAiB0I,SAN5B,CAOI,aAAa,CAAE,KAAKjE,aAPxB,CAQI,YAAY,CAAE,KAAKvE,KAAL,CAAWF,KAAX,CAAiBoF,YARnC,CASI,WAAW,CAAE,KAAKlF,KAAL,CAAWrB,WAT5B,CAUI,cAAc,CAAE,KAAKkB,KAAL,CAAWS,cAAX,EAA6B,EAVjD,CAWI,eAAe,CAAE0G,eAXrB,CAYI,YAAY,eACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAC,wBAAD,EACI,cAAc,CAAE,KAAKhH,KAAL,CAAWF,KAAX,CAAiBQ,cAAjB,EAAmC,EADvD,CAEI,eAAe,CAAE,KAAKkD,eAF1B,CAGI,sBAAsB,CAAE,KAAKf,sBAHjC,CAII,aAAa,CAAE,KAAKsB,aAJxB,CAKI,gBAAgB,CAAE,KAAKG,gBAL3B,CAMI,6BAA6B,CAAE,KAAKlE,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,EAA6D,EANhG,CAOI,SAAS,CAAE,QAAS;AAPxB,CAQI,UAAU,CAAE,KAAKb,KAAL,CAAWF,KAAX,CAAiBsC,UARjC,CASI,QAAQ,CAAE,KAAKpC,KAAL,CAAWF,KAAX,CAAiBqB,QAT/B,EApBR,EAzFR,CADJ,CAgIH,C,kCA4JD,4BAAmBsH,aAAnB,CAAkC,CAC9B,GAAI,KAAKzI,KAAL,CAAWF,KAAX,CAAiBQ,cAAjB,GAAoCmI,aAAa,CAAC3I,KAAd,CAAoBQ,cAA5D,CAA4E,CACxE,KAAKoI,QAAL,CAAc,CAAEpI,cAAc,CAAE,KAAKN,KAAL,CAAWF,KAAX,CAAiBQ,cAAnC,CAAd,EACH,CACD,GAAI,KAAKN,KAAL,CAAWF,KAAX,CAAiBc,UAAjB,GAAgC6H,aAAa,CAAC3I,KAAd,CAAoBc,UAAxD,CAAoE,CAEhE,GAAI,KAAKZ,KAAL,CAAWF,KAAX,CAAiBqB,QAAjB,CAA0BwH,SAA1B,GAAwCF,aAAa,CAAC3I,KAAd,CAAoBqB,QAApB,CAA6BwH,SAAzE,CAAoF,CAChF,GAAMnD,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAKxF,KAAL,CAAWF,KAAX,CAAiB0F,qBAArB,CAA4C,CACxC,KAAKxF,KAAL,CAAWF,KAAX,CAAiB0F,qBAAjB,CAAuC,KAAKxF,KAAL,CAAWF,KAAX,CAAiBqB,QAAjB,CAA0BwH,SAAjE,GAA+EC,MAAM,CAACC,MAAP,CAAc,KAAK7I,KAAL,CAAWF,KAAX,CAAiB0F,qBAAjB,CAAuC,KAAKxF,KAAL,CAAWF,KAAX,CAAiBqB,QAAjB,CAA0BwH,SAAjE,CAAd,EAA2F7H,GAA3F,CAA+F,SAAAC,IAAI,QAC9KyE,CAAAA,qBAAqB,CAAC4B,IAAtB,CAA2BrG,IAAI,CAACyF,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMlB,CAAAA,UAAU,CAAGrG,aAAa,CAAC,KAAKe,KAAL,CAAWF,KAAX,CAAiB0F,qBAAlB,CAAyC,KAAKxF,KAAL,CAAWF,KAAX,CAAiBqB,QAAjB,CAA0BwH,SAAnE,CAAhC,CAEA,KAAKD,QAAL,CAAc,CACVlD,qBAAqB,CAArBA,qBADU,CACaF,UAAU,CAAVA,UADb,CACyBjF,IAAI,CAAE,KAAKL,KAAL,CAAWF,KAAX,CAAiBc,UADhD,CAAd,EAGH,CAXD,IAaK,CACD,KAAK8H,QAAL,CAAc,CACVrI,IAAI,CAAE,KAAKL,KAAL,CAAWF,KAAX,CAAiBc,UADb,CACyBN,cAAc,CAAE,KAAKN,KAAL,CAAWF,KAAX,CAAiBQ,cAD1D,CAEV+E,MAAM,CAAE,KAFE,CAAd,EAIH,CACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH,CAEJ,C,0CA3YD,kCAAgCrF,KAAhC,CAAuCH,KAAvC,CAA8C,CAE1C,GAAIG,KAAK,CAACF,KAAN,CAAYoF,YAAZ,GAA6BrF,KAAK,CAACqF,YAAvC,CAAqD,CACjDrH,KAAK,CAACiL,IAAN,CAAW9I,KAAK,CAACF,KAAN,CAAYoF,YAAvB,EACAlF,KAAK,CAACF,KAAN,CAAYoF,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAIlF,KAAK,CAACF,KAAN,CAAYqF,KAAZ,GAAsBtF,KAAK,CAACsF,KAAhC,CAAuC,CACnCtH,KAAK,CAACsH,KAAN,CAAYnF,KAAK,CAACF,KAAN,CAAYqF,KAAxB,EACAnF,KAAK,CAACF,KAAN,CAAYqF,KAAZ,CAAoB,EAApB,CACH,CACD,GAAItF,KAAK,CAACS,cAAN,GAAyByB,SAA7B,CAAwC,CACpC,MAAO,CAAE9B,SAAS,CAAE,KAAb,CAAP,CACH,CACD,MAAO,KAAP,CACH,C,2BA3GuBxC,KAAK,CAACsL,S,EAwflC,cAAejL,CAAAA,OAAO,CAAC8B,eAAD,CAClB,CACI5B,WAAW,CAAXA,WADJ,CACiBC,UAAU,CAAVA,UADjB,CAC6BC,wBAAwB,CAAxBA,wBAD7B,CACuDI,4BAA4B,CAA5BA,4BADvD,CACqFH,sBAAsB,CAAtBA,sBADrF,CAEIC,kBAAkB,CAAlBA,kBAFJ,CAEwBC,qBAAqB,CAArBA,qBAFxB,CAE+CE,2BAA2B,CAA3BA,2BAF/C,CAE4EC,wBAAwB,CAAxBA,wBAF5E,CAGIC,sCAAsC,CAAtCA,sCAHJ,CAG4CC,4BAA4B,CAA5BA,4BAH5C,CAG0EC,WAAW,CAAXA,WAH1E,CAIIC,uBAAuB,CAAvBA,uBAJJ,CAI6BC,gBAAgB,CAAhBA,gBAJ7B,CADkB,CAAP,CAMRd,UAAU,CAACgC,aAAD,CANF,CAAf","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, fetchRecordDashBoardType, getSqlQueryDataService,\r\n    getSqlQueryColumns, getAddDashboardDesign, selectCheckBoxDashBoardTypes,\r\n    selectCheckBoxDashBoardView, checkParametersAvailable, getReportViewChildDataListForDashBoard,\r\n    getAllSelectionDashBoardView,\r\n    updateStore, validateEsignCredential, filterColumnData\r\n} from '../../actions';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList } from '../../pages/product/product.styled';\r\nimport { getControlMap, formatInputDate, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { transactionStatus, designComponents } from '../../components/Enumeration';\r\nimport AreaChart from '../dashboardtypes/charts/AreaChart';\r\nimport PieChart from '../dashboardtypes/charts/PieChart';\r\nimport DashBoardDynamicControls from '../dashboardtypes/DashBoardDynamicControls';\r\nimport { chartType } from '../../components/Enumeration';\r\nimport BubbleChart from '../dashboardtypes/charts/BubbleChart';\r\n//import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass DashBoardView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.gridColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {}, selectedRecord2: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false, controlMap: new Map(), userRoleControlRights: [],\r\n            sqlQueryCode: 0, chartTypeCode: 0, chartSeries: [{ xField: [], yField: [], chartTitle: \"\" }],\r\n\r\n            displayColorPicker: false, color: { r: '241', g: '112', b: '19', a: '1' }\r\n\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n\r\n    openModal = (input) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: input.operation,\r\n                screenName: \"IDS_DASHBOARDTYPES\",\r\n                openModal: true, ncontrolCode: input.ncontrolCode,\r\n                loading: false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        // if (this.props.Login.loadEsign) {\r\n        //     if (this.props.Login.operation === \"delete\") {\r\n        //         loadEsign = false;\r\n        //         openModal = false;\r\n        //         selectedRecord = {};\r\n        //     }\r\n        //     else {\r\n        //         loadEsign = false;\r\n        //     }\r\n        // }\r\n        // else {\r\n            openModal = false;\r\n            //selectedRecord = {};\r\n        //}\r\n\r\n        this.props.Login.masterData.viewDashBoardDesignConfigList.map(item => {\r\n\r\n            if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                selectedRecord[item.sfieldname] = rearrangeDateFormat(this.props.Login.userInfo,item.dataList[0])\r\n            }\r\n            else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n                const comboList =  item.dataList;\r\n            \r\n                let getList = comboList.filter(lst => {\r\n                    return lst.value === parseInt(item.sdefaultvalue);\r\n                });\r\n\r\n                if (getList.length > 0) {\r\n                    selectedRecord[item.sfieldname] = { label: getList[0].label, value: getList[0].value };\r\n\r\n                } else {\r\n                    selectedRecord[item.sfieldname] = undefined;\r\n                }\r\n            }\r\n            else {\r\n                selectedRecord[item.sfieldname] = item.sdefaultvalue;\r\n            }\r\n        \r\n            return null;\r\n        })\r\n\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, //loadEsign, \r\n                selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (state.selectedRecord === undefined) {\r\n            return { openModal: false }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"DashBoardView\", selectedObject: \"selectedDashBoardTypes\", primaryKeyField: \"ndashboardtypecode\",\r\n            fetchUrl: \"dashboardview/getAllSelectionDashBoardView\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sdashboardtypename\", \"schartname\", \"ssqlqueryname\"]\r\n        };\r\n      //  console.log(\"Chart Property : \", this.props.ChartProperty);\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_DASHBOARDNAME\", \"dataField\": \"sdashboardtypename\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"ndesigncomponentcode\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_EXISTINGLINKTABLE\", \"dataField\": \"nsqlquerycode\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DAYS\", \"dataField\": \"ndays\", \"width\": \"200px\" }\r\n        ];\r\n        this.gridColumnList = [\r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sfieldname\", \"width\": \"300px\" },\r\n            { \"idsName\": \"IDS_DISPLAYNAME\", \"dataField\": \"sdisplayname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_INPUTTYPE\", \"dataField\": \"ndesigncomponentcode\", \"width\": \"200px\" },\r\n        ];\r\n     \r\n        const mandatoryFields = [];\r\n\r\n       // console.log(\"props DV:\", this.props.Login);\r\n        const fieldList = this.props.Login.masterData.viewDashBoardDesignConfigList || [];\r\n        fieldList.forEach(item => {\r\n            if (item.nmandatory === transactionStatus.YES){\r\n            //if (item.ndesigncomponentcode !== designComponents.PATH ){\r\n                mandatoryFields.push({ \"idsName\": item.sdisplayname, \"dataField\": item.sfieldname  , \"mandatoryLabel\":\"IDS_PROVIDE\", \"controlType\": \"textbox\"})\r\n            }\r\n        });\r\n\r\n        //console.log(\"masterdata: DV\", this.props.Login.masterData);\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_DASHBOARDVIEW\" })}\r\n                                masterData={this.props.Login.masterData || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.DashBoardView}\r\n                                getMasterDetail={(DashBoardTypes) => this.props.getAllSelectionDashBoardView(DashBoardTypes, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedDashBoardTypes}\r\n                                primaryKeyField=\"ndashboardtypecode\"\r\n                                mainField=\"sdashboardtypename\"\r\n                                firstField=\"schartname\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                // isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                            //allowDuplicateHits={true}\r\n                            // openModal={() => this.props.fetchRecordDashBoardType(AddDashBoardtype, this.props.Login.masterData.selectedDashBoardTypes)}\r\n                            // openModal={() => this.props.getAddDashboardDesign(this.props.Login.masterData.selectedDashBoardTypes,this.props.Login.userInfo)}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {/* <div  className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                            <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {this.props.Login.masterData.DashBoardView && this.props.Login.masterData.DashBoardView.length > 0 && this.props.Login.masterData.selectedDashBoardTypes ?\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Body>\r\n                                            {(this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART ||\r\n                                                this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.DONUT) ?\r\n                                                <PieChart\r\n                                                    series={this.props.Login.masterData.pieChart}\r\n                                                    dashBoardType={this.props.Login.masterData}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    checkParametersAvailable={this.props.checkParametersAvailable}\r\n                                                    chartTypeName={this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART ? \"pie\" : \"donut\"}\r\n                                                    valueField={\"valueField\"}\r\n                                                    categoryField={\"categoryField\"}\r\n                                                    style={{ height: 550 }}\r\n                                                    selectedRecord={this.state.selectedRecord}\r\n                                                />\r\n                                                :\r\n\r\n                                                this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode !== chartType.BUBBLE ?\r\n                                                    < AreaChart\r\n                                                        xSeries={this.props.Login.masterData.xSeries}\r\n                                                        ySeries={this.props.Login.masterData.ySeries}\r\n                                                        dashBoardType={this.props.Login.masterData}\r\n                                                        masterData={this.props.Login.masterData}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        checkParametersAvailable={this.props.checkParametersAvailable}\r\n                                                        style={{ height: 550 }}\r\n                                                        selectedRecord={this.state.selectedRecord}\r\n                                                        //chartTypeName={\"column\"}\r\n                                                        chartTypeName={this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.AREACHART ? \"area\" :\r\n                                                            this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.COLUMNCHART ? \"column\" :\r\n                                                                this.props.Login.masterData.selectedDashBoardTypes.ncharttypecode === chartType.BARCHART ? \"bar\" : \"area\"}\r\n                                                    />\r\n                                                    :\r\n                                                    <BubbleChart\r\n                                                        bubbleSeries={this.props.Login.masterData.bubbleSeries}\r\n                                                        chartData={this.props.Login.masterData.chartData}\r\n                                                        masterData={this.props.Login.masterData}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        checkParametersAvailable={this.props.checkParametersAvailable}\r\n                                                        style={{ height: 550 }}\r\n                                                    />\r\n\r\n\r\n\r\n                                            }\r\n\r\n                                        </Card.Body>\r\n                                    </Card> : \"\"}\r\n                            </ProductList>\r\n                            {/* </div> */}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={\"filter\"}//this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={\"IDS_PARAMETER\"}//this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={\r\n                            // this.props.Login.loadEsign ?\r\n                            // <Esign operation={this.props.Login.operation}\r\n                            //     onInputOnChange={this.onInputOnChange}\r\n                            //     inputParam={this.props.Login.inputParam}\r\n                            //     selectedRecord={this.state.selectedRecord || {}}\r\n                            // />\r\n                            // :\r\n                            <DashBoardDynamicControls\r\n                                selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                viewDashBoardDesignConfigList={this.props.Login.masterData.viewDashBoardDesignConfigList || []}\r\n                                operation={\"filter\"}//this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n\r\n                            />\r\n\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"dashboardview\",\r\n            methodUrl: \"DashBoardView\",\r\n            displayName: \"IDS_DASHBOARDVIEW\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedRecord2 = this.state.selectedRecord2 || {};\r\n        selectedRecord[name] = value;\r\n        selectedRecord2[name] = value;\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [name]: value,\r\n                [name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: value.toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onInputOnChange = (event, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [event.target.name]: selectedRecord[event.target.name],\r\n                [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: selectedRecord[event.target.name].toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, item) => {\r\n        //console.log(\"combo data:\", comboData, fieldName, item);\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedRecord2 = this.state.selectedRecord2 || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord2[fieldName] = comboData === null ? -1 : comboData.value;\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [fieldName]: comboData === null ? -1 : comboData.value,\r\n                [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: comboData === null ? \"-1\" : comboData.value.toString(),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue, item) => {\r\n        const { selectedRecord } = this.state;\r\n        const selectedRecord2 = this.state.selectedRecord2 || {};\r\n\r\n        if (dateValue === null){\r\n            dateValue = rearrangeDateFormat(this.props.Login.userInfo,item.dataList[0]);\r\n        }\r\n\r\n        selectedRecord[dateName] = dateValue;\r\n        selectedRecord2[dateName] = dateValue;\r\n\r\n        const inputData = {\r\n            dashboarddesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.props.Login.inputFieldData,\r\n                [dateName]: formatInputDate(dateValue, true),\r\n                [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: formatInputDate(dateValue, true),\r\n            parentid: item.ndashboarddesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndashboardtypecode: this.props.Login.masterData.selectedDashBoardTypes.ndashboardtypecode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewDashBoardDesignConfigList: this.props.Login.masterData.viewDashBoardDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataListForDashBoard(inputParam);\r\n    }\r\n\r\n    onSaveClick = () => {\r\n        const inputFieldData = this.props.Login.inputFieldData;\r\n\r\n        const inputParam = {\r\n            dashboardtypes: this.props.Login.masterData.selectedDashBoardTypes,\r\n            inputfielddata: inputFieldData,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n\r\n        this.props.selectCheckBoxDashBoardView(\"DashBoardView\", this.state.selectedRecord, this.props.Login.masterData, inputParam);\r\n\r\n     } \r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                });\r\n            }\r\n\r\n            else {\r\n                this.setState({\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    isOpen: false\r\n                });\r\n            }\r\n            // let respObj = {};\r\n            // if (this.props.Login.masterData.viewDashBoardDesignConfigList !== undefined && this.props.Login.masterData.viewDashBoardDesignConfigList.length > 0) {\r\n            //     sortByField(this.props.Login.masterData.viewDashBoardDesignConfigList, \"ascending\", \"ndashboarddesigncode\");\r\n\r\n            //     respObj[\"openModal\"] = true;\r\n            //     respObj[\"viewDashBoardDesignConfigList\"] = this.props.Login.masterData.viewDashBoardDesignConfigList;\r\n            //     let selectedRecord = {};           \r\n            //     respObj[\"viewDashBoardDesignConfigList\"].map(item => {\r\n            //       if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n            //         selectedRecord[item.sfieldname] = new Date(item.dataList[0])\r\n            //       }\r\n            //       else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n            //         const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n            //           item.sdisplaymember, undefined, undefined, true);\r\n\r\n            //         const comboList = comboMap.get(\"OptionList\");\r\n            //         item.dataList = comboList;\r\n            //       }\r\n            //       return null;\r\n\r\n            //     });   \r\n            //     respObj[\"selectedRecord\"] = selectedRecord;\r\n\r\n            // }\r\n            // else{\r\n            //     respObj[\"openModal\"] = false;\r\n            // }   \r\n            // this.setState({ ...respObj });\r\n        }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, fetchRecordDashBoardType, selectCheckBoxDashBoardTypes, getSqlQueryDataService,\r\n        getSqlQueryColumns, getAddDashboardDesign, selectCheckBoxDashBoardView, checkParametersAvailable,\r\n        getReportViewChildDataListForDashBoard, getAllSelectionDashBoardView, updateStore,\r\n        validateEsignCredential, filterColumnData\r\n    })(injectIntl(DashBoardView));"]},"metadata":{},"sourceType":"module"}