{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddCodedResult.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddCodedResult = props => {\n  const {\n    needCodedResult,\n    needActualResult,\n    grade\n  } = props.parameterData;\n  return /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"spredefinedname\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CODEDRESULT\"\n    }),\n    type: \"text\",\n    required: !needCodedResult,\n    isMandatory: needCodedResult ? \"\" : \"*\",\n    isDisabled: needCodedResult,\n    value: props.selectedRecord && props.selectedRecord[\"spredefinedname\"] ? props.selectedRecord[\"spredefinedname\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CODEDRESULT\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_ACTUALRESULT\"\n    }),\n    isSearchable: true,\n    name: \"ngradecode\",\n    isDisabled: needActualResult,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: !needActualResult,\n    options: grade || [],\n    optionId: \"ngradecode\",\n    optionValue: \"sdisplaystatus\",\n    value: props.selectedRecord && props.selectedRecord[\"ngradecode\"] ? props.selectedRecord[\"ngradecode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"ngradecode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default injectIntl(AddCodedResult);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testmanagement/AddCodedResult.jsx"],"names":["React","FormSelectSearch","Col","FormInput","injectIntl","AddCodedResult","props","needCodedResult","needActualResult","grade","parameterData","intl","formatMessage","id","selectedRecord","event","onInputOnChange","value","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,gBAAnB;AAAqCC,IAAAA;AAArC,MAA+CH,KAAK,CAACI,aAA3D;AACA,sBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,KAAK,EAAGJ,KAAK,CAACK,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAE,CAACN,eAJf;AAKI,IAAA,WAAW,EAAEA,eAAe,GAAC,EAAD,GAAI,GALpC;AAMI,IAAA,UAAU,EAAEA,eANhB;AAOI,IAAA,KAAK,EAAED,KAAK,CAACQ,cAAN,IAAwBR,KAAK,CAACQ,cAAN,CAAqB,iBAArB,CAAxB,GAAgER,KAAK,CAACQ,cAAN,CAAqB,iBAArB,CAAhE,GAAwG,EAPnH;AAQI,IAAA,WAAW,EAAGR,KAAK,CAACK,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CARlB;AASI,IAAA,QAAQ,EAAME,KAAD,IAAWT,KAAK,CAACU,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAET,KAAK,CAACK,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,YAHV;AAII,IAAA,UAAU,EAAEL,gBAJhB;AAKI,IAAA,WAAW,EAAEF,KAAK,CAACK,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,CAACL,gBANlB;AAOI,IAAA,OAAO,EAAGC,KAAK,IAAI,EAPvB;AAQI,IAAA,QAAQ,EAAC,YARb;AASI,IAAA,WAAW,EAAC,gBAThB;AAUI,IAAA,KAAK,EAAEH,KAAK,CAACQ,cAAN,IAAwBR,KAAK,CAACQ,cAAN,CAAqB,YAArB,CAAxB,GAA2DR,KAAK,CAACQ,cAAN,CAAqB,YAArB,CAA3D,GAA8F,EAVzG;AAWI,IAAA,QAAQ,EAAEG,KAAK,IAAIX,KAAK,CAACY,aAAN,CAAoBD,KAApB,EAA2B,YAA3B,EAAyC,CAAzC,CAXvB;AAYI,IAAA,gBAAgB,EAAE,IAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AA8BH,CAhCD;;AAkCA,eAAeb,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddCodedResult = (props) => {\r\n    const { needCodedResult, needActualResult, grade } = props.parameterData;\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormInput\r\n                name=\"spredefinedname\"\r\n                label={ props.intl.formatMessage({ id:\"IDS_CODEDRESULT\"}) } \r\n                type=\"text\"\r\n                required={!needCodedResult}\r\n                isMandatory={needCodedResult?\"\":\"*\"}\r\n                isDisabled={needCodedResult}\r\n                value={props.selectedRecord && props.selectedRecord[\"spredefinedname\"]?props.selectedRecord[\"spredefinedname\"]:\"\"}\r\n                placeholder={ props.intl.formatMessage({ id:\"IDS_CODEDRESULT\"}) } \r\n                onChange = { (event) => props.onInputOnChange(event, 1) }\r\n            />\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_ACTUALRESULT\" })}\r\n                isSearchable={true}\r\n                name={\"ngradecode\"}\r\n                isDisabled={needActualResult}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={!needActualResult}\r\n                options={ grade || [] }\r\n                optionId='ngradecode'\r\n                optionValue='sdisplaystatus'\r\n                value={props.selectedRecord && props.selectedRecord[\"ngradecode\"]?props.selectedRecord[\"ngradecode\"]:\"\"}\r\n                onChange={value => props.onComboChange(value, \"ngradecode\", 1)}\r\n                alphabeticalSort={true}\r\n            >\r\n            </FormSelectSearch>\r\n        </Col>\r\n     );\r\n}\r\n\r\nexport default injectIntl(AddCodedResult);"]},"metadata":{},"sourceType":"module"}