{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{injectIntl}from'react-intl';import{Row,Col,Card,FormGroup,FormLabel}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../components/Enumeration';import{ReadOnlyText}from'../../components/App.styles';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddSampleProcessing=function AddSampleProcessing(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_PROJECTTYPE\"}),name:\"nprojecttypecode\",type:\"text\",placeholder:props.formatMessage({id:\"IDS_PROJECTTYPE\"}),onChange:function onChange(event){return props.onInputOnChange(event);},isDisabled:true,value:props.masterData.selectedProjectType.label,isMandatory:true,required:true,maxLength:50})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),isSearchable:true,name:\"nproductcode\",isDisabled:props.operation==\"update\"?true:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.sampletype,value:props.selectedRecord[\"nproductcode\"]||\"\",onChange:function onChange(event){return props.onComboChange(event,\"nproductcode\");},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COLLECTIONTUBETYPENAME\"}),isSearchable:true,name:\"ncollectiontubetypecode\",isDisabled:props.operation==\"update\"?true:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.collectiontubetype,value:props.selectedRecord[\"ncollectiontubetypecode\"]||\"\",defaultValue:props.selectedRecord[\"ncollectiontubetypecode\"],onChange:function onChange(event){return props.onComboChange(event,\"ncollectiontubetypecode\");},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PROCESSTYPENAME\"}),isSearchable:true,name:\"nprocesstypecode\",isDisabled:props.operation==\"update\"?true:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.selectedRecord[\"processtype\"],value:props.selectedRecord[\"ncollectiontubetypecode\"]&&props.selectedRecord[\"nprocesstypecode\"]&&props.selectedRecord[\"nprocesstypecode\"]||\"\",onChange:function onChange(event){return props.onComboChange(event,\"nprocesstypecode\");},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_PROCESSDURATION\"}),name:\"sprocessduration\",type:\"text\",placeholder:props.formatMessage({id:\"IDS_PROCESSDURATION\"}),isDisabled:true,value:props.selectedRecord[\"sprocessduration\"],isMandatory:false,required:false,maxLength:20})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_GRACEDURATION\"}),name:\"sgraceduration\",type:\"text\",placeholder:props.formatMessage({id:\"IDS_GRACEDURATION\"}),isDisabled:true,value:props.selectedRecord[\"sgraceduration\"],isMandatory:false,required:false,maxLength:20}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_BARCODEID\"}),name:\"sbarcodeid\",type:\"text\"//onBlur={(event) => props.autoSaveGetData(event)}\n,onKeyUp:function onKeyUp(event){return props.autoSaveGetDataProcessing(event,\"sbarcodeid\");},placeholder:props.formatMessage({id:\"IDS_BARCODEID\"}),onChange:function onChange(event){return props.onInputOnChange(event);},isDisabled:props.operation==\"update\"?true:false,value:props.selectedRecord[\"sbarcodeid\"],isMandatory:true,required:true,maxLength:20})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dprocessstartdate\",label:props.intl.formatMessage({id:\"IDS_STARTDATEANDTIME\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"})//dateFormat={props.userInfo[\"ssitedatetime\"]}\n,dateFormat:props.userInfo.ssitedatetime,timeInputLabel:props.intl.formatMessage({id:\"IDS_STARTDATEANDTIME\"}),showTimeInput:true,timeFormat:true,isClearable:false,isMandatory:!props.masterData.sprocessstartdatesecondtime,required:true// isDisabled={diableAllStatus === recordStatus}\n//  minDate={props.currentTime}\n//   minTime={props.currentTime}\n,onChange:function onChange(date){return props.handleDateChangeSlidout(\"dprocessstartdate\",date);},selected:props.selectedRecord?props.selectedRecord[\"dprocessstartdate\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?12:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dprocessenddate\",label:props.intl.formatMessage({id:\"IDS_ENDDATEANDTIME\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"})//dateFormat={props.userInfo[\"ssitedatetime\"]}\n,dateFormat:props.userInfo.ssitedatetime,timeInputLabel:props.intl.formatMessage({id:\"IDS_ENDDATEANDTIME\"}),showTimeInput:true,timeFormat:true,isClearable:!props.masterData.sprocessstartdatesecondtime,isMandatory:props.masterData.sprocessstartdatesecondtime,required:true//    minDate={props.currentTime}\n//    minTime={props.currentTime}\n,onChange:function onChange(date){return props.handleDateChangeSlidout(\"dprocessenddate\",date);},selected:props.selectedRecord?props.selectedRecord[\"dprocessenddate\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),name:\"scomments\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\",rows:\"2\"//   isMandatory={props.masterData.iscommentsrequired?true:props.masterData.isdevaiationrequired?true:false}\n// required={props.masterData.iscommentsrequired?true:props.masterData.isdevaiationrequired?true:false}\n,isMandatory:false,required:false,maxLength:\"255\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DEVIATIONCOMMENTS\"}),name:\"sdeviationcomments\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DEVIATIONCOMMENTS\"}),value:props.selectedRecord?props.selectedRecord[\"sdeviationcomments\"]:\"\",rows:\"2\"//    isMandatory={props.masterData.isdevaiationrequired}\n//   required={props.masterData.isdevaiationrequired}\n,isMandatory:false,required:false,maxLength:\"255\"})))),/*#__PURE__*/React.createElement(Row,null,props.masterData.barcodedata&&Object.entries(props.masterData.barcodedata).length!==0&&/*#__PURE__*/React.createElement(Col,{md:12,className:\" mb-2\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,props.intl.formatMessage({id:\"IDS_SAMPLEINFO\"})))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,props.masterData.jsondataBarcodeFields&&props.masterData.jsondataBarcodeFields.map(function(item){return props.masterData.barcodedata&&Object.entries(props.masterData.barcodedata).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];if(item.sfieldname===key){return/*#__PURE__*/React.createElement(Col,{md:6,key:\"specInfo_\".concat(key)},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,key),/*#__PURE__*/React.createElement(ReadOnlyText,null,value)));}else{return null;}});})))))));};export default injectIntl(AddSampleProcessing);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/AddSampleProcessing.jsx"],"names":["React","injectIntl","Row","Col","Card","FormGroup","FormLabel","FormInput","DateTimePicker","FormSelectSearch","transactionStatus","ReadOnlyText","FormTextarea","AddSampleProcessing","props","formatMessage","id","event","onInputOnChange","masterData","selectedProjectType","label","intl","operation","sampletype","selectedRecord","onComboChange","collectiontubetype","autoSaveGetDataProcessing","userInfo","istimezoneshow","YES","ssitedatetime","sprocessstartdatesecondtime","date","handleDateChangeSlidout","Date","barcodedata","Object","entries","length","display","marginTop","jsondataBarcodeFields","map","item","key","value","sfieldname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddSampleProcessing = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Col md={12}>\r\n\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            name={\"nprojecttypecode\"}\r\n                            type=\"text\"\r\n                            placeholder={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isDisabled={true}\r\n                            value={props.masterData.selectedProjectType.label}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n\r\n                        />\r\n\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nproductcode\"}\r\n                            isDisabled={props.operation == \"update\" ? true : false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.sampletype}\r\n                            value={props.selectedRecord[\"nproductcode\"] || \"\"}\r\n                            onChange={(event) => props.onComboChange(event, \"nproductcode\")}\r\n\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_COLLECTIONTUBETYPENAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"ncollectiontubetypecode\"}\r\n                            isDisabled={props.operation == \"update\" ? true : false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.collectiontubetype}\r\n                            value={props.selectedRecord[\"ncollectiontubetypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"ncollectiontubetypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"ncollectiontubetypecode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROCESSTYPENAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprocesstypecode\"}\r\n                            isDisabled={props.operation == \"update\" ? true : false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.selectedRecord[\"processtype\"]}\r\n                            value={props.selectedRecord[\"ncollectiontubetypecode\"] && props.selectedRecord[\"nprocesstypecode\"] && props.selectedRecord[\"nprocesstypecode\"] || \"\"}\r\n                            onChange={(event) => props.onComboChange(event, \"nprocesstypecode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_PROCESSDURATION\" })}\r\n                            name={\"sprocessduration\"}\r\n                            type=\"text\"\r\n                            placeholder={props.formatMessage({ id: \"IDS_PROCESSDURATION\" })}\r\n                            isDisabled={true}\r\n                            value={props.selectedRecord[\"sprocessduration\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={20}\r\n\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_GRACEDURATION\" })}\r\n                            name={\"sgraceduration\"}\r\n                            type=\"text\"\r\n                            placeholder={props.formatMessage({ id: \"IDS_GRACEDURATION\" })}\r\n                            isDisabled={true}\r\n                            value={props.selectedRecord[\"sgraceduration\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={20}\r\n\r\n                        />\r\n                    </Col>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_BARCODEID\" })}\r\n                            name={\"sbarcodeid\"}\r\n                            type=\"text\"\r\n                            //onBlur={(event) => props.autoSaveGetData(event)}\r\n                            onKeyUp={(event) => props.autoSaveGetDataProcessing(event, \"sbarcodeid\")}\r\n                            placeholder={props.formatMessage({ id: \"IDS_BARCODEID\" })}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isDisabled={props.operation == \"update\" ? true : false}\r\n                            value={props.selectedRecord[\"sbarcodeid\"]}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={20}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dprocessstartdate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_STARTDATEANDTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            //dateFormat={props.userInfo[\"ssitedatetime\"]}\r\n                            dateFormat={props.userInfo.ssitedatetime}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_STARTDATEANDTIME\" })}\r\n                            showTimeInput={true}\r\n                            timeFormat={true}\r\n                            isClearable={false}\r\n                            isMandatory={!props.masterData.sprocessstartdatesecondtime}\r\n                            required={true}\r\n                            // isDisabled={diableAllStatus === recordStatus}\r\n                            //  minDate={props.currentTime}\r\n                            //   minTime={props.currentTime}\r\n                            onChange={date => props.handleDateChangeSlidout(\"dprocessstartdate\", date)}\r\n                            selected={props.selectedRecord ? props.selectedRecord[\"dprocessstartdate\"] : new Date()} />\r\n                    </Col>\r\n\r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 12 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dprocessenddate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_ENDDATEANDTIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            //dateFormat={props.userInfo[\"ssitedatetime\"]}\r\n                            dateFormat={props.userInfo.ssitedatetime}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_ENDDATEANDTIME\" })}\r\n                            showTimeInput={true}\r\n                            timeFormat={true}\r\n                            isClearable={!props.masterData.sprocessstartdatesecondtime}\r\n                            isMandatory={props.masterData.sprocessstartdatesecondtime}\r\n                            required={true}\r\n                            //    minDate={props.currentTime}\r\n                            //    minTime={props.currentTime}\r\n                            onChange={date => props.handleDateChangeSlidout(\"dprocessenddate\", date)}\r\n                            selected={props.selectedRecord ? props.selectedRecord[\"dprocessenddate\"] : new Date()} />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            name={\"scomments\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                            rows=\"2\"\r\n                            //   isMandatory={props.masterData.iscommentsrequired?true:props.masterData.isdevaiationrequired?true:false}\r\n                            // required={props.masterData.iscommentsrequired?true:props.masterData.isdevaiationrequired?true:false}\r\n                            isMandatory={false}\r\n                            required={false}\r\n\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                            name={\"sdeviationcomments\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdeviationcomments\"] : \"\"}\r\n                            rows=\"2\"\r\n                            //    isMandatory={props.masterData.isdevaiationrequired}\r\n                            //   required={props.masterData.isdevaiationrequired}\r\n                            isMandatory={false}\r\n                            required={false}\r\n\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n\r\n                </Col>\r\n\r\n\r\n\r\n            </Row>\r\n            <Row>\r\n                {props.masterData.barcodedata && Object.entries(props.masterData.barcodedata).length !== 0 &&\r\n                    <Col md={12} className=' mb-2'>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                    <h4>{props.intl.formatMessage({ id: \"IDS_SAMPLEINFO\" })}</h4>\r\n                                </span>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {\r\n                                        props.masterData.jsondataBarcodeFields && props.masterData.jsondataBarcodeFields.map(item => {\r\n                                            return (\r\n                                                props.masterData.barcodedata && Object.entries(props.masterData.barcodedata).map(([key, value]) => {\r\n                                                    if (item.sfieldname === key) {\r\n                                                        return (\r\n                                                            <Col md={6} key={`specInfo_${key}`}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        {key}\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>{value}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        );\r\n                                                    } else {\r\n                                                        return null;\r\n                                                    }\r\n                                                })\r\n                                            );\r\n                                        })\r\n                                    }\r\n\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>}\r\n            </Row>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default injectIntl(AddSampleProcessing);\r\n"]},"metadata":{},"sourceType":"module"}