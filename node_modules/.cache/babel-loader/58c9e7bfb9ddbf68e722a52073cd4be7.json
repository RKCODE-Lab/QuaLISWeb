{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { intl } from \"../components/App\";\nimport rsapi from \"../rsapi\";\nimport { initRequest } from './LoginAction';\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nexport function getCerHisDetail(CerGen, fromDate, toDate, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"certificatehistory/getCertificateHistory\", {\n      \"ncertificateversionhistorycode\": CerGen[\"ncertificateversionhistorycode\"],\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      }; //  sortData(masterData);\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/actions/CertificateHistoryAction.js"],"names":["toast","intl","rsapi","initRequest","DEFAULT_RETURN","getCerHisDetail","CerGen","fromDate","toDate","userInfo","masterData","dispatch","post","then","response","data","type","payload","loading","dataState","undefined","catch","error","status","formatMessage","id","message","warn"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,cAA/B;AAGA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,QAAjC,EAA2CC,MAA3C,EAAkDC,QAAlD,EAA4DC,UAA5D,EAAuE;AAC1E,SAAO,UAAUC,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR;AACA,WAAOD,KAAK,CAACU,IAAN,CAAW,0CAAX,EAAuD;AAC1D,wCAAkCN,MAAM,CAAC,gCAAD,CADkB;AAE1D,kBAAYG;AAF8C,KAAvD,EAIFI,IAJE,CAIGC,QAAQ,IAAI;AACdJ,MAAAA,UAAU,GAAG,EAAE,GAAGA,UAAL;AAAiB,WAAGI,QAAQ,CAACC;AAA7B,OAAb,CADc,CAEhB;;AACEJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEZ,cAAR;AAAwBa,QAAAA,OAAO,EAAE;AAAEP,UAAAA,UAAF;AAAcQ,UAAAA,OAAO,EAAE,KAAvB;AAA8BC,UAAAA,SAAS,EAACC;AAAxC;AAAjC,OAAD,CAAR;AACH,KARE,EASFC,KATE,CASIC,KAAK,IAAI;AACZX,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEZ,cAAR;AAAwBa,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAjC,OAAD,CAAR;;AACA,UAAII,KAAK,CAACR,QAAN,CAAeS,MAAf,KAA0B,GAA9B,EAAmC;AAC/BvB,QAAAA,KAAK,CAACsB,KAAN,CAAYrB,IAAI,CAACuB,aAAL,CAAmB;AAAEC,UAAAA,EAAE,EAAEH,KAAK,CAACI;AAAZ,SAAnB,CAAZ;AACH,OAFD,MAGK;AACD1B,QAAAA,KAAK,CAAC2B,IAAN,CAAW1B,IAAI,CAACuB,aAAL,CAAmB;AAAEC,UAAAA,EAAE,EAAEH,KAAK,CAACR;AAAZ,SAAnB,CAAX;AACH;AAEJ,KAlBE,CAAP;AAmBH,GArBD;AAsBH","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from './LoginAction';\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\n\r\n\r\nexport function getCerHisDetail(CerGen, fromDate, toDate,userInfo, masterData){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"certificatehistory/getCertificateHistory\", {\r\n            \"ncertificateversionhistorycode\": CerGen[\"ncertificateversionhistorycode\"],\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n              //  sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false ,dataState:undefined} });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}