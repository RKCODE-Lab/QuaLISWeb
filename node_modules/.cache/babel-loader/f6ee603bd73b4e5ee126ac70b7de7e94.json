{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryTaskForm.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { intl } from '../../components/App';\nimport { MediaHeader, MediaLabel } from '../../components/App.styles';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport TestPopOver from './TestPopOver';\n\nconst ResultEntryInstrumentForm = props => {\n  let stestsynonyms = props.selecteRecord.stestsynonym ? props.selecteRecord.stestsynonym.split(\",\") : [];\n  let message = `${stestsynonyms.length} ${props.intl.formatMessage({\n    id: \"IDS_TESTS\"\n  })} ${props.intl.formatMessage({\n    id: \"IDS_SELECTED\"\n  })}`;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.selecteRecord).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, stestsynonyms.length === 1 ? `${props.intl.formatMessage({\n    id: \"IDS_TEST\"\n  })}: ${stestsynonyms[0]}` :\n  /*#__PURE__*/\n  // <span \n  //     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\n  //     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\n  //     title={stestsynonyms}>\n  //     {stestsynonyms.length}{\" \"}\n  //     {props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\n  //     {props.intl.formatMessage({id:\"IDS_SELECTED\"})}\n  // </span>\n  React.createElement(TestPopOver, {\n    stringList: stestsynonyms,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }))))) : \"\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"numeric\",\n    type: \"number\" // placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\n    ,\n    isMandatory: true,\n    label: props.intl.formatMessage({\n      id: \"IDS_PREANALYSISTIME\"\n    }),\n    value: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreanalysistime : \"\",\n    strict: true,\n    maxLength: 6,\n    noStyle: true,\n    required: true,\n    className: \"form-control\",\n    onChange: event => props.onNumericChange(event, \"spreanalysistime\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaLabel, {\n    className: \"labelfont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_MINUTES\"\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"numeric\",\n    type: \"number\",\n    isMandatory: true // placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\n    ,\n    label: props.intl.formatMessage({\n      id: \"IDS_PREPARATIONTIME\"\n    }),\n    value: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreparationtime : \"\",\n    strict: true,\n    maxLength: 6,\n    noStyle: true,\n    className: \"form-control\",\n    onChange: event => props.onNumericChange(event, \"spreparationtime\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaLabel, {\n    className: \"labelfont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_MINUTES\"\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"numeric\",\n    type: \"number\",\n    isMandatory: true // placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\n    ,\n    label: props.intl.formatMessage({\n      id: \"IDS_ANALYSISTIME\"\n    }),\n    value: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.sanalysistime : \"\",\n    strict: true,\n    maxLength: 6,\n    noStyle: true,\n    className: \"form-control\",\n    onChange: event => props.onNumericChange(event, \"sanalysistime\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaLabel, {\n    className: \"labelfont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 34\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_MINUTES\"\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"numeric\",\n    type: \"number\",\n    isMandatory: true // placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\n    ,\n    label: props.intl.formatMessage({\n      id: \"IDS_MISCTIME\"\n    }),\n    value: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.smisctime : \"\",\n    strict: true,\n    maxLength: 6,\n    noStyle: true,\n    className: \"form-control\",\n    onChange: event => props.onNumericChange(event, \"smisctime\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaLabel, {\n    className: \"labelfont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 34\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_MINUTES\"\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"Task Procedure\",\n    placeholder: intl.formatMessage({\n      id: \"IDS_TASKPROCEDURE\"\n    }),\n    label: intl.formatMessage({\n      id: \"IDS_TASKPROCEDURE\"\n    }),\n    type: \"text\",\n    defaultValue: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.staskprocedure : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 1000,\n    onChange: event => props.onInputChange(event, \"staskprocedure\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"Result\",\n    placeholder: intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    label: intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    type: \"text\",\n    defaultValue: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.scomments : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputChange(event, \"scomments\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(ResultEntryInstrumentForm);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskForm.jsx"],"names":["React","Row","Col","injectIntl","intl","MediaHeader","MediaLabel","ListWrapper","FormNumericInput","FormTextarea","TestPopOver","ResultEntryInstrumentForm","props","stestsynonyms","selecteRecord","stestsynonym","split","message","length","formatMessage","id","Object","values","spreanalysistime","event","onNumericChange","spreparationtime","sanalysistime","smisctime","staskprocedure","onInputChange","scomments"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { intl } from '../../components/App';\r\nimport { MediaHeader, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport TestPopOver from './TestPopOver';\r\nconst ResultEntryInstrumentForm = (props) => {\r\n    let stestsynonyms = props.selecteRecord.stestsynonym ? props.selecteRecord.stestsynonym.split(\",\") : []\r\n\r\n    let message= `${stestsynonyms.length} ${props.intl.formatMessage({ id: \"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n      return (\r\n        <>\r\n            \r\n            {Object.values(props.selecteRecord).length > 0 ?\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>\r\n                                {stestsynonyms.length === 1 ?\r\n                                        `${props.intl.formatMessage({id:\"IDS_TEST\"})}: ${stestsynonyms[0] }`:\r\n                                        // <span \r\n                                        //     onMouseOver={event => tooltip && tooltip.handleMouseOver(event)}\r\n                                        //     onMouseOut={event => tooltip && tooltip.handleMouseOut(event)} //title={()=>tittleContent(stestsynonyms)}\r\n                                        //     title={stestsynonyms}>\r\n                                        //     {stestsynonyms.length}{\" \"}\r\n                                        //     {props.intl.formatMessage({id:\"IDS_TESTS\"})}{\" \"}\r\n                                        //     {props.intl.formatMessage({id:\"IDS_SELECTED\"})}\r\n                                        // </span>\r\n                                        <TestPopOver stringList={stestsynonyms} message={message}></TestPopOver>\r\n\r\n                                }\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                : \"\"}\r\n\r\n            <Row>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                        isMandatory={true}\r\n                        label={props.intl.formatMessage({ id: \"IDS_PREANALYSISTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreanalysistime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        required={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"spreanalysistime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true}\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_PREPARATIONTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.spreparationtime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"spreparationtime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true}\r\n                        // placeholder={intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ANALYSISTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.sanalysistime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"sanalysistime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormNumericInput\r\n                        name=\"numeric\"\r\n                        type=\"number\"\r\n                        isMandatory={true} \r\n                        // placeholder={intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                        label={props.intl.formatMessage({ id: \"IDS_MISCTIME\" })}\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.smisctime : \"\"}\r\n                        strict={true}\r\n                        maxLength={6}\r\n                        noStyle={true}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => props.onNumericChange(event, \"smisctime\")}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                    <ListWrapper><MediaLabel className=\"labelfont\" >\r\n                        {props.intl.formatMessage({ id: \"IDS_MINUTES\" })}</MediaLabel></ListWrapper>\r\n                    {/* : \"\"} */}\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormTextarea\r\n                        name={\"Task Procedure\"}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_TASKPROCEDURE\" })}\r\n                        label={intl.formatMessage({ id: \"IDS_TASKPROCEDURE\" })}\r\n                        type=\"text\"\r\n                        defaultValue={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.staskprocedure : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={1000}\r\n                        onChange={(event) => props.onInputChange(event, \"staskprocedure\")}\r\n                    />\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormTextarea\r\n                        name={\"Result\"}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        label={intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        type=\"text\"\r\n                        defaultValue={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.scomments : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        onChange={(event) => props.onInputChange(event, \"scomments\")}\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ResultEntryInstrumentForm);\r\n"]},"metadata":{},"sourceType":"module"}