{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setFunc = exports.setArgValueSrc = exports.setArgValue = exports.completeValue = exports.completeFuncValue = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n} // helpers\n\n\nvar isObject = function isObject(v) {\n  return (0, _typeof2[\"default\"])(v) == \"object\" && v !== null && !Array.isArray(v);\n};\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\n\nvar completeValue = function completeValue(value, valueSrc, config) {\n  if (valueSrc == \"func\") return completeFuncValue(value, config);else return value;\n};\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\n\nexports.completeValue = completeValue;\n\nvar completeFuncValue = function completeFuncValue(value, config) {\n  var _checkFuncValue = function _checkFuncValue(value) {\n    if (!value) return undefined;\n    var funcKey = value.get(\"func\");\n    var funcConfig = funcKey && (0, _configUtils.getFuncConfig)(config, funcKey);\n    if (!funcConfig) return undefined;\n    var complValue = value;\n    var tmpHasOptional = false;\n\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          isOptional = argConfig.isOptional,\n          defaultValue = argConfig.defaultValue;\n      var args = complValue.get(\"args\");\n      var argDefaultValueSrc = valueSources.length == 1 ? valueSources[0] : undefined;\n      var argVal = args ? args.get(argKey) : undefined;\n      var argValue = argVal ? argVal.get(\"value\") : undefined;\n      var argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n\n      if (argValue !== undefined) {\n        var completeArgValue = completeValue(argValue, argValueSrc, config);\n\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n\n\nexports.completeFuncValue = completeFuncValue;\n\nvar getUsedFieldsInFuncValue = function getUsedFieldsInFuncValue(value, config) {\n  var usedFields = [];\n  var badFields = [];\n\n  var _traverse = function _traverse(value) {\n    var args = value && value.get(\"args\");\n    if (!args) return;\n\n    var _iterator = _createForOfIteratorHelper(args.values()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var arg = _step.value;\n\n        if (arg.get(\"valueSrc\") == \"field\") {\n          var rightField = arg.get(\"value\");\n\n          if (rightField) {\n            var rightFieldDefinition = config ? (0, _configUtils.getFieldConfig)(config, rightField) : undefined;\n            if (config && !rightFieldDefinition) badFields.push(rightField);else usedFields.push(rightField);\n          }\n        } else if (arg.get(\"valueSrc\") == \"func\") {\n          _traverse(arg.get(\"value\"));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\n\n\nvar setFunc = function setFunc(value, funcKey, config) {\n  var fieldSeparator = config.settings.fieldSeparator;\n  value = value || new _immutable[\"default\"].Map();\n\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new _immutable[\"default\"].Map()); // defaults\n\n  var funcConfig = funcKey && (0, _configUtils.getFuncConfig)(config, funcKey);\n\n  if (funcConfig) {\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          defaultValue = argConfig.defaultValue;\n      var firstValueSrc = valueSources.length ? valueSources[0] : undefined;\n      var defaultValueSrc = defaultValue ? isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\" : undefined;\n      var argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nexports.setFunc = setFunc;\n\nvar getDefaultArgValue = function getDefaultArgValue(_ref) {\n  var value = _ref.defaultValue;\n\n  if (isObject(value) && !_immutable[\"default\"].Map.isMap(value) && value.func) {\n    return _immutable[\"default\"].fromJS(value, function (k, v) {\n      return _immutable[\"default\"].Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\n\n\nvar setArgValue = function setArgValue(value, argKey, argVal, argConfig) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal); // set default arg value sorce\n\n    var argDefaultValueSrc = argConfig.valueSources.length == 1 ? argConfig.valueSources[0] : undefined;\n\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\n\n\nexports.setArgValue = setArgValue;\n\nvar setArgValueSrc = function setArgValueSrc(value, argKey, argValSrc, argConfig) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new _immutable[\"default\"].Map({\n      valueSrc: argValSrc\n    }));\n  }\n\n  return value;\n};\n\nexports.setArgValueSrc = setArgValueSrc;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/react-awesome-query-builder/lib/utils/funcUtils.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","setFunc","setArgValueSrc","setArgValue","completeValue","completeFuncValue","_typeof2","_configUtils","_immutable","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","isObject","v","valueSrc","config","_checkFuncValue","undefined","funcKey","get","funcConfig","getFuncConfig","complValue","tmpHasOptional","argKey","args","argConfig","valueSources","isOptional","defaultValue","argDefaultValueSrc","argVal","argValue","argValueSrc","completeArgValue","setIn","getDefaultArgValue","getUsedFieldsInFuncValue","usedFields","badFields","_traverse","_iterator","values","_step","arg","rightField","rightFieldDefinition","getFieldConfig","push","fieldSeparator","settings","Map","join","set","firstValueSrc","defaultValueSrc","func","_ref","isMap","fromJS","k","Iterable","isIndexed","toList","toOrderedMap","argValSrc"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,cAAR,GAAyBH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,aAAR,GAAwBL,OAAO,CAACM,iBAAR,GAA4B,KAAK,CAA1H;;AAEA,IAAIC,QAAQ,GAAGX,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAArC;;AAEA,IAAIW,YAAY,GAAGX,OAAO,CAAC,sBAAD,CAA1B;;AAEA,IAAIY,UAAU,GAAGb,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAAvC;;AAEA,SAASa,0BAAT,CAAoCC,CAApC,EAAuCC,cAAvC,EAAuD;AAAE,MAAIC,EAAE,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAlC,IAAuDJ,CAAC,CAAC,YAAD,CAAjE;;AAAiF,MAAI,CAACE,EAAL,EAAS;AAAE,QAAIG,KAAK,CAACC,OAAN,CAAcN,CAAd,MAAqBE,EAAE,GAAGK,2BAA2B,CAACP,CAAD,CAArD,KAA6DC,cAAc,IAAID,CAAlB,IAAuB,OAAOA,CAAC,CAACQ,MAAT,KAAoB,QAA5G,EAAsH;AAAE,UAAIN,EAAJ,EAAQF,CAAC,GAAGE,EAAJ;AAAQ,UAAIO,CAAC,GAAG,CAAR;;AAAW,UAAIC,CAAC,GAAG,SAASA,CAAT,GAAa,CAAE,CAAvB;;AAAyB,aAAO;AAAEC,QAAAA,CAAC,EAAED,CAAL;AAAQE,QAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,cAAIH,CAAC,IAAIT,CAAC,CAACQ,MAAX,EAAmB,OAAO;AAAEK,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAuB,iBAAO;AAAEA,YAAAA,IAAI,EAAE,KAAR;AAAevB,YAAAA,KAAK,EAAEU,CAAC,CAACS,CAAC,EAAF;AAAvB,WAAP;AAAwC,SAA5G;AAA8GK,QAAAA,CAAC,EAAE,SAASA,CAAT,CAAWC,EAAX,EAAe;AAAE,gBAAMA,EAAN;AAAW,SAA7I;AAA+IC,QAAAA,CAAC,EAAEN;AAAlJ,OAAP;AAA+J;;AAAC,UAAM,IAAIO,SAAJ,CAAc,uIAAd,CAAN;AAA+J;;AAAC,MAAIC,gBAAgB,GAAG,IAAvB;AAAA,MAA6BC,MAAM,GAAG,KAAtC;AAAA,MAA6CC,GAA7C;AAAkD,SAAO;AAAET,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAET,MAAAA,EAAE,GAAGA,EAAE,CAACmB,IAAH,CAAQrB,CAAR,CAAL;AAAkB,KAAtC;AAAwCY,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,UAAIU,IAAI,GAAGpB,EAAE,CAACqB,IAAH,EAAX;AAAsBL,MAAAA,gBAAgB,GAAGI,IAAI,CAACT,IAAxB;AAA8B,aAAOS,IAAP;AAAc,KAA5H;AAA8HR,IAAAA,CAAC,EAAE,SAASA,CAAT,CAAWU,GAAX,EAAgB;AAAEL,MAAAA,MAAM,GAAG,IAAT;AAAeC,MAAAA,GAAG,GAAGI,GAAN;AAAY,KAA9K;AAAgLR,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,UAAI;AAAE,YAAI,CAACE,gBAAD,IAAqBhB,EAAE,CAAC,QAAD,CAAF,IAAgB,IAAzC,EAA+CA,EAAE,CAAC,QAAD,CAAF;AAAiB,OAAtE,SAA+E;AAAE,YAAIiB,MAAJ,EAAY,MAAMC,GAAN;AAAY;AAAE;AAA7S,GAAP;AAAyT;;AAE5+B,SAASb,2BAAT,CAAqCP,CAArC,EAAwCyB,MAAxC,EAAgD;AAAE,MAAI,CAACzB,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO0B,iBAAiB,CAAC1B,CAAD,EAAIyB,MAAJ,CAAxB;AAAqC,MAAIb,CAAC,GAAGzB,MAAM,CAACwC,SAAP,CAAiBC,QAAjB,CAA0BP,IAA1B,CAA+BrB,CAA/B,EAAkC6B,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIjB,CAAC,KAAK,QAAN,IAAkBZ,CAAC,CAAC8B,WAAxB,EAAqClB,CAAC,GAAGZ,CAAC,CAAC8B,WAAF,CAAcC,IAAlB;AAAwB,MAAInB,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOP,KAAK,CAAC2B,IAAN,CAAWhC,CAAX,CAAP;AAAsB,MAAIY,CAAC,KAAK,WAAN,IAAqB,2CAA2CqB,IAA3C,CAAgDrB,CAAhD,CAAzB,EAA6E,OAAOc,iBAAiB,CAAC1B,CAAD,EAAIyB,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BQ,GAA3B,EAAgCC,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGD,GAAG,CAAC1B,MAA7B,EAAqC2B,GAAG,GAAGD,GAAG,CAAC1B,MAAV;;AAAkB,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAW2B,IAAI,GAAG,IAAI/B,KAAJ,CAAU8B,GAAV,CAAvB,EAAuC1B,CAAC,GAAG0B,GAA3C,EAAgD1B,CAAC,EAAjD,EAAqD;AAAE2B,IAAAA,IAAI,CAAC3B,CAAD,CAAJ,GAAUyB,GAAG,CAACzB,CAAD,CAAb;AAAmB;;AAAC,SAAO2B,IAAP;AAAc,C,CAEvL;;;AACA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AAClC,SAAO,CAAC,GAAG1C,QAAQ,CAAC,SAAD,CAAZ,EAAyB0C,CAAzB,KAA+B,QAA/B,IAA2CA,CAAC,KAAK,IAAjD,IAAyD,CAACjC,KAAK,CAACC,OAAN,CAAcgC,CAAd,CAAjE;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI5C,aAAa,GAAG,SAASA,aAAT,CAAuBJ,KAAvB,EAA8BiD,QAA9B,EAAwCC,MAAxC,EAAgD;AAClE,MAAID,QAAQ,IAAI,MAAhB,EAAwB,OAAO5C,iBAAiB,CAACL,KAAD,EAAQkD,MAAR,CAAxB,CAAxB,KAAqE,OAAOlD,KAAP;AACtE,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AAGAD,OAAO,CAACK,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BL,KAA3B,EAAkCkD,MAAlC,EAA0C;AAChE,MAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBnD,KAAzB,EAAgC;AACpD,QAAI,CAACA,KAAL,EAAY,OAAOoD,SAAP;AACZ,QAAIC,OAAO,GAAGrD,KAAK,CAACsD,GAAN,CAAU,MAAV,CAAd;AACA,QAAIC,UAAU,GAAGF,OAAO,IAAI,CAAC,GAAG9C,YAAY,CAACiD,aAAjB,EAAgCN,MAAhC,EAAwCG,OAAxC,CAA5B;AACA,QAAI,CAACE,UAAL,EAAiB,OAAOH,SAAP;AACjB,QAAIK,UAAU,GAAGzD,KAAjB;AACA,QAAI0D,cAAc,GAAG,KAArB;;AAEA,SAAK,IAAIC,MAAT,IAAmBJ,UAAU,CAACK,IAA9B,EAAoC;AAClC,UAAIC,SAAS,GAAGN,UAAU,CAACK,IAAX,CAAgBD,MAAhB,CAAhB;AACA,UAAIG,YAAY,GAAGD,SAAS,CAACC,YAA7B;AAAA,UACIC,UAAU,GAAGF,SAAS,CAACE,UAD3B;AAAA,UAEIC,YAAY,GAAGH,SAAS,CAACG,YAF7B;AAGA,UAAIJ,IAAI,GAAGH,UAAU,CAACH,GAAX,CAAe,MAAf,CAAX;AACA,UAAIW,kBAAkB,GAAGH,YAAY,CAAC5C,MAAb,IAAuB,CAAvB,GAA2B4C,YAAY,CAAC,CAAD,CAAvC,GAA6CV,SAAtE;AACA,UAAIc,MAAM,GAAGN,IAAI,GAAGA,IAAI,CAACN,GAAL,CAASK,MAAT,CAAH,GAAsBP,SAAvC;AACA,UAAIe,QAAQ,GAAGD,MAAM,GAAGA,MAAM,CAACZ,GAAP,CAAW,OAAX,CAAH,GAAyBF,SAA9C;AACA,UAAIgB,WAAW,GAAG,CAACF,MAAM,GAAGA,MAAM,CAACZ,GAAP,CAAW,UAAX,CAAH,GAA4BF,SAAnC,KAAiDa,kBAAnE;;AAEA,UAAIE,QAAQ,KAAKf,SAAjB,EAA4B;AAC1B,YAAIiB,gBAAgB,GAAGjE,aAAa,CAAC+D,QAAD,EAAWC,WAAX,EAAwBlB,MAAxB,CAApC;;AAEA,YAAImB,gBAAgB,KAAKjB,SAAzB,EAAoC;AAClC,iBAAOA,SAAP;AACD,SAFD,MAEO,IAAIiB,gBAAgB,KAAKF,QAAzB,EAAmC;AACxCV,UAAAA,UAAU,GAAGA,UAAU,CAACa,KAAX,CAAiB,CAAC,MAAD,EAASX,MAAT,EAAiB,OAAjB,CAAjB,EAA4CU,gBAA5C,CAAb;AACD;;AAED,YAAIX,cAAJ,EAAoB;AAClB;AACA,iBAAON,SAAP;AACD;AACF,OAbD,MAaO,IAAIY,YAAY,KAAKZ,SAAjB,IAA8B,CAACL,QAAQ,CAACiB,YAAD,CAA3C,EAA2D;AAChEP,QAAAA,UAAU,GAAGA,UAAU,CAACa,KAAX,CAAiB,CAAC,MAAD,EAASX,MAAT,EAAiB,OAAjB,CAAjB,EAA4CY,kBAAkB,CAACV,SAAD,CAA9D,CAAb;AACAJ,QAAAA,UAAU,GAAGA,UAAU,CAACa,KAAX,CAAiB,CAAC,MAAD,EAASX,MAAT,EAAiB,UAAjB,CAAjB,EAA+C,OAA/C,CAAb;AACD,OAHM,MAGA,IAAII,UAAJ,EAAgB;AACrB;AACAL,QAAAA,cAAc,GAAG,IAAjB;AACD,OAHM,MAGA;AACL;AACA,eAAON,SAAP;AACD;AACF;;AAED,WAAOK,UAAP;AACD,GA7CD;;AA+CA,SAAON,eAAe,CAACnD,KAAD,CAAtB;AACD,CAjDD;AAkDA;AACA;AACA;AACA;;;AAGAD,OAAO,CAACM,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAImE,wBAAwB,GAAG,SAASA,wBAAT,CAAkCxE,KAAlC,EAAyCkD,MAAzC,EAAiD;AAC9E,MAAIuB,UAAU,GAAG,EAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAIC,SAAS,GAAG,SAASA,SAAT,CAAmB3E,KAAnB,EAA0B;AACxC,QAAI4D,IAAI,GAAG5D,KAAK,IAAIA,KAAK,CAACsD,GAAN,CAAU,MAAV,CAApB;AACA,QAAI,CAACM,IAAL,EAAW;;AAEX,QAAIgB,SAAS,GAAGnE,0BAA0B,CAACmD,IAAI,CAACiB,MAAL,EAAD,CAA1C;AAAA,QACIC,KADJ;;AAGA,QAAI;AACF,WAAKF,SAAS,CAACvD,CAAV,EAAL,EAAoB,CAAC,CAACyD,KAAK,GAAGF,SAAS,CAACtD,CAAV,EAAT,EAAwBC,IAA7C,GAAoD;AAClD,YAAIwD,GAAG,GAAGD,KAAK,CAAC9E,KAAhB;;AAEA,YAAI+E,GAAG,CAACzB,GAAJ,CAAQ,UAAR,KAAuB,OAA3B,EAAoC;AAClC,cAAI0B,UAAU,GAAGD,GAAG,CAACzB,GAAJ,CAAQ,OAAR,CAAjB;;AAEA,cAAI0B,UAAJ,EAAgB;AACd,gBAAIC,oBAAoB,GAAG/B,MAAM,GAAG,CAAC,GAAG3C,YAAY,CAAC2E,cAAjB,EAAiChC,MAAjC,EAAyC8B,UAAzC,CAAH,GAA0D5B,SAA3F;AACA,gBAAIF,MAAM,IAAI,CAAC+B,oBAAf,EAAqCP,SAAS,CAACS,IAAV,CAAeH,UAAf,EAArC,KAAqEP,UAAU,CAACU,IAAX,CAAgBH,UAAhB;AACtE;AACF,SAPD,MAOO,IAAID,GAAG,CAACzB,GAAJ,CAAQ,UAAR,KAAuB,MAA3B,EAAmC;AACxCqB,UAAAA,SAAS,CAACI,GAAG,CAACzB,GAAJ,CAAQ,OAAR,CAAD,CAAT;AACD;AACF;AACF,KAfD,CAeE,OAAOxB,GAAP,EAAY;AACZ8C,MAAAA,SAAS,CAACpD,CAAV,CAAYM,GAAZ;AACD,KAjBD,SAiBU;AACR8C,MAAAA,SAAS,CAAClD,CAAV;AACD;AACF,GA3BD;;AA6BAiD,EAAAA,SAAS,CAAC3E,KAAD,CAAT;;AAEA,SAAO,CAACyE,UAAD,EAAaC,SAAb,CAAP;AACD,CApCD;AAqCA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIzE,OAAO,GAAG,SAASA,OAAT,CAAiBD,KAAjB,EAAwBqD,OAAxB,EAAiCH,MAAjC,EAAyC;AACrD,MAAIkC,cAAc,GAAGlC,MAAM,CAACmC,QAAP,CAAgBD,cAArC;AACApF,EAAAA,KAAK,GAAGA,KAAK,IAAI,IAAIQ,UAAU,CAAC,SAAD,CAAV,CAAsB8E,GAA1B,EAAjB;;AAEA,MAAIvE,KAAK,CAACC,OAAN,CAAcqC,OAAd,CAAJ,EAA4B;AAC1B;AACAA,IAAAA,OAAO,GAAGA,OAAO,CAACkC,IAAR,CAAaH,cAAb,CAAV;AACD;;AAEDpF,EAAAA,KAAK,GAAGA,KAAK,CAACwF,GAAN,CAAU,MAAV,EAAkBnC,OAAlB,CAAR;AACArD,EAAAA,KAAK,GAAGA,KAAK,CAACwF,GAAN,CAAU,MAAV,EAAkB,IAAIhF,UAAU,CAAC,SAAD,CAAV,CAAsB8E,GAA1B,EAAlB,CAAR,CAVqD,CAUO;;AAE5D,MAAI/B,UAAU,GAAGF,OAAO,IAAI,CAAC,GAAG9C,YAAY,CAACiD,aAAjB,EAAgCN,MAAhC,EAAwCG,OAAxC,CAA5B;;AAEA,MAAIE,UAAJ,EAAgB;AACd,SAAK,IAAII,MAAT,IAAmBJ,UAAU,CAACK,IAA9B,EAAoC;AAClC,UAAIC,SAAS,GAAGN,UAAU,CAACK,IAAX,CAAgBD,MAAhB,CAAhB;AACA,UAAIG,YAAY,GAAGD,SAAS,CAACC,YAA7B;AAAA,UACIE,YAAY,GAAGH,SAAS,CAACG,YAD7B;AAEA,UAAIyB,aAAa,GAAG3B,YAAY,CAAC5C,MAAb,GAAsB4C,YAAY,CAAC,CAAD,CAAlC,GAAwCV,SAA5D;AACA,UAAIsC,eAAe,GAAG1B,YAAY,GAAGjB,QAAQ,CAACiB,YAAD,CAAR,IAA0B,CAAC,CAACA,YAAY,CAAC2B,IAAzC,GAAgD,MAAhD,GAAyD,OAA5D,GAAsEvC,SAAxG;AACA,UAAIa,kBAAkB,GAAGyB,eAAe,IAAID,aAA5C;;AAEA,UAAIzB,YAAY,KAAKZ,SAArB,EAAgC;AAC9BpD,QAAAA,KAAK,GAAGA,KAAK,CAACsE,KAAN,CAAY,CAAC,MAAD,EAASX,MAAT,EAAiB,OAAjB,CAAZ,EAAuCY,kBAAkB,CAACV,SAAD,CAAzD,CAAR;AACD;;AAED,UAAII,kBAAJ,EAAwB;AACtBjE,QAAAA,KAAK,GAAGA,KAAK,CAACsE,KAAN,CAAY,CAAC,MAAD,EAASX,MAAT,EAAiB,UAAjB,CAAZ,EAA0CM,kBAA1C,CAAR;AACD;AACF;AACF;;AAED,SAAOjE,KAAP;AACD,CAlCD;;AAoCAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;;AAEA,IAAIsE,kBAAkB,GAAG,SAASA,kBAAT,CAA4BqB,IAA5B,EAAkC;AACzD,MAAI5F,KAAK,GAAG4F,IAAI,CAAC5B,YAAjB;;AAEA,MAAIjB,QAAQ,CAAC/C,KAAD,CAAR,IAAmB,CAACQ,UAAU,CAAC,SAAD,CAAV,CAAsB8E,GAAtB,CAA0BO,KAA1B,CAAgC7F,KAAhC,CAApB,IAA8DA,KAAK,CAAC2F,IAAxE,EAA8E;AAC5E,WAAOnF,UAAU,CAAC,SAAD,CAAV,CAAsBsF,MAAtB,CAA6B9F,KAA7B,EAAoC,UAAU+F,CAAV,EAAa/C,CAAb,EAAgB;AACzD,aAAOxC,UAAU,CAAC,SAAD,CAAV,CAAsBwF,QAAtB,CAA+BC,SAA/B,CAAyCjD,CAAzC,IAA8CA,CAAC,CAACkD,MAAF,EAA9C,GAA2DlD,CAAC,CAACmD,YAAF,EAAlE;AACD,KAFM,CAAP;AAGD;;AAED,SAAOnG,KAAP;AACD,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqBH,KAArB,EAA4B2D,MAA5B,EAAoCO,MAApC,EAA4CL,SAA5C,EAAuD;AACvE,MAAI7D,KAAK,IAAIA,KAAK,CAACsD,GAAN,CAAU,MAAV,CAAb,EAAgC;AAC9BtD,IAAAA,KAAK,GAAGA,KAAK,CAACsE,KAAN,CAAY,CAAC,MAAD,EAASX,MAAT,EAAiB,OAAjB,CAAZ,EAAuCO,MAAvC,CAAR,CAD8B,CAC0B;;AAExD,QAAID,kBAAkB,GAAGJ,SAAS,CAACC,YAAV,CAAuB5C,MAAvB,IAAiC,CAAjC,GAAqC2C,SAAS,CAACC,YAAV,CAAuB,CAAvB,CAArC,GAAiEV,SAA1F;;AAEA,QAAIa,kBAAJ,EAAwB;AACtBjE,MAAAA,KAAK,GAAGA,KAAK,CAACsE,KAAN,CAAY,CAAC,MAAD,EAASX,MAAT,EAAiB,UAAjB,CAAZ,EAA0CM,kBAA1C,CAAR;AACD;AACF;;AAED,SAAOjE,KAAP;AACD,CAZD;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAD,OAAO,CAACI,WAAR,GAAsBA,WAAtB;;AAEA,IAAID,cAAc,GAAG,SAASA,cAAT,CAAwBF,KAAxB,EAA+B2D,MAA/B,EAAuCyC,SAAvC,EAAkDvC,SAAlD,EAA6D;AAChF,MAAI7D,KAAK,IAAIA,KAAK,CAACsD,GAAN,CAAU,MAAV,CAAb,EAAgC;AAC9BtD,IAAAA,KAAK,GAAGA,KAAK,CAACsE,KAAN,CAAY,CAAC,MAAD,EAASX,MAAT,CAAZ,EAA8B,IAAInD,UAAU,CAAC,SAAD,CAAV,CAAsB8E,GAA1B,CAA8B;AAClErC,MAAAA,QAAQ,EAAEmD;AADwD,KAA9B,CAA9B,CAAR;AAGD;;AAED,SAAOpG,KAAP;AACD,CARD;;AAUAD,OAAO,CAACG,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setFunc = exports.setArgValueSrc = exports.setArgValue = exports.completeValue = exports.completeFuncValue = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// helpers\nvar isObject = function isObject(v) {\n  return (0, _typeof2[\"default\"])(v) == \"object\" && v !== null && !Array.isArray(v);\n};\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\n\nvar completeValue = function completeValue(value, valueSrc, config) {\n  if (valueSrc == \"func\") return completeFuncValue(value, config);else return value;\n};\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\n\nexports.completeValue = completeValue;\n\nvar completeFuncValue = function completeFuncValue(value, config) {\n  var _checkFuncValue = function _checkFuncValue(value) {\n    if (!value) return undefined;\n    var funcKey = value.get(\"func\");\n    var funcConfig = funcKey && (0, _configUtils.getFuncConfig)(config, funcKey);\n    if (!funcConfig) return undefined;\n    var complValue = value;\n    var tmpHasOptional = false;\n\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          isOptional = argConfig.isOptional,\n          defaultValue = argConfig.defaultValue;\n      var args = complValue.get(\"args\");\n      var argDefaultValueSrc = valueSources.length == 1 ? valueSources[0] : undefined;\n      var argVal = args ? args.get(argKey) : undefined;\n      var argValue = argVal ? argVal.get(\"value\") : undefined;\n      var argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n\n      if (argValue !== undefined) {\n        var completeArgValue = completeValue(argValue, argValueSrc, config);\n\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n\n\nexports.completeFuncValue = completeFuncValue;\n\nvar getUsedFieldsInFuncValue = function getUsedFieldsInFuncValue(value, config) {\n  var usedFields = [];\n  var badFields = [];\n\n  var _traverse = function _traverse(value) {\n    var args = value && value.get(\"args\");\n    if (!args) return;\n\n    var _iterator = _createForOfIteratorHelper(args.values()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var arg = _step.value;\n\n        if (arg.get(\"valueSrc\") == \"field\") {\n          var rightField = arg.get(\"value\");\n\n          if (rightField) {\n            var rightFieldDefinition = config ? (0, _configUtils.getFieldConfig)(config, rightField) : undefined;\n            if (config && !rightFieldDefinition) badFields.push(rightField);else usedFields.push(rightField);\n          }\n        } else if (arg.get(\"valueSrc\") == \"func\") {\n          _traverse(arg.get(\"value\"));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\n\n\nvar setFunc = function setFunc(value, funcKey, config) {\n  var fieldSeparator = config.settings.fieldSeparator;\n  value = value || new _immutable[\"default\"].Map();\n\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new _immutable[\"default\"].Map()); // defaults\n\n  var funcConfig = funcKey && (0, _configUtils.getFuncConfig)(config, funcKey);\n\n  if (funcConfig) {\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          defaultValue = argConfig.defaultValue;\n      var firstValueSrc = valueSources.length ? valueSources[0] : undefined;\n      var defaultValueSrc = defaultValue ? isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\" : undefined;\n      var argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nexports.setFunc = setFunc;\n\nvar getDefaultArgValue = function getDefaultArgValue(_ref) {\n  var value = _ref.defaultValue;\n\n  if (isObject(value) && !_immutable[\"default\"].Map.isMap(value) && value.func) {\n    return _immutable[\"default\"].fromJS(value, function (k, v) {\n      return _immutable[\"default\"].Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\n\n\nvar setArgValue = function setArgValue(value, argKey, argVal, argConfig) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal); // set default arg value sorce\n\n    var argDefaultValueSrc = argConfig.valueSources.length == 1 ? argConfig.valueSources[0] : undefined;\n\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\n\n\nexports.setArgValue = setArgValue;\n\nvar setArgValueSrc = function setArgValueSrc(value, argKey, argValSrc, argConfig) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new _immutable[\"default\"].Map({\n      valueSrc: argValSrc\n    }));\n  }\n\n  return value;\n};\n\nexports.setArgValueSrc = setArgValueSrc;"]},"metadata":{},"sourceType":"script"}