{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\components\\\\custom-accordion\\\\filter-accordion.component.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Accordion, Card, useAccordionToggle } from \"react-bootstrap\";\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles'; // import classNames from 'classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nconst CustomToggle = ({\n  children,\n  eventKey,\n  callback\n}) => {\n  const currentEventKey = React.useContext(AccordionContext);\n  const decoratedOnClick = useAccordionToggle(eventKey, () => callback && callback(eventKey));\n  const isCurrentEventKey = currentEventKey === eventKey;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\" // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\n    // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\n    ,\n    onClick: decoratedOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children, isCurrentEventKey ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 69\n    }\n  }));\n};\n\nconst FilterAccordion = props => {\n  return /*#__PURE__*/React.createElement(AtAccordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.filterComponent.map((filterComponent, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CustomToggle, {\n      eventKey: String(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, props.intl.formatMessage({\n      id: Object.keys(filterComponent)[0]\n    })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: String(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"filter-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, Object.values(filterComponent)[0])));\n  }))));\n};\n\nexport default injectIntl(FilterAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/components/custom-accordion/filter-accordion.component.jsx"],"names":["React","injectIntl","Accordion","Card","useAccordionToggle","AccordionContext","AtAccordion","FontAwesomeIcon","faChevronUp","faChevronDown","CustomToggle","children","eventKey","callback","currentEventKey","useContext","decoratedOnClick","isCurrentEventKey","FilterAccordion","props","className","filterComponent","map","index","String","intl","formatMessage","id","Object","keys","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,kBAA1B,QAAoD,iBAApD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,WAAT,QAA4B,6CAA5B,C,CACA;;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,aAAT,QAA8B,mCAA9B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACzD,QAAMC,eAAe,GAAGd,KAAK,CAACe,UAAN,CAAiBV,gBAAjB,CAAxB;AAEA,QAAMW,gBAAgB,GAAGZ,kBAAkB,CACzCQ,QADyC,EAEzC,MAAMC,QAAQ,IAAIA,QAAQ,CAACD,QAAD,CAFe,CAA3C;AAKA,QAAMK,iBAAiB,GAAGH,eAAe,KAAKF,QAA9C;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,gCADZ,CAEE;AACA;AAHF;AAIE,IAAA,OAAO,EAAEI,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,QALH,EAMGM,iBAAiB,gBAAG,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAET,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA4C,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANhE,CADF;AAUD,CApBD;;AAsBA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAEjC,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAgC,IAAA,SAAS,EAAEA,KAAK,CAACC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,eAAN,CAAsBC,GAAtB,CAA0B,CAACD,eAAD,EAAkBE,KAAlB,KAA4B;AACrD,wBAAQ,uDACN,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEC,MAAM,CAACD,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEC,MAAM,CAACC,IAAP,CAAYR,eAAZ,EAA6B,CAA7B;AAAN,KAAzB,CADH,CADF,CADF,CADM,eAQN,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEG,MAAM,CAACD,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,MAAM,CAACE,MAAP,CAAcT,eAAd,EAA+B,CAA/B,CADH,CADF,CARM,CAAR;AAcD,GAfA,CADH,CADF,CADF,CADF;AAyBD,CA3BD;;AA6BA,eAAepB,UAAU,CAACiB,eAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Accordion, Card, useAccordionToggle } from \"react-bootstrap\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\r\n// import classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToggle = ({ children, eventKey, callback }) => {\r\n  const currentEventKey = React.useContext(AccordionContext);\r\n\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey)\r\n  );\r\n\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-between\"\r\n      // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\r\n      // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\r\n      onClick={decoratedOnClick}>\r\n      {children}\r\n      {isCurrentEventKey ? <FontAwesomeIcon icon={faChevronUp} /> : <FontAwesomeIcon icon={faChevronDown} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FilterAccordion = (props) => {\r\n\r\n  return (\r\n    <AtAccordion>\r\n      <Accordion defaultActiveKey=\"0\" className={props.className}>\r\n        <Card>\r\n          {props.filterComponent.map((filterComponent, index) => {\r\n            return (<>\r\n              <Card.Header>\r\n                <CustomToggle eventKey={String(index)}>\r\n                  <Card.Title >\r\n                    {props.intl.formatMessage({ id: Object.keys(filterComponent)[0] })}\r\n                  </Card.Title>\r\n                </CustomToggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey={String(index)}>\r\n                <Card.Body className='filter-wrap'>\r\n                  {Object.values(filterComponent)[0]}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </>)\r\n          })}\r\n        </Card>\r\n\r\n      </Accordion>\r\n    </AtAccordion>\r\n  )\r\n}\r\n\r\nexport default injectIntl(FilterAccordion);"]},"metadata":{},"sourceType":"module"}