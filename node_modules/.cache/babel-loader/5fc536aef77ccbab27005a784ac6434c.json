{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddSubCodedResult.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component'; //import { Col, Row } from 'react-bootstrap';\n\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Col } from 'react-bootstrap';\n\nconst AddSubCodedResult = props => {\n  const {\n    needCodedResult,\n    needActualResult,\n    grade\n  } = props.parameterData;\n  const testMethodColumnList = [{\n    \"idsName\": \"IDS_METHOD\",\n    \"dataField\": \"smethodname\",\n    \"width\": \"200px\"\n  }];\n  return /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"ssubcodedresult\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SUBCODEDRESULT\"\n    }),\n    type: \"text\",\n    required: !needCodedResult,\n    isMandatory: needCodedResult ? \"\" : \"*\",\n    isDisabled: needCodedResult,\n    value: props.selectedRecord && props.selectedRecord[\"ssubcodedresult\"] ? props.selectedRecord[\"ssubcodedresult\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SUBCODEDRESULT\"\n    }) //onChange = { (event) => props.onInputOnChange(event, 1) }\n    ,\n    onChange: event => props.onInputOnChange(event, 1),\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default injectIntl(AddSubCodedResult);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/testmanagement/AddSubCodedResult.jsx"],"names":["React","FormSelectSearch","FormInput","injectIntl","FormattedMessage","Col","AddSubCodedResult","props","needCodedResult","needActualResult","grade","parameterData","testMethodColumnList","intl","formatMessage","id","selectedRecord","event","onInputOnChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,EAAoBC,gBAApB,QAA4C,YAA5C;AACA,SAASC,GAAT,QAAmB,iBAAnB;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,gBAAnB;AAAqCC,IAAAA;AAArC,MAA+CH,KAAK,CAACI,aAA3D;AACA,QAAMC,oBAAoB,GAAG,CACzB;AAAC,eAAU,YAAX;AAAwB,iBAAY,aAApC;AAAkD,aAAQ;AAA1D,GADyB,CAA7B;AAEA,sBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,KAAK,EAAEL,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAE,CAACP,eAJf;AAKI,IAAA,WAAW,EAAEA,eAAe,GAAG,EAAH,GAAQ,GALxC;AAMI,IAAA,UAAU,EAAEA,eANhB;AAOI,IAAA,KAAK,EAAED,KAAK,CAACS,cAAN,IAAwBT,KAAK,CAACS,cAAN,CAAqB,iBAArB,CAAxB,GAAkET,KAAK,CAACS,cAAN,CAAqB,iBAArB,CAAlE,GAA4G,EAPvH;AAQI,IAAA,WAAW,EAAET,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CARjB,CASI;AATJ;AAUI,IAAA,QAAQ,EAAGE,KAAD,IAAWV,KAAK,CAACW,eAAN,CAAsBD,KAAtB,EAA6B,CAA7B,CAVzB;AAWI,IAAA,SAAS,EAAE,GAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAqBH,CAzBD;;AA2BA,eAAed,UAAU,CAACG,iBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n//import { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport { Col} from 'react-bootstrap';\r\nconst AddSubCodedResult = (props) => {\r\n    const { needCodedResult, needActualResult, grade } = props.parameterData;\r\n    const testMethodColumnList = [\r\n        {\"idsName\":\"IDS_METHOD\",\"dataField\":\"smethodname\",\"width\":\"200px\"}    ];\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormInput\r\n                name=\"ssubcodedresult\"\r\n                label={props.intl.formatMessage({ id: \"IDS_SUBCODEDRESULT\" })}\r\n                type=\"text\"\r\n                required={!needCodedResult}\r\n                isMandatory={needCodedResult ? \"\" : \"*\"}\r\n                isDisabled={needCodedResult}\r\n                value={props.selectedRecord && props.selectedRecord[\"ssubcodedresult\"] ? props.selectedRecord[\"ssubcodedresult\"] : \"\"}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SUBCODEDRESULT\" })}\r\n                //onChange = { (event) => props.onInputOnChange(event, 1) }\r\n                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                maxLength={100}\r\n            />\r\n        </Col>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddSubCodedResult);"]},"metadata":{},"sourceType":"module"}