{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\MISRightsTab.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport MISRightsTabs from './MISRightsTabs';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport AddDashBoardRights from './AddDashBoardRights';\nimport AddReportRights from './AddReportRights';\nimport { showEsign } from '../../components/CommonScript';\nimport { transactionStatus } from '../../components/Enumeration';\nimport AddAlertRights from './AddAlertRights';\nimport AddDashBoardHomeRights from './AddDashBoardHomeRights';\nimport AddAlertHomeRights from './AddAlertHomeRights';\n\nclass MISRightsTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.tabDetail = () => {\n      const addDashBoardId = this.props.controlMap.has(\"AddDashBoardRights\") && this.props.controlMap.get(\"AddDashBoardRights\").ncontrolcode;\n      const deleteDashBoardId = this.props.controlMap.has(\"DeleteDashBoardRights\") && this.props.controlMap.get(\"DeleteDashBoardRights\").ncontrolcode;\n      const addReportId = this.props.controlMap.has(\"AddReportRights\") && this.props.controlMap.get(\"AddReportRights\").ncontrolcode;\n      const deleteReportId = this.props.controlMap.has(\"DeleteReportRights\") && this.props.controlMap.get(\"DeleteReportRights\").ncontrolcode;\n      const addAlertId = this.props.controlMap.has(\"AddAlertRights\") && this.props.controlMap.get(\"AddAlertRights\").ncontrolcode;\n      const deleteAlertId = this.props.controlMap.has(\"DeleteAlertRights\") && this.props.controlMap.get(\"DeleteAlertRights\").ncontrolcode;\n      const addHomeId = this.props.controlMap.has(\"AddHomeRights\") && this.props.controlMap.get(\"AddHomeRights\").ncontrolcode;\n      const deleteHomeId = this.props.controlMap.has(\"DeleteHomeRights\") && this.props.controlMap.get(\"DeleteHomeRights\").ncontrolcode;\n      const addAlertHomeId = this.props.controlMap.has(\"AddAlertHomeRights\") && this.props.controlMap.get(\"AddAlertHomeRights\").ncontrolcode;\n      const deleteAlertHomeId = this.props.controlMap.has(\"DeleteAlertHomeRights\") && this.props.controlMap.get(\"DeleteAlertHomeRights\").ncontrolcode;\n      const dboardAddParam = {\n        screenName: \"IDS_DASHBOARDRIGHTS\",\n        operation: \"create\",\n        primaryKeyField: \"ndashboardtranscode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addDashBoardId\n      };\n      const dboardDeleteParam = {\n        screenName: \"IDS_DASHBOARDRIGHTS\",\n        methodUrl: \"DashBoardRights\",\n        operation: \"delete\",\n        ncontrolCode: deleteDashBoardId\n      };\n      const reportAddParam = {\n        screenName: \"IDS_REPORTRIGHTS\",\n        operation: \"create\",\n        primaryKeyField: \"nmaterialcatcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addReportId\n      };\n      const reportDeleteParam = {\n        screenName: \"IDS_REPORTRIGHTS\",\n        methodUrl: \"ReportRights\",\n        operation: \"delete\",\n        ncontrolCode: deleteReportId\n      };\n      const alertAddParam = {\n        screenName: \"IDS_ALERTRIGHTS\",\n        operation: \"create\",\n        primaryKeyField: \"nalertrightscode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addAlertId\n      };\n      const alertHomeAddParam = {\n        screenName: \"IDS_ALERTHOMERIGHTS\",\n        operation: \"create\",\n        primaryKeyField: \"nalerthomerightscode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addAlertHomeId\n      };\n      const homeAddParam = {\n        screenName: \"IDS_DASHBOARDHOMERIGHTS\",\n        operation: \"create\",\n        primaryKeyField: \"ndashboardhomerightscode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addHomeId\n      };\n      const homeDeleteParam = {\n        screenName: \"IDS_DASHBOARDHOMERIGHTS\",\n        methodUrl: \"HomeRights\",\n        operation: \"delete\",\n        ncontrolCode: deleteHomeId\n      };\n      const alertDeleteParam = {\n        screenName: \"IDS_ALERTRIGHTS\",\n        methodUrl: \"AlertRights\",\n        operation: \"delete\",\n        ncontrolCode: deleteAlertId\n      };\n      const alertHomeDeleteParam = {\n        screenName: \"IDS_ALERTHOMERIGHTS\",\n        methodUrl: \"AlertHomeRights\",\n        operation: \"delete\",\n        ncontrolCode: deleteAlertHomeId\n      };\n      const tabMap = new Map();\n      tabMap.set(\"IDS_REPORTRIGHTS\", /*#__PURE__*/React.createElement(MISRightsTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addReportId,\n        addParam: reportAddParam,\n        comboDataService: this.props.getReportRightsComboDataService,\n        addTitleIDS: \"IDS_REPORTRIGHTS\",\n        addTitleDefaultMsg: 'Report Rights',\n        primaryKeyField: \"nreportrightscode\",\n        masterData: this.props.masterData,\n        primaryList: \"ReportRights\",\n        dataResult: process(this.props.masterData[\"ReportRights\"], this.state.dataStateReports) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"IDS_REPORTRIGHTS\" ? this.state.dataStateReports : {\n          skip: 0,\n          take: 5\n        },\n        dataStateChange: event => this.setState({\n          dataStateReports: event.dataState\n        }),\n        columnList: this.extractedReportList,\n        methodUrl: \"ReportRights\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: reportDeleteParam,\n        selectedId: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 40\n        }\n      }));\n      tabMap.set(\"IDS_DASHBOARDRIGHTS\", /*#__PURE__*/React.createElement(MISRightsTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addDashBoardId,\n        addParam: dboardAddParam,\n        comboDataService: this.props.getDashBoardRightsComboDataService,\n        addTitleIDS: \"IDS_DASHBOARDRIGHTS\",\n        addTitleDefaultMsg: 'DashBoard Rights',\n        primaryKeyField: \"ndashboardtypecode\",\n        masterData: this.props.masterData,\n        primaryList: \"DashBoardType\",\n        dataResult: process(this.props.masterData[\"DashBoardRights\"], this.state.dataState) // dataState={this.state.dataState}\n        // dataStateChange={this.supplierDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"IDS_DASHBOARDRIGHTS\" ? this.state.dataState : {\n          skip: 0,\n          take: 5\n        },\n        dataStateChange: event => this.setState({\n          dataState: event.dataState\n        }),\n        columnList: this.extractedDashBoardColumnList,\n        methodUrl: \"DashBoardRights\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: dboardDeleteParam,\n        selectedId: 0,\n        onChangeHomeChart: this.onChangeHomeChart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 43\n        }\n      }));\n      tabMap.set(\"IDS_DASHBOARDHOMERIGHTS\", /*#__PURE__*/React.createElement(MISRightsTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addHomeId,\n        addParam: homeAddParam,\n        comboDataService: this.props.getHomeRightsComboDataService,\n        addTitleIDS: \"IDS_DASHBOARDHOMERIGHTS\",\n        addTitleDefaultMsg: 'DashBoard Home Rights',\n        primaryKeyField: \"ndashboardhomerightscode\",\n        masterData: this.props.masterData,\n        primaryList: \"HomeRights\",\n        dataResult: process(this.props.masterData[\"HomeRights\"], this.state.dataStateHome) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\" ? this.state.dataStateHome : {\n          skip: 0,\n          take: 5\n        },\n        dataStateChange: event => this.setState({\n          dataStateHome: event.dataState\n        }),\n        columnList: this.extractedHomeList,\n        methodUrl: \"HomeRights\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: homeDeleteParam,\n        selectedId: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 47\n        }\n      }));\n      tabMap.set(\"IDS_ALERTRIGHTS\", /*#__PURE__*/React.createElement(MISRightsTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addAlertId,\n        addParam: alertAddParam,\n        comboDataService: this.props.getAlertRightsComboDataService,\n        addTitleIDS: \"IDS_ALERTRIGHTS\",\n        addTitleDefaultMsg: 'Alert Rights',\n        primaryKeyField: \"nalertrightscode\",\n        masterData: this.props.masterData,\n        primaryList: \"AlertRights\",\n        dataResult: process(this.props.masterData[\"AlertRights\"], this.state.dataStateAlert) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"IDS_ALERTRIGHTS\" ? this.state.dataStateAlert : {\n          skip: 0,\n          take: 5\n        },\n        dataStateChange: event => this.setState({\n          dataStateAlert: event.dataState\n        }),\n        columnList: this.extractedAlertList,\n        methodUrl: \"AlertRights\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: alertDeleteParam,\n        selectedId: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 39\n        }\n      }));\n      tabMap.set(\"IDS_ALERTHOMERIGHTS\", /*#__PURE__*/React.createElement(MISRightsTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addAlertHomeId,\n        addParam: alertHomeAddParam,\n        comboDataService: this.props.getAlertHomeRightsComboDataService,\n        addTitleIDS: \"IDS_ALERTHOMERIGHTS\",\n        addTitleDefaultMsg: 'AlertHome Rights',\n        primaryKeyField: \"nalerthomerightscode\",\n        masterData: this.props.masterData,\n        primaryList: \"AlertHomeRights\",\n        dataResult: process(this.props.masterData[\"AlertHomeRights\"], this.state.dataStateAlertHomeRights) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"IDS_ALERTHOMERIGHTS\" ? this.state.dataStateAlertHomeRights : {\n          skip: 0,\n          take: 5\n        },\n        dataStateChange: event => this.setState({\n          dataStateAlertHomeRights: event.dataState\n        }),\n        columnList: this.extractedAlertHomeList,\n        methodUrl: \"AlertHomeRights\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: alertHomeDeleteParam,\n        selectedId: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 43\n        }\n      }));\n      return tabMap;\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord;\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openChildModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n\n      if (fieldName === \"ndashboardtypecode\") {\n        let selectedDashBoardRights = comboData;\n        let listDashBoard = [];\n        selectedRecord.ndashboardtypecode.map(item => {\n          listDashBoard.push(item.item);\n          return listDashBoard;\n        });\n        this.setState({\n          selectedRecord,\n          selectedDashBoardRights,\n          listDashBoard\n        });\n      }\n\n      if (fieldName === \"nreportcode\") {\n        let selectedReportRights = comboData;\n        let listReport = [];\n        selectedRecord.nreportcode.map(item => {\n          listReport.push(item.item);\n          return listReport;\n        });\n        this.setState({\n          selectedRecord,\n          selectedReportRights,\n          listReport\n        });\n      }\n\n      if (fieldName === \"nsqlquerycode\") {\n        let listAlert = [];\n        let selectedAlertRights = comboData;\n        selectedRecord.nsqlquerycode.map(item => {\n          listAlert.push(item.item);\n          return listAlert;\n        });\n        this.setState({\n          selectedRecord,\n          selectedAlertRights,\n          listAlert\n        });\n      }\n\n      if (fieldName === \"nalerthomerightscode\") {\n        let listAlertHome = [];\n        let selectedAlertHomeRights = comboData;\n        selectedRecord.nalerthomerightscode.map(item => {\n          listAlertHome.push(item.item);\n          return listAlertHome;\n        });\n        this.setState({\n          selectedRecord,\n          selectedAlertHomeRights,\n          listAlertHome\n        });\n      }\n\n      if (fieldName === \"ndashboardhomeprioritycode\") {\n        let selectedHomeRights = comboData;\n        let listHome = [];\n        selectedRecord.ndashboardhomeprioritycode.map(item => {\n          listHome.push(item.item);\n          return listHome;\n        });\n        this.setState({\n          selectedRecord,\n          selectedHomeRights,\n          listHome\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit  \n      let inputParam = {};\n\n      if (this.props.screenName === \"IDS_DASHBOARDRIGHTS\") {\n        inputParam = this.saveDashBoardRights(saveType, formRef);\n      } else if (this.props.screenName === \"IDS_REPORTRIGHTS\") {\n        inputParam = this.saveReportRights(saveType, formRef);\n      } else if (this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\") {\n        inputParam = this.saveHomeRights(saveType, formRef);\n      } else if (this.props.screenName === \"IDS_ALERTHOMERIGHTS\") {\n        inputParam = this.saveAlertHomeRights(saveType, formRef);\n      } else {\n        inputParam = this.saveAlertRights(saveType, formRef);\n      }\n\n      if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: { ...this.props.masterData,\n                updateDataState: true\n              }\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, { ...this.props.masterData,\n          updateDataState: true\n        }, \"openChildModal\");\n      }\n    };\n\n    this.onChangeHomeChart = (event, rowItem, columnName, rowIndex, saveType) => {\n      const selectedRecord = rowItem || {};\n      selectedRecord[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      this.saveHomeChart(selectedRecord, saveType);\n    };\n\n    this.saveHomeChart = (selectedRecord, saveType) => {\n      let operation = \"create\";\n      let dataState = {\n        skip: 0,\n        take: 5\n      };\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.userInfo;\n      inputData[\"UserRole\"] = this.props.masterData.SelectedMIS;\n      inputData[\"homechart\"] = selectedRecord;\n      inputData[\"nhomechartview\"] = selectedRecord[\"nhomechartview\"];\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"HomeChart\",\n        inputData: inputData,\n        operation: operation,\n        saveType,\n        searchRef: this.props.searchRef,\n        dataState\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n    };\n\n    this.deleteAlertRights = param => {\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"AlertRights\",\n        inputData: {\n          \"alertrights\": param.selectedRecord,\n          \"userinfo\": this.props.userInfo\n        },\n        operation: param.operation,\n        dataState: this.state.dataStateAlert,\n        searchRef: this.props.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.deleteAlertHomeRights = param => {\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"AlertHomeRights\",\n        inputData: {\n          \"alerthomerights\": param.selectedRecord,\n          \"userinfo\": this.props.userInfo\n        },\n        operation: param.operation,\n        dataState: this.state.dataStateAlertHomeRIghts,\n        searchRef: this.props.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.deleteHomeRights = param => {\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"HomeRights\",\n        inputData: {\n          \"homeRights\": param.selectedRecord,\n          \"userinfo\": this.props.userInfo\n        },\n        operation: param.operation,\n        dataState: this.state.dataState,\n        searchRef: this.props.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.deleteReportRights = param => {\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"ReportRights\",\n        inputData: {\n          \"reportrights\": param.selectedRecord,\n          \"userinfo\": this.props.userInfo\n        },\n        operation: param.operation,\n        dataState: this.state.dataStateReports,\n        searchRef: this.props.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.deleteDashBoardRights = param => {\n      const inputParam = {\n        classUrl: \"misrights\",\n        methodUrl: \"DashBoardRights\",\n        inputData: {\n          \"dashboardrights\": param.selectedRecord,\n          \"userinfo\": this.props.userInfo\n        },\n        operation: param.operation,\n        dataState: this.state.dataState,\n        searchRef: this.props.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.deleteRecord = param => {\n      let inputParam = {};\n\n      if (param.screenName === 'IDS_DASHBOARDRIGHTS') {\n        inputParam = this.deleteDashBoardRights(param);\n      } else if (param.screenName === 'IDS_REPORTRIGHTS') {\n        inputParam = this.deleteReportRights(param);\n      } else if (param.screenName === 'IDS_DASHBOARDHOMERIGHTS') {\n        inputParam = this.deleteHomeRights(param);\n      } else if (param.screenName === 'IDS_ALERTHOMERIGHTS') {\n        inputParam = this.deleteAlertHomeRights(param);\n      } else {\n        inputParam = this.deleteAlertRights(param);\n      }\n\n      if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, param.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: { ...this.props.masterData,\n                updateDataState: false\n              }\n            },\n            openChildModal: true,\n            screenName: param.screenName,\n            operation: param.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, { ...this.props.masterData,\n          updateDataState: false\n        }, \"openChildModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    this.extractedReportList = [{\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_REPORTNAME\",\n      \"dataField\": \"sreportname\",\n      \"width\": \"200px\"\n    }];\n    this.extractedAlertList = [{\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_ALERTNAME\",\n      \"dataField\": \"sscreenheader\",\n      \"width\": \"200px\"\n    }];\n    this.extractedHomeList = [{\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_PAGES\",\n      \"dataField\": \"sdashboardhomepagename\",\n      \"width\": \"200px\"\n    }];\n    this.extractedDashBoardColumnList = [{\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_DASHBOARDNAME\",\n      \"dataField\": \"sdashboardtypename\",\n      \"width\": \"150px\"\n    }];\n    this.extractedAlertHomeList = [{\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_ALERTNAME\",\n      \"dataField\": \"sscreenheader\",\n      \"width\": \"200px\"\n    }];\n    const _dataState = {\n      skip: 0,\n      take: 5\n    };\n    const dataStateReports = {\n      skip: 0,\n      take: 5\n    };\n    const dataStateAlert = {\n      skip: 0,\n      take: 5\n    };\n    const dataStateHome = {\n      skip: 0,\n      take: 5\n    };\n    const dataStateAlertHomeRIghts = {\n      skip: 0,\n      take: 5\n    };\n    this.state = {\n      isOpen: false,\n      activeTab: 'IDS_DASHBOARDRIGHTS-tab',\n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState,\n      dataStateReports: dataStateReports,\n      dataStateAlert: dataStateAlert,\n      dataStateHome: dataStateHome,\n      dataStateAlertHomeRights: dataStateAlertHomeRIghts,\n      listReport: [],\n      listDashBoard: [],\n      listAlert: [],\n      listHome: [],\n      lstAlertHomeRIghts: []\n    }; //this.onMultiColumnValue = this.onMultiColumnValue.bind(this);\n    // this.ProductmaholderFieldList = ['sdashboardtypename']\n  }\n\n  render() {\n    const mandatoryFieldsDB = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_DASHBOARDTYPENAME\",\n      \"dataField\": \"ndashboardtypecode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFieldsRR = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_REPORTNAME\",\n      \"dataField\": \"nreportcode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFieldsAR = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_ALERTNAME\",\n      \"dataField\": \"nsqlquerycode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFieldsHR = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_PAGES\",\n      \"dataField\": \"ndashboardhomeprioritycode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFieldsAHR = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_ALERTNAME\",\n      \"dataField\": \"nalerthomerightscode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.props.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    })))), this.props.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.onSaveClick,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.screenName === \"IDS_DASHBOARDRIGHTS\" ? mandatoryFieldsDB : this.props.screenName === \"IDS_REPORTRIGHTS\" ? mandatoryFieldsRR : this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\" ? mandatoryFieldsHR : this.props.screenName === \"IDS_ALERTHOMERIGHTS\" ? mandatoryFieldsAHR : mandatoryFieldsAR,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"IDS_DASHBOARDRIGHTS\" ? /*#__PURE__*/React.createElement(AddDashBoardRights, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        selectedDashBoardRights: this.props.masterData.selectedDashBoardRights,\n        DashBoardType: this.props.DashBoardType || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }) : this.props.screenName === \"IDS_REPORTRIGHTS\" ? /*#__PURE__*/React.createElement(AddReportRights, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedReportRights: this.props.masterData.selectedReportRights,\n        Reports: this.props.Reports,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 82\n        }\n      }) : this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\" ? /*#__PURE__*/React.createElement(AddDashBoardHomeRights, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedHomeRights: this.props.masterData.selectedHomeRights,\n        HomeRights: this.props.HomeRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }) : this.props.screenName === \"IDS_ALERTHOMERIGHTS\" ? /*#__PURE__*/React.createElement(AddAlertHomeRights, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedAlertHomeRights: this.props.masterData.selectedAlertHomeRights,\n        AlertHomeRights: this.props.AlertHomeRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(AddAlertRights, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedAlertRights: this.props.masterData.selectedAlertRights,\n        Alert: this.props.Alert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      isOpen,\n      activeTab,\n      selectedRecord,\n      dataState,\n      dataStateAlert,\n      dataStateHome,\n      dataStateReports,\n      dataStateAlertHomeRights\n    } = this.state;\n    let updateState = false;\n\n    if (this.props.masterData !== previousProps.masterData) {\n      isOpen = false;\n\n      if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\n        isOpen = true;\n      }\n\n      updateState = true;\n      activeTab = 'IDS_REPORTRIGHTS-tab';\n\n      if (this.props.masterData.DashBoardRights && this.props.masterData.DashBoardRights.length < dataState.skip) {\n        dataState = {\n          skip: 0,\n          take: 5\n        };\n      }\n\n      if (this.props.masterData.AlertRights && this.props.masterData.AlertRights.length < dataStateAlert.skip) {\n        dataStateAlert = {\n          skip: 0,\n          take: 5\n        };\n      }\n\n      if (this.props.masterData.HomeRights && this.props.masterData.HomeRights.length < dataStateHome.skip) {\n        dataStateHome = {\n          skip: 0,\n          take: 5\n        };\n      }\n\n      if (this.props.masterData.ReportRights && this.props.masterData.ReportRights.length < dataStateReports.skip) {\n        dataStateReports = {\n          skip: 0,\n          take: 5\n        };\n      }\n\n      if (this.props.masterData.AlertHomeRights && this.props.masterData.AlertHomeRights.length < dataStateAlertHomeRights.skip) {\n        dataStateAlertHomeRights = {\n          skip: 0,\n          take: 5\n        };\n      }\n    }\n\n    if (this.props.selectedRecord !== previousProps.selectedRecord) {\n      selectedRecord = this.props.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.updateDataState && this.props.updateDataState !== previousProps.updateDataState) {\n      updateState = true;\n      dataState = {\n        skip: 0,\n        take: 5\n      };\n      dataStateAlert = {\n        skip: 0,\n        take: 5\n      };\n      dataStateHome = {\n        skip: 0,\n        take: 5\n      };\n      dataStateReports = {\n        skip: 0,\n        take: 5\n      };\n      dataStateAlertHomeRights = {\n        skip: 0,\n        take: 5\n      };\n    }\n\n    if (updateState) {\n      this.setState({\n        isOpen,\n        activeTab,\n        selectedRecord,\n        dataState,\n        dataStateAlert,\n        dataStateHome,\n        dataStateReports,\n        dataStateAlertHomeRights\n      });\n    }\n  }\n\n  saveDashBoardRights(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    let dataState = {\n      skip: 0,\n      take: 5\n    };\n    inputData['dashboardrights'] = this.state.listDashBoard;\n    const inputParam = {\n      classUrl: \"misrights\",\n      methodUrl: \"DashBoardRights\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState,\n      searchRef: this.props.searchRef\n    };\n    return inputParam;\n  }\n\n  saveHomeRights(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    let dataState = {\n      skip: 0,\n      take: 5\n    };\n    inputData['homeRights'] = this.state.listHome;\n    const inputParam = {\n      classUrl: \"misrights\",\n      methodUrl: \"HomeRights\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState,\n      searchRef: this.props.searchRef\n    };\n    return inputParam;\n  }\n\n  saveAlertRights(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    let dataState = {\n      skip: 0,\n      take: 5\n    };\n    inputData['alertrights'] = this.state.listAlert;\n    const inputParam = {\n      classUrl: \"misrights\",\n      methodUrl: \"AlertRights\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState,\n      searchRef: this.props.searchRef\n    };\n    return inputParam;\n  }\n\n  saveAlertHomeRights(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    let dataState = {\n      skip: 0,\n      take: 5\n    };\n    inputData['alerthomerights'] = this.state.listAlertHome;\n    const inputParam = {\n      classUrl: \"misrights\",\n      methodUrl: \"AlertHomeRights\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState,\n      searchRef: this.props.searchRef\n    };\n    return inputParam;\n  }\n\n  saveReportRights(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"report\"] = {};\n    let dataStateReports = undefined;\n    inputData['reportrights'] = this.state.listReport;\n    const inputParam = {\n      classUrl: \"misrights\",\n      methodUrl: \"ReportRights\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataStateReports,\n      searchRef: this.props.searchRef\n    };\n    return inputParam;\n  }\n\n}\n\nexport default injectIntl(MISRightsTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/credentialmanagement/MISRightsTab.jsx"],"names":["React","Component","Row","Col","Card","injectIntl","process","DEFAULT_RETURN","MISRightsTabs","CustomTabs","SlideOutModal","Esign","AddDashBoardRights","AddReportRights","showEsign","transactionStatus","AddAlertRights","AddDashBoardHomeRights","AddAlertHomeRights","MISRightsTab","constructor","props","dataStateChange","event","setState","dataState","tabDetail","addDashBoardId","controlMap","has","get","ncontrolcode","deleteDashBoardId","addReportId","deleteReportId","addAlertId","deleteAlertId","addHomeId","deleteHomeId","addAlertHomeId","deleteAlertHomeId","dboardAddParam","screenName","operation","primaryKeyField","masterData","userInfo","ncontrolCode","dboardDeleteParam","methodUrl","reportAddParam","reportDeleteParam","alertAddParam","alertHomeAddParam","homeAddParam","homeDeleteParam","alertDeleteParam","alertHomeDeleteParam","tabMap","Map","set","userRoleControlRights","inputParam","getReportRightsComboDataService","state","dataStateReports","undefined","skip","take","extractedReportList","deleteRecord","getDashBoardRightsComboDataService","extractedDashBoardColumnList","onChangeHomeChart","getHomeRightsComboDataService","dataStateHome","extractedHomeList","getAlertRightsComboDataService","dataStateAlert","extractedAlertList","getAlertHomeRightsComboDataService","dataStateAlertHomeRights","extractedAlertHomeList","closeModal","loadEsign","openChildModal","selectedRecord","updateInfo","typeName","data","updateStore","onComboChange","comboData","fieldName","selectedDashBoardRights","listDashBoard","ndashboardtypecode","map","item","push","selectedReportRights","listReport","nreportcode","listAlert","selectedAlertRights","nsqlquerycode","listAlertHome","selectedAlertHomeRights","nalerthomerightscode","selectedHomeRights","listHome","ndashboardhomeprioritycode","onInputOnChange","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","value","onSaveClick","saveType","formRef","saveDashBoardRights","saveReportRights","saveHomeRights","saveAlertHomeRights","saveAlertRights","esignRights","nformcode","screenData","updateDataState","crudMaster","rowItem","columnName","rowIndex","saveHomeChart","inputData","SelectedMIS","classUrl","searchRef","deleteAlertRights","param","deleteAlertHomeRights","dataStateAlertHomeRIghts","deleteHomeRights","deleteReportRights","deleteDashBoardRights","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","validateEsignCredential","isOpen","activeTab","dataResult","lstAlertHomeRIghts","render","mandatoryFieldsDB","mandatoryFieldsRR","mandatoryFieldsAR","mandatoryFieldsHR","mandatoryFieldsAHR","onTabChange","DashBoardType","Reports","HomeRights","AlertHomeRights","Alert","componentDidUpdate","previousProps","updateState","errorCode","DashBoardRights","length","AlertRights","ReportRights"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport MISRightsTabs from './MISRightsTabs'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddDashBoardRights from './AddDashBoardRights';\r\nimport AddReportRights from './AddReportRights';\r\nimport { showEsign } from '../../components/CommonScript';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport AddAlertRights from './AddAlertRights';\r\nimport AddDashBoardHomeRights from './AddDashBoardHomeRights';\r\nimport AddAlertHomeRights from './AddAlertHomeRights';\r\n\r\n\r\nclass MISRightsTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 5,\r\n        };\r\n\r\n        const dataStateReports = {\r\n            skip: 0,\r\n            take: 5,\r\n        };\r\n        const dataStateAlert = {\r\n            skip: 0,\r\n            take: 5,\r\n        };\r\n\r\n        const dataStateHome = {\r\n            skip: 0,\r\n            take: 5,\r\n        };\r\n\r\n        const dataStateAlertHomeRIghts = {\r\n            skip: 0,\r\n            take: 5,\r\n        };\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            activeTab: 'IDS_DASHBOARDRIGHTS-tab',\r\n            selectedRecord: {}, dataResult: [],\r\n            dataState: dataState,\r\n            dataStateReports: dataStateReports,\r\n            dataStateAlert: dataStateAlert,\r\n            dataStateHome: dataStateHome,\r\n            dataStateAlertHomeRights: dataStateAlertHomeRIghts,\r\n            listReport: [],\r\n            listDashBoard: [],\r\n            listAlert: [], listHome: [],lstAlertHomeRIghts:[]\r\n        };\r\n        //this.onMultiColumnValue = this.onMultiColumnValue.bind(this);\r\n        // this.ProductmaholderFieldList = ['sdashboardtypename']\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const mandatoryFieldsDB = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_DASHBOARDTYPENAME\", \"dataField\": \"ndashboardtypecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsRR = [{ \"mandatory\": true, \"idsName\": \"IDS_REPORTNAME\", \"dataField\": \"nreportcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsAR = [{ \"mandatory\": true, \"idsName\": \"IDS_ALERTNAME\", \"dataField\": \"nsqlquerycode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsHR = [{ \"mandatory\": true, \"idsName\": \"IDS_PAGES\", \"dataField\": \"ndashboardhomeprioritycode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsAHR = [{ \"mandatory\": true, \"idsName\": \"IDS_ALERTNAME\", \"dataField\": \"nalerthomerightscode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n    ];\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card className=\"at-tabs\">\r\n                            <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.props.onTabChange} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.screenName === \"IDS_DASHBOARDRIGHTS\" ? \r\n                        mandatoryFieldsDB : this.props.screenName === \"IDS_REPORTRIGHTS\" ?\r\n                         mandatoryFieldsRR : this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\" ?\r\n                          mandatoryFieldsHR : this.props.screenName === \"IDS_ALERTHOMERIGHTS\" ?\r\n                          mandatoryFieldsAHR: mandatoryFieldsAR}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"IDS_DASHBOARDRIGHTS\" ?\r\n                                <AddDashBoardRights selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    selectedDashBoardRights={this.props.masterData.selectedDashBoardRights}\r\n                                    DashBoardType={this.props.DashBoardType || []}\r\n                                />\r\n                                : this.props.screenName === \"IDS_REPORTRIGHTS\" ? <AddReportRights selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    operation={this.props.operation}\r\n                                    selectedReportRights={this.props.masterData.selectedReportRights}\r\n                                    Reports={this.props.Reports}\r\n                                /> :\r\n                                    this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\" ?\r\n                                        <AddDashBoardHomeRights selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            operation={this.props.operation}\r\n                                            selectedHomeRights={this.props.masterData.selectedHomeRights}\r\n                                            HomeRights={this.props.HomeRights}\r\n                                        /> :\r\n                                        this.props.screenName === \"IDS_ALERTHOMERIGHTS\" ?\r\n                                        <AddAlertHomeRights selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            operation={this.props.operation}\r\n                                            selectedAlertHomeRights={this.props.masterData.selectedAlertHomeRights}\r\n                                            AlertHomeRights={this.props.AlertHomeRights}\r\n                                        />\r\n                                        :\r\n                                        <AddAlertRights selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            operation={this.props.operation}\r\n                                            selectedAlertRights={this.props.masterData.selectedAlertRights}\r\n                                            Alert={this.props.Alert}\r\n                                        />\r\n\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    tabDetail = () => {\r\n        const addDashBoardId = this.props.controlMap.has(\"AddDashBoardRights\") && this.props.controlMap.get(\"AddDashBoardRights\").ncontrolcode\r\n\r\n        const deleteDashBoardId = this.props.controlMap.has(\"DeleteDashBoardRights\") && this.props.controlMap.get(\"DeleteDashBoardRights\").ncontrolcode\r\n\r\n        const addReportId = this.props.controlMap.has(\"AddReportRights\") && this.props.controlMap.get(\"AddReportRights\").ncontrolcode\r\n\r\n        const deleteReportId = this.props.controlMap.has(\"DeleteReportRights\") && this.props.controlMap.get(\"DeleteReportRights\").ncontrolcode\r\n\r\n        const addAlertId = this.props.controlMap.has(\"AddAlertRights\") && this.props.controlMap.get(\"AddAlertRights\").ncontrolcode\r\n\r\n        const deleteAlertId = this.props.controlMap.has(\"DeleteAlertRights\") && this.props.controlMap.get(\"DeleteAlertRights\").ncontrolcode\r\n\r\n        const addHomeId = this.props.controlMap.has(\"AddHomeRights\") && this.props.controlMap.get(\"AddHomeRights\").ncontrolcode\r\n\r\n        const deleteHomeId = this.props.controlMap.has(\"DeleteHomeRights\") && this.props.controlMap.get(\"DeleteHomeRights\").ncontrolcode\r\n\r\n        const addAlertHomeId = this.props.controlMap.has(\"AddAlertHomeRights\") && this.props.controlMap.get(\"AddAlertHomeRights\").ncontrolcode\r\n\r\n        const deleteAlertHomeId = this.props.controlMap.has(\"DeleteAlertHomeRights\") && this.props.controlMap.get(\"DeleteAlertHomeRights\").ncontrolcode\r\n\r\n\r\n\r\n        const dboardAddParam = {\r\n            screenName: \"IDS_DASHBOARDRIGHTS\", operation: \"create\", primaryKeyField: \"ndashboardtranscode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addDashBoardId\r\n        };\r\n\r\n        const dboardDeleteParam = { screenName: \"IDS_DASHBOARDRIGHTS\", methodUrl: \"DashBoardRights\", operation: \"delete\", ncontrolCode: deleteDashBoardId };\r\n\r\n        const reportAddParam = {\r\n            screenName: \"IDS_REPORTRIGHTS\", operation: \"create\", primaryKeyField: \"nmaterialcatcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addReportId\r\n        };\r\n\r\n        const reportDeleteParam = { screenName: \"IDS_REPORTRIGHTS\", methodUrl: \"ReportRights\", operation: \"delete\", ncontrolCode: deleteReportId };\r\n\r\n\r\n        const alertAddParam = {\r\n            screenName: \"IDS_ALERTRIGHTS\", operation: \"create\", primaryKeyField: \"nalertrightscode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addAlertId\r\n        };\r\n\r\n        const alertHomeAddParam = {\r\n            screenName: \"IDS_ALERTHOMERIGHTS\", operation: \"create\", primaryKeyField: \"nalerthomerightscode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addAlertHomeId\r\n        };\r\n\r\n        const homeAddParam = {\r\n            screenName: \"IDS_DASHBOARDHOMERIGHTS\", operation: \"create\", primaryKeyField: \"ndashboardhomerightscode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addHomeId\r\n        };\r\n        const homeDeleteParam = { screenName: \"IDS_DASHBOARDHOMERIGHTS\", methodUrl: \"HomeRights\", operation: \"delete\", ncontrolCode: deleteHomeId };\r\n        const alertDeleteParam = { screenName: \"IDS_ALERTRIGHTS\", methodUrl: \"AlertRights\", operation: \"delete\", ncontrolCode: deleteAlertId };\r\n\r\n        const alertHomeDeleteParam = { screenName: \"IDS_ALERTHOMERIGHTS\", methodUrl: \"AlertHomeRights\", operation: \"delete\", ncontrolCode: deleteAlertHomeId };\r\n\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_REPORTRIGHTS\", <MISRightsTabs userRoleControlRights={this.props.userRoleControlRights}\r\n        controlMap={this.props.controlMap}\r\n        inputParam={this.props.inputParam}\r\n        userInfo={this.props.userInfo}\r\n        addId={addReportId}\r\n        addParam={reportAddParam}\r\n        comboDataService={this.props.getReportRightsComboDataService}\r\n        addTitleIDS={\"IDS_REPORTRIGHTS\"}\r\n        addTitleDefaultMsg={'Report Rights'}\r\n        primaryKeyField={\"nreportrightscode\"}\r\n        masterData={this.props.masterData}\r\n        primaryList={\"ReportRights\"}\r\n        dataResult={process(this.props.masterData[\"ReportRights\"], this.state.dataStateReports)}\r\n        // dataState={this.state.dataStateMaterial}\r\n        // dataStateChange={this.materialDataStateChange}\r\n        dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_REPORTRIGHTS\") ? this.state.dataStateReports : { skip: 0, take: 5 }}\r\n        dataStateChange={(event) => this.setState({ dataStateReports: event.dataState })}\r\n        columnList={this.extractedReportList}\r\n        methodUrl={\"ReportRights\"}\r\n        deleteRecord={this.deleteRecord}\r\n        deleteParam={reportDeleteParam}\r\n        selectedId={0}\r\n    />)\r\n        tabMap.set(\"IDS_DASHBOARDRIGHTS\", <MISRightsTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addDashBoardId}\r\n            addParam={dboardAddParam}\r\n            comboDataService={this.props.getDashBoardRightsComboDataService}\r\n            addTitleIDS={\"IDS_DASHBOARDRIGHTS\"}\r\n            addTitleDefaultMsg={'DashBoard Rights'}\r\n            primaryKeyField={\"ndashboardtypecode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"DashBoardType\"}\r\n            dataResult={process(this.props.masterData[\"DashBoardRights\"], this.state.dataState)}\r\n            // dataState={this.state.dataState}\r\n            // dataStateChange={this.supplierDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_DASHBOARDRIGHTS\") ? this.state.dataState : { skip: 0, take: 5 }}\r\n            dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n            columnList={this.extractedDashBoardColumnList}\r\n            methodUrl={\"DashBoardRights\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={dboardDeleteParam}\r\n            selectedId={0}\r\n            onChangeHomeChart={this.onChangeHomeChart}\r\n        />)\r\n        tabMap.set(\"IDS_DASHBOARDHOMERIGHTS\", <MISRightsTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addHomeId}\r\n            addParam={homeAddParam}\r\n            comboDataService={this.props.getHomeRightsComboDataService}\r\n            addTitleIDS={\"IDS_DASHBOARDHOMERIGHTS\"}\r\n            addTitleDefaultMsg={'DashBoard Home Rights'}\r\n            primaryKeyField={\"ndashboardhomerightscode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"HomeRights\"}\r\n            dataResult={process(this.props.masterData[\"HomeRights\"], this.state.dataStateHome)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\") ? this.state.dataStateHome : { skip: 0, take: 5 }}\r\n            dataStateChange={(event) => this.setState({ dataStateHome: event.dataState })}\r\n            columnList={this.extractedHomeList}\r\n            methodUrl={\"HomeRights\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={homeDeleteParam}\r\n            selectedId={0}\r\n        />)\r\n      \r\n        tabMap.set(\"IDS_ALERTRIGHTS\", <MISRightsTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addAlertId}\r\n            addParam={alertAddParam}\r\n            comboDataService={this.props.getAlertRightsComboDataService}\r\n            addTitleIDS={\"IDS_ALERTRIGHTS\"}\r\n            addTitleDefaultMsg={'Alert Rights'}\r\n            primaryKeyField={\"nalertrightscode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"AlertRights\"}\r\n            dataResult={process(this.props.masterData[\"AlertRights\"], this.state.dataStateAlert)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_ALERTRIGHTS\") ? this.state.dataStateAlert : { skip: 0, take: 5 }}\r\n            dataStateChange={(event) => this.setState({ dataStateAlert: event.dataState })}\r\n            columnList={this.extractedAlertList}\r\n            methodUrl={\"AlertRights\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={alertDeleteParam}\r\n            selectedId={0}\r\n        />)\r\n        tabMap.set(\"IDS_ALERTHOMERIGHTS\", <MISRightsTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addAlertHomeId}\r\n            addParam={alertHomeAddParam}\r\n            comboDataService={this.props.getAlertHomeRightsComboDataService}\r\n            addTitleIDS={\"IDS_ALERTHOMERIGHTS\"}\r\n            addTitleDefaultMsg={'AlertHome Rights'}\r\n            primaryKeyField={\"nalerthomerightscode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"AlertHomeRights\"}\r\n            dataResult={process(this.props.masterData[\"AlertHomeRights\"], this.state.dataStateAlertHomeRights)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_ALERTHOMERIGHTS\") ? this.state.dataStateAlertHomeRights : { skip: 0, take: 5 }}\r\n            dataStateChange={(event) => this.setState({ dataStateAlertHomeRights: event.dataState })}\r\n            columnList={this.extractedAlertHomeList}\r\n            methodUrl={\"AlertHomeRights\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={alertHomeDeleteParam}\r\n            selectedId={0}\r\n        />)\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign,selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n\r\n        if (fieldName === \"ndashboardtypecode\") {\r\n            let selectedDashBoardRights = comboData;\r\n            let listDashBoard = [];\r\n            selectedRecord.ndashboardtypecode.map(item => {\r\n                listDashBoard.push(item.item)\r\n                return listDashBoard;\r\n            })\r\n\r\n            this.setState({ selectedRecord, selectedDashBoardRights, listDashBoard });\r\n        }\r\n        if (fieldName === \"nreportcode\") {\r\n            let selectedReportRights = comboData;\r\n            let listReport = [];\r\n            selectedRecord.nreportcode.map(item => {\r\n                listReport.push(item.item)\r\n                return listReport;\r\n            })\r\n            this.setState({ selectedRecord, selectedReportRights, listReport });\r\n        }\r\n        if (fieldName === \"nsqlquerycode\") {\r\n            let listAlert = [];\r\n            let selectedAlertRights = comboData\r\n            selectedRecord.nsqlquerycode.map(item => {\r\n                listAlert.push(item.item)\r\n                return listAlert;\r\n            })\r\n            this.setState({ selectedRecord, selectedAlertRights, listAlert });\r\n        }\r\n\r\n        if (fieldName === \"nalerthomerightscode\") {\r\n            let listAlertHome = [];\r\n            let selectedAlertHomeRights = comboData\r\n            selectedRecord.nalerthomerightscode.map(item => {\r\n                listAlertHome.push(item.item)\r\n                return listAlertHome;\r\n            })\r\n            this.setState({ selectedRecord, selectedAlertHomeRights, listAlertHome });\r\n        }\r\n\r\n        if (fieldName === \"ndashboardhomeprioritycode\") {\r\n            let selectedHomeRights = comboData;\r\n            let listHome = [];\r\n            selectedRecord.ndashboardhomeprioritycode.map(item => {\r\n                listHome.push(item.item)\r\n                return listHome;\r\n            })\r\n            this.setState({ selectedRecord, selectedHomeRights, listHome });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { isOpen, activeTab, selectedRecord, dataState, dataStateAlert, dataStateHome, dataStateReports ,dataStateAlertHomeRights} = this.state;\r\n        let updateState = false;\r\n        if (this.props.masterData !== previousProps.masterData) {\r\n\r\n            isOpen = false;\r\n            if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\r\n                isOpen = true;\r\n            }\r\n            updateState = true\r\n            activeTab = 'IDS_REPORTRIGHTS-tab'\r\n            if (this.props.masterData.DashBoardRights && this.props.masterData.DashBoardRights.length < dataState.skip) {\r\n                dataState = { skip: 0, take: 5 }\r\n            }\r\n            if (this.props.masterData.AlertRights && this.props.masterData.AlertRights.length < dataStateAlert.skip) {\r\n                dataStateAlert = { skip: 0, take: 5 }\r\n            }\r\n            if (this.props.masterData.HomeRights && this.props.masterData.HomeRights.length < dataStateHome.skip) {\r\n                dataStateHome = { skip: 0, take: 5 }\r\n            }\r\n            if (this.props.masterData.ReportRights && this.props.masterData.ReportRights.length < dataStateReports.skip) {\r\n                dataStateReports = { skip: 0, take: 5 }\r\n            }\r\n            if (this.props.masterData.AlertHomeRights && this.props.masterData.AlertHomeRights.length < dataStateAlertHomeRights.skip) {\r\n                dataStateAlertHomeRights = { skip: 0, take: 5 }\r\n            }\r\n        }\r\n\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            selectedRecord = this.props.selectedRecord;\r\n            updateState = true\r\n        }\r\n        if (this.props.updateDataState && this.props.updateDataState !== previousProps.updateDataState) {\r\n            updateState = true\r\n            dataState = { skip: 0, take: 5 }\r\n            dataStateAlert = { skip: 0, take: 5 }\r\n            dataStateHome = { skip: 0, take: 5 }\r\n            dataStateReports = { skip: 0, take: 5 }\r\n            dataStateAlertHomeRights = { skip: 0, take: 5 }\r\n        }\r\n        if (updateState) {\r\n            this.setState({ isOpen, activeTab, selectedRecord, dataState, dataStateAlert, dataStateHome, dataStateReports ,dataStateAlertHomeRights});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit  \r\n        let inputParam = {};\r\n\r\n        if (this.props.screenName === \"IDS_DASHBOARDRIGHTS\") {\r\n            inputParam = this.saveDashBoardRights(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"IDS_REPORTRIGHTS\") {\r\n            inputParam = this.saveReportRights(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_DASHBOARDHOMERIGHTS\") {\r\n            inputParam = this.saveHomeRights(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"IDS_ALERTHOMERIGHTS\") {\r\n            inputParam = this.saveAlertHomeRights(saveType, formRef);\r\n        }\r\n        else {\r\n            inputParam = this.saveAlertRights(saveType, formRef);\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: { ...this.props.masterData, updateDataState: true } }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, { ...this.props.masterData, updateDataState: true }, \"openChildModal\");\r\n        }\r\n\r\n    }\r\n\r\n    saveDashBoardRights(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        let dataState = { skip: 0, take: 5 };\r\n\r\n\r\n        inputData['dashboardrights'] = this.state.listDashBoard;\r\n\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"DashBoardRights\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState, searchRef: this.props.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveHomeRights(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        let dataState = { skip: 0, take: 5 };\r\n\r\n\r\n        inputData['homeRights'] = this.state.listHome;\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"HomeRights\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState, searchRef: this.props.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveAlertRights(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        let dataState = { skip: 0, take: 5 };\r\n\r\n\r\n        inputData['alertrights'] = this.state.listAlert;\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"AlertRights\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState, searchRef: this.props.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveAlertHomeRights(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        let dataState = { skip: 0, take: 5 };\r\n\r\n\r\n        inputData['alerthomerights'] = this.state.listAlertHome;\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"AlertHomeRights\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState, searchRef: this.props.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveReportRights(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"report\"] = {};\r\n        let dataStateReports = undefined;\r\n\r\n\r\n        inputData['reportrights'] = this.state.listReport;\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"ReportRights\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataStateReports, searchRef: this.props.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    onChangeHomeChart = (event, rowItem, columnName, rowIndex, saveType) => {\r\n        const selectedRecord = rowItem || {};\r\n        selectedRecord[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        this.saveHomeChart(selectedRecord, saveType);\r\n    }\r\n\r\n    saveHomeChart = (selectedRecord, saveType) => {\r\n        let operation = \"create\";\r\n        let dataState = { skip: 0, take: 5 };\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"UserRole\"] = this.props.masterData.SelectedMIS;\r\n        inputData[\"homechart\"] = selectedRecord;\r\n        inputData[\"nhomechartview\"] = selectedRecord[\"nhomechartview\"];\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"HomeChart\",\r\n            inputData: inputData,\r\n            operation: operation, saveType, searchRef: this.props.searchRef, dataState\r\n        }\r\n\r\n        this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n\r\n    }\r\n\r\n    deleteAlertRights = (param) => {\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"AlertRights\",\r\n            inputData: {\r\n                \"alertrights\": param.selectedRecord,\r\n                \"userinfo\": this.props.userInfo,\r\n\r\n            },\r\n            operation: param.operation,\r\n            dataState: this.state.dataStateAlert,\r\n            searchRef: this.props.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    deleteAlertHomeRights = (param) => {\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"AlertHomeRights\",\r\n            inputData: {\r\n                \"alerthomerights\": param.selectedRecord,\r\n                \"userinfo\": this.props.userInfo,\r\n\r\n            },\r\n            operation: param.operation,\r\n            dataState: this.state.dataStateAlertHomeRIghts,\r\n            searchRef: this.props.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    deleteHomeRights = (param) => {\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"HomeRights\",\r\n            inputData: {\r\n                \"homeRights\": param.selectedRecord,\r\n                \"userinfo\": this.props.userInfo,\r\n\r\n            },\r\n            operation: param.operation,\r\n            dataState: this.state.dataState,\r\n            searchRef: this.props.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    deleteReportRights = (param) => {\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"ReportRights\",\r\n            inputData: {\r\n                \"reportrights\": param.selectedRecord,\r\n                \"userinfo\": this.props.userInfo,\r\n\r\n            },\r\n            operation: param.operation,\r\n            dataState: this.state.dataStateReports,\r\n            searchRef: this.props.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    deleteDashBoardRights = (param) => {\r\n\r\n        const inputParam = {\r\n            classUrl: \"misrights\",\r\n            methodUrl: \"DashBoardRights\",\r\n            inputData: {\r\n                \"dashboardrights\": param.selectedRecord,\r\n                \"userinfo\": this.props.userInfo,\r\n\r\n            },\r\n            operation: param.operation,\r\n            dataState: this.state.dataState,\r\n            searchRef: this.props.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    deleteRecord = (param) => {\r\n        let inputParam = {};\r\n        if (param.screenName === 'IDS_DASHBOARDRIGHTS') {\r\n            inputParam = this.deleteDashBoardRights(param);\r\n        }\r\n        else if (param.screenName === 'IDS_REPORTRIGHTS') {\r\n            inputParam = this.deleteReportRights(param);\r\n        }\r\n        else if (param.screenName === 'IDS_DASHBOARDHOMERIGHTS') {\r\n            inputParam = this.deleteHomeRights(param);\r\n        }\r\n        else if (param.screenName === 'IDS_ALERTHOMERIGHTS') {\r\n            inputParam = this.deleteAlertHomeRights(param);\r\n        }\r\n        else {\r\n            inputParam = this.deleteAlertRights(param);\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, param.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: { ...this.props.masterData, updateDataState: false } },\r\n                    openChildModal: true, screenName: param.screenName, operation: param.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, { ...this.props.masterData, updateDataState: false }, \"openChildModal\");\r\n        }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n\r\n    extractedReportList = [{ \"controlType\": \"textbox\", \"idsName\": \"IDS_REPORTNAME\", \"dataField\": \"sreportname\", \"width\": \"200px\" }\r\n    ]\r\n    extractedAlertList = [{ \"controlType\": \"textbox\", \"idsName\": \"IDS_ALERTNAME\", \"dataField\": \"sscreenheader\", \"width\": \"200px\" }\r\n    ]\r\n\r\n    extractedHomeList = [{ \"controlType\": \"textbox\", \"idsName\": \"IDS_PAGES\", \"dataField\": \"sdashboardhomepagename\", \"width\": \"200px\" }\r\n    ]\r\n    extractedDashBoardColumnList = [{ \"controlType\": \"textbox\", \"idsName\": \"IDS_DASHBOARDNAME\", \"dataField\": \"sdashboardtypename\", \"width\": \"150px\" },\r\n    ]\r\n    extractedAlertHomeList = [{ \"controlType\": \"textbox\", \"idsName\": \"IDS_ALERTNAME\", \"dataField\": \"sscreenheader\", \"width\": \"200px\" }\r\n]\r\n}\r\n\r\nexport default injectIntl(MISRightsTab);"]},"metadata":{},"sourceType":"module"}