{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\form-tree-menu\\\\form-tree-menu.component.jsx\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport TreeMenu, { ItemComponent } from \"react-simple-tree-menu\";\nimport \"react-simple-tree-menu/dist/main.css\";\nimport { TreeMenuGroup } from \"../form-tree-menu/form-tree-menu.styles\";\nimport { AtWell } from '../App.styles';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { //faFilter,   \nfaSearch, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroup } from \"react-bootstrap\"; //import { ReactComponent as SolidFilterIcon } from '../../assets/image/filter-solid.svg';\n\nconst openedIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faMinus,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 20\n  }\n});\nconst closedIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faPlus,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 20\n  }\n});\n\nconst FormTreeMenu = ({\n  name,\n  ref,\n  onChange,\n  className,\n  errors,\n  hasSearch,\n  resetOpenNodesOnDataUpdate,\n  disableKeyboard,\n  activeKey,\n  focusKey,\n  active,\n  focused,\n  data,\n  initialOpenNodes,\n  initialActiveKey,\n  // initialFocusKey,\n  ...props\n}) => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TreeMenuGroup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TreeMenu, {\n  name: name,\n  data: data,\n  cacheSearch: false,\n  debounceTime: 125,\n  disableKeyboard: disableKeyboard,\n  resetOpenNodesOnDataUpdate: true,\n  initialOpenNodes: initialOpenNodes // hasSearch={hasSearch}\n  //onClickItem={function noRefCheck(){}}\n  ,\n  onClickItem: props.handleTreeClick // resetOpenNodesOnDataUpdate={resetOpenNodesOnDataUpdate}\n  ,\n  focused: false,\n  openNodes: props.openNodes,\n  activeKey: activeKey,\n  focusKey: focusKey // initialOpenNodes={initialOpenNodes}\n  ,\n  initialActiveKey: initialActiveKey // initialFocusKey={initialFocusKey}\n  ,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, ({\n  search,\n  items\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, hasSearch && /*#__PURE__*/React.createElement(AtWell, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(Form.Group, {\n  controlId: \"formSearch\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(InputGroup, {\n  className: \"organisationtreeclass\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(InputGroup.Text, {\n  className: \"backgroundhidden\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faSearch,\n  style: {\n    color: \"#c1c7d0\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }\n}))), /*#__PURE__*/React.createElement(Form.Control, {\n  type: \"text\",\n  placeholder: props.placeholder,\n  hidden: !hasSearch //onChange={(e) => search(e.target.value)}\n  ,\n  onKeyUp: e => e.keyCode === 13 ? search(e.target.value) : \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }\n})))), /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"list-unstyled\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }\n}, items.map(props => /*#__PURE__*/React.createElement(ItemComponent, Object.assign({}, props, {\n  openedIcon: openedIcon,\n  closedIcon: closedIcon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 17\n  }\n}))))))));\n\nexport default FormTreeMenu;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/form-tree-menu/form-tree-menu.component.jsx"],"names":["React","Form","TreeMenu","ItemComponent","TreeMenuGroup","AtWell","FontAwesomeIcon","faSearch","faMinus","faPlus","InputGroup","openedIcon","closedIcon","FormTreeMenu","name","ref","onChange","className","errors","hasSearch","resetOpenNodesOnDataUpdate","disableKeyboard","activeKey","focusKey","active","focused","data","initialOpenNodes","initialActiveKey","props","handleTreeClick","openNodes","search","items","color","placeholder","e","keyCode","target","value","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport TreeMenu, { ItemComponent } from \"react-simple-tree-menu\";\r\nimport \"react-simple-tree-menu/dist/main.css\";\r\nimport { TreeMenuGroup } from \"../form-tree-menu/form-tree-menu.styles\";\r\nimport { AtWell } from '../App.styles';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { //faFilter,   \r\n  faSearch, \r\n  faMinus, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\n//import { ReactComponent as SolidFilterIcon } from '../../assets/image/filter-solid.svg';\r\n\r\nconst openedIcon = <FontAwesomeIcon icon={faMinus} />;\r\nconst closedIcon = <FontAwesomeIcon icon={faPlus} />;\r\n\r\nconst FormTreeMenu = ({\r\n  name,\r\n  ref,\r\n  onChange,\r\n  className,\r\n  errors,\r\n  hasSearch,\r\n  resetOpenNodesOnDataUpdate,\r\n  disableKeyboard,\r\n  activeKey,\r\n  focusKey,\r\n  active,\r\n  focused,\r\n  data,\r\n  initialOpenNodes,\r\n  initialActiveKey,\r\n  // initialFocusKey,\r\n  ...props\r\n}) => (\r\n  <React.Fragment>\r\n    <TreeMenuGroup>\r\n      <TreeMenu\r\n        name={name}\r\n        data={data}\r\n        cacheSearch={false}\r\n        debounceTime={125}\r\n        disableKeyboard={disableKeyboard}\r\n        resetOpenNodesOnDataUpdate\r\n        initialOpenNodes={initialOpenNodes}\r\n        // hasSearch={hasSearch}\r\n\r\n        //onClickItem={function noRefCheck(){}}\r\n        onClickItem={props.handleTreeClick}\r\n        // resetOpenNodesOnDataUpdate={resetOpenNodesOnDataUpdate}\r\n        focused={false}\r\n        openNodes={props.openNodes}\r\n        activeKey={activeKey}\r\n        focusKey={focusKey}\r\n        // initialOpenNodes={initialOpenNodes}\r\n        initialActiveKey={initialActiveKey}\r\n      // initialFocusKey={initialFocusKey}\r\n      >\r\n\r\n\r\n        {({ search, items }) => (\r\n          <>\r\n            {hasSearch &&\r\n              <AtWell>\r\n                <Form.Group controlId=\"formSearch\">\r\n                  <InputGroup className=\"organisationtreeclass\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text className=\"backgroundhidden\">\r\n                        {/* <FontAwesomeIcon icon={faFilter} style={{ color: \"#c1c7d0\" }} /> */}\r\n                        <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                        {/* <SolidFilterIcon className=\"custom_icons\" width=\"18\" height=\"18\" fill='#FFF' stroke='#000000' stroke-width=\"15\"/> */}\r\n                                   \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder={props.placeholder}\r\n                      hidden={!hasSearch}\r\n                      //onChange={(e) => search(e.target.value)}\r\n                      onKeyUp={(e) => e.keyCode === 13 ? search(e.target.value) :\"\"}\r\n                    />\r\n                  </InputGroup>\r\n\r\n\r\n                </Form.Group>\r\n              </AtWell>\r\n            }\r\n\r\n            <ul className=\"list-unstyled\">\r\n              {items.map((props) => (\r\n                <ItemComponent\r\n                  {...props}\r\n                  openedIcon={openedIcon}\r\n                  closedIcon={closedIcon}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </TreeMenu>\r\n    </TreeMenuGroup>\r\n  </React.Fragment>\r\n);\r\nexport default FormTreeMenu;"]},"metadata":{},"sourceType":"module"}