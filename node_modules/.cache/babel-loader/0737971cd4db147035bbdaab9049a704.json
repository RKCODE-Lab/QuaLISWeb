{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{intl}from'../components/App';export function getComboSampleProcessing(addParam){return function(dispatch){var urlArray=[];var service1=rsapi.post(\"projecttype/getProjectType\",{userinfo:addParam.userInfo});var service2=rsapi.post(\"storagesampleprocessing/getSampleType\",{userinfo:addParam.userInfo,nprojecttypecode:addParam.masterData.selectedProjectType.value});var service3=rsapi.post(\"storagesampleprocessing/getCollectionTubeType\",{userinfo:addParam.userInfo,nprojecttypecode:addParam.masterData.selectedProjectType.value});var userInfo=addParam.userInfo;var service4=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userInfo});urlArray=[service1,service2,service3,service4];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedId=null;var sampletype;var collectiontubetype;var sampletypeMap=constructOptionList(response[1].data||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);sampletype=sampletypeMap.get(\"OptionList\");var collectiontubetypeMap=constructOptionList(response[2].data||[],\"ncollectiontubetypecode\",\"stubename\",undefined,undefined,true);collectiontubetype=collectiontubetypeMap.get(\"OptionList\");var currenttime=rearrangeDateFormat(userInfo,response[3].data);var selectedRecord=_objectSpread(_objectSpread({},addParam.selectedRecord),{},{\"dprocessstartdate\":currenttime,\"dprocessenddate\":\"\"});var masterData=_objectSpread(_objectSpread({},addParam.masterData),{},{\"sprocessstartdatesecondtime\":false,\"barcodedata\":undefined});selectedId=addParam.primaryKeyField;dispatch({type:DEFAULT_RETURN,payload:{sampletype:sampletype,currenttime:currenttime,collectiontubetype:collectiontubetype,masterData:masterData,operation:addParam.operation,screenName:addParam.screenName,selectedRecord:selectedRecord,openModal:true,//ALPD-4618--Vignesh R(01-08-2024)\nncontrolcode:addParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}/*export function getCollectionTubeType(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const service1 = rsapi.post(\"storagesampleprocessing/getCollectionTubeType\", { userinfo: inputParam.inputData.userinfo, nprojecttypecode: inputParam.inputData.nprojecttypecode });\r\n\r\n\r\n\r\n        urlArray = [service1]\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n\r\n            let collectiontubetype;\r\n\r\n\r\n            const collectiontubetypeMap = constructOptionList(response[0].data || [], \"ncollectiontubetypecode\",\r\n                \"stubename\", undefined, undefined, true);\r\n            collectiontubetype = collectiontubetypeMap.get(\"OptionList\");\r\n\r\n            let selectedRecord = { ...inputParam.selectedRecord }\r\n\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    collectiontubetype,\r\n                    selectedRecord: selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}*/export function getBarcodeDataDetails(inputParam){return function(dispatch){if(inputParam.selectedRecord[\"sbarcodeid\"]&&inputParam.selectedRecord[\"sbarcodeid\"].length!==inputParam.nbarcodeLength){toast.warn(intl.formatMessage({id:\"IDS_INVALIDBARCODEID\"}));}else{dispatch(initRequest(true));rsapi.post(\"storagesampleprocessing/getBarcodeConfigData\",{userinfo:inputParam.userinfo,nprojecttypecode:inputParam.nprojecttypecode,spositionvalue:inputParam.spositionvalue,nbarcodeLength:inputParam.nbarcodeLength,jsondata:inputParam.jsondata,nsampleprocesstypecode:inputParam.selectedRecord[\"nsampleprocesstypecode\"]}).then(function(response){//ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in data\nvar checkCollectionTubeType=true;var checkSampleType=true;var jsonPrimaryKeyValue=response.data.jsonPrimaryKeyValue;if(jsonPrimaryKeyValue.ncollectiontubetypecode){if(jsonPrimaryKeyValue.ncollectiontubetypecode!==inputParam.selectedRecord['ncollectiontubetypecode'].value){checkCollectionTubeType=false;}}if(jsonPrimaryKeyValue.nsamplecollectiontypecode){if(jsonPrimaryKeyValue.nsamplecollectiontypecode!==inputParam.selectedRecord['nproductcode'].item.nsamplecollectiontypecode){checkSampleType=false;}}if(checkSampleType){if(checkCollectionTubeType){var barcodedata=response.data.jsondataBarcodeData&&response.data.jsondataBarcodeData;var sprocessstartdatesecondtime=response.data.sprocessstartdatesecondtime;var sprocessenddate=\"\";if(response.data['sprocessenddate']!==undefined&&response.data['sprocessenddate']!==\"\"){sprocessenddate=rearrangeDateFormat(inputParam.userinfo,response.data['sprocessenddate']);}var scomments=response.data.scomments&&response.data.scomments||\"\";var sdeviationcomments=response.data.sdeviationcomments&&response.data.sdeviationcomments||\"\";var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"dprocessenddate\":sprocessenddate,\"scomments\":scomments,\"sdeviationcomments\":sdeviationcomments});var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{\"barcodedata\":barcodedata,\"jsondataBarcodeFields\":response.data.jsondataBarcodeFields,\"sprocessstartdatesecondtime\":sprocessstartdatesecondtime,\"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue});if(response.data['sprocessstartdate']!==undefined&&response.data['sprocessstartdate']!==\"\"){var sprocessstartdate=rearrangeDateFormat(inputParam.userinfo,response.data['sprocessstartdate']);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"dprocessstartdate\":sprocessstartdate});}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,loading:false}});}else{var _masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{\"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue});dispatch({type:DEFAULT_RETURN,payload:{masterData:_masterData,loading:false}});toast.warn(intl.formatMessage({id:\"IDS_INVALIDCOLLECTIONTUBETYPE\"}));}}else{var _masterData2=_objectSpread(_objectSpread({},inputParam.masterData),{},{\"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_masterData2}});toast.warn(intl.formatMessage({id:\"IDS_INVALIDSAMPLETYPE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getSampleProcessType(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"storagesampleprocessing/getSampleProcessType\",inputParam.inputData).then(function(response){var processtype;var processtypeMap=constructOptionList(response.data||[],\"nprocesstypecode\",\"sprocesstypename\",undefined,undefined,false);processtype=processtypeMap.get(\"OptionList\");var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"processtype\":processtype});if(!(response.data&&response.data.length>0)){selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"nprocesstypecode\":\"\",\"sprocessduration\":\"\",\"sgraceduration\":\"\"});}dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getProcessduration(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"storagesampleprocessing/getProcessduration\",inputParam.inputData).then(function(response){var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"nprocesstime\":response.data[0][\"nprocesstime\"],\"ngracetime\":response.data[0][\"ngracetime\"],\"sprocessduration\":response.data[0][\"sprocessduration\"],\"nsampleprocesstypecode\":response.data[0][\"nsampleprocesstypecode\"],\"sgraceduration\":response.data[0][\"sgraceduration\"]});dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function saveSampleProcessing(inputParam,masterData){return function(dispatch){var service1=rsapi.post(\"storagesampleprocessing/\"+inputParam.operation+\"SampleProcessing\",inputParam.inputData);var service2=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:inputParam.inputData.userinfo});var urlArray=[];urlArray=[service1,service2];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var openModal=false;if(inputParam.saveType===2){openModal=true;}var date=rearrangeDateFormat(inputParam.inputData.userinfo,response[1].data);masterData=_objectSpread(_objectSpread({},masterData),{},{\"SampleProcessing\":response[0].data.SampleProcessing,\"barcodedata\":\"\",\"iscommentsrequired\":false,\"isdevaiationrequired\":false,\"sprocessstartdatesecondtime\":false});var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"sbarcodeid\":\"\",\"nproductcode\":undefined,\"ncollectiontubetypecode\":undefined,\"nprocesstypecode\":\"\",\"sprocessduration\":\"\",\"dprocessenddate\":\"\",\"sdeviationcomments\":\"\",\"scomments\":\"\",\"sgraceduration\":\"\",\"processtype\":[],\"dprocessstartdate\":date});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,openModal:openModal,loading:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveSampleProcessingById(editParam){return function(dispatch){var _rsapi$post;var selectedId=null;dispatch(initRequest(true));rsapi.post(\"storagesampleprocessing/getActiveSampleProcessingById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.editRow.nsampleprocessingcode),_defineProperty(_rsapi$post,\"nprojecttypecode\",editParam.editRow.nprojecttypecode),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post)).then(function(response){selectedId=editParam.primaryKeyValue;var sprocessstartdate=rearrangeDateFormat(editParam.userInfo,response.data.activeSampleProcessingByID['sprocessstartdate']);//let selectedRecord = response.data && response.data.activeSampleProcessingByID\nvar jsondataBarcodeFields=response.data.jsondataBarcodeFields;var barcodedata=response.data&&response.data.activeSampleProcessingByID.jsondata;var masterData=_objectSpread(_objectSpread({},editParam.masterData),{},{\"barcodedata\":barcodedata,\"sprocessstartdatesecondtime\":response.data.sprocessstartdatesecondtime,\"jsondataBarcodeFields\":jsondataBarcodeFields});var selectedRecord=_objectSpread(_objectSpread({},editParam.selectedRecord),{},{\"sbarcodeid\":response.data.activeSampleProcessingByID['sbarcodeid'],\"dprocessenddate\":response.data.activeSampleProcessingByID['sprocessenddate']&&rearrangeDateFormat(editParam.userInfo,response.data.activeSampleProcessingByID['sprocessenddate'])||\"\",\"dprocessstartdate\":sprocessstartdate,\"scomments\":response.data.activeSampleProcessingByID['scomments'],\"sprocessduration\":response.data.activeSampleProcessingByID['sprocessduration'],nsampleprocesstypecode:response.data.activeSampleProcessingByID[\"nsampleprocesstypecode\"],\"sdeviationcomments\":response.data.activeSampleProcessingByID['sdeviationcomments'],\"sgraceduration\":response.data.activeSampleProcessingByID['sgraceduration'],\"ngracetime\":response.data.activeSampleProcessingByID&&response.data.activeSampleProcessingByID['ngracetime'],\"nprocesstime\":response.data.activeSampleProcessingByID&&response.data.activeSampleProcessingByID['nprocesstime']});var SampleType=[];var CollectionTubeType=[];var SampleProcessType=[];CollectionTubeType.push({\"value\":response.data.activeSampleProcessingByID[\"ncollectiontubetypecode\"],\"label\":response.data.activeSampleProcessingByID[\"stubename\"]});SampleType.push({\"value\":response.data.activeSampleProcessingByID[\"nproductcode\"],\"label\":response.data.activeSampleProcessingByID[\"sproductname\"]});SampleProcessType.push({\"value\":response.data.activeSampleProcessingByID[\"nprocesstypecode\"],\"label\":response.data.activeSampleProcessingByID[\"sprocesstypename\"]});selectedRecord[\"nproductcode\"]=SampleType[0];selectedRecord[\"nprocesstypecode\"]=SampleProcessType[0];selectedRecord[\"ncollectiontubetypecode\"]=CollectionTubeType[0];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,operation:editParam.operation,ncontrolcode:editParam.ncontrolCode,openModal:true,loading:false,selectedId:selectedId,screenName:editParam.screenName,dataState:editParam.dataState}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSampleProcessing(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"storagesampleprocessing/getSampleProcessing\",inputParam.inputData).then(function(response){var selectedId=null;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{selectedId:selectedId,masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}/*\r\nexport function getCommentsDeviation(inputParam) {\r\n    return function (dispatch) {\r\n  \r\n\r\n\r\n        rsapi.post(\"storagesampleprocessing/getCommentsDeviation\", {...inputParam.inputData})\r\n        .then(response => {\r\n\r\n            let masterData = { ...inputParam.masterData, ...response.data }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord: {...inputParam.selectedRecord},\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n    */export function validateEsignCredentialSampleProcessing(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;// if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\n//     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\n// }\ndispatch(saveSampleProcessing(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/SampleProcessingActions.js"],"names":["rsapi","Axios","toast","constructOptionList","rearrangeDateFormat","DEFAULT_RETURN","initRequest","intl","getComboSampleProcessing","addParam","dispatch","urlArray","service1","post","userinfo","userInfo","service2","nprojecttypecode","masterData","selectedProjectType","value","service3","service4","all","then","response","selectedId","sampletype","collectiontubetype","sampletypeMap","data","undefined","get","collectiontubetypeMap","currenttime","selectedRecord","primaryKeyField","type","payload","operation","screenName","openModal","ncontrolcode","ncontrolCode","loading","catch","error","status","message","warn","getBarcodeDataDetails","inputParam","length","nbarcodeLength","formatMessage","id","spositionvalue","jsondata","nsampleprocesstypecode","checkCollectionTubeType","checkSampleType","jsonPrimaryKeyValue","ncollectiontubetypecode","nsamplecollectiontypecode","item","barcodedata","jsondataBarcodeData","sprocessstartdatesecondtime","sprocessenddate","scomments","sdeviationcomments","jsondataBarcodeFields","sprocessstartdate","getSampleProcessType","inputData","processtype","processtypeMap","getProcessduration","saveSampleProcessing","saveType","date","SampleProcessing","loadEsign","getActiveSampleProcessingById","editParam","editRow","nsampleprocessingcode","primaryKeyValue","activeSampleProcessingByID","SampleType","CollectionTubeType","SampleProcessType","push","dataState","getSampleProcessing","validateEsignCredentialSampleProcessing"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    constructOptionList, rearrangeDateFormat\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport {\r\n    intl\r\n} from '../components/App';\r\n\r\nexport function getComboSampleProcessing(addParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const service1 = rsapi.post(\"projecttype/getProjectType\", { userinfo: addParam.userInfo });\r\n        const service2 = rsapi.post(\"storagesampleprocessing/getSampleType\", { userinfo: addParam.userInfo, nprojecttypecode: addParam.masterData.selectedProjectType.value });\r\n       const service3 = rsapi.post(\"storagesampleprocessing/getCollectionTubeType\", { userinfo: addParam.userInfo, nprojecttypecode: addParam.masterData.selectedProjectType.value });\r\n\r\n        let userInfo = addParam.userInfo;\r\n        const service4 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo: userInfo\r\n        });\r\n\r\n\r\n\r\n        urlArray = [service1, service2, service3,service4]\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n\r\n            let selectedId = null;\r\n            let sampletype;\r\n           let collectiontubetype;\r\n\r\n            const sampletypeMap = constructOptionList(response[1].data || [], \"nproductcode\",\r\n                \"sproductname\", undefined, undefined, true);\r\n            sampletype = sampletypeMap.get(\"OptionList\");\r\n\r\n            const collectiontubetypeMap = constructOptionList(response[2].data || [], \"ncollectiontubetypecode\",\r\n                \"stubename\", undefined, undefined, true);\r\n                collectiontubetype = collectiontubetypeMap.get(\"OptionList\");\r\n\r\n            let currenttime = rearrangeDateFormat(userInfo, response[3].data);\r\n\r\n            let selectedRecord = { ...addParam.selectedRecord, \"dprocessstartdate\": currenttime,\"dprocessenddate\":\"\"}\r\n            let masterData={...addParam.masterData,\"sprocessstartdatesecondtime\":false,\"barcodedata\":undefined }\r\n\r\n            selectedId = addParam.primaryKeyField;\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    sampletype,\r\n                    currenttime,\r\n                   collectiontubetype,\r\n                   masterData,\r\n                    operation: addParam.operation, screenName: addParam.screenName,\r\n                    selectedRecord: selectedRecord,\r\n                    openModal: true,\r\n\t\t//ALPD-4618--Vignesh R(01-08-2024)\r\n                    ncontrolcode: addParam.ncontrolCode,\r\n                    loading: false, selectedId\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n/*export function getCollectionTubeType(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const service1 = rsapi.post(\"storagesampleprocessing/getCollectionTubeType\", { userinfo: inputParam.inputData.userinfo, nprojecttypecode: inputParam.inputData.nprojecttypecode });\r\n\r\n\r\n\r\n        urlArray = [service1]\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n\r\n            let collectiontubetype;\r\n\r\n\r\n            const collectiontubetypeMap = constructOptionList(response[0].data || [], \"ncollectiontubetypecode\",\r\n                \"stubename\", undefined, undefined, true);\r\n            collectiontubetype = collectiontubetypeMap.get(\"OptionList\");\r\n\r\n            let selectedRecord = { ...inputParam.selectedRecord }\r\n\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    collectiontubetype,\r\n                    selectedRecord: selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}*/\r\n\r\n\r\nexport function getBarcodeDataDetails(inputParam) {\r\n    return function (dispatch) {\r\n        if(inputParam.selectedRecord[\"sbarcodeid\"]&&inputParam.selectedRecord[\"sbarcodeid\"].length!==inputParam.nbarcodeLength){\r\n              toast.warn(intl.formatMessage({ id: \"IDS_INVALIDBARCODEID\"}));\r\n\r\n        }else{\r\n            dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesampleprocessing/getBarcodeConfigData\", { userinfo: inputParam.userinfo, nprojecttypecode: inputParam.nprojecttypecode, spositionvalue: inputParam.spositionvalue, nbarcodeLength: inputParam.nbarcodeLength, jsondata: inputParam.jsondata,nsampleprocesstypecode:inputParam.selectedRecord[\"nsampleprocesstypecode\"] }).then(response => {\r\n\r\n\r\n        //ALPD-5139--Vignesh R(24-12-2024)---added the collection tube type in data\r\n\r\n            let checkCollectionTubeType=true;\r\n            let checkSampleType=true;\r\n            let jsonPrimaryKeyValue=response.data.jsonPrimaryKeyValue;\r\n            \r\n            if(jsonPrimaryKeyValue.ncollectiontubetypecode){\r\n            if(jsonPrimaryKeyValue.ncollectiontubetypecode !== inputParam.selectedRecord['ncollectiontubetypecode'].value){\r\n                checkCollectionTubeType=false;\r\n            }\r\n        }\r\n\r\n        if(jsonPrimaryKeyValue.nsamplecollectiontypecode){\r\n\r\n        if(jsonPrimaryKeyValue.nsamplecollectiontypecode !== inputParam.selectedRecord['nproductcode'].item.nsamplecollectiontypecode){\r\n            checkSampleType=false;\r\n        }\r\n    }\r\n    if(checkSampleType){\r\n    if(checkCollectionTubeType){\r\n            let barcodedata = response.data.jsondataBarcodeData&&response.data.jsondataBarcodeData;\r\n            let sprocessstartdatesecondtime = response.data.sprocessstartdatesecondtime;\r\n            let sprocessenddate=\"\";\r\n            if(response.data['sprocessenddate']!==undefined&&response.data['sprocessenddate']!==\"\"){\r\n                 sprocessenddate = rearrangeDateFormat(inputParam.userinfo, response.data['sprocessenddate']);\r\n\r\n            }\r\n            let scomments=response.data.scomments&&response.data.scomments || \"\";\r\n            let sdeviationcomments=response.data.sdeviationcomments&&response.data.sdeviationcomments ||\"\";\r\n          \r\n\r\n            let selectedRecord={...inputParam.selectedRecord,\"dprocessenddate\":sprocessenddate,\"scomments\":scomments,\"sdeviationcomments\":sdeviationcomments}\r\n            let masterData = { ...inputParam.masterData, \"barcodedata\": barcodedata,\r\n                \"jsondataBarcodeFields\":response.data.jsondataBarcodeFields,\r\n                \"sprocessstartdatesecondtime\":sprocessstartdatesecondtime,\r\n                \"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue\r\n\r\n            }\r\n           \r\n           \r\n            if(response.data['sprocessstartdate']!==undefined&&response.data['sprocessstartdate']!==\"\"){\r\n               let sprocessstartdate = rearrangeDateFormat(inputParam.userinfo, response.data['sprocessstartdate']);\r\n                    selectedRecord={...selectedRecord,\"dprocessstartdate\":sprocessstartdate}\r\n           }\r\n                       dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        }else{\r\n            let masterData={...inputParam.masterData,\"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue};\r\n            dispatch({ type: DEFAULT_RETURN, payload: {\r\n                masterData,\r\n                loading: false } })\r\n            toast.warn(intl.formatMessage({ id: \"IDS_INVALIDCOLLECTIONTUBETYPE\"}));\r\n \r\n        }\r\n    }else{\r\n        let masterData={...inputParam.masterData,\"jsonPrimaryKeyValue\":response.data.jsonPrimaryKeyValue};\r\n\r\n        dispatch({ type: DEFAULT_RETURN, payload: { loading: false,masterData } })\r\n        toast.warn(intl.formatMessage({ id: \"IDS_INVALIDSAMPLETYPE\"}));\r\n \r\n    }\r\n    }\r\n        )\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n    }\r\n}\r\n\r\n\r\nexport function getSampleProcessType(inputParam) {\r\n    return function (dispatch) {\r\n  \r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesampleprocessing/getSampleProcessType\", inputParam.inputData)\r\n        .then(response => {\r\n\r\n                     let processtype;\r\n                    \r\n                        const processtypeMap = constructOptionList(response.data || [], \"nprocesstypecode\",\r\n                            \"sprocesstypename\", undefined, undefined, false);\r\n                            processtype = processtypeMap.get(\"OptionList\");\r\n                    \r\n                     \r\n                            let selectedRecord = { ...inputParam.selectedRecord,\"processtype\":processtype}\r\n                            if(!(response.data&&response.data.length>0)){\r\n                                selectedRecord={...selectedRecord,\"nprocesstypecode\":\"\",\"sprocessduration\":\"\",\"sgraceduration\":\"\"}\r\n          \r\n                            }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    selectedRecord: selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getProcessduration(inputParam) {\r\n    return function (dispatch) {\r\n  \r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesampleprocessing/getProcessduration\", inputParam.inputData)\r\n        .then(response => {\r\n\r\n            let selectedRecord = { ...inputParam.selectedRecord,\"nprocesstime\":response.data[0][\"nprocesstime\"],\"ngracetime\":response.data[0][\"ngracetime\"],\"sprocessduration\":response.data[0][\"sprocessduration\"],\r\n                \"nsampleprocesstypecode\":response.data[0][\"nsampleprocesstypecode\"],\"sgraceduration\":response.data[0][\"sgraceduration\"]}\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    selectedRecord: selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function saveSampleProcessing(inputParam, masterData) {\r\n    return function (dispatch) {\r\n\r\n        const service1 = rsapi.post(\"storagesampleprocessing/\" + inputParam.operation + \"SampleProcessing\", inputParam.inputData);\r\n        const service2 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo:inputParam.inputData.userinfo\r\n        });\r\n        let urlArray=[];\r\n        urlArray = [service1, service2];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray).then(response => {\r\n\r\n           let openModal=false;\r\n\r\n           if(inputParam.saveType===2){\r\n            openModal=true;\r\n           }\r\n           let date = rearrangeDateFormat(inputParam.inputData.userinfo, response[1].data);\r\n\r\n\r\n            masterData = { ...masterData, \"SampleProcessing\": response[0].data.SampleProcessing, \"barcodedata\":\"\",\"iscommentsrequired\":false,\"isdevaiationrequired\":false,\"sprocessstartdatesecondtime\":false }\r\n          \r\n\r\n            let selectedRecord = { ...inputParam.selectedRecord, \"sbarcodeid\": \"\",\"nproductcode\":undefined,\"ncollectiontubetypecode\":undefined,\"nprocesstypecode\":\"\",\"sprocessduration\":\"\",\"dprocessenddate\":\"\",\r\n                \"sdeviationcomments\":\"\",  \"scomments\": \"\",\"sgraceduration\":\"\" ,\"processtype\":[],\"dprocessstartdate\":date}\r\n            \r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    openModal: openModal,\r\n                    loading: false,\r\n                    loadEsign:false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getActiveSampleProcessingById(editParam) {\r\n    return function (dispatch) {\r\n\r\n        let selectedId = null;\r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesampleprocessing/getActiveSampleProcessingById\", { [editParam.primaryKeyField]: editParam.editRow.nsampleprocessingcode,\"nprojecttypecode\":editParam.editRow.nprojecttypecode, \"userinfo\": editParam.userInfo }).then(response => {\r\n            selectedId = editParam.primaryKeyValue;\r\n           \r\n            let sprocessstartdate = rearrangeDateFormat(editParam.userInfo, response.data.activeSampleProcessingByID['sprocessstartdate']);\r\n          \r\n\r\n            //let selectedRecord = response.data && response.data.activeSampleProcessingByID\r\n            let jsondataBarcodeFields = response.data.jsondataBarcodeFields;\r\n            let barcodedata = response.data && response.data.activeSampleProcessingByID.jsondata;\r\n            let masterData = { ...editParam.masterData, \"barcodedata\": barcodedata,\r\n               \"sprocessstartdatesecondtime\":response.data.sprocessstartdatesecondtime,\"jsondataBarcodeFields\":jsondataBarcodeFields\r\n            }\r\n           let  selectedRecord = {\r\n                ...editParam.selectedRecord, \"sbarcodeid\": response.data.activeSampleProcessingByID['sbarcodeid'],\r\n            \"dprocessenddate\": response.data.activeSampleProcessingByID['sprocessenddate']&& rearrangeDateFormat(editParam.userInfo, response.data.activeSampleProcessingByID['sprocessenddate'])|| \"\",\"dprocessstartdate\": sprocessstartdate, \"scomments\": response.data.activeSampleProcessingByID['scomments'],\"sprocessduration\":response.data.activeSampleProcessingByID['sprocessduration'],\r\n            nsampleprocesstypecode:response.data.activeSampleProcessingByID[\"nsampleprocesstypecode\"],\r\n            \"sdeviationcomments\":response.data.activeSampleProcessingByID['sdeviationcomments'],\r\n            \"sgraceduration\":response.data.activeSampleProcessingByID['sgraceduration'],\r\n            \"ngracetime\":response.data.activeSampleProcessingByID&&response.data.activeSampleProcessingByID['ngracetime'],\r\n          \"nprocesstime\":response.data.activeSampleProcessingByID&&response.data.activeSampleProcessingByID['nprocesstime']\r\n\r\n            }\r\n\r\n            let SampleType = [];\r\n            let CollectionTubeType = [];\r\n            let SampleProcessType = [];\r\n            CollectionTubeType.push({\r\n                \"value\": response.data.activeSampleProcessingByID[\"ncollectiontubetypecode\"],\r\n                \"label\": response.data.activeSampleProcessingByID[\"stubename\"]\r\n            });\r\n            SampleType.push({\r\n                \"value\": response.data.activeSampleProcessingByID[\"nproductcode\"],\r\n                \"label\": response.data.activeSampleProcessingByID[\"sproductname\"]\r\n            });\r\n            SampleProcessType.push({\r\n                \"value\": response.data.activeSampleProcessingByID[\"nprocesstypecode\"],\r\n                \"label\": response.data.activeSampleProcessingByID[\"sprocesstypename\"]\r\n            });\r\n            selectedRecord[\"nproductcode\"] = SampleType[0];\r\n            selectedRecord[\"nprocesstypecode\"] = SampleProcessType[0];\r\n            selectedRecord[\"ncollectiontubetypecode\"] = CollectionTubeType[0];\r\n\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    operation: editParam.operation,\r\n                    ncontrolcode: editParam.ncontrolCode,\r\n                    openModal: true,\r\n                    loading: false,\r\n                    selectedId,\r\n                    screenName: editParam.screenName,\r\n                    dataState:editParam.dataState\r\n\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getSampleProcessing(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"storagesampleprocessing/getSampleProcessing\", inputParam.inputData)\r\n            .then(response => {\r\n                let selectedId=null;\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedId,\r\n                        masterData, loading: false,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n/*\r\nexport function getCommentsDeviation(inputParam) {\r\n    return function (dispatch) {\r\n  \r\n\r\n\r\n        rsapi.post(\"storagesampleprocessing/getCommentsDeviation\", {...inputParam.inputData})\r\n        .then(response => {\r\n\r\n            let masterData = { ...inputParam.masterData, ...response.data }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord: {...inputParam.selectedRecord},\r\n                    loading: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n    */\r\n\r\nexport function validateEsignCredentialSampleProcessing(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n\r\n\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    // if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                    //     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    // }\r\n                    \r\n\t\r\n                        dispatch(saveSampleProcessing(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]))\r\n \r\n                 \r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}