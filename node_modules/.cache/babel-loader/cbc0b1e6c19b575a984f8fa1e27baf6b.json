{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Scheduler,DayView,WeekView,MonthView}from'@progress/kendo-react-scheduler';var AnalystCalendarBasedOnUser=/*#__PURE__*/function(_React$Component){_inherits(AnalystCalendarBasedOnUser,_React$Component);var _super=_createSuper(AnalystCalendarBasedOnUser);function AnalystCalendarBasedOnUser(props){var _this;_classCallCheck(this,AnalystCalendarBasedOnUser);_this=_super.call(this,props);// this.data1 = []\n_this.state={data:[]};return _this;}_createClass(AnalystCalendarBasedOnUser,[{key:\"render\",value:function render(){console.log('data',this.state.data);var displayDate=new Date(Date.UTC(currentYear,new Date().getMonth(),new Date().getDate()));return/*#__PURE__*/React.createElement(Scheduler,{data:this.state.data,editable:{add:true,remove:true,drag:true,resize:true,select:true,edit:true},defaultDate:displayDate},/*#__PURE__*/React.createElement(DayView,{numberOfDays:3,style:{zorder:25000}}),/*#__PURE__*/React.createElement(WeekView,null),/*#__PURE__*/React.createElement(MonthView,null));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){console.log('alaystCalender2');var data=[];if(this.props.userData!==undefined){if(this.props.userData.length!==this.state.data.length){for(var i=0;i<this.props.userData.length;i++){data.push(this.props.userData[i].jsondata);}data=data.map(function(dataItem,i){return{start:parseAdjust(dataItem.UserStartDate+\".000z\"),end:parseAdjust(dataItem.UserEndDate+\".000z\"),title:dataItem.Comments,id:dataItem.id?dataItem.id:i,startTimezone:dataItem.startTimezone,endTimezone:dataItem.endTimezone,isAllDay:dataItem.isAllDay?dataItem.isAllDay:false,description:dataItem.description?dataItem.description:\"\",recurrenceRule:dataItem.recurrenceRule,recurrenceId:dataItem.recurrenceID,recurrenceExceptions:dataItem.recurrenceException,TaskId:dataItem.TaskId?dataItem.TaskId:i};});//     data   = [{ id:  \"1\",\n//     start: parseAdjust(\"2023-05-08 03:30:00.000\"),\n//     startTimezone:undefined,\n//     end: parseAdjust(\"2023-05-08 04:05:00.000\"),\n//     endTimezone: undefined,\n//     isAllDay: false,\n//     title: \"hpcl instrument-001\",\n//     description: \"\",\n//     recurrenceRule: undefined,\n//     recurrenceId: undefined,\n//     recurrenceExceptions:undefined,\n//     // roomId: dataItem.roomID,\n//     // ownerID: dataItem.TaskId,\n//     // personId: dataItem.TaskId,\n//   // taskID: 11,\n//   //  UserID: 3\n// }]\nthis.setState({data:data});}}}},{key:\"componentDidMount\",value:function componentDidMount(){console.log('alaystCalender1');this.setState({data:[]});}}]);return AnalystCalendarBasedOnUser;}(React.Component);export default AnalystCalendarBasedOnUser;export var currentYear=new Date().getFullYear();export var parseAdjust=function parseAdjust(eventDate){var date=new Date(eventDate);date.setFullYear(currentYear);return date;};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/AnalystCalenderBasedOnUser.jsx"],"names":["React","Scheduler","DayView","WeekView","MonthView","AnalystCalendarBasedOnUser","props","state","data","console","log","displayDate","Date","UTC","currentYear","getMonth","getDate","add","remove","drag","resize","select","edit","zorder","previousProps","userData","undefined","length","i","push","jsondata","map","dataItem","start","parseAdjust","UserStartDate","end","UserEndDate","title","Comments","id","startTimezone","endTimezone","isAllDay","description","recurrenceRule","recurrenceId","recurrenceID","recurrenceExceptions","recurrenceException","TaskId","setState","Component","getFullYear","eventDate","date","setFullYear"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,QAA7B,CAAuCC,SAAvC,KAAwD,iCAAxD,C,GAGMC,CAAAA,0B,oJACF,oCAAYC,KAAZ,CAAmB,4DACf,uBAAMA,KAAN,EACD;AAEC,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAG,EADE,CAAb,CAJe,aAOlB,C,6DAGD,iBAAS,CACLC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAmB,KAAKH,KAAL,CAAWC,IAA9B,EACA,GAAMG,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASC,WAAT,CAAsB,GAAIF,CAAAA,IAAJ,GAAWG,QAAX,EAAtB,CAA6C,GAAIH,CAAAA,IAAJ,GAAWI,OAAX,EAA7C,CAAT,CAApB,CACA,mBACI,oBAAC,SAAD,EAAW,IAAI,CAAE,KAAKT,KAAL,CAAWC,IAA5B,CAAkC,QAAQ,CAAE,CACxCS,GAAG,CAAE,IADmC,CAExCC,MAAM,CAAE,IAFgC,CAGxCC,IAAI,CAAE,IAHkC,CAIxCC,MAAM,CAAE,IAJgC,CAKxCC,MAAM,CAAE,IALgC,CAMxCC,IAAI,CAAE,IANkC,CAA5C,CAOG,WAAW,CAAEX,WAPhB,eAQI,oBAAC,OAAD,EAAS,YAAY,CAAE,CAAvB,CAA0B,KAAK,CAAE,CAAEY,MAAM,CAAE,KAAV,CAAjC,EARJ,cASI,oBAAC,QAAD,MATJ,cAUI,oBAAC,SAAD,MAVJ,CADJ,CAgBH,C,kCAED,4BAAmBC,aAAnB,CAAkC,CAC9Bf,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,GAAIF,CAAAA,IAAI,CAAG,EAAX,CACA,GAAI,KAAKF,KAAL,CAAWmB,QAAX,GAAwBC,SAA5B,CAAuC,CACnC,GAAI,KAAKpB,KAAL,CAAWmB,QAAX,CAAoBE,MAApB,GAA+B,KAAKpB,KAAL,CAAWC,IAAX,CAAgBmB,MAAnD,CAA2D,CACvD,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKtB,KAAL,CAAWmB,QAAX,CAAoBE,MAAxC,CAAgDC,CAAC,EAAjD,CAAqD,CACjDpB,IAAI,CAACqB,IAAL,CAAU,KAAKvB,KAAL,CAAWmB,QAAX,CAAoBG,CAApB,EAAuBE,QAAjC,EACH,CAEDtB,IAAI,CAAGA,IAAI,CAACuB,GAAL,CAAS,SAACC,QAAD,CAAUJ,CAAV,QAAiB,CAC7BK,KAAK,CAAEC,WAAW,CAACF,QAAQ,CAACG,aAAT,CAAuB,OAAxB,CADW,CAE7BC,GAAG,CAAEF,WAAW,CAACF,QAAQ,CAACK,WAAT,CAAqB,OAAtB,CAFa,CAG7BC,KAAK,CAAEN,QAAQ,CAACO,QAHa,CAK7BC,EAAE,CAAER,QAAQ,CAACQ,EAAT,CAAYR,QAAQ,CAACQ,EAArB,CAAwBZ,CALC,CAM7Ba,aAAa,CAAET,QAAQ,CAACS,aANK,CAO7BC,WAAW,CAAEV,QAAQ,CAACU,WAPO,CAQ7BC,QAAQ,CAAEX,QAAQ,CAACW,QAAT,CAAkBX,QAAQ,CAACW,QAA3B,CAAoC,KARjB,CAS7BC,WAAW,CAAEZ,QAAQ,CAACY,WAAT,CAAqBZ,QAAQ,CAACY,WAA9B,CAA0C,EAT1B,CAU7BC,cAAc,CAAEb,QAAQ,CAACa,cAVI,CAW7BC,YAAY,CAAEd,QAAQ,CAACe,YAXM,CAY7BC,oBAAoB,CAAEhB,QAAQ,CAACiB,mBAZF,CAa7BC,MAAM,CAAElB,QAAQ,CAACkB,MAAT,CAAgBlB,QAAQ,CAACkB,MAAzB,CAAgCtB,CAbX,CAAjB,EAAT,CAAP,CAiBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,KAAKuB,QAAL,CAAc,CAAE3C,IAAI,CAAEA,IAAR,CAAd,EACH,CACJ,CACJ,C,iCAGD,4BAAoB,CAChBC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,KAAKyC,QAAL,CAAc,CAAE3C,IAAI,CAAE,EAAR,CAAd,EACH,C,wCApFoCR,KAAK,CAACoD,S,EAuF/C,cAAe/C,CAAAA,0BAAf,CACA,MAAO,IAAMS,CAAAA,WAAW,CAAG,GAAIF,CAAAA,IAAJ,GAAWyC,WAAX,EAApB,CACP,MAAO,IAAMnB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAoB,SAAS,CAAI,CACpC,GAAMC,CAAAA,IAAI,CAAG,GAAI3C,CAAAA,IAAJ,CAAS0C,SAAT,CAAb,CACAC,IAAI,CAACC,WAAL,CAAiB1C,WAAjB,EACA,MAAOyC,CAAAA,IAAP,CACH,CAJM","sourcesContent":["import React from \"react\";\r\nimport { Scheduler, DayView, WeekView, MonthView } from '@progress/kendo-react-scheduler';\r\n\r\n\r\nclass AnalystCalendarBasedOnUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       // this.data1 = []\r\n  \r\n        this.state = {\r\n            data:  [],\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('data',this.state.data)\r\n        const displayDate = new Date(Date.UTC(currentYear, new Date().getMonth(), new Date().getDate()));\r\n        return (\r\n            <Scheduler data={this.state.data} editable={{\r\n                add: true,\r\n                remove: true,\r\n                drag: true,\r\n                resize: true,\r\n                select: true,\r\n                edit: true\r\n            }} defaultDate={displayDate}>\r\n                <DayView numberOfDays={3} style={{ zorder: 25000 }} />\r\n                <WeekView />\r\n                <MonthView />\r\n\r\n            </Scheduler>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        console.log('alaystCalender2')\r\n        let data = [];\r\n        if (this.props.userData !== undefined) {\r\n            if (this.props.userData.length !== this.state.data.length) {\r\n                for (let i = 0; i < this.props.userData.length; i++) {\r\n                    data.push(this.props.userData[i].jsondata);\r\n                }\r\n               \r\n                data = data.map((dataItem,i) => ({\r\n                    start: parseAdjust(dataItem.UserStartDate+\".000z\"),\r\n                    end: parseAdjust(dataItem.UserEndDate+\".000z\"),\r\n                    title: dataItem.Comments,\r\n                  \r\n                    id: dataItem.id?dataItem.id:i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    isAllDay: dataItem.isAllDay?dataItem.isAllDay:false,\r\n                    description: dataItem.description?dataItem.description:\"\",\r\n                    recurrenceRule: dataItem.recurrenceRule,\r\n                    recurrenceId: dataItem.recurrenceID,\r\n                    recurrenceExceptions: dataItem.recurrenceException,\r\n                    TaskId: dataItem.TaskId?dataItem.TaskId:i,\r\n                }))\r\n           \r\n\r\n            //     data   = [{ id:  \"1\",\r\n            //     start: parseAdjust(\"2023-05-08 03:30:00.000\"),\r\n            //     startTimezone:undefined,\r\n            //     end: parseAdjust(\"2023-05-08 04:05:00.000\"),\r\n            //     endTimezone: undefined,\r\n            //     isAllDay: false,\r\n            //     title: \"hpcl instrument-001\",\r\n            //     description: \"\",\r\n            //     recurrenceRule: undefined,\r\n            //     recurrenceId: undefined,\r\n            //     recurrenceExceptions:undefined,\r\n            //     // roomId: dataItem.roomID,\r\n            //     // ownerID: dataItem.TaskId,\r\n            //     // personId: dataItem.TaskId,\r\n            //   // taskID: 11,\r\n            //   //  UserID: 3\r\n            // }]\r\n                this.setState({ data: data });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('alaystCalender1')\r\n        this.setState({ data: [] });\r\n    }\r\n}\r\n\r\nexport default AnalystCalendarBasedOnUser;\r\nexport const currentYear = new Date().getFullYear();\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};"]},"metadata":{},"sourceType":"module"}