{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\TestFormulaTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Row, Col, Card, Nav, ListGroup, FormLabel, Media } from 'react-bootstrap';\nimport { HeaderText, ContactHeader } from './testmaster-styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport { ClientList } from '../../components/App.styles';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { ProductList } from '../product/product.styled';\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons'; // import ReactTooltip from 'react-tooltip';\n\nconst TestFormulaTab = props => {\n  const {\n    formulaList,\n    selectedParameter,\n    userInfo,\n    addId,\n    deleteId,\n    defaultFormulaId,\n    userRoleControlRights,\n    optionalData,\n    addPreDefinedFormulaId\n  } = props;\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_FORMULA\"\n  })), /*#__PURE__*/React.createElement(Nav.Item, {\n    className: \"add-txt-btn\",\n    name: \"addpredefinedformulaname\",\n    hidden: props.userRoleControlRights.indexOf(addId) === -1,\n    onClick: () => props.openPredefinedModal(userInfo, addPreDefinedFormulaId, optionalData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_PREDEFINEDFORMULA\",\n    defaultMessage: \"PreDefinedFormula\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Item, {\n    className: \"add-txt-btn\",\n    name: \"adduserdefinedformulaname\",\n    hidden: props.userRoleControlRights.indexOf(addId) === -1,\n    onClick: () => props.openModal(selectedParameter, userInfo, addId, optionalData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_USERDEFINEDFORMULA\",\n    defaultMessage: \"UserDefinedFormula\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    as: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, formulaList && formulaList.map((formulaitem, formulaindex) => {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: formulaindex,\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ContactHeader, {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 53\n      }\n    }, formulaitem.sformulaname), /*#__PURE__*/React.createElement(ProductList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 53\n      }\n    }, formulaitem.sformulacalculationdetail)), /*#__PURE__*/React.createElement(ClientList, {\n      className: \"mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 53\n      }\n    }, props.intl.formatMessage({\n      id: \"IDS_SETASDEFAULT\"\n    })), /*#__PURE__*/React.createElement(CustomSwitch, {\n      checked: formulaitem[\"ndefaultstatus\"] === 4 || formulaitem[\"ntransactionstatus\"] === 4 ? false : true,\n      name: `formulaswitch_${formulaitem[props.primaykeyName]}` //onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event)}\n      ,\n      onChange: event => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl, event, defaultFormulaId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(ClientList, {\n      className: \"ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"a\",\n      className: \"action-icons-wrap\",\n      name: \"deleteformulaname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ConfirmDialog, {\n      name: \"deleteMessage\",\n      message: props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }),\n      doLabel: props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }),\n      doNotLabel: props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }),\n      icon: faTrashAlt,\n      title: props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1,\n      handleClickDelete: () => props.deleteAction(formulaitem, \"delete\", deleteId, props.methodUrl, \"openChildModal\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 57\n      }\n    })))));\n  }))))));\n};\n\nexport default injectIntl(TestFormulaTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestFormulaTab.jsx"],"names":["React","injectIntl","FormattedMessage","Row","Col","Card","Nav","ListGroup","FormLabel","Media","HeaderText","ContactHeader","FontAwesomeIcon","ConfirmDialog","ClientList","CustomSwitch","ProductList","faPlus","faTrashAlt","TestFormulaTab","props","formulaList","selectedParameter","userInfo","addId","deleteId","defaultFormulaId","userRoleControlRights","optionalData","addPreDefinedFormulaId","intl","formatMessage","id","indexOf","openPredefinedModal","openModal","map","formulaitem","formulaindex","sformulaname","sformulacalculationdetail","primaykeyName","event","onSwitchChange","methodUrl","toLowerCase","deleteAction"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, ListGroup, FormLabel, Media } from 'react-bootstrap';\r\nimport { HeaderText, ContactHeader } from './testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ClientList } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst TestFormulaTab = (props) => {\r\n    const { formulaList, selectedParameter, userInfo, addId, deleteId,defaultFormulaId, userRoleControlRights, optionalData,addPreDefinedFormulaId } = props;\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        <HeaderText>{props.intl.formatMessage({ id: \"IDS_FORMULA\" })}</HeaderText>\r\n                        <Nav.Item className=\"add-txt-btn\" name=\"addpredefinedformulaname\"\r\n                            hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                            onClick={() => props.openPredefinedModal(userInfo, addPreDefinedFormulaId, optionalData)}>\r\n                            <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                            <FormattedMessage id=\"IDS_PREDEFINEDFORMULA\" defaultMessage=\"PreDefinedFormula\" />\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"add-txt-btn\" name=\"adduserdefinedformulaname\"\r\n                            hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                            onClick={() => props.openModal(selectedParameter, userInfo, addId, optionalData)}>\r\n                            <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                            <FormattedMessage id=\"IDS_USERDEFINEDFORMULA\" defaultMessage=\"UserDefinedFormula\" />\r\n                        </Nav.Item>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-0\">\r\n                        <ListGroup as=\"ul\">\r\n                            {formulaList &&\r\n                                formulaList.map((formulaitem, formulaindex) => {\r\n                                    return (\r\n                                        <ListGroup.Item key={formulaindex} as=\"li\">\r\n                                            <Media>\r\n                                                <Media.Body>\r\n                                                    <ContactHeader className=\"mt-0\">{formulaitem.sformulaname}</ContactHeader>\r\n                                                    <ProductList>{formulaitem.sformulacalculationdetail}</ProductList>\r\n                                                </Media.Body>\r\n                                                <ClientList className=\"mr-1\">\r\n                                                    <FormLabel>{props.intl.formatMessage({ id: \"IDS_SETASDEFAULT\" })}</FormLabel>\r\n                                                    <CustomSwitch\r\n                                                        checked={formulaitem[\"ndefaultstatus\"] === 4 || formulaitem[\"ntransactionstatus\"] === 4 ? false : true}\r\n                                                        name={`formulaswitch_${formulaitem[props.primaykeyName]}`}\r\n                                                        //onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event)}\r\n                                                        onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event,defaultFormulaId)}\r\n\r\n                                                    />\r\n                                                </ClientList>\r\n                                                <ClientList className=\"ml-3\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                    <Nav.Item as=\"a\" className=\"action-icons-wrap\" name=\"deleteformulaname\">\r\n                                                        <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            handleClickDelete={() => props.deleteAction(formulaitem, \"delete\", deleteId, props.methodUrl, \"openChildModal\")}\r\n                                                        />\r\n                                                    </Nav.Item>\r\n                                                </ClientList>\r\n                                            </Media>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestFormulaTab);"]},"metadata":{},"sourceType":"module"}