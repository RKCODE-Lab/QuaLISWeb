{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"name\",\"formLabel\",\"label\",\"placeholder\",\"isMandatory\",\"optionId\",\"optionValue\",\"options\",\"value\",\"defaultValue\",\"isMulti\",\"isSearchable\",\"isDisabled\",\"onChange\",\"onBlur\",\"closeMenuOnSelect\",\"className\",\"classNamePrefix\",\"minMenuHeight\",\"maxMenuHeight\",\"openMenuOnFocus\",\"menuPlacement\",\"menuPortalTarget\",\"menuPosition\",\"errors\",\"touched\",\"setFieldValue\",\"setFieldTouched\",\"isInvalid\",\"required\",\"onKeyUp\",\"formGroupClassName\"];import React//, { useState } \nfrom'react';import Select,{createFilter}from'react-select';import{Form}from'react-bootstrap';import{injectIntl}from'react-intl';var FormSelectSearch=function FormSelectSearch(_ref){var name=_ref.name,formLabel=_ref.formLabel,label=_ref.label,placeholder=_ref.placeholder,isMandatory=_ref.isMandatory,optionId=_ref.optionId,optionValue=_ref.optionValue,options=_ref.options,value=_ref.value,defaultValue=_ref.defaultValue,isMulti=_ref.isMulti,isSearchable=_ref.isSearchable,isDisabled=_ref.isDisabled,onChange=_ref.onChange,onBlur=_ref.onBlur,closeMenuOnSelect=_ref.closeMenuOnSelect,className=_ref.className,classNamePrefix=_ref.classNamePrefix,minMenuHeight=_ref.minMenuHeight,maxMenuHeight=_ref.maxMenuHeight,openMenuOnFocus=_ref.openMenuOnFocus,menuPlacement=_ref.menuPlacement,menuPortalTarget=_ref.menuPortalTarget,menuPosition=_ref.menuPosition,errors=_ref.errors,touched=_ref.touched,setFieldValue=_ref.setFieldValue,setFieldTouched=_ref.setFieldTouched,isInvalid=_ref.isInvalid,required=_ref.required,onKeyUp=_ref.onKeyUp,formGroupClassName=_ref.formGroupClassName,props=_objectWithoutProperties(_ref,_excluded);// const [matchFromStart, setMatchFromStart] = useState(false);\n// const filterConfig = {\n//     ignoreCase,\n//     ignoreAccents,\n//     trim,\n//     matchFrom: matchFromStart ? ('start' as const) : ('any' as const),\n//   };\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form.Group,{onKeyUp:onKeyUp,className:\"form-select w-100 floating-label react-select-wrap \".concat(formGroupClassName?formGroupClassName:\"\"),controlId:name},/*#__PURE__*/React.createElement(Select,{inputId:name,id:name,name:name,placeholder:placeholder,options:options,value:value,isInvalid:isInvalid,required:required,defaultValue:defaultValue,isMulti:isMulti,isSearchable:isSearchable,isDisabled:isDisabled,isClearable:props.isClearable,onChange:onChange,onBlur:onBlur,closeMenuOnSelect:closeMenuOnSelect,className:className,classNamePrefix:\"react-select\",minMenuHeight:minMenuHeight,maxMenuHeight:maxMenuHeight,openMenuOnFocus:true,menuPlacement:\"auto\",autoComplete:\"off\",menuPosition:menuPosition,noOptionsMessage:function noOptionsMessage(){return props.intl.formatMessage({id:\"IDS_NOOPTIONS\"});},filterOption:createFilter({matchFrom:props.matchFrom?props.matchFrom:'any'})// filterOption={createFilter({matchFrom:'start' })}\n// menuPortalTarget={document.querySelector('body')}\n// menuPosition=\"absolute\"\n// styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n}),/*#__PURE__*/React.createElement(Form.Label,{htmlFor:name},formLabel,isMandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors)));};export default injectIntl(FormSelectSearch);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/form-select-search/form-select-search.component.jsx"],"names":["React","Select","createFilter","Form","injectIntl","FormSelectSearch","name","formLabel","label","placeholder","isMandatory","optionId","optionValue","options","value","defaultValue","isMulti","isSearchable","isDisabled","onChange","onBlur","closeMenuOnSelect","className","classNamePrefix","minMenuHeight","maxMenuHeight","openMenuOnFocus","menuPlacement","menuPortalTarget","menuPosition","errors","touched","setFieldValue","setFieldTouched","isInvalid","required","onKeyUp","formGroupClassName","props","isClearable","intl","formatMessage","id","matchFrom"],"mappings":"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","sourcesContent":["import React//, { useState } \r\nfrom 'react';\r\nimport Select , { createFilter }from 'react-select';\r\nimport { Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst FormSelectSearch = ({\r\n    name,\r\n    formLabel,\r\n    label,\r\n    placeholder,\r\n    isMandatory,\r\n    optionId,\r\n    optionValue,\r\n    options,\r\n    value,\r\n    defaultValue,\r\n    isMulti,\r\n    isSearchable,\r\n    isDisabled,\r\n    onChange,\r\n    onBlur,\r\n    closeMenuOnSelect,\r\n    className,\r\n    classNamePrefix,\r\n    minMenuHeight,\r\n    maxMenuHeight,\r\n    openMenuOnFocus,\r\n    menuPlacement,\r\n    menuPortalTarget,\r\n    menuPosition,\r\n    errors,\r\n    touched,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    isInvalid,\r\n    required,\r\n    onKeyUp,\r\n    formGroupClassName,\r\n    ...props\r\n}) => {\r\n   // const [matchFromStart, setMatchFromStart] = useState(false);\r\n    // const filterConfig = {\r\n    //     ignoreCase,\r\n    //     ignoreAccents,\r\n    //     trim,\r\n    //     matchFrom: matchFromStart ? ('start' as const) : ('any' as const),\r\n    //   };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group onKeyUp={onKeyUp} className={`form-select w-100 floating-label react-select-wrap ${formGroupClassName? formGroupClassName: \"\"}`} controlId={name}>\r\n                <Select\r\n                    inputId={name}\r\n                    id={name}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    options={options}\r\n                    value={value}\r\n                    isInvalid={isInvalid}\r\n                    required={required}\r\n                    defaultValue={defaultValue}\r\n                    isMulti={isMulti}\r\n                    isSearchable={isSearchable}\r\n                    isDisabled={isDisabled}\r\n                    isClearable={props.isClearable}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    closeMenuOnSelect={closeMenuOnSelect}\r\n                    className={className}\r\n                    classNamePrefix=\"react-select\"\r\n                    minMenuHeight={minMenuHeight}\r\n                    maxMenuHeight={maxMenuHeight}\r\n                    openMenuOnFocus={true}\r\n                    menuPlacement={\"auto\"}\r\n                    autoComplete=\"off\"\r\n                    menuPosition={menuPosition}\r\n                    noOptionsMessage={()=>props.intl.formatMessage({ id: \"IDS_NOOPTIONS\" })}\r\n                    filterOption={createFilter({matchFrom:props.matchFrom ? props.matchFrom : 'any' })}\r\n                   // filterOption={createFilter({matchFrom:'start' })}\r\n                // menuPortalTarget={document.querySelector('body')}\r\n                // menuPosition=\"absolute\"\r\n                // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n\r\n                />\r\n                <Form.Label htmlFor={name}>{formLabel}{isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n};\r\nexport default injectIntl(FormSelectSearch);"]},"metadata":{},"sourceType":"module"}