{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';//import AddSampleTestComments from './AddSampleTestComments';\nimport Esign from'../audittrail/Esign';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ListWrapper}from'../../components/client-group.styles';import{callService,crudMaster,fetchSampleTestCommentsById,validateEsignCredential,openSampleTestCommentsModal,updateStore}from'../../actions';import{transactionStatus}from'../../components/Enumeration';import{constructOptionList,getControlMap,showEsign,validateEmail,validatePhoneNumber}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import AddSampleTestComments from'./AddSampleTestComments';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleTestComments=/*#__PURE__*/function(_React$Component){_inherits(SampleTestComments,_React$Component);var _super=_createSuper(SampleTestComments);function SampleTestComments(props){var _this;_classCallCheck(this,SampleTestComments);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;console.log(\"selectedId :\",selectedId);if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){selectedRecord['agree']=4;loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;delete selectedRecord['esignpassword'];delete selectedRecord['esigncomments'];delete selectedRecord['esignreason'];}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId//selectedId:null \n}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{if(event.target.name===\"sphoneno\"||event.target.name===\"smobileno\"){if(event.target.value!==\"\"){event.target.value=validatePhoneNumber(event.target.value);selectedRecord[event.target.name]=event.target.value!==\"\"?event.target.value:selectedRecord[event.target.name];}else{selectedRecord[event.target.name]=event.target.value;}}else{selectedRecord[event.target.name]=event.target.value;}}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){if(comboData!==null){var selectedRecord=_this.state.selectedRecord||{};var spredefinedenable=\"false\";var isCommentSubType=comboData.value;if(fieldName===\"ncommentsubtypecode\"){spredefinedenable=comboData.item.spredefinedenable;selectedRecord[\"spredefinedenable\"]=spredefinedenable;selectedRecord[fieldName]=comboData;selectedRecord[\"sdescription\"]=\"\";selectedRecord[\"spredefinedname\"]=\"\";}else{selectedRecord[fieldName]=comboData;}var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,spredefinedenable:spredefinedenable,isCommentSubType:isCommentSubType}};_this.props.updateStore(updateInfo);}};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.inputParam.displayName};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;var selectedId=null;if(_this.state.selectedRecord[\"ncommentsubtypecode\"].value===3){if(_this.state.selectedRecord[\"spredefinedname\"]===undefined||_this.state.selectedRecord[\"spredefinedname\"]===\"\"){toast.info(\"Enter PreDefined Name\");return;}}if(_this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"sampletestcomments\",selectedObject:\"selectedSampleTestComments\",primaryKeyField:\"nsampletestcommentscode\"};inputData[\"sampletestcomments\"]=JSON.parse(JSON.stringify(_this.state.selectedRecord));_this.fieldList.map(function(item){return inputData[\"sampletestcomments\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});inputData[\"sampletestcomments\"][\"nsampletestcommentscode\"]=_this.state.selectedRecord.nsampletestcommentscode;if(_this.state.selectedRecord[\"ncommentsubtypecode\"]&&_this.state.selectedRecord[\"ncommentsubtypecode\"].value!==3){inputData[\"sampletestcomments\"][\"spredefinedname\"]=\"\";}selectedId=_this.props.Login.selectedId;}else{inputData[\"sampletestcomments\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};_this.fieldList.map(function(item){return inputData[\"sampletestcomments\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});if(_this.state.selectedRecord[\"ncommentsubtypecode\"]&&_this.state.selectedRecord[\"ncommentsubtypecode\"].value!==3){inputData[\"sampletestcomments\"][\"spredefinedname\"]=\"\";}}inputData[\"sampletestcomments\"][\"ncommenttypecode\"]=_this.state.selectedRecord[\"ncommenttypecode\"]?_this.state.selectedRecord[\"ncommenttypecode\"].value:1;inputData[\"sampletestcomments\"][\"ncommentsubtypecode\"]=_this.state.selectedRecord[\"ncommentsubtypecode\"]?_this.state.selectedRecord[\"ncommentsubtypecode\"].value:-1;if(inputData[\"sampletestcomments\"]){delete inputData[\"sampletestcomments\"]['esignpassword'];delete inputData[\"sampletestcomments\"]['esigncomments'];delete inputData[\"sampletestcomments\"]['esignreason'];delete inputData[\"sampletestcomments\"]['agree'];}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:\"IDS_SAMPLETESTCOMMENTS\",inputData:inputData,selectedId:selectedId,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(inputData){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,selectedRecord:_objectSpread({},_this.state.selectedRecord),inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),inputData.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.closeModal=_this.closeModal.bind(_assertThisInitialized(_this));_this.extractedColumnList=[];_this.fieldList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,isOpen:false,userRoleControlRights:[],controlMap:new Map(),CommentType:[],CommentSubType:[]};return _this;}_createClass(SampleTestComments,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"controlType\":\"textbox\",\"idsName\":\"IDS_COMMENTNAME\",\"dataField\":\"scommentsubtype\",\"width\":\"150px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_ABBREVIATIONNAME\",\"dataField\":\"spredefinedname\",\"width\":\"150px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"150px\"}];primaryKeyField=\"nsampletestcommentscode\";this.fieldList=[\"ncommentsubtypecode\",\"spredefinedname\",\"sdescription\"];}var mandatoryFields=[{\"controlType\":\"selectbox\",\"mandatory\":true,\"idsName\":\"IDS_COMMENTNAME\",\"dataField\":\"ncommentsubtypecode\",\"mandatoryLabel\":\"IDS_SELECT\"},{\"controlType\":\"textbox\",\"mandatory\":true,\"idsName\":\"IDS_ABBREVIATIONNAME\",\"dataField\":\"spredefinedname\",\"mandatoryLabel\":\"IDS_ENTER\"},{\"controlType\":\"textbox\",\"mandatory\":true,\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"mandatoryLabel\":\"IDS_ENTER\"}];var removeAbbreviationMandatoryFields=[{\"controlType\":\"selectbox\",\"mandatory\":true,\"idsName\":\"IDS_COMMENTNAME\",\"dataField\":\"ncommentsubtypecode\",\"mandatoryLabel\":\"IDS_SELECT\"},{\"controlType\":\"textbox\",\"mandatory\":true,\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"mandatoryLabel\":\"IDS_ENTER\"}];var addId=this.state.controlMap.has(\"AddSampleTestComments\")&&this.state.controlMap.get(\"AddSampleTestComments\").ncontrolcode;var editId=this.state.controlMap.has(\"EditSampleTestComments\")&&this.state.controlMap.get(\"EditSampleTestComments\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteSampleTestComments\")&&this.state.controlMap.get(\"DeleteSampleTestComments\").ncontrolcode;// const editParam = {\n//     screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nsampletestcommentscode\", operation: \"update\",\n//     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\n// };\nvar addParam={screenName:\"IDS_SAMPLETESTCOMMENTS\",operation:\"create\",primaryKeyName:\"nsampletestcommentscode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:addId};var editParam={screenName:\"IDS_SAMPLETESTCOMMENTS\",operation:\"update\",primaryKeyName:\"nsampletestcommentscode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:editId,inputListName:\"SampleTestComments\",selectedObject:\"selectedRecord\"};var deleteParam={operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,formatMessage:this.props.intl.formatMessage,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.fetchSampleTestCommentsById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,editParam:editParam,deleteParam:deleteParam,addRecord:function addRecord(){return _this2.props.openSampleTestCommentsModal(\"IDS_SAMPLETESTCOMMENTS\",\"create\",\"nsampletestcommentscode\",_this2.props.Login.masterData,_this2.props.Login.userInfo,addId);},gridHeight:\"600px\",pageable:true,isAddRequired:true,isActionRequired:true,isToolBarRequired:true,scrollable:\"scrollable\",selectedId:this.props.Login.selectedId}):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.isCommentSubType===3?mandatoryFields:removeAbbreviationMandatoryFields,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddSampleTestComments,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,CommentType:this.state.CommentType||[],CommentSubType:this.state.CommentSubType||[]})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,// isOpen: false,\ndataResult:process(this.props.Login.masterData,dataState),dataState:dataState,selectedRecord:{}});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.CommentType!==previousProps.Login.CommentType){var CommentType=constructOptionList(this.props.Login.CommentType||[],\"ncommenttypecode\",\"scommenttype\",undefined,undefined,undefined);var CommentTypeList=CommentType.get(\"OptionList\");this.setState({CommentType:CommentTypeList});}if(this.props.Login.CommentSubType!==previousProps.Login.CommentSubType){var CommentSubType=constructOptionList(this.props.Login.CommentSubType||[],\"ncommentsubtypecode\",\"scommentsubtype\",undefined,undefined,undefined);var CommentSubTypeList=CommentSubType.get(\"OptionList\");this.setState({CommentSubType:CommentSubTypeList});}if(this.props.Login.isCommentSubType!==previousProps.Login.isCommentSubType){this.setState({selectedRecord:this.props.Login.selectedRecord,spredefinedenable:this.props.Login.spredefinedenable});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleTestComments;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,openSampleTestCommentsModal:openSampleTestCommentsModal,fetchSampleTestCommentsById:fetchSampleTestCommentsById,updateStore:updateStore})(injectIntl(SampleTestComments));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/basemaster/SampleTestComments.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","Esign","SlideOutModal","ListWrapper","callService","crudMaster","fetchSampleTestCommentsById","validateEsignCredential","openSampleTestCommentsModal","updateStore","transactionStatus","constructOptionList","getControlMap","showEsign","validateEmail","validatePhoneNumber","DEFAULT_RETURN","AddSampleTestComments","mapStateToProps","state","Login","SampleTestComments","props","dataStateChange","event","setState","dataResult","masterData","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedId","console","log","operation","updateInfo","typeName","data","onInputOnChange","target","type","name","checked","YES","NO","value","onComboChange","comboData","fieldName","spredefinedenable","isCommentSubType","item","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","onSaveClick","saveType","formRef","postParam","undefined","info","inputListName","selectedObject","primaryKeyField","JSON","parse","stringify","fieldList","map","nsampletestcommentscode","nmastersitecode","searchRef","esignNeeded","userRoleControlRights","nformcode","ncontrolcode","screenData","deleteRecord","toLowerCase","ncontrolCode","screenName","intl","formatMessage","id","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","bind","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","isOpen","controlMap","Map","CommentType","CommentSubType","mandatoryFields","removeAbbreviationMandatoryFields","addId","has","get","editId","deleteId","addParam","primaryKeyName","editParam","deleteParam","previousProps","Object","values","push","CommentTypeList","CommentSubTypeList","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n//import AddSampleTestComments from './AddSampleTestComments';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { callService, crudMaster, fetchSampleTestCommentsById, validateEsignCredential, openSampleTestCommentsModal, updateStore } from '../../actions';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { constructOptionList, getControlMap, showEsign,validateEmail,validatePhoneNumber } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport AddSampleTestComments from './AddSampleTestComments';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleTestComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.extractedColumnList = [];\r\n        this.fieldList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            CommentType:[],\r\n            CommentSubType:[]\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        console.log(\"selectedId :\",selectedId);\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                selectedRecord['agree'] = 4;\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                delete selectedRecord['esignpassword'] \r\n                delete selectedRecord['esigncomments'] \r\n                delete selectedRecord['esignreason']\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId=null;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,selectedId\r\n                //selectedId:null \r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    render() {\r\n\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"width\": \"150px\" },\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"width\": \"150px\" },\r\n                { \"controlType\": \"textbox\", \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"150px\" },\r\n\r\n            ]\r\n                     \r\n            primaryKeyField = \"nsampletestcommentscode\";\r\n            this.fieldList = [\r\n                \"ncommentsubtypecode\",\"spredefinedname\",\"sdescription\"\r\n        ];\r\n        }\r\n\r\n\r\n        const mandatoryFields=[ \r\n                            { \"controlType\": \"selectbox\",\"mandatory\": true, \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"ncommentsubtypecode\", \"mandatoryLabel\":\"IDS_SELECT\"},\r\n                            { \"controlType\": \"textbox\",\"mandatory\": true, \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"mandatoryLabel\":\"IDS_ENTER\"},\r\n                            { \"controlType\": \"textbox\",\"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"mandatoryLabel\":\"IDS_ENTER\" } ];\r\n\r\n        const removeAbbreviationMandatoryFields=[ \r\n                            { \"controlType\": \"selectbox\",\"mandatory\": true, \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"ncommentsubtypecode\", \"mandatoryLabel\":\"IDS_SELECT\"},\r\n                            { \"controlType\": \"textbox\",\"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"mandatoryLabel\":\"IDS_ENTER\" } ];\r\n       \r\n        const addId = this.state.controlMap.has(\"AddSampleTestComments\") && this.state.controlMap.get(\"AddSampleTestComments\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSampleTestComments\") && this.state.controlMap.get(\"EditSampleTestComments\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSampleTestComments\") && this.state.controlMap.get(\"DeleteSampleTestComments\").ncontrolcode;\r\n\r\n        // const editParam = {\r\n        //     screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nsampletestcommentscode\", operation: \"update\",\r\n        //     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        // };\r\n        const addParam = {\r\n            screenName: \"IDS_SAMPLETESTCOMMENTS\", operation: \"create\", primaryKeyName: \"nsampletestcommentscode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: addId\r\n            \r\n        }\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_SAMPLETESTCOMMENTS\", operation: \"update\", primaryKeyName: \"nsampletestcommentscode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, inputListName: \"SampleTestComments\", selectedObject: \"selectedRecord\"\r\n        };\r\n        const deleteParam = { operation: \"delete\" };\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                           \r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    fetchRecord={this.props.fetchSampleTestCommentsById}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    addRecord = {() => this.props.openSampleTestCommentsModal(\"IDS_SAMPLETESTCOMMENTS\", \"create\", \"nsampletestcommentscode\", this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                    gridHeight = {\"600px\"}\r\n                                    pageable={true}\r\n                                    isAddRequired={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                   \r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.isCommentSubType === 3 ? mandatoryFields : removeAbbreviationMandatoryFields}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddSampleTestComments\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                CommentType={this.state.CommentType || []}\r\n                                CommentSubType={this.state.CommentSubType || []}\r\n                            />\r\n                            \r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                   // isOpen: false,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState,\r\n                    selectedRecord:{}\r\n                });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if(this.props.Login.CommentType!==previousProps.Login.CommentType){\r\n            const CommentType=constructOptionList(this.props.Login.CommentType ||[], \"ncommenttypecode\",\r\n            \"scommenttype\" , undefined, undefined, undefined);\r\n            const CommentTypeList=CommentType.get(\"OptionList\")\r\n            this.setState({CommentType:CommentTypeList})\r\n        }\r\n        if(this.props.Login.CommentSubType!==previousProps.Login.CommentSubType){\r\n            const CommentSubType=constructOptionList(this.props.Login.CommentSubType ||[], \"ncommentsubtypecode\",\r\n            \"scommentsubtype\" , undefined, undefined, undefined);\r\n            const CommentSubTypeList=CommentSubType.get(\"OptionList\")\r\n            this.setState({CommentSubType:CommentSubTypeList})\r\n        }\r\n        if(this.props.Login.isCommentSubType !== previousProps.Login.isCommentSubType){\r\n            this.setState({selectedRecord:this.props.Login.selectedRecord , spredefinedenable:this.props.Login.spredefinedenable})\r\n        }\r\n    }\r\n\r\n    onInputOnChange=(event)=>  {\r\n        \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox')\r\n        {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else  {\r\n            if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\"){\r\n                if (event.target.value !== \"\"){\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value:selectedRecord[event.target.name];\r\n                }\r\n                else{     \r\n                    selectedRecord[event.target.name] = event.target.value;               \r\n                }\r\n            }  \r\n            else{     \r\n                selectedRecord[event.target.name] = event.target.value;               \r\n            }         \r\n        }     \r\n        this.setState({selectedRecord});\r\n        \r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            let spredefinedenable=\"false\";\r\n            let isCommentSubType = comboData.value;\r\n            \r\n            if(fieldName === \"ncommentsubtypecode\")\r\n            {\r\n               spredefinedenable=comboData.item.spredefinedenable;\r\n               selectedRecord[\"spredefinedenable\"]=spredefinedenable;\r\n               selectedRecord[fieldName] = comboData;\r\n               selectedRecord[\"sdescription\"] = \"\";\r\n               selectedRecord[\"spredefinedname\"] = \"\";\r\n            }\r\n            else\r\n            {\r\n              selectedRecord[fieldName] = comboData;\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, spredefinedenable, isCommentSubType}\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        \r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        let selectedId = null;\r\n\r\n        if (this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3) {\r\n            if (this.state.selectedRecord[\"spredefinedname\"] === undefined || \r\n                 this.state.selectedRecord[\"spredefinedname\"] === \"\") {\r\n                toast.info(\"Enter PreDefined Name\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"sampletestcomments\", selectedObject: \"selectedSampleTestComments\", primaryKeyField: \"nsampletestcommentscode\" }\r\n            inputData[\"sampletestcomments\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            this.fieldList.map(item => {\r\n                return inputData[\"sampletestcomments\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n            inputData[\"sampletestcomments\"][\"nsampletestcommentscode\"] = this.state.selectedRecord.nsampletestcommentscode;\r\n            if(this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value !== 3)\r\n            {\r\n                inputData[\"sampletestcomments\"][\"spredefinedname\"]=\"\";\r\n            }\r\n            selectedId =  this.props.Login.selectedId;\r\n        } else {\r\n            inputData[\"sampletestcomments\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n            this.fieldList.map(item => {\r\n                return inputData[\"sampletestcomments\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            });\r\n            if(this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value !== 3)\r\n            {\r\n                inputData[\"sampletestcomments\"][\"spredefinedname\"]=\"\";\r\n\r\n            }\r\n        }\r\n        inputData[\"sampletestcomments\"][\"ncommenttypecode\"] = this.state.selectedRecord[\"ncommenttypecode\"] ? this.state.selectedRecord[\"ncommenttypecode\"].value : 1;\r\n        inputData[\"sampletestcomments\"][\"ncommentsubtypecode\"] = this.state.selectedRecord[\"ncommentsubtypecode\"] ? this.state.selectedRecord[\"ncommentsubtypecode\"].value : -1;\r\n        \r\n        if(inputData[\"sampletestcomments\"]){\r\n            delete  inputData[\"sampletestcomments\"]['esignpassword'] \r\n            delete  inputData[\"sampletestcomments\"]['esigncomments']   \r\n            delete  inputData[\"sampletestcomments\"]['esignreason']  \r\n            delete  inputData[\"sampletestcomments\"]['agree']  \r\n       }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName:\"IDS_SAMPLETESTCOMMENTS\",\r\n            inputData: inputData, selectedId,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            selectedRecord: {...this.state.selectedRecord}\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        const esignNeeded  = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            \r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    \r\n    }\r\n    deleteRecord = (inputData) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            selectedRecord: {...this.state.selectedRecord},\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: inputData.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            \r\n            operation: inputData.operation,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            dataState: this.state.dataState\r\n\r\n        }\r\n        \r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                 masterData :[], inputParam:undefined, operation:null,modalName:undefined\r\n                }\r\n            }\r\n        this.props.updateStore(updateInfo);\r\n    }    \r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster,  validateEsignCredential, openSampleTestCommentsModal,fetchSampleTestCommentsById, updateStore })(injectIntl(SampleTestComments));\r\n"]},"metadata":{},"sourceType":"module"}