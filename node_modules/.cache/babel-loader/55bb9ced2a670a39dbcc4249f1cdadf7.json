{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\ParameterTab.jsx\";\nimport React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage } from 'react-intl';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\nimport ParameterTabAccordion from './ParameterTabAccordion';\nimport ReactTooltip from 'react-tooltip';\n\nconst ParameterTab = props => {\n  const addParameterId = props.controlMap.has(\"AddParameter\") && props.controlMap.get(\"AddParameter\").ncontrolcode;\n\n  function testParameterAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameter => accordionMap.set(testParameter.ntestparametercode, /*#__PURE__*/React.createElement(ParameterTabAccordion, {\n      testParameter: testParameter,\n      userRoleControlRights: props.userRoleControlRights,\n      controlMap: props.controlMap,\n      userInfo: props.userInfo,\n      masterData: props.masterData,\n      selectedParameter: props.masterData.selectedParameter,\n      addParameter: props.addParameter,\n      deleteAction: props.deleteAction,\n      ConfirmDelete: props.ConfirmDelete,\n      addCodedResult: props.addCodedResult,\n      addFormula: props.addFormula,\n      onSwitchChange: props.onSwitchChange,\n      addParameterSpecification: props.addParameterSpecification,\n      testFormula: props.masterData.TestFormula,\n      testParameterNumeric: props.masterData.TestParameterNumeric,\n      testPredefinedParameter: props.masterData.TestPredefinedParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    })));\n    return accordionMap;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    place: \"bottom\",\n    globalEventOff: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addtestparameter\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addParameterId) === -1,\n    onClick: () => props.addParameter(\"create\", {}, props.userInfo, addParameterId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADDPARAMETER\",\n    defaultMessage: \"Add Parameter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })))), props.TestParameter && props.TestParameter.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n    key: \"parameteraccordion\",\n    accordionTitle: \"sparametername\",\n    accordionComponent: testParameterAccordion(props.TestParameter),\n    inputParam: {\n      masterData: props.masterData,\n      userInfo: props.userInfo,\n      nFlag: 5\n    },\n    accordionClick: props.getTestDetails,\n    accordionPrimaryKey: \"ntestparametercode\",\n    accordionObjectName: \"testParameter\",\n    selectedKey: props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default ParameterTab;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testmanagement/ParameterTab.jsx"],"names":["React","Nav","FontAwesomeIcon","FormattedMessage","faPlus","CustomAccordion","ParameterTabAccordion","ReactTooltip","ParameterTab","props","addParameterId","controlMap","has","get","ncontrolcode","testParameterAccordion","TestParameter","accordionMap","Map","map","testParameter","set","ntestparametercode","userRoleControlRights","userInfo","masterData","selectedParameter","addParameter","deleteAction","ConfirmDelete","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","TestFormula","TestParameterNumeric","TestPredefinedParameter","indexOf","length","nFlag","getTestDetails"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\nimport ParameterTabAccordion from './ParameterTabAccordion';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst ParameterTab = (props) => {\r\n    const addParameterId = props.controlMap.has(\"AddParameter\") && props.controlMap.get(\"AddParameter\").ncontrolcode;\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.ntestparametercode,\r\n                <ParameterTabAccordion\r\n                    testParameter={testParameter}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    masterData={props.masterData}\r\n                    selectedParameter={props.masterData.selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    ConfirmDelete={props.ConfirmDelete}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testFormula={props.masterData.TestFormula}\r\n                    testParameterNumeric={props.masterData.TestParameterNumeric}\r\n                    testPredefinedParameter={props.masterData.TestPredefinedParameter}\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\r\n                        onClick={() => props.addParameter(\"create\", {}, props.userInfo, addParameterId)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_ADDPARAMETER\" defaultMessage=\"Add Parameter\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            {props.TestParameter && props.TestParameter.length > 0 &&\r\n                <CustomAccordion\r\n                    key=\"parameteraccordion\"\r\n                    accordionTitle={\"sparametername\"}\r\n                    accordionComponent={testParameterAccordion(props.TestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                    accordionClick={props.getTestDetails}\r\n                    accordionPrimaryKey={\"ntestparametercode\"}\r\n                    accordionObjectName={\"testParameter\"}\r\n                    selectedKey={props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParameterTab;"]},"metadata":{},"sourceType":"module"}