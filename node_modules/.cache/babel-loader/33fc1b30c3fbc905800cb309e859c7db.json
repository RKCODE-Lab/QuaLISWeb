{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Nav,FormGroup,FormLabel}from'react-bootstrap';import{HeaderSpan}from'./registration.styled';import'./registration.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCartArrowDown,faFileImport,faPlus}from'@fortawesome/free-solid-svg-icons';import{FormattedMessage,injectIntl}from'react-intl';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import DataGrid from'../../components/data-grid/data-grid.component';import DynamicSlideout from'../dynamicpreregdesign/DynamicSlideout';import{ReadOnlyText}from'../../components/App.styles';import{ProductList}from'../product/product.styled';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import ReactTooltip from'react-tooltip';var RegisterSlideOut=/*#__PURE__*/function(_Component){_inherits(RegisterSlideOut,_Component);var _super=_createSuper(RegisterSlideOut);function RegisterSlideOut(props){var _this;_classCallCheck(this,RegisterSlideOut);_this=_super.call(this,props);_this.state={selectedTestItem:[],selectedSourceItem:[],selectedTest:[]};return _this;}_createClass(RegisterSlideOut,[{key:\"render\",value:function render(){var _this2=this;var testColumnList=[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",width:\"200px\"},{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",width:\"150px\"},{\"idsName\":\"IDS_METHOD\",\"dataField\":\"smethodname\",width:\"150px\"},{\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",width:\"200px\"}];var subSampleList=[{\"idsName\":\"IDS_SUBSAMPLENAME\",\"dataField\":\"ssubsamplename\",width:\"200px\"},{\"idsName\":\"IDS_TOTALQUANITITY\",\"dataField\":\"ssampleqty\",width:\"150px\"},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",width:\"150px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",width:\"150px\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DynamicSlideout,{selectedRecord:this.props.selectedRecord,templateData:this.props.templateData,handleChange:this.props.handleChange,handleDateChange:this.props.handleDateChange,onInputOnChange:this.props.onInputOnChange,onNumericInputChange:this.props.onNumericInputChange,comboData:this.props.comboData,onComboChange:this.props.onComboChange,userInfo:this.props.userInfo,timeZoneList:this.props.timeZoneList,defaultTimeZone:this.props.defaultTimeZone}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SPECIFICATION\",defaultMessage:\"Specification\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\"// onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n,onClick:function onClick(e){return _this2.props.AddSpec(e);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SPECIFICATION\",defaultMessage:\"Specification\"})))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SPECIFICATION\",message:\"Specification\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.selectedSpec[\"nallottedspeccode\"]&&this.props.selectedSpec[\"nallottedspeccode\"].label))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSION\",message:\"Version\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.selectedSpec&&this.props.selectedSpec[\"sversion\"])))),this.props.subSample!==3?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENT\",defaultMessage:\"Component\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\",onClick:function onClick(e){return _this2.props.AddComponent(e);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENT\",defaultMessage:\"Component\"})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"slno\",primaryKeyField:\"slno\",selectedId:this.props.selectedComponent?this.props.selectedComponent.slno:null,dataResult:process(this.props.Component||[],this.props.componentDataState),dataState:this.props.componentDataState,dataStateChange:this.props.componentDataStateChange,extractedColumnList:this.props.componentColumnList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:true,handleRowClick:this.props.handleComponentRowClick,methodUrl:\"PopUp\",gridHeight:\"350px\",editRecordWORights:this.props.editComponent,deleteRecordWORights:this.props.deleteComponent,showdeleteRecordWORights:true,showeditRecordWORights:true}))):\"\",/*#__PURE__*/React.createElement(Row,null,this.props.subSample===3?/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBSAMPLE\",defaultMessage:\"Sub Sample\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\",onClick:function onClick(e){return _this2.props.addsubSample(_this2.props.specBasedComponent);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBSAMPLE\",defaultMessage:\"Sub Sample\"})))),/*#__PURE__*/React.createElement(DataGrid,_defineProperty({key:\"slno\",primaryKeyField:\"slno\",selectedId:this.props.selectedComponent?this.props.selectedComponent.slno:null// data={selectedTest}\n,dataResult:process(this.props.Component||[],this.props.subSampleDataState),dataState:this.props.subSampleDataState,dataStateChange:this.props.subSampleDataStateChange,extractedColumnList:subSampleList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:true,handleRowClick:this.props.handleComponentRowClick,methodUrl:\"PopUp\",gridHeight:\"400px\",editRecordWORights:function editRecordWORights(inputParam){return _this2.props.editSubSample(inputParam,_this2.props.specBasedComponent);},deleteRecordWORights:this.props.deleteComponent,showdeleteRecordWORights:true,showeditRecordWORights:true},\"isActionRequired\",true))):\"\",/*#__PURE__*/React.createElement(Col,{md:this.props.subSample===3?6:12},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TEST\",defaultMessage:\"Test\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\",onClick:function onClick(){return _this2.props.addTest(_this2.props.selectedComponent,_this2.props.subSample,_this2.props.specBasedComponent);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TEST\",defaultMessage:\"Test\"})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"ntestgrouptestcode\",primaryKeyField:\"ntestgrouptestcode\",selectedId:null//this.state.selectedTestItem.ntestgrouptestcode\n// data={selectedTest}\n,dataResult:process(this.props.SelectedTest||[],this.props.testDataState),dataState:this.props.testDataState,dataStateChange:this.props.testDataStateChange,extractedColumnList:testColumnList,controlMap:new Map(),userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:true// handleRowClick={this.handleRowClick}\n,methodUrl:\"PopUp\",gridHeight:\"400px\",deleteRecordWORights:this.props.deleteTest,showdeleteRecordWORights:true,showeditRecordWORights:false}))));}}]);return RegisterSlideOut;}(Component);export default injectIntl(RegisterSlideOut);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/RegisterSlideOut.jsx"],"names":["React","Component","Row","Col","Nav","FormGroup","FormLabel","HeaderSpan","FontAwesomeIcon","faCartArrowDown","faFileImport","faPlus","FormattedMessage","injectIntl","process","toast","DataGrid","DynamicSlideout","ReadOnlyText","ProductList","CustomSwitch","ReactTooltip","RegisterSlideOut","props","state","selectedTestItem","selectedSourceItem","selectedTest","testColumnList","width","subSampleList","selectedRecord","templateData","handleChange","handleDateChange","onInputOnChange","onNumericInputChange","comboData","onComboChange","userInfo","timeZoneList","defaultTimeZone","e","AddSpec","selectedSpec","label","subSample","AddComponent","selectedComponent","slno","componentDataState","componentDataStateChange","componentColumnList","controlMap","userRoleControlRights","inputParam","handleComponentRowClick","editComponent","deleteComponent","addsubSample","specBasedComponent","subSampleDataState","subSampleDataStateChange","editSubSample","addTest","SelectedTest","testDataState","testDataStateChange","Map","deleteTest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { HeaderSpan } from './registration.styled';\r\nimport './registration.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\n\r\nclass RegisterSlideOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTestItem: [],\r\n            selectedSourceItem: [],\r\n            selectedTest: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }\r\n        ]\r\n            const subSampleList = [\r\n                { \"idsName\": \"IDS_SUBSAMPLENAME\", \"dataField\": \"ssubsamplename\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_TOTALQUANITITY\", \"dataField\": \"ssampleqty\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"150px\" }]\r\n    \r\n\r\n        return (\r\n            <>\r\n                <DynamicSlideout\r\n                    selectedRecord={this.props.selectedRecord}\r\n                    templateData={this.props.templateData}\r\n                    handleChange={this.props.handleChange}\r\n                    handleDateChange={this.props.handleDateChange}\r\n                    onInputOnChange={this.props.onInputOnChange}\r\n                    onNumericInputChange={this.props.onNumericInputChange}\r\n                    comboData={this.props.comboData}\r\n                    onComboChange={this.props.onComboChange}\r\n                    userInfo={this.props.userInfo}\r\n                    timeZoneList={this.props.timeZoneList}\r\n                    defaultTimeZone={this.props.defaultTimeZone}\r\n                />\r\n                <Row>\r\n                    <Col md={12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan>\r\n                                    <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                    // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                    onClick={(e) => this.props.AddSpec(e)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                    <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {/* <Col md={12} className=\"actioncolor\">\r\n                        <ProductList className=\"d-flex justify-content-end dropdown badget_menu hideboxshadow\">\r\n                            <CustomSwitch\r\n                                name={\"ntransactionstatus\"}\r\n                                type=\"switch\"\r\n                                parentClassName=\"customswitchcss\"\r\n                                labelClassName={\"mb-0 paddingleft5\"}\r\n                                label={\"IDS_ALLTEST\"}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_ALLTEST\" })}\r\n                                defaultValue={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                            />\r\n                            <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\"\r\n                                href=\"#\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_GETCOMPONENTS\" })}\r\n                            >\r\n                                <FontAwesomeIcon icon={faCartArrowDown} className=\"ActionIconColor\"\r\n                                    onClick={(event) => getComponent(event, this.props.selectedRecord)}\r\n                                />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\" href=\"\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTEXCEL\" })}\r\n                                hidden={false}>\r\n                                <input type=\"file\" style={{ display: \"none\" }} />\r\n                                <FontAwesomeIcon icon={faFileImport} className=\"ActionIconColor\" onClick={(event) => this.props.AddFile()}>\r\n                                </FontAwesomeIcon>\r\n\r\n                            </Nav.Link>\r\n                        </ProductList>\r\n                    </Col> */}\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                            <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                            <ReadOnlyText>\r\n                                {this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]}\r\n                            </ReadOnlyText>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.subSample !== 3 ?\r\n                    <Row>\r\n                        <Col md={12} className=\"p-0\">\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <HeaderSpan>\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-right\"\r\n                                        onClick={(e) => this.props.AddComponent(e)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            <DataGrid\r\n                                key=\"slno\"\r\n                                primaryKeyField=\"slno\"\r\n                                selectedId={this.props.selectedComponent ? this.props.selectedComponent.slno : null}\r\n                                dataResult={process(this.props.Component || [], this.props.componentDataState)}\r\n                                dataState={this.props.componentDataState}\r\n                                dataStateChange={this.props.componentDataStateChange}\r\n                                extractedColumnList={this.props.componentColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                hasControlWithOutRights={true}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                pageable={true}\r\n                                scrollable={\"scrollable\"}\r\n                                isActionRequired={true}\r\n                                handleRowClick={this.props.handleComponentRowClick}\r\n                                methodUrl=\"PopUp\"\r\n                                gridHeight={\"350px\"}\r\n                                editRecordWORights={this.props.editComponent}\r\n                                deleteRecordWORights={this.props.deleteComponent}\r\n                                showdeleteRecordWORights={true}\r\n                                showeditRecordWORights={true}\r\n                            >\r\n                            </DataGrid>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    : \"\"}\r\n                <Row>\r\n                    {this.props.subSample === 3 ?\r\n                        <Col md={6}>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <HeaderSpan> <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' /></HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-right\" onClick={(e) => this.props.addsubSample(this.props.specBasedComponent)} >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            <DataGrid\r\n                                key=\"slno\"\r\n                                primaryKeyField=\"slno\"\r\n                                selectedId={this.props.selectedComponent ? this.props.selectedComponent.slno : null}\r\n                                // data={selectedTest}\r\n                                dataResult={process(this.props.Component||[], this.props.subSampleDataState)}\r\n                                dataState={this.props.subSampleDataState}\r\n                                dataStateChange={this.props.subSampleDataStateChange}\r\n                                extractedColumnList={subSampleList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                hasControlWithOutRights={true}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                pageable={true}\r\n                                scrollable={\"scrollable\"}\r\n                                isActionRequired={true}\r\n                                handleRowClick={this.props.handleComponentRowClick}\r\n                                methodUrl=\"PopUp\"\r\n                                gridHeight={\"400px\"}\r\n                                editRecordWORights={(inputParam)=>this.props.editSubSample(inputParam,this.props.specBasedComponent)}\r\n                                deleteRecordWORights={this.props.deleteComponent}\r\n                                showdeleteRecordWORights={true}\r\n                                showeditRecordWORights={true}\r\n                                isActionRequired={true}\r\n                               // handleRowClick={this.props.selectSubSample}\r\n                            />\r\n                        </Col> : \"\"}\r\n                    <Col md={this.props.subSample === 3 ? 6 : 12}>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addTest(this.props.selectedComponent,\r\n                                    this.props.subSample,this.props.specBasedComponent)} >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            key=\"ntestgrouptestcode\"\r\n                            primaryKeyField=\"ntestgrouptestcode\"\r\n                            selectedId={null}//this.state.selectedTestItem.ntestgrouptestcode\r\n                            // data={selectedTest}\r\n                            dataResult={process(this.props.SelectedTest || [], this.props.testDataState)}\r\n                            dataState={this.props.testDataState}\r\n                            dataStateChange={this.props.testDataStateChange}\r\n                            extractedColumnList={testColumnList}\r\n                            controlMap={new Map()}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            // handleRowClick={this.handleRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"400px\"}\r\n                            deleteRecordWORights={this.props.deleteTest}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={false}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default injectIntl(RegisterSlideOut)\r\n"]},"metadata":{},"sourceType":"module"}