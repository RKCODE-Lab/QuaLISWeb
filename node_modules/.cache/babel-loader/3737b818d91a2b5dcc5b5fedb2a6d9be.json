{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\storagemanagement\\\\ImportDataGridWithSelection.jsx\";\nimport { injectIntl } from 'react-intl';\nimport { Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\n\nclass ImportDataGridWithSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRecord: this.props.selectedRecord\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.isInitialRender === false) {\n      console.log(\"1\", false);\n      return false;\n    } else {\n      console.log(\"2\", true);\n      return true;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n      userInfo: this.props.Login.userInfo,\n      data: this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen !== null || this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen.length > 0 ? this.props.Login.masterData.bulkbarcodedatagen : [] || [],\n      selectAll: this.props.selectAll,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_SELECTTODELETE\"\n      }),\n      selectionChange: this.props.selectionChange,\n      headerSelectionChange: this.props.headerSelectionChange,\n      extractedColumnList: this.props.extractedColumnList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {})(injectIntl(ImportDataGridWithSelection));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/ImportDataGridWithSelection.jsx"],"names":["injectIntl","Col","connect","React","Component","DataGridWithSelection","ImportDataGridWithSelection","constructor","props","state","selectedRecord","shouldComponentUpdate","nextProps","nextState","isInitialRender","console","log","render","Login","userInfo","masterData","selectedBulkBarcodeGeneration","bulkbarcodedatagen","length","selectAll","intl","formatMessage","id","selectionChange","headerSelectionChange","extractedColumnList","mapStateToProps"],"mappings":";AACA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAAUC,GAAV,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;;AAEA,MAAMC,2BAAN,SAA0CF,SAA1C,CAAmD;AAC/CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE;AADjB,KAAd;AAGH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAACE,eAAV,KAA8B,KAAlC,EAAyC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgB,KAAhB;AACA,aAAO,KAAP;AACP,KAHD,MAIK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgB,IAAhB;AACA,aAAO,IAAP;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACD,uDACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACkC,oBAAC,qBAAD;AACI,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,QAD/B;AAEI,MAAA,IAAI,EAAG,KAAKX,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,IAA+B,KAAKZ,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,CAA4BC,6BAA3D,IAA4F,KAAKb,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA5B,KAAmD,IAAhJ,IAA0J,KAAKd,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,IAA+B,KAAKZ,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,CAA4BC,6BAA3D,IAA4F,KAAKb,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA5B,CAA+CC,MAA/C,GAAwD,CAA9S,GAAmT,KAAKf,KAAL,CAAWU,KAAX,CAAiBE,UAAjB,CAA4BE,kBAA/U,GAAoW,MAAM,EAFpX;AAGI,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWgB,SAH1B;AAII,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJX;AAKI,MAAA,eAAe,EAAE,KAAKnB,KAAL,CAAWoB,eALhC;AAMI,MAAA,qBAAqB,EAAE,KAAKpB,KAAL,CAAWqB,qBANtC;AAOI,MAAA,mBAAmB,EAAE,KAAKrB,KAAL,CAAWsB,mBAPpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlC,CADH,CADC;AAgBH;;AAnC8C;;AAqCnD,MAAMC,eAAe,GAAGtB,KAAK,IAAI;AAC7B,SAAQ;AAAES,IAAAA,KAAK,EAAET,KAAK,CAACS;AAAf,GAAR;AACH,CAFD;;AAIA,eAAehB,OAAO,CAAC6B,eAAD,EAAkB,EAAlB,CAAP,CACZ/B,UAAU,CAACM,2BAAD,CADE,CAAf","sourcesContent":["\r\nimport { injectIntl } from 'react-intl';\r\nimport {  Col} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\n\r\nclass ImportDataGridWithSelection extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            selectedRecord: this.props.selectedRecord,\r\n        });\r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.isInitialRender === false ){\r\n                console.log(\"1\",false);\r\n                return false;\r\n        }\r\n        else {\r\n            console.log(\"2\",true);\r\n            return true;\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Col md={12}>\r\n                                            <DataGridWithSelection\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                data={(this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen !== null) || (this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeGeneration && this.props.Login.masterData.bulkbarcodedatagen.length > 0) ? this.props.Login.masterData.bulkbarcodedatagen : [] || []}\r\n                                                selectAll={this.props.selectAll}\r\n                                                title={this.props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                selectionChange={this.props.selectionChange}\r\n                                                headerSelectionChange={this.props.headerSelectionChange}\r\n                                                extractedColumnList={this.props.extractedColumnList}\r\n\r\n                                            />\r\n                                        </Col>\r\n\t\t\t\t\t\t\t</>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n})(injectIntl(ImportDataGridWithSelection));"]},"metadata":{},"sourceType":"module"}