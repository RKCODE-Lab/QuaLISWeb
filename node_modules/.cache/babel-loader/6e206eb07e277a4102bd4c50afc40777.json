{"ast":null,"code":"import _slicedToArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{faBolt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{useRef,useState}from'react';import{Button,ListGroup,Overlay,Popover}from'react-bootstrap';import{injectIntl,FormattedMessage}from'react-intl';import'../registration/registration.css';import{getStatusIcon}from'../../components/StatusIcon';import{Tooltip}from'@progress/kendo-react-tooltip';var ActionPopOver=function ActionPopOver(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),quickShow=_useState2[0],setQuickShow=_useState2[1];//const [show, setShow] = useState(false);\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),target=_useState4[0],setTarget=_useState4[1];var ref=useRef(null);// const handleClick = (event) => {\n//     setShow(!show);\n//     setTarget(event.target);\n// };\nvar handleQuickClick=function handleQuickClick(event){setQuickShow(!quickShow);setTarget(event.target);};var itemClick=function itemClick(paramstatus,sign){setQuickShow(!quickShow);props.dynamicButton({paramstatus:paramstatus,sign:sign});};return/*#__PURE__*/React.createElement(\"div\",{ref:ref},/*#__PURE__*/React.createElement(Tooltip,{position:\"bottom\",anchorElement:\"target\",openDelay:100,parentTitle:true},/*#__PURE__*/React.createElement(Button,{className:\"btn-circle btn-primary-blue\",title:props.intl.formatMessage({id:\"IDS_CLICKFORMOREACTIONS\"}),style:{display:Object.keys(props.actionDetails).length>0?\"flex\":\"none\"},onClick:handleQuickClick},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBolt}))),/*#__PURE__*/React.createElement(Overlay,{onHide:handleQuickClick,rootClose:true,show:quickShow,target:target,placement:\"bottom\",container:ref.current},/*#__PURE__*/React.createElement(Popover,{id:\"popover-contained\",class:\"float:left\"},/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\",className:\"no-border w130\"},props.roleActionDetails.length>0&&props.roleActionDetails.map(function(Action){return/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\",onClick:function onClick(){return itemClick(Action.ntransactionstatus,Action.nesignneed);}},getStatusIcon(Action.ntransactionstatus),/*#__PURE__*/React.createElement(\"span\",{className:\"ml-1 text-nowrap\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:Action.sactiondisplaystatus,defaultMessage:Action.sactiondisplaystatus})));})))));};export default injectIntl(ActionPopOver);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/product/ActionPopover.jsx"],"names":["React","faBolt","FontAwesomeIcon","useRef","useState","Button","ListGroup","Overlay","Popover","injectIntl","FormattedMessage","getStatusIcon","Tooltip","ActionPopOver","props","quickShow","setQuickShow","target","setTarget","ref","handleQuickClick","event","itemClick","paramstatus","sign","dynamicButton","intl","formatMessage","id","display","Object","keys","actionDetails","length","current","roleActionDetails","map","Action","ntransactionstatus","nesignneed","sactiondisplaystatus"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { faBolt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useRef, useState } from 'react';\r\nimport { Button, ListGroup, Overlay, Popover } from 'react-bootstrap';\r\nimport { injectIntl ,FormattedMessage} from 'react-intl';\r\nimport '../registration/registration.css'\r\nimport { getStatusIcon } from '../../components/StatusIcon';\r\nimport { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nconst ActionPopOver = (props) =>{\r\n                const [quickShow, setQuickShow] = useState(false);\r\n                //const [show, setShow] = useState(false);\r\n                const [target, setTarget] = useState(null);\r\n                const ref = useRef(null);\r\n\r\n                // const handleClick = (event) => {\r\n                //     setShow(!show);\r\n                //     setTarget(event.target);\r\n                // };\r\n                const handleQuickClick = (event) => {\r\n                    setQuickShow(!quickShow);\r\n                    setTarget(event.target);\r\n                };\r\n                const itemClick = (paramstatus , sign) => {\r\n                    setQuickShow(!quickShow);\r\n                    props.dynamicButton({paramstatus:paramstatus, sign:sign});\r\n                }\r\n\r\n                return ( <div ref={ref}>\r\n                            <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                            <Button className=\"btn-circle btn-primary-blue\" \r\n                                    title={props.intl.formatMessage({id:\"IDS_CLICKFORMOREACTIONS\"})}\r\n                                    style={{ display: Object.keys(props.actionDetails).length > 0 ? \"flex\" : \"none\" }}  \r\n                                    onClick={handleQuickClick}>\r\n                                <FontAwesomeIcon icon={faBolt}></FontAwesomeIcon>                                                    \r\n                            </Button>\r\n                            </Tooltip>\r\n                            <Overlay\r\n                                onHide={handleQuickClick}\r\n                                rootClose={true}\r\n                                show={quickShow}\r\n                                target={target}\r\n                                placement=\"bottom\"\r\n                                container={ref.current}\r\n                            >\r\n                                <Popover id=\"popover-contained\" class=\"float:left\">\r\n                                    <ListGroup as=\"ul\" className=\"no-border w130\">\r\n                                        {props.roleActionDetails.length > 0 &&\r\n                                        props.roleActionDetails.map((Action) =>\r\n                                            <ListGroup.Item as=\"li\" onClick={() => itemClick(Action.ntransactionstatus, Action.nesignneed)}>\r\n                                                 {getStatusIcon(Action.ntransactionstatus)}\r\n                                                 <span className='ml-1 text-nowrap'>\r\n                                                 <FormattedMessage id={Action.sactiondisplaystatus} defaultMessage={Action.sactiondisplaystatus} /> \r\n                                                 </span>\r\n                                             {/* <FormattedMessage id={Action.sactiondisplaystatus} defaultMessage={Action.sactiondisplaystatus} />  */}\r\n                                            </ListGroup.Item>\r\n                                       )}\r\n                                    </ListGroup>\r\n                                </Popover>\r\n                            </Overlay>\r\n                        </div >\r\n           ) }\r\nexport default injectIntl(ActionPopOver);\r\n"]},"metadata":{},"sourceType":"module"}