{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';//getComboLabelValue,, searchData\nimport{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getPasswordPolicyDetail(passwordPolicy,userInfo,masterData,selectedcombo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"passwordpolicy/getPasswordPolicy\",{npolicycode:passwordPolicy.npolicycode,\"userinfo\":userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getPasswordPolicyComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.UserRole.length>0){if(operation===\"create\"||operation===\"update\"&&masterData.SelectedPasswordPolicy.ntransactionstatus!==transactionStatus.RETIRED&&masterData.SelectedPasswordPolicy.ntransactionstatus!==transactionStatus.APPROVED){var selectedRecord={};var urlArray=[];if(operation===\"update\"){var _rsapi$post;var policyById=rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post));urlArray=[policyById];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){selectedRecord=response[0].data;dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:ncontrolCode}});}}else{//toast.warn(intl.formatMessage({ id: masterData.SelectedPasswordPolicy.stransstatus }));\n//toast.warn(intl.formatMessage({ id: masterData.SelectedPasswordPolicy.stransstatus }));\n// let message = \"IDS_SELECTDRAFTRECORDTOEDIT\";\n// if (masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n//     message = \"IDS_CANNOTEDITAPPROVEPOLICY\";\n// }\n// toast.warn(intl.FormattedMessage({\n//     id: \"IDS_PLSSELECTASAMPLE\"\n// }));\n// toast.warn(intl.formatMessage({\n//     id: \"IDS_SELECTPRODUCT\"\n// }));\ntoast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDITS\"}));}}else{//  let message = \"\";\ntoast.warn(intl.formatMessage({id:\"IDS_SELECTUSERROLEFROMFILTER\"}));}};}export function getCopyUseRolePolicy(screenName,operation,ncontrolCode){return function(dispatch){var selectedRecord={};dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,openModal:true,selectedRecord:selectedRecord,ncontrolCode:ncontrolCode}});};}export function comboChangeUserRolePolicy(userrolecode,data,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/passwordpolicy/getPasswordPolicyByUserRoleCode\",{nuserrolecode:userrolecode,\"userinfo\":userInfo}).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},data),response.data),{},{searchedData:undefined});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}// export function filterColumnDataPasswordPolicy(filterValue, masterData, userInfo) {\n//     return function (dispatch) {\n//         let policyCode = 0;\n//         let searchedData = undefined;\n//         if (filterValue === \"\") {\n//             policyCode = masterData[\"PasswordPolicy\"][0].npolicycode;\n//         }\n//         else {\n//             searchedData = searchData(filterValue, masterData[\"PasswordPolicy\"], \"spolicyname\");\n//             if (searchedData.length > 0) {\n//                 policyCode = searchedData[0].npolicycode;\n//             }\n//             else {\n//                 masterData[\"PasswordPolicy\"] = [];\n//                 masterData[\"UserRole\"] = [];\n//                 masterData[\"SelectedPasswordPolicy\"] = [];\n//                 masterData[\"searchedData\"] = [];\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\n//             }\n//         }\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"passwordpolicy/getPasswordPolicy\", { npolicycode: policyCode, userinfo: userInfo })\n//             .then(response => {\n//                 masterData[\"PasswordPolicy\"] = response.data[\"PasswordPolicy\"];\n//                 masterData[\"UserRole\"] = response.data[\"UserRole\"];\n//                 masterData[\"SelectedPasswordPolicy\"] = response.data[\"SelectedPasswordPolicy\"];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/PasswordPolicyAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","toast","Axios","initRequest","intl","transactionStatus","getPasswordPolicyDetail","passwordPolicy","userInfo","masterData","selectedcombo","dispatch","post","npolicycode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getPasswordPolicyComboService","screenName","operation","primaryKeyName","primaryKeyValue","ncontrolCode","UserRole","length","SelectedPasswordPolicy","ntransactionstatus","RETIRED","APPROVED","selectedRecord","urlArray","policyById","all","openModal","getCopyUseRolePolicy","comboChangeUserRolePolicy","userrolecode","nuserrolecode","searchedData","undefined"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript'//getComboLabelValue,, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getPasswordPolicyDetail(passwordPolicy, userInfo, masterData, selectedcombo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n            npolicycode: passwordPolicy.npolicycode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if(masterData.UserRole.length >0)\r\n        {\r\n        if (operation === \"create\" || (operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED)) {\r\n            let selectedRecord = {};\r\n            let urlArray = [];\r\n            if (operation === \"update\") {\r\n                const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });\r\n\r\n                urlArray = [policyById];\r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        selectedRecord = response[0].data;\r\n                       dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n\r\n                                operation, screenName, selectedRecord, openModal: true,\r\n                                ncontrolCode, loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({ id: error.message }));\r\n                        }\r\n                        else {\r\n\r\n                            toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        operation, screenName, selectedRecord, openModal: true,\r\n                        ncontrolCode\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            //toast.warn(intl.formatMessage({ id: masterData.SelectedPasswordPolicy.stransstatus }));\r\n            //toast.warn(intl.formatMessage({ id: masterData.SelectedPasswordPolicy.stransstatus }));\r\n           // let message = \"IDS_SELECTDRAFTRECORDTOEDIT\";\r\n            // if (masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            //     message = \"IDS_CANNOTEDITAPPROVEPOLICY\";\r\n            // }\r\n\r\n            // toast.warn(intl.FormattedMessage({\r\n            //     id: \"IDS_PLSSELECTASAMPLE\"\r\n            // }));\r\n\r\n            // toast.warn(intl.formatMessage({\r\n            //     id: \"IDS_SELECTPRODUCT\"\r\n            // }));\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDITS\" }));\r\n\r\n        }\r\n    }\r\n    else{\r\n        //  let message = \"\";\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTUSERROLEFROMFILTER\" }));\r\n    } \r\n    }\r\n}\r\n\r\nexport function getCopyUseRolePolicy(screenName, operation, ncontrolCode) {\r\n    return function (dispatch) {\r\n        let selectedRecord = {};\r\n\r\n        dispatch({\r\n            type: DEFAULT_RETURN, payload: {\r\n                operation, screenName, openModal: true,selectedRecord,\r\n                ncontrolCode\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport function comboChangeUserRolePolicy(userrolecode, data, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/passwordpolicy/getPasswordPolicyByUserRoleCode\", { nuserrolecode: userrolecode, \"userinfo\": userInfo })\r\n            .then(response => {\r\n\r\n                const masterData = { ...data, ...response.data, searchedData: undefined }\r\n\r\n                sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}\r\n\r\n// export function filterColumnDataPasswordPolicy(filterValue, masterData, userInfo) {\r\n//     return function (dispatch) {\r\n\r\n//         let policyCode = 0;\r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\") {\r\n//             policyCode = masterData[\"PasswordPolicy\"][0].npolicycode;\r\n//         }\r\n//         else {\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"PasswordPolicy\"], \"spolicyname\");\r\n\r\n//             if (searchedData.length > 0) {\r\n//                 policyCode = searchedData[0].npolicycode;\r\n//             }\r\n//             else {\r\n//                 masterData[\"PasswordPolicy\"] = [];\r\n//                 masterData[\"UserRole\"] = [];\r\n//                 masterData[\"SelectedPasswordPolicy\"] = [];\r\n//                 masterData[\"searchedData\"] = [];\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\r\n//             }\r\n\r\n//         }\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"passwordpolicy/getPasswordPolicy\", { npolicycode: policyCode, userinfo: userInfo })\r\n//             .then(response => {\r\n//                 masterData[\"PasswordPolicy\"] = response.data[\"PasswordPolicy\"];\r\n//                 masterData[\"UserRole\"] = response.data[\"UserRole\"];\r\n//                 masterData[\"SelectedPasswordPolicy\"] = response.data[\"SelectedPasswordPolicy\"];\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}