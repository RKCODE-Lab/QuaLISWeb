{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createIntl, createIntlCache, IntlProvider } from 'react-intl';\nimport { Switch, Route, Redirect, withRouter } from 'react-router';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport messages_en from '../assets/translations/en.json';\nimport messages_ko from '../assets/translations/ko.json';\nimport messages_ru from '../assets/translations/ru.json';\nimport messages_tg from '../assets/translations/tg.json';\nimport messages_fr from '../assets/translations/fr.json';\nimport './App.css';\nimport Layout from './layout/layout.component.jsx';\nimport Login from '../pages/Login/Login.jsx';\nimport rsapi from '../rsapi';\nimport PortalApp from '../PortalApp';\nimport ReactTooltip from 'react-tooltip';\nconst messages = {\n  'en-US': messages_en,\n  'ko-KR': messages_ko,\n  'ru-RU': messages_ru,\n  'tg-TG': messages_tg,\n  'fr-FR': messages_fr\n}; // This is optional but highly recommended\n// since it prevents memory leak\n\nconst cache = createIntlCache(); // Call it once in your app. At the root of your app is the best place\n\ntoast.configure(); //Create the `intl` object\n\nexport let intl = createIntl({\n  // Locale of the application\n  locale: 'en-US',\n  // Locale of the fallback defaultMessage\n  defaultLocale: 'en-US',\n  messages: messages['en-US']\n}, cache);\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n}; //ALPD-715 Fix\n\n\nexport function createIntlReinitilize(language) {\n  return intl = createIntl({\n    locale: language,\n    defaultLocale: language,\n    messages: messages[language]\n  }, cache);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEndConcert = async () => {// Write a code to handle Leave button clicked\n      // await fetcher({\n      //   url: endConcert(concert.id),\n      //   method: 'PUT'\n      // })\n    };\n\n    this.handleUnload = this.handleUnload.bind(this);\n    this.handleEndConcert = this.handleEndConcert.bind(this); // Store the previous pathname and search strings\n\n    this.currentPathname = null;\n    this.currentSearch = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.handleUnload);\n    window.addEventListener('unload', this.handleEndConcert);\n    const {\n      history\n    } = this.props;\n    history.listen((newLocation, action) => {\n      if (action === \"PUSH\") {\n        if (newLocation.pathname !== this.currentPathname || newLocation.search !== this.currentSearch) {\n          // Save new location\n          this.currentPathname = newLocation.pathname;\n          this.currentSearch = newLocation.search; // Clone location object and push it to history\n\n          history.push({\n            pathname: newLocation.pathname,\n            search: newLocation.search\n          });\n        }\n      } else {\n        // Send user back if they try to navigate back\n        history.go(1);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleUnload);\n    window.removeEventListener('unload', this.handleEndConcert);\n    this.handleEndConcert();\n  }\n\n  handleUnload(e) {\n    const message = \"\\o/\";\n\n    if (this.props.Login.userInfo.susername && this.props.Login.userInfo.susername !== \"\") {\n      let uRL = \"\";\n      let inputData = [];\n      uRL = 'login/insertAuditAction';\n      inputData = {\n        userinfo: this.props.Login.userInfo,\n        scomments: `User Name:${this.props.Login.userInfo.susername}, Login ID:${this.props.Login.userInfo.sloginid}`,\n        sauditaction: \"IDS_IMPROPERLOGOUT\",\n        nFlag: 2\n      };\n      rsapi.post(uRL, inputData).then(response => {\n        (e || window.event).returnValue = message; //Gecko + IE\n\n        return message;\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      (e || window.event).returnValue = message; //Gecko + IE\n\n      return message;\n    }\n  }\n\n  render() {\n    const {\n      language,\n      navigation\n    } = this.props.Login;\n    const currentTheme = this.props.Login.selectedUserUiConfig && this.props.Login.selectedUserUiConfig.sthemecolorname.toLowerCase();\n    document.body.classList.remove(\"blue\", \"purple\", \"pink\", \"green\", \"orange\");\n    document.body.classList.add(currentTheme);\n    return /*#__PURE__*/React.createElement(IntlProvider, {\n      locale: language,\n      messages: messages[language],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"top\",\n      globalEventOff: \"click\",\n      className: \"react-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      name: \"Login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 69\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      name: \"Home\",\n      render: props => /*#__PURE__*/React.createElement(Layout, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 57\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      exact: true,\n      to: \"/\" + navigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), navigation !== \"login\" && /*#__PURE__*/React.createElement(PortalApp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 39\n      }\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps)(withRouter(App));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/App.js"],"names":["React","connect","createIntl","createIntlCache","IntlProvider","Switch","Route","Redirect","withRouter","toast","messages_en","messages_ko","messages_ru","messages_tg","messages_fr","Layout","Login","rsapi","PortalApp","ReactTooltip","messages","cache","configure","intl","locale","defaultLocale","mapStateToProps","state","createIntlReinitilize","language","App","Component","constructor","props","handleEndConcert","handleUnload","bind","currentPathname","currentSearch","componentDidMount","window","addEventListener","history","listen","newLocation","action","pathname","search","push","go","componentWillUnmount","removeEventListener","e","message","userInfo","susername","uRL","inputData","userinfo","scomments","sloginid","sauditaction","nFlag","post","then","response","event","returnValue","catch","error","status","warn","data","render","navigation","currentTheme","selectedUserUiConfig","sthemecolorname","toLowerCase","document","body","classList","remove","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect } from 'react-redux';\nimport { createIntl, createIntlCache, IntlProvider } from 'react-intl';\nimport { Switch, Route, Redirect, withRouter } from 'react-router';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport messages_en from '../assets/translations/en.json';\nimport messages_ko from '../assets/translations/ko.json';\nimport messages_ru from '../assets/translations/ru.json';\nimport messages_tg from '../assets/translations/tg.json';\nimport messages_fr from '../assets/translations/fr.json';\n\nimport './App.css';\n\nimport Layout from './layout/layout.component.jsx';\nimport Login from '../pages/Login/Login.jsx'\n import rsapi from '../rsapi';\nimport PortalApp from '../PortalApp';\nimport ReactTooltip from 'react-tooltip';\n\nconst messages = {\n  'en-US': messages_en,\n  'ko-KR': messages_ko,\n  'ru-RU': messages_ru,\n  'tg-TG': messages_tg,\n  'fr-FR': messages_fr\n\n}\n\n// This is optional but highly recommended\n// since it prevents memory leak\nconst cache = createIntlCache()\n\n// Call it once in your app. At the root of your app is the best place\ntoast.configure()\n\n//Create the `intl` object\nexport let intl = createIntl(\n  {\n    // Locale of the application\n    locale: 'en-US',\n    // Locale of the fallback defaultMessage\n    defaultLocale: 'en-US',\n    messages: messages['en-US'],\n  },\n  cache,\n)\n\nconst mapStateToProps = (state) => {\n  return {\n    Login: state.Login\n  }\n}\n\n//ALPD-715 Fix\nexport function createIntlReinitilize(language)\n{\n  return  intl = createIntl(\n    {\n      locale: language,\n      defaultLocale: language,\n      messages: messages[language],\n    },\n    cache,\n  )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleUnload = this.handleUnload.bind(this);\n      this.handleEndConcert = this.handleEndConcert.bind(this);\n      // Store the previous pathname and search strings\n      this.currentPathname = null;\n      this.currentSearch = null;\n    }\n    \n    componentDidMount() {\n      window.addEventListener('beforeunload', this.handleUnload);\n      window.addEventListener('unload', this.handleEndConcert)\n      const { history } = this.props;\n  \n      history.listen((newLocation, action) => {\n        if (action === \"PUSH\") {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            // Save new location\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n  \n            // Clone location object and push it to history\n            history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          // Send user back if they try to navigate back\n          history.go(1);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('beforeunload', this.handleUnload);\n      window.removeEventListener('unload', this.handleEndConcert)\n      this.handleEndConcert()\n    }\n\n   handleUnload(e) {\n      const message = \"\\o/\";\n      if (this.props.Login.userInfo.susername && this.props.Login.userInfo.susername !== \"\") {\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/insertAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          scomments: `User Name:${this.props.Login.userInfo.susername}, Login ID:${this.props.Login.userInfo.sloginid}`,\n          sauditaction: \"IDS_IMPROPERLOGOUT\", nFlag: 2\n        }\n\n        rsapi.post(uRL, inputData)\n          .then(response => {\n            (e || window.event).returnValue = message; //Gecko + IE\n            return message;\n          })\n          .catch(error => {\n            if (error.response.status === 500) {\n              toast.error(error.message);\n            } else {\n              toast.warn(error.response.data);\n            }\n          })\n      } else {\n        (e || window.event).returnValue = message; //Gecko + IE\n        return message;\n      }\n    }\n\n    handleEndConcert = async () => {\n      // Write a code to handle Leave button clicked\n      // await fetcher({\n      //   url: endConcert(concert.id),\n      //   method: 'PUT'\n      // })\n    }\n    \n\n  render() {\n    const { language, navigation } = this.props.Login;\n    const currentTheme = this.props.Login.selectedUserUiConfig && this.props.Login.selectedUserUiConfig.sthemecolorname.toLowerCase(); \n    document.body.classList.remove(\"blue\",\"purple\",\"pink\",\"green\",\"orange\");\n    document.body.classList.add(currentTheme);\n    return (\n        <IntlProvider locale={language} messages={messages[language]}>\n        <ReactTooltip place=\"top\"   globalEventOff='click' className='react-tooltip'/>\n          <Switch>\n            <Route exact path=\"/login\" name=\"Login\" render={props=> <Login {...props} />} />\n            <Route path=\"/\" name=\"Home\" render={props=> <Layout {...props} />} /> \n          </Switch>\n          <Redirect push exact to={\"/\" + navigation} />\n          { navigation !== \"login\" && <PortalApp />}\n        </IntlProvider>\n      );\n  }\n}\nexport default connect(mapStateToProps)(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}