{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';export function getCityService(methodParam){return function(dispatch){var methodTypeService=rsapi.post(\"city/getCity\",{userinfo:methodParam.userInfo});var districtService=rsapi.post(\"city/getDistrict\",{userinfo:methodParam.userInfo});var urlArray=[];var selectedId=null;if(methodParam.operation===\"create\"){urlArray=[methodTypeService,districtService];}else{var _rsapi$post;var url=methodParam.inputParam.classUrl+\"/getActive\"+methodParam.inputParam.methodUrl+\"ById\";//\"method/getActiveMethodById\"      \nvar methodById=rsapi.post(url,(_rsapi$post={},_defineProperty(_rsapi$post,methodParam.primaryKeyField,methodParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",methodParam.userInfo),_rsapi$post));urlArray=[methodTypeService,districtService,methodById];selectedId=methodParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var districtCode=[];var cityList=constructOptionList(response[0].data||[],\"ncitycode\",\"scityname\",undefined,undefined,undefined);var cityList1=cityList.get(\"OptionList\");var citydefault=cityList.get(\"DefaultValue\");var district=constructOptionList(response[1].data.districtList||[],\"ndistrictcode\",\"sdistrictname\",undefined,undefined,undefined);var districtList=district.get(\"OptionList\");if(methodParam.operation===\"update\"){selectedRecord=response[2].data;districtCode.push({\"value\":response[2].data[\"ndistrictcode\"],\"label\":response[2].data[\"sdistrictname\"]});selectedRecord[\"ndistrictcode\"]=districtCode[0];}else{selectedRecord[\"ncitycode\"]=citydefault;}dispatch({type:DEFAULT_RETURN,payload:{cityList:cityList1||[],districtList:districtList||[],operation:methodParam.operation,screenName:methodParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:methodParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/CityAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","toast","Axios","initRequest","intl","getCityService","methodParam","dispatch","methodTypeService","post","userinfo","userInfo","districtService","urlArray","selectedId","operation","url","inputParam","classUrl","methodUrl","methodById","primaryKeyField","primaryKeyValue","all","then","response","selectedRecord","districtCode","cityList","data","undefined","cityList1","get","citydefault","district","districtList","push","type","payload","screenName","openModal","ncontrolCode","loading","catch","error","status","formatMessage","id","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\nexport function getCityService (methodParam) {            \r\n    return function (dispatch) {   \r\n    const methodTypeService = rsapi.post(\"city/getCity\", \r\n                                    {userinfo:methodParam.userInfo});\r\n    const districtService = rsapi.post(\"city/getDistrict\", \r\n                                    {userinfo:methodParam.userInfo});\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    \r\n    if (methodParam.operation === \"create\"){\r\n        urlArray = [methodTypeService,districtService];\r\n    }\r\n    else{           \r\n        const url = methodParam.inputParam.classUrl+ \"/getActive\" + methodParam.inputParam.methodUrl + \"ById\";   //\"method/getActiveMethodById\"      \r\n        const methodById =  rsapi.post(url, { [methodParam.primaryKeyField] :methodParam.primaryKeyValue, \"userinfo\": methodParam.userInfo} );\r\n        urlArray = [methodTypeService,districtService,methodById];\r\n        selectedId = methodParam.primaryKeyValue;\r\n    }\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n            let districtCode=[];\r\n            const cityList = constructOptionList(response[0].data  ||[],\"ncitycode\",\r\n            \"scityname\" , undefined, undefined, undefined);\r\n        const  cityList1  = cityList.get(\"OptionList\");\r\n        const  citydefault  = cityList.get(\"DefaultValue\");\r\n        \r\n        const district = constructOptionList(response[1].data.districtList  ||[],\"ndistrictcode\",\r\n            \"sdistrictname\" , undefined, undefined, undefined);\r\n        const  districtList  = district.get(\"OptionList\");\r\n       \r\n          \r\n        if (methodParam.operation === \"update\"){\r\n            selectedRecord = response[2].data;    \r\n            districtCode.push({\"value\" : response[2].data[\"ndistrictcode\"], \"label\" : response[2].data[\"sdistrictname\"]});   \r\n            selectedRecord[\"ndistrictcode\"]=districtCode[0];                      \r\n        }else{\r\n            selectedRecord[\"ncitycode\"] = citydefault; \r\n        }\r\n           \r\n            dispatch({type: DEFAULT_RETURN, \r\n                        payload:{cityList:cityList1 || [],\r\n                        districtList:districtList||[],                       \r\n                        operation:methodParam.operation, \r\n                        screenName:methodParam.screenName, selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:methodParam.ncontrolCode,\r\n                        loading:false,selectedId\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(intl.formatMessage({id: error.message}));\r\n            } \r\n            else{               \r\n                toast.warn(intl.formatMessage({id: error.response.data}));\r\n            }  \r\n        })        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}