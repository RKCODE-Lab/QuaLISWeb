{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddSpecification.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { TreeDesign } from './registration.styled';\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\n\nconst AddSpecification = props => {\n  if (props && props.AgaramTree && props.AgaramTree.length > 0) {\n    props.AgaramTree[0][\"label\"] = props.AgaramTree[0][\"label\"] === 'root' ? props.intl.formatMessage({\n      id: \"IDS_ROOT\"\n    }) : props.AgaramTree[0][\"label\"];\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"r_treepadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TreeDesign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormTreeMenu, {\n    data: props.AgaramTree,\n    handleTreeClick: props.handleTreeClick // openNodes={props.OpenNodes}\n    //hasSearch={true}\n    ,\n    initialOpenNodes: props.openNodes // initialFocusKey={InitialFocusKey}\n    // initialActiveKey={InitialActiveKey}\n    ,\n    focusKey: props.focusKey || \"\",\n    activeKey: props.activeKey || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SPECIFICATION\"\n    }),\n    isSearchable: true,\n    name: \"nallottedspeccode\",\n    isDisabled: true,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SPECIFICATION\"\n    }),\n    isMandatory: true,\n    options: props.Specification || [],\n    alphabeticalSort: \"true\",\n    optionId: \"nallottedspeccode\",\n    optionValue: \"sspecname\",\n    value: props.selectedRecord['nallottedspeccode'] ? props.selectedRecord['nallottedspeccode'] : \"\",\n    defaultValue: props.selectedRecord['nallottedspeccode'] ? props.selectedRecord['nallottedspeccode'] : \"\" //  showOption={true}\n    ,\n    closeMenuOnSelect: true,\n    onChange: event => props.onSpecChange(event, ['nallottedspeccode', 'sversionno']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_VERSION\"\n    }),\n    name: \"sversion\",\n    type: \"text\",\n    maxLength: \"100\",\n    value: props.selectedRecord['sversion'] ? props.selectedRecord['sversion'] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_VERSION\"\n    }),\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default injectIntl(AddSpecification);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/registration/AddSpecification.jsx"],"names":["React","Col","Row","injectIntl","FormSelectSearch","PerfectScrollbar","FormInput","TreeDesign","FormTreeMenu","AddSpecification","props","AgaramTree","length","intl","formatMessage","id","handleTreeClick","openNodes","focusKey","activeKey","Specification","selectedRecord","event","onSpecChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { TreeDesign } from './registration.styled';\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\n\r\nconst AddSpecification = (props) => {\r\n    if(props && props.AgaramTree && props.AgaramTree.length > 0){\r\n        props.AgaramTree[0][\"label\"] = props.AgaramTree[0][\"label\"] === 'root' ? \r\n        props.intl.formatMessage({ id: \"IDS_ROOT\" }) : props.AgaramTree[0][\"label\"];\r\n   } \r\n    return (\r\n        <Row>\r\n            {/* <Col md={12}> */}\r\n\r\n                <Col md={6} className=\"r_treepadding\" >\r\n                    <TreeDesign>\r\n                        <PerfectScrollbar>\r\n                            <FormTreeMenu\r\n                                data={props.AgaramTree}\r\n                                handleTreeClick={props.handleTreeClick}\r\n                                // openNodes={props.OpenNodes}\r\n                                //hasSearch={true}\r\n                                initialOpenNodes={props.openNodes}\r\n                                // initialFocusKey={InitialFocusKey}\r\n                                // initialActiveKey={InitialActiveKey}\r\n                                focusKey={props.focusKey || \"\"}\r\n                                activeKey={props.activeKey || \"\"}\r\n                            />\r\n                        </PerfectScrollbar>\r\n\r\n                    </TreeDesign>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Col md={12}>\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id:\"IDS_SPECIFICATION\"})}\r\n                            isSearchable={true}\r\n                            name={\"nallottedspeccode\"}\r\n                            isDisabled={true}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_SPECIFICATION\"})}\r\n                            isMandatory={true}\r\n                            options={props.Specification || []}\r\n                            alphabeticalSort=\"true\"\r\n                            optionId=\"nallottedspeccode\"\r\n                            optionValue=\"sspecname\"\r\n                            value={props.selectedRecord['nallottedspeccode'] ? props.selectedRecord['nallottedspeccode'] : \"\"}\r\n                            defaultValue={props.selectedRecord['nallottedspeccode'] ? props.selectedRecord['nallottedspeccode'] : \"\"}\r\n                            //  showOption={true}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => props.onSpecChange(event, ['nallottedspeccode', 'sversionno'])}>\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_VERSION\"})}\r\n                            name=\"sversion\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            value={props.selectedRecord['sversion'] ? props.selectedRecord['sversion'] : \"\"}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_VERSION\"})}\r\n                            isDisabled={true}\r\n                        />\r\n                    </Col>\r\n                </Col>\r\n\r\n            {/* </Col> */}\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSpecification);"]},"metadata":{},"sourceType":"module"}