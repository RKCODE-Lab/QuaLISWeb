{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\Instrument.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FormattedMessage } from \"react-intl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter, filterColumnData, getTabDetails, getDataForAddEditValidation, addInstrumentFile, getDataForAddEditCalibration, getDataForAddEditMaintenance, OpenDate, CloseDate, viewAttachment } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { attachmentType, transactionStatus } from \"../../components/Enumeration\";\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, create_UUID, deleteAttachmentDropZone, rearrangeDateFormatDateOnly } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\"; // import ReactTooltip from \"react-tooltip\";\n\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\nimport ModalShow from \"../../components/ModalShow\";\nimport AddOpenDate from \"./AddOpenDate\";\nimport AddCloseDate from \"./AddCloseDate\";\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Instrument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveModalClick = () => {\n      let inputData = [];\n      let inputParam = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef // modalShow: false,\n          // openModal:true,\n\n        };\n      } else {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef //  modalShow: false,\n          //  openModal:true,\n\n        };\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"modalShow\");\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let instSection = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n        let postParam = undefined;\n        let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"nsuppliercode\", \"nservicecode\", \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\", \"smodelnumber\", \"spono\", \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\", \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\n        inputData[\"instrument\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\"\n          };\n          inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          });\n        } else {\n          inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\n          inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item];\n          });\n          inputData[\"instrumentvalidation\"] = {\n            sremark: this.state.selectedRecord.sremark ? this.state.selectedRecord.sremark : \"\",\n            nusercode: this.props.Login.userInfo.nusercode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"] : transactionStatus.NA,\n            nvalidationstatus: this.state.selectedRecord[\"validation\"] ? this.state.selectedRecord[\"validation\"].value : transactionStatus.VALIDATION,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false)\n          };\n          inputData[\"instrumentcalibration\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            ncalibrationstatus: this.state.selectedRecord[\"calibration\"] ? this.state.selectedRecord[\"calibration\"].value : transactionStatus.NA,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"] : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"] : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"] : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"] : transactionStatus.NA,\n            npreregno: transactionStatus.NA,\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n          inputData[\"instrumentmaintenance\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"] : transactionStatus.NA,\n            nmaintenancestatus: this.state.selectedRecord[\"maintenance\"] ? this.state.selectedRecord[\"maintenance\"].value : transactionStatus.NA,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"] : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"] : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"] : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false)\n          };\n        }\n\n        inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\n        inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n\n        if (this.state.selectedRecord[\"dpodate\"]) {\n          inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dreceiveddate\"]) {\n          inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dinstallationdate\"]) {\n          inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpirydate\"]) {\n          inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dmanufacdate\"]) {\n          inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\n        }\n\n        inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\n\n        if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\n          if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\n            this.state.selectedRecord[\"nusercode\"].map(item => {\n              return instSection.push({\n                nusercode: item.value\n              });\n            });\n            inputData[\"instrumentsection\"] = instSection;\n          }\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Instrument\",\n          inputData: inputData,\n          filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord['ninstrumentcatcode'].value === this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode ? false : true : false,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_SECTION\") {\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Section\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        if (this.props.Login.operation === \"update\") {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.value,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false),\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\",\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\"\n          };\n        } else {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\",\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\"\n          };\n        }\n\n        if (this.state.selectedRecord[\"dvalidationdate\"]) {\n          inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false);\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentValidation\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const inputParam = this.onSaveInstrumentFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentcalibration\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n          sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n        };else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const inputParam = this.onSaveInstrumentCalibrationFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentmaintenance\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n        };else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\"\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const inputParam = this.onSaveInstrumentMaintenanceFile(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      }; // if (this.props.Login.Action === \"OPENDATE\") {\n\n      this.props.validateEsignCredential(inputParam, \"openModal\"); //  } else if (this.props.Login.Action === \"Edit\") {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      //  } else if (this.props.Login.Action === \"Delete\") {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      // } else if (this.props.Login.Action === \"Add\") {\n      //   this.props.validateEsignCredential(inputParam, \"openModal\");\n      // } else if (this.props.Login.Action === \"Closedate\") {\n      //   this.props.validateEsignCredential(inputParam, \"modalShow\");\n      // } else {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      //  }\n    };\n\n    this.defaultRecord = defaultParam => {\n      const methodUrl = defaultParam.methodUrl;\n      let dataItem = defaultParam.selectedRecord;\n      dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\n      let dataState = undefined;\n\n      if (defaultParam.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          [methodUrl]: dataItem,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl,\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Test\",\n            operation: defaultParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.onSwitchChange = (item, key, methodUrl) => {\n      let dataItem = item;\n      dataItem[\"ndefaultstatus\"] = 3;\n      const inputParam = {\n        inputData: {\n          [key]: dataItem,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"testmaster\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\n    };\n\n    this.deleteTabFileRecord = deleteParam => {\n      let inputData = [];\n      const screenName = deleteParam.screenName;\n\n      if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc,\n          nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n          nlinkcode: deleteParam.selectedRecord.nlinkcode,\n          ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n          slinkname: deleteParam.selectedRecord.slinkname,\n          screateddate: deleteParam.selectedRecord.screateddate,\n          ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc,\n          nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n          nlinkcode: deleteParam.selectedRecord.nlinkcode,\n          ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n          slinkname: deleteParam.selectedRecord.slinkname,\n          screateddate: deleteParam.selectedRecord.screateddate,\n          ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibrationFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentFile\"] = {\n          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          sfilename: deleteParam.selectedRecord.sfilename,\n          sfiledesc: deleteParam.selectedRecord.sfiledesc,\n          nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n          nlinkcode: deleteParam.selectedRecord.nlinkcode,\n          ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n          slinkname: deleteParam.selectedRecord.slinkname,\n          screateddate: deleteParam.selectedRecord.screateddate,\n          ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenanceFile\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: deleteParam.operation,\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.DeleteInstrument = (operation, ncontrolCode) => {\n      let inputData = [];\n\n      if (operation.screenName === \"IDS_SECTION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\n        inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"Section\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, operation.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentValidation\"] = {\n          ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode\n        };\n        inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentValidation\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        inputData[\"InstrumentCalibration\"] = {\n          ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n          ncalibrationstatus: this.props.Login.masterData.selectedInstrumentCalibration.ncalibrationstatus\n        };\n        inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        inputData[\"nFlag\"] = operation.nFlag;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentCalibration\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        const dataState = this.state.sectionDataState;\n        inputData[\"InstrumentMaintenance\"] = {\n          ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode\n        };\n        inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: \"InstrumentMaintenance\",\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: dataState\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Instrument\",\n          postParam,\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: operation.operation\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveInstrumentFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n          instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        instrumentFile[\"sfiledesc\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\";\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentCalibrationFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = 2;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n          instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc : \"\";\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentCalibrationFile\"\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = 3;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\n          instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = 3;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 3;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc : \"\";\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentMaintenanceFile\"\n      };\n      return inputParam;\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n        sectionDataState: event.dataState\n      });\n    };\n\n    this.viewInstrumentFile = filedata => {\n      const inputParam = {\n        inputData: {\n          instrumentfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"view\",\n        methodUrl: \"AttachedInstrumentFile\",\n        screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\n      const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\n      tabMap.set(\"IDS_SECTION\", /*#__PURE__*/React.createElement(InstrumentSectionTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedSection\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultSecId: defaultSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentSection: this.props.Login.masterData.selectedSection || [],\n        screenName: \"IDS_SECTION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2807,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTVALIDATION\", /*#__PURE__*/React.createElement(InstrumentValidationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.ValidationFileData,\n        InstrumentValidation: this.props.Login.masterData.InstrumentValidation,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditValidation: this.props.getDataForAddEditValidation,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        getDataForEdit: this.props.getDataForEdit,\n        addfilecllick: this.addInstrumentFile,\n        viewInstrumentFile: this.viewInstrumentFile,\n        screenName: \"IDS_INSTRUMENTVALIDATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2828,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTCALIBRATION\", /*#__PURE__*/React.createElement(InstrumentCalibrationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.CalibrationFileData,\n        InstrumentCalibration: this.props.Login.masterData.InstrumentCalibration,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditCalibration: this.props.getDataForAddEditCalibration,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        viewInstrumentFile: this.viewInstrumentFile,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentCalibrationFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTCALIBRATION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2853,\n          columnNumber: 7\n        }\n      }));\n      tabMap.set(\"IDS_INSTRUMENTMAINTENANCE\", /*#__PURE__*/React.createElement(InstrumentMaintenanceTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.MaintenanceFileData,\n        InstrumentMaintenance: this.props.Login.masterData.InstrumentMaintenance,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditMaintenance: this.props.getDataForAddEditMaintenance,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        viewInstrumentFile: this.viewInstrumentFile,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentMaintenanceFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTMAINTENANCE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2882,\n          columnNumber: 7\n        }\n      }));\n      return tabMap;\n    };\n\n    this.ConfirmDelete = (operation, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstrument(operation, deleteId, operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"));\n    };\n\n    this.addInstrumentFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\n      openModal = true;\n      const selectedRecord = this.state.selectedRecord;\n      const updateInfo = {\n        userInfo: this.props.Login.userInfo,\n        operation,\n        selectedRecord,\n        ncontrolCode,\n        screenName\n      };\n      this.props.addInstrumentFile(updateInfo);\n    };\n\n    this.addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\n      openModal = true;\n      const selectedRecord = this.state.selectedRecord;\n      const updateInfo = {\n        userInfo: this.props.Login.userInfo,\n        operation,\n        selectedRecord,\n        ncontrolCode,\n        screenName\n      };\n      this.props.addInstrumentFile(updateInfo);\n    };\n\n    this.addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\n      let inputData = [];\n      let openModal = this.props.Login.openModal;\n      let operation = \"create\";\n      screenName = this.props.Login.screenName;\n      screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\n      openModal = true;\n      const selectedRecord = this.state.selectedRecord;\n      const updateInfo = {\n        userInfo: this.props.Login.userInfo,\n        operation,\n        selectedRecord,\n        ncontrolCode,\n        screenName\n      };\n      this.props.addInstrumentFile(updateInfo);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData !== null) {\n        switch (caseNo) {\n          case 1:\n            selectedRecord[fieldName] = comboData;\n            this.setState({\n              selectedRecord\n            });\n            break;\n\n          case 2:\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"nsectionusercode\"] = comboData.value;\n            this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n            break;\n\n          case 3:\n            let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n            nfilterInstrumentCategory = comboData;\n            this.searchRef.current.value = \"\";\n            this.setState({\n              nfilterInstrumentCategory\n            });\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        if (selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"nusercode\"];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if ((this.props.Login.operation.operation ? this.props.Login.operation.operation : this.props.Login.operation) === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n\n          if (this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCECLOSEDATE\") {\n            modalShow = true;\n            openModal = false;\n          }\n        }\n      } else {\n        openModal = false;\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"\n        }));\n      }\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedInstrument: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      sectionDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstrumentname\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    //console.log(\"master main\", this.props.Login.masterData);\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTCATEGORY\",\n        dataField: \"ninstrumentcatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTID\",\n        dataField: \"sinstrumentid\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTNAME\",\n        dataField: \"sinstrumentname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SUPPLIER\",\n        dataField: \"nsuppliercode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SUPPLIER\",\n        dataField: \"nsuppliercode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MANUFACTURERNAME\",\n        dataField: \"nmanufcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MANUFACTURERDATE\",\n        dataField: \"dmanufacdate\",\n        mandatoryLabel: \"IDS_CHOOSE\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SERIALNO\",\n        dataField: \"sserialno\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, //   {\n      //         mandatory: true,\n      //         idsName: \"IDS_VALIDATIONSTATUS\",\n      //         dataField: \"validation\",\n      //         mandatoryLabel: \"IDS_SELECT\",\n      //         controlType: \"selectbox\",\n      //   },\n      //   {\n      //         mandatory: true,\n      //         idsName: \"IDS_CALIBRATIONSTATUS\",\n      //         dataField: \"calibration\",\n      //         mandatoryLabel: \"IDS_SELECT\",\n      //         controlType: \"selectbox\",\n      //   },\n      //  {\n      //     mandatory: true,\n      //     idsName: \"IDS_MAINTENANCESTATUS\",\n      //     dataField: \"maintenance\",\n      //     mandatoryLabel: \"IDS_SELECT\",\n      //     controlType: \"selectbox\",\n      //   }, \n      {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTSTATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_INCHARGE\",\n          dataField: \"nusercode\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\") {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_VALIDATIONSTATUS\",\n          dataField: \"validation\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\") {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_CALIBRATIONSTATUS\",\n          dataField: \"calibration\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\") {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_MAINTENANCESTATUS\",\n          dataField: \"maintenance\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") mandatoryFields.push({\n      mandatory: true,\n      idsName: \"IDS_SECTION\",\n      dataField: \"nsectioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_INCHARGE\",\n      dataField: \"nusercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    });else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      } else {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        });\n      } // mandatoryFields.push({\n      //   idsName: \"IDS_FILE\",\n      //   dataField: \"sfilename\",\n      //   mandatory: true,\n      //   mandatoryLabel: \"IDS_CHOOSE\",\n      //   controlType: \"file\",\n      // });\n\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    }\n\n    const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\n    const {\n      selectedInstrument\n    } = this.props.Login.masterData;\n    const filterParam = {\n      inputListName: \"Instrument\",\n      selectedObject: \"selectedInstrument\",\n      primaryKeyField: \"ninstrumentcode\",\n      fetchUrl: \"instrument/getInstrument\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1782,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1789,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Instrument\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument,\n      getMasterDetail: Instrument => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstrument,\n      primaryKeyField: \"ninstrumentcode\",\n      mainField: \"sinstrumentname\",\n      firstField: \"sinstrumentid\",\n      secondField: \"sinstrumentcatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      addId: addId,\n      hidePaging: true,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        IDS_INSTRUMENTCATEGORYFILTER: /*#__PURE__*/React.createElement(InstrumentCategoryFilter, {\n          filterInstrumentCategory: this.state.filterInstrumentCategory || [],\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1837,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1853,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1854,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 21\n      }\n    }, this.props.Login.masterData.selectedInstrument ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1858,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1864,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1870,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1871,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1872,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1873,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1897,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete({\n        operation: \"delete\",\n        screenName: \"IDS_INSTRUMENT\"\n      }, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1927,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1929,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTNAME\",\n      message: \"Instrumentname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1932,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1937,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1945,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1946,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1947,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTID\",\n      message: \"Instrument Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1948,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1953,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1962,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1963,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEFAULTSTATUS\",\n      message: \"Default Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1965,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1970,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdefaultstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1979,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1980,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1981,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MODELNO\",\n      message: \"Modelno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1982,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1987,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smodelnumber))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2001,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2002,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2003,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PONO\",\n      message: \"PO No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2004,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2009,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spono))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2020,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2021,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2022,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURERDATE\",\n      message: \"ManufactureDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2028,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smanufacdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.smanufacdate) : this.props.Login.masterData.selectedInstrument.smanufacdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2046,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2047,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2048,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PODATE\",\n      message: \"PoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2049,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2054,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spodate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.spodate) : this.props.Login.spodate.selectedInstrument.spodate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2070,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2071,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2072,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATE\",\n      message: \"ReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2073,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2078,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sreceiveddate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate.selectedInstrument.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2096,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2097,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTALLATIONDATE\",\n      message: \"InstallationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sinstallationdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate.selectedInstrument.sinstallationdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2122,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2124,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYDATE\",\n      message: \"ExpiryDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2125,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2130,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sexpirydate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sexpirydate) : this.props.Login.sexpirydate.selectedInstrument.sexpirydate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2148,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2150,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERIALNO\",\n      message: \"Serialno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2151,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2156,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sserialno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2165,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2166,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2167,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTSTATUS\",\n      message: \"Instrumentstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2168,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2174,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sactivestatus === null || this.props.Login.masterData.selectedInstrument.sactivestatus.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sactivestatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2188,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2190,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2191,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2196,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sremarks)))), selectedInstrument && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2209,\n        columnNumber: 31\n      }\n    }))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2242,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(AddInstrument, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Supplier: this.props.Login.Supplier,\n        Manufacturer: this.props.Login.Manufacturer,\n        InstrumentStatus: this.props.Login.InstrumentStatus,\n        handleDateChange: this.handleDateChange,\n        Lab: this.props.Login.Lab,\n        Period: this.props.Login.Period,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        ValidationStatus: this.props.Login.ValidationStatus,\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        SectionUsers: this.props.Login.Users,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        defaultValue: this.props.Login.edqmManufacturer,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        expiryDate: this.props.Login.expiryDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2249,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_SECTION\" ? /*#__PURE__*/React.createElement(AddInstrumentSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        Lab: this.props.Login.Lab,\n        Users: this.props.Login.Users,\n        onComboChange: this.onComboChange,\n        onSwitchChange: this.onSwitchChange,\n        onInputOnChange: this.onInputOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2274,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? /*#__PURE__*/React.createElement(AddInstrumentValidation, {\n        selectedRecord: this.state.selectedRecord || {},\n        ValidationStatus: this.props.Login.ValidationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2284,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        onComboChange: this.onComboChange,\n        editFiles: this.props.Login.editFiles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2299,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? /*#__PURE__*/React.createElement(AddInstrumentCalibration, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2314,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2329,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\" ? /*#__PURE__*/React.createElement(AddInstrumentMaintenance, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2343,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2358,\n          columnNumber: 17\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 11\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.modalTitle === \"IDS_OPENDATE\" ? /*#__PURE__*/React.createElement(AddOpenDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2390,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddCloseDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2406,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2378,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterInstrumentCategory,\n      filterInstrumentCategory\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n\n      if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\n        nfilterInstrumentCategory = {\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          item: this.props.Login.masterData.SelectedInsCat\n        };\n      }\n\n      filterData = this.generateBreadCrumData();\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\n      const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", \"ntestcategorycode\", \"ascending\", false);\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\n\n      if (insCategoryMap.get(\"DefaultValue\")) {\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\n      } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\n      }\n\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        filterData,\n        nfilterInstrumentCategory,\n        filterInstrumentCategory\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.filterInstrumentCategory) {\n      breadCrumbData.push({\n        label: \"IDS_INSTRUMENTCATEGORY\",\n        value: this.props.Login.masterData.SelectedInsCat ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getInstrumentDetail,\n  filterColumnData,\n  getInstrumentCombo,\n  updateStore,\n  validateEsignCredential,\n  getSectionUsers,\n  getAvailableInstData,\n  changeInstrumentCategoryFilter,\n  getTabDetails,\n  getDataForAddEditValidation,\n  addInstrumentFile,\n  getDataForAddEditCalibration,\n  getDataForAddEditMaintenance,\n  OpenDate,\n  CloseDate,\n  viewAttachment\n})(injectIntl(Instrument));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/Instrument.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstrumentCombo","getInstrumentDetail","getSectionUsers","getAvailableInstData","changeInstrumentCategoryFilter","filterColumnData","getTabDetails","getDataForAddEditValidation","addInstrumentFile","getDataForAddEditCalibration","getDataForAddEditMaintenance","OpenDate","CloseDate","viewAttachment","ListMaster","attachmentType","transactionStatus","AddInstrument","AddInstrumentSection","DEFAULT_RETURN","SlideOutModal","CustomTab","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","create_UUID","deleteAttachmentDropZone","rearrangeDateFormatDateOnly","ReadOnlyText","ContentPanel","InstrumentSectionTab","process","ConfirmMessage","InstrumentCategoryFilter","BreadcrumbComponent","Affix","InstrumentValidationTab","AddInstrumentValidation","AddInstrumentFile","InstrumentCalibrationTab","AddInstrumentCalibration","ModalShow","AddOpenDate","AddCloseDate","InstrumentMaintenanceTab","AddInstrumentMaintenance","mapStateToProps","state","Login","Instrument","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","optional","target","type","name","checked","value","onSaveModalClick","inputData","inputParam","userInfo","screenName","modalTitle","ninstrumentcode","masterData","selectedInstrument","ntzopendate","ninstrumentcalibrationcode","selectedInstrumentCalibration","ncalibrationstatus","ntranscode","sopenreason","nopenusercode","nusercode","ntzclosedate","sclosereason","ncloseusercode","classUrl","methodUrl","operation","searchRef","ninstrumentmaintenancecode","selectedInstrumentMaintenance","nmaintenancestatus","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","openModal","modalShow","loadEsign","screenData","onSaveClick","saveType","formRef","instSection","postParam","undefined","fieldList","nsitecode","nmastersitecode","inputListName","selectedObject","primaryKeyField","NA","map","item","sremark","ntzvalidationdate","nvalidationstatus","VALIDATION","dvalidationdate","dlastcalibrationdate","dopendate","UNDERCALIBIRATION","dclosedate","dduedate","ntzlastcalibrationdate","ntzduedate","npreregno","sarno","ntzlastmaintenancedate","UNDERMAINTANENCE","dlastmaintenancedate","label","push","filtercombochange","searchedData","SelectedInsCat","ninstrumentcatcode","instItem","ninstrumentvalidationcode","selectedInstrumentValidation","onSaveInstrumentFile","onSaveInstrumentCalibrationFile","onSaveInstrumentMaintenanceFile","onNumericInputOnChange","validateEsign","userinfo","sreason","nreasoncode","spredefinedreason","password","defaultRecord","defaultParam","dataItem","YES","dataState","sectionDataState","openChildModal","onSwitchChange","key","deleteTabFileRecord","deleteParam","ninstrumentfilecode","ninstrumentlogcode","sfilename","sfiledesc","nattachmenttypecode","nlinkcode","ninstrumentlogtypecode","slinkname","screateddate","sinstrumentcatname","DeleteInstrument","ninstrumentsectioncode","ndefaultstatus","nFlag","primaryKeyValue","fetchUrl","fecthInputObject","deleteAttachment","file","fieldName","actionType","acceptedFiles","isFileEdited","NO","instrumentFileArray","instrumentFile","nstatus","ACTIVE","formData","FormData","FTP","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","trim","size","append","nfilesize","slinkfilename","slinkdescription","JSON","stringify","isFileupload","onTabChange","tabProps","onDropTestFile","attachedFiles","maxSize","dataStateChange","dataResult","viewInstrumentFile","filedata","instrumentfile","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","defaultSecId","set","selectedSection","settings","ValidationFileData","InstrumentValidation","deleteAction","ConfirmDelete","getDataForEdit","CalibrationFileData","InstrumentCalibration","addInstrumentCalibrationFile","addOpenDate","MaintenanceFileData","InstrumentMaintenance","addInstrumentMaintenanceFile","deleteId","confirmMessage","confirm","intl","formatMessage","id","reloadData","current","nfilterInstrumentCategory","filterInstrumentCategory","warn","onComboChange","comboData","caseNo","nsectionusercode","closeModal","popUp","selectedId","closeModalShow","openFilter","showFilter","closeFilter","onFilterSubmit","skip","take","error","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","LINK","addId","editId","filterParam","breadCrumbData","filterData","IDS_INSTRUMENTCATEGORYFILTER","sinstrumentname","indexOf","e","sinstrumentid","sdefaultstatus","smodelnumber","spono","smanufacdate","dpodate","spodate","sreceiveddate","sinstallationdate","sexpirydate","sserialno","sactivestatus","sremarks","InstrumentCategory","Supplier","Manufacturer","InstrumentStatus","Lab","Period","TimeZoneList","ValidationStatus","CalibrationStatus","MaintenanceStatus","Users","edqmManufacturer","currentTime","expiryDate","linkMaster","editFiles","componentDidUpdate","previousProps","updateState","values","generateBreadCrumData","insCategoryMap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getInstrumentCombo,\r\n  getInstrumentDetail,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  filterColumnData,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport {\r\n  attachmentType,\r\n  transactionStatus,\r\n} from \"../../components/Enumeration\";\r\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\r\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  constructOptionList,\r\n  formatInputDate,\r\n  onDropAttachFileList,\r\n  create_UUID,\r\n  deleteAttachmentDropZone,\r\n  rearrangeDateFormatDateOnly,\r\n} from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\r\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\r\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\r\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\r\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\r\nimport ModalShow from \"../../components/ModalShow\";\r\nimport AddOpenDate from \"./AddOpenDate\";\r\nimport AddCloseDate from \"./AddCloseDate\";\r\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\r\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Instrument extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const sectionDataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedInstrument: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      sectionDataState,\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sinstrumentname\"];\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    }  else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n  }else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n  \r\n  onSaveModalClick = () => {\r\n    let inputData = [];\r\n    let inputParam = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n      inputData[\"instrumentcalibration\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n          \r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        ncalibrationstatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        \r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n      }\r\n      else{\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          \r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n          \r\n          sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n        };\r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      \r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n       // modalShow: false,\r\n       // openModal:true,\r\n      };\r\n    } else {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n\r\n      inputData[\"instrumentmaintenance\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n        \r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n        nmaintenancestatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n    }\r\n      else{\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          \r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n            sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode\r\n        };\r\n  \r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n      //  modalShow: false,\r\n      //  openModal:true,\r\n      };\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          openModal:true,\r\n          modalShow: false,\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let inputData = [];\r\n    let instSection = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      let postParam = undefined;\r\n      let fieldList = [\r\n        \"ninstrumentcode\",\r\n        \"ninstrumentcatcode\",\r\n        \"nsuppliercode\",\r\n        \"nservicecode\",\r\n        \"nmanufcode\",\r\n        \"nusercode\",\r\n        \"sinstrumentid\",\r\n        \"sinstrumentname\",\r\n        \"smodelnumber\",\r\n        \"spono\",\r\n        \"nwindowsperiodminus\",\r\n        \"nwindowsperiodplus\",\r\n        \"nwindowsperiodminusunit\",\r\n        \"nwindowsperiodplusunit\",\r\n        \"sserialno\",\r\n        \"sremarks\",\r\n        \"ndefaultstatus\",\r\n        \"nsitecode\",\r\n        \"nstatus\",\r\n      ];\r\n\r\n      inputData[\"instrument\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      if (this.props.Login.operation === \"update\") {\r\n        postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrument\",\r\n          primaryKeyField: \"ninstrumentcode\",\r\n        };\r\n\r\n        inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\r\n          \"dmanufacdate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dmanufacdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\r\n          \"dpodate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dpodate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\r\n          \"dreceiveddate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dreceiveddate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sinstallationdate\"] = this.state\r\n          .selectedRecord[\"dinstallationdate\"]\r\n          ? this.state.selectedRecord[\"dinstallationdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\r\n          \"dexpirydate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dexpirydate\"]\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] = this.state.selectedRecord[\r\n            item\r\n          ]\r\n            ? this.state.selectedRecord[item]\r\n            : \"\");\r\n        });\r\n      } else {\r\n        inputData[\"instrument\"][\"ninstrumentstatus\"] =\r\n          this.state.selectedRecord[\"ntransactionstatus\"];\r\n        inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\r\n          \"nsectioncode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"nsectioncode\"].value\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] =\r\n            this.state.selectedRecord[item]);\r\n        });\r\n        inputData[\"instrumentvalidation\"] = {\r\n          sremark: this.state.selectedRecord.sremark\r\n  \r\n            ? this.state.selectedRecord.sremark\r\n            :\r\n            \"\",\r\n  \r\n          nusercode: this.props.Login.userInfo.nusercode,\r\n          ntzvalidationdate: this.state.selectedRecord[\r\n            \"ntzvalidationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            : transactionStatus.NA,\r\n  \r\n          nvalidationstatus: this.state.selectedRecord[\r\n            \"validation\"\r\n          ]\r\n            ? this.state.selectedRecord[\"validation\"].value\r\n            : transactionStatus.VALIDATION,\r\n  \r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          )\r\n        };\r\n        inputData[\"instrumentcalibration\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n  \r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          ncalibrationstatus: this.state.selectedRecord[\r\n            \"calibration\"\r\n          ]\r\n            ? this.state.selectedRecord[\"calibration\"].value\r\n            : transactionStatus.NA,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"]\r\n            : transactionStatus.NA,\r\n          dopendate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"]\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"]\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"]\r\n            : transactionStatus.NA,\r\n  \r\n          npreregno: transactionStatus.NA,\r\n  \r\n          sarno: this.state.selectedRecord[\r\n            \"sarno\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sarno\"]\r\n            : \"\"\r\n        }\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"]\r\n            : transactionStatus.NA,\r\n          nmaintenancestatus: this.state.selectedRecord[\r\n            \"maintenance\"\r\n          ]\r\n            ? this.state.selectedRecord[\"maintenance\"].value\r\n            : transactionStatus.NA,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"]\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"]\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"]\r\n            : transactionStatus.NA,\r\n          dopendate:this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate:this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          )\r\n  \r\n        }\r\n  \r\n      }\r\n      inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\r\n        \"ninstrumentcatcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ninstrumentcatcode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\r\n        \"nmanufcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\r\n        \"nsuppliercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nsuppliercode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\r\n        \"nservicecode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nservicecode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\r\n        \"ntranscode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\r\n        \"nwindowsperiodplus\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminus\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodplusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzmanufdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n\r\n      if (this.state.selectedRecord[\"dpodate\"]) {\r\n        inputData[\"instrument\"][\"dpodate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dpodate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dreceiveddate\"]) {\r\n        inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dreceiveddate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dinstallationdate\"]) {\r\n        inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dinstallationdate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dexpirydate\"]) {\r\n        inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dexpirydate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dmanufacdate\"]) {\r\n        inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dmanufacdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      inputData[\"instrument\"][\"nusercode\"] =\r\n        this.props.Login.userInfo.nusercode;\r\n\r\n      if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\r\n        if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\r\n          this.state.selectedRecord[\"nusercode\"].map((item) => {\r\n            return instSection.push({\r\n              nusercode: item.value,\r\n            });\r\n          });\r\n          inputData[\"instrumentsection\"] = instSection;\r\n        }\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Instrument\",\r\n        inputData: inputData,\r\n        filtercombochange:this.props.Login.masterData.searchedData!==undefined?\r\n                     this.state.selectedRecord['ninstrumentcatcode'].value===\r\n                    this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode?false:true:false,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") {\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state\r\n        .selectedRecord[\"nsectioncode\"]\r\n        ? this.state.selectedRecord[\"nsectioncode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\r\n        \"nusercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        this.props.Login.instItem[\"ninstrumentcode\"];\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Section\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      if (this.props.Login.operation === \"update\") {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentvalidationcode:\r\n            this.props.Login.masterData.selectedInstrumentValidation\r\n              .ninstrumentvalidationcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          ),\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n        };\r\n      } else {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n        };\r\n      }\r\n      if (this.state.selectedRecord[\"dvalidationdate\"]) {\r\n        inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dvalidationdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentValidation\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const inputParam = this.onSaveInstrumentFile(saveType, formRef);\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nopenusercode: this.props.Login.userInfo.nusercode,\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\"\r\n        };\r\n      else {\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\"\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentCalibrationFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            nopenusercode: this.props.Login.userInfo.nusercode,\r\n            ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      else {\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentMaintenanceFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n     \r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n   // if (this.props.Login.Action === \"OPENDATE\") {\r\n      this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  //  } else if (this.props.Login.Action === \"Edit\") {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  //  } else if (this.props.Login.Action === \"Delete\") {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n   // } else if (this.props.Login.Action === \"Add\") {\r\n   //   this.props.validateEsignCredential(inputParam, \"openModal\");\r\n   // } else if (this.props.Login.Action === \"Closedate\") {\r\n   //   this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n   // } else {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  //  }\r\n  };\r\n\r\n  defaultRecord = (defaultParam) => {\r\n    const methodUrl = defaultParam.methodUrl;\r\n    let dataItem = defaultParam.selectedRecord;\r\n    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n    let dataState = undefined;\r\n    if (defaultParam.screenName === \"IDS_SECTION\") {\r\n      dataState = this.state.sectionDataState;\r\n    }\r\n    const inputParam = {\r\n      inputData: {\r\n        [methodUrl]: dataItem,\r\n        userinfo: this.props.Login.userInfo,\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n      dataState,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        defaultParam.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openChildModal: true,\r\n          screenName: \"Test\",\r\n          operation: defaultParam.operation,\r\n          selectedRecord: {},\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n    }\r\n  };\r\n\r\n  onSwitchChange = (item, key, methodUrl) => {\r\n    let dataItem = item;\r\n    dataItem[\"ndefaultstatus\"] = 3;\r\n    const inputParam = {\r\n      inputData: {\r\n        [key]: dataItem,\r\n        userinfo: this.props.userInfo,\r\n      },\r\n      classUrl: \"testmaster\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n    };\r\n    this.props.crudMaster(\r\n      inputParam,\r\n      this.props.masterData,\r\n      \"openChildModal\",\r\n      {}\r\n    );\r\n  };\r\n\r\n  deleteTabFileRecord = (deleteParam) => {\r\n    let inputData = [];\r\n    const screenName = deleteParam.screenName;\r\n    if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n        nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n        nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n        ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n        slinkname: deleteParam.selectedRecord.slinkname,\r\n        screateddate: deleteParam.selectedRecord.screateddate,\r\n        ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n        sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n        ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n        nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n        nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n        ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n        slinkname: deleteParam.selectedRecord.slinkname,\r\n        screateddate: deleteParam.selectedRecord.screateddate,\r\n        ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n        sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibrationFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n            ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n        nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n        nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n        ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n        slinkname: deleteParam.selectedRecord.slinkname,\r\n        screateddate: deleteParam.selectedRecord.screateddate,\r\n        ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n        sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenanceFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: deleteParam.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  DeleteInstrument = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    if (operation.screenName === \"IDS_SECTION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] =\r\n        operation.selectedRecord.ninstrumentsectioncode;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        operation.selectedRecord.ninstrumentcode;\r\n      inputData[\"instrumentsection\"][\"ndefaultstatus\"] =\r\n        operation.selectedRecord.ndefaultstatus;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"Section\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          operation.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n    else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentValidation\"] = {\r\n        ninstrumentvalidationcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n      };\r\n      inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidation\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      inputData[\"InstrumentCalibration\"] = {\r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n            ncalibrationstatus:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ncalibrationstatus,\r\n      };\r\n      inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      inputData[\"nFlag\"] = operation.nFlag;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibration\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentMaintenance\"] = {\r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n      };\r\n      inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else {\r\n      inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n      const postParam = {\r\n        inputListName: \"Instrument\",\r\n        selectedObject: \"selectedInstrument\",\r\n        primaryKeyField: \"ninstrumentcode\",\r\n        primaryKeyValue:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        methodUrl: \"Instrument\",\r\n        postParam,\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: operation.operation,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"master main\", this.props.Login.masterData);\r\n    let mandatoryFields = [];\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTCATEGORY\",\r\n          dataField: \"ninstrumentcatcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTID\",\r\n          dataField: \"sinstrumentid\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTNAME\",\r\n          dataField: \"sinstrumentname\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SUPPLIER\",\r\n          dataField: \"nsuppliercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SUPPLIER\",\r\n          dataField: \"nsuppliercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_MANUFACTURERNAME\",\r\n          dataField: \"nmanufcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_MANUFACTURERDATE\",\r\n          dataField: \"dmanufacdate\",\r\n          mandatoryLabel: \"IDS_CHOOSE\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SERIALNO\",\r\n          dataField: \"sserialno\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n      //   {\r\n         \r\n      //         mandatory: true,\r\n      //         idsName: \"IDS_VALIDATIONSTATUS\",\r\n      //         dataField: \"validation\",\r\n      //         mandatoryLabel: \"IDS_SELECT\",\r\n      //         controlType: \"selectbox\",\r\n      //   },\r\n      //   {\r\n      //         mandatory: true,\r\n      //         idsName: \"IDS_CALIBRATIONSTATUS\",\r\n      //         dataField: \"calibration\",\r\n      //         mandatoryLabel: \"IDS_SELECT\",\r\n      //         controlType: \"selectbox\",\r\n      //   },\r\n      //  {\r\n      //     mandatory: true,\r\n      //     idsName: \"IDS_MAINTENANCESTATUS\",\r\n      //     dataField: \"maintenance\",\r\n      //     mandatoryLabel: \"IDS_SELECT\",\r\n      //     controlType: \"selectbox\",\r\n      //   }, \r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTSTATUS\",\r\n          dataField: \"ntranscode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.props.Login.operation === \"create\") {\r\n        mandatoryFields.push({\r\n         \r\n          mandatory: true,\r\n          idsName: \"IDS_VALIDATIONSTATUS\",\r\n          dataField: \"validation\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.props.Login.operation === \"create\") {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_CALIBRATIONSTATUS\",\r\n          dataField: \"calibration\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.props.Login.operation === \"create\") {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_MAINTENANCESTATUS\",\r\n          dataField: \"maintenance\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\")\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SECTION\",\r\n          dataField: \"nsectioncode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n    else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n        mandatoryFields.push(\r\n          { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n          { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n          );\r\n            } else {\r\n              mandatoryFields.push(\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\"}\r\n                );\r\n            }\r\n      // mandatoryFields.push({\r\n      //   idsName: \"IDS_FILE\",\r\n      //   dataField: \"sfilename\",\r\n      //   mandatory: true,\r\n      //   mandatoryLabel: \"IDS_CHOOSE\",\r\n      //   controlType: \"file\",\r\n      // });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    }\r\n\r\n    const addId =\r\n      this.state.controlMap.has(\"AddInstrument\") &&\r\n      this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditInstrument\") &&\r\n      this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeleteInstrument\") &&\r\n      this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\r\n\r\n    const { selectedInstrument } = this.props.Login.masterData;\r\n    const filterParam = {\r\n      inputListName: \"Instrument\",\r\n      selectedObject: \"selectedInstrument\",\r\n      primaryKeyField: \"ninstrumentcode\",\r\n      fetchUrl: \"instrument/getInstrument\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                formatMessage={this.props.intl.formatMessage}\r\n                screenName={\"Instrument\"}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.Instrument\r\n                }\r\n                getMasterDetail={(Instrument) =>\r\n                  this.props.getInstrumentDetail(\r\n                    Instrument,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.selectedInstrument}\r\n                primaryKeyField=\"ninstrumentcode\"\r\n                mainField=\"sinstrumentname\"\r\n                firstField=\"sinstrumentid\"\r\n                secondField=\"sinstrumentcatname\"\r\n                isIDSField=\"Yes\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                searchRef={this.searchRef}\r\n                addId={addId}\r\n                hidePaging={true}\r\n                reloadData={this.reloadData}\r\n                openModal={() =>\r\n                  this.props.getInstrumentCombo(\r\n                    \"IDS_INSTRUMENT\",\r\n                    \"create\",\r\n                    \"ninstrumentcode\",\r\n                    this.props.Login.masterData,\r\n                    this.props.Login.userInfo,\r\n                    addId\r\n                  )\r\n                }\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    IDS_INSTRUMENTCATEGORYFILTER: (\r\n                      <InstrumentCategoryFilter\r\n                        filterInstrumentCategory={\r\n                          this.state.filterInstrumentCategory || []\r\n                        }\r\n                        nfilterInstrumentCategory={\r\n                          this.state.nfilterInstrumentCategory || {}\r\n                        }\r\n                        onComboChange={this.onComboChange}\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ContentPanel className=\"panel-main-content\">\r\n                    <Card className=\"border-0\">\r\n                      {this.props.Login.masterData.selectedInstrument ? (\r\n                        <>\r\n                          <Card.Header>\r\n                            {/* <ReactTooltip\r\n                              place=\"bottom\"\r\n                              globalEventOff=\"click\"\r\n                              id=\"tooltip_list_wrap\"\r\n                            /> */}\r\n                            <Card.Title className=\"product-title-main\">\r\n                              {\r\n                                this.props.Login.masterData.selectedInstrument\r\n                                  .sinstrumentname\r\n                              }\r\n                            </Card.Title>\r\n                            <Card.Subtitle>\r\n                              <div className=\"d-flex product-category\">\r\n                                <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                <div className=\"d-inline\">\r\n                                  <Nav.Link\r\n                                    name=\"editInstrument\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_EDIT\",\r\n                                    })}\r\n                                 //   data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        editId\r\n                                      ) === -1\r\n                                    }\r\n                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                    onClick={(e) =>\r\n                                      this.props.getInstrumentCombo(\r\n                                        \"IDS_INSTRUMENT\",\r\n                                        \"update\",\r\n                                        \"ninstrumentcode\",\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        editId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                  </Nav.Link>\r\n                                  <Nav.Link\r\n                                    name=\"deleteInstrument\"\r\n                                    className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_DELETE\",\r\n                                    })}\r\n                                 //   data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        deleteId\r\n                                      ) === -1\r\n                                    }\r\n                                    onClick={() =>\r\n                                      this.ConfirmDelete(\r\n                                        {\r\n                                          operation: \"delete\",\r\n                                          screenName: \"IDS_INSTRUMENT\",\r\n                                        },\r\n                                        deleteId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                  </Nav.Link>\r\n                                </div>\r\n                              </div>\r\n                            </Card.Subtitle>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTNAME\"\r\n                                      message=\"Instrumentname\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentname\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTID\"\r\n                                      message=\"Instrument Id\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentid\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_DEFAULTSTATUS\"\r\n                                      message=\"Default Status\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sdefaultstatus\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MODELNO\"\r\n                                      message=\"Modelno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smodelnumber ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PONO\"\r\n                                      message=\"PO No.\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.spono === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.spono.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spono}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MANUFACTURERDATE\"\r\n                                      message=\"ManufactureDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smanufacdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.smanufacdate) : this.props.Login.masterData\r\n                                              .selectedInstrument.smanufacdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PODATE\"\r\n                                      message=\"PoDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.dpodate === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.dpodate === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spodate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.spodate) : this.props.Login.spodate\r\n                                              .selectedInstrument.spodate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_RECEIVEDDATE\"\r\n                                      message=\"ReceiveDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sreceiveddate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate\r\n                                              .selectedInstrument.sreceiveddate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTALLATIONDATE\"\r\n                                      message=\"InstallationDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sinstallationdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate\r\n                                              .selectedInstrument.sinstallationdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_EXPIRYDATE\"\r\n                                      message=\"ExpiryDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sexpirydate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate.length ===\r\n                                      0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sexpirydate) : this.props.Login.sexpirydate\r\n                                              .selectedInstrument.sexpirydate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERIALNO\"\r\n                                      message=\"Serialno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sserialno\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTSTATUS\"\r\n                                      message=\"Instrumentstatus\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sactivestatus ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sactivestatus\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sactivestatus}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_REMARKS\"\r\n                                      message=\"Remarks\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sremarks === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            {selectedInstrument && (\r\n                              <CustomTab\r\n                                tabDetail={this.tabDetail()}\r\n                                onTabChange={this.onTabChange}\r\n                              />\r\n                            )}\r\n                          </Card.Body>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Card>\r\n                  </ContentPanel>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {this.props.Login.openModal && (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? (\r\n                <AddInstrument\r\n                  onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                  Supplier={this.props.Login.Supplier}\r\n                  Manufacturer={this.props.Login.Manufacturer}\r\n                  InstrumentStatus={this.props.Login.InstrumentStatus}\r\n                  handleDateChange={this.handleDateChange}\r\n                  Lab={this.props.Login.Lab}\r\n                  Period={this.props.Login.Period}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  SectionUsers={this.props.Login.Users}\r\n                  operation={this.props.Login.operation}\r\n                  inputParam={this.props.inputParam}\r\n                  defaultValue={this.props.Login.edqmManufacturer}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  expiryDate={this.props.Login.expiryDate}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_SECTION\" ? (\r\n                <AddInstrumentSection\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  Lab={this.props.Login.Lab}\r\n                  Users={this.props.Login.Users}\r\n                  onComboChange={this.onComboChange}\r\n                  onSwitchChange={this.onSwitchChange}\r\n                  onInputOnChange={this.onInputOnChange}\r\n\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? (\r\n                <AddInstrumentValidation\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTVALIDATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                  onComboChange={this.onComboChange}\r\n                  editFiles={this.props.Login.editFiles}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATION\" ? (\r\n                <AddInstrumentCalibration\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  onComboChange={this.onComboChange}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCE\" ? (\r\n                <AddInstrumentMaintenance\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCEFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  onComboChange={this.onComboChange}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n        )}\r\n\r\n        {this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            modalTitle={this.props.Login.modalTitle}\r\n            modalBody={\r\n                this.props.Login.modalTitle === \"IDS_OPENDATE\" ? (\r\n                <AddOpenDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              ) : (\r\n                <AddCloseDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onSaveInstrumentFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n          tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  }else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] =2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n    instrumentFile[\"sfiledesc\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\";\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n    instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentCalibrationFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 2;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n        tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  }else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] = 2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n    instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc : \"\";\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentlogcode\"] =\r\n    this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n    instrumentFile[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFile[\"ninstrumentcode\"]=this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentCalibrationFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\"\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] = file.name;\r\n        tempData[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\";\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 3;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n          tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] = selectedRecord.sfilename;\r\n      instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\";\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 3;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  } else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = 3;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] = 2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n    instrumentFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc : \"\";\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentlogcode\"] =\r\n    this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n    instrumentFile[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFile[\"ninstrumentcode\"]=this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentMaintenanceFile\",\r\n    };\r\n    return inputParam;\r\n  };\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n  viewInstrumentFile = (filedata) => {\r\n    const inputParam = {\r\n      inputData: {\r\n        instrumentfile: filedata,\r\n        userinfo: this.props.Login.userInfo\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"view\",\r\n      methodUrl: \"AttachedInstrumentFile\",\r\n      screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\r\n    }\r\n    this.props.viewAttachment(inputParam);\r\n  }\r\n\r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    const deleteSecId =\r\n      this.state.controlMap.has(\"DeleteSection\") &&\r\n      this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n    const defaultSecId =\r\n      this.state.controlMap.has(\"DefaultSection\") &&\r\n      this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n    tabMap.set(\r\n      \"IDS_SECTION\",\r\n      <InstrumentSectionTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        dataState={this.props.Login.dataState}\r\n        masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        userInfo={this.props.Login.userInfo}\r\n        inputParam={this.props.Login.inputParam}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteSecId={deleteSecId}\r\n        defaultSecId={defaultSecId}\r\n        defaultRecord={this.defaultRecord}\r\n        getAvailableInstData={this.props.getAvailableInstData}\r\n        InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n        screenName=\"IDS_SECTION\"\r\n        selectedRecord={this.state.selectedRecord}\r\n        settings={this.props.Login.settings}\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTVALIDATION\",\r\n      <InstrumentValidationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.ValidationFileData}\r\n        InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        getDataForEdit={this.props.getDataForEdit}\r\n        addfilecllick={this.addInstrumentFile}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTCALIBRATION\",\r\n      <InstrumentCalibrationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.CalibrationFileData}\r\n        InstrumentCalibration={\r\n          this.props.Login.masterData.InstrumentCalibration\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentCalibrationFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n      />\r\n    );\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTMAINTENANCE\",\r\n      <InstrumentMaintenanceTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.MaintenanceFileData}\r\n        InstrumentMaintenance={\r\n          this.props.Login.masterData.InstrumentMaintenance\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentMaintenanceFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n      />\r\n    );\r\n\r\n    return tabMap;\r\n  };\r\n\r\n  ConfirmDelete = (operation, deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteInstrument(\r\n          operation,\r\n          deleteId,\r\n          operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"\r\n        )\r\n    );\r\n  };\r\n  addInstrumentFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\r\n    openModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n     userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  };\r\n\r\n  addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\r\n    openModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n      userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  };\r\n  addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\r\n    openModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n      userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (comboData !== null) {\r\n      switch (caseNo) {\r\n        case 1:\r\n          selectedRecord[fieldName] = comboData;\r\n          this.setState({ selectedRecord });\r\n          break;\r\n        case 2:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"nsectionusercode\"] = comboData.value;\r\n          this.props.getSectionUsers(\r\n            this.state.selectedRecord.nsectionusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n        case 3:\r\n          let nfilterInstrumentCategory =\r\n            this.state.nfilterInstrumentCategory || {};\r\n          nfilterInstrumentCategory = comboData;\r\n          this.searchRef.current.value = \"\";\r\n          this.setState({ nfilterInstrumentCategory });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    else {\r\n      if (selectedRecord[\"nsectioncode\"]) {\r\n        delete selectedRecord[\"nsectioncode\"];\r\n        delete selectedRecord[\"nusercode\"];\r\n\r\n      }\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { selectedRecord }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let modalShow = this.props.Login.modalShow;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      if ((this.props.Login.operation.operation?this.props.Login.operation.operation:this.props.Login.operation)  === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n        if (this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" ||\r\n          this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" ||\r\n          this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\" ||\r\n          this.props.Login.popUp===\"IDS_INSTRUMENTMAINTENANCECLOSEDATE\") {\r\n          modalShow = true;\r\n          openModal = false;\r\n        }\r\n      }\r\n    } else {\r\n      openModal = false;\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, modalShow,loadEsign, selectedRecord, selectedId: null },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n  closeModalShow = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let modalShow = this.props.Login.modalShow;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n    } else {\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterInstrumentCategory,\r\n      filterInstrumentCategory,\r\n    } = this.state;\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      updateState = true;\r\n    }\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\r\n      if (\r\n        this.props.Login.masterData.SelectedInsCat &&\r\n        this.props.Login.masterData.SelectedInsCat !==\r\n        previousProps.Login.masterData.SelectedInsCat\r\n      ) {\r\n        nfilterInstrumentCategory = {\r\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\r\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n          item: this.props.Login.masterData.SelectedInsCat,\r\n        };\r\n      }\r\n      filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.masterData.filterInstrumentCategory !==\r\n      previousProps.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      const insCategoryMap = constructOptionList(\r\n        this.props.Login.masterData.filterInstrumentCategory || [],\r\n        \"ninstrumentcatcode\",\r\n        \"sinstrumentcatname\",\r\n        \"ntestcategorycode\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\r\n      if (insCategoryMap.get(\"DefaultValue\")) {\r\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\r\n      } else if (\r\n        filterInstrumentCategory &&\r\n        filterInstrumentCategory.length > 0\r\n      ) {\r\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n      }\r\n      updateState = true;\r\n    }\r\n    if (updateState) {\r\n      this.setState({\r\n        selectedRecord,\r\n        userRoleControlRights,\r\n        controlMap,\r\n        filterData,\r\n        nfilterInstrumentCategory,\r\n        filterInstrumentCategory,\r\n      });\r\n    }\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (\r\n      this.props.Login.masterData &&\r\n      this.props.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      breadCrumbData.push({\r\n        label: \"IDS_INSTRUMENTCATEGORY\",\r\n        value: this.props.Login.masterData.SelectedInsCat\r\n          ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n          : \"NA\",\r\n      });\r\n    }\r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    if (this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  getInstrumentDetail,\r\n  filterColumnData,\r\n  getInstrumentCombo,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment\r\n})(injectIntl(Instrument));\r\n"]},"metadata":{},"sourceType":"module"}