{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\worklist\\\\AddWorklistSample.js\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MediaHeader } from '../product/product.styled';\n\nconst AddWorklistSample = props => {\n  const extractedColumnList = [];\n  let count = (props.addComponentSortedList || []).length;\n  extractedColumnList.push({\n    idsName: \"IDS_ARNO\",\n    dataField: \"sarno\",\n    \"width\": \"155px\"\n  });\n\n  if (props.nneedsubsample) {\n    extractedColumnList.push({\n      idsName: \"IDS_SAMPLEARNO\",\n      dataField: \"ssamplearno\",\n      \"width\": \"155px\"\n    });\n  }\n\n  extractedColumnList.push({\n    idsName: \"IDS_TEST\",\n    dataField: \"stestname\",\n    \"width\": \"155px\"\n  }, {\n    idsName: \"IDS_SAMPLENAME\",\n    dataField: \"ssamplename\",\n    \"width\": \"155px\"\n  }, {\n    idsName: \"IDS_REGISTRATIONDATE\",\n    dataField: \"sregistereddate\",\n    \"width\": \"200px\"\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-end p-2\",\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-user btn-primary-blue\",\n    onClick: () => props.addSaveDataGrid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n    primaryKeyField: \"nworklistsamplecode\",\n    userInfo: props.userInfo,\n    data: props.addComponentDataList || [],\n    selectAll: props.addSelectAll,\n    title: props.intl.formatMessage({\n      id: \"IDS_SELECTTODELETE\"\n    }),\n    selectionChange: props.selectionChange,\n    headerSelectionChange: props.headerSelectionChange,\n    extractedColumnList: extractedColumnList //ADDed by Neeraj-ALPD-5136\n    //WorkList Screen -> Including filter in Data selection Kendo Grid\n    ,\n    dataState: props.dataState,\n    dataResult: props.dataResult,\n    dataStateChange: props.dataStateChangeWorklistSample,\n    scrollable: 'scrollable',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: '12',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 49\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_SELECTEDSAMPLES\"\n  }) + \" : \"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 49\n    }\n  }, count))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DataGridWithSelection, {\n    primaryKeyField: \"nworklistsamplecode\",\n    userInfo: props.userInfo,\n    data: props.addComponentSortedList || [],\n    title: props.intl.formatMessage({\n      id: \"IDS_SELECTTODELETE\"\n    }),\n    extractedColumnList: extractedColumnList,\n    hideColumnFilter: true,\n    isHidemulipleselect: true,\n    isActionRequired: true,\n    handleClickDelete: props.handleClickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  })))));\n};\n\nexport default injectIntl(AddWorklistSample);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/worklist/AddWorklistSample.js"],"names":["React","FormattedMessage","injectIntl","Row","Col","Button","DataGrid","DataGridWithSelection","faSave","FontAwesomeIcon","MediaHeader","AddWorklistSample","props","extractedColumnList","count","addComponentSortedList","length","push","idsName","dataField","nneedsubsample","addSaveDataGrid","marginTop","userInfo","addComponentDataList","addSelectAll","intl","formatMessage","id","selectionChange","headerSelectionChange","dataState","dataResult","dataStateChangeWorklistSample","fontWeight","color","handleClickDelete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DataGridWithSelection from '../../components/data-grid/DataGridWithSelection';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { MediaHeader } from '../product/product.styled';\r\n\r\n\r\nconst AddWorklistSample = (props) => {\r\n        const extractedColumnList = [];\r\n        let count = (props.addComponentSortedList || []).length;\r\n        extractedColumnList.push({ idsName: \"IDS_ARNO\", dataField: \"sarno\", \"width\": \"155px\" });\r\n        if (props.nneedsubsample) {\r\n                extractedColumnList.push({ idsName: \"IDS_SAMPLEARNO\", dataField: \"ssamplearno\", \"width\": \"155px\" });\r\n        }\r\n        extractedColumnList.push({ idsName: \"IDS_TEST\", dataField: \"stestname\", \"width\": \"155px\" },\r\n                { idsName: \"IDS_SAMPLENAME\", dataField: \"ssamplename\", \"width\": \"155px\" },\r\n                { idsName: \"IDS_REGISTRATIONDATE\", dataField: \"sregistereddate\", \"width\": \"200px\" });\r\n        return (<>\r\n                <Row>\r\n                        <Col className=\"d-flex justify-content-end p-2\" md={12}>\r\n                                <Button className=\"btn-user btn-primary-blue\"\r\n                                        onClick={() => props.addSaveDataGrid()}\r\n                                >\r\n                                        <FontAwesomeIcon icon={faSave} /> { }\r\n                                        <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                                </Button>\r\n                        </Col>\r\n                        <Row style={{ marginTop: '10px' }}>\r\n                                <Col>\r\n                                        <DataGridWithSelection\r\n                                                primaryKeyField={\"nworklistsamplecode\"}\r\n                                                userInfo={props.userInfo}\r\n                                                data={props.addComponentDataList || []}\r\n                                                selectAll={props.addSelectAll}\r\n                                                title={props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                selectionChange={props.selectionChange}\r\n                                                headerSelectionChange={props.headerSelectionChange}\r\n                                                extractedColumnList={extractedColumnList}\r\n                                                //ADDed by Neeraj-ALPD-5136\r\n                                                //WorkList Screen -> Including filter in Data selection Kendo Grid\r\n                                                dataState={props.dataState}\r\n                                                dataResult={props.dataResult}\r\n                                                dataStateChange={props.dataStateChangeWorklistSample}\r\n                                                scrollable={'scrollable'}\r\n\r\n\r\n                                        />\r\n                                </Col>\r\n                        </Row>\r\n                        {/* ADDed by Neeraj-ALPD-5136\r\n                        WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                        --Starts*/}\r\n                        <br>\r\n                        </br>\r\n\r\n                        <Row style={{ marginTop: '10px' }}>\r\n                                <Col md={'12'}>\r\n                                        <MediaHeader className='mb-3'>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                                                        {props.intl.formatMessage({ id: \"IDS_SELECTEDSAMPLES\" }) + \" : \"}\r\n                                                </span>\r\n                                                <span style={{ fontWeight: \"bold\", color: \"blue\" }}>\r\n                                                        {count}\r\n                                                </span>\r\n                                        </MediaHeader>\r\n                                </Col>\r\n                                <Col>\r\n                                        <DataGridWithSelection\r\n                                                primaryKeyField={\"nworklistsamplecode\"}\r\n                                                userInfo={props.userInfo}\r\n                                                data={props.addComponentSortedList || []}\r\n                                                title={props.intl.formatMessage({ id: \"IDS_SELECTTODELETE\" })}\r\n                                                extractedColumnList={extractedColumnList}\r\n                                                hideColumnFilter={true}\r\n                                                isHidemulipleselect={true}\r\n                                                isActionRequired={true}\r\n                                                handleClickDelete={props.handleClickDelete}\r\n                                        />\r\n                                </Col>\r\n                                {/* ADDed by Neeraj-ALPD-5136\r\n                              WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                            --End*/}\r\n                        </Row>\r\n                </Row>\r\n\r\n\r\n        </>\r\n        )\r\n}\r\nexport default injectIntl(AddWorklistSample);"]},"metadata":{},"sourceType":"module"}