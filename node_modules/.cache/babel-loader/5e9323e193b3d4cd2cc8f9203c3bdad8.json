{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var AddPatient=function AddPatient(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sfirstname\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_FIRSTNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_FIRSTNAME\"}),value:props.selectedRecord[\"sfirstname\"],isMandatory:true,required:true,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"slastname\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_LASTNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_LASTNAME\"}),value:props.selectedRecord[\"slastname\"],isMandatory:true,required:true,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"snationalid\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_NATIONALID\"}),placeholder:props.intl.formatMessage({id:\"IDS_NATIONALID\"}),value:props.selectedRecord[\"snationalid\"],isMandatory:false,required:false,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sfathername\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_FATHERGUARDIANNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_FATHERGUARDIANNAME\"}),value:props.selectedRecord[\"sfathername\"],isMandatory:true,required:true,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(DateTimePicker,{name:\"ddob\",label:props.intl.formatMessage({id:\"IDS_DATEOFBIRTH\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"ddob\"]||\"\",dateFormat:props.userInfo.ssitedate,isClearable:false,isMandatory:true,required:true,maxDate:props.currentTime,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"ddob\",date);},value:props.selectedRecord[\"ddob\"]}),/*#__PURE__*/React.createElement(FormInput,{name:\"sage\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_AGE\"}),placeholder:props.intl.formatMessage({id:\"IDS_AGE\"}),value:props.selectedRecord[\"sage\"],isMandatory:true,required:true,readOnly:true,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ngendercode\",formLabel:props.intl.formatMessage({id:\"IDS_SEX\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.genderList,value:props.selectedRecord[\"ngendercode\"],isMandatory:true,isClearable:true,isMulti:false,isSearchable:false,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'ngendercode');}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"saddress\",label:props.intl.formatMessage({id:\"IDS_ADDRESS\"}),placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS\"}),value:props.selectedRecord[\"saddress\"],rows:\"2\",isMandatory:true,required:true,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"sphoneno\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_PHONENO\"}),placeholder:props.intl.formatMessage({id:\"IDS_PHONENO\"}),value:props.selectedRecord[\"sphoneno\"],isMandatory:true,required:true,maxLength:100,onChange:function onChange(event){return props.onInputOnChange(event);}}))));};export default injectIntl(AddPatient);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/AddPatient.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","AddPatient","props","intl","formatMessage","id","selectedRecord","event","onInputOnChange","userInfo","ssitedate","currentTime","date","handleDateChange","genderList","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\nconst AddPatient = (props) =>{    \r\n       return (<>\r\n\r\n                    <Row>\r\n                         <Col md={12}>                            \r\n                        \r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}                            \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"sfirstname\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}                            \r\n                              />\r\n                     \r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}                          \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n              \r\n                              <FormInput\r\n                                   name={\"snationalid\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_NATIONALID\"})}                   \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_NATIONALID\"})}\r\n                                   value ={ props.selectedRecord[\"snationalid\"] }\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormInput\r\n                                   name={\"sfathername\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_FATHERGUARDIANNAME\"})}                   \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_FATHERGUARDIANNAME\"})}\r\n                                   value ={ props.selectedRecord[\"sfathername\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                      \r\n                              <DateTimePicker\r\n                                                  name={\"ddob\"} \r\n                                                  label={ props.intl.formatMessage({ id:\"IDS_DATEOFBIRTH\"})}                     \r\n                                                  className='form-control'\r\n                                                  placeholderText=\"Select date..\"\r\n                                                  selected={props.selectedRecord[\"ddob\"] || \"\"}\r\n                                                  dateFormat={props.userInfo.ssitedate}\r\n                                                  isClearable={false}\r\n                                                  isMandatory={true}\r\n                                                  required={true}\r\n                                                  maxDate={props.currentTime}\r\n                                                  maxTime={props.currentTime}\r\n                                                  onChange={date => props.handleDateChange(\"ddob\", date)}\r\n                                                  value={props.selectedRecord[\"ddob\"]}\r\n                                                                                \r\n                                   />\r\n                           \r\n                              <FormInput\r\n                                   name={\"sage\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_AGE\"})}                        \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_AGE\"})}\r\n                                   value ={ props.selectedRecord[\"sage\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   readOnly\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormSelectSearch\r\n                                        name={\"ngendercode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_SEX\"})}                                \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                        options={ props.genderList}                                      \r\n                                        value = { props.selectedRecord[\"ngendercode\"] }\r\n                                        isMandatory={true}\r\n                                        isClearable={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={false}                               \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, 'ngendercode')}                               \r\n                                   />\r\n                       \r\n                              <FormTextarea\r\n                                   name={\"saddress\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_ADDRESS\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_ADDRESS\"})}\r\n                                   value ={ props.selectedRecord[\"saddress\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                        \r\n                              <FormInput\r\n                                   name={\"sphoneno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                                   value ={ props.selectedRecord[\"sphoneno\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              /> \r\n                 \r\n                    </Col> \r\n       </Row></>\r\n       )\r\n   }\r\n   export default injectIntl(AddPatient);\r\n"]},"metadata":{},"sourceType":"module"}