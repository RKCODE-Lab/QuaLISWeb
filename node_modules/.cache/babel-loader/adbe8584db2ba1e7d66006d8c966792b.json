{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import DropZone from'../../components/dropzone/dropzone.component';import{Row,Col}from'react-bootstrap';var ImportSampleStorageTransaction=function ImportSampleStorageTransaction(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DropZone,{name:\"sfilename\",label:props.intl.formatMessage({id:\"IDS_ADDFILE\"}),isMandatory:true,maxFiles:\"1\",minSize:0,maxSize:10,accept:\".xlsx, .xls\",onDrop:function onDrop(event){return props.onDropFile(event,\"sfilename\",\"1\");},actionType:props.actionType,deleteAttachment:props.deleteAttachment,multiple:props.multiple,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.editFiles&&props.editFiles.nattachmenttypecode,fileSizeName:\"nfilesize\",fileName:\"sfilename\"// disabled={disabled}\n})));};export default injectIntl(ImportSampleStorageTransaction);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/ImportSampleStorageTransaction.jsx"],"names":["React","injectIntl","DropZone","Row","Col","ImportSampleStorageTransaction","props","intl","formatMessage","id","event","onDropFile","actionType","deleteAttachment","multiple","selectedRecord","editFiles","nattachmenttypecode"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,8CAArB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CAEA,GAAMC,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAAAC,KAAK,CAAI,CAE5C,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACQ,oBAAC,QAAD,EACI,IAAI,CAAE,WADV,CAEI,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CAFX,CAGI,WAAW,CAAE,IAHjB,CAII,QAAQ,CAAE,GAJd,CAKI,OAAO,CAAE,CALb,CAMI,OAAO,CAAE,EANb,CAOI,MAAM,CAAE,aAPZ,CAQI,MAAM,CAAE,gBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,UAAN,CAAiBD,KAAjB,CAAwB,WAAxB,CAAqC,GAArC,CAAX,EARZ,CASI,UAAU,CAAEJ,KAAK,CAACM,UATtB,CAUI,gBAAgB,CAAEN,KAAK,CAACO,gBAV5B,CAWI,QAAQ,CAAEP,KAAK,CAACQ,QAXpB,CAYG,SAAS,CAAER,KAAK,CAACS,cAAN,CAAuBT,KAAK,CAACS,cAA7B,CAA8C,EAZ5D,CAaG,kBAAkB,CAAET,KAAK,CAACU,SAAN,EAAmBV,KAAK,CAACU,SAAN,CAAgBC,mBAb1D,CAcI,YAAY,CAAC,WAdjB,CAeI,QAAQ,CAAC,WACV;AAhBH,EADR,CADJ,CADJ,CAuDH,CAzDD,CA2DA,cAAehB,CAAAA,UAAU,CAACI,8BAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst ImportSampleStorageTransaction = props => {\r\n\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                    <DropZone\r\n                        name={\"sfilename\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ADDFILE\" })}\r\n                        isMandatory={true}\r\n                        maxFiles={\"1\"}\r\n                        minSize={0}\r\n                        maxSize={10}\r\n                        accept={\".xlsx, .xls\"}\r\n                        onDrop={(event) => props.onDropFile(event, \"sfilename\", \"1\")}\r\n                        actionType={props.actionType}\r\n                        deleteAttachment={props.deleteAttachment}\r\n                        multiple={props.multiple}\r\n                       editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                       attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                        fileSizeName=\"nfilesize\"\r\n                        fileName=\"sfilename\"\r\n                       // disabled={disabled}\r\n                    />\r\n            </Col>\r\n\r\n            {/* \r\n            <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            name={\"simportfilename\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"simportfilename\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n                     <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n            </Col> */}\r\n           \r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ImportSampleStorageTransaction);\r\n\r\n"]},"metadata":{},"sourceType":"module"}