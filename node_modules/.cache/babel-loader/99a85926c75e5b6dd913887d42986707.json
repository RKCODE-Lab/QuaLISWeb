{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{Col,Row}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import AddCodedResult from'./AddCodedResult';//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport ReactSelectAddEdit from'../../components/react-select-add-edit/react-select-add-edit-component';import{injectIntl}from'react-intl';var AddParameter=function AddParameter(props){var _props$parameterData=props.parameterData,needRoundingDigit=_props$parameterData.needRoundingDigit,needUnit=_props$parameterData.needUnit,parameterType=_props$parameterData.parameterType,unit=_props$parameterData.unit,testParameter=_props$parameterData.testParameter;console.log(\"reound:\",props.selectedRecord[\"nroundingdigits\"]);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ReactSelectAddEdit,{name:\"sparametername\",label:props.intl.formatMessage({id:\"IDS_PARAMETERNAME\"}),className:\"color-select\",classNamePrefix:\"react-select\",optionId:\"sparametername\",optionValue:\"sparametername\",options:testParameter,isMandatory:true,getValue:function getValue(value){return props.onComboChange(value,\"sparametername\",1);},value:props.selectedRecord[\"sparametername\"]?props.selectedRecord[\"sparametername\"]:\"\"// defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\n}),/*#__PURE__*/React.createElement(FormInput,{name:\"sparametersynonym\",label:props.intl.formatMessage({id:\"IDS_PARAMETERSYNONYM\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_PARAMETERSYNONYM\"}),value:props.selectedRecord&&props.selectedRecord[\"sparametersynonym\"]?props.selectedRecord[\"sparametersynonym\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PARAMETERTYPE\"}),isSearchable:false,name:\"nparametertypecode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,showOption:true,options:parameterType||[],optionId:\"nparametertypecode\",optionValue:\"sdisplaystatus\",value:props.selectedRecord?props.selectedRecord[\"nparametertypecode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nparametertypecode\",2);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"nroundingdigits\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_ROUNDINGDIGITS\"}),placeholder:props.intl.formatMessage({id:\"IDS_ROUNDINGDIGITS\"}),isDisabled:needRoundingDigit,isMandatory:!needRoundingDigit,required:!needRoundingDigit,className:\"form-control\",value:props.selectedRecord[\"nroundingdigits\"]&&typeof props.selectedRecord[\"nroundingdigits\"]===\"number\"?props.selectedRecord[\"nroundingdigits\"].toString():props.selectedRecord[\"nroundingdigits\"],onChange:function onChange(value){return props.onNumericInputChange(value,\"nroundingdigits\");},maxLength:1}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_UNIT\"}),isSearchable:true,name:\"nunitcode\",isDisabled:needUnit,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:!needUnit,options:unit||[],optionId:\"nunitcode\",optionValue:\"sunitname\",value:props.selectedRecord?props.selectedRecord[\"nunitcode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nunitcode\",1);},alphabeticalSort:true})),/*#__PURE__*/React.createElement(AddCodedResult,{onInputOnChange:props.onInputOnChange,parameterData:props.parameterData,selectedRecord:props.selectedRecord,onComboChange:props.onComboChange}));};export default injectIntl(AddParameter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddParameter.jsx"],"names":["React","FormSelectSearch","Col","Row","FormInput","AddCodedResult","ReactSelectAddEdit","injectIntl","AddParameter","props","parameterData","needRoundingDigit","needUnit","parameterType","unit","testParameter","console","log","selectedRecord","intl","formatMessage","id","value","onComboChange","event","onInputOnChange","toString","onNumericInputChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport AddCodedResult from './AddCodedResult';\r\n//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component'\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddParameter = (props) => {\r\n    const { needRoundingDigit, needUnit, parameterType, unit, testParameter } = props.parameterData;\r\n    console.log(\"reound:\", props.selectedRecord[\"nroundingdigits\"]);\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <ReactSelectAddEdit\r\n                    name=\"sparametername\"\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARAMETERNAME\" })}\r\n                    className=\"color-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    optionId=\"sparametername\"\r\n                    optionValue=\"sparametername\"\r\n                    options={testParameter}\r\n                    isMandatory={true}\r\n                    getValue={value => props.onComboChange(value, \"sparametername\", 1)}\r\n                    value={props.selectedRecord[\"sparametername\"] ? props.selectedRecord[\"sparametername\"] : \"\"}\r\n                // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                />\r\n                <FormInput\r\n                    name={\"sparametersynonym\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"sparametersynonym\"] ? props.selectedRecord[\"sparametersynonym\"] : \"\"}\r\n                    isMandatory=\"*\"\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PARAMETERTYPE\" })}\r\n                    isSearchable={false}\r\n                    name={\"nparametertypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={parameterType || []}\r\n                    optionId='nparametertypecode'\r\n                    optionValue='sdisplaystatus'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nparametertypecode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nparametertypecode\", 2)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n\r\n                <FormInput\r\n                    name={\"nroundingdigits\"}\r\n                    type=\"text\"\r\n                    label={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                    isDisabled={needRoundingDigit}\r\n                    isMandatory={!needRoundingDigit}\r\n                    required={!needRoundingDigit}\r\n                    className=\"form-control\"\r\n                    value={props.selectedRecord[\"nroundingdigits\"] && typeof props.selectedRecord[\"nroundingdigits\"] === \"number\" ?\r\n                        props.selectedRecord[\"nroundingdigits\"].toString() : props.selectedRecord[\"nroundingdigits\"]}\r\n                    onChange={value => props.onNumericInputChange(value, \"nroundingdigits\")}\r\n                    maxLength={1}\r\n                />\r\n              \r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                    isSearchable={true}\r\n                    name={\"nunitcode\"}\r\n                    isDisabled={needUnit}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={!needUnit}\r\n                    options={unit || []}\r\n                    optionId='nunitcode'\r\n                    optionValue='sunitname'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nunitcode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nunitcode\", 1)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <AddCodedResult\r\n                onInputOnChange={props.onInputOnChange}\r\n                parameterData={props.parameterData}\r\n                selectedRecord={props.selectedRecord}\r\n                onComboChange={props.onComboChange}\r\n            ></AddCodedResult>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddParameter);"]},"metadata":{},"sourceType":"module"}