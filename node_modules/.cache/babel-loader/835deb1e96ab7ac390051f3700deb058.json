{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{ApprovalSubType}from'../components/Enumeration';export function getUserMappingFilterChange(inputParamData,oldState){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"usermapping/getUserMapping\",inputParamData).then(function(response){var RegistrationTypeListMap=constructOptionList(response.data.RegistrationType||[],\"nregtypecode\",\"sregtypename\",'ascending','nregtypecode',false);var RegistrationSubTypeListMap=constructOptionList(response.data.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nregsubtypecode',false);var templateVersionOptionListMap=constructOptionList(response.data.TreeVersion||[],\"ntreeversiontempcode\",\"sversiondescription\",'decending','ntreeversiontempcode',false);var RegistrationTypeList=response.data.RegistrationType?RegistrationTypeListMap.get(\"OptionList\"):oldState.RegistrationTypeList;var RegistrationSubTypeList=response.data.RegistrationSubType?RegistrationSubTypeListMap.get(\"OptionList\"):oldState.RegistrationSubTypeList;var templateVersionOptionList=response.data.TreeVersion?templateVersionOptionListMap.get(\"OptionList\"):oldState.templateVersionOptionList;dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({Approvalsubtype:oldState.Approvalsubtype,RegistrationTypeList:RegistrationTypeList,RegistrationSubTypeList:RegistrationSubTypeList,templateVersionOptionList:templateVersionOptionList,approvalSubTypeValue:oldState.approvalSubTypeValue,RegistrationType:response.data.RegistrationType?response.data.RegistrationType:oldState.RegistrationType,registrationTypeValue:response.data.RegistrationType?response.data.RegistrationType.length>0?{value:response.data.RegistrationType[0].nregtypecode,label:response.data.RegistrationType[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,RegistrationSubType:response.data.RegistrationSubType?response.data.RegistrationSubType:oldState.RegistrationSubType,registrationSubTypeValue:response.data.RegistrationSubType?response.data.RegistrationSubType.length>0?{value:response.data.RegistrationSubType[0].nregsubtypecode,label:response.data.RegistrationSubType[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,TreeVersion:response.data.TreeVersion?response.data.TreeVersion:oldState.TreeVersion,templateVersionValue:response.data.TreeVersion?response.data.TreeVersion.length>0?{value:response.data.TreeVersion[0].ntreeversiontempcode,label:response.data.TreeVersion[0].sversiondescription}:{}:oldState.templateVersionValue,Site:response.data.Site?sortData(response.data.Site):[],selectedSite:response.data.selectedSite,UserRole:response.data.UserRole?sortData(response.data.UserRole):[]},sortData(response.data)),loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getUserMappingBySite(site,nversioncode,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"usermapping/getUserMappingBySite\",{nsitecode:site.nsitecode,nversioncode:nversioncode?nversioncode:-1,userinfo:userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedSite:site},sortData(response.data)),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getChildUsers(user,role,siteCode,nversionCode,userInfo,masterData,dataState,userRoles){return function(dispatch){if(role.schildnode>0){dispatch(initRequest(true));rsapi.post(\"usermapping/getChildUserMapping\",{nparusermappingcode:user.nusermappingcode,nuserrolecode:role.nuserrolecode,nsitecode:siteCode,nversioncode:nversionCode,levelno:-1,userinfo:userInfo,loading:false}).then(function(response){var datastate=_objectSpread({},dataState);userRoles.map(function(userRole){if(userRole.nlevelno<=role.nlevelno){if(dataState[userRole.nuserrolecode]){datastate[userRole.nuserrolecode]=dataState[userRole.nuserrolecode];}else{datastate[userRole.nuserrolecode]={skip:0,take:10};}}return null;});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},_defineProperty({},\"selectedUser_\".concat(role.nuserrolecode),user),sortData(response.data)),loading:false,dataState:datastate}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function openUserMappingModal(role,siteCode,selectedUser,versionCode,userInfo,masterData,parentRoleName){return function(dispatch){if(role.nlevelno===1?true:selectedUser?Object.keys(selectedUser).length>0?true:false:false){dispatch(initRequest(true));rsapi.post(\"usermapping/getAvailableUsers\",{nuserrolecode:role.nuserrolecode,nsitecode:siteCode,nparusermappingcode:role.nlevelno===1?-2:selectedUser.nusermappingcode,nversioncode:versionCode,userinfo:userInfo}).then(function(response){var AvailableUsersMap=constructOptionList(response.data.AvailableUsers||[],\"id\",\"Name\",undefined,undefined,true);var AvailableUsers=AvailableUsersMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:_objectSpread({openModal:true,graphView:false,operation:'create',loading:false,AvailableUsers:AvailableUsers,parentRole:role.nparentrolecode,childRole:role.nuserrolecode,childRoleName:role.suserrolename,nlevelno:role.nlevelno,selectedRecord:{}},masterData)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECT\"})+' '+parentRoleName);}};}// export function filterUserColumn(filterValue, masterData, userInfo,role,siteCode,nversionCode) {\n//     return function(dispatch){\n//         let nusermappingcode = 0;   \n//         let searchedData = undefined;\n//         if (filterValue === \"\"){\n//             nusermappingcode = masterData[role.nuserrolecode][0].nusermappingcode;\n//         } \n//         else{\n//             searchedData = searchData(filterValue, masterData[role.nuserrolecode]);\n//             if (searchedData.length > 0){\n//                 nusermappingcode = searchedData[0].nusermappingcode; \n//             }\n//         }\n//         if (nusermappingcode !== 0){\n//             dispatch(initRequest(true));\n//             rsapi.post(\"usermapping/getChildUserMapping\",{\n//                                                             nparusermappingcode:nusermappingcode,\n//                                                             nuserrolecode:role.nuserrolecode,\n//                                                             nsitecode:siteCode,\n//                                                             nversioncode:nversionCode,\n//                                                             levelno:-1,\n//                                                             userinfo:userInfo,\n//                                                             loading:false\n//                                                         }\n//                     )\n//             .then(response=>{  \n//                 masterData={\n//                     ...masterData,\n//                     [`selectedUser_${role.nuserrolecode}`]:searchedData?searchedData[0]:masterData[role.nuserrolecode][0],\n//                     ...sortData(response.data),\n//                     [`searchedData_${role.nuserrolecode}`] : searchedData\n//                 }              \n//                 dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//         }else{\n//             masterData[\"checklistversion\"] = [];\n//             masterData[\"selectedversion\"] = [];\n//             masterData[\"checklistversionqb\"] = [];\n//             masterData[\"selectedchecklist\"] =[];\n//             masterData[\"searchedData\"] = [];\n//             dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\n//         }\n//     }\n// }\nexport function getUserMappingGraphView(site,nversioncode,userinfo,selectedUser,selectedRole){return function(dispatch){if(site&&site.nsitecode){var inputData={nsitecode:site.nsitecode,nversioncode:nversioncode?nversioncode:-1,userinfo:userinfo};if(selectedUser){inputData['nusermappingcode']=selectedUser.nusermappingcode;}//let files=fs.readdirSync(fileViewURL+\"/SharedFolder\")\ndispatch(initRequest(true));rsapi.post(\"usermapping/getUserMappingTree\",inputData).then(function(response){var selectedRecord={};var hideFilters=false;var selectedTreeParent=undefined;if(selectedUser){selectedTreeParent=response.data.userTree&&response.data.userTree.length>0?response.data.userTree.find(function(x){return x.nusermappingcode=selectedUser.nusermappingcode;}):{};hideFilters=true;}dispatch({type:DEFAULT_RETURN,payload:{loading:false,userTree:response.data.userTree,openModal:true,graphView:true,operation:\"view\",selectedTreeParent:selectedTreeParent,selectedRecord:selectedRecord,hideFilters:hideFilters,files:response.data.folderFiles}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multilingualError:\"IDS_SELECTSITE\"}});}};}export function getCopyUserMapping(nsubtypecode,nregsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){if(nsubtypecode===ApprovalSubType.TESTRESULTAPPROVAL){dispatch(initRequest(true));rsapi.post('usermapping/getUserMappingCopy',{nsubtypecode:nsubtypecode,nregsubtypecode:nregsubtypecode,nsitecode:userInfo.nmastersitecode,userinfo:userInfo}).then(function(response){if(response.data.CopyRegType.length===0){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});return toast.warn(intl.formatMessage({id:\"IDS_NOREGISTRATIONTOCOPY\"}));}var selectedRecord={};var RegistrationTypeListMap=constructOptionList(response.data.CopyRegType||[],\"nregtypecode\",\"sregtypename\",'ascending','nregtypecode',false);var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nregsubtypecode',false);var optCopyRegType=RegistrationTypeListMap.get(\"OptionList\");var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[];selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,optCopyRegSubType:optCopyRegSubType,optCopyRegType:optCopyRegType,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getCopyUserMappingSubType(comboData,nregsubtypecode,selectedRecord,userInfo,masterData,optCopyRegType){return function(dispatch){dispatch(initRequest(true));rsapi.post('usermapping/getCopyRegSubType',{nregtypecode:comboData.value,nregsubtypecode:nregsubtypecode,nsitecode:userInfo.nmastersitecode,userinfo:userInfo}).then(function(response){var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nregsubtypecode',false);var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,loading:false,optCopyRegType:optCopyRegType,optCopyRegSubType:optCopyRegSubType,selectedRecord:selectedRecord,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/UserMappingAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","initRequest","intl","ApprovalSubType","getUserMappingFilterChange","inputParamData","oldState","dispatch","post","then","response","RegistrationTypeListMap","data","RegistrationType","RegistrationSubTypeListMap","RegistrationSubType","templateVersionOptionListMap","TreeVersion","RegistrationTypeList","get","RegistrationSubTypeList","templateVersionOptionList","type","payload","masterData","Approvalsubtype","approvalSubTypeValue","registrationTypeValue","length","value","nregtypecode","label","sregtypename","registrationSubTypeValue","nregsubtypecode","sregsubtypename","templateVersionValue","ntreeversiontempcode","sversiondescription","Site","selectedSite","UserRole","loading","dataState","undefined","catch","error","status","message","warn","getUserMappingBySite","site","nversioncode","userInfo","nsitecode","userinfo","getChildUsers","user","role","siteCode","nversionCode","userRoles","schildnode","nparusermappingcode","nusermappingcode","nuserrolecode","levelno","datastate","map","userRole","nlevelno","skip","take","openUserMappingModal","selectedUser","versionCode","parentRoleName","Object","keys","AvailableUsersMap","AvailableUsers","openModal","graphView","operation","parentRole","nparentrolecode","childRole","childRoleName","suserrolename","selectedRecord","formatMessage","id","getUserMappingGraphView","selectedRole","inputData","hideFilters","selectedTreeParent","userTree","find","x","files","folderFiles","multilingualError","getCopyUserMapping","nsubtypecode","ncontrolcode","TESTRESULTAPPROVAL","nmastersitecode","CopyRegType","loadEsign","CopyRegSubType","optCopyRegType","optCopyRegSubType","getCopyUserMappingSubType","comboData"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { constructOptionList, sortData } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { ApprovalSubType } from '../components/Enumeration';\r\n\r\nexport function getUserMappingFilterChange(inputParamData, oldState) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"usermapping/getUserMapping\", inputParamData)\r\n            .then(response => {\r\n                const RegistrationTypeListMap = constructOptionList(response.data.RegistrationType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\r\n                const RegistrationSubTypeListMap = constructOptionList(response.data.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\r\n                const templateVersionOptionListMap = constructOptionList(response.data.TreeVersion || [], \"ntreeversiontempcode\", \"sversiondescription\", 'decending', 'ntreeversiontempcode', false);\r\n                const RegistrationTypeList = response.data.RegistrationType ? RegistrationTypeListMap.get(\"OptionList\") : oldState.RegistrationTypeList;\r\n                const RegistrationSubTypeList = response.data.RegistrationSubType ? RegistrationSubTypeListMap.get(\"OptionList\") : oldState.RegistrationSubTypeList;\r\n                const templateVersionOptionList = response.data.TreeVersion ? templateVersionOptionListMap.get(\"OptionList\") : oldState.templateVersionOptionList;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            Approvalsubtype: oldState.Approvalsubtype,\r\n                            RegistrationTypeList, RegistrationSubTypeList, templateVersionOptionList,\r\n                            approvalSubTypeValue: oldState.approvalSubTypeValue,\r\n\r\n                            RegistrationType: response.data.RegistrationType ?\r\n                                response.data.RegistrationType\r\n                                : oldState.RegistrationType,\r\n\r\n                            registrationTypeValue: response.data.RegistrationType ?\r\n                                response.data.RegistrationType.length > 0 ?\r\n                                    {\r\n                                        value: response.data.RegistrationType[0].nregtypecode,\r\n                                        label: response.data.RegistrationType[0].sregtypename\r\n                                    }\r\n                                    : oldState.registrationTypeValue\r\n                                : oldState.registrationTypeValue,\r\n\r\n                            RegistrationSubType: response.data.RegistrationSubType ?\r\n                                response.data.RegistrationSubType\r\n                                : oldState.RegistrationSubType,\r\n\r\n                            registrationSubTypeValue: response.data.RegistrationSubType ?\r\n                                response.data.RegistrationSubType.length > 0 ?\r\n                                    {\r\n                                        value: response.data.RegistrationSubType[0].nregsubtypecode,\r\n                                        label: response.data.RegistrationSubType[0].sregsubtypename\r\n                                    }\r\n                                    : oldState.registrationSubTypeValue\r\n                                : oldState.registrationSubTypeValue,\r\n\r\n                            TreeVersion: response.data.TreeVersion ?\r\n                                response.data.TreeVersion\r\n                                : oldState.TreeVersion,\r\n\r\n                            templateVersionValue: response.data.TreeVersion ?\r\n                                response.data.TreeVersion.length > 0 ?\r\n                                    {\r\n                                        value: response.data.TreeVersion[0].ntreeversiontempcode,\r\n                                        label: response.data.TreeVersion[0].sversiondescription\r\n                                    }\r\n                                    : {}\r\n                                : oldState.templateVersionValue,\r\n                            Site: response.data.Site ? sortData(response.data.Site) : [],\r\n                            selectedSite: response.data.selectedSite,\r\n                            UserRole: response.data.UserRole ? sortData(response.data.UserRole) : [],\r\n                            ...sortData(response.data)\r\n                        }, loading: false,\r\n                        dataState:undefined\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getUserMappingBySite(site, nversioncode, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"usermapping/getUserMappingBySite\", { nsitecode: site.nsitecode, nversioncode: nversioncode ? nversioncode : -1, userinfo: userInfo })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            selectedSite: site,\r\n                            // UserRole: sortData(response.data.UserRole),\r\n                            ...sortData(response.data)\r\n                        }, loading: false\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\nexport function getChildUsers(user, role, siteCode, nversionCode, userInfo, masterData, dataState, userRoles) {\r\n\r\n    return function (dispatch) {\r\n        if (role.schildnode > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"usermapping/getChildUserMapping\",\r\n                {\r\n                    nparusermappingcode: user.nusermappingcode,\r\n                    nuserrolecode: role.nuserrolecode,\r\n                    nsitecode: siteCode,\r\n                    nversioncode: nversionCode,\r\n                    levelno: -1,\r\n                    userinfo: userInfo,\r\n                    loading: false\r\n                }\r\n            )\r\n                .then(response => {\r\n                    let datastate = { ...dataState }\r\n                    userRoles.map(userRole => {\r\n                        if (userRole.nlevelno <= role.nlevelno) {\r\n                            if (dataState[userRole.nuserrolecode]) {\r\n                                datastate[userRole.nuserrolecode] = dataState[userRole.nuserrolecode]\r\n                            } else {\r\n                                datastate[userRole.nuserrolecode] = { skip: 0, take: 10 }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    })\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                [`selectedUser_${role.nuserrolecode}`]: user,\r\n                                ...sortData(response.data)\r\n                            }, loading: false, dataState: datastate\r\n\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function openUserMappingModal(role, siteCode, selectedUser, versionCode, userInfo, masterData, parentRoleName) {\r\n    return function (dispatch) {\r\n        if (role.nlevelno === 1 ? true : selectedUser ? Object.keys(selectedUser).length > 0 ? true : false : false) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"usermapping/getAvailableUsers\",\r\n                {\r\n                    nuserrolecode: role.nuserrolecode,\r\n                    nsitecode: siteCode,\r\n                    nparusermappingcode: role.nlevelno === 1 ? -2 : selectedUser.nusermappingcode,\r\n                    nversioncode: versionCode,\r\n                    userinfo: userInfo,\r\n                }\r\n            )\r\n                .then(response => {\r\n                    const AvailableUsersMap = constructOptionList(response.data.AvailableUsers || [], \"id\", \"Name\", undefined, undefined, true);\r\n                    const AvailableUsers = AvailableUsersMap.get(\"OptionList\");\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            openModal: true,\r\n                            graphView: false,\r\n                            operation: 'create',\r\n                            loading: false,\r\n                            AvailableUsers,\r\n                            parentRole: role.nparentrolecode,\r\n                            childRole: role.nuserrolecode,\r\n                            childRoleName: role.suserrolename,\r\n                            nlevelno: role.nlevelno,\r\n                            selectedRecord: {},\r\n                            ...masterData\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECT\" })+' '+parentRoleName);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// export function filterUserColumn(filterValue, masterData, userInfo,role,siteCode,nversionCode) {\r\n//     return function(dispatch){\r\n//         let nusermappingcode = 0;   \r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\"){\r\n//             nusermappingcode = masterData[role.nuserrolecode][0].nusermappingcode;\r\n//         } \r\n//         else{\r\n\r\n//             searchedData = searchData(filterValue, masterData[role.nuserrolecode]);\r\n\r\n//             if (searchedData.length > 0){\r\n//                 nusermappingcode = searchedData[0].nusermappingcode; \r\n//             }\r\n\r\n//         }\r\n//         if (nusermappingcode !== 0){\r\n\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"usermapping/getChildUserMapping\",{\r\n//                                                             nparusermappingcode:nusermappingcode,\r\n//                                                             nuserrolecode:role.nuserrolecode,\r\n//                                                             nsitecode:siteCode,\r\n//                                                             nversioncode:nversionCode,\r\n//                                                             levelno:-1,\r\n//                                                             userinfo:userInfo,\r\n//                                                             loading:false\r\n//                                                         }\r\n//                     )\r\n//             .then(response=>{  \r\n//                 masterData={\r\n//                     ...masterData,\r\n//                     [`selectedUser_${role.nuserrolecode}`]:searchedData?searchedData[0]:masterData[role.nuserrolecode][0],\r\n//                     ...sortData(response.data),\r\n//                     [`searchedData_${role.nuserrolecode}`] : searchedData\r\n//                 }              \r\n\r\n\r\n//                 dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n//         }else{\r\n//             masterData[\"checklistversion\"] = [];\r\n//             masterData[\"selectedversion\"] = [];\r\n//             masterData[\"checklistversionqb\"] = [];\r\n//             masterData[\"selectedchecklist\"] =[];\r\n//             masterData[\"searchedData\"] = [];\r\n//             dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\r\n\r\n//         }\r\n//     }\r\n// }\r\nexport function getUserMappingGraphView(site, nversioncode, userinfo, selectedUser, selectedRole) {\r\n\r\n    return function (dispatch) {\r\n        if ( site  && site.nsitecode) {\r\n            let inputData = { nsitecode: site.nsitecode, nversioncode: nversioncode ? nversioncode : -1, userinfo };\r\n            if (selectedUser) {\r\n                inputData['nusermappingcode'] = selectedUser.nusermappingcode\r\n            }\r\n\r\n            //let files=fs.readdirSync(fileViewURL+\"/SharedFolder\")\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"usermapping/getUserMappingTree\", inputData)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    let hideFilters = false;\r\n                    let selectedTreeParent = undefined;\r\n                    if (selectedUser) {\r\n                        selectedTreeParent = response.data.userTree && response.data.userTree.length > 0 ? response.data.userTree.find(x => x.nusermappingcode = selectedUser.nusermappingcode) : {}\r\n                        hideFilters = true;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false,\r\n                            userTree: response.data.userTree,\r\n                            openModal: true,\r\n                            graphView: true,\r\n                            operation: \"view\",\r\n                            selectedTreeParent,\r\n                            selectedRecord,\r\n                            hideFilters,\r\n                            files: response.data.folderFiles\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false ,multilingualError:\"IDS_SELECTSITE\"} })\r\n        }\r\n    }\r\n}\r\nexport function getCopyUserMapping(nsubtypecode, nregsubtypecode, userInfo, masterData, ncontrolcode) {\r\n    return function (dispatch) {\r\n        if (nsubtypecode === ApprovalSubType.TESTRESULTAPPROVAL) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post('usermapping/getUserMappingCopy', { nsubtypecode: nsubtypecode, nregsubtypecode, nsitecode: userInfo.nmastersitecode, userinfo: userInfo })\r\n                .then(response => {\r\n                    if(response.data.CopyRegType.length === 0)\r\n                    {\r\n                        dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                        return  toast.warn(intl.formatMessage({ id: \"IDS_NOREGISTRATIONTOCOPY\" }));\r\n                    }\r\n\r\n                    let selectedRecord = {};\r\n                    const RegistrationTypeListMap = constructOptionList(response.data.CopyRegType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\r\n                    const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\r\n                    let optCopyRegType = RegistrationTypeListMap.get(\"OptionList\");\r\n                    let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                    selectedRecord['regtype'] = response.data.CopyRegType.length > 0 ? { value: response.data.CopyRegType[0].nregtypecode, label: response.data.CopyRegType[0].sregtypename } : []\r\n                    selectedRecord['regsubtype'] = response.data.CopyRegSubType ? response.data.CopyRegSubType.length > 0 ? { value: response.data.CopyRegSubType[0].nregsubtypecode, label: response.data.CopyRegSubType[0].sregsubtypename } : [] : []\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            operation: \"copy\", openModal: true,\r\n                            optCopyRegSubType,\r\n                            optCopyRegType,\r\n                            selectedRecord,\r\n                            masterData, ncontrolcode, loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\nexport function getCopyUserMappingSubType(comboData, nregsubtypecode, selectedRecord, userInfo, masterData, optCopyRegType) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('usermapping/getCopyRegSubType', { nregtypecode: comboData.value, nregsubtypecode, nsitecode: userInfo.nmastersitecode, userinfo: userInfo  })\r\n            .then(response => {\r\n                const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\r\n                let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                selectedRecord['regsubtype'] = response.data.CopyRegSubType.length > 0 ? { value: response.data.CopyRegSubType[0].nregsubtypecode, label: response.data.CopyRegSubType[0].sregsubtypename } : []\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        operation: \"copy\", openModal: true, loading: false,\r\n                        optCopyRegType,\r\n                        optCopyRegSubType,\r\n                        selectedRecord,\r\n                        masterData\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}