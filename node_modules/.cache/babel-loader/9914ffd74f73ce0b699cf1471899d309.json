{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{Row,Col,Card,Button,Nav}from'react-bootstrap';import PerfectScrollbar from'react-perfect-scrollbar';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import'react-perfect-scrollbar/dist/css/styles.css';import SplitterLayout from'react-splitter-layout';import{faEye,faTrashAlt}from'@fortawesome/free-regular-svg-icons';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport{process}from'@progress/kendo-data-query';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{callService,crudMaster,filterTestGroup,createTree,editTree,getTestGroupDetails,sampleTypeOnChange,validateEsignCredential,updateStore,addSpecification,getSpecification,addComponent,changeTestCategory,addTestGroupTest,editTestGroupTest,getTestGroupParameter,editTestGroupParameter,addTestFile,editSpecFile,getSpecificationDetails,addTestGroupCodedResult,getComponentBySpecId,filterColumnData,viewAttachment,viewTestGroupCheckList,getTestGroupComponentDetails,filterTransactionList,reportSpecification,retireSpecification}from'../../actions';import{constructOptionList,formatInputDate,create_UUID,deleteAttachmentDropZone,filterRecordBasedOnTwoArrays,getControlMap,onDropAttachFileList,showEsign,sortData}from'../../components/CommonScript';import TestGroupTestTab from'./TestGroupTestTab';import AddTestGroupSpecification from'./AddTestGroupSpecification';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus,REPORTTYPE,attachmentType,formCode,designProperties}from'../../components/Enumeration';import AddTestGroupTest from'./AddTestGroupTest';import AddProfileTree from'./AddProfileTree';import SampleFilter from'./SampleFilter';import AddFile from'../testmanagement/AddFile';import AdvFilter from'../../components/AdvFilter';import SpecificationHistory from'./SpecificationHistory';import TestGroupSpecFile from'./TestGroupSpecFile';import SpecificationInfo from'./SpecificationInfo';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import TransationListMaster from'../../components/TransactionListMaster';import TransationListMasterView from'../../components/TransactionListMasterView';import FormTreeMenu from'../../components/form-tree-menu/form-tree-menu.component';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport FormInput from'../../components/form-input/form-input.component';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{testMoreFields,testSubFields,searchFieldList,specificationColumnList,componentColumnList,addTestColumnList,editTestColumnList}from'./TestGroupFields';import EditTestGroupTest from'./EditTestGroupTest';import{ContentPanel,SearchAdd}from'../../components/App.styles';import'../../pages/registration/registration.css';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import ReactTooltip from'react-tooltip';var TestGroup=/*#__PURE__*/function(_Component){_inherits(TestGroup,_Component);var _super=_createSuper(TestGroup);function TestGroup(_props){var _ref2;var _this;_classCallCheck(this,TestGroup);_this=_super.call(this,_props);_this.reloadData=function(){var filterData=_this.props.Login.filterData||_this.state.filterData;if(filterData.nsampletypecode===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVAILABLE\"}));}else if(filterData.nproductcatcode===\"\"){if(filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORYNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALCATEGORYNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CATEGORYNOTAVAILABLE\"}));}}else if(filterData.nproductcode===\"\"||filterData.nproductcode===undefined){if(filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}}else if(filterData.ntreeversiontempcode===\"\"){toast.warn(_this.props.intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}else{var inputParam={inputData:{userinfo:_this.props.Login.userInfo,nsampletypecode:filterData.nsampletypecode.item[\"nsampletypecode\"],nproductcatcode:filterData.nproductcatcode.item[\"nproductcatcode\"],nproductcode:filterData.nproductcode.item[\"nproductcode\"],ntreeversiontempcode:filterData.ntreeversiontempcode.item[\"ntreeversiontempcode\"],filterData:filterData//: { ...this.props.Login.filterData }\n},historyDataState:_this.state.historyDataState};_this.props.filterTestGroup(inputParam,_this.props.Login.masterData,_this.searchRef);}};_this.ConfirmDelete=function(obj){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(obj);});};_this.handlePageChange=function(event){_this.setState({skip:event.skip,take:event.take});};_this.viewTestFile=function(props){var viewParam={operation:\"view\",methodUrl:\"TestGroupTestFile\",classUrl:\"testgroup\",inputData:{ntestgroupfilecode:props.selectedTest?props.selectedTest.ntestgroupfilecode:0,userinfo:_this.props.Login.userInfo,testgroupspecification:_this.props.Login.masterData.SelectedSpecification}};_this.props.viewAttachment(viewParam);};_this.fileViewIcon=function(master){if(master.ntestgroupfilecode>0&&master.nlinkcode===transactionStatus.NA){return true;}else{return false;}};_this.linkViewIcon=function(master){if(master.ntestgroupfilecode>0&&master.nlinkcode!==transactionStatus.NA){return true;}else{return false;}};_this.onFilterSumbit=function(){var tempFilterData=_this.state.tempFilterData;if(tempFilterData.nsampletypecode===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVAILABLE\"}));}else if(tempFilterData.nproductcatcode===\"\"){if(tempFilterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORYNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALCATEGORYNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CATEGORYNOTAVAILABLE\"}));}}// else if(tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO){\nelse if(tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.NO&&tempFilterData.nproductcode===\"\"||tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.NO&&tempFilterData.nproductcode===undefined){if(tempFilterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}}// }\nelse if(tempFilterData.ntreeversiontempcode===\"\"){toast.warn(_this.props.intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}else{var inputParam={inputData:{userinfo:_this.props.Login.userInfo,nsampletypecode:tempFilterData.nsampletypecode.value,nproductcatcode:tempFilterData.nproductcatcode.value,nproductcode:tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?-1:tempFilterData.nproductcode?tempFilterData.nproductcode.value:-1,ntreeversiontempcode:tempFilterData.ntreeversiontempcode.value,filterData:_objectSpread({},tempFilterData)},historyDataState:_this.state.historyDataState};_this.props.filterTestGroup(inputParam,_this.props.Login.masterData,_this.searchRef);}};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_SPECIFICATION\",operation:\"get\",keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedRecord:event.item,activeKey:event.key,focusKey:event.key,primaryKey:event.primaryKey,historyDataState:_this.state.historyDataState};_this.props.getSpecification(inputParam,_this.props.Login.masterData,_this.searchRef);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_FILE\",/*#__PURE__*/React.createElement(TestGroupSpecFile,{controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,deleteRecord:_this.deleteRecord,testGroupSpecFile:_this.props.Login.masterData.TestGroupSpecFile||[],selectedSpecification:_this.props.Login.masterData.SelectedSpecification,addTestFile:_this.addFile,editSpecFile:_this.props.editSpecFile,filterData:_this.state.filterData,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,screenName:\"IDS_FILE\",viewAttachment:_this.props.viewAttachment,settings:_this.props.Login.settings,masterData:_this.props.Login.masterData}));tabMap.set(\"IDS_SPECIFICATIONHISTORY\",/*#__PURE__*/React.createElement(SpecificationHistory,{data:_this.props.Login.masterData.TestGroupSpecificationHistory,dataResult:process(_this.props.Login.masterData.TestGroupSpecificationHistory||[],_this.state.historyDataState),dataState:_this.state.historyDataState,dataStateChange:_this.historyDataStateChange// testGroupSpecificationHistory={this.props.Login.masterData.TestGroupSpecificationHistory}\n// dataState={this.props.Login.screenName === \"IDS_SPECIFICATIONHISTORY\" ? this.state.historyDataState : { skip: 0, take: 10 }}\n,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_SPECIFICATIONHISTORY\"}));return tabMap;};_this.historyDataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.TestGroupSpecificationHistory||[],event.dataState),historyDataState:event.dataState});};_this.addFile=function(userInfo,operation,ncontrolCode,screenName,modalName,nflag){var testgroupspecification=_this.props.Login.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){_this.props.addTestFile(userInfo,operation,ncontrolCode,screenName,modalName,nflag);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.componentRowClick=function(event){var masterData=_this.props.Login.masterData;masterData[\"SelectedComponent\"]=event.testgroupspecsampletype[0];var inputParam={testgroupspecsampletype:event.testgroupspecsampletype[0],userInfo:_this.props.Login.userInfo};_this.props.getTestGroupComponentDetails(inputParam,masterData,_this.searchRef);};_this.deleteTest=function(deleteParam){var masterData=_this.props.Login.masterData;var testgroupspecification=masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var testgrouptest=deleteParam.props.testgrouptest;var inputParam={inputData:{testgrouptest:testgrouptest,userinfo:_this.props.Login.userInfo,testgroupspecification:testgroupspecification,ntreeversiontempcode:deleteParam.filterData.ntreeversiontempcode.value},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"Test\",screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:testgrouptest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:masterData,searchFieldList:searchFieldList,unchangeList:[\"TestGroupSpecification\",\"SelectedSpecification\",\"SampleType\",\"TreeVersionTemplate\",\"ProductCategory\",\"SelectedTest\",\"Product\",\"AgaramTree\",\"OpenNodes\",\"selectedNode\",\"FocusKey\",\"ActiveKey\",\"SelectedComponent\",\"TestGroupSpecSampleType\"]//, isSingleSelect: true\n}};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_TEST\",operation:\"delete\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"Default\"||_this.props.Login.operation==='approve'||_this.props.Login.operation==='complete'){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord[\"agree\"]=4;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;// selectedRecord[\"sfilename\"] = \"\";\n}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[event.target.name]=event.target.value;var indexKey=Object.keys(optional)[0];var value=Object.values(optional)[0];var treeData={ntreeversiontempcode:value.ntreeversiontempcode,npositioncode:value.nlevelno-1,sleveldescription:event.target.value,ntemptranstestgroupcode:value.ntemptranstestgroupcode,nformcode:62,schildnode:\"\",nnextchildcode:value.schildnode!==null?value.schildnode:-1,ntemplatemanipulationcode:value.ntemplatemanipulationcode,isreadonly:value.ntemplatemanipulationcode>0?true:false,slevelformat:value.slevelformat};var treetemplatemanipulation=selectedRecord.treetemplatemanipulation||[];treetemplatemanipulation[indexKey]=treeData;selectedRecord[\"treetemplatemanipulation\"]=treetemplatemanipulation;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onFilterComboChange=function(comboData,fieldName,caseNo){var tempFilterData=_this.state.tempFilterData||{};var inputParam={};switch(caseNo){case 1:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getProductCategory\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 2:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:tempFilterData.nsampletypecode.item,productcategory:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getProduct\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 3:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:tempFilterData.nsampletypecode.item,productcategory:tempFilterData.nproductcatcode.item,product:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getTreeVersionTemplate\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 4:tempFilterData[fieldName]=comboData;_this.setState({tempFilterData:tempFilterData});break;case 5:var selectedRecord=_this.state.selectedRecord;selectedRecord[fieldName]=comboData;var TestGroupSpecSampleType=_this.props.Login.testGroupInputData.TestGroupSpecSampleType||{};var testGroupSpecSampleType={};if(_this.props.Login.screenName===\"IDS_COMPONENT\"){testGroupSpecSampleType=selectedRecord[\"ncomponentcode\"]?selectedRecord[\"ncomponentcode\"].item:TestGroupSpecSampleType[0].item;}else{testGroupSpecSampleType=_this.props.Login.masterData.SelectedComponent;}inputParam={userinfo:_this.props.Login.userInfo,testcategory:comboData.item,testgroupspecsampletype:testGroupSpecSampleType,nallottedspeccode:_this.props.Login.masterData.SelectedSpecification[\"nallottedspeccode\"],selectedRecord:selectedRecord};_this.props.changeTestCategory(inputParam,_this.props.Login.testGroupInputData);break;default:break;}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){var inputParam={};if(_this.props.Login.screenName===\"IDS_PROFILETREE\"||_this.props.Login.screenName===\"IDS_EDITTREE\"){inputParam=_this.onSaveTree(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_SPECIFICATION\"){inputParam=_this.onSaveSpecification(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_COMPONENT\"){inputParam=_this.onSaveComponent(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_COPYSPECIFICATION\"){inputParam=_this.onSaveCopySpecification(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_TEST\"||_this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"){inputParam=_this.onSaveTest(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_SPECFILE\"){inputParam=_this.onSaveSpecFile(saveType,formRef);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,operation:_this.props.Login.operation,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}};_this.onSaveTest=function(saveType,formRef){var operation=_this.props.Login.operation;var masterData=_this.props.Login.masterData;var selectedRecord=_this.state.selectedRecord;var inputData={};var userinfo=_this.props.Login.userInfo;var postParam=undefined;if(operation===\"create\"){var testArray=selectedRecord.ntestcode.map(function(test){return test.item;});inputData={testgroupspecification:masterData.SelectedSpecification,testgroupspecsampletype:[masterData.SelectedComponent],testgrouptest:testArray,userinfo:userinfo};}else{postParam={inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:masterData.SelectedTest?masterData.SelectedTest.ntestgrouptestcode:0,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData,searchFieldList:searchFieldList,changeList:[\"TestGroupTestFormula\",\"TestGroupTestNumericParameter\",\"TestGroupTestPredefinedParameter\",\"TestGroupTestCharParameter\",\"TestGroupTestParameter\"],isSingleSelect:true};var testgrouptestfile=null;var testGroupFile=selectedRecord.ntestfilecode;if(testGroupFile){testGroupFile=testGroupFile.item;testgrouptestfile={nlinkcode:testGroupFile.nlinkcode,nattachmenttypecode:testGroupFile.nattachmenttypecode,sdescription:testGroupFile.sdescription,ssystemfilename:testGroupFile.ssystemfilename,dcreateddate:testGroupFile.dcreateddate,nfilesize:testGroupFile.nfilesize,ntestgroupfilecode:selectedRecord.ntestgroupfilecode,ntestgrouptestcode:selectedRecord.ntestgrouptestcode,sfilename:testGroupFile.sfilename,nstatus:transactionStatus.ACTIVE};}inputData={testgroupspecification:masterData.SelectedSpecification,testgrouptest:{ntestgrouptestcode:selectedRecord.ntestgrouptestcode,nsectioncode:selectedRecord.nsectioncode.value,nsourcecode:selectedRecord.nsourcecode.value,nmethodcode:selectedRecord.nmethodcode?selectedRecord.nmethodcode.value:transactionStatus.NA,ninstrumentcatcode:selectedRecord.ninstrumentcatcode?selectedRecord.ninstrumentcatcode.value:transactionStatus.NA,stestsynonym:selectedRecord.stestsynonym,ncost:selectedRecord.ncost,nsorter:selectedRecord.nsorter,nspecsampletypecode:selectedRecord.nspecsampletypecode},testgrouptestfile:testgrouptestfile,userinfo:userinfo};}var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Test\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:postParam};return inputParam;};_this.onSaveTree=function(saveType,formRef){var operation=_this.props.Login.operation;var selectedRecord=_this.state.selectedRecord;var inputData={userinfo:_this.props.Login.userInfo};if(operation===\"update\"){var selectedNode=_this.props.Login.masterData.selectedNode;inputData[\"treetemplatemanipulation\"]={ntemplatemanipulationcode:selectedRecord.ntemplatemanipulationcode,sleveldescription:selectedRecord.sleveldescription,nsampletypecode:selectedNode.nsampletypecode,ntreeversiontempcode:selectedNode.ntreeversiontempcode,nproductcatcode:selectedNode.nproductcatcode,nproductcode:selectedNode.nproductcode};inputData[\"selectednode\"]=_this.props.Login.masterData.ActiveKey;}else{var TreetempTranstestGroup=_this.props.Login.TreetempTranstestGroup;var filterData=_this.state.filterData;var _selectedRecord=_this.state.selectedRecord;var treetemplatemanipulation=[];var tempArray=filterRecordBasedOnTwoArrays(TreetempTranstestGroup,_selectedRecord.treetemplatemanipulation,\"ntemptranstestgroupcode\");tempArray.map(function(item){var treeData={ntreeversiontempcode:item.ntreeversiontempcode,npositioncode:item.nlevelno-1,sleveldescription:item.sleveldescription,ntemptranstestgroupcode:item.ntemptranstestgroupcode,nformcode:62,schildnode:\"\",nnextchildcode:item.schildnode,ntemplatemanipulationcode:item.ntemplatemanipulationcode,isreadonly:item.ntemplatemanipulationcode>0?true:false,slevelformat:item.slevelformat};return treetemplatemanipulation.push(treeData);});_selectedRecord.treetemplatemanipulation.map(function(item){var treeTemplateManip=TreetempTranstestGroup.filter(function(temp){return temp.ntemptranstestgroupcode===item.ntemptranstestgroupcode;});if(treeTemplateManip.length>0){item[\"ntemplatemanipulationcode\"]=treeTemplateManip[\"ntemplatemanipulationcode\"];}else{item[\"ntemplatemanipulationcode\"]=0;}return treetemplatemanipulation.push(item);});inputData[\"treetemplatemanipulation\"]=treetemplatemanipulation;inputData[\"sampletype\"]=filterData.nsampletypecode.item;inputData[\"ncategorycode\"]=filterData.nproductcatcode.value;inputData[\"nproductcode\"]=filterData.nproductcatcode.item.ncategorybasedflow==transactionStatus.YES?-1:filterData.nproductcode.value?filterData.nproductcode.value:-1;inputData[\"ntreeversiontempcode\"]=filterData.ntreeversiontempcode.value;}var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Tree\",saveType:saveType,formRef:formRef};return inputParam;};_this.onSaveSpecification=function(saveType,formRef){var operation=_this.props.Login.operation;var selectedRecord=_this.state.selectedRecord;var testGroupSpec={napproveconfversioncode:-1,sversion:'',napprovalstatus:transactionStatus.DRAFT,nstatus:transactionStatus.ACTIVE,ntransactionstatus:selectedRecord[\"ntransactionstatus\"],ncomponentrequired:selectedRecord[\"ncomponentrequired\"],nprojectcode:selectedRecord[\"nprojectcode\"]?selectedRecord[\"nprojectcode\"]:-1,sspecname:selectedRecord[\"sspecname\"],dexpirydate:selectedRecord[\"dexpirydate\"],nallottedspeccode:selectedRecord[\"nallottedspeccode\"]?selectedRecord[\"nallottedspeccode\"]:0,ntzexpirydate:selectedRecord[\"ntzexpirydate\"].value,stzexpirydate:selectedRecord[\"ntzexpirydate\"].label};var dexpirydate=testGroupSpec[\"dexpirydate\"];//need this conversion when the datatype of the field is 'Instant'\ntestGroupSpec[\"dexpirydate\"]=formatInputDate(dexpirydate,false);if(operation===\"create\"){testGroupSpec[\"ntemplatemanipulationcode\"]=_this.props.Login.masterData.selectedNode.ntemplatemanipulationcode;}var ntreeversiontempcode=_this.state.filterData.ntreeversiontempcode.value;var inputData={userinfo:_this.props.Login.userInfo,testgroupspecification:testGroupSpec,treetemplatemanipulation:_this.props.Login.masterData.selectedNode,selectedspecification:_this.props.Login.masterData.SelectedSpecification,ntreeversiontempcode:ntreeversiontempcode};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Specification\",saveType:saveType,formRef:formRef};return inputParam;};_this.onSaveComponent=function(saveType,formRef){var masterData=_this.props.Login.masterData;var selectedRecord=_this.state.selectedRecord;var testArray=selectedRecord.ntestcode.map(function(test){return test.item;});var inputData={testgroupspecification:masterData.SelectedSpecification,testgroupspecsampletype:[selectedRecord.ncomponentcode.item],testgrouptest:testArray,userinfo:_this.props.Login.userInfo};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:_this.props.Login.operation,methodUrl:\"Component\",saveType:saveType,formRef:formRef};return inputParam;};_this.onSaveSpecFile=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var acceptedFiles=selectedRecord.sfilename;var nattachmenttypecode=selectedRecord.nattachmenttypecode;var isFileEdited=transactionStatus.NO;var specFileArray=[];var selectedSpecification=_this.props.Login.masterData.SelectedSpecification;var specFile={nallottedspeccode:selectedSpecification.nallottedspeccode,nspecfilecode:selectedRecord.nspecfilecode?selectedRecord.nspecfilecode:0,nstatus:transactionStatus.ACTIVE,nattachmenttypecode:nattachmenttypecode};var formData=new FormData();if(nattachmenttypecode===attachmentType.FTP){if(acceptedFiles&&Array.isArray(acceptedFiles)&&acceptedFiles.length>0){acceptedFiles.forEach(function(file,index){var tempData=Object.assign({},specFile);var splittedFileName=file.name.split('.');var fileExtension=file.name.split('.')[splittedFileName.length-1];var uniquefilename=nattachmenttypecode===attachmentType.FTP?create_UUID()+'.'+fileExtension:\"\";tempData[\"sfilename\"]=file.name;tempData[\"sdescription\"]=selectedRecord.sdescription?selectedRecord.sdescription.trim():\"\";tempData[\"nlinkcode\"]=transactionStatus.NA;tempData[\"ssystemfilename\"]=uniquefilename;tempData[\"nfilesize\"]=file.size;formData.append(\"uploadedFile\"+index,file);formData.append(\"uniquefilename\"+index,uniquefilename);specFileArray.push(tempData);});formData.append(\"filecount\",acceptedFiles.length);isFileEdited=transactionStatus.YES;}else{specFile[\"sfilename\"]=selectedRecord.sfilename;specFile[\"sdescription\"]=selectedRecord.sdescription?selectedRecord.sdescription.trim():\"\";specFile[\"nlinkcode\"]=transactionStatus.NA;specFile[\"ssystemfilename\"]=selectedRecord.ssystemfilename;specFile[\"nfilesize\"]=selectedRecord.nfilesize;specFileArray.push(specFile);}}else{specFile[\"sfilename\"]=selectedRecord.slinkfilename.trim();specFile[\"sdescription\"]=selectedRecord.slinkdescription?selectedRecord.slinkdescription.trim():\"\";specFile[\"nlinkcode\"]=selectedRecord.nlinkcode.value?selectedRecord.nlinkcode.value:-1;specFile[\"ssystemfilename\"]=\"\";specFile[\"nfilesize\"]=0;specFileArray.push(specFile);}formData.append(\"isFileEdited\",isFileEdited);formData.append(\"testgroupspecification\",JSON.stringify(selectedSpecification));formData.append(\"testgroupspecfile\",JSON.stringify(specFileArray));var inputParam={inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:_this.props.Login.operation,classUrl:\"testgroup\",saveType:saveType,formRef:formRef,methodUrl:\"SpecificationFile\"};return inputParam;};_this.deleteSpecRecord=function(deleteParam){var selectedRecord=deleteParam.selectedRecord;if(selectedRecord.napprovalstatus===transactionStatus.DRAFT||selectedRecord.napprovalstatus===transactionStatus.CORRECTION){_this.deleteRecord(deleteParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.deleteRecord=function(deleteParam){if(_this.props.Login.masterData.selectedNode){var _inputData;var methodUrl=deleteParam.methodUrl;var dataState=_this.state.componentDataState;var screenName=deleteParam.screenName;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,deleteParam.keyName,deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"testgroupspecification\",_this.props.Login.masterData.SelectedSpecification),_defineProperty(_inputData,\"treetemplatemanipulation\",_this.props.Login.masterData.selectedNode),_defineProperty(_inputData,\"ntreeversiontempcode\",deleteParam.filterData.ntreeversiontempcode.value),_inputData),classUrl:\"testgroup\",operation:deleteParam.operation,methodUrl:methodUrl,screenName:screenName,dataState:dataState};var masterData=_this.props.Login.masterData;//if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:screenName,operation:deleteParam.operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPROFILENODE\"}));}};_this.deleteMultipleRecord=function(deleteParam){var testgroupspecification=_this.props.Login.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var inputParam={inputData:{testgroupspecsampletype:deleteParam.props.testgroupspecsampletype,userinfo:_this.props.Login.userInfo,testgroupspecification:testgroupspecification,treetemplatemanipulation:_this.props.Login.masterData.selectedNode},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"TestGroupComponent\",screenName:\"IDS_COMPONENT\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_COMPONENT\",operation:\"delete\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.onDropSpecFile=function(attachedFiles,fieldName,maxSize){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize);_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);_this.setState({selectedRecord:selectedRecord,actionType:\"delete\"//fileToDelete:file.name \n});};_this.validateTestGroupComplete=function(operation,inputValue,ncontrolCode){if(inputValue.testgroupspecification){if(inputValue.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputValue.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){return rsapi.post(\"testgroup/validateTestGroupComplete\",{nallottedspeccode:inputValue.testgroupspecification.nallottedspeccode,\"userinfo\":_this.props.Login.userInfo}).then(function(response){if(response.data&&response.data.length>0){var inactiveTestArray=[];response.data.map(function(item){return inactiveTestArray.indexOf(item.stestname)===-1?inactiveTestArray.push(item.stestname):\"\";});var data=\" [\"+inactiveTestArray+\"] \"+_this.props.intl.formatMessage({id:\"IDS_INACTIVETESTSATCOMPLETE\"});_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),data,_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.completeSpecification(operation,inputValue,ncontrolCode);},false,undefined);}else{_this.completeSpecification(operation,inputValue,ncontrolCode);}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response}));}});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.retireSpec=function(operation,selectedSpecification,approvalRoleActionDetail,retireSpecId){if(selectedSpecification.testgroupspecification.napprovalstatus!==transactionStatus.RETIRED){if(approvalRoleActionDetail.length>0&&approvalRoleActionDetail[0].nlevelno===transactionStatus.ACTIVE){if(selectedSpecification.testgroupspecification[\"napprovalstatus\"]===approvalRoleActionDetail[0].ntransactionstatus){var inputParam={inputData:{nallottedspeccode:selectedSpecification.testgroupspecification,treetemplatemanipulation:selectedSpecification.treetemplatemanipulation,approvalRoleActionDetail:approvalRoleActionDetail[0],userinfo:_this.props.Login.userInfo,operation:operation},classUrl:\"testgroup\",operation:operation,methodUrl:\"Spec\",screenName:\"IDS_STUDYPLAN\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,retireSpecId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_STUDYPLAN\",operation:operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.retireSpecification(inputParam.inputData,masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_RETIRECANBECONEAFTERFINAL\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_FINALLEVELAPPROVE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYRETIRED\"}));}};_this.specificationReport=function(operation,ncontrolCode){if(_this.props.Login.masterData.SelectedComponent&&_this.props.Login.masterData.SelectedTest){var inputParam={inputData:{sprimarykeyname:'nallottedspeccode',userinfo:_this.props.Login.userInfo,ncontrolcode:ncontrolCode,nregtypecode:transactionStatus.NA,nregsubtypecode:transactionStatus.NA,nreportmodulecode:transactionStatus.NA,nreporttypecode:REPORTTYPE.CONTROLBASED,nreportdecisiontypecode:transactionStatus.NA,certificatetypecode:transactionStatus.NA,nsectioncode:transactionStatus.NA,operation:operation,nallottedspeccode:_this.props.Login.masterData['SelectedSpecification']['nallottedspeccode'],selectedComponent:_this.props.Login.masterData[\"SelectedComponent\"],selectedTest:_this.props.Login.masterData[\"SelectedTest\"],filterData:_this.state.filterData}};_this.props.reportSpecification(inputParam['inputData']);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\"}));}};_this.completeSpecification=function(operation,inputValue,ncontrolCode){if(inputValue.testgroupspecification){if(inputValue.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputValue.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var inputParam={inputData:_objectSpread({userinfo:_this.props.Login.userInfo,ntreeversiontempcode:_this.state.filterData.ntreeversiontempcode.value,testGroupTest:_this.props.Login.masterData.TestGroupTest},inputValue),classUrl:\"testgroup\",operation:operation,methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_SPECIFICATION\",operation:operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.approveSpecification=function(status,needEsign){var masterData=_this.props.Login.masterData;var inputParam={inputData:{userinfo:_this.props.Login.userInfo,treetemplatemanipulation:masterData.selectedNode,ntreeversiontempcode:_this.state.filterData.ntreeversiontempcode.value,testgroupspecification:_objectSpread(_objectSpread({},masterData.SelectedSpecification),{},{napprovalstatus:status})},classUrl:\"testgroup\",operation:\"approve\",methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\"};if(needEsign===transactionStatus.YES){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SPECIFICATION\",operation:\"approve\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}};_this.onComboChange=function(comboData,fieldName,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(fieldName===\"ntestcode\"){selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}break;case 2:selectedRecord[\"parameterTypeCode\"]=comboData.value;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 3:selectedRecord[\"schecklistversionname\"]=comboData.item.schecklistversionname;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};var componentDataState={skip:0,take:10};var historyDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={selectedRecord:{},filterData:{},error:\"\",userRoleControlRights:[],controlMap:new Map(),componentDataState:componentDataState,historyDataState:historyDataState,tempFilterData:{},showTest:true,skip:0,take:_this.props.Login.settings?_this.props.Login.settings[12]:5,fixefScrollHeight:window.outerHeight-400,initialVerticalWidth:\"20vh\",testView:true,//paneHeight:'calc(100vh - ' +window.outerHeight-847 + 'px)'\npaneHeight:'calc(100vh -183px)'};_this.componentBreadcrumbs=[];_this.breadCrumbData=[];_this.searchRef=React.createRef();_this.specSubField=[_defineProperty({},designProperties.VALUE,\"stransdisplaystatus\"),(_ref2={},_defineProperty(_ref2,designProperties.VALUE,\"sapprovalstatus\"),_defineProperty(_ref2,designProperties.COLOUR,true),_ref2)];_this.myRef=React.createRef();return _this;}_createClass(TestGroup,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({parentHeight:height-50});}}},{key:\"render\",value:function render(){var _this2=this;var _this$props$Login$mas=this.props.Login.masterData,TestGroupSpecification=_this$props$Login$mas.TestGroupSpecification,SelectedSpecification=_this$props$Login$mas.SelectedSpecification,SelectedTest=_this$props$Login$mas.SelectedTest,AgaramTree=_this$props$Login$mas.AgaramTree,OpenNodes=_this$props$Login$mas.OpenNodes,selectedNode=_this$props$Login$mas.selectedNode,FocusKey=_this$props$Login$mas.FocusKey,ActiveKey=_this$props$Login$mas.ActiveKey,SelectedComponent=_this$props$Login$mas.SelectedComponent,TestGroupTest=_this$props$Login$mas.TestGroupTest,TestGroupSpecSampleType=_this$props$Login$mas.TestGroupSpecSampleType,searchedData=_this$props$Login$mas.searchedData,TestGroupTestParameter=_this$props$Login$mas.TestGroupTestParameter;// const deleteTree = {\n//     methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\n//     userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\"\n// };\nvar testGroupTestData=searchedData||TestGroupTest||[];if(TestGroupTestParameter){sortData(TestGroupTestParameter,\"ascending\",\"nsorter\");}if(testGroupTestData){sortData(testGroupTestData,\"ascending\",\"nsorter\");}var getComponent={screenName:\"IDS_COMPONENT\",operation:\"get\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,methodUrl:\"TestGroupComponent\",keyName:\"testgroupspecification\"};var addSpecParam={testgroupspecification:SelectedSpecification,selectedRecord:this.state.filterData,userInfo:this.props.Login.userInfo,selectedNode:selectedNode};var editSpecParam={selectedRecord:this.state.filterData,userinfo:this.props.Login.userInfo,selectedNode:selectedNode};var specDeleteParam={operation:\"delete\",methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\",keyName:\"testgroupspecification\",filterData:this.state.filterData};var addSpecId=this.state.controlMap.has(\"AddSpecification\")&&this.state.controlMap.get(\"AddSpecification\").ncontrolcode;var addTreeId=this.state.controlMap.has(\"AddTree\")&&this.state.controlMap.get(\"AddTree\").ncontrolcode;var editTreeId=this.state.controlMap.has(\"EditTree\")&&this.state.controlMap.get(\"EditTree\").ncontrolcode;var deleteTreeId=this.state.controlMap.has(\"DeleteTree\")&&this.state.controlMap.get(\"DeleteTree\").ncontrolcode;var editSpecId=this.state.controlMap.has(\"EditSpecification\")&&this.state.controlMap.get(\"EditSpecification\").ncontrolcode;var deleteSpecId=this.state.controlMap.has(\"DeleteSpecification\")&&this.state.controlMap.get(\"DeleteSpecification\").ncontrolcode;var addComponentId=this.state.controlMap.has(\"AddComponent\")&&this.state.controlMap.get(\"AddComponent\").ncontrolcode;var deleteComponentId=this.state.controlMap.has(\"DeleteComponent\")&&this.state.controlMap.get(\"DeleteComponent\").ncontrolcode;var addTestId=this.state.controlMap.has(\"AddTest\")&&this.state.controlMap.get(\"AddTest\").ncontrolcode;var deleteTestId=this.state.controlMap.has(\"DeleteTest\")&&this.state.controlMap.get(\"DeleteTest\").ncontrolcode;var editTestId=this.state.controlMap.has(\"EditTest\")&&this.state.controlMap.get(\"EditTest\").ncontrolcode;var viewFileId=this.state.controlMap.has(\"ViewTestFile\")&&this.state.controlMap.get(\"ViewTestFile\").ncontrolcode;var confirmMessage=new ConfirmMessage();var deleteTree={methodUrl:\"Tree\",operation:\"delete\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,screenName:\"IDS_TREE\",ncontrolCode:deleteTreeId,filterData:this.state.filterData};var getTest={screenName:\"IDS_TEST\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"TestGroupTest\",keyName:\"ntestgrouptestcode\"};var filterParam={inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:searchFieldList,changeList:[\"TestGroupTestFormula\",\"TestGroupTestNumericParameter\",\"TestGroupTestPredefinedParameter\",\"TestGroupTestCharParameter\",\"TestGroupTestParameter\"],isSingleSelect:true};var specMandatoryFields=[];var compMandatoryFields=[];var editTestMandatoryFields=[];var addTestMandatoryFields=[];specificationColumnList.forEach(function(item){return item.mandatory===true?specMandatoryFields.push(item):\"\";});componentColumnList.forEach(function(item){return item.mandatory===true?compMandatoryFields.push(item):\"\";});editTestColumnList.forEach(function(item){return item.mandatory===true?editTestMandatoryFields.push(item):\"\";});addTestColumnList.forEach(function(item){return item.mandatory===true?addTestMandatoryFields.push(item):\"\";});if(this.props.Login.masterData&&Object.values(this.props.Login.masterData).length>0){if(selectedNode&&selectedNode.sleveldescription){var splitNode=this.props.Login.masterData.ActiveKey.split('/');var treeNodeNames=[];splitNode.forEach(function(nodeItem){_this2.props.Login.masterData.TreeTemplateManipulation.forEach(function(treeItem){if(treeItem.ntemplatemanipulationcode===parseInt(nodeItem))treeNodeNames.push(treeItem.sleveldescription);});});this.componentBreadcrumbs=treeNodeNames;if(SelectedSpecification&&SelectedSpecification!==null&&SelectedSpecification.sspecname){this.componentBreadcrumbs.push(SelectedSpecification.sspecname);if(SelectedComponent&&SelectedComponent!==null&&SelectedComponent.ncomponentcode!==-1){// this.componentBreadcrumbs[2] = this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" }) + \": \" + SelectedComponent.scomponentname;\nthis.componentBreadcrumbs.push(SelectedComponent.scomponentname);}else{// delete this.componentBreadcrumbs[2];\n}}else{// delete this.componentBreadcrumbs[1];\n}}else{this.componentBreadcrumbs=[];// delete this.componentBreadcrumbs[0];\n}}this.confirmMessage=new ConfirmMessage();//New Design\nvar specDesign=/*#__PURE__*/React.createElement(React.Fragment,null,this.componentBreadcrumbs&&this.componentBreadcrumbs.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"component_breadcrumbs\"},/*#__PURE__*/React.createElement(\"ul\",null,this.componentBreadcrumbs.map(function(item){return/*#__PURE__*/React.createElement(\"li\",null,item);}))),/*#__PURE__*/React.createElement(ContentPanel,{hidden:this.state.showTest},/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONINFO\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"},onClick:function onClick(){return _this2.showSpecAndTestInfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_TEST\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this2.showSpecAndTestInfo1();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_TEST1\"}))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(SpecificationInfo,{controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedSpecification:this.props.Login.masterData.SelectedSpecification,userInfo:this.props.Login.userInfo,selectedNode:this.props.Login.masterData.selectedNode,selectedRecord:this.state.filterData,approvalRoleActionDetail:this.props.Login.masterData.ApprovalRoleActionDetail,screenName:\"IDS_SPECIFICATIONINFO\",deleteRecord:this.deleteRecord,addSpecification:this.props.addSpecification,filterData:this.state.filterData//completeSpecification={this.completeSpecification}\n,completeSpecification:this.validateTestGroupComplete,approveSpecification:this.approveSpecification,specificationReport:this.specificationReport,retireSpec:this.retireSpec})))),/*#__PURE__*/React.createElement(Card,{body:true},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))));var testDesign=/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"sm-header\"},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"},onClick:function onClick(){return _this2.showSpecAndTestInfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SPECINFO\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:this.state.testView?'p-0':'no-pad-t'},/*#__PURE__*/React.createElement(TransationListMaster,{componentBreadcrumbs:true// notSearchable={false}\n,masterList:searchedData||TestGroupTest||[],selectedMaster:[SelectedTest],primaryKeyField:\"ntestgrouptestcode\",getMasterDetail:this.props.getTestGroupDetails,inputParam:getTest,additionalParam:[],mainField:\"stestname\",selectedListName:\"SelectedTest\",objectName:\"testgrouptest\",listName:\"IDS_TEST\",showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",subFields:testSubFields,moreField:testMoreFields,needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,handlePageChange:this.handlePageChange,skip:this.state.skip,take:this.state.take,pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_VIEW\"}),controlname:\"faCloudDownloadAlt\",objectName:\"selectedTest\",hidden:this.state.userRoleControlRights.indexOf(viewFileId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.viewTestFile(props);},needConditionalIcon:true,conditionalIconFunction:this.fileViewIcon},{title:this.props.intl.formatMessage({id:\"IDS_VIEW\"}),controlname:\"faExternalLinkAlt\",objectName:\"selectedTest\",hidden:this.state.userRoleControlRights.indexOf(viewFileId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.viewTestFile(props);},needConditionalIcon:true,conditionalIconFunction:this.linkViewIcon},{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(editTestId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.props.editTestGroupTest(\"update\",props.SelectedTest[0],_this2.props.Login.userInfo,editTestId,SelectedSpecification,_this2.state.filterData);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"testgrouptest\",hidden:this.state.userRoleControlRights.indexOf(deleteTestId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteTest({props:props,ncontrolCode:deleteTestId,filterData:_this2.state.filterData});});}}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addTestId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-list-wrap\",onClick:function onClick(){return _this2.props.addTestGroupTest(SelectedComponent,_this2.props.Login.userInfo,addTestId,SelectedSpecification,_this2.state.filterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:this.props.intl.formatMessage({id:\"IDS_ADD\"})})))})));var paramDesign=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ContentPanel,{hidden:!this.state.showTest},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"sm-header\"},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_PARAMETER\"}))))),TestGroupTestParameter&&TestGroupTestParameter.length>0&&/*#__PURE__*/ // <PerfectScrollbar>\nReact.createElement(Card,null,/*#__PURE__*/React.createElement(TestGroupTestTab,{paneHeight:this.state.paneHeight,testView:this.state.testView,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenName:this.props.Login.screenName,openChildModal:this.props.Login.openChildModal,operation:this.props.Login.operation,loadEsign:this.props.Login.loadEsign,testGroupInputData:this.props.Login.testGroupInputData,parameterData:this.props.Login.parameterData,selectedRecord:this.state.selectedRecord,screenData:this.props.Login.screenData,ncontrolCode:this.props.Login.ncontrolCode,controlMap:this.state.controlMap,testGroupCheckList:this.props.Login.testGroupCheckList,openTemplateModal:this.props.Login.openTemplateModal,editTestGroupTest:this.props.editTestGroupTest,updateStore:this.props.updateStore,crudMaster:this.props.crudMaster,getTestGroupParameter:this.props.getTestGroupParameter,editTestGroupParameter:this.props.editTestGroupParameter,filterData:this.state.filterData,addTestGroupCodedResult:this.props.addTestGroupCodedResult,validateEsignCredential:this.props.validateEsignCredential,filterColumnData:this.props.filterColumnData,viewTestGroupCheckList:this.props.viewTestGroupCheckList}))// </PerfectScrollbar>\n));var mainDesign=/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:this.state.testView?\"detailed-inner\":\"detailed-inner no-height \",vertical:this.state.testView?false:true,borderColor:\"#999\",primaryIndex:1,secondaryInitialSize:this.state.testView?600:this.state.fixefScrollHeight},testDesign,paramDesign);// const testDesign = this.state.testView ?\n//     <SplitterLayout\n//         customClassName=\"detailed-inner\"\n//         borderColor=\"#999\"\n//         primaryIndex={1}>\n//         {tempDesign}{paramDesign}\n//     </SplitterLayout>\n//     :\n//     <SplitterLayout\n//         customClassName=\"detailed-inner no-height\"\n//         vertical\n//         borderColor=\"#999\"\n//         primaryIndex={1}\n//         // onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\n//         secondaryInitialSize={this.state.fixefScrollHeight}\n//     >\n//         <ContentPanel>\n//             {tempDesign}\n//         </ContentPanel>\n//         {paramDesign}\n//     </SplitterLayout>\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip-list-wrap\"}),/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},this.breadCrumbData&&this.breadCrumbData.length>0&&/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:30,customClassName:!this.state.testView?\"fixed_list_height\":\"\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.state.showModalBg?'show_modal_bg':'')},/*#__PURE__*/React.createElement(\"div\",{className:\"sticky_head\"},/*#__PURE__*/React.createElement(SearchAdd,{className:\"border fixed_ico_list title_grp_custom\"},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_PROFILETREE\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"icon_group_right_aligned\"},/*#__PURE__*/React.createElement(AdvFilter,{filterComponent:[{\"IDS_SAMPLEFILTER\":/*#__PURE__*/React.createElement(SampleFilter,{sampleType:this.state.sampleType,treeVersionTemplate:this.state.treeVersionTemplate,productCategory:this.state.productCategory,product:this.state.product,onFilterComboChange:this.onFilterComboChange,tempFilterData:this.state.tempFilterData}),needActionStrip:false}],onFilterSubmit:this.onFilterSumbit,showModalBg:function showModalBg(e){return _this2.setState({showModalBg:e});}}),/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue mr-1\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addTreeId)===-1,onClick:function onClick(){return _this2.props.createTree(_this2.state.filterData,_this2.props.Login.userInfo,selectedNode,addTreeId);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-list-wrap\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr0 mr-1\",name:\"edittestname\",hidden:this.state.userRoleControlRights.indexOf(editTreeId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),\"data-for\":\"tooltip-list-wrap\",onClick:function onClick(){return _this2.props.editTree(\"update\",selectedNode,_this2.props.Login.userInfo,editTreeId,_this2.state.filterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteLink\",hidden:this.state.userRoleControlRights.indexOf(deleteTreeId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip-list-wrap\",className:\"btn btn-circle outline-grey \",onClick:function onClick(){return _this2.ConfirmDelete(_objectSpread({},deleteTree));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-1\",variant:\"link\",onClick:function onClick(){return _this2.reloadData();},\"data-for\":\"tooltip-list-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"sticky_head_scroll_body\",style:{\"height\":this.state.parentHeight}},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(FormTreeMenu,{data:AgaramTree,hasSearch:false,handleTreeClick:this.onTreeClick,initialOpenNodes:OpenNodes,focusKey:FocusKey||\"\",activeKey:ActiveKey||\"\"}),/*#__PURE__*/React.createElement(TransationListMaster,{notSearchable:true,titleHead:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),titleClasses:\"title_grp_custom fixed_ico_list\",masterList:TestGroupSpecification||[],selectedMaster:[SelectedSpecification],needMultiSelect:false,primaryKeyField:\"nallottedspeccode\",getMasterDetail:function getMasterDetail(spec){return _this2.props.getComponentBySpecId(_objectSpread(_objectSpread({},getComponent),{},{selectedRecord:spec,historyDataState:_this2.state.historyDataState}),_this2.props.Login.masterData,_this2.searchRef);},mainField:\"sspecname\",selectedListName:\"testgroupspecification\",objectName:\"testgroupspecification\",listName:\"IDS_SPECIFICATION\",onFilterSumbit:this.onFilterSumbit,subFields:this.specSubField,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(editSpecId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.props.addSpecification(\"update\",_objectSpread(_objectSpread({},editSpecParam),props),editSpecId);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(deleteSpecId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteSpecRecord(_objectSpread(_objectSpread({props:props},specDeleteParam),{},{selectedRecord:SelectedSpecification,ncontrolCode:deleteSpecId}));});}}],needFilter:false,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addSpecId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-list-wrap\",onClick:function onClick(){return _this2.props.addSpecification(\"create\",_objectSpread({},addSpecParam),addSpecId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n}))),hideSearch:false,hidePaging:true}),SelectedSpecification&&SelectedSpecification.ncomponentrequired===transactionStatus.YES&&/*#__PURE__*/React.createElement(TransationListMaster,{notSearchable:true,titleHead:this.props.intl.formatMessage({id:\"IDS_COMPONENT\"}),titleClasses:\"title_grp_custom fixed_ico_list\",masterList:TestGroupSpecSampleType||[],selectedMaster:[SelectedComponent],needMultiSelect:false,primaryKeyField:\"nspecsampletypecode\",getMasterDetail:function getMasterDetail(event){return _this2.componentRowClick(event);},mainField:\"scomponentname\",selectedListName:\"testgroupspecsampletype\",objectName:\"testgroupspecsampletype\",listName:\"IDS_COMPONENT\",actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),// data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\ncontrolname:\"faTrashAlt\",objectName:\"testgroupspecsampletype\",hidden:this.state.userRoleControlRights.indexOf(deleteComponentId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteMultipleRecord({props:props,ncontrolCode:deleteComponentId});});}}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addComponentId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-list-wrap\"// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n,onClick:function onClick(){return _this2.props.addComponent(SelectedSpecification,_this2.props.Login.userInfo,addComponentId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \n}))),hidePaging:true})))),/*#__PURE__*/React.createElement(React.Fragment,null,this.state.testView?/*#__PURE__*/React.createElement(React.Fragment,null,specDesign,this.state.showTest?/*#__PURE__*/React.createElement(\"div\",null,mainDesign):\"\"):/*#__PURE__*/React.createElement(PerfectScrollbar,null,specDesign,this.state.showTest?/*#__PURE__*/React.createElement(\"div\",null,mainDesign):\"\")))))),this.props.Login.openModal&&this.props.Login.screenName&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,onSaveClick:this.onSaveClick,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_SPECFILE\"?this.findMandatoryFields(this.props.Login.screenName,this.state.selectedRecord):this.props.Login.screenName===\"IDS_SPECIFICATION\"?specMandatoryFields:this.props.Login.screenName===\"IDS_COMPONENT\"?compMandatoryFields:this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"?editTestMandatoryFields:this.props.Login.screenName===\"IDS_TEST\"?addTestMandatoryFields:this.props.Login.screenName===\"IDS_PROFILETREE\"||this.props.Login.screenName===\"IDS_EDITTREE\"?this.props.Login.treeMandatoryFields:[],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_SPECIFICATION\"?/*#__PURE__*/React.createElement(AddTestGroupSpecification,{selectedRecord:this.state.selectedRecord||{},timeZoneList:this.props.Login.timeZoneList,onInputOnChange:this.onInputOnChange,handleDateChange:this.handleDateChange,onComboChange:this.onComboChange,screenName:this.props.Login.screenName,operation:this.props.Login.operation,userInfo:this.props.Login.userInfo}):this.props.Login.screenName===\"IDS_COMPONENT\"?/*#__PURE__*/React.createElement(AddTestGroupTest,{selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,screenName:this.props.Login.screenName,onComboChange:this.onComboChange,onFilterComboChange:this.onFilterComboChange}):this.props.Login.screenName===\"IDS_PROFILETREE\"?/*#__PURE__*/React.createElement(AddProfileTree,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,treetempTranstestGroup:this.props.Login.TreetempTranstestGroup}):this.props.Login.screenName===\"IDS_SPECFILE\"?/*#__PURE__*/React.createElement(AddFile,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,actionType:this.state.actionType,onDrop:this.onDropSpecFile,deleteAttachment:this.deleteAttachment,linkMaster:this.props.Login.linkMaster,editFiles:this.props.Login.editFiles,maxSize:20,maxFiles:this.props.Login.operation===\"update\"?1:3,multiple:this.props.Login.operation===\"update\"?false:true,label:this.props.intl.formatMessage({id:\"IDS_SPECFILE\"}),hideDefaultToggle:true,name:\"specfilename\"}):this.props.Login.screenName===\"IDS_EDITTREE\"?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sleveldescription\",label:this.state.selectedRecord.slabelname,type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event,1);},placeholder:this.state.selectedRecord.slabelname,value:this.state.selectedRecord?this.state.selectedRecord[\"sleveldescription\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}))):this.props.Login.screenName===\"IDS_TEST\"?/*#__PURE__*/React.createElement(AddTestGroupTest,{selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,screenName:this.props.Login.screenName,onComboChange:this.onComboChange,onFilterComboChange:this.onFilterComboChange}):this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"?/*#__PURE__*/React.createElement(EditTestGroupTest,{selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange}):\"\"}));}},{key:\"findMandatoryFields\",value:function findMandatoryFields(screenName,selectedRecord){var mandyFields=[];if(screenName===\"IDS_SPECFILE\"){if(selectedRecord&&selectedRecord.nattachmenttypecode===attachmentType.LINK){mandyFields=[{\"idsName\":\"IDS_FILENAME\",\"dataField\":\"slinkfilename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_LINKNAME\",\"dataField\":\"nlinkcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}else{//if (this.props.Login.operation === 'update') {\nmandyFields=[{\"idsName\":\"IDS_FILE\",\"dataField\":\"sfilename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}];// }\n}}else{return[];}var finalMandyFields=[];mandyFields.forEach(function(item){return item.mandatory===true&&finalMandyFields.push(item);});return finalMandyFields;}},{key:\"showSpecAndTestInfo\",value:function showSpecAndTestInfo(){this.setState({showTest:!this.state.showTest,testView:false});this.updateSpiltterLayout();}},{key:\"showSpecAndTestInfo1\",value:function showSpecAndTestInfo1(){this.setState({showTest:!this.state.showTest,testView:true});//this.updateSpiltterLayout()\n}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(filterData){if(filterData&&Object.values(filterData).length>0&&filterData.nsampletypecode&&filterData.nsampletypecode.item){if(filterData.nsampletypecode&&filterData.nproductcatcode&&filterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES){this.breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":filterData.nsampletypecode?filterData.nsampletypecode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?\"IDS_PRODUCTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":\"\",\"value\":filterData.nproductcatcode?filterData.nproductcatcode.label:\"\"},{\"label\":\"IDS_TREETEMPLATEVERSION\",\"value\":filterData.ntreeversiontempcode?filterData.ntreeversiontempcode.label:\"\"}];}else{this.breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":filterData.nsampletypecode?filterData.nsampletypecode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?\"IDS_PRODUCTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":\"\",\"value\":filterData.nproductcatcode?filterData.nproductcatcode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?\"IDS_PRODUCT\":filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENT\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIAL\":\"\",\"value\":filterData.nproductcode?filterData.nproductcode.label:\"\"},{\"label\":\"IDS_TREETEMPLATEVERSION\",\"value\":filterData.ntreeversiontempcode?filterData.ntreeversiontempcode.label:\"\"}];}}}},{key:\"updateSpiltterLayout\",value:function updateSpiltterLayout(){var _this3=this;if(this.myRef&&this.myRef.current&&this.myRef.current.clientHeight+20!==this.state.fixefScrollHeight){this.setState({fixefScrollHeight:this.myRef.current.clientHeight+20,disableSplit:true});console.log(this.myRef.current.clientHeight);setTimeout(function(){_this3.setState({disableSplit:false});});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var selectedRecord=this.state.selectedRecord;var filterData=this.state.filterData||{};var isStateChanged=false;this.updateSpiltterLayout();var tempFilterData=this.state.tempFilterData||{};if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}if(this.props.Login.tempFilterData!==previousProps.Login.tempFilterData){tempFilterData=this.props.Login.tempFilterData||{};isStateChanged=true;}var sampleType=this.state.sampleType||[];if(this.props.Login.masterData.SampleType!==previousProps.Login.masterData.SampleType){var sampleTypeMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",\"nsampletypecode\",\"ascending\",false);sampleType=sampleTypeMap.get(\"OptionList\");tempFilterData[\"nsampletypecode\"]=sampleType.length?sampleType[0]:\"\";isStateChanged=true;}var productCategory=this.state.productCategory||[];if(this.props.Login.masterData.ProductCategory!==previousProps.Login.masterData.ProductCategory){var productCatMap=constructOptionList(this.props.Login.masterData.ProductCategory||[],\"nproductcatcode\",\"sproductcatname\",\"nproductcatcode\",\"ascending\",false);productCategory=productCatMap.get(\"OptionList\");tempFilterData[\"nproductcatcode\"]=productCategory.length>0?productCategory[0]:\"\";isStateChanged=true;}var product=this.state.product||[];if(this.props.Login.masterData.Product!==previousProps.Login.masterData.Product){var productMap=constructOptionList(this.props.Login.masterData.Product||[],\"nproductcode\",\"sproductname\",\"nproductcode\",\"ascending\",false);product=productMap.get(\"OptionList\");tempFilterData[\"nproductcode\"]=product.length>0?product[0]:undefined;isStateChanged=true;}var treeVersionTemplate=this.state.treeVersionTemplate||[];if(this.props.Login.masterData.TreeVersionTemplate!==previousProps.Login.masterData.TreeVersionTemplate){var templateMap=constructOptionList(this.props.Login.masterData.TreeVersionTemplate||[],\"ntreeversiontempcode\",\"sversiondescription\",\"ntreeversiontempcode\",\"ascending\",false);treeVersionTemplate=templateMap.get(\"OptionList\");tempFilterData[\"ntreeversiontempcode\"]=treeVersionTemplate.length>0?treeVersionTemplate[treeVersionTemplate.length-1]:\"\";isStateChanged=true;}// if (this.props.Login.masterData.TestGroupTestParameter && this.props.Login.masterData.TestGroupTestParameter !== previousProps.Login.masterData.TestGroupTestParameter) {\n//     sortData(this.props.Login.masterData.TestGroupTestParameter, \"ascending\", \"nsorter\");\n// }\n// if (this.props.Login.masterData.TestGroupTesT && this.props.Login.masterData.TestGroupTesT !== previousProps.Login.masterData.TestGroupTesT) {\n//     sortData(this.props.Login.masterData.TestGroupTesTest, \"ascending\", \"nsorter\");\n// }\nvar userRoleControlRights=this.state.userRoleControlRights||[];var controlMap=this.state.controlMap||[];if(this.props.Login.userInfo&&this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var nformCode=this.props.Login.userInfo.nformcode;if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[nformCode]&&Object.values(this.props.Login.userRoleControlRights[nformCode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,nformCode);filterData=_objectSpread({},tempFilterData);this.generateBreadCrumData(filterData);}if(this.props.Login.filterData!==previousProps.Login.filterData){filterData=_objectSpread({},this.props.Login.filterData);this.generateBreadCrumData(filterData);isStateChanged=true;}// else if (filterData !== previousState.filterData) {\n//     filterData = { ...tempFilterData };\n//     this.generateBreadCrumData(filterData);\n// }\nvar historyDataState=this.state.historyDataState;if(this.props.Login.historyDataState&&this.props.Login.historyDataState!==previousProps.Login.historyDataState){historyDataState=this.props.Login.historyDataState;isStateChanged=true;}if(isStateChanged){this.setState({selectedRecord:selectedRecord,tempFilterData:tempFilterData,filterData:filterData,userRoleControlRights:userRoleControlRights,controlMap:controlMap,sampleType:sampleType,productCategory:productCategory,product:product,treeVersionTemplate:treeVersionTemplate,historyDataState:historyDataState});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return TestGroup;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,filterTestGroup:filterTestGroup,createTree:createTree,editTree:editTree,sampleTypeOnChange:sampleTypeOnChange,getTestGroupDetails:getTestGroupDetails,validateEsignCredential:validateEsignCredential,updateStore:updateStore,addSpecification:addSpecification,getSpecification:getSpecification,addComponent:addComponent,changeTestCategory:changeTestCategory,addTestGroupTest:addTestGroupTest,editTestGroupTest:editTestGroupTest,getTestGroupParameter:getTestGroupParameter,editTestGroupParameter:editTestGroupParameter,addTestFile:addTestFile,editSpecFile:editSpecFile,getSpecificationDetails:getSpecificationDetails,addTestGroupCodedResult:addTestGroupCodedResult,getComponentBySpecId:getComponentBySpecId,filterColumnData:filterColumnData,viewAttachment:viewAttachment,viewTestGroupCheckList:viewTestGroupCheckList,getTestGroupComponentDetails:getTestGroupComponentDetails,filterTransactionList:filterTransactionList,reportSpecification:reportSpecification,retireSpecification:retireSpecification})(injectIntl(TestGroup));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroup.jsx"],"names":["React","Component","connect","injectIntl","rsapi","toast","Row","Col","Card","Button","Nav","PerfectScrollbar","FontAwesomeIcon","faPencilAlt","faPlus","faSync","SplitterLayout","faEye","faTrashAlt","process","SlideOutModal","Esign","callService","crudMaster","filterTestGroup","createTree","editTree","getTestGroupDetails","sampleTypeOnChange","validateEsignCredential","updateStore","addSpecification","getSpecification","addComponent","changeTestCategory","addTestGroupTest","editTestGroupTest","getTestGroupParameter","editTestGroupParameter","addTestFile","editSpecFile","getSpecificationDetails","addTestGroupCodedResult","getComponentBySpecId","filterColumnData","viewAttachment","viewTestGroupCheckList","getTestGroupComponentDetails","filterTransactionList","reportSpecification","retireSpecification","constructOptionList","formatInputDate","create_UUID","deleteAttachmentDropZone","filterRecordBasedOnTwoArrays","getControlMap","onDropAttachFileList","showEsign","sortData","TestGroupTestTab","AddTestGroupSpecification","DEFAULT_RETURN","transactionStatus","REPORTTYPE","attachmentType","formCode","designProperties","AddTestGroupTest","AddProfileTree","SampleFilter","AddFile","AdvFilter","SpecificationHistory","TestGroupSpecFile","SpecificationInfo","CustomTab","TransationListMaster","TransationListMasterView","FormTreeMenu","FormInput","ConfirmMessage","BreadcrumbComponent","testMoreFields","testSubFields","searchFieldList","specificationColumnList","componentColumnList","addTestColumnList","editTestColumnList","EditTestGroupTest","ContentPanel","SearchAdd","ListWrapper","ProductList","ReactTooltip","TestGroup","props","reloadData","filterData","Login","state","nsampletypecode","undefined","warn","intl","formatMessage","id","nproductcatcode","item","nformcode","PRODUCTCATEGORY","INSTRUMENTCATEGORY","MATERIALCATEGORY","nproductcode","ntreeversiontempcode","inputParam","inputData","userinfo","userInfo","historyDataState","masterData","searchRef","ConfirmDelete","obj","confirmMessage","confirm","deleteRecord","handlePageChange","event","setState","skip","take","viewTestFile","viewParam","operation","methodUrl","classUrl","ntestgroupfilecode","selectedTest","testgroupspecification","SelectedSpecification","fileViewIcon","master","nlinkcode","NA","linkViewIcon","onFilterSumbit","tempFilterData","ncategorybasedflow","NO","value","YES","onTreeClick","screenName","keyName","selectedRecord","activeKey","key","focusKey","primaryKey","tabDetail","tabMap","Map","set","controlMap","userRoleControlRights","addFile","defaultRecord","settings","TestGroupSpecificationHistory","historyDataStateChange","dataResult","dataState","ncontrolCode","modalName","nflag","napprovalstatus","DRAFT","CORRECTION","onTabChange","tabProps","updateInfo","typeName","data","componentRowClick","testgroupspecsampletype","deleteTest","deleteParam","testgrouptest","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","ntestgrouptestcode","fetchUrl","fecthInputObject","unchangeList","loadEsign","screenData","openModal","closeModal","onInputOnChange","caseNo","optional","target","type","name","checked","indexKey","Object","keys","values","treeData","npositioncode","nlevelno","sleveldescription","ntemptranstestgroupcode","schildnode","nnextchildcode","ntemplatemanipulationcode","isreadonly","slevelformat","treetemplatemanipulation","onEsignInputOnChange","onFilterComboChange","comboData","fieldName","sampletype","productcategory","product","TestGroupSpecSampleType","testGroupInputData","testGroupSpecSampleType","SelectedComponent","testcategory","nallottedspeccode","handleDateChange","dateName","dateValue","Date","onNumericInputChange","onSaveClick","saveType","formRef","onSaveTree","onSaveSpecification","onSaveComponent","onSaveCopySpecification","onSaveTest","onSaveSpecFile","testArray","ntestcode","map","test","SelectedTest","changeList","isSingleSelect","testgrouptestfile","testGroupFile","ntestfilecode","nattachmenttypecode","sdescription","ssystemfilename","dcreateddate","nfilesize","sfilename","nstatus","ACTIVE","nsectioncode","nsourcecode","nmethodcode","ninstrumentcatcode","stestsynonym","ncost","nsorter","nspecsampletypecode","selectedNode","ActiveKey","TreetempTranstestGroup","tempArray","push","treeTemplateManip","filter","temp","length","testGroupSpec","napproveconfversioncode","sversion","ntransactionstatus","ncomponentrequired","nprojectcode","sspecname","dexpirydate","ntzexpirydate","stzexpirydate","label","selectedspecification","ncomponentcode","acceptedFiles","isFileEdited","specFileArray","selectedSpecification","specFile","nspecfilecode","formData","FormData","FTP","Array","isArray","forEach","file","index","tempData","assign","splittedFileName","split","fileExtension","uniquefilename","trim","size","append","slinkfilename","slinkdescription","JSON","stringify","isFileupload","deleteSpecRecord","componentDataState","deleteMultipleRecord","onDropSpecFile","attachedFiles","maxSize","actionType","deleteAttachment","validateTestGroupComplete","inputValue","post","then","response","inactiveTestArray","indexOf","stestname","completeSpecification","catch","error","status","message","retireSpec","approvalRoleActionDetail","retireSpecId","RETIRED","specificationReport","sprimarykeyname","ncontrolcode","nregtypecode","nregsubtypecode","nreportmodulecode","nreporttypecode","CONTROLBASED","nreportdecisiontypecode","certificatetypecode","selectedComponent","testGroupTest","TestGroupTest","approveSpecification","needEsign","onComboChange","schecklistversionname","validateEsign","sreason","password","parseInt","showTest","fixefScrollHeight","window","outerHeight","initialVerticalWidth","testView","paneHeight","componentBreadcrumbs","breadCrumbData","createRef","specSubField","VALUE","COLOUR","myRef","parentHeight","height","clientHeight","TestGroupSpecification","AgaramTree","OpenNodes","FocusKey","searchedData","TestGroupTestParameter","testGroupTestData","getComponent","addSpecParam","editSpecParam","specDeleteParam","addSpecId","has","get","addTreeId","editTreeId","deleteTreeId","editSpecId","deleteSpecId","addComponentId","deleteComponentId","addTestId","deleteTestId","editTestId","viewFileId","deleteTree","getTest","filterParam","specMandatoryFields","compMandatoryFields","editTestMandatoryFields","addTestMandatoryFields","mandatory","splitNode","treeNodeNames","nodeItem","TreeTemplateManipulation","treeItem","scomponentname","specDesign","display","marginTop","float","showSpecAndTestInfo","marginRight","showSpecAndTestInfo1","ApprovalRoleActionDetail","testDesign","setting","title","controlname","objectName","hidden","onClick","needConditionalIcon","conditionalIconFunction","paramDesign","openChildModal","parameterData","testGroupCheckList","openTemplateModal","mainDesign","showModalBg","sampleType","treeVersionTemplate","productCategory","needActionStrip","e","spec","findMandatoryFields","treeMandatoryFields","timeZoneList","linkMaster","editFiles","slabelname","mandyFields","LINK","finalMandyFields","updateSpiltterLayout","current","disableSplit","console","log","setTimeout","previousProps","previousState","isStateChanged","SampleType","sampleTypeMap","ProductCategory","productCatMap","Product","productMap","TreeVersionTemplate","templateMap","nformCode","generateBreadCrumData","masterStatus","errorCode","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { Row, Col, Card, Button, Nav } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { faEye, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport {\r\n    callService, crudMaster, filterTestGroup, createTree, editTree, getTestGroupDetails, sampleTypeOnChange,\r\n    validateEsignCredential, updateStore, addSpecification, getSpecification, addComponent, changeTestCategory,\r\n    addTestGroupTest, editTestGroupTest, getTestGroupParameter, editTestGroupParameter, addTestFile,\r\n    editSpecFile, getSpecificationDetails, addTestGroupCodedResult, getComponentBySpecId, filterColumnData,\r\n    viewAttachment, viewTestGroupCheckList, getTestGroupComponentDetails, filterTransactionList, reportSpecification, retireSpecification\r\n} from '../../actions'\r\nimport { constructOptionList, formatInputDate, create_UUID, deleteAttachmentDropZone, filterRecordBasedOnTwoArrays, getControlMap, onDropAttachFileList, showEsign, sortData } from '../../components/CommonScript';\r\nimport TestGroupTestTab from './TestGroupTestTab';\r\nimport AddTestGroupSpecification from './AddTestGroupSpecification';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, REPORTTYPE, attachmentType, formCode, designProperties } from '../../components/Enumeration';\r\nimport AddTestGroupTest from './AddTestGroupTest';\r\nimport AddProfileTree from './AddProfileTree';\r\nimport SampleFilter from './SampleFilter';\r\nimport AddFile from '../testmanagement/AddFile';\r\nimport AdvFilter from '../../components/AdvFilter';\r\nimport SpecificationHistory from './SpecificationHistory';\r\nimport TestGroupSpecFile from './TestGroupSpecFile';\r\nimport SpecificationInfo from './SpecificationInfo';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport TransationListMaster from '../../components/TransactionListMaster';\r\nimport TransationListMasterView from '../../components/TransactionListMasterView';\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\n\r\nimport {\r\n    testMoreFields, testSubFields, searchFieldList, specificationColumnList, componentColumnList,\r\n    addTestColumnList, editTestColumnList\r\n} from './TestGroupFields';\r\nimport EditTestGroupTest from './EditTestGroupTest';\r\nimport { ContentPanel, SearchAdd } from '../../components/App.styles';\r\nimport '../../pages/registration/registration.css';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\n\r\nclass TestGroup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const componentDataState = { skip: 0, take: 10 };\r\n        const historyDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        this.state = {\r\n            selectedRecord: {},\r\n            filterData: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            componentDataState,\r\n            historyDataState,\r\n            tempFilterData: {},\r\n            showTest: true,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? this.props.Login.settings[12] : 5,\r\n            fixefScrollHeight: window.outerHeight - 400,\r\n            initialVerticalWidth: \"20vh\",\r\n            testView: true,\r\n            //paneHeight:'calc(100vh - ' +window.outerHeight-847 + 'px)'\r\n            paneHeight:'calc(100vh -183px)'\r\n        }\r\n        this.componentBreadcrumbs = [];\r\n        this.breadCrumbData = [];\r\n        this.searchRef = React.createRef();\r\n        this.specSubField = [{ [designProperties.VALUE]: \"stransdisplaystatus\" },\r\n        { [designProperties.VALUE]: \"sapprovalstatus\", [designProperties.COLOUR]: true }];\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    reloadData = () => {\r\n\r\n        const filterData = this.props.Login.filterData || this.state.filterData;\r\n        if (filterData.nsampletypecode === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\" }));\r\n        }\r\n        else if (filterData.nproductcatcode === \"\") {\r\n            if (filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORYNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CATEGORYNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        else if (filterData.nproductcode === \"\" || filterData.nproductcode === undefined) {\r\n            if (filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            }\r\n        } else if (filterData.ntreeversiontempcode === \"\") {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n        }\r\n        else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: filterData.nsampletypecode.item[\"nsampletypecode\"],\r\n                    nproductcatcode: filterData.nproductcatcode.item[\"nproductcatcode\"],\r\n                    nproductcode: filterData.nproductcode.item[\"nproductcode\"],\r\n                    ntreeversiontempcode: filterData.ntreeversiontempcode.item[\"ntreeversiontempcode\"],\r\n                    filterData,//: { ...this.props.Login.filterData }\r\n                },\r\n                historyDataState: this.state.historyDataState\r\n\r\n            }\r\n            this.props.filterTestGroup(inputParam, this.props.Login.masterData, this.searchRef);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { TestGroupSpecification, SelectedSpecification, SelectedTest, AgaramTree, OpenNodes, selectedNode, FocusKey,\r\n            ActiveKey, SelectedComponent, TestGroupTest, TestGroupSpecSampleType, searchedData,\r\n            TestGroupTestParameter } = this.props.Login.masterData;\r\n        // const deleteTree = {\r\n        //     methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\r\n        //     userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\"\r\n        // };\r\n\r\n        const testGroupTestData = searchedData || TestGroupTest || []\r\n\r\n        if (TestGroupTestParameter) {\r\n            sortData(TestGroupTestParameter, \"ascending\", \"nsorter\");\r\n        }\r\n\r\n        if (testGroupTestData) {\r\n            sortData(testGroupTestData, \"ascending\", \"nsorter\");\r\n        }\r\n\r\n        const getComponent = {\r\n            screenName: \"IDS_COMPONENT\", operation: \"get\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"TestGroupComponent\", keyName: \"testgroupspecification\"\r\n        };\r\n        const addSpecParam = { testgroupspecification: SelectedSpecification, selectedRecord: this.state.filterData, userInfo: this.props.Login.userInfo, selectedNode };\r\n        const editSpecParam = { selectedRecord: this.state.filterData, userinfo: this.props.Login.userInfo, selectedNode };\r\n        const specDeleteParam = { operation: \"delete\", methodUrl: \"Specification\", screenName: \"IDS_SPECIFICATION\", keyName: \"testgroupspecification\", filterData: this.state.filterData };\r\n        const addSpecId = this.state.controlMap.has(\"AddSpecification\") && this.state.controlMap.get(\"AddSpecification\").ncontrolcode;\r\n        const addTreeId = this.state.controlMap.has(\"AddTree\") && this.state.controlMap.get(\"AddTree\").ncontrolcode;\r\n        const editTreeId = this.state.controlMap.has(\"EditTree\") && this.state.controlMap.get(\"EditTree\").ncontrolcode;\r\n        const deleteTreeId = this.state.controlMap.has(\"DeleteTree\") && this.state.controlMap.get(\"DeleteTree\").ncontrolcode;\r\n        const editSpecId = this.state.controlMap.has(\"EditSpecification\") && this.state.controlMap.get(\"EditSpecification\").ncontrolcode;\r\n        const deleteSpecId = this.state.controlMap.has(\"DeleteSpecification\") && this.state.controlMap.get(\"DeleteSpecification\").ncontrolcode;\r\n        const addComponentId = this.state.controlMap.has(\"AddComponent\") && this.state.controlMap.get(\"AddComponent\").ncontrolcode;\r\n        const deleteComponentId = this.state.controlMap.has(\"DeleteComponent\") && this.state.controlMap.get(\"DeleteComponent\").ncontrolcode;\r\n        const addTestId = this.state.controlMap.has(\"AddTest\") && this.state.controlMap.get(\"AddTest\").ncontrolcode;\r\n        const deleteTestId = this.state.controlMap.has(\"DeleteTest\") && this.state.controlMap.get(\"DeleteTest\").ncontrolcode;\r\n        const editTestId = this.state.controlMap.has(\"EditTest\") && this.state.controlMap.get(\"EditTest\").ncontrolcode;\r\n        const viewFileId = this.state.controlMap.has(\"ViewTestFile\") && this.state.controlMap.get(\"ViewTestFile\").ncontrolcode;\r\n        const confirmMessage = new ConfirmMessage();\r\n\r\n        const deleteTree = {\r\n            methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\", ncontrolCode: deleteTreeId, filterData: this.state.filterData\r\n        };\r\n\r\n        const getTest = {\r\n            screenName: \"IDS_TEST\", operation: \"get\", masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"TestGroupTest\", keyName: \"ntestgrouptestcode\"\r\n        };\r\n        const filterParam = {\r\n            inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n            fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n            searchFieldList, changeList: [\"TestGroupTestFormula\", \"TestGroupTestNumericParameter\",\r\n                \"TestGroupTestPredefinedParameter\", \"TestGroupTestCharParameter\", \"TestGroupTestParameter\"], isSingleSelect: true\r\n        };\r\n        const specMandatoryFields = [];\r\n        const compMandatoryFields = [];\r\n        const editTestMandatoryFields = [];\r\n        const addTestMandatoryFields = [];\r\n        specificationColumnList.forEach(item => item.mandatory === true ?\r\n            specMandatoryFields.push(item) : \"\"\r\n        );\r\n        componentColumnList.forEach(item => item.mandatory === true ?\r\n            compMandatoryFields.push(item) : \"\"\r\n        );\r\n        editTestColumnList.forEach(item => item.mandatory === true ?\r\n            editTestMandatoryFields.push(item) : \"\"\r\n        );\r\n        addTestColumnList.forEach(item => item.mandatory === true ?\r\n            addTestMandatoryFields.push(item) : \"\"\r\n        );\r\n\r\n        if (this.props.Login.masterData && Object.values(this.props.Login.masterData).length > 0) {\r\n            if (selectedNode && selectedNode.sleveldescription) {\r\n                const splitNode = this.props.Login.masterData.ActiveKey.split('/');\r\n                let treeNodeNames = [];\r\n                splitNode.forEach(nodeItem => {\r\n                    this.props.Login.masterData.TreeTemplateManipulation.forEach(treeItem => {\r\n                        if (treeItem.ntemplatemanipulationcode === parseInt(nodeItem))\r\n                            treeNodeNames.push(treeItem.sleveldescription);\r\n                    })\r\n                })\r\n                this.componentBreadcrumbs = treeNodeNames;\r\n                if (SelectedSpecification && SelectedSpecification !== null && SelectedSpecification.sspecname) {\r\n                    this.componentBreadcrumbs.push(SelectedSpecification.sspecname);\r\n                    if (SelectedComponent && SelectedComponent !== null && SelectedComponent.ncomponentcode !== -1) {\r\n                        // this.componentBreadcrumbs[2] = this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" }) + \": \" + SelectedComponent.scomponentname;\r\n                        this.componentBreadcrumbs.push(SelectedComponent.scomponentname);\r\n                    } else {\r\n                        // delete this.componentBreadcrumbs[2];\r\n                    }\r\n                } else {\r\n                    // delete this.componentBreadcrumbs[1];\r\n                }\r\n            } else {\r\n                this.componentBreadcrumbs = [];\r\n                // delete this.componentBreadcrumbs[0];\r\n            }\r\n        }\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n\r\n\r\n        //New Design\r\n        const specDesign =\r\n            <>\r\n                {this.componentBreadcrumbs && this.componentBreadcrumbs.length > 0 &&\r\n                    <div className=\"component_breadcrumbs\">\r\n                        <ul>\r\n                            {this.componentBreadcrumbs.map((item) => {\r\n                                return <li>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n\r\n                <ContentPanel hidden={this.state.showTest}>\r\n                    <div className='card_group'>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                    <h4>{this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONINFO\" })}</h4>\r\n                                </span>\r\n                                <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                    onClick={() => this.showSpecAndTestInfo()}>\r\n                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                </button>\r\n                                <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                                    onClick={() => this.showSpecAndTestInfo1()}>\r\n                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_TEST1\" })}\r\n                                </button>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <SpecificationInfo\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    selectedSpecification={this.props.Login.masterData.SelectedSpecification}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    selectedNode={this.props.Login.masterData.selectedNode}\r\n                                    selectedRecord={this.state.filterData}\r\n                                    approvalRoleActionDetail={this.props.Login.masterData.ApprovalRoleActionDetail}\r\n                                    screenName=\"IDS_SPECIFICATIONINFO\"\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    addSpecification={this.props.addSpecification}\r\n                                    filterData={this.state.filterData}\r\n                                    //completeSpecification={this.completeSpecification}\r\n                                    completeSpecification={this.validateTestGroupComplete}\r\n                                    approveSpecification={this.approveSpecification}\r\n                                    specificationReport={this.specificationReport}\r\n                                    retireSpec={this.retireSpec}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <Card body>\r\n\r\n                        <div>\r\n                            <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                        </div>\r\n\r\n                    </Card>\r\n                </ContentPanel>\r\n            </>\r\n\r\n        const testDesign = <Card>\r\n            <Card.Header className='sm-header'>\r\n                <span style={{ display: \"inline-block\" }} >\r\n                    <h4>{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                </span>\r\n                <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                    onClick={() => this.showSpecAndTestInfo()}>\r\n                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                    {this.props.intl.formatMessage({ id: \"IDS_SPECINFO\" })}\r\n                </button>\r\n            </Card.Header>\r\n            <Card.Body className={this.state.testView ? 'p-0' : 'no-pad-t'}>\r\n                <TransationListMaster\r\n                    componentBreadcrumbs={true}\r\n                    // notSearchable={false}\r\n                    masterList={searchedData || TestGroupTest || []}\r\n                    selectedMaster={[SelectedTest]}\r\n                    primaryKeyField=\"ntestgrouptestcode\"\r\n                    getMasterDetail={this.props.getTestGroupDetails}\r\n                    inputParam={getTest}\r\n                    additionalParam={[]}\r\n                    mainField=\"stestname\"\r\n                    selectedListName=\"SelectedTest\"\r\n                    objectName=\"testgrouptest\"\r\n                    listName=\"IDS_TEST\"\r\n                    showStatusLink={true}\r\n                    statusFieldName=\"stransdisplaystatus\"\r\n                    statusField=\"ntransactionstatus\"\r\n                    subFields={testSubFields}\r\n                    moreField={testMoreFields}\r\n                    needValidation={false}\r\n                    needFilter={false}\r\n                    filterColumnData={this.props.filterTransactionList}\r\n                    searchListName=\"searchedData\"\r\n                    searchRef={this.searchRef}\r\n                    filterParam={filterParam}\r\n                    handlePageChange={this.handlePageChange}\r\n                    skip={this.state.skip}\r\n                    take={this.state.take}\r\n                    pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                    actionIcons={\r\n                        [\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                                controlname: \"faCloudDownloadAlt\",\r\n                                objectName: \"selectedTest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(viewFileId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.viewTestFile(props),\r\n                                needConditionalIcon: true,\r\n                                conditionalIconFunction: this.fileViewIcon\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                                controlname: \"faExternalLinkAlt\",\r\n                                objectName: \"selectedTest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(viewFileId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.viewTestFile(props),\r\n                                needConditionalIcon: true,\r\n                                conditionalIconFunction: this.linkViewIcon\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                controlname: \"faPencilAlt\",\r\n                                objectName: \"testgroupspecification\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(editTestId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.props.editTestGroupTest(\"update\", props.SelectedTest[0], this.props.Login.userInfo, editTestId, SelectedSpecification, this.state.filterData)\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                controlname: \"faTrashAlt\",\r\n                                objectName: \"testgrouptest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(deleteTestId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => confirmMessage.confirm(\r\n                                    \"deleteMessage\",\r\n                                    this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                    () => this.deleteTest({ props, ncontrolCode: deleteTestId, filterData: this.state.filterData })\r\n                                )\r\n                            }\r\n                        ]\r\n                    }\r\n                    commonActions={\r\n                        <>\r\n\r\n                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                hidden={this.state.userRoleControlRights.indexOf(addTestId) === -1}\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                data-for=\"tooltip-list-wrap\"\r\n                                onClick={() => this.props.addTestGroupTest(SelectedComponent, this.props.Login.userInfo, addTestId, SelectedSpecification, this.state.filterData)}>\r\n                                <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} />\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        const paramDesign =\r\n            <>\r\n                <ContentPanel hidden={!this.state.showTest}>\r\n                    <Card>\r\n                        <Card.Header className='sm-header'>\r\n                            <span style={{ display: \"inline-block\" }} >\r\n                                <h4>{this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}</h4>\r\n                            </span>\r\n                        </Card.Header>\r\n                    </Card>\r\n                    {TestGroupTestParameter && TestGroupTestParameter.length > 0 &&\r\n                        // <PerfectScrollbar>\r\n                        <Card>\r\n                            <TestGroupTestTab\r\n                                paneHeight = {this.state.paneHeight}\r\n                                testView={this.state.testView}\r\n                                masterData={this.props.Login.masterData}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                esignRights={this.props.Login.userRoleControlRights}\r\n                                screenName={this.props.Login.screenName}\r\n                                openChildModal={this.props.Login.openChildModal}\r\n                                operation={this.props.Login.operation}\r\n                                loadEsign={this.props.Login.loadEsign}\r\n                                testGroupInputData={this.props.Login.testGroupInputData}\r\n                                parameterData={this.props.Login.parameterData}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                screenData={this.props.Login.screenData}\r\n                                ncontrolCode={this.props.Login.ncontrolCode}\r\n                                controlMap={this.state.controlMap}\r\n                                testGroupCheckList={this.props.Login.testGroupCheckList}\r\n                                openTemplateModal={this.props.Login.openTemplateModal}\r\n                                editTestGroupTest={this.props.editTestGroupTest}\r\n                                updateStore={this.props.updateStore}\r\n                                crudMaster={this.props.crudMaster}\r\n                                getTestGroupParameter={this.props.getTestGroupParameter}\r\n                                editTestGroupParameter={this.props.editTestGroupParameter}\r\n                                filterData={this.state.filterData}\r\n                                addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                                validateEsignCredential={this.props.validateEsignCredential}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                            />\r\n                        </Card>\r\n                        // </PerfectScrollbar>\r\n                    }\r\n                </ContentPanel>\r\n            </>\r\n\r\n        const mainDesign =\r\n            <SplitterLayout\r\n                customClassName={this.state.testView ? \"detailed-inner\" : \"detailed-inner no-height \"}\r\n                vertical={this.state.testView ? false : true}\r\n                borderColor=\"#999\"\r\n                primaryIndex={1}\r\n                secondaryInitialSize={this.state.testView ? 600 : this.state.fixefScrollHeight}\r\n            >\r\n                {testDesign}{paramDesign}\r\n            </SplitterLayout >\r\n\r\n\r\n        // const testDesign = this.state.testView ?\r\n        //     <SplitterLayout\r\n        //         customClassName=\"detailed-inner\"\r\n        //         borderColor=\"#999\"\r\n        //         primaryIndex={1}>\r\n        //         {tempDesign}{paramDesign}\r\n        //     </SplitterLayout>\r\n        //     :\r\n        //     <SplitterLayout\r\n        //         customClassName=\"detailed-inner no-height\"\r\n        //         vertical\r\n        //         borderColor=\"#999\"\r\n        //         primaryIndex={1}\r\n        //         // onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n        //         secondaryInitialSize={this.state.fixefScrollHeight}\r\n        //     >\r\n        //         <ContentPanel>\r\n        //             {tempDesign}\r\n        //         </ContentPanel>\r\n\r\n        //         {paramDesign}\r\n        //     </SplitterLayout>\r\n\r\n        return (\r\n            <>\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-list-wrap\" />\r\n                {/* screen-height-window active_seperator */}\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {this.breadCrumbData && this.breadCrumbData.length > 0 &&\r\n                        <BreadcrumbComponent\r\n                            breadCrumbItem={this.breadCrumbData}\r\n                        />}\r\n                    <Row noGutters>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout\r\n                                borderColor=\"#999\"\r\n                                primaryIndex={1}\r\n                                percentage={true}\r\n                                secondaryInitialSize={30}\r\n                                customClassName={!this.state.testView ? \"fixed_list_height\" : \"\"}\r\n                            >\r\n                                <div className={`${this.state.showModalBg ? 'show_modal_bg' : ''}`}>\r\n                                    <div className=\"sticky_head\">\r\n                                        <SearchAdd className=\"border fixed_ico_list title_grp_custom\">\r\n                                            <h4>{this.props.intl.formatMessage({ id: \"IDS_PROFILETREE\" })}</h4>\r\n                                            <div className=\"icon_group_right_aligned\">\r\n                                                <AdvFilter\r\n                                                    filterComponent={[{\r\n                                                        \"IDS_SAMPLEFILTER\":\r\n                                                            <SampleFilter\r\n                                                                sampleType={this.state.sampleType}\r\n                                                                treeVersionTemplate={this.state.treeVersionTemplate}\r\n                                                                productCategory={this.state.productCategory}\r\n                                                                product={this.state.product}\r\n                                                                onFilterComboChange={this.onFilterComboChange}\r\n                                                                tempFilterData={this.state.tempFilterData}\r\n                                                            >\r\n                                                            </SampleFilter>,\r\n                                                        needActionStrip: false\r\n                                                    }]}\r\n                                                    onFilterSubmit={this.onFilterSumbit}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n                                                />\r\n\r\n                                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(addTreeId) === -1}\r\n                                                        onClick={() => this.props.createTree(this.state.filterData, this.props.Login.userInfo, selectedNode, addTreeId)}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                        data-for=\"tooltip-list-wrap\"\r\n                                                    >\r\n                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                    </Button>\r\n\r\n                                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" name=\"edittestname\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(editTreeId) === -1}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                        data-for=\"tooltip-list-wrap\"\r\n                                                        onClick={() => this.props.editTree(\"update\", selectedNode, this.props.Login.userInfo, editTreeId, this.state.filterData)}>\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                    </Nav.Link>\r\n                                                    <Nav.Link name=\"deleteLink\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(deleteTreeId) === -1}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                        data-for=\"tooltip-list-wrap\"\r\n                                                        className=\"btn btn-circle outline-grey \"\r\n                                                        onClick={() => this.ConfirmDelete({ ...deleteTree })}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        {/* <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteTreeId) === -1}\r\n                                                            handleClickDelete={() => this.deleteRecord({ ...deleteTree })}\r\n                                                        /> */}\r\n                                                    </Nav.Link>\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-1\" variant=\"link\"\r\n                                                        onClick={() => this.reloadData()} data-for=\"tooltip-list-wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                    {/* </Tooltip> */}\r\n                                                </ProductList>\r\n\r\n                                            </div>\r\n                                        </SearchAdd>\r\n                                    </div>\r\n                                    <div className=\"sticky_head_scroll_body\" style={{ \"height\": this.state.parentHeight }}>\r\n                                        <PerfectScrollbar>\r\n                                            <FormTreeMenu\r\n                                                data={AgaramTree}\r\n                                                hasSearch={false}\r\n                                                handleTreeClick={this.onTreeClick}\r\n                                                initialOpenNodes={OpenNodes}\r\n                                                focusKey={FocusKey || \"\"}\r\n                                                activeKey={ActiveKey || \"\"}\r\n                                            />\r\n                                            <TransationListMaster\r\n                                                notSearchable={true}\r\n                                                titleHead={this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                                titleClasses=\"title_grp_custom fixed_ico_list\"\r\n                                                masterList={TestGroupSpecification || []}\r\n                                                selectedMaster={[SelectedSpecification]}\r\n                                                needMultiSelect={false}\r\n                                                primaryKeyField=\"nallottedspeccode\"\r\n                                                getMasterDetail={(spec) => this.props.getComponentBySpecId({ ...getComponent, selectedRecord: spec, historyDataState: this.state.historyDataState }, this.props.Login.masterData, this.searchRef)}\r\n                                                mainField=\"sspecname\"\r\n                                                selectedListName=\"testgroupspecification\"\r\n                                                objectName=\"testgroupspecification\"\r\n                                                listName=\"IDS_SPECIFICATION\"\r\n                                                onFilterSumbit={this.onFilterSumbit}\r\n                                                subFields={this.specSubField}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        {\r\n                                                            title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                            controlname: \"faPencilAlt\",\r\n                                                            objectName: \"testgroupspecification\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(editSpecId) === -1,\r\n                                                            inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                            onClick: (props) => this.props.addSpecification(\"update\", { ...editSpecParam, ...props }, editSpecId)\r\n                                                        },\r\n                                                        {\r\n                                                            title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                            controlname: \"faTrashAlt\",\r\n                                                            objectName: \"testgroupspecification\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(deleteSpecId) === -1,\r\n                                                            inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                            onClick: (props) => confirmMessage.confirm(\r\n                                                                \"deleteMessage\",\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                                () => this.deleteSpecRecord({ props, ...specDeleteParam, selectedRecord: SelectedSpecification, ncontrolCode: deleteSpecId })\r\n                                                            )\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                                needFilter={false}\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(addSpecId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            data-for=\"tooltip-list-wrap\"\r\n                                                            onClick={() => this.props.addSpecification(\"create\", { ...addSpecParam }, addSpecId)}>\r\n                                                            <FontAwesomeIcon icon={faPlus}\r\n                                                            // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            />\r\n                                                        </Button>\r\n                                                    </>\r\n                                                }\r\n                                                hideSearch={false}\r\n                                                hidePaging={true}\r\n                                            />\r\n                                            {SelectedSpecification && SelectedSpecification.ncomponentrequired === transactionStatus.YES &&\r\n                                                <TransationListMaster\r\n                                                    notSearchable={true}\r\n                                                    titleHead={this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" })}\r\n                                                    titleClasses=\"title_grp_custom fixed_ico_list\"\r\n                                                    masterList={TestGroupSpecSampleType || []}\r\n                                                    selectedMaster={[SelectedComponent]}\r\n                                                    needMultiSelect={false}\r\n                                                    primaryKeyField=\"nspecsampletypecode\"\r\n                                                    getMasterDetail={(event) => this.componentRowClick(event)}\r\n                                                    mainField=\"scomponentname\"\r\n                                                    selectedListName=\"testgroupspecsampletype\"\r\n                                                    objectName=\"testgroupspecsampletype\"\r\n                                                    listName=\"IDS_COMPONENT\"\r\n                                                    actionIcons={\r\n                                                        [\r\n                                                            {\r\n                                                                title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                // data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                controlname: \"faTrashAlt\",\r\n                                                                objectName: \"testgroupspecsampletype\",\r\n                                                                hidden: this.state.userRoleControlRights.indexOf(deleteComponentId) === -1,\r\n                                                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                                onClick: (props) => confirmMessage.confirm(\r\n                                                                    \"deleteMessage\",\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                                    () => this.deleteMultipleRecord({ props, ncontrolCode: deleteComponentId })\r\n                                                                )\r\n                                                            }\r\n                                                        ]\r\n                                                    }\r\n                                                    commonActions={\r\n                                                        <>\r\n                                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(addComponentId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                data-for=\"tooltip-list-wrap\"\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                onClick={() => this.props.addComponent(SelectedSpecification, this.props.Login.userInfo, addComponentId)}>\r\n                                                                <FontAwesomeIcon icon={faPlus}\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \r\n                                                                />\r\n                                                            </Button>\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    hidePaging={true}\r\n                                                />}\r\n                                        </PerfectScrollbar>\r\n                                    </div>\r\n                                </div>\r\n                                <>\r\n                                    {this.state.testView ?\r\n                                        <>\r\n                                            {specDesign}\r\n                                            {this.state.showTest ?\r\n                                                <div>\r\n                                                    {mainDesign}\r\n                                                </div>\r\n                                                : \"\"}\r\n                                        </>\r\n                                        :\r\n                                        <PerfectScrollbar>\r\n                                            {specDesign}\r\n                                            {this.state.showTest ?\r\n                                                <div>\r\n                                                    {mainDesign}\r\n                                                </div>\r\n                                                : \"\"}\r\n                                        </PerfectScrollbar>\r\n                                    }\r\n\r\n\r\n                                </>\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {\r\n                    this.props.Login.openModal && this.props.Login.screenName &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        onSaveClick={this.onSaveClick}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={\r\n                            this.props.Login.screenName === \"IDS_SPECFILE\" ? this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord)\r\n                                : this.props.Login.screenName === \"IDS_SPECIFICATION\" ? specMandatoryFields\r\n                                    : this.props.Login.screenName === \"IDS_COMPONENT\" ? compMandatoryFields\r\n                                        : this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\" ? editTestMandatoryFields\r\n                                            : this.props.Login.screenName === \"IDS_TEST\" ? addTestMandatoryFields\r\n                                                : this.props.Login.screenName === \"IDS_PROFILETREE\" || this.props.Login.screenName === \"IDS_EDITTREE\"\r\n                                                    ? this.props.Login.treeMandatoryFields : []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.screenName === \"IDS_SPECIFICATION\" ?\r\n                                <AddTestGroupSpecification\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    screenName={this.props.Login.screenName}\r\n                                    operation={this.props.Login.operation}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                /> :\r\n                                this.props.Login.screenName === \"IDS_COMPONENT\" ?\r\n                                    <AddTestGroupTest\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        testGroupInputData={this.props.Login.testGroupInputData}\r\n                                        screenName={this.props.Login.screenName}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                    /> :\r\n                                    this.props.Login.screenName === \"IDS_PROFILETREE\" ?\r\n                                        <AddProfileTree\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            treetempTranstestGroup={this.props.Login.TreetempTranstestGroup}\r\n                                        /> :\r\n                                        this.props.Login.screenName === \"IDS_SPECFILE\" ?\r\n                                            <AddFile\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                actionType={this.state.actionType}\r\n                                                onDrop={this.onDropSpecFile}\r\n                                                deleteAttachment={this.deleteAttachment}\r\n                                                linkMaster={this.props.Login.linkMaster}\r\n                                                editFiles={this.props.Login.editFiles}\r\n                                                maxSize={20}\r\n                                                maxFiles={this.props.Login.operation === \"update\" ? 1 : 3}\r\n                                                multiple={this.props.Login.operation === \"update\" ? false : true}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_SPECFILE\" })}\r\n                                                hideDefaultToggle={true}\r\n                                                name=\"specfilename\"\r\n                                            /> :\r\n                                            this.props.Login.screenName === \"IDS_EDITTREE\" ?\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormInput\r\n                                                            name={\"sleveldescription\"}\r\n                                                            label={this.state.selectedRecord.slabelname}\r\n                                                            type=\"text\"\r\n                                                            onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                                            placeholder={this.state.selectedRecord.slabelname}\r\n                                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"sleveldescription\"] : \"\"}\r\n                                                            isMandatory=\"*\"\r\n                                                            required={true}\r\n                                                            maxLength={100}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row> :\r\n                                                this.props.Login.screenName === \"IDS_TEST\" ?\r\n                                                    <AddTestGroupTest\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                        testGroupInputData={this.props.Login.testGroupInputData}\r\n                                                        screenName={this.props.Login.screenName}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onFilterComboChange={this.onFilterComboChange}\r\n                                                    /> : this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\" ?\r\n                                                        <EditTestGroupTest\r\n                                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                                            testGroupInputData={this.props.Login.testGroupInputData}\r\n                                                            onComboChange={this.onComboChange}\r\n                                                            onInputOnChange={this.onInputOnChange}\r\n                                                            onNumericInputChange={this.onNumericInputChange}\r\n                                                        /> : \"\"\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    ConfirmDelete = (obj) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(obj));\r\n    }\r\n\r\n    handlePageChange = (event) => {\r\n        this.setState({\r\n            skip: event.skip,\r\n            take: event.take\r\n        });\r\n    }\r\n\r\n    findMandatoryFields(screenName, selectedRecord) {\r\n        let mandyFields = [];\r\n        if (screenName === \"IDS_SPECFILE\") {\r\n            if (selectedRecord && selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                mandyFields = [\r\n                    { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ];\r\n            } else {\r\n                //if (this.props.Login.operation === 'update') {\r\n                mandyFields = [\r\n                    { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                ];\r\n                // }\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n        let finalMandyFields = [];\r\n        mandyFields.forEach(item => item.mandatory === true && finalMandyFields.push(item));\r\n        return finalMandyFields;\r\n    }\r\n\r\n    viewTestFile = (props) => {\r\n        const viewParam = {\r\n            operation: \"view\",\r\n            methodUrl: \"TestGroupTestFile\",\r\n            classUrl: \"testgroup\",\r\n            inputData: {\r\n                ntestgroupfilecode: props.selectedTest ? props.selectedTest.ntestgroupfilecode : 0,\r\n                userinfo: this.props.Login.userInfo,\r\n                testgroupspecification: this.props.Login.masterData.SelectedSpecification\r\n            }\r\n        }\r\n        this.props.viewAttachment(viewParam)\r\n    }\r\n\r\n    fileViewIcon = (master) => {\r\n        if (master.ntestgroupfilecode > 0 && master.nlinkcode === transactionStatus.NA) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    linkViewIcon = (master) => {\r\n        if (master.ntestgroupfilecode > 0 && master.nlinkcode !== transactionStatus.NA) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    showSpecAndTestInfo() {\r\n        this.setState({ showTest: !this.state.showTest, testView: false })\r\n        this.updateSpiltterLayout()\r\n\r\n    }\r\n    showSpecAndTestInfo1() {\r\n        this.setState({ showTest: !this.state.showTest, testView: true })\r\n        //this.updateSpiltterLayout()\r\n\r\n    }\r\n\r\n    onFilterSumbit = () => {\r\n        const tempFilterData = this.state.tempFilterData;\r\n        if (tempFilterData.nsampletypecode === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\" }));\r\n        } else if (tempFilterData.nproductcatcode === \"\") {\r\n            if (tempFilterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORYNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CATEGORYNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        // else if(tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO){\r\n        else if ((tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO && tempFilterData.nproductcode === \"\") ||\r\n            (tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO && tempFilterData.nproductcode === undefined)) {\r\n            if (tempFilterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        // }\r\n        else if (tempFilterData.ntreeversiontempcode === \"\") {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: tempFilterData.nsampletypecode.value,\r\n                    nproductcatcode: tempFilterData.nproductcatcode.value,\r\n                    nproductcode: tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? -1 : tempFilterData.nproductcode ? tempFilterData.nproductcode.value : -1,\r\n                    ntreeversiontempcode: tempFilterData.ntreeversiontempcode.value,\r\n                    filterData: { ...tempFilterData },\r\n                },\r\n                historyDataState: this.state.historyDataState\r\n            }\r\n            this.props.filterTestGroup(inputParam, this.props.Login.masterData, this.searchRef);\r\n        }\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_SPECIFICATION\",\r\n            operation: \"get\",\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedRecord: event.item,\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            primaryKey: event.primaryKey,\r\n            historyDataState: this.state.historyDataState\r\n        };\r\n        this.props.getSpecification(inputParam, this.props.Login.masterData, this.searchRef);\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_FILE\",\r\n            <TestGroupSpecFile\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                deleteRecord={this.deleteRecord}\r\n                testGroupSpecFile={this.props.Login.masterData.TestGroupSpecFile || []}\r\n                selectedSpecification={this.props.Login.masterData.SelectedSpecification}\r\n                addTestFile={this.addFile}\r\n                editSpecFile={this.props.editSpecFile}\r\n                filterData={this.state.filterData}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                screenName=\"IDS_FILE\"\r\n                viewAttachment={this.props.viewAttachment}\r\n                settings={this.props.Login.settings}\r\n                masterData={this.props.Login.masterData}\r\n            />);\r\n        tabMap.set(\"IDS_SPECIFICATIONHISTORY\",\r\n            <SpecificationHistory\r\n                data={this.props.Login.masterData.TestGroupSpecificationHistory}\r\n                dataResult={process(this.props.Login.masterData.TestGroupSpecificationHistory || [], this.state.historyDataState)}\r\n                dataState={this.state.historyDataState}\r\n                dataStateChange={this.historyDataStateChange}\r\n\r\n                // testGroupSpecificationHistory={this.props.Login.masterData.TestGroupSpecificationHistory}\r\n                // dataState={this.props.Login.screenName === \"IDS_SPECIFICATIONHISTORY\" ? this.state.historyDataState : { skip: 0, take: 10 }}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_SPECIFICATIONHISTORY\"\r\n            />);\r\n        return tabMap;\r\n    }\r\n\r\n    historyDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.TestGroupSpecificationHistory || [], event.dataState),\r\n            historyDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    addFile = (userInfo, operation, ncontrolCode, screenName, modalName, nflag) => {\r\n        const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n            || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            this.props.addTestFile(userInfo, operation, ncontrolCode, screenName, modalName, nflag);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentRowClick = (event) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"SelectedComponent\"] = event.testgroupspecsampletype[0];\r\n        const inputParam = {\r\n            testgroupspecsampletype: event.testgroupspecsampletype[0],\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.getTestGroupComponentDetails(inputParam, masterData, this.searchRef);\r\n    }\r\n\r\n    deleteTest = (deleteParam) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const testgroupspecification = masterData.SelectedSpecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n            || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            const testgrouptest = deleteParam.props.testgrouptest;\r\n            const inputParam = {\r\n                inputData: {\r\n                    testgrouptest,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    testgroupspecification,\r\n                    ntreeversiontempcode: deleteParam.filterData.ntreeversiontempcode.value\r\n                },\r\n                classUrl: \"testgroup\",\r\n                operation: \"delete\",\r\n                methodUrl: \"Test\",\r\n                screenName: \"IDS_TEST\",\r\n                postParam: {\r\n                    inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                    primaryKeyValue: testgrouptest.ntestgrouptestcode,\r\n                    fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                    masterData, searchFieldList, unchangeList: [\"TestGroupSpecification\", \"SelectedSpecification\",\r\n                        \"SampleType\", \"TreeVersionTemplate\", \"ProductCategory\", \"SelectedTest\", \"Product\",\r\n                        \"AgaramTree\", \"OpenNodes\", \"selectedNode\", \"FocusKey\", \"ActiveKey\", \"SelectedComponent\", \"TestGroupSpecSampleType\"]//, isSingleSelect: true\r\n                }\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_TEST\", operation: \"delete\", selectedRecord: {}\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"Default\"\r\n                || this.props.Login.operation === 'approve' || this.props.Login.operation === 'complete') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onInputOnChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                } else if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = optional;\r\n                    // selectedRecord[\"sfilename\"] = \"\";\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n\r\n                const indexKey = Object.keys(optional)[0];\r\n                const value = Object.values(optional)[0];\r\n                const treeData = {\r\n                    ntreeversiontempcode: value.ntreeversiontempcode,\r\n                    npositioncode: value.nlevelno - 1,\r\n                    sleveldescription: event.target.value,\r\n                    ntemptranstestgroupcode: value.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: \"\",\r\n                    nnextchildcode: value.schildnode !== null ? value.schildnode : -1,\r\n                    ntemplatemanipulationcode: value.ntemplatemanipulationcode,\r\n                    isreadonly: value.ntemplatemanipulationcode > 0 ? true : false,\r\n                    slevelformat: value.slevelformat\r\n                }\r\n                let treetemplatemanipulation = selectedRecord.treetemplatemanipulation || [];\r\n                treetemplatemanipulation[indexKey] = treeData;\r\n                selectedRecord[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName, caseNo) => {\r\n        let tempFilterData = this.state.tempFilterData || {};\r\n        let inputParam = {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getProductCategory\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 2:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: tempFilterData.nsampletypecode.item,\r\n                        productcategory: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getProduct\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 3:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: tempFilterData.nsampletypecode.item,\r\n                        productcategory: tempFilterData.nproductcatcode.item,\r\n                        product: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getTreeVersionTemplate\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 4:\r\n                tempFilterData[fieldName] = comboData;\r\n                this.setState({ tempFilterData });\r\n                break;\r\n\r\n            case 5:\r\n                const selectedRecord = this.state.selectedRecord;\r\n                selectedRecord[fieldName] = comboData;\r\n                const TestGroupSpecSampleType = this.props.Login.testGroupInputData.TestGroupSpecSampleType || {};\r\n                let testGroupSpecSampleType = {};\r\n                if (this.props.Login.screenName === \"IDS_COMPONENT\") {\r\n                    testGroupSpecSampleType = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].item : TestGroupSpecSampleType[0].item;\r\n                } else {\r\n                    testGroupSpecSampleType = this.props.Login.masterData.SelectedComponent;\r\n                }\r\n                inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    testcategory: comboData.item,\r\n                    testgroupspecsampletype: testGroupSpecSampleType,\r\n                    nallottedspeccode: this.props.Login.masterData.SelectedSpecification[\"nallottedspeccode\"],\r\n                    selectedRecord\r\n                }\r\n                this.props.changeTestCategory(inputParam, this.props.Login.testGroupInputData);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        if (this.props.Login.screenName === \"IDS_PROFILETREE\"\r\n            || this.props.Login.screenName === \"IDS_EDITTREE\") {\r\n            inputParam = this.onSaveTree(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_SPECIFICATION\") {\r\n            inputParam = this.onSaveSpecification(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_COMPONENT\") {\r\n            inputParam = this.onSaveComponent(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_COPYSPECIFICATION\") {\r\n            inputParam = this.onSaveCopySpecification(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_TEST\"\r\n            || this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\") {\r\n            inputParam = this.onSaveTest(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_SPECFILE\") {\r\n            inputParam = this.onSaveSpecFile(saveType, formRef);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, openModal: true, operation: this.props.Login.operation,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n        }\r\n    }\r\n\r\n    onSaveTest = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const masterData = this.props.Login.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let inputData = {};\r\n        const userinfo = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (operation === \"create\") {\r\n            const testArray = selectedRecord.ntestcode.map(test => { return test.item });\r\n            inputData = {\r\n                testgroupspecification: masterData.SelectedSpecification,\r\n                testgroupspecsampletype: [masterData.SelectedComponent],\r\n                testgrouptest: testArray, userinfo\r\n            }\r\n        } else {\r\n            postParam = {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: masterData.SelectedTest ? masterData.SelectedTest.ntestgrouptestcode : 0,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                masterData: this.props.Login.masterData, searchFieldList, changeList: [\"TestGroupTestFormula\", \"TestGroupTestNumericParameter\",\r\n                    \"TestGroupTestPredefinedParameter\", \"TestGroupTestCharParameter\", \"TestGroupTestParameter\"], isSingleSelect: true\r\n            }\r\n            let testgrouptestfile = null;\r\n            let testGroupFile = selectedRecord.ntestfilecode;\r\n            if (testGroupFile) {\r\n                testGroupFile = testGroupFile.item;\r\n                testgrouptestfile = {\r\n                    nlinkcode: testGroupFile.nlinkcode,\r\n                    nattachmenttypecode: testGroupFile.nattachmenttypecode,\r\n                    sdescription: testGroupFile.sdescription,\r\n                    ssystemfilename: testGroupFile.ssystemfilename,\r\n                    dcreateddate: testGroupFile.dcreateddate,\r\n                    nfilesize: testGroupFile.nfilesize,\r\n                    ntestgroupfilecode: selectedRecord.ntestgroupfilecode,\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    sfilename: testGroupFile.sfilename,\r\n                    nstatus: transactionStatus.ACTIVE\r\n                };\r\n            }\r\n            inputData = {\r\n                testgroupspecification: masterData.SelectedSpecification,\r\n                testgrouptest: {\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    nsectioncode: selectedRecord.nsectioncode.value,\r\n                    nsourcecode: selectedRecord.nsourcecode.value,\r\n                    nmethodcode: selectedRecord.nmethodcode ? selectedRecord.nmethodcode.value : transactionStatus.NA,\r\n                    ninstrumentcatcode: selectedRecord.ninstrumentcatcode ? selectedRecord.ninstrumentcatcode.value : transactionStatus.NA,\r\n                    stestsynonym: selectedRecord.stestsynonym,\r\n                    ncost: selectedRecord.ncost,\r\n                    nsorter: selectedRecord.nsorter,\r\n                    nspecsampletypecode: selectedRecord.nspecsampletypecode\r\n                },\r\n                testgrouptestfile, userinfo\r\n            }\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Test\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveTree = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo\r\n        };\r\n        if (operation === \"update\") {\r\n            const selectedNode = this.props.Login.masterData.selectedNode;\r\n            inputData[\"treetemplatemanipulation\"] = {\r\n                ntemplatemanipulationcode: selectedRecord.ntemplatemanipulationcode,\r\n                sleveldescription: selectedRecord.sleveldescription,\r\n                nsampletypecode: selectedNode.nsampletypecode,\r\n                ntreeversiontempcode: selectedNode.ntreeversiontempcode,\r\n                nproductcatcode: selectedNode.nproductcatcode,\r\n                nproductcode: selectedNode.nproductcode,\r\n            }\r\n            inputData[\"selectednode\"] = this.props.Login.masterData.ActiveKey;\r\n        } else {\r\n            const TreetempTranstestGroup = this.props.Login.TreetempTranstestGroup;\r\n            const filterData = this.state.filterData;\r\n            const selectedRecord = this.state.selectedRecord;\r\n            let treetemplatemanipulation = [];\r\n            let tempArray = filterRecordBasedOnTwoArrays(TreetempTranstestGroup, selectedRecord.treetemplatemanipulation, \"ntemptranstestgroupcode\");\r\n\r\n            tempArray.map(item => {\r\n                const treeData = {\r\n                    ntreeversiontempcode: item.ntreeversiontempcode,\r\n                    npositioncode: item.nlevelno - 1,\r\n                    sleveldescription: item.sleveldescription,\r\n                    ntemptranstestgroupcode: item.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: \"\",\r\n                    nnextchildcode: item.schildnode,\r\n                    ntemplatemanipulationcode: item.ntemplatemanipulationcode,\r\n                    isreadonly: item.ntemplatemanipulationcode > 0 ? true : false,\r\n                    slevelformat: item.slevelformat\r\n                }\r\n                return treetemplatemanipulation.push(treeData);\r\n            });\r\n\r\n\r\n            selectedRecord.treetemplatemanipulation.map(item => {\r\n                const treeTemplateManip = TreetempTranstestGroup.filter(temp => temp.ntemptranstestgroupcode === item.ntemptranstestgroupcode);\r\n                if (treeTemplateManip.length > 0) {\r\n                    item[\"ntemplatemanipulationcode\"] = treeTemplateManip[\"ntemplatemanipulationcode\"];\r\n                } else {\r\n                    item[\"ntemplatemanipulationcode\"] = 0;\r\n                }\r\n                return treetemplatemanipulation.push(item);\r\n            });\r\n\r\n            inputData[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n            inputData[\"sampletype\"] = filterData.nsampletypecode.item;\r\n            inputData[\"ncategorycode\"] = filterData.nproductcatcode.value;\r\n            inputData[\"nproductcode\"] = filterData.nproductcatcode.item.ncategorybasedflow == transactionStatus.YES ? -1 :\r\n                filterData.nproductcode.value ? filterData.nproductcode.value : -1;\r\n            inputData[\"ntreeversiontempcode\"] = filterData.ntreeversiontempcode.value;\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Tree\",\r\n            saveType, formRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveSpecification = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        let testGroupSpec = {\r\n            napproveconfversioncode: -1,\r\n            sversion: '',\r\n            napprovalstatus: transactionStatus.DRAFT,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            ntransactionstatus: selectedRecord[\"ntransactionstatus\"],\r\n            ncomponentrequired: selectedRecord[\"ncomponentrequired\"],\r\n            nprojectcode: selectedRecord[\"nprojectcode\"] ? selectedRecord[\"nprojectcode\"] : -1,\r\n            sspecname: selectedRecord[\"sspecname\"],\r\n            dexpirydate: selectedRecord[\"dexpirydate\"],\r\n            nallottedspeccode: selectedRecord[\"nallottedspeccode\"] ? selectedRecord[\"nallottedspeccode\"] : 0,\r\n            ntzexpirydate: selectedRecord[\"ntzexpirydate\"].value,\r\n            stzexpirydate: selectedRecord[\"ntzexpirydate\"].label\r\n        };\r\n\r\n        const dexpirydate = testGroupSpec[\"dexpirydate\"];\r\n        //need this conversion when the datatype of the field is 'Instant'\r\n        testGroupSpec[\"dexpirydate\"] = formatInputDate(dexpirydate, false);\r\n\r\n        if (operation === \"create\") {\r\n            testGroupSpec[\"ntemplatemanipulationcode\"] = this.props.Login.masterData.selectedNode.ntemplatemanipulationcode\r\n        }\r\n        let ntreeversiontempcode = this.state.filterData.ntreeversiontempcode.value;\r\n\r\n        const inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            testgroupspecification: testGroupSpec,\r\n            treetemplatemanipulation: this.props.Login.masterData.selectedNode,\r\n            selectedspecification: this.props.Login.masterData.SelectedSpecification,\r\n            ntreeversiontempcode: ntreeversiontempcode\r\n        }\r\n\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Specification\",\r\n            saveType, formRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveComponent = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const testArray = selectedRecord.ntestcode.map(test => { return test.item });\r\n        const inputData = {\r\n            testgroupspecification: masterData.SelectedSpecification,\r\n            testgroupspecsampletype: [selectedRecord.ncomponentcode.item],\r\n            testgrouptest: testArray,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Component\",\r\n            saveType, formRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveSpecFile = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let specFileArray = [];\r\n        const selectedSpecification = this.props.Login.masterData.SelectedSpecification;\r\n        let specFile = {\r\n            nallottedspeccode: selectedSpecification.nallottedspeccode,\r\n            nspecfilecode: selectedRecord.nspecfilecode ? selectedRecord.nspecfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, specFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = file.name;\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    specFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                specFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                specFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                specFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                specFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                specFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                specFileArray.push(specFile);\r\n            }\r\n        } else {\r\n            specFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            specFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n            specFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            specFile[\"ssystemfilename\"] = \"\";\r\n            specFile[\"nfilesize\"] = 0;\r\n            specFileArray.push(specFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"testgroupspecification\", JSON.stringify(selectedSpecification));\r\n        formData.append(\"testgroupspecfile\", JSON.stringify(specFileArray));\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.props.Login.operation,\r\n            classUrl: \"testgroup\",\r\n            saveType, formRef, methodUrl: \"SpecificationFile\"\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    deleteSpecRecord = (deleteParam) => {\r\n        const selectedRecord = deleteParam.selectedRecord;\r\n        if (selectedRecord.napprovalstatus === transactionStatus.DRAFT\r\n            || selectedRecord.napprovalstatus === transactionStatus.CORRECTION) {\r\n            this.deleteRecord(deleteParam);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        if (this.props.Login.masterData.selectedNode) {\r\n            const methodUrl = deleteParam.methodUrl;\r\n            let dataState = this.state.componentDataState;\r\n            const screenName = deleteParam.screenName;\r\n            const inputParam = {\r\n                inputData: {\r\n                    [deleteParam.keyName]: deleteParam.selectedRecord,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    testgroupspecification: this.props.Login.masterData.SelectedSpecification,\r\n                    treetemplatemanipulation: this.props.Login.masterData.selectedNode,\r\n                    ntreeversiontempcode: deleteParam.filterData.ntreeversiontempcode.value\r\n                },\r\n                classUrl: \"testgroup\",\r\n                operation: deleteParam.operation,\r\n                methodUrl: methodUrl,\r\n                screenName, dataState\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            //if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: screenName, operation: deleteParam.operation, selectedRecord: {}\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROFILENODE\" }));\r\n        }\r\n    }\r\n\r\n    deleteMultipleRecord = (deleteParam) => {\r\n        const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\r\n        if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n            || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n            const inputParam = {\r\n                inputData: {\r\n                    testgroupspecsampletype: deleteParam.props.testgroupspecsampletype,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    testgroupspecification,\r\n                    treetemplatemanipulation: this.props.Login.masterData.selectedNode\r\n                },\r\n                classUrl: \"testgroup\",\r\n                operation: \"delete\",\r\n                methodUrl: \"TestGroupComponent\",\r\n                screenName: \"IDS_COMPONENT\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_COMPONENT\", operation: \"delete\", selectedRecord: {}\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        }\r\n    }\r\n\r\n    onDropSpecFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n    validateTestGroupComplete = (operation, inputValue, ncontrolCode) => {\r\n        if (inputValue.testgroupspecification) {\r\n            if (inputValue.testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || inputValue.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                return rsapi.post(\"testgroup/validateTestGroupComplete\", {\r\n                    nallottedspeccode: inputValue.testgroupspecification.nallottedspeccode,\r\n                    \"userinfo\": this.props.Login.userInfo\r\n                })\r\n                    .then(response => {\r\n                        if (response.data && response.data.length > 0) {\r\n                            const inactiveTestArray = [];\r\n                            response.data.map(item => inactiveTestArray.indexOf(item.stestname) === -1 ? inactiveTestArray.push(item.stestname) : \"\");\r\n                            const data = \" [\" + inactiveTestArray + \"] \" + this.props.intl.formatMessage({ id: \"IDS_INACTIVETESTSATCOMPLETE\" })\r\n                            this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                data,\r\n                                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                () => this.completeSpecification(operation, inputValue, ncontrolCode),\r\n                                false,\r\n                                undefined);\r\n                        }\r\n                        else {\r\n                            this.completeSpecification(operation, inputValue, ncontrolCode);\r\n                        }\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                        }\r\n                        else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: error.response }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n    }\r\n\r\n    retireSpec = (operation, selectedSpecification, approvalRoleActionDetail, retireSpecId) => {\r\n        if (selectedSpecification.testgroupspecification.napprovalstatus !== transactionStatus.RETIRED) {\r\n            if (approvalRoleActionDetail.length > 0 && approvalRoleActionDetail[0].nlevelno === transactionStatus.ACTIVE) {\r\n                if (selectedSpecification.testgroupspecification[\"napprovalstatus\"] === approvalRoleActionDetail[0].ntransactionstatus) {\r\n                    const inputParam = {\r\n                        inputData: {\r\n                            nallottedspeccode: selectedSpecification.testgroupspecification,\r\n                            treetemplatemanipulation: selectedSpecification.treetemplatemanipulation,\r\n                            approvalRoleActionDetail: approvalRoleActionDetail[0],\r\n                            userinfo: this.props.Login.userInfo,\r\n                            operation: operation\r\n                        },\r\n                        classUrl: \"testgroup\",\r\n                        operation: operation,\r\n                        methodUrl: \"Spec\",\r\n                        screenName: \"IDS_STUDYPLAN\"\r\n                    }\r\n\r\n\r\n                    let masterData = this.props.Login.masterData\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, retireSpecId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData },\r\n                                openModal: true, screenName: \"IDS_STUDYPLAN\", operation: operation, selectedRecord: {}\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        this.props.retireSpecification(inputParam.inputData, masterData);\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_RETIRECANBECONEAFTERFINAL\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALLEVELAPPROVE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYRETIRED\" }));\r\n        }\r\n\r\n    }\r\n\r\n    specificationReport = (operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedComponent && this.props.Login.masterData.SelectedTest) {\r\n            const inputParam = {\r\n                inputData: {\r\n                    sprimarykeyname: 'nallottedspeccode',\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncontrolcode: ncontrolCode,\r\n                    nregtypecode: transactionStatus.NA,\r\n                    nregsubtypecode: transactionStatus.NA,\r\n                    nreportmodulecode: transactionStatus.NA,\r\n                    nreporttypecode: REPORTTYPE.CONTROLBASED,\r\n                    nreportdecisiontypecode: transactionStatus.NA,\r\n                    certificatetypecode: transactionStatus.NA,\r\n                    nsectioncode: transactionStatus.NA,\r\n                    operation: operation,\r\n                    nallottedspeccode: this.props.Login.masterData['SelectedSpecification']['nallottedspeccode'],\r\n                    selectedComponent: this.props.Login.masterData[\"SelectedComponent\"],\r\n                    selectedTest: this.props.Login.masterData[\"SelectedTest\"],\r\n                    filterData: this.state.filterData\r\n\r\n                },\r\n            }\r\n            this.props.reportSpecification(inputParam['inputData']);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\" }));\r\n        }\r\n    }\r\n\r\n    completeSpecification = (operation, inputValue, ncontrolCode) => {\r\n        if (inputValue.testgroupspecification) {\r\n            if (inputValue.testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || inputValue.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ntreeversiontempcode: this.state.filterData.ntreeversiontempcode.value,\r\n                        testGroupTest: this.props.Login.masterData.TestGroupTest,\r\n                        ...inputValue\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: operation,\r\n                    methodUrl: \"Specification\",\r\n                    screenName: \"IDS_SPECIFICATION\"\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: \"IDS_SPECIFICATION\", operation: operation, selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n    }\r\n\r\n    approveSpecification = (status, needEsign) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const inputParam = {\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                treetemplatemanipulation: masterData.selectedNode,\r\n                ntreeversiontempcode: this.state.filterData.ntreeversiontempcode.value,\r\n                testgroupspecification: {\r\n                    ...masterData.SelectedSpecification,\r\n                    napprovalstatus: status\r\n                }\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: \"approve\",\r\n            methodUrl: \"Specification\",\r\n            screenName: \"IDS_SPECIFICATION\"\r\n        }\r\n        if (needEsign === transactionStatus.YES) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_SPECIFICATION\", operation: \"approve\", selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo, optional) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (fieldName === \"ntestcode\") {\r\n                    selectedRecord[fieldName] = comboData;\r\n                    this.setState({ selectedRecord });\r\n                } else {\r\n                    selectedRecord[fieldName] = comboData;\r\n                    this.setState({ selectedRecord });\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[\"parameterTypeCode\"] = comboData.value;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 3:\r\n                selectedRecord[\"schecklistversionname\"] = comboData.item.schecklistversionname;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    generateBreadCrumData(filterData) {\r\n        if (filterData && Object.values(filterData).length > 0 && filterData.nsampletypecode && filterData.nsampletypecode.item) {\r\n            if (filterData.nsampletypecode && filterData.nproductcatcode && filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES) {\r\n                this.breadCrumbData = [\r\n                    {\r\n                        \"label\": \"IDS_SAMPLETYPE\",\r\n                        \"value\": filterData.nsampletypecode ? filterData.nsampletypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ? \"IDS_PRODUCTCATEGORY\" :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : \"\",\r\n                        \"value\": filterData.nproductcatcode ? filterData.nproductcatcode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_TREETEMPLATEVERSION\",\r\n                        \"value\": filterData.ntreeversiontempcode ? filterData.ntreeversiontempcode.label : \"\"\r\n                    }\r\n                ]\r\n            } else {\r\n                this.breadCrumbData = [\r\n                    {\r\n                        \"label\": \"IDS_SAMPLETYPE\",\r\n                        \"value\": filterData.nsampletypecode ? filterData.nsampletypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ? \"IDS_PRODUCTCATEGORY\" :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : \"\",\r\n                        \"value\": filterData.nproductcatcode ? filterData.nproductcatcode.label : \"\"\r\n                    },\r\n\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ? \"IDS_PRODUCT\" :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENT\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIAL\" : \"\",\r\n                        \"value\": filterData.nproductcode ? filterData.nproductcode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_TREETEMPLATEVERSION\",\r\n                        \"value\": filterData.ntreeversiontempcode ? filterData.ntreeversiontempcode.label : \"\"\r\n                    }\r\n                ]\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    updateSpiltterLayout() {\r\n        if (this.myRef && this.myRef.current && this.myRef.current.clientHeight + 20 !== this.state.fixefScrollHeight) {\r\n\r\n            this.setState({\r\n                fixefScrollHeight: this.myRef.current.clientHeight + 20,\r\n                disableSplit: true\r\n            })\r\n            console.log(this.myRef.current.clientHeight)\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    disableSplit: false\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let filterData = this.state.filterData || {};\r\n        let isStateChanged = false;\r\n\r\n        this.updateSpiltterLayout()\r\n        let tempFilterData = this.state.tempFilterData || {};\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            isStateChanged = true;\r\n        }\r\n\r\n        if (this.props.Login.tempFilterData !== previousProps.Login.tempFilterData) {\r\n            tempFilterData = this.props.Login.tempFilterData || {};\r\n            isStateChanged = true;\r\n        }\r\n        let sampleType = this.state.sampleType || [];\r\n        if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\r\n            const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", \"nsampletypecode\", \"ascending\", false);\r\n            sampleType = sampleTypeMap.get(\"OptionList\");\r\n            tempFilterData[\"nsampletypecode\"] = sampleType.length ? sampleType[0] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n        let productCategory = this.state.productCategory || [];\r\n        if (this.props.Login.masterData.ProductCategory !== previousProps.Login.masterData.ProductCategory) {\r\n            const productCatMap = constructOptionList(this.props.Login.masterData.ProductCategory || [], \"nproductcatcode\", \"sproductcatname\", \"nproductcatcode\", \"ascending\", false);\r\n            productCategory = productCatMap.get(\"OptionList\");\r\n            tempFilterData[\"nproductcatcode\"] = productCategory.length > 0 ? productCategory[0] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n        let product = this.state.product || [];\r\n        if (this.props.Login.masterData.Product !== previousProps.Login.masterData.Product) {\r\n            const productMap = constructOptionList(this.props.Login.masterData.Product || [], \"nproductcode\", \"sproductname\", \"nproductcode\", \"ascending\", false);\r\n            product = productMap.get(\"OptionList\");\r\n            tempFilterData[\"nproductcode\"] = product.length > 0 ? product[0] : undefined;\r\n            isStateChanged = true;\r\n        }\r\n        let treeVersionTemplate = this.state.treeVersionTemplate || [];\r\n        if (this.props.Login.masterData.TreeVersionTemplate !== previousProps.Login.masterData.TreeVersionTemplate) {\r\n            const templateMap = constructOptionList(this.props.Login.masterData.TreeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", \"ntreeversiontempcode\", \"ascending\", false);\r\n            treeVersionTemplate = templateMap.get(\"OptionList\");\r\n            tempFilterData[\"ntreeversiontempcode\"] = treeVersionTemplate.length > 0 ? treeVersionTemplate[treeVersionTemplate.length - 1] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n\r\n        // if (this.props.Login.masterData.TestGroupTestParameter && this.props.Login.masterData.TestGroupTestParameter !== previousProps.Login.masterData.TestGroupTestParameter) {\r\n        //     sortData(this.props.Login.masterData.TestGroupTestParameter, \"ascending\", \"nsorter\");\r\n        // }\r\n\r\n        // if (this.props.Login.masterData.TestGroupTesT && this.props.Login.masterData.TestGroupTesT !== previousProps.Login.masterData.TestGroupTesT) {\r\n        //     sortData(this.props.Login.masterData.TestGroupTesTest, \"ascending\", \"nsorter\");\r\n        // }\r\n\r\n        let userRoleControlRights = this.state.userRoleControlRights || [];\r\n        let controlMap = this.state.controlMap || [];\r\n        if (this.props.Login.userInfo && this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const nformCode = this.props.Login.userInfo.nformcode;\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[nformCode] && Object.values(this.props.Login.userRoleControlRights[nformCode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode));\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, nformCode);\r\n            filterData = { ...tempFilterData };\r\n            this.generateBreadCrumData(filterData);\r\n        }\r\n\r\n        if (this.props.Login.filterData !== previousProps.Login.filterData) {\r\n            filterData = { ...this.props.Login.filterData };\r\n            this.generateBreadCrumData(filterData);\r\n            isStateChanged = true;\r\n        }\r\n        // else if (filterData !== previousState.filterData) {\r\n        //     filterData = { ...tempFilterData };\r\n        //     this.generateBreadCrumData(filterData);\r\n        // }\r\n\r\n        let historyDataState = this.state.historyDataState;\r\n        if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n            historyDataState = this.props.Login.historyDataState;\r\n            isStateChanged = true;\r\n        }\r\n\r\n        if (isStateChanged) {\r\n            this.setState({\r\n                selectedRecord, tempFilterData, filterData, userRoleControlRights, controlMap,\r\n                sampleType, productCategory, product, treeVersionTemplate, historyDataState\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, filterTestGroup, createTree, editTree, sampleTypeOnChange,\r\n    getTestGroupDetails, validateEsignCredential, updateStore, addSpecification, getSpecification, addComponent,\r\n    changeTestCategory, addTestGroupTest, editTestGroupTest, getTestGroupParameter, editTestGroupParameter,\r\n    addTestFile, editSpecFile, getSpecificationDetails, addTestGroupCodedResult, getComponentBySpecId, filterColumnData,\r\n    viewAttachment, viewTestGroupCheckList, getTestGroupComponentDetails, filterTransactionList, reportSpecification, retireSpecification\r\n})(injectIntl(TestGroup));"]},"metadata":{},"sourceType":"module"}