{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Row,Col,Form,Card,FormGroup,FormLabel}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{FormattedMessage,injectIntl}from'react-intl';import{SampleType,transactionStatus,MaterialType,formCode}from'../../components/Enumeration';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{CONTAINERTYPE}from'../../components/Enumeration';import{faClosedCaptioning}from'@fortawesome/free-solid-svg-icons';import FormTreeMenu from'../../components/form-tree-menu/form-tree-menu.component';import{useState,useEffect}from'react';import PerfectScrollbar from'react-perfect-scrollbar';import{TreeDesign}from'../registration/registration.styled';var AddTestGroupSpecification=function AddTestGroupSpecification(props){var _useState=useState(props.copyProfileName),_useState2=_slicedToArray(_useState,2),copyProfileName=_useState2[0],setCopyProfileName=_useState2[1];var _useState3=useState(props.focusKey),_useState4=_slicedToArray(_useState3,2),copyFocusKey=_useState4[0],setCopyFocusKey=_useState4[1];var _useState5=useState(props.activeKey),_useState6=_slicedToArray(_useState5,2),copyActiveKey=_useState6[0],setCopyActiveKey=_useState6[1];useEffect(function(){setCopyProfileName(props.copyProfileName);setCopyFocusKey(props.focusKey);setCopyActiveKey(props.activeKey);},[props.copyProfileName,props.focusKey,props.activeKey]);function onCopyTreeClick(event){setCopyFocusKey(event.key);setCopyActiveKey(event.key);var manipulationCode=-1;var profileName=props.intl.formatMessage({id:\"IDS_SELECTVALIDPROFILE\"});if(!event.hasNodes){manipulationCode=event.item.ntemplatemanipulationcode;profileName=event.label;}setCopyProfileName(profileName);props.onCopyTreeClick(manipulationCode,profileName,event.key,event.key);}//Display selected spec details for copy action --ALPD-4099 ,work done by Dhanushya R I\nif(props.operation==='copy')return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COPYSPECIFICATION\",message:\"Copy Specification\"})),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},props.tempFilterData.nsampletypecode&&props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO&&props.selectedRecord.ncategorybasedflow===transactionStatus.NO?/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.tempFilterData.nproductcode.label,\" \")):/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.tempFilterData.nproductcatcode.label,\" \"))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SELECTEDPROFILE\",message:\"Selected Profile\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.initialProfile))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SELECTEDSPECNAME\",message:\"Selected Spec Name\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.masterData&&props.masterData[\"SelectedSpecification\"]?props.masterData[\"SelectedSpecification\"].sspecname:\"\")))))),\" \"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.tempFilterData.nsampletypecode&&props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO&&props.selectedRecord.ncategorybasedflow===transactionStatus.NO?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:props.tempFilterData[\"nsampletypecode\"]?props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.PRODUCTCATEGORY?props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]:props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENT\":props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIAL\":props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]:props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}),name:\"nproductcode\",placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),optionId:\"nproductcode\",optionValue:\"sproductname\",options:props.product||[],showOption:true,value:props.masterData.selectedRecordCopy&&props.masterData.selectedRecordCopy.isCopy===true&&props.masterData.selectedRecordCopy[\"nproductcode\"]?props.masterData.selectedRecordCopy[\"nproductcode\"]:props.tempFilterData[\"nproductcode\"],isSearchable:true,onChange:function onChange(event){return props.changeProductOrProductCategory(event,\"nproductcode\",1,props.masterData,props.selectedRecord);}//, \"getTreeVersionTemplate\", \"product\"\n,sortOrder:\"ascending\"}):/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:props.tempFilterData[\"nsampletypecode\"]?props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.PRODUCTCATEGORY?props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]:props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":props.tempFilterData[\"nsampletypecode\"]&&props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]:props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}),name:\"nproductcatcode\",placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),optionId:\"nproductcatcode\",optionValue:\"sproductcatname\"//ALPD-4758 done by Dhanushya RI,to load sample category only for categorybasedflow yes\n,options:props.productCategory&&props.productCategory.filter(function(Data){return Data.item.ncategorybasedflow===transactionStatus.YES;})||[],showOption:true,value:props.masterData.selectedRecordCopy&&props.masterData.selectedRecordCopy.isCopy===true&&props.masterData.selectedRecordCopy&&props.masterData.selectedRecordCopy[\"nproductcatcode\"]?props.masterData.selectedRecordCopy[\"nproductcatcode\"]:props.tempFilterData[\"nproductcatcode\"],isSearchable:true,onChange:function onChange(event){return props.changeProductOrProductCategory(event,\"nproductcatcode\",2,props.masterData,props.selectedRecord);}//, \"getProduct\", \"productcategory\"\n,sortOrder:\"ascending\"}),/*#__PURE__*/React.createElement(FormInput,{name:\"sselectedprofilename\",label:props.intl.formatMessage({id:\"IDS_SELECTEDPROFILE\"}),type:\"text\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTEDPROFILE\"}),value:copyProfileName||\"\",readOnly:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"scopyspecname\",label:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),value:props.selectedRecord?props.selectedRecord[\"scopyspecname\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}),/*#__PURE__*/React.createElement(TreeDesign,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(FormTreeMenu,{data:props.Copydata===undefined?props.data:props.Copydata,hasSearch:false,handleTreeClick:function handleTreeClick(event){return onCopyTreeClick(event);},initialOpenNodes:props.initialOpenNodes,focusKey:copyFocusKey,activeKey:copyActiveKey}))))));else{return/*#__PURE__*/React.createElement(React.Fragment,null,\" \",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.tempFilterData.nsampletypecode&&props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO&&props.selectedRecord.ncategorybasedflow===transactionStatus.NO?/*#__PURE__*/React.createElement(FormInput,{name:\"sproductname\",label:props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],value:props.selectedRecord?props.selectedRecord[\"sproductname\"]:\"\",readOnly:true}):/*#__PURE__*/React.createElement(FormInput,{name:\"sproductcatname\",label:props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],value:props.selectedRecord?props.selectedRecord[\"sproductcatname\"]:\"\",readOnly:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"sspecname\",label:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sspecname\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}))),/*#__PURE__*/React.createElement(Row,null,props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzexpirydate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.timeZoneList,optionId:\"ntimezonecode\",optionValue:\"stimezoneid\",value:props.selectedRecord[\"ntzexpirydate\"],defaultValue:props.selectedRecord[\"ntzexpirydate\"],isMandatory:true,isSearchable:true,isClearable:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(value){return props.onComboChange(value,'ntzexpirydate',1);}}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",label:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.ACTIVE,transactionStatus.DEACTIVE]);},placeholder:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),defaultValue:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false})),props.filterData&&props.filterData.nproductcatcode.item.nmaterialtypecode==MaterialType.IQCSTANDARDMATERIALTYPE?\"\":/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ncomponentrequired\",label:props.genericLabel&&props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]+\" \"+props.intl.formatMessage({id:\"IDS_REQUIRED\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.YES,transactionStatus.NO]);},placeholder:props.genericLabel&&props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]+\" \"+props.intl.formatMessage({id:\"IDS_REQUIRED\"})// defaultValue={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\n//  checked={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\n,checked:props.selectedRecord?props.selectedRecord[\"ncomponentrequired\"]===transactionStatus.YES?true:false:false//disabled={ props.nsampletypecode  === SampleType.CLINICALTYPE && props.settings && parseInt(props.settings[22]) === transactionStatus.YES ? true : false }\n//    disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? true : false }\n,disabled:props.tempFilterData&&props.tempFilterData.nsampletypecode.item.ncomponentrequired===transactionStatus.YES?true:false// disabled={true}//{props.operation===\"copy\"?true:false}\n//   disabled={props.nsampletypecode === SampleType.CLINICALTYPE ? true : false}\n}))));}};export default injectIntl(AddTestGroupSpecification);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testgroup/AddTestGroupSpecification.jsx"],"names":["React","Row","Col","Form","Card","FormGroup","FormLabel","FormInput","DateTimePicker","CustomSwitch","FormattedMessage","injectIntl","SampleType","transactionStatus","MaterialType","formCode","FormSelectSearch","CONTAINERTYPE","faClosedCaptioning","FormTreeMenu","useState","useEffect","PerfectScrollbar","TreeDesign","AddTestGroupSpecification","props","copyProfileName","setCopyProfileName","focusKey","copyFocusKey","setCopyFocusKey","activeKey","copyActiveKey","setCopyActiveKey","onCopyTreeClick","event","key","manipulationCode","profileName","intl","formatMessage","id","hasNodes","item","ntemplatemanipulationcode","label","operation","tempFilterData","nsampletypecode","ncategorybasedflowrequired","NO","selectedRecord","ncategorybasedflow","genericLabel","userInfo","slanguagetypecode","nproductcode","nproductcatcode","initialProfile","masterData","sspecname","nformcode","PRODUCTCATEGORY","INSTRUMENTCATEGORY","MATERIALCATEGORY","product","selectedRecordCopy","isCopy","changeProductOrProductCategory","productCategory","filter","Data","YES","onInputOnChange","Copydata","undefined","data","initialOpenNodes","istimezoneshow","timeZoneList","value","onComboChange","ACTIVE","DEACTIVE","filterData","nmaterialtypecode","IQCSTANDARDMATERIALTYPE","ncomponentrequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Form, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { SampleType, transactionStatus, MaterialType, formCode } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { CONTAINERTYPE } from '../../components/Enumeration';\r\nimport { faClosedCaptioning } from '@fortawesome/free-solid-svg-icons';\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\nimport { useState, useEffect } from 'react';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { TreeDesign } from '../registration/registration.styled';\r\n\r\nconst AddTestGroupSpecification = props => {\r\n\r\n    const [copyProfileName, setCopyProfileName] = useState(props.copyProfileName);\r\n    const [copyFocusKey, setCopyFocusKey] = useState(props.focusKey)\r\n    const [copyActiveKey, setCopyActiveKey] = useState(props.activeKey)\r\n    useEffect(() => {\r\n        setCopyProfileName(props.copyProfileName);\r\n        setCopyFocusKey(props.focusKey);\r\n        setCopyActiveKey(props.activeKey);\r\n    }, [props.copyProfileName, props.focusKey, props.activeKey]);\r\n    function onCopyTreeClick(event) {\r\n        setCopyFocusKey(event.key);\r\n        setCopyActiveKey(event.key);\r\n        let manipulationCode = -1;\r\n        let profileName = props.intl.formatMessage({ id: \"IDS_SELECTVALIDPROFILE\" });\r\n        if (!event.hasNodes) {\r\n            manipulationCode = event.item.ntemplatemanipulationcode;\r\n            profileName = event.label;\r\n        }\r\n        setCopyProfileName(profileName);\r\n        props.onCopyTreeClick(manipulationCode, profileName, event.key, event.key);\r\n    }\r\n    //Display selected spec details for copy action --ALPD-4099 ,work done by Dhanushya R I\r\n    if (props.operation === 'copy')\r\n        return (\r\n            <>\r\n                <Row>\r\n\r\n                    <Col md={12}><FormGroup>\r\n                        <Card>\r\n                            <Card.Header><FormattedMessage id=\"IDS_COPYSPECIFICATION\" message=\"Copy Specification\" /></Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        {(props.tempFilterData.nsampletypecode && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) &&\r\n                                            (props.selectedRecord.ncategorybasedflow === transactionStatus.NO) ?\r\n                                            <FormGroup>\r\n                                                <FormLabel>{props.genericLabel && props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}</FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.tempFilterData.nproductcode.label} </span>\r\n                                            </FormGroup> :\r\n                                            <FormGroup>\r\n                                                <FormLabel>{props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}</FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.tempFilterData.nproductcatcode.label} </span>\r\n                                            </FormGroup>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_SELECTEDPROFILE\" message=\"Selected Profile\" /></FormLabel>\r\n                                            <span className=\"readonly-text font-weight-normal\"> {props.initialProfile}</span>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_SELECTEDSPECNAME\" message=\"Selected Spec Name\" /></FormLabel>\r\n                                            <span className=\"readonly-text font-weight-normal\"> {props.masterData && props.masterData[\"SelectedSpecification\"] ? props.masterData[\"SelectedSpecification\"].sspecname : \"\"}</span>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card> </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {(props.tempFilterData.nsampletypecode && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) &&\r\n                            (props.selectedRecord.ncategorybasedflow === transactionStatus.NO) ?\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({\r\n                                    id: props.tempFilterData[\"nsampletypecode\"] ? props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.PRODUCTCATEGORY ? props.genericLabel && props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] :\r\n                                        props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENT\" :\r\n                                            props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIAL\" : props.genericLabel && props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]\r\n                                })}\r\n                                name={\"nproductcode\"}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                                optionId={\"nproductcode\"}\r\n                                optionValue={\"sproductname\"}\r\n                                options={props.product || []}\r\n                                showOption={true}\r\n                                value={props.masterData.selectedRecordCopy && props.masterData.selectedRecordCopy.isCopy === true && props.masterData.selectedRecordCopy[\"nproductcode\"]\r\n                                    ? props.masterData.selectedRecordCopy[\"nproductcode\"] : props.tempFilterData[\"nproductcode\"]}\r\n                                isSearchable={true}\r\n                                onChange={(event) => props.changeProductOrProductCategory(event, \"nproductcode\", 1, props.masterData, props.selectedRecord)}//, \"getTreeVersionTemplate\", \"product\"\r\n                                sortOrder=\"ascending\"\r\n                            >\r\n                            </FormSelectSearch> :\r\n                            <FormSelectSearch\r\n                                formLabel={props.intl.formatMessage({\r\n                                    id: props.tempFilterData[\"nsampletypecode\"] ? props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.PRODUCTCATEGORY ? props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] :\r\n                                        props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" :\r\n                                            props.tempFilterData[\"nsampletypecode\"] && props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] : props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]\r\n                                })}\r\n                                name={\"nproductcatcode\"}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                                optionId={\"nproductcatcode\"}\r\n                                optionValue={\"sproductcatname\"}\r\n                                 //ALPD-4758 done by Dhanushya RI,to load sample category only for categorybasedflow yes\r\n                                 options={props.productCategory && props.productCategory.filter(Data =>\r\n                                    Data.item.ncategorybasedflow===transactionStatus.YES) || []}\r\n                                showOption={true}\r\n                                value={props.masterData.selectedRecordCopy && props.masterData.selectedRecordCopy.isCopy === true && props.masterData.selectedRecordCopy && props.masterData.selectedRecordCopy[\"nproductcatcode\"] ? props.masterData.selectedRecordCopy[\"nproductcatcode\"] : props.tempFilterData[\"nproductcatcode\"]}\r\n                                isSearchable={true}\r\n                                onChange={(event) => props.changeProductOrProductCategory(event, \"nproductcatcode\", 2, props.masterData, props.selectedRecord)}//, \"getProduct\", \"productcategory\"\r\n                                sortOrder=\"ascending\"\r\n                            >\r\n                            </FormSelectSearch>}\r\n                        <FormInput\r\n                            name={\"sselectedprofilename\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_SELECTEDPROFILE\" })}\r\n                            type=\"text\"\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTEDPROFILE\" })}\r\n                            value={copyProfileName || \"\"}\r\n                            readOnly={true}\r\n                        />\r\n                        <FormInput\r\n                            name={\"scopyspecname\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"scopyspecname\"] : \"\"}\r\n                            isMandatory=\"*\"\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n\r\n                        <TreeDesign>\r\n                            <PerfectScrollbar>\r\n\r\n                                <FormTreeMenu\r\n                                    data={props.Copydata === undefined ? props.data : props.Copydata}\r\n                                    hasSearch={false}\r\n                                    handleTreeClick={(event) => onCopyTreeClick(event)}\r\n                                    initialOpenNodes={props.initialOpenNodes}\r\n                                    focusKey={copyFocusKey}\r\n                                    activeKey={copyActiveKey}\r\n                                />\r\n\r\n                            </PerfectScrollbar>\r\n                        </TreeDesign>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </>)\r\n\r\n    else {\r\n        return (\r\n            <> <Row>\r\n                <Col md={12}>\r\n                    {(props.tempFilterData.nsampletypecode && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) &&\r\n                        (props.selectedRecord.ncategorybasedflow === transactionStatus.NO) ?\r\n                        <FormInput\r\n                            name={\"sproductname\"}\r\n                            label={props.genericLabel && props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.genericLabel && props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sproductname\"] : \"\"}\r\n                            readOnly={true}\r\n                        />\r\n\r\n                        : <FormInput\r\n                            name={\"sproductcatname\"}\r\n                            label={props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sproductcatname\"] : \"\"}\r\n                            readOnly={true}\r\n                        />\r\n                    }\r\n                    <FormInput\r\n                        name={\"sspecname\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sspecname\"] : \"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n                <Row>\r\n                    {/* <Col md={props.userInfo.istimezoneshow ? 6 : 12}> */}\r\n                    {/* <Row>\r\n                        <Col md={6}> */}\r\n\r\n\r\n                    {/* <DateTimePicker\r\n                        name={\"dexpirydate\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_EXPIRYDATEWOTIME\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selectedRecord[\"dexpirydate\"]}\r\n                        //dateFormat={\"dd/MM/yyyy\"}\r\n                        dateFormat={props.userInfo.ssitedate}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={false}\r\n                        isClearable={false}\r\n                        onChange={date => props.handleDateChange(\"dexpirydate\", date)}\r\n                        value={props.selectedRecord[\"dexpirydate\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                    />\r\n                </Col> */}\r\n                    {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                name={\"ntzexpirydate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.timeZoneList}\r\n                                optionId=\"ntimezonecode\"\r\n                                optionValue=\"stimezoneid\"\r\n                                value={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                defaultValue={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                isMandatory={true}\r\n                                isSearchable={true}\r\n                                isClearable={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(value) => props.onComboChange(value, 'ntzexpirydate', 1)}\r\n                            />\r\n                            {/* </Col>\r\n                    </Row> */}\r\n                        </Col>\r\n                    }\r\n                    {/* <Col md={6}>\r\n                    <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={true}\r\n                            options={props.projectTypeList}\r\n                            value={props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojecttypecode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                </Col>\r\n                 <Col md={6}>\r\n                        <FormSelectSearch\r\n                            name={\"nprojectcode\"}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={props.projectList}\r\n                            value={props.selectedRecord[\"nprojectcode\"]}\r\n                            defaultValue={props.selectedRecord[\"nprojectcode\"]}\r\n                            isMandatory={true}\r\n                            isSearchable={true}\r\n                            isClearable={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange={(value) => props.onComboChange(value, 'nprojectcode', 1)}\r\n                        />\r\n                        \r\n                    </Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <CustomSwitch\r\n                            name={\"ntransactionstatus\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                            type=\"switch\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.ACTIVE, transactionStatus.DEACTIVE])}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                            defaultValue={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                            checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                        >\r\n                        </CustomSwitch>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        props.filterData && props.filterData.nproductcatcode.item.nmaterialtypecode == MaterialType.IQCSTANDARDMATERIALTYPE ? \"\" :\r\n                            <Col md={4}>\r\n                                <CustomSwitch\r\n                                    name={\"ncomponentrequired\"}\r\n                                    label={props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] + \" \" + props.intl.formatMessage({ id: \"IDS_REQUIRED\" })}\r\n                                    type=\"switch\"\r\n                                    onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                                    placeholder={props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] + \" \" + props.intl.formatMessage({ id: \"IDS_REQUIRED\" })}\r\n                                    // defaultValue={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                                    //  checked={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                                    checked={props.selectedRecord ? props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false : false}\r\n                                    //disabled={ props.nsampletypecode  === SampleType.CLINICALTYPE && props.settings && parseInt(props.settings[22]) === transactionStatus.YES ? true : false }\r\n                                    //    disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? true : false }\r\n                                    disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncomponentrequired === transactionStatus.YES ? true : false}\r\n\r\n                                // disabled={true}//{props.operation===\"copy\"?true:false}\r\n                                //   disabled={props.nsampletypecode === SampleType.CLINICALTYPE ? true : false}\r\n\r\n                                >\r\n                                </CustomSwitch>\r\n                            </Col>\r\n                    }\r\n\r\n\r\n                    {/* <Col md={4} >\r\n                    <CustomSwitch\r\n                        name={\"nclinicalspec\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_CLINICALSPEC\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_CLINICALSPEC\" })}\r\n                        defaultValue={props.selectedRecord[\"nclinicalspec\"] === transactionStatus.YES ? true : false}\r\n                        checked={props.selectedRecord[\"nclinicalspec\"] === transactionStatus.YES ? true : false}\r\n                    // disabled={true}//{props.operation===\"copy\"?true:false}\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col> */}\r\n\r\n\r\n                </Row>\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default injectIntl(AddTestGroupSpecification);"]},"metadata":{},"sourceType":"module"}