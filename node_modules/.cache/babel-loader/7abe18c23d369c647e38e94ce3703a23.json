{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport rsapi from \"../rsapi\";\nimport { constructOptionList } from \"../components/CommonScript\";\nimport { initRequest } from \"./LoginAction\";\nimport axios, { Axios } from \"axios\";\nexport function getBarcodeTemplateComboService(addParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    const listURL = [];\n    listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", {\n      'userinfo': addParam.userInfo\n    });\n    listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", {\n      'userinfo': addParam.userInfo\n    });\n    listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", {\n      'userinfo': addParam.userInfo\n    });\n    listURL[3] = rsapi.post(\"barcodetemplate/getBarcodeTemplateModal\", {\n      'userinfo': addParam.userInfo\n    });\n    axios.all(listURL).then(response => {\n      const qualisMap = constructOptionList(response[3].data[\"QualisForm\"] || [], \"nformcode\", \"sformname\", undefined, undefined, true);\n      const qualisList = qualisMap.get(\"OptionList\");\n      const SqlMap = constructOptionList(response[3].data[\"SqlQuery\"] || [], \"nsqlquerycode\", \"ssqlqueryname\", undefined, undefined, true).get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          qualisList,\n          ReactInputFields: response[1].data,\n          ReactComponents: response[0].data.components,\n          staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\n          ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\n          ncontrolcode: addParam.controlId,\n          openModal: true,\n          operation: 'create',\n          reactTemplate: undefined,\n          screenName: addParam.screenName,\n          SqlQuery: SqlMap\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getEditBarcodeTemplateComboService(addParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    const listURL = [];\n    listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", {\n      'userinfo': addParam.userinfo\n    });\n    listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", {\n      'userinfo': addParam.userinfo\n    });\n    listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", {\n      'userinfo': addParam.userinfo\n    });\n    listURL[3] = rsapi.post(\"barcodetemplate/getEditBarcodeTemplateModal\", {\n      nbarcodetemplatecode: addParam.nbarcodetemplatecode,\n      'userinfo': addParam.userinfo\n    });\n    axios.all(listURL).then(response => {\n      let selectedRecord = addParam.selectedRecord;\n      const barcodeTemplate = response[3].data.SelectedBarcodeTemplate;\n      let reactTemplate = undefined;\n      selectedRecord['nformcode'] = {\n        label: barcodeTemplate.sformname,\n        value: barcodeTemplate.nformcode,\n        item: {}\n      };\n      selectedRecord['ncontrolcode'] = {\n        label: barcodeTemplate.scontrolname,\n        value: barcodeTemplate.ncontrolcode,\n        item: {\n          stableprimarykeyname: barcodeTemplate.stableprimarykeyname,\n          nquerybuildertablecode: barcodeTemplate.nquerybuildertablecode,\n          stablename: barcodeTemplate.stablename,\n          jnumericcolumns: barcodeTemplate.jnumericcolumns\n        }\n      };\n      selectedRecord['nneedconfiguration'] = barcodeTemplate.jsondata.nneedconfiguration ? 3 : 4;\n      selectedRecord['nbarcodeprint'] = barcodeTemplate.jsondata.nbarcodeprint ? 3 : 4;\n      selectedRecord['nsqlqueryneed'] = barcodeTemplate.jsondata.nsqlqueryneed ? 3 : 4;\n      selectedRecord['nfiltersqlqueryneed'] = barcodeTemplate.jsondata.nfiltersqlqueryneed ? 3 : 4;\n\n      if (barcodeTemplate.jsondata.nsqlqueryneed && barcodeTemplate.jsondata.nfiltersqlqueryneed === false) {\n        selectedRecord['nsqlquerycode'] = {\n          label: barcodeTemplate.ssqlqueryname,\n          value: barcodeTemplate.nsqlquerycode,\n          item: {}\n        };\n      } else {\n        selectedRecord['nsqlquerycode'] = undefined;\n      }\n\n      const lstFilterlevel = [];\n      let totalLevel = 0;\n\n      if (barcodeTemplate.jsondata.nneedconfiguration) {\n        reactTemplate = {\n          jsonString: JSON.stringify(barcodeTemplate.jsondata.screenfilter),\n          valuemember: barcodeTemplate.jsondata.valuemember\n        };\n        const layout = barcodeTemplate.jsondata.screenfilter;\n        layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"children\")) {\n                component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\") {\n                    totalLevel = totalLevel++;\n                    lstFilterlevel.push({\n                      slabelname: componentrow.label\n                    });\n                  }\n                });\n              } else {\n                if (component.inputtype === \"combo\") {\n                  lstFilterlevel.push({\n                    slabelname: component.label\n                  });\n                  totalLevel = totalLevel++;\n                }\n              }\n            });\n          });\n        });\n      }\n\n      const qualisMap = constructOptionList(response[3].data[\"QualisForm\"] || [], \"nformcode\", \"sformname\", undefined, undefined, true);\n      const qualisList = qualisMap.get(\"OptionList\");\n      const controlMap = constructOptionList(response[3].data[\"controlList\"] || [], \"ncontrolcode\", \"sdisplayname\", undefined, undefined, true);\n      const controlList = controlMap.get(\"OptionList\");\n      const SqlMap = constructOptionList(response[3].data[\"SqlQuery\"] || [], \"nsqlquerycode\", \"ssqlqueryname\", undefined, undefined, true).get(\"OptionList\");\n      selectedRecord['totalLevel'] = totalLevel;\n      selectedRecord['lstFilterlevel'] = lstFilterlevel;\n      selectedRecord['reactTemplate'] = reactTemplate;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          qualisList,\n          controlList,\n          ncontrolcode: addParam.controlId,\n          //   lstFilterlevel,\n          //   totalLevel,\n          //   reactTemplate: reactTemplate,\n          openModal: true,\n          ReactInputFields: response[1].data,\n          ReactComponents: response[0].data.components,\n          staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\n          ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\n          operation: 'update',\n          SqlQuery: SqlMap,\n          selectedRecord\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeTemplateControl(map, selectedRecord) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodetemplate/getBarcodeTemplateControl\", {\n      'userinfo': map.userInfo,\n      nformcode: selectedRecord.nformcode.value\n    }).then(response => {\n      //   const selectedRecord=map.selectedRecord;\n      const qualisMap = constructOptionList(response.data[\"controlList\"] || [], \"ncontrolcode\", \"sdisplayname\", undefined, undefined, true);\n      const qualisList = qualisMap.get(\"OptionList\"); //  selectedRecord['ncontrolcode']=undefined\n      //  selectedRecord['reactTemplate']=undefined\n      //  selectedRecord['lstFilterlevel']=[]\n      //  selectedRecord['totalLevel']=0\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          controlList: qualisList,\n          selectedRecord: selectedRecord // reactTemplate:undefined,\n          // lstFilterlevel:[],\n          // totalLevel:0\n\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReactQuerybuilderTableRecord(userinfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    const listURL = [];\n    listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", {\n      userinfo\n    });\n    listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", {\n      userinfo\n    });\n    listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", {\n      userinfo\n    });\n    axios.all(listURL).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openPortal: true,\n          loading: false,\n          ReactInputFields: response[1].data,\n          ReactComponents: response[0].data.components,\n          staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\n          ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\n          openModal: false,\n          design: [{\n            \"id\": \"pv1OWbsMYq\",\n            \"type\": \"row\",\n            \"children\": [{\n              \"id\": \"2zMtRhjb2t\",\n              \"type\": \"column\",\n              \"children\": []\n            }]\n          }]\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getBarcodeTemplateDetail(barcodeTemplate, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"barcodetemplate/getBarcodeTemplate\", {\n      nbarcodetemplatecode: barcodeTemplate.nbarcodetemplatecode,\n      'userinfo': userInfo\n    }).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...masterData,\n            SelectedBarcodeTemplate: response.data.SelectedBarcodeTemplate\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/BarcodeTemplateAction.js"],"names":["toast","DEFAULT_RETURN","rsapi","constructOptionList","initRequest","axios","Axios","getBarcodeTemplateComboService","addParam","dispatch","listURL","post","userInfo","all","then","response","qualisMap","data","undefined","qualisList","get","SqlMap","type","payload","loading","ReactInputFields","ReactComponents","components","staticfiltertables","ReactTables","tables","ncontrolcode","controlId","openModal","operation","reactTemplate","screenName","SqlQuery","catch","error","status","message","warn","getEditBarcodeTemplateComboService","userinfo","nbarcodetemplatecode","selectedRecord","barcodeTemplate","SelectedBarcodeTemplate","label","sformname","value","nformcode","item","scontrolname","stableprimarykeyname","nquerybuildertablecode","stablename","jnumericcolumns","jsondata","nneedconfiguration","nbarcodeprint","nsqlqueryneed","nfiltersqlqueryneed","ssqlqueryname","nsqlquerycode","lstFilterlevel","totalLevel","jsonString","JSON","stringify","screenfilter","valuemember","layout","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","slabelname","controlMap","controlList","getBarcodeTemplateControl","getReactQuerybuilderTableRecord","openPortal","design","getBarcodeTemplateDetail","masterData"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport rsapi from \"../rsapi\";\r\nimport { constructOptionList } from \"../components/CommonScript\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport axios, { Axios } from \"axios\";\r\n\r\nexport function getBarcodeTemplateComboService(addParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const listURL = [];\r\n        listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", { 'userinfo': addParam.userInfo })\r\n        listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", { 'userinfo': addParam.userInfo })\r\n        listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", { 'userinfo': addParam.userInfo })\r\n        listURL[3] = rsapi.post(\"barcodetemplate/getBarcodeTemplateModal\", { 'userinfo': addParam.userInfo })\r\n        axios.all(listURL).then(response => {\r\n            const qualisMap = constructOptionList(response[3].data[\"QualisForm\"] || [], \"nformcode\",\r\n                \"sformname\", undefined, undefined, true);\r\n            const qualisList = qualisMap.get(\"OptionList\");\r\n\r\n            const SqlMap = constructOptionList(response[3].data[\"SqlQuery\"] || [], \"nsqlquerycode\",\r\n                \"ssqlqueryname\", undefined, undefined, true).get(\"OptionList\");\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    qualisList,\r\n                    ReactInputFields: response[1].data,\r\n                    ReactComponents: response[0].data.components,\r\n                    staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\r\n                    ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\r\n                    ncontrolcode: addParam.controlId,\r\n                    openModal: true,\r\n                    operation: 'create',\r\n                    reactTemplate: undefined,\r\n                    screenName: addParam.screenName,\r\n                    SqlQuery: SqlMap\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getEditBarcodeTemplateComboService(addParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const listURL = [];\r\n        listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", { 'userinfo': addParam.userinfo })\r\n        listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", { 'userinfo': addParam.userinfo })\r\n        listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", { 'userinfo': addParam.userinfo })\r\n        listURL[3] = rsapi.post(\"barcodetemplate/getEditBarcodeTemplateModal\", {\r\n            nbarcodetemplatecode: addParam.nbarcodetemplatecode\r\n            , 'userinfo': addParam.userinfo\r\n        })\r\n        axios.all(listURL).then(response => {\r\n            let selectedRecord = addParam.selectedRecord;\r\n\r\n            const barcodeTemplate = response[3].data.SelectedBarcodeTemplate\r\n\r\n            let reactTemplate = undefined\r\n\r\n            selectedRecord['nformcode'] = { label: barcodeTemplate.sformname, value: barcodeTemplate.nformcode, item: {} }\r\n            selectedRecord['ncontrolcode'] = {\r\n                label: barcodeTemplate.scontrolname,\r\n                value: barcodeTemplate.ncontrolcode,\r\n                item: {\r\n                    stableprimarykeyname: barcodeTemplate.stableprimarykeyname,\r\n                    nquerybuildertablecode: barcodeTemplate.nquerybuildertablecode,\r\n                    stablename: barcodeTemplate.stablename,\r\n                    jnumericcolumns: barcodeTemplate.jnumericcolumns\r\n                }\r\n            }\r\n\r\n\r\n            selectedRecord['nneedconfiguration'] = barcodeTemplate.jsondata.nneedconfiguration ? 3 : 4\r\n            selectedRecord['nbarcodeprint'] = barcodeTemplate.jsondata.nbarcodeprint ? 3 : 4\r\n            selectedRecord['nsqlqueryneed'] = barcodeTemplate.jsondata.nsqlqueryneed ? 3 : 4\r\n            selectedRecord['nfiltersqlqueryneed'] = barcodeTemplate.jsondata.nfiltersqlqueryneed ? 3 : 4\r\n\r\n            if (barcodeTemplate.jsondata.nsqlqueryneed&&barcodeTemplate.jsondata.nfiltersqlqueryneed===false) {\r\n                selectedRecord['nsqlquerycode'] = { label: barcodeTemplate.ssqlqueryname, value: barcodeTemplate.nsqlquerycode, item: {} }\r\n            } else {\r\n                selectedRecord['nsqlquerycode'] = undefined\r\n            }\r\n\r\n\r\n\r\n            const lstFilterlevel = []\r\n            let totalLevel = 0;\r\n            if (barcodeTemplate.jsondata.nneedconfiguration) {\r\n                reactTemplate = {\r\n                    jsonString: JSON.stringify(barcodeTemplate.jsondata.screenfilter),\r\n                    valuemember: barcodeTemplate.jsondata.valuemember\r\n                }\r\n\r\n\r\n                const layout = barcodeTemplate.jsondata.screenfilter;\r\n                layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\") {\r\n                                        totalLevel = totalLevel++;\r\n                                        lstFilterlevel.push({ slabelname: componentrow.label })\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                if (component.inputtype === \"combo\") {\r\n                                    lstFilterlevel.push({ slabelname: component.label })\r\n                                    totalLevel = totalLevel++\r\n                                }\r\n\r\n                            }\r\n\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n\r\n            const qualisMap = constructOptionList(response[3].data[\"QualisForm\"] || [], \"nformcode\",\r\n                \"sformname\", undefined, undefined, true);\r\n            const qualisList = qualisMap.get(\"OptionList\");\r\n\r\n            const controlMap = constructOptionList(response[3].data[\"controlList\"] || [], \"ncontrolcode\",\r\n                \"sdisplayname\", undefined, undefined, true);\r\n            const controlList = controlMap.get(\"OptionList\");\r\n\r\n            const SqlMap = constructOptionList(response[3].data[\"SqlQuery\"] || [], \"nsqlquerycode\",\r\n                \"ssqlqueryname\", undefined, undefined, true).get(\"OptionList\");\r\n            selectedRecord['totalLevel'] = totalLevel\r\n            selectedRecord['lstFilterlevel'] = lstFilterlevel\r\n            selectedRecord['reactTemplate'] = reactTemplate\r\n\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    loading: false,\r\n                    qualisList,\r\n                    controlList,\r\n                    ncontrolcode: addParam.controlId,\r\n                    //   lstFilterlevel,\r\n                    //   totalLevel,\r\n                    //   reactTemplate: reactTemplate,\r\n                    openModal: true,\r\n                    ReactInputFields: response[1].data,\r\n                    ReactComponents: response[0].data.components,\r\n                    staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\r\n                    ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\r\n                    operation: 'update',\r\n                    SqlQuery: SqlMap,\r\n                    selectedRecord\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeTemplateControl(map,selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodetemplate/getBarcodeTemplateControl\", { 'userinfo': map.userInfo, nformcode: selectedRecord.nformcode.value })\r\n            .then(response => {\r\n                //   const selectedRecord=map.selectedRecord;\r\n                const qualisMap = constructOptionList(response.data[\"controlList\"] || [], \"ncontrolcode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const qualisList = qualisMap.get(\"OptionList\");\r\n                //  selectedRecord['ncontrolcode']=undefined\r\n\r\n                //  selectedRecord['reactTemplate']=undefined\r\n                //  selectedRecord['lstFilterlevel']=[]\r\n                //  selectedRecord['totalLevel']=0\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        controlList: qualisList,\r\n                        selectedRecord: selectedRecord,\r\n                        // reactTemplate:undefined,\r\n                        // lstFilterlevel:[],\r\n                        // totalLevel:0\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReactQuerybuilderTableRecord(userinfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const listURL = [];\r\n        listURL[0] = rsapi.post(\"dynamicpreregdesign/getReactComponents\", { userinfo })\r\n        listURL[1] = rsapi.post(\"dynamicpreregdesign/getReactInputFields\", { userinfo })\r\n        listURL[2] = rsapi.post(\"dynamicpreregdesign/getReactStaticFilterTables\", { userinfo })\r\n        axios.all(listURL)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openPortal: true,\r\n                        loading: false,\r\n                        ReactInputFields: response[1].data,\r\n                        ReactComponents: response[0].data.components,\r\n                        staticfiltertables: constructOptionList(response[2].data, 'nquerybuilderstaticfiltercode', 'displayname').get(\"OptionList\"),\r\n                        ReactTables: constructOptionList(response[0].data.tables, 'nquerybuildertablecode', 'sdisplayname').get(\"OptionList\"),\r\n                        openModal: false,\r\n                        design: [\r\n                            {\r\n                                \"id\": \"pv1OWbsMYq\",\r\n                                \"type\": \"row\",\r\n                                \"children\": [\r\n                                    {\r\n                                        \"id\": \"2zMtRhjb2t\",\r\n                                        \"type\": \"column\",\r\n                                        \"children\": []\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBarcodeTemplateDetail(barcodeTemplate, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"barcodetemplate/getBarcodeTemplate\", { nbarcodetemplatecode: barcodeTemplate.nbarcodetemplatecode, 'userinfo': userInfo })\r\n            .then(response => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: { ...masterData, SelectedBarcodeTemplate: response.data.SelectedBarcodeTemplate },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}