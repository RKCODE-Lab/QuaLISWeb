{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl}from'react-intl';import{intl}from'../../components/App';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{updateStore}from'../../actions';import{connect}from'react-redux';var ResultEntryCompleteForm=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryCompleteForm,_React$Component);var _super=_createSuper(ResultEntryCompleteForm);function ResultEntryCompleteForm(props){var _this;_classCallCheck(this,ResultEntryCompleteForm);_this=_super.call(this,props);_this.onComboChange=function(comboData){var selectedRecordCompleteForm=_this.state.selectedRecordCompleteForm||{};if(comboData){selectedRecordCompleteForm['nusercode']=comboData;}else{selectedRecordCompleteForm['nusercode']=[];}//Sync Child Component data with Parent Component     \n_this.props.onChildDataChange(selectedRecordCompleteForm);_this.setState({selectedRecordCompleteForm:selectedRecordCompleteForm});};_this.state={selectedRecordCompleteForm:_this.props.selectedRecordCompleteForm,Users:_this.props.Users,loading:false};return _this;}_createClass(ResultEntryCompleteForm,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{isCompleteInitialRender:false}};this.props.updateStore(updateInfo);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.selectedRecordCompleteForm!==previousProps.selectedRecordCompleteForm){this.setState({selectedRecordCompleteForm:this.props.selectedRecordCompleteForm});}if(this.props.Users!==previousProps.Users){this.setState({Users:this.props.Users});}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_USER\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"nusercode\",isDisabled:false,isMandatory:true,options:this.state.Users||[],optionId:\"nusercode\",optionValue:\"susername\",value:this.state.selectedRecordCompleteForm?this.state.selectedRecordCompleteForm.nusercode:\"\",showOption:true,required:true,onChange:function onChange(event){return _this2.onComboChange(event,'nusercode');},isMulti:false,closeMenuOnSelect:true}));}}]);return ResultEntryCompleteForm;}(React.Component);export default connect(null,{updateStore:updateStore})(injectIntl(ResultEntryCompleteForm));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryCompleteForm.jsx"],"names":["React","injectIntl","intl","FormSelectSearch","DEFAULT_RETURN","updateStore","connect","ResultEntryCompleteForm","props","onComboChange","comboData","selectedRecordCompleteForm","state","onChildDataChange","setState","Users","loading","updateInfo","typeName","data","isCompleteInitialRender","previousProps","formatMessage","id","nusercode","event","Component"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,KAA0B,YAA1B,CACA,OAASC,IAAT,KAAqB,sBAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAAQC,WAAR,KAA0B,eAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,C,GAEMC,CAAAA,uB,8IAEF,iCAAYC,KAAZ,CAAmB,yDACf,uBAAMA,KAAN,EADe,MASnBC,aATmB,CASH,SAACC,SAAD,CAAe,CAC3B,GAAIC,CAAAA,0BAA0B,CAAG,MAAKC,KAAL,CAAWD,0BAAX,EAAyC,EAA1E,CACA,GAAID,SAAJ,CAAe,CACXC,0BAA0B,CAAC,WAAD,CAA1B,CAA0CD,SAA1C,CACH,CAFD,IAEO,CACHC,0BAA0B,CAAC,WAAD,CAA1B,CAA0C,EAA1C,CACH,CACD;AACA,MAAKH,KAAL,CAAWK,iBAAX,CAA6BF,0BAA7B,EACA,MAAKG,QAAL,CAAc,CAAEH,0BAA0B,CAA1BA,0BAAF,CAAd,EACH,CAnBkB,CAEf,MAAKC,KAAL,CAAa,CACTD,0BAA0B,CAAE,MAAKH,KAAL,CAAWG,0BAD9B,CAETI,KAAK,CAAE,MAAKP,KAAL,CAAWO,KAFT,CAGTC,OAAO,CAAE,KAHA,CAAb,CAFe,aAQlB,C,wEAaD,+BAAuB,CACnB,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEd,cADK,CAEfe,IAAI,CAAE,CAAEC,uBAAuB,CAAE,KAA3B,CAFS,CAAnB,CAIA,KAAKZ,KAAL,CAAWH,WAAX,CAAuBY,UAAvB,EACH,C,kCAED,4BAAmBI,aAAnB,CAAkC,CAC9B,GAAI,KAAKb,KAAL,CAAWG,0BAAX,GAA0CU,aAAa,CAACV,0BAA5D,CAAwF,CACpF,KAAKG,QAAL,CAAc,CAAEH,0BAA0B,CAAE,KAAKH,KAAL,CAAWG,0BAAzC,CAAd,EACH,CACD,GAAI,KAAKH,KAAL,CAAWO,KAAX,GAAqBM,aAAa,CAACN,KAAvC,CAA8C,CAC1C,KAAKD,QAAL,CAAc,CAAEC,KAAK,CAAE,KAAKP,KAAL,CAAWO,KAApB,CAAd,EACH,CAEJ,C,sBAED,iBAAS,iBAEL,mBACI,qDACI,oBAAC,gBAAD,EACI,SAAS,CAAEb,IAAI,CAACoB,aAAL,CAAmB,CAAEC,EAAE,CAAE,UAAN,CAAnB,CADf,CAEI,WAAW,CAAErB,IAAI,CAACoB,aAAL,CAAmB,CAAEC,EAAE,CAAE,kBAAN,CAAnB,CAFjB,CAGI,YAAY,CAAE,KAHlB,CAII,IAAI,CAAE,WAJV,CAKI,UAAU,CAAE,KALhB,CAMI,WAAW,CAAE,IANjB,CAOI,OAAO,CAAE,KAAKX,KAAL,CAAWG,KAAX,EAAoB,EAPjC,CAQI,QAAQ,CAAC,WARb,CASI,WAAW,CAAC,WAThB,CAUI,KAAK,CAAE,KAAKH,KAAL,CAAWD,0BAAX,CAAwC,KAAKC,KAAL,CAAWD,0BAAX,CAAsCa,SAA9E,CAA0F,EAVrG,CAWI,UAAU,CAAE,IAXhB,CAYI,QAAQ,CAAE,IAZd,CAaI,QAAQ,CAAE,kBAACC,KAAD,QAAW,CAAA,MAAI,CAAChB,aAAL,CAAmBgB,KAAnB,CAA0B,WAA1B,CAAX,EAbd,CAcI,OAAO,CAAE,KAdb,CAeI,iBAAiB,CAAE,IAfvB,EADJ,CADJ,CAsBH,C,qCAjEiCzB,KAAK,CAAC0B,S,EAoE5C,cAAepB,CAAAA,OAAO,CAAC,IAAD,CAAO,CAACD,WAAW,CAAXA,WAAD,CAAP,CAAP,CAA6BJ,UAAU,CAACM,uBAAD,CAAvC,CAAf","sourcesContent":["import React from 'react';\r\nimport {injectIntl } from 'react-intl';\r\nimport { intl } from '../../components/App';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {updateStore} from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ResultEntryCompleteForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecordCompleteForm: this.props.selectedRecordCompleteForm,     \r\n            Users: this.props.Users,   \r\n            loading: false\r\n        }\r\n\r\n    }\r\n    onComboChange = (comboData) => {\r\n        let selectedRecordCompleteForm = this.state.selectedRecordCompleteForm || {};\r\n        if (comboData) {\r\n            selectedRecordCompleteForm['nusercode'] = comboData;\r\n        } else {\r\n            selectedRecordCompleteForm['nusercode'] = []\r\n        }\r\n        //Sync Child Component data with Parent Component     \r\n        this.props.onChildDataChange(selectedRecordCompleteForm);\r\n        this.setState({ selectedRecordCompleteForm });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isCompleteInitialRender: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.selectedRecordCompleteForm !== previousProps.selectedRecordCompleteForm) {\r\n            this.setState({ selectedRecordCompleteForm: this.props.selectedRecordCompleteForm });\r\n        }\r\n        if (this.props.Users !== previousProps.Users) {\r\n            this.setState({ Users: this.props.Users });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <FormSelectSearch\r\n                    formLabel={intl.formatMessage({ id: \"IDS_USER\" })}\r\n                    placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isSearchable={false}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    isMandatory={true}\r\n                    options={this.state.Users || []}\r\n                    optionId='nusercode'\r\n                    optionValue='susername'\r\n                    value={this.state.selectedRecordCompleteForm ? this.state.selectedRecordCompleteForm.nusercode : \"\"}\r\n                    showOption={true}\r\n                    required={true}\r\n                    onChange={(event) => this.onComboChange(event, 'nusercode')}\r\n                    isMulti={false}\r\n                    closeMenuOnSelect={true}\r\n                />                         \r\n                    \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default connect(null, {updateStore})(injectIntl(ResultEntryCompleteForm));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}