{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\SampleInfoGrid.jsx\";\nimport { process } from '@progress/kendo-data-query';\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\n\nclass SampleInfoGrid extends React.Component {\n  render() {\n    const detailedFieldList = this.props.detailedFieldList.map(field => {\n      return {\n        \"idsName\": field[1],\n        \"dataField\": field[2],\n        \"width\": \"100px\"\n      };\n    });\n    const extractedColumnList = this.props.extractedColumnList.map(field => {\n      return {\n        \"idsName\": field[1],\n        \"dataField\": field[2],\n        \"width\": \"200px\"\n      };\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"npreregno\",\n      data: this.props.selectedSample,\n      dataResult: process(this.props.selectedSample || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      expandField: \"expanded\",\n      detailedFieldList: detailedFieldList,\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: new Map(),\n      userRoleControlRights: {},\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isActionRequired: false,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"500px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(SampleInfoGrid);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/approval/SampleInfoGrid.jsx"],"names":["process","React","Col","Row","injectIntl","DataGrid","SampleInfoGrid","Component","render","detailedFieldList","props","map","field","extractedColumnList","selectedSample","dataState","dataStateChange","userInfo","Map","inputParam"],"mappings":";AAAA,SAASA,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,gDAArB;;AACA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA4C;AACxCC,EAAAA,MAAM,GAAE;AACJ,UAAMC,iBAAiB,GAAC,KAAKC,KAAL,CAAWD,iBAAX,CAA6BE,GAA7B,CAAiCC,KAAK,IAAE;AAC5D,aACI;AAAC,mBAAUA,KAAK,CAAC,CAAD,CAAhB;AAAoB,qBAAYA,KAAK,CAAC,CAAD,CAArC;AAAyC,iBAAQ;AAAjD,OADJ;AAGH,KAJuB,CAAxB;AAKA,UAAMC,mBAAmB,GAAC,KAAKH,KAAL,CAAWG,mBAAX,CAA+BF,GAA/B,CAAmCC,KAAK,IAAE;AAChE,aACI;AAAC,mBAAUA,KAAK,CAAC,CAAD,CAAhB;AAAoB,qBAAYA,KAAK,CAAC,CAAD,CAArC;AAAyC,iBAAQ;AAAjD,OADJ;AAGH,KAJyB,CAA1B;AAKA,wBACI,uDACA,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,eAAe,EAAE,WADrB;AAEI,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWI,cAFrB;AAGI,MAAA,UAAU,EAAEd,OAAO,CAAC,KAAKU,KAAL,CAAWI,cAAX,IAA2B,EAA5B,EAA+B,KAAKJ,KAAL,CAAWK,SAA1C,CAHvB;AAII,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,SAJ1B;AAKI,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eALhC;AAMI,MAAA,WAAW,EAAC,UANhB;AAOI,MAAA,iBAAiB,EAAEP,iBAPvB;AAQI,MAAA,mBAAmB,EAAEI,mBARzB;AASI,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWO,QATzB;AAUI,MAAA,UAAU,EAAE,IAAIC,GAAJ,EAVhB;AAWI,MAAA,qBAAqB,EAAE,EAX3B;AAYI,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWS,UAZ3B;AAaI,MAAA,QAAQ,EAAE,IAbd;AAcI,MAAA,gBAAgB,EAAE,KAdtB;AAeI,MAAA,iBAAiB,EAAE,KAfvB;AAgBI,MAAA,UAAU,EAAE,YAhBhB;AAiBI,MAAA,UAAU,EAAE,OAjBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADA,CADJ;AA2BH;;AAvCuC;;AAyC5C,eAAef,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nclass SampleInfoGrid extends React.Component{\r\n    render(){\r\n        const detailedFieldList=this.props.detailedFieldList.map(field=>{\r\n            return (\r\n                {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"100px\"}\r\n            )\r\n        })\r\n        const extractedColumnList=this.props.extractedColumnList.map(field=>{\r\n            return (\r\n                {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"200px\"}\r\n            )\r\n        })\r\n        return(\r\n            <>\r\n            <Row noGutters={\"true\"}>\r\n                <Col md={12}>\r\n                    <DataGrid\r\n                        primaryKeyField={\"npreregno\"}\r\n                        data={this.props.selectedSample}\r\n                        dataResult={process(this.props.selectedSample||[],this.props.dataState)}\r\n                        dataState={this.props.dataState}\r\n                        dataStateChange={this.props.dataStateChange}\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={detailedFieldList}\r\n                        extractedColumnList={extractedColumnList}\r\n                        userInfo={this.props.userInfo}\r\n                        controlMap={new Map()}\r\n                        userRoleControlRights={{}}\r\n                        inputParam={this.props.inputParam}\r\n                        pageable={true}\r\n                        isActionRequired={false}\r\n                        isToolBarRequired={false}\r\n                        scrollable={\"scrollable\"}\r\n                        gridHeight={\"500px\"}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(SampleInfoGrid);"]},"metadata":{},"sourceType":"module"}