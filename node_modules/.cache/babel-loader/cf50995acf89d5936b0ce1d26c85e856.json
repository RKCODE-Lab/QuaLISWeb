{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Accordion,Card,useAccordionToggle}from\"react-bootstrap\";import AccordionContext from\"react-bootstrap/AccordionContext\";import{AtAccordion}from'../custom-accordion/custom-accordion.styles';// import classNames from 'classnames';\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faChevronUp}from'@fortawesome/free-solid-svg-icons';import{faChevronDown}from'@fortawesome/free-solid-svg-icons';var CustomToggle=function CustomToggle(_ref){var children=_ref.children,eventKey=_ref.eventKey,callback=_ref.callback;var currentEventKey=React.useContext(AccordionContext);var decoratedOnClick=useAccordionToggle(eventKey,function(){return callback&&callback(eventKey);});var isCurrentEventKey=currentEventKey===eventKey;return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"// style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\n// className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\n,onClick:decoratedOnClick},children,isCurrentEventKey?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronUp}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronDown}));};var FilterAccordion=function FilterAccordion(props){return/*#__PURE__*/React.createElement(AtAccordion,null,/*#__PURE__*/React.createElement(Accordion,{defaultActiveKey:\"0\",className:props.className},/*#__PURE__*/React.createElement(Card,null,props.filterComponent.map(function(filterComponent,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(CustomToggle,{eventKey:String(index)},/*#__PURE__*/React.createElement(Card.Title,null,props.intl.formatMessage({id:Object.keys(filterComponent)[0]})))),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:String(index)},/*#__PURE__*/React.createElement(Card.Body,{className:\"filter-wrap\"},Object.values(filterComponent)[0])));}))));};export default injectIntl(FilterAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/custom-accordion/filter-accordion.component.jsx"],"names":["React","injectIntl","Accordion","Card","useAccordionToggle","AccordionContext","AtAccordion","FontAwesomeIcon","faChevronUp","faChevronDown","CustomToggle","children","eventKey","callback","currentEventKey","useContext","decoratedOnClick","isCurrentEventKey","FilterAccordion","props","className","filterComponent","map","index","String","intl","formatMessage","id","Object","keys","values"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,kBAA1B,KAAoD,iBAApD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA;AACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,KAA4B,mCAA5B,CACA,OAASC,aAAT,KAA8B,mCAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAsC,IAAnCC,CAAAA,QAAmC,MAAnCA,QAAmC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAfC,QAAe,MAAfA,QAAe,CACzD,GAAMC,CAAAA,eAAe,CAAGd,KAAK,CAACe,UAAN,CAAiBV,gBAAjB,CAAxB,CAEA,GAAMW,CAAAA,gBAAgB,CAAGZ,kBAAkB,CACzCQ,QADyC,CAEzC,iBAAMC,CAAAA,QAAQ,EAAIA,QAAQ,CAACD,QAAD,CAA1B,EAFyC,CAA3C,CAKA,GAAMK,CAAAA,iBAAiB,CAAGH,eAAe,GAAKF,QAA9C,CAEA,mBACE,2BACE,SAAS,CAAC,gCACV;AACA;AAHF,CAIE,OAAO,CAAEI,gBAJX,EAKGL,QALH,CAMGM,iBAAiB,cAAG,oBAAC,eAAD,EAAiB,IAAI,CAAET,WAAvB,EAAH,cAA4C,oBAAC,eAAD,EAAiB,IAAI,CAAEC,aAAvB,EANhE,CADF,CAUD,CApBD,CAsBA,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAEjC,mBACE,oBAAC,WAAD,mBACE,oBAAC,SAAD,EAAW,gBAAgB,CAAC,GAA5B,CAAgC,SAAS,CAAEA,KAAK,CAACC,SAAjD,eACE,oBAAC,IAAD,MACGD,KAAK,CAACE,eAAN,CAAsBC,GAAtB,CAA0B,SAACD,eAAD,CAAkBE,KAAlB,CAA4B,CACrD,mBAAQ,qDACN,oBAAC,IAAD,CAAM,MAAN,mBACE,oBAAC,YAAD,EAAc,QAAQ,CAAEC,MAAM,CAACD,KAAD,CAA9B,eACE,oBAAC,IAAD,CAAM,KAAN,MACGJ,KAAK,CAACM,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAEC,MAAM,CAACC,IAAP,CAAYR,eAAZ,EAA6B,CAA7B,CAAN,CAAzB,CADH,CADF,CADF,CADM,cAQN,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAEG,MAAM,CAACD,KAAD,CAApC,eACE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,aAArB,EACGK,MAAM,CAACE,MAAP,CAAcT,eAAd,EAA+B,CAA/B,CADH,CADF,CARM,CAAR,CAcD,CAfA,CADH,CADF,CADF,CADF,CAyBD,CA3BD,CA6BA,cAAepB,CAAAA,UAAU,CAACiB,eAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Accordion, Card, useAccordionToggle } from \"react-bootstrap\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport { AtAccordion } from '../custom-accordion/custom-accordion.styles';\r\n// import classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToggle = ({ children, eventKey, callback }) => {\r\n  const currentEventKey = React.useContext(AccordionContext);\r\n\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey)\r\n  );\r\n\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-between\"\r\n      // style={{ backgroundColor: isCurrentEventKey ? \"orange\" : \"pink\" }}\r\n      // className={classNames('myDefaultStyling', {'myCollapsedStyling': isCurrentEventKey})}\r\n      onClick={decoratedOnClick}>\r\n      {children}\r\n      {isCurrentEventKey ? <FontAwesomeIcon icon={faChevronUp} /> : <FontAwesomeIcon icon={faChevronDown} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FilterAccordion = (props) => {\r\n\r\n  return (\r\n    <AtAccordion>\r\n      <Accordion defaultActiveKey=\"0\" className={props.className}>\r\n        <Card>\r\n          {props.filterComponent.map((filterComponent, index) => {\r\n            return (<>\r\n              <Card.Header>\r\n                <CustomToggle eventKey={String(index)}>\r\n                  <Card.Title >\r\n                    {props.intl.formatMessage({ id: Object.keys(filterComponent)[0] })}\r\n                  </Card.Title>\r\n                </CustomToggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey={String(index)}>\r\n                <Card.Body className='filter-wrap'>\r\n                  {Object.values(filterComponent)[0]}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </>)\r\n          })}\r\n        </Card>\r\n\r\n      </Accordion>\r\n    </AtAccordion>\r\n  )\r\n}\r\n\r\nexport default injectIntl(FilterAccordion);"]},"metadata":{},"sourceType":"module"}