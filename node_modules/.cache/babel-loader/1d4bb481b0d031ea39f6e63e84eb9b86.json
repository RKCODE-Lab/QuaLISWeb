{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper,PrimaryHeader,HeaderName,AtTableWrap}from'../../components/client-group.styles';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{Grid,GridColumn}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import ColumnMenu from'../../components/data-grid/ColumnMenu.jsx';import FormColorPicker from'../../components/form-color-picker/form-color-picker.component';// const mapStateToProps = state => {\n//     return ({ Login: state.Login })\n// }\nvar AddSeriesColors=/*#__PURE__*/function(_React$Component){_inherits(AddSeriesColors,_React$Component);var _super=_createSuper(AddSeriesColors);function AddSeriesColors(props){var _this;_classCallCheck(this,AddSeriesColors);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.ySeries,event.data),dataState:event.data});};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:10};_this.state={addScreen:false,data:_this.props.ySeries,masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,selectedUserRole:{},columnName:'',rowIndex:0,value:'rgba(237, 126, 50, 1)'};return _this;}_createClass(AddSeriesColors,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(PrimaryHeader,{className:\"d-flex justify-content-between mb-3\"},/*#__PURE__*/React.createElement(HeaderName,{className:\"header-primary-md\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SELECTCHARTSERIESCOLOR\",defaultMessage:\"\"}))),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(Grid,Object.assign({sortable:true,resizable:true,reorderable:true,scrollable:\"none\",data:this.state.data},this.state.dataState,{onDataStateChange:this.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{field:\"label\",columnMenu:ColumnMenu,title:this.props.intl.formatMessage({id:\"IDS_COLUMNNAME\"}),width:\"175px\"}),/*#__PURE__*/React.createElement(GridColumn,{field:\"value\"// columnMenu={ColumnMenu}\n,width:\"175px\",title:this.props.intl.formatMessage({id:\"IDS_COLOR\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(FormColorPicker//id={row[\"dataItem\"][\"value\"]}\n,{name:\"Color1\",handleChange:function handleChange(e){return _this2.handleColorChange(e,row[\"dataItem\"]);},initialValue:row[\"dataItem\"].item.Color}));}})))))));}},{key:\"handleColorChange\",value:function handleColorChange(e,item){//const yField = [... this.props.ySeries];\n// const current = yField.findIndex(dataItem => dataItem === e.dataItem);\nitem.item.Color=e.hex;}// handleChange (e, Item){\n//     console.log(\"Hex : \", e.value);\n// }\n}]);return AddSeriesColors;}(React.Component);export default injectIntl(AddSeriesColors);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/dashboardtypes/AddSeriesColors.jsx"],"names":["React","ListWrapper","PrimaryHeader","HeaderName","AtTableWrap","FormattedMessage","injectIntl","Row","Col","Grid","GridColumn","process","ColumnMenu","FormColorPicker","AddSeriesColors","props","dataStateChange","event","setState","dataResult","ySeries","data","dataState","formRef","createRef","extractedColumnList","skip","take","state","addScreen","masterStatus","error","selectedRecord","selectedUserRole","columnName","rowIndex","value","intl","formatMessage","id","row","e","handleColorChange","item","Color","hex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper, PrimaryHeader, HeaderName, AtTableWrap } from '../../components/client-group.styles'\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu.jsx';\r\nimport FormColorPicker from '../../components/form-color-picker/form-color-picker.component';\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//     return ({ Login: state.Login })\r\n// }\r\nclass AddSeriesColors extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: this.props.ySeries, masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            selectedUserRole: {}, columnName: '', rowIndex: 0, value: 'rgba(237, 126, 50, 1)'\r\n        }\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.ySeries, event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                                <HeaderName className=\"header-primary-md\">\r\n\r\n                                    <FormattedMessage id={\"IDS_SELECTCHARTSERIESCOLOR\"} defaultMessage=\"\" />\r\n                                </HeaderName>\r\n                            </PrimaryHeader>\r\n\r\n                            <AtTableWrap className=\"at-list-table\">\r\n                                <Grid\r\n                                    sortable\r\n                                    resizable\r\n                                    reorderable\r\n                                    scrollable=\"none\"\r\n                                    data={this.state.data}\r\n                                    {...this.state.dataState}\r\n                                    onDataStateChange={this.dataStateChange}>\r\n\r\n                                    <GridColumn field=\"label\" columnMenu={ColumnMenu} title={this.props.intl.formatMessage({ id: \"IDS_COLUMNNAME\" })} width=\"175px\" />\r\n                                    <GridColumn\r\n                                        field={\"value\"}\r\n                                        // columnMenu={ColumnMenu}\r\n                                        width=\"175px\"\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_COLOR\" })}\r\n                                        cell={(row) => (\r\n                                            <td>\r\n                                                <FormColorPicker //id={row[\"dataItem\"][\"value\"]}\r\n                                                    name=\"Color1\"\r\n                                                    handleChange={(e) => this.handleColorChange(e, row[\"dataItem\"])}\r\n                                                    initialValue={row[\"dataItem\"].item.Color}\r\n                                                />\r\n                                            </td>)}\r\n                                    />\r\n                                </Grid>\r\n                            </AtTableWrap>\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleColorChange(e, item) {     \r\n        //const yField = [... this.props.ySeries];\r\n        // const current = yField.findIndex(dataItem => dataItem === e.dataItem);\r\n        item.item.Color = e.hex;\r\n\r\n    }\r\n    // handleChange (e, Item){\r\n    //     console.log(\"Hex : \", e.value);\r\n\r\n    // }\r\n\r\n}\r\nexport default injectIntl(AddSeriesColors);"]},"metadata":{},"sourceType":"module"}