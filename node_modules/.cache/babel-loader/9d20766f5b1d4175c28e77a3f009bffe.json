{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';var AddMaterialCategory=function AddMaterialCategory(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmaterialtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_MATERIALTYPECODE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.materialCatgeoryList||[],defaultValue:props.selectedRecord?props.selectedRecord[\"nmaterialtypecode\"]:\"\",value:props.selectedRecord?props.selectedRecord[\"nmaterialtypecode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nmaterialtypecode');}}),/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_MATERIALCATEGORY\"}),name:\"smaterialcatname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_MATERIALCATEGORY\"}),value:props.selectedRecord[\"smaterialcatname\"]?props.selectedRecord[\"smaterialcatname\"]:\"\",isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]?props.selectedRecord[\"sdescription\"]:\"\",isMandatory:false,required:false,maxLength:255}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_CATEGORYBASEDFLOW\"}),type:\"switch\",name:\"ncategorybasedflow\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CATEGORYBASEDFLOW\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ncategorybasedflow\"]===3?true:false:\"\",isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"ncategorybasedflow\"]===3?true:false:false}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_DISPLAYSTATUS\"}),type:\"switch\",name:\"ndefaultstatus\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DISPLAYSTATUS\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ndefaultstatus\"]===3?true:false:\"\",isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"ndefaultstatus\"]===3?true:false:false}),/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_NEEDSECTIOWISE\"}),type:\"switch\",name:\"needSectionwise\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_NEEDSECTIOWISE\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"needSectionwise\"]===3?true:false:\"\",isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"needSectionwise\"]===3?true:false:false})));};export default injectIntl(AddMaterialCategory);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/AddMaterialCategory.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","injectIntl","AddMaterialCategory","props","intl","formatMessage","id","materialCatgeoryList","selectedRecord","event","onComboChange","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddMaterialCategory = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nmaterialtypecode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_MATERIALTYPECODE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.materialCatgeoryList || []}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\"}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nmaterialtypecode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nmaterialtypecode')}\r\n                />\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORY\" })}\r\n                    name=\"smaterialcatname\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORY\" })}\r\n                    value={props.selectedRecord[\"smaterialcatname\"] ? props.selectedRecord[\"smaterialcatname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name=\"sdescription\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    type=\"switch\"\r\n                    name={\"ncategorybasedflow\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_DISPLAYSTATUS\" })}\r\n                    type=\"switch\"\r\n                    name={\"ndefaultstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DISPLAYSTATUS\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_NEEDSECTIOWISE\" })}\r\n                    type=\"switch\"\r\n                    name={\"needSectionwise\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NEEDSECTIOWISE\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"needSectionwise\"] === 3 ? true : false : false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddMaterialCategory);"]},"metadata":{},"sourceType":"module"}