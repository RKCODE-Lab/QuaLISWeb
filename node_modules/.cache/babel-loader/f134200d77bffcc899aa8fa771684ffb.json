{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { getFieldConfig, getFuncConfig } from \"../utils/configUtils\";\nimport { filterValueSourcesForField } from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\"; // helpers\n\nvar isObject = function isObject(v) {\n  return _typeof(v) == \"object\" && v !== null && !Array.isArray(v);\n};\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\n\nexport var completeValue = function completeValue(value, valueSrc, config) {\n  if (valueSrc == \"func\") return completeFuncValue(value, config);else return value;\n};\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\n\nexport var completeFuncValue = function completeFuncValue(value, config) {\n  var _checkFuncValue = function _checkFuncValue(value) {\n    if (!value) return undefined;\n    var funcKey = value.get(\"func\");\n    var funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig) return undefined;\n    var complValue = value;\n    var tmpHasOptional = false;\n\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          isOptional = argConfig.isOptional,\n          defaultValue = argConfig.defaultValue;\n      var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      var args = complValue.get(\"args\");\n      var argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      var argVal = args ? args.get(argKey) : undefined;\n      var argValue = argVal ? argVal.get(\"value\") : undefined;\n      var argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n\n      if (argValue !== undefined) {\n        var completeArgValue = completeValue(argValue, argValueSrc, config);\n\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n\nvar getUsedFieldsInFuncValue = function getUsedFieldsInFuncValue(value, config) {\n  var usedFields = [];\n  var badFields = [];\n\n  var _traverse = function _traverse(value) {\n    var args = value && value.get(\"args\");\n    if (!args) return;\n\n    var _iterator = _createForOfIteratorHelper(args.values()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var arg = _step.value;\n\n        if (arg.get(\"valueSrc\") == \"field\") {\n          var rightField = arg.get(\"value\");\n\n          if (rightField) {\n            var rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n            if (config && !rightFieldDefinition) badFields.push(rightField);else usedFields.push(rightField);\n          }\n        } else if (arg.get(\"valueSrc\") == \"func\") {\n          _traverse(arg.get(\"value\"));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\n\n\nexport var setFunc = function setFunc(value, funcKey, config) {\n  var fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map()); // defaults\n\n  var funcConfig = funcKey && getFuncConfig(config, funcKey);\n\n  if (funcConfig) {\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n          defaultValue = argConfig.defaultValue;\n      var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      var firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      var defaultValueSrc = defaultValue ? isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\" : undefined;\n      var argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nvar getDefaultArgValue = function getDefaultArgValue(_ref) {\n  var value = _ref.defaultValue;\n\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\n\n\nexport var setArgValue = function setArgValue(value, argKey, argVal, argConfig, config) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal); // set default arg value sorce\n\n    var valueSources = argConfig.valueSources;\n    var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    var argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n\n  return value;\n};\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\n\nexport var setArgValueSrc = function setArgValueSrc(value, argKey, argValSrc, _argConfig, _config) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({\n      valueSrc: argValSrc\n    }));\n  }\n\n  return value;\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@react-awesome-query-builder/core/esm/utils/funcUtils.js"],"names":["_typeof","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","getFieldConfig","getFuncConfig","filterValueSourcesForField","Immutable","isObject","v","completeValue","valueSrc","config","completeFuncValue","_checkFuncValue","undefined","funcKey","get","funcConfig","complValue","tmpHasOptional","argKey","args","argConfig","valueSources","isOptional","defaultValue","filteredValueSources","argDefaultValueSrc","argVal","argValue","argValueSrc","completeArgValue","setIn","getDefaultArgValue","getUsedFieldsInFuncValue","usedFields","badFields","_traverse","_iterator","values","_step","arg","rightField","rightFieldDefinition","push","setFunc","fieldSeparator","settings","Map","join","set","firstValueSrc","defaultValueSrc","func","_ref","isMap","fromJS","k","Iterable","isIndexed","toList","toOrderedMap","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config"],"mappings":"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","sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { getFieldConfig, getFuncConfig } from \"../utils/configUtils\";\nimport { filterValueSourcesForField } from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nvar isObject = function isObject(v) {\n  return _typeof(v) == \"object\" && v !== null && !Array.isArray(v);\n};\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport var completeValue = function completeValue(value, valueSrc, config) {\n  if (valueSrc == \"func\") return completeFuncValue(value, config);else return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport var completeFuncValue = function completeFuncValue(value, config) {\n  var _checkFuncValue = function _checkFuncValue(value) {\n    if (!value) return undefined;\n    var funcKey = value.get(\"func\");\n    var funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig) return undefined;\n    var complValue = value;\n    var tmpHasOptional = false;\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n        isOptional = argConfig.isOptional,\n        defaultValue = argConfig.defaultValue;\n      var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      var args = complValue.get(\"args\");\n      var argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      var argVal = args ? args.get(argKey) : undefined;\n      var argValue = argVal ? argVal.get(\"value\") : undefined;\n      var argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        var completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n  return _checkFuncValue(value);\n};\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nvar getUsedFieldsInFuncValue = function getUsedFieldsInFuncValue(value, config) {\n  var usedFields = [];\n  var badFields = [];\n  var _traverse = function _traverse(value) {\n    var args = value && value.get(\"args\");\n    if (!args) return;\n    var _iterator = _createForOfIteratorHelper(args.values()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var arg = _step.value;\n        if (arg.get(\"valueSrc\") == \"field\") {\n          var rightField = arg.get(\"value\");\n          if (rightField) {\n            var rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n            if (config && !rightFieldDefinition) badFields.push(rightField);else usedFields.push(rightField);\n          }\n        } else if (arg.get(\"valueSrc\") == \"func\") {\n          _traverse(arg.get(\"value\"));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  _traverse(value);\n  return [usedFields, badFields];\n};\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport var setFunc = function setFunc(value, funcKey, config) {\n  var fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  var funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (var argKey in funcConfig.args) {\n      var argConfig = funcConfig.args[argKey];\n      var valueSources = argConfig.valueSources,\n        defaultValue = argConfig.defaultValue;\n      var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      var firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      var defaultValueSrc = defaultValue ? isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\" : undefined;\n      var argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n  return value;\n};\nvar getDefaultArgValue = function getDefaultArgValue(_ref) {\n  var value = _ref.defaultValue;\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport var setArgValue = function setArgValue(value, argKey, argVal, argConfig, config) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    var valueSources = argConfig.valueSources;\n    var filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    var argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport var setArgValueSrc = function setArgValueSrc(value, argKey, argValSrc, _argConfig, _config) {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({\n      valueSrc: argValSrc\n    }));\n  }\n  return value;\n};"]},"metadata":{},"sourceType":"module"}