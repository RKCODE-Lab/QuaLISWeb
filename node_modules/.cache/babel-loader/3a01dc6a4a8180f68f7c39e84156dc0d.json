{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{connect}from'react-redux';import rsapi from'../../rsapi';import{callService,crudMaster,getTestMaster,addTest,updateStore,getTestDetails,formulaChangeFunction,filterColumnData,addParameter,validateEsignCredential,addCodedResult,addParameterSpecification,getAvailableData,addFormula,changeTestCategoryFilter,addTestFile,viewAttachment,getActiveTestContainerTypeById}from'../../actions';import TestView from'./TestView';import{injectIntl}from'react-intl';import{toast}from'react-toastify';import AddParameter from'./AddParameter';import AddTest from'../../pages/testmanagement/AddTest';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{getControlMap,showEsign,constructOptionList}from'../../components/CommonScript';import TestCategoryFilter from'./TestCategoryFilter';import ListMaster from'../../components/list-master/list-master.component';import{faTrashAlt,faPencilAlt,faCopy,faCheck}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport{parameterType,transactionStatus}from'../../components/Enumeration';import'react-perfect-scrollbar/dist/css/styles.css';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{Affix}from'rsuite';import ReactTooltip from'react-tooltip';var TestMaster=/*#__PURE__*/function(_Component){_inherits(TestMaster,_Component);var _super=_createSuper(TestMaster);function TestMaster(props){var _this;_classCallCheck(this,TestMaster);_this=_super.call(this,props);_this.handlePageChange=function(event){_this.setState({skip:event.skip,take:event.take});};_this.ConfirmDelete=function(item,operation,ncontrolCode,methodUrl,modalName){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteAction(item,operation,ncontrolCode,methodUrl,modalName);});};_this.onComboChange=function(comboData,fieldName,caseNo){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(fieldName===\"sparametername\"){selectedRecord[fieldName]=comboData;selectedRecord[\"sparametersynonym\"]=comboData?comboData.value:\"\";}else{selectedRecord[fieldName]=comboData;}_this.setState({selectedRecord:selectedRecord});break;case 2:var item=comboData['item'];var needUnit=true;var needRoundingDigit=true;var needCodedResult=true;var needActualResult=true;var npredefinedcode=transactionStatus.NO;var parameterData=_this.props.Login.parameterData;if(item[\"nunitrequired\"]===transactionStatus.YES){needUnit=false;selectedRecord[\"nunitcode\"]=_this.props.Login.parameterData.defaultUnit;}else{selectedRecord[\"nunitcode\"]=\"\";}if(item[\"nroundingrequired\"]===transactionStatus.YES){needRoundingDigit=false;}else{selectedRecord[\"nroundingdigit\"]=\"\";}if(item[\"npredefinedrequired\"]===transactionStatus.YES){needCodedResult=false;npredefinedcode=item[\"npredefinedrequired\"];}else{selectedRecord[\"spredefinedname\"]=\"\";}if(item[\"ngraderequired\"]===transactionStatus.YES){needActualResult=false;selectedRecord[\"ngradecode\"]=_this.props.Login.parameterData.defaultGrade;}else{selectedRecord[\"ngradecode\"]=\"\";}selectedRecord[fieldName]=comboData;var parameterInfo={typeName:DEFAULT_RETURN,data:{parameterData:_objectSpread(_objectSpread({},parameterData),{},{needUnit:needUnit,needRoundingDigit:needRoundingDigit,needCodedResult:needCodedResult,needActualResult:needActualResult,npredefinedcode:npredefinedcode}),selectedRecord:selectedRecord}};_this.props.updateStore(parameterInfo);break;case 3:var nfilterTestCategory=_this.state.nfilterTestCategory||{};nfilterTestCategory=comboData;_this.searchRef.current.value=\"\";_this.setState({nfilterTestCategory:nfilterTestCategory});break;default:break;}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){if(_this.state.nfilterTestCategory.value){var inputParam={inputData:{ntestcategorycode:_this.state.nfilterTestCategory.value,userinfo:_this.props.Login.userInfo,nfilterTestCategory:_this.state.nfilterTestCategory},classUrl:\"testmaster\",methodUrl:\"TestMasterByCategory\"};_this.props.changeTestCategoryFilter(inputParam,_this.props.Login.masterData.filterTestCategory);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[event.target.name]=selectedRecord[\"stestsynonym\"]=selectedRecord[\"sparametersynonym\"]=event.target.value;selectedRecord[\"sparametername\"]={label:event.target.value,value:event.target.value};_this.setState({selectedRecord:selectedRecord});break;case 3:selectedRecord[event.target.name]=selectedRecord[\"sparametersynonym\"]=event.target.value;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.onNumericInputChange=function(value,name){console.log(\"value:\",value,name);var selectedRecord=_this.state.selectedRecord||{};if(name===\"nroundingdigits\"){if(/^-?\\d*?$/.test(value.target.value)||value.target.value===\"\"){console.log(\"val:\",value.target.value);selectedRecord[name]=value.target.value;}}else{selectedRecord[name]=value;}_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord[\"agree\"]=transactionStatus.NO;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.closeFormulaModal=function(){_this.setState({addformula:false});};_this.deleteAction=function(item,operation,ncontrolCode,methodUrl,modalName){var _inputData;var selected=item[\"dataItem\"]?item[\"dataItem\"]:item;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selected),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),classUrl:\"testmaster\",operation:operation,methodUrl:methodUrl,screenName:\"IDS_TEST\",postParam:{inputListName:\"TestMaster\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestcode\",primaryKeyValue:selected.ntestcode,fetchUrl:\"testmaster/getTestById\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData}};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var _data;var updateInfo={typeName:DEFAULT_RETURN,data:(_data={loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData}},_defineProperty(_data,modalName,true),_defineProperty(_data,\"screenName\",\"IDS_TEST\"),_defineProperty(_data,\"operation\",operation),_data)};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,modalName,{});}};_this.validateTestExistenceInTestGroup=function(){var operation=_this.props.Login.operation;if(operation===\"update\"){return rsapi.post(\"testmaster/validateTestExistenceInTestGroup\",{ntestcode:_this.props.Login.masterData.SelectedTest[\"ntestcode\"],\"userinfo\":_this.props.Login.userInfo}).then(function(response){if(response.data===true){_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_TESTEXISTSINTESTGROUP\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.onSaveTest(null,null);},false,undefined);}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response}));}});}};_this.onSaveTest=function(){var operation=_this.props.Login.operation;var selectedRecord=_this.state.selectedRecord;if(operation===\"update\"){if(selectedRecord[\"ntransactionstatus\"]===transactionStatus.DEACTIVE){return rsapi.post(\"testmaster/validateTestExistenceInTestGroup\",{ntestcode:_this.props.Login.masterData.SelectedTest[\"ntestcode\"],\"userinfo\":_this.props.Login.userInfo}).then(function(response){if(response.data===true){_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_TESTEXISTSINTESTGROUP\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.onSaveValidatedTest(null,null);},false,undefined);}else{_this.onSaveValidatedTest(null,null);}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response}));}});}else{_this.onSaveValidatedTest(null,null);}}else{_this.onSaveValidatedTest(null,null);}};_this.onSaveValidatedTest=function(saveType,formRef){var operation=_this.props.Login.operation;var inputData={};var customobject=null;var userInfo=_this.props.Login.userInfo;var selectedRecord=_this.state.selectedRecord;var testColumns=[{\"testmaster\":[{\"ntestcode\":\"int\"},{\"ntestcategorycode\":\"input\"},{\"nchecklistversioncode\":\"input\"},{\"naccredited\":\"int\"},{\"ntransactionstatus\":\"int\"},{\"stestname\":\"string\"},{\"stestsynonym\":\"string\"},{\"sdescription\":\"string\"},{\"ncost\":\"float\"}]}];if(operation===\"create\"){testColumns.push({\"testparameter\":[{\"ntestcode\":\"int\"},{\"nparametertypecode\":\"input\"},{\"nunitcode\":\"input\"},{\"sparametername\":\"input\"},{\"sparametersynonym\":\"string\"},{\"nroundingdigits\":\"int\"},{\"objPredefinedParameter\":\"customobject\"}]});inputData={\"testmaster\":{},\"testparameter\":{nisadhocparameter:transactionStatus.NO,nisvisible:transactionStatus.YES,nstatus:transactionStatus.ACTIVE},\"testsection\":{},\"testmethod\":{},\"testinstrumentcategory\":{}};if(_this.props.Login.parameterData.npredefinedcode===transactionStatus.YES){customobject={};customobject[\"spredefinedname\"]=selectedRecord[\"spredefinedname\"].trim();customobject[\"nstatus\"]=transactionStatus.ACTIVE;customobject[\"ndefaultstatus\"]=transactionStatus.YES;customobject[\"ngradecode\"]=selectedRecord[\"ngradecode\"]?selectedRecord[\"ngradecode\"].value?selectedRecord[\"ngradecode\"].value:-1:-1;}}else{inputData={\"testmaster\":{}};}inputData[\"userinfo\"]=userInfo;inputData[\"testmaster\"][\"nstatus\"]=transactionStatus.ACTIVE;inputData[\"testmaster\"][\"nsitecode\"]=userInfo.nmastersitecode;testColumns.forEach(function(items){var mapkey=Object.keys(items)[0];var columns=Object.values(items)[0];columns.map(function(item){var key=Object.keys(item)[0];var value=Object.values(item)[0];if(value===\"input\"){return inputData[mapkey][key]=selectedRecord[key]?selectedRecord[key].value?selectedRecord[key].value:-1:-1;}else if(value===\"int\"){return inputData[mapkey][key]=selectedRecord[key]?selectedRecord[key]:0;}else if(value===\"string\"){return inputData[mapkey][key]=selectedRecord[key]?selectedRecord[key].trim():\"\";}else if(value===\"float\"){return inputData[mapkey][key]=selectedRecord[key]?selectedRecord[key]:0;}else if(value===\"customobject\"){return inputData[mapkey][key]=customobject;}else{return null;}});});var postParam=undefined;if(operation===\"create\"){if(selectedRecord[\"nsectioncode\"]){inputData[\"testsection\"][\"nsectioncode\"]=selectedRecord[\"nsectioncode\"].value;inputData[\"testsection\"][\"ndefaultstatus\"]=transactionStatus.YES;inputData[\"testsection\"][\"nstatus\"]=transactionStatus.ACTIVE;}if(selectedRecord[\"nmethodcode\"]){inputData[\"testmethod\"][\"nmethodcode\"]=selectedRecord[\"nmethodcode\"].value;inputData[\"testmethod\"][\"ndefaultstatus\"]=transactionStatus.YES;inputData[\"testmethod\"][\"nstatus\"]=transactionStatus.ACTIVE;}if(selectedRecord[\"ninstrumentcatcode\"]){inputData[\"testinstrumentcategory\"][\"ninstrumentcatcode\"]=selectedRecord[\"ninstrumentcatcode\"].value;inputData[\"testinstrumentcategory\"][\"ndefaultstatus\"]=transactionStatus.YES;inputData[\"testinstrumentcategory\"][\"nstatus\"]=transactionStatus.ACTIVE;}}else if(operation===\"copy\"){inputData[\"testmaster\"][\"ntestcode\"]=_this.props.Login.masterData.SelectedTest[\"ntestcode\"];}else if(operation===\"update\"){postParam={inputListName:\"TestMaster\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestcode\"};}_this.setState({nfilterTestCategory:{\"label\":selectedRecord.ntestcategorycode.label,\"value\":selectedRecord.ntestcategorycode.value}});if(operation!==\"update\"){var updateInfo={typeName:DEFAULT_RETURN,data:{defaultkeyname:\"parametereventkey\"}};_this.props.updateStore(updateInfo);}//  let valid = true;\n// if (operation === \"update\" && (validateTest === undefined || validateTest === true)){       \n// if (valid){\nvar inputParam={inputData:_objectSpread(_objectSpread({},inputData),{},{validatetest:false}),classUrl:\"testmaster\",operation:operation,methodUrl:\"TestMaster\",saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,formRef:formRef}};_this.props.updateStore(_updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}// }\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){// this.searchRef.current.value = \"\";\n// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"testmaster\",\n//     methodUrl: \"TestMaster\",\n//     userInfo: this.props.Login.userInfo,\n//     displayName: \"IDS_TESTMASTER\"\n// };\n// this.props.callService(inputParam);\n_this.searchRef.current.value=\"\";if(_this.state.nfilterTestCategory.value){var inputParam={inputData:{ntestcategorycode:_this.state.nfilterTestCategory.value,userinfo:_this.props.Login.userInfo,nfilterTestCategory:_this.state.nfilterTestCategory},classUrl:\"testmaster\",methodUrl:\"TestMasterByCategory\"};_this.props.changeTestCategoryFilter(inputParam,_this.props.Login.masterData.filterTestCategory);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}};_this.state={selectedRecord:{},error:\"\",userRoleControlRights:[],controlMap:new Map(),skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25};_this.searchRef=React.createRef();_this.searchFieldList=[\"stestname\",\"stestsynonym\",\"sdescription\",\"saccredited\",\"stestcategoryname\",\"ncost\",\"stransactionstatus\"];return _this;}_createClass(TestMaster,[{key:\"render\",value:function render(){var _this2=this;this.confirmMessage=new ConfirmMessage();var _this$props$Login$mas=this.props.Login.masterData,_TestMaster=_this$props$Login$mas.TestMaster,SelectedTest=_this$props$Login$mas.SelectedTest,searchedData=_this$props$Login$mas.searchedData;var _this$props$Login=this.props.Login,masterData=_this$props$Login.masterData,userInfo=_this$props$Login.userInfo,testData=_this$props$Login.testData,parameterData=_this$props$Login.parameterData,otherTestData=_this$props$Login.otherTestData,linkMaster=_this$props$Login.linkMaster,editFiles=_this$props$Login.editFiles;var addId=this.state.controlMap.has(\"AddTest\")&&this.state.controlMap.get(\"AddTest\").ncontrolcode;var editId=this.state.controlMap.has(\"EditTest\")&&this.state.controlMap.get(\"EditTest\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteTest\")&&this.state.controlMap.get(\"DeleteTest\").ncontrolcode;var copyId=this.state.controlMap.has(\"CopyTest\")&&this.state.controlMap.get(\"CopyTest\").ncontrolcode;var filterParam={inputListName:\"TestMaster\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestcode\",fetchUrl:\"testmaster/getTestById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};if(this.props.Login.openModal){this.mandatoryFields=this.findMandatoryFields(this.props.Login.screenName,this.state.selectedRecord,this.props.Login.operation);}var breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(ListMaster,{masterData:masterData,screenName:this.props.intl.formatMessage({id:\"IDS_TEST\"}),masterList:searchedData||_TestMaster,getMasterDetail:function getMasterDetail(test){return _this2.props.getTestMaster(test,userInfo,masterData);},selectedMaster:SelectedTest,primaryKeyField:\"ntestcode\",mainField:\"stestname\",firstField:\"stestcategoryname\",secondField:\"stransactionstatus\",openModal:function openModal(){return _this2.props.addTest(\"create\",SelectedTest,userInfo,addId,_this2.state.nfilterTestCategory);},filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,needAccordianFilter:false//skip={this.state.skip}\n//take={this.state.take}\n//handlePageChange={this.handlePageChange}\n,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showFilterIcon:true,showFilter:this.props.Login.showFilter,filterComponent:[{\"IDS_TESTFILTER\":/*#__PURE__*/React.createElement(TestCategoryFilter,{filterTestCategory:this.state.filterTestCategory||[],nfilterTestCategory:this.state.nfilterTestCategory||{},onComboChange:this.onComboChange})}]})),/*#__PURE__*/React.createElement(Col,{md:8},_TestMaster&&_TestMaster.length>0&&SelectedTest&&Object.values(SelectedTest).length>0?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},SelectedTest.stestname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(SelectedTest.ntransactionstatus===1?\"outline-success\":\"outline-secondary\",\" btn-sm ml-3\")},SelectedTest.ntransactionstatus===1&&/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheck}),SelectedTest.stransactionstatus),/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn-normal \".concat(SelectedTest.naccredited===70?\"outline-success\":\"normal-danger\",\" btn-sm mr-3\")},SelectedTest.saccredited)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",name:\"edittestname\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),\"data-for\":\"tooltip_list_wrap\",onClick:function onClick(){return _this2.props.addTest(\"update\",SelectedTest,userInfo,editId,_this2.state.nfilterTestCategory);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"deletetestname\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip_list_wrap\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(SelectedTest,\"delete\",deleteId,\"TestMaster\",\"openModal\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",name:\"copytestname\",hidden:this.state.userRoleControlRights.indexOf(copyId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"}),\"data-for\":\"tooltip_list_wrap\",onClick:function onClick(){return _this2.props.addTest(\"copy\",SelectedTest,userInfo,copyId,_this2.state.nfilterTestCategory);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})))))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_TESTSYNONYM\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,SelectedTest.stestsynonym))),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_TESTPROCEDURE\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,SelectedTest.sdescription))),this.props.Login.masterData.TestParameter&&this.props.Login.masterData.TestParameter.length>0&&this.props.Login.masterData.TestParameter[0].nparametertypecode===1&&/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_PRICE\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,SelectedTest.ncost)))),/*#__PURE__*/React.createElement(TestView,{isFormulaOpen:this.props.Login.isFormulaOpen,linkMaster:linkMaster,editFiles:editFiles,userInfo:this.props.Login.userInfo,parameterData:parameterData||[],otherTestData:otherTestData||[],formulaData:this.props.Login.formulaData||{},dataState:this.props.Login.dataState,masterData:masterData,inputParam:this.props.Login.inputParam,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,openChildModal:this.props.Login.openChildModal,showSaveContinue:this.props.Login.showSaveContinue,operation:this.props.Login.operation,screenName:this.props.Login.screenName,selectedRecord:this.props.Login.selectedRecord,loadEsign:this.props.Login.loadEsign,ncontrolCode:this.props.Login.ncontrolCode,crudMaster:this.props.crudMaster,addParameterSpecification:this.props.addParameterSpecification,getAvailableData:this.props.getAvailableData,addCodedResult:this.props.addCodedResult,addFormula:this.props.addFormula,formulaChangeFunction:this.props.formulaChangeFunction,addParameter:this.props.addParameter,deleteAction:this.deleteAction,getTestDetails:this.props.getTestDetails,updateStore:this.props.updateStore,validateEsignCredential:this.props.validateEsignCredential,addTestFile:this.props.addTestFile,viewAttachment:this.props.viewAttachment,settings:this.props.Login.settings,getActiveTestContainerTypeById:this.props.getActiveTestContainerTypeById})))):\"\"))),this.props.Login.openModal&&this.props.Login.operation&&this.props.Login.inputParam&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveTest,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.mandatoryFields||[],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:this.props.Login.needOtherTest?\"6\":\"12\"},/*#__PURE__*/React.createElement(AddTest,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange// onActiveStatusChange={this.onActiveStatusChange}\n,onNumericInputChange:this.onNumericInputChange,onComboChange:this.onComboChange,testData:testData,otherTestData:otherTestData,needOtherTest:this.props.Login.needOtherTest})),this.props.Login.needOtherTest&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(AddParameter,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,onComboChange:this.onComboChange,parameterData:parameterData})))}));}},{key:\"findMandatoryFields\",value:function findMandatoryFields(screenName,selectedRecord,operation){if(screenName===\"IDS_TEST\"){var mandatoryFields=[{\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"ntestcategorycode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TESTSYNONYM\",\"dataField\":\"stestsynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];if(operation===\"create\"){mandatoryFields.push({\"idsName\":\"IDS_SECTION\",\"dataField\":\"nsectioncode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametername\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});if(selectedRecord&&Object.values(selectedRecord).length>0&&selectedRecord[\"nparametertypecode\"]){if(selectedRecord[\"nparametertypecode\"].value===parameterType.NUMERIC){mandatoryFields.push({\"idsName\":\"IDS_ROUNDINGDIGITS\",\"dataField\":\"nroundingdigits\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"nunitcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}else if(selectedRecord[\"nparametertypecode\"].value===parameterType.PREDEFINED){mandatoryFields.push({\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}}}mandatoryFields.forEach(function(item){return item.mandatory===true&&mandatoryFields.push(item);});return mandatoryFields;}else{return[];}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var isComponentUpdated=false;var selectedRecord=this.state.selectedRecord||{};if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isComponentUpdated=true;}var userRoleControlRights=this.state.userRoleControlRights||[];var controlMap=this.state.controlMap||new Map();if(this.props.Login.userInfo&&this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var nformCode=this.props.Login.userInfo.nformcode;if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[nformCode]&&Object.values(this.props.Login.userRoleControlRights[nformCode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,nformCode);isComponentUpdated=true;}var nfilterTestCategory=this.state.nfilterTestCategory||{};var filterTestCategory=this.state.filterTestCategory||{};if(this.props.Login.masterData.filterTestCategory!==previousProps.Login.masterData.filterTestCategory){var testCategoryMap=constructOptionList(this.props.Login.masterData.filterTestCategory||[],\"ntestcategorycode\",\"stestcategoryname\",'ntestcategorycode','ascending',false);filterTestCategory=testCategoryMap.get(\"OptionList\");if(testCategoryMap.get(\"DefaultValue\")){nfilterTestCategory=testCategoryMap.get(\"DefaultValue\");}else if(filterTestCategory&&filterTestCategory.length>0){nfilterTestCategory=filterTestCategory[0];}isComponentUpdated=true;}else if(this.props.Login.masterData.nfilterTestCategory!==previousProps.Login.masterData.nfilterTestCategory){nfilterTestCategory=this.props.Login.masterData.nfilterTestCategory;isComponentUpdated=true;}if(isComponentUpdated){this.setState({nfilterTestCategory:nfilterTestCategory,userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterTestCategory:filterTestCategory});}if(this.props.Login.masterData!==previousProps.Login.masterData){var filterData=this.generateBreadCrumData();this.setState({filterData:filterData});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.filterTestCategory){breadCrumbData.push({\"label\":\"IDS_TESTCATEGORY\",\"value\":this.props.Login.masterData.SelectedTestCat?this.props.Login.masterData.SelectedTestCat.stestcategoryname:\"NA\"});}return breadCrumbData;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined,testData:{},parameterData:{},otherTestData:{},formulaData:{}}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return TestMaster;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getTestMaster:getTestMaster,addTest:addTest,updateStore:updateStore,formulaChangeFunction:formulaChangeFunction,filterColumnData:filterColumnData,getTestDetails:getTestDetails,addParameter:addParameter,validateEsignCredential:validateEsignCredential,addCodedResult:addCodedResult,addParameterSpecification:addParameterSpecification,getAvailableData:getAvailableData,addFormula:addFormula,changeTestCategoryFilter:changeTestCategoryFilter,addTestFile:addTestFile,viewAttachment:viewAttachment,getActiveTestContainerTypeById:getActiveTestContainerTypeById})(injectIntl(TestMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestMaster.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","rsapi","callService","crudMaster","getTestMaster","addTest","updateStore","getTestDetails","formulaChangeFunction","filterColumnData","addParameter","validateEsignCredential","addCodedResult","addParameterSpecification","getAvailableData","addFormula","changeTestCategoryFilter","addTestFile","viewAttachment","getActiveTestContainerTypeById","TestView","injectIntl","toast","AddParameter","AddTest","SlideOutModal","getControlMap","showEsign","constructOptionList","TestCategoryFilter","ListMaster","faTrashAlt","faPencilAlt","faCopy","faCheck","FontAwesomeIcon","ReadOnlyText","ContentPanel","MediaLabel","DEFAULT_RETURN","Esign","parameterType","transactionStatus","ConfirmMessage","BreadcrumbComponent","Affix","ReactTooltip","TestMaster","props","handlePageChange","event","setState","skip","take","ConfirmDelete","item","operation","ncontrolCode","methodUrl","modalName","confirmMessage","confirm","intl","formatMessage","id","deleteAction","onComboChange","comboData","fieldName","caseNo","selectedRecord","state","value","needUnit","needRoundingDigit","needCodedResult","needActualResult","npredefinedcode","NO","parameterData","Login","YES","defaultUnit","defaultGrade","parameterInfo","typeName","data","nfilterTestCategory","searchRef","current","openFilter","showFilter","updateInfo","closeFilter","onFilterSubmit","inputParam","inputData","ntestcategorycode","userinfo","userInfo","classUrl","masterData","filterTestCategory","warn","onEsignInputOnChange","target","type","name","checked","onInputOnChange","optional","label","onNumericInputChange","console","log","test","closeModal","loadEsign","openModal","closeFormulaModal","addformula","selected","toLowerCase","screenName","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","ntestcode","fetchUrl","fecthInputObject","userRoleControlRights","nformcode","screenData","validateTestExistenceInTestGroup","post","SelectedTest","then","response","onSaveTest","undefined","catch","error","status","message","DEACTIVE","onSaveValidatedTest","saveType","formRef","customobject","testColumns","push","nisadhocparameter","nisvisible","nstatus","ACTIVE","trim","nmastersitecode","forEach","items","mapkey","Object","keys","columns","values","map","key","defaultkeyname","validatetest","validateEsign","sreason","password","reloadData","controlMap","Map","settings","createRef","searchFieldList","searchedData","testData","otherTestData","linkMaster","editFiles","addId","has","get","ncontrolcode","editId","deleteId","copyId","filterParam","mandatoryFields","findMandatoryFields","breadCrumbData","filterData","length","stestname","ntransactionstatus","stransactionstatus","naccredited","saccredited","indexOf","stestsynonym","sdescription","TestParameter","nparametertypecode","ncost","isFormulaOpen","formulaData","dataState","openChildModal","showSaveContinue","needOtherTest","NUMERIC","PREDEFINED","mandatory","previousProps","isComponentUpdated","nformCode","testCategoryMap","generateBreadCrumData","SelectedTestCat","stestcategoryname","masterStatus","errorCode","mapStateToProps"],"mappings":"67BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,GAAzB,CAA8BC,SAA9B,CAAyCC,SAAzC,KAA0D,iBAA1D,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,aAD7B,CAC4CC,OAD5C,CACqDC,WADrD,CACkEC,cADlE,CACkFC,qBADlF,CACyGC,gBADzG,CAEIC,YAFJ,CAEkBC,uBAFlB,CAE2CC,cAF3C,CAE2DC,yBAF3D,CAEsFC,gBAFtF,CAEwGC,UAFxG,CAGIC,wBAHJ,CAG8BC,WAH9B,CAG2CC,cAH3C,CAG0DC,8BAH1D,KAIO,eAJP,CAKA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oCAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,mBAAnC,KAA8D,+BAA9D,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,MAAlC,CAA0CC,OAA1C,KAAyD,mCAAzD,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAqCC,UAArC,KAAuD,6BAAvD,CACA,OAASC,cAAT,KAA+B,0BAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA;AACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,8BAAjD,CACA,MAAO,6CAAP,CACA;AAEA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uCAAhC,CACA,OAASC,KAAT,KAAsB,QAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,GAEMC,CAAAA,U,wGAEF,oBAAYC,KAAZ,CAAmB,4CACf,uBAAMA,KAAN,EADe,MA8SnBC,gBA9SmB,CA8SA,SAACC,KAAD,CAAW,CAC1B,MAAKC,QAAL,CAAc,CACVC,IAAI,CAAEF,KAAK,CAACE,IADF,CAEVC,IAAI,CAAEH,KAAK,CAACG,IAFF,CAAd,EAIH,CAnTkB,OAqTnBC,aArTmB,CAqTH,SAACC,IAAD,CAAOC,SAAP,CAAkBC,YAAlB,CAAgCC,SAAhC,CAA2CC,SAA3C,CAAyD,CACrE,MAAKC,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,CAA6C,MAAKb,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAA7C,CAAkG,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,uBAAN,CAA9B,CAAlG,CACI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CADJ,CACqD,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CADrD,CAEI,iBAAM,OAAKC,YAAL,CAAkBV,IAAlB,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDC,SAAjD,CAA4DC,SAA5D,CAAN,EAFJ,EAGH,CAzTkB,OA+VnBO,aA/VmB,CA+VH,SAACC,SAAD,CAAYC,SAAZ,CAAuBC,MAAvB,CAAkC,CAC9C,GAAIC,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAX,EAA6B,EAAlD,CACA,OAAQD,MAAR,EACI,IAAK,EAAL,CACI,GAAID,SAAS,GAAK,gBAAlB,CAAoC,CAChCE,cAAc,CAACF,SAAD,CAAd,CAA4BD,SAA5B,CACAG,cAAc,CAAC,mBAAD,CAAd,CAAsCH,SAAS,CAAGA,SAAS,CAACK,KAAb,CAAqB,EAApE,CACH,CAHD,IAGO,CACHF,cAAc,CAACF,SAAD,CAAd,CAA4BD,SAA5B,CACH,CACD,MAAKhB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACA,MAEJ,IAAK,EAAL,CACI,GAAIf,CAAAA,IAAI,CAAGY,SAAS,CAAC,MAAD,CAApB,CACA,GAAIM,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,iBAAiB,CAAG,IAAxB,CACA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,IAAvB,CACA,GAAIC,CAAAA,eAAe,CAAGnC,iBAAiB,CAACoC,EAAxC,CACA,GAAMC,CAAAA,aAAa,CAAG,MAAK/B,KAAL,CAAWgC,KAAX,CAAiBD,aAAvC,CACA,GAAIxB,IAAI,CAAC,eAAD,CAAJ,GAA0Bb,iBAAiB,CAACuC,GAAhD,CAAqD,CACjDR,QAAQ,CAAG,KAAX,CACAH,cAAc,CAAC,WAAD,CAAd,CAA8B,MAAKtB,KAAL,CAAWgC,KAAX,CAAiBD,aAAjB,CAA+BG,WAA7D,CACH,CAHD,IAGO,CACHZ,cAAc,CAAC,WAAD,CAAd,CAA8B,EAA9B,CACH,CACD,GAAIf,IAAI,CAAC,mBAAD,CAAJ,GAA8Bb,iBAAiB,CAACuC,GAApD,CAAyD,CACrDP,iBAAiB,CAAG,KAApB,CACH,CAFD,IAEO,CACHJ,cAAc,CAAC,gBAAD,CAAd,CAAmC,EAAnC,CACH,CACD,GAAIf,IAAI,CAAC,qBAAD,CAAJ,GAAgCb,iBAAiB,CAACuC,GAAtD,CAA2D,CACvDN,eAAe,CAAG,KAAlB,CACAE,eAAe,CAAGtB,IAAI,CAAC,qBAAD,CAAtB,CACH,CAHD,IAGO,CACHe,cAAc,CAAC,iBAAD,CAAd,CAAoC,EAApC,CACH,CACD,GAAIf,IAAI,CAAC,gBAAD,CAAJ,GAA2Bb,iBAAiB,CAACuC,GAAjD,CAAsD,CAClDL,gBAAgB,CAAG,KAAnB,CACAN,cAAc,CAAC,YAAD,CAAd,CAA+B,MAAKtB,KAAL,CAAWgC,KAAX,CAAiBD,aAAjB,CAA+BI,YAA9D,CACH,CAHD,IAGO,CACHb,cAAc,CAAC,YAAD,CAAd,CAA+B,EAA/B,CACH,CACDA,cAAc,CAACF,SAAD,CAAd,CAA4BD,SAA5B,CACA,GAAMiB,CAAAA,aAAa,CAAG,CAClBC,QAAQ,CAAE9C,cADQ,CAElB+C,IAAI,CAAE,CACFP,aAAa,gCACNA,aADM,MACSN,QAAQ,CAARA,QADT,CACmBC,iBAAiB,CAAjBA,iBADnB,CACsCC,eAAe,CAAfA,eADtC,CACuDC,gBAAgB,CAAhBA,gBADvD,CACyEC,eAAe,CAAfA,eADzE,EADX,CAGCP,cAAc,CAAdA,cAHD,CAFY,CAAtB,CAQA,MAAKtB,KAAL,CAAW1C,WAAX,CAAuB8E,aAAvB,EAEA,MAEJ,IAAK,EAAL,CACI,GAAIG,CAAAA,mBAAmB,CAAG,MAAKhB,KAAL,CAAWgB,mBAAX,EAAkC,EAA5D,CACAA,mBAAmB,CAAGpB,SAAtB,CACA,MAAKqB,SAAL,CAAeC,OAAf,CAAuBjB,KAAvB,CAA+B,EAA/B,CACA,MAAKrB,QAAL,CAAc,CAAEoC,mBAAmB,CAAnBA,mBAAF,CAAd,EACA,MAEJ,QACI,MA/DR,CAiEH,CAlakB,OAoanBG,UApamB,CAoaN,UAAM,CACf,GAAIC,CAAAA,UAAU,CAAG,CAAC,MAAK3C,KAAL,CAAWgC,KAAX,CAAiBW,UAAnC,CACA,GAAMC,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CAAEK,UAAU,CAAVA,UAAF,CAFS,CAAnB,CAIA,MAAK3C,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,CA3akB,OA6anBC,WA7amB,CA6aL,UAAM,CAEhB,GAAMD,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CAAEK,UAAU,CAAE,KAAd,CAFS,CAAnB,CAIA,MAAK3C,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,CApbkB,OAsbnBE,cAtbmB,CAsbF,UAAM,CACnB,GAAI,MAAKvB,KAAL,CAAWgB,mBAAX,CAA+Bf,KAAnC,CAA0C,CACtC,GAAIuB,CAAAA,UAAU,CAAG,CACbC,SAAS,CAAE,CACPC,iBAAiB,CAAE,MAAK1B,KAAL,CAAWgB,mBAAX,CAA+Bf,KAD3C,CAEP0B,QAAQ,CAAE,MAAKlD,KAAL,CAAWgC,KAAX,CAAiBmB,QAFpB,CAGPZ,mBAAmB,CAAE,MAAKhB,KAAL,CAAWgB,mBAHzB,CADE,CAMba,QAAQ,CAAE,YANG,CAOb1C,SAAS,CAAE,sBAPE,CAAjB,CASA,MAAKV,KAAL,CAAWhC,wBAAX,CAAoC+E,UAApC,CAAgD,MAAK/C,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BC,kBAA5E,EACH,CAXD,IAWO,CACHhF,KAAK,CAACiF,IAAN,CAAW,MAAKvD,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,8BAAN,CAA9B,CAAX,EACH,CACJ,CArckB,OAwcnBwC,oBAxcmB,CAwcI,SAACtD,KAAD,CAAW,CAC9B,GAAMoB,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAX,EAA6B,EAApD,CACA,GAAIpB,KAAK,CAACuD,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCpC,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCzD,KAAK,CAACuD,MAAN,CAAaG,OAAb,GAAyB,IAAzB,CAAgClE,iBAAiB,CAACuC,GAAlD,CAAwDvC,iBAAiB,CAACoC,EAA9G,CACH,CAFD,IAEO,CACHR,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCzD,KAAK,CAACuD,MAAN,CAAajC,KAAjD,CACH,CACD,MAAKrB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACH,CAhdkB,OA2dnBuC,eA3dmB,CA2dD,SAAC3D,KAAD,CAAQmB,MAAR,CAAgByC,QAAhB,CAA6B,CAC3C,GAAMxC,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAX,EAA6B,EAApD,CACA,OAAQD,MAAR,EACI,IAAK,EAAL,CACI,GAAInB,KAAK,CAACuD,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCpC,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCzD,KAAK,CAACuD,MAAN,CAAaG,OAAb,GAAyB,IAAzB,CAAgCE,QAAQ,CAAC,CAAD,CAAxC,CAA8CA,QAAQ,CAAC,CAAD,CAA1F,CACH,CAFD,IAEO,CACHxC,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCzD,KAAK,CAACuD,MAAN,CAAajC,KAAjD,CACH,CACD,MAAKrB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACA,MAEJ,IAAK,EAAL,CACIA,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCrC,cAAc,CAAC,cAAD,CAAd,CAChCA,cAAc,CAAC,mBAAD,CAAd,CAAsCpB,KAAK,CAACuD,MAAN,CAAajC,KADvD,CAEAF,cAAc,CAAC,gBAAD,CAAd,CAAmC,CAAEyC,KAAK,CAAE7D,KAAK,CAACuD,MAAN,CAAajC,KAAtB,CAA6BA,KAAK,CAAEtB,KAAK,CAACuD,MAAN,CAAajC,KAAjD,CAAnC,CACA,MAAKrB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACA,MAEJ,IAAK,EAAL,CACIA,cAAc,CAACpB,KAAK,CAACuD,MAAN,CAAaE,IAAd,CAAd,CAAoCrC,cAAc,CAAC,mBAAD,CAAd,CAAsCpB,KAAK,CAACuD,MAAN,CAAajC,KAAvF,CACA,MAAKrB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACA,MAEJ,QACI,MAvBR,CAyBH,CAtfkB,OA8fnB0C,oBA9fmB,CA8fI,SAACxC,KAAD,CAAQmC,IAAR,CAAiB,CACpCM,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsB1C,KAAtB,CAA6BmC,IAA7B,EACA,GAAMrC,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAX,EAA6B,EAApD,CACA,GAAIqC,IAAI,GAAK,iBAAb,CAAgC,CAE5B,GAAI,WAAWQ,IAAX,CAAgB3C,KAAK,CAACiC,MAAN,CAAajC,KAA7B,GAAuCA,KAAK,CAACiC,MAAN,CAAajC,KAAb,GAAuB,EAAlE,CAAsE,CAClEyC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoB1C,KAAK,CAACiC,MAAN,CAAajC,KAAjC,EACAF,cAAc,CAACqC,IAAD,CAAd,CAAuBnC,KAAK,CAACiC,MAAN,CAAajC,KAApC,CACH,CACJ,CAND,IAOK,CACDF,cAAc,CAACqC,IAAD,CAAd,CAAuBnC,KAAvB,CACH,CAED,MAAKrB,QAAL,CAAc,CAAEmB,cAAc,CAAdA,cAAF,CAAd,EACH,CA7gBkB,OA+gBnB8C,UA/gBmB,CA+gBN,UAAM,CACf,GAAIC,CAAAA,SAAS,CAAG,MAAKrE,KAAL,CAAWgC,KAAX,CAAiBqC,SAAjC,CACA,GAAIC,CAAAA,SAAS,CAAG,MAAKtE,KAAL,CAAWgC,KAAX,CAAiBsC,SAAjC,CACA,GAAIhD,CAAAA,cAAc,CAAG,MAAKtB,KAAL,CAAWgC,KAAX,CAAiBV,cAAtC,CACA,GAAI,MAAKtB,KAAL,CAAWgC,KAAX,CAAiBqC,SAArB,CAAgC,CAC5B,GAAI,MAAKrE,KAAL,CAAWgC,KAAX,CAAiBxB,SAAjB,GAA+B,QAAnC,CAA6C,CACzC6D,SAAS,CAAG,KAAZ,CACAC,SAAS,CAAG,KAAZ,CACAhD,cAAc,CAAG,EAAjB,CACH,CAJD,IAIO,CACH+C,SAAS,CAAG,KAAZ,CACA/C,cAAc,CAAC,OAAD,CAAd,CAA0B5B,iBAAiB,CAACoC,EAA5C,CACAR,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACAA,cAAc,CAAC,eAAD,CAAd,CAAkC,EAAlC,CACH,CACJ,CAXD,IAWO,CACHgD,SAAS,CAAG,KAAZ,CACAhD,cAAc,CAAG,EAAjB,CACH,CACD,GAAMsB,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CAAEgC,SAAS,CAATA,SAAF,CAAaD,SAAS,CAATA,SAAb,CAAwB/C,cAAc,CAAdA,cAAxB,CAFS,CAAnB,CAIA,MAAKtB,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,CAviBkB,OAyiBnB2B,iBAziBmB,CAyiBC,UAAM,CACtB,MAAKpE,QAAL,CAAc,CAAEqE,UAAU,CAAE,KAAd,CAAd,EACH,CA3iBkB,OA6iBnBvD,YA7iBmB,CA6iBJ,SAACV,IAAD,CAAOC,SAAP,CAAkBC,YAAlB,CAAgCC,SAAhC,CAA2CC,SAA3C,CAAyD,gBACpE,GAAM8D,CAAAA,QAAQ,CAAGlE,IAAI,CAAC,UAAD,CAAJ,CAAmBA,IAAI,CAAC,UAAD,CAAvB,CAAsCA,IAAvD,CACA,GAAMwC,CAAAA,UAAU,CAAG,CACfC,SAAS,2CACJtC,SAAS,CAACgE,WAAV,EADI,CACsBD,QADtB,wCAEK,MAAKzE,KAAL,CAAWgC,KAAX,CAAiBmB,QAFtB,aADM,CAKfC,QAAQ,CAAE,YALK,CAMf5C,SAAS,CAAEA,SANI,CAOfE,SAAS,CAAEA,SAPI,CAQfiE,UAAU,CAAE,UARG,CASfC,SAAS,CAAE,CACPC,aAAa,CAAE,YADR,CACsBC,cAAc,CAAE,cADtC,CACsDC,eAAe,CAAE,WADvE,CAEPC,eAAe,CAAEP,QAAQ,CAACQ,SAFnB,CAGPC,QAAQ,CAAE,wBAHH,CAG6BC,gBAAgB,CAAE,CAAEjC,QAAQ,CAAE,MAAKlD,KAAL,CAAWgC,KAAX,CAAiBmB,QAA7B,CAH/C,CAIPE,UAAU,CAAE,MAAKrD,KAAL,CAAWgC,KAAX,CAAiBqB,UAJtB,CATI,CAAnB,CAgBA,GAAMA,CAAAA,UAAU,CAAG,MAAKrD,KAAL,CAAWgC,KAAX,CAAiBqB,UAApC,CACA,GAAI1E,SAAS,CAAC,MAAKqB,KAAL,CAAWgC,KAAX,CAAiBoD,qBAAlB,CAAyC,MAAKpF,KAAL,CAAWgC,KAAX,CAAiBmB,QAAjB,CAA0BkC,SAAnE,CAA8E5E,YAA9E,CAAb,CAA0G,WACtG,GAAMmC,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,SACA+B,SAAS,CAAE,IADX,CACiBiB,UAAU,CAAE,CAAEvC,UAAU,CAAVA,UAAF,CAAcM,UAAU,CAAVA,UAAd,CAD7B,wBAEC1C,SAFD,CAEa,IAFb,qCAE+B,UAF/B,oCAEsDH,SAFtD,QAFW,CAAnB,CAOA,MAAKR,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,CATD,IASO,CACH,MAAK5C,KAAL,CAAW7C,UAAX,CAAsB4F,UAAtB,CAAkCM,UAAlC,CAA8C1C,SAA9C,CAAyD,EAAzD,EACH,CACJ,CA5kBkB,OA8kBnB4E,gCA9kBmB,CA8kBgB,UAAM,CAErC,GAAM/E,CAAAA,SAAS,CAAG,MAAKR,KAAL,CAAWgC,KAAX,CAAiBxB,SAAnC,CACA,GAAIA,SAAS,GAAK,QAAlB,CAA4B,CACxB,MAAOvD,CAAAA,KAAK,CAACuI,IAAN,CAAW,6CAAX,CAA0D,CAC7DP,SAAS,CAAE,MAAKjF,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BoC,YAA5B,CAAyC,WAAzC,CADkD,CAE7D,WAAY,MAAKzF,KAAL,CAAWgC,KAAX,CAAiBmB,QAFgC,CAA1D,EAIFuC,IAJE,CAIG,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACrD,IAAT,GAAkB,IAAtB,CAA4B,CACxB,MAAK1B,cAAL,CAAoBC,OAApB,CAA4B,MAAKb,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAA5B,CACI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CADJ,CAEI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,2BAAN,CAA9B,CAFJ,CAGI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CAHJ,CAII,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAJJ,CAKI,iBAAM,OAAK4E,UAAL,CAAgB,IAAhB,CAAsB,IAAtB,CAAN,EALJ,CAMI,KANJ,CAOIC,SAPJ,EAQH,CAEJ,CAhBE,EAiBFC,KAjBE,CAiBI,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACJ,QAAN,CAAeK,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1H,KAAK,CAACyH,KAAN,CAAY,MAAK/F,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE+E,KAAK,CAACE,OAAZ,CAA9B,CAAZ,EACH,CAFD,IAGK,CACD3H,KAAK,CAACiF,IAAN,CAAW,MAAKvD,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE+E,KAAK,CAACJ,QAAZ,CAA9B,CAAX,EACH,CACJ,CAxBE,CAAP,CAyBH,CACJ,CA5mBkB,OA8mBnBC,UA9mBmB,CA8mBN,UAAM,CACf,GAAMpF,CAAAA,SAAS,CAAG,MAAKR,KAAL,CAAWgC,KAAX,CAAiBxB,SAAnC,CACA,GAAMc,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAlC,CAEA,GAAId,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAIc,cAAc,CAAC,oBAAD,CAAd,GAAyC5B,iBAAiB,CAACwG,QAA/D,CAAyE,CACrE,MAAOjJ,CAAAA,KAAK,CAACuI,IAAN,CAAW,6CAAX,CAA0D,CAC7DP,SAAS,CAAE,MAAKjF,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BoC,YAA5B,CAAyC,WAAzC,CADkD,CAE7D,WAAY,MAAKzF,KAAL,CAAWgC,KAAX,CAAiBmB,QAFgC,CAA1D,EAIFuC,IAJE,CAIG,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACrD,IAAT,GAAkB,IAAtB,CAA4B,CACxB,MAAK1B,cAAL,CAAoBC,OAApB,CAA4B,MAAKb,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAA5B,CACI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CADJ,CAEI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,2BAAN,CAA9B,CAFJ,CAGI,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,QAAN,CAA9B,CAHJ,CAII,MAAKhB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CAJJ,CAKI,iBAAM,OAAKmF,mBAAL,CAAyB,IAAzB,CAA+B,IAA/B,CAAN,EALJ,CAMI,KANJ,CAOIN,SAPJ,EAQH,CATD,IAUK,CACD,MAAKM,mBAAL,CAAyB,IAAzB,CAA+B,IAA/B,EACH,CAEJ,CAnBE,EAoBFL,KApBE,CAoBI,SAAAC,KAAK,CAAI,CACZ,GAAIA,KAAK,CAACJ,QAAN,CAAeK,MAAf,GAA0B,GAA9B,CAAmC,CAC/B1H,KAAK,CAACyH,KAAN,CAAY,MAAK/F,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE+E,KAAK,CAACE,OAAZ,CAA9B,CAAZ,EACH,CAFD,IAGK,CACD3H,KAAK,CAACiF,IAAN,CAAW,MAAKvD,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE+E,KAAK,CAACJ,QAAZ,CAA9B,CAAX,EACH,CACJ,CA3BE,CAAP,CA4BH,CA7BD,IA8BK,CACD,MAAKQ,mBAAL,CAAyB,IAAzB,CAA+B,IAA/B,EACH,CACJ,CAlCD,IAmCK,CACD,MAAKA,mBAAL,CAAyB,IAAzB,CAA+B,IAA/B,EACH,CACJ,CAxpBkB,OAoxBnBA,mBApxBmB,CAoxBG,SAACC,QAAD,CAAWC,OAAX,CAAuB,CACzC,GAAM7F,CAAAA,SAAS,CAAG,MAAKR,KAAL,CAAWgC,KAAX,CAAiBxB,SAAnC,CACA,GAAIwC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIsD,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAMnD,CAAAA,QAAQ,CAAG,MAAKnD,KAAL,CAAWgC,KAAX,CAAiBmB,QAAlC,CACA,GAAM7B,CAAAA,cAAc,CAAG,MAAKC,KAAL,CAAWD,cAAlC,CACA,GAAIiF,CAAAA,WAAW,CAAG,CAAC,CACf,aAAc,CAAC,CAAE,YAAa,KAAf,CAAD,CAAyB,CAAE,oBAAqB,OAAvB,CAAzB,CAA2D,CAAE,wBAAyB,OAA3B,CAA3D,CAAiG,CAAE,cAAe,KAAjB,CAAjG,CACd,CAAE,qBAAsB,KAAxB,CADc,CACmB,CAAE,YAAa,QAAf,CADnB,CAC8C,CAAE,eAAgB,QAAlB,CAD9C,CAC4E,CAAE,eAAgB,QAAlB,CAD5E,CAC0G,CAAE,QAAS,OAAX,CAD1G,CADC,CAAD,CAAlB,CAIA,GAAI/F,SAAS,GAAK,QAAlB,CAA4B,CACxB+F,WAAW,CAACC,IAAZ,CAAiB,CACb,gBAAiB,CAAC,CAAE,YAAa,KAAf,CAAD,CAAyB,CAAE,qBAAsB,OAAxB,CAAzB,CAA4D,CAAE,YAAa,OAAf,CAA5D,CAAsF,CAAE,iBAAkB,OAApB,CAAtF,CACjB,CAAE,oBAAqB,QAAvB,CADiB,CACkB,CAAE,kBAAmB,KAArB,CADlB,CACgD,CAAE,yBAA0B,cAA5B,CADhD,CADJ,CAAjB,EAIAxD,SAAS,CAAG,CACR,aAAc,EADN,CAER,gBAAiB,CACbyD,iBAAiB,CAAE/G,iBAAiB,CAACoC,EADxB,CAEb4E,UAAU,CAAEhH,iBAAiB,CAACuC,GAFjB,CAGb0E,OAAO,CAAEjH,iBAAiB,CAACkH,MAHd,CAFT,CAOR,cAAe,EAPP,CAQR,aAAc,EARN,CASR,yBAA0B,EATlB,CAAZ,CAWA,GAAI,MAAK5G,KAAL,CAAWgC,KAAX,CAAiBD,aAAjB,CAA+BF,eAA/B,GAAmDnC,iBAAiB,CAACuC,GAAzE,CAA8E,CAC1EqE,YAAY,CAAG,EAAf,CACAA,YAAY,CAAC,iBAAD,CAAZ,CAAkChF,cAAc,CAAC,iBAAD,CAAd,CAAkCuF,IAAlC,EAAlC,CACAP,YAAY,CAAC,SAAD,CAAZ,CAA0B5G,iBAAiB,CAACkH,MAA5C,CACAN,YAAY,CAAC,gBAAD,CAAZ,CAAiC5G,iBAAiB,CAACuC,GAAnD,CACAqE,YAAY,CAAC,YAAD,CAAZ,CAA6BhF,cAAc,CAAC,YAAD,CAAd,CAA+BA,cAAc,CAAC,YAAD,CAAd,CAA6BE,KAA7B,CAAqCF,cAAc,CAAC,YAAD,CAAd,CAA6BE,KAAlE,CAA0E,CAAC,CAA1G,CAA8G,CAAC,CAA5I,CACH,CACJ,CAvBD,IAuBO,CACHwB,SAAS,CAAG,CACR,aAAc,EADN,CAAZ,CAGH,CACDA,SAAS,CAAC,UAAD,CAAT,CAAwBG,QAAxB,CACAH,SAAS,CAAC,YAAD,CAAT,CAAwB,SAAxB,EAAqCtD,iBAAiB,CAACkH,MAAvD,CACA5D,SAAS,CAAC,YAAD,CAAT,CAAwB,WAAxB,EAAuCG,QAAQ,CAAC2D,eAAhD,CACAP,WAAW,CAACQ,OAAZ,CAAoB,SAAUC,KAAV,CAAiB,CACjC,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmB,CAAnB,CAAf,CACA,GAAMI,CAAAA,OAAO,CAAGF,MAAM,CAACG,MAAP,CAAcL,KAAd,EAAqB,CAArB,CAAhB,CACAI,OAAO,CAACE,GAAR,CAAY,SAAA/G,IAAI,CAAI,CAChB,GAAMgH,CAAAA,GAAG,CAAGL,MAAM,CAACC,IAAP,CAAY5G,IAAZ,EAAkB,CAAlB,CAAZ,CACA,GAAMiB,CAAAA,KAAK,CAAG0F,MAAM,CAACG,MAAP,CAAc9G,IAAd,EAAoB,CAApB,CAAd,CACA,GAAIiB,KAAK,GAAK,OAAd,CAAuB,CACnB,MAAOwB,CAAAA,SAAS,CAACiE,MAAD,CAAT,CAAkBM,GAAlB,EAAyBjG,cAAc,CAACiG,GAAD,CAAd,CAAsBjG,cAAc,CAACiG,GAAD,CAAd,CAAoB/F,KAApB,CAA4BF,cAAc,CAACiG,GAAD,CAAd,CAAoB/F,KAAhD,CAAwD,CAAC,CAA/E,CAAmF,CAAC,CAApH,CACH,CAFD,IAEO,IAAIA,KAAK,GAAK,KAAd,CAAqB,CACxB,MAAOwB,CAAAA,SAAS,CAACiE,MAAD,CAAT,CAAkBM,GAAlB,EAAyBjG,cAAc,CAACiG,GAAD,CAAd,CAAsBjG,cAAc,CAACiG,GAAD,CAApC,CAA4C,CAA5E,CACH,CAFM,IAEA,IAAI/F,KAAK,GAAK,QAAd,CAAwB,CAC3B,MAAOwB,CAAAA,SAAS,CAACiE,MAAD,CAAT,CAAkBM,GAAlB,EAAyBjG,cAAc,CAACiG,GAAD,CAAd,CAAsBjG,cAAc,CAACiG,GAAD,CAAd,CAAoBV,IAApB,EAAtB,CAAmD,EAAnF,CACH,CAFM,IAEA,IAAIrF,KAAK,GAAK,OAAd,CAAuB,CAC1B,MAAOwB,CAAAA,SAAS,CAACiE,MAAD,CAAT,CAAkBM,GAAlB,EAAyBjG,cAAc,CAACiG,GAAD,CAAd,CAAsBjG,cAAc,CAACiG,GAAD,CAApC,CAA4C,CAA5E,CACH,CAFM,IAEA,IAAI/F,KAAK,GAAK,cAAd,CAA8B,CACjC,MAAOwB,CAAAA,SAAS,CAACiE,MAAD,CAAT,CAAkBM,GAAlB,EAAyBjB,YAAhC,CACH,CAFM,IAEA,CACH,MAAO,KAAP,CACH,CACJ,CAhBD,EAiBH,CApBD,EAqBA,GAAI1B,CAAAA,SAAS,CAAGiB,SAAhB,CACA,GAAIrF,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAIc,cAAc,CAAC,cAAD,CAAlB,CAAoC,CAChC0B,SAAS,CAAC,aAAD,CAAT,CAAyB,cAAzB,EAA2C1B,cAAc,CAAC,cAAD,CAAd,CAA+BE,KAA1E,CACAwB,SAAS,CAAC,aAAD,CAAT,CAAyB,gBAAzB,EAA6CtD,iBAAiB,CAACuC,GAA/D,CACAe,SAAS,CAAC,aAAD,CAAT,CAAyB,SAAzB,EAAsCtD,iBAAiB,CAACkH,MAAxD,CACH,CACD,GAAItF,cAAc,CAAC,aAAD,CAAlB,CAAmC,CAC/B0B,SAAS,CAAC,YAAD,CAAT,CAAwB,aAAxB,EAAyC1B,cAAc,CAAC,aAAD,CAAd,CAA8BE,KAAvE,CACAwB,SAAS,CAAC,YAAD,CAAT,CAAwB,gBAAxB,EAA4CtD,iBAAiB,CAACuC,GAA9D,CACAe,SAAS,CAAC,YAAD,CAAT,CAAwB,SAAxB,EAAqCtD,iBAAiB,CAACkH,MAAvD,CACH,CAED,GAAItF,cAAc,CAAC,oBAAD,CAAlB,CAA0C,CACtC0B,SAAS,CAAC,wBAAD,CAAT,CAAoC,oBAApC,EAA4D1B,cAAc,CAAC,oBAAD,CAAd,CAAqCE,KAAjG,CACAwB,SAAS,CAAC,wBAAD,CAAT,CAAoC,gBAApC,EAAwDtD,iBAAiB,CAACuC,GAA1E,CACAe,SAAS,CAAC,wBAAD,CAAT,CAAoC,SAApC,EAAiDtD,iBAAiB,CAACkH,MAAnE,CACH,CACJ,CAjBD,IAiBO,IAAIpG,SAAS,GAAK,MAAlB,CAA0B,CAC7BwC,SAAS,CAAC,YAAD,CAAT,CAAwB,WAAxB,EAAuC,MAAKhD,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BoC,YAA5B,CAAyC,WAAzC,CAAvC,CACH,CAFM,IAEA,IAAIjF,SAAS,GAAK,QAAlB,CAA4B,CAC/BoE,SAAS,CAAG,CAAEC,aAAa,CAAE,YAAjB,CAA+BC,cAAc,CAAE,cAA/C,CAA+DC,eAAe,CAAE,WAAhF,CAAZ,CACH,CAED,MAAK5E,QAAL,CAAc,CAAEoC,mBAAmB,CAAE,CAAE,QAASjB,cAAc,CAAC2B,iBAAf,CAAiCc,KAA5C,CAAmD,QAASzC,cAAc,CAAC2B,iBAAf,CAAiCzB,KAA7F,CAAvB,CAAd,EACA,GAAIhB,SAAS,GAAK,QAAlB,CAA4B,CACxB,GAAMoC,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CAAEkF,cAAc,CAAE,mBAAlB,CAFS,CAAnB,CAIA,MAAKxH,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,CACD;AACA;AACA;AACA,GAAMG,CAAAA,UAAU,CAAG,CACfC,SAAS,gCAAOA,SAAP,MAAkByE,YAAY,CAAE,KAAhC,EADM,CAEfrE,QAAQ,CAAE,YAFK,CAGf5C,SAAS,CAAEA,SAHI,CAIfE,SAAS,CAAE,YAJI,CAKf0F,QAAQ,CAARA,QALe,CAMfC,OAAO,CAAPA,OANe,CAMNzB,SAAS,CAATA,SANM,CAMKpC,SAAS,CAAE,MAAKA,SANrB,CAAnB,CAQA,GAAMa,CAAAA,UAAU,CAAG,MAAKrD,KAAL,CAAWgC,KAAX,CAAiBqB,UAApC,CACA,GAAI1E,SAAS,CAAC,MAAKqB,KAAL,CAAWgC,KAAX,CAAiBoD,qBAAlB,CAAyC,MAAKpF,KAAL,CAAWgC,KAAX,CAAiBmB,QAAjB,CAA0BkC,SAAnE,CAA8E,MAAKrF,KAAL,CAAWgC,KAAX,CAAiBvB,YAA/F,CAAb,CAA2H,CACvH,GAAMmC,CAAAA,WAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CACF+B,SAAS,CAAE,IADT,CACeiB,UAAU,CAAE,CAAEvC,UAAU,CAAVA,UAAF,CAAcM,UAAU,CAAVA,UAAd,CAD3B,CACuD+C,QAAQ,CAARA,QADvD,CACiEC,OAAO,CAAPA,OADjE,CAFS,CAAnB,CAMA,MAAKrG,KAAL,CAAW1C,WAAX,CAAuBsF,WAAvB,EACH,CARD,IAQO,CACH,MAAK5C,KAAL,CAAW7C,UAAX,CAAsB4F,UAAtB,CAAkCM,UAAlC,CAA8C,WAA9C,CAA2D,EAA3D,EACH,CACD;AACH,CA14BkB,OA64BnBqE,aA74BmB,CA64BH,UAAM,CAClB,GAAM3E,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,CACP,0CACO,MAAKhD,KAAL,CAAWgC,KAAX,CAAiBmB,QADxB,MAEIwE,OAAO,CAAE,MAAKpG,KAAL,CAAWD,cAAX,CAA0B,eAA1B,CAFb,EADO,CAKPsG,QAAQ,CAAE,MAAKrG,KAAL,CAAWD,cAAX,CAA0B,eAA1B,CALH,CADI,CAQfgE,UAAU,CAAE,MAAKtF,KAAL,CAAWgC,KAAX,CAAiBsD,UARd,CAAnB,CAUA,MAAKtF,KAAL,CAAWrC,uBAAX,CAAmCoF,UAAnC,CAA+C,WAA/C,EACH,CAz5BkB,OA25BnB8E,UA35BmB,CA25BN,UAAM,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAKrF,SAAL,CAAeC,OAAf,CAAuBjB,KAAvB,CAA+B,EAA/B,CACA,GAAI,MAAKD,KAAL,CAAWgB,mBAAX,CAA+Bf,KAAnC,CAA0C,CACtC,GAAIuB,CAAAA,UAAU,CAAG,CACbC,SAAS,CAAE,CACPC,iBAAiB,CAAE,MAAK1B,KAAL,CAAWgB,mBAAX,CAA+Bf,KAD3C,CAEP0B,QAAQ,CAAE,MAAKlD,KAAL,CAAWgC,KAAX,CAAiBmB,QAFpB,CAGPZ,mBAAmB,CAAE,MAAKhB,KAAL,CAAWgB,mBAHzB,CADE,CAMba,QAAQ,CAAE,YANG,CAOb1C,SAAS,CAAE,sBAPE,CAAjB,CASA,MAAKV,KAAL,CAAWhC,wBAAX,CAAoC+E,UAApC,CAAgD,MAAK/C,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BC,kBAA5E,EACH,CAXD,IAWO,CACHhF,KAAK,CAACiF,IAAN,CAAW,MAAKvD,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,8BAAN,CAA9B,CAAX,EACH,CACJ,CAp7BkB,CAEf,MAAKO,KAAL,CAAc,CACVD,cAAc,CAAE,EADN,CAEVyE,KAAK,CAAE,EAFG,CAGVX,qBAAqB,CAAE,EAHb,CAIV0C,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAJF,CAKV3H,IAAI,CAAE,CALI,CAMVC,IAAI,CAAE,MAAKL,KAAL,CAAWgC,KAAX,CAAiBgG,QAAjB,CAA4B,MAAKhI,KAAL,CAAWgC,KAAX,CAAiBgG,QAAjB,CAA0B,CAA1B,CAA5B,CAA2D,EANvD,CAAd,CAQA,MAAKxF,SAAL,CAAiBhG,KAAK,CAACyL,SAAN,EAAjB,CACA,MAAKC,eAAL,CAAuB,CAAC,WAAD,CAAc,cAAd,CAA8B,cAA9B,CAA8C,aAA9C,CAA6D,mBAA7D,CAAkF,OAAlF,CAA2F,oBAA3F,CAAvB,CAXe,aAYlB,C,6CAgBD,iBAAS,iBAEL,KAAKtH,cAAL,CAAsB,GAAIjB,CAAAA,cAAJ,EAAtB,CAEA,0BAAmD,KAAKK,KAAL,CAAWgC,KAAX,CAAiBqB,UAApE,CAAQtD,WAAR,uBAAQA,UAAR,CAAoB0F,YAApB,uBAAoBA,YAApB,CAAkC0C,YAAlC,uBAAkCA,YAAlC,CACA,sBAAgG,KAAKnI,KAAL,CAAWgC,KAA3G,CAAQqB,UAAR,mBAAQA,UAAR,CAAoBF,QAApB,mBAAoBA,QAApB,CAA8BiF,QAA9B,mBAA8BA,QAA9B,CAAwCrG,aAAxC,mBAAwCA,aAAxC,CAAuDsG,aAAvD,mBAAuDA,aAAvD,CAAsEC,UAAtE,mBAAsEA,UAAtE,CAAkFC,SAAlF,mBAAkFA,SAAlF,CACA,GAAMC,CAAAA,KAAK,CAAG,KAAKjH,KAAL,CAAWuG,UAAX,CAAsBW,GAAtB,CAA0B,SAA1B,GAAwC,KAAKlH,KAAL,CAAWuG,UAAX,CAAsBY,GAAtB,CAA0B,SAA1B,EAAqCC,YAA3F,CACA,GAAMC,CAAAA,MAAM,CAAG,KAAKrH,KAAL,CAAWuG,UAAX,CAAsBW,GAAtB,CAA0B,UAA1B,GAAyC,KAAKlH,KAAL,CAAWuG,UAAX,CAAsBY,GAAtB,CAA0B,UAA1B,EAAsCC,YAA9F,CACA,GAAME,CAAAA,QAAQ,CAAG,KAAKtH,KAAL,CAAWuG,UAAX,CAAsBW,GAAtB,CAA0B,YAA1B,GAA2C,KAAKlH,KAAL,CAAWuG,UAAX,CAAsBY,GAAtB,CAA0B,YAA1B,EAAwCC,YAApG,CACA,GAAMG,CAAAA,MAAM,CAAG,KAAKvH,KAAL,CAAWuG,UAAX,CAAsBW,GAAtB,CAA0B,UAA1B,GAAyC,KAAKlH,KAAL,CAAWuG,UAAX,CAAsBY,GAAtB,CAA0B,UAA1B,EAAsCC,YAA9F,CACA,GAAMI,CAAAA,WAAW,CAAG,CAChBlE,aAAa,CAAE,YADC,CACaC,cAAc,CAAE,cAD7B,CAC6CC,eAAe,CAAE,WAD9D,CAEhBG,QAAQ,CAAE,wBAFM,CAEoBC,gBAAgB,CAAE,CAAEjC,QAAQ,CAAE,KAAKlD,KAAL,CAAWgC,KAAX,CAAiBmB,QAA7B,CAFtC,CAGhBE,UAAU,CAAE,KAAKrD,KAAL,CAAWgC,KAAX,CAAiBqB,UAHb,CAGyB6E,eAAe,CAAE,KAAKA,eAH/C,CAApB,CAKA,GAAI,KAAKlI,KAAL,CAAWgC,KAAX,CAAiBsC,SAArB,CAAgC,CAC5B,KAAK0E,eAAL,CAAuB,KAAKC,mBAAL,CAAyB,KAAKjJ,KAAL,CAAWgC,KAAX,CAAiB2C,UAA1C,CAAsD,KAAKpD,KAAL,CAAWD,cAAjE,CAAiF,KAAKtB,KAAL,CAAWgC,KAAX,CAAiBxB,SAAlG,CAAvB,CACH,CACD,GAAM0I,CAAAA,cAAc,CAAG,KAAK3H,KAAL,CAAW4H,UAAX,EAAyB,EAAhD,CACA,mBACI,qDAEI,2BAAK,SAAS,CAAC,4DAAf,EACKD,cAAc,CAACE,MAAf,CAAwB,CAAxB,cACG,oBAAC,KAAD,EAAO,GAAG,CAAE,EAAZ,eACI,oBAAC,mBAAD,EAAqB,cAAc,CAAEF,cAArC,EADJ,CADH,CAGc,EAJnB,cAMI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,oBAAC,UAAD,EACI,UAAU,CAAE7F,UADhB,CAEI,UAAU,CAAE,KAAKrD,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAFhB,CAGI,UAAU,CAAEmH,YAAY,EAAIpI,WAHhC,CAII,eAAe,CAAE,yBAACoE,IAAD,QAAU,CAAA,MAAI,CAACnE,KAAL,CAAW5C,aAAX,CAAyB+G,IAAzB,CAA+BhB,QAA/B,CAAyCE,UAAzC,CAAV,EAJrB,CAKI,cAAc,CAAEoC,YALpB,CAMI,eAAe,CAAC,WANpB,CAOI,SAAS,CAAC,WAPd,CAQI,UAAU,CAAC,mBARf,CASI,WAAW,CAAC,oBAThB,CAUI,SAAS,CAAE,2BAAM,CAAA,MAAI,CAACzF,KAAL,CAAW3C,OAAX,CAAmB,QAAnB,CAA6BoI,YAA7B,CAA2CtC,QAA3C,CAAqDqF,KAArD,CAA4D,MAAI,CAACjH,KAAL,CAAWgB,mBAAvE,CAAN,EAVf,CAWI,gBAAgB,CAAE,KAAKvC,KAAL,CAAWvC,gBAXjC,CAYI,WAAW,CAAEsL,WAZjB,CAaI,qBAAqB,CAAE,KAAKxH,KAAL,CAAW6D,qBAbtC,CAcI,KAAK,CAAEoD,KAdX,CAeI,SAAS,CAAE,KAAKhG,SAfpB,CAgBI,UAAU,CAAE,KAAKqF,UAhBrB,CAiBI,mBAAmB,CAAE,KACrB;AACA;AACA;AApBJ,CAqBI,UAAU,CAAE,KAAKnF,UArBrB,CAsBI,WAAW,CAAE,KAAKG,WAtBtB,CAuBI,cAAc,CAAE,KAAKC,cAvBzB,CAwBI,cAAc,CAAE,IAxBpB,CAyBI,UAAU,CAAE,KAAK9C,KAAL,CAAWgC,KAAX,CAAiBW,UAzBjC,CA0BI,eAAe,CAAE,CACb,CACI,8BACI,oBAAC,kBAAD,EACI,kBAAkB,CAAE,KAAKpB,KAAL,CAAW+B,kBAAX,EAAiC,EADzD,CAEI,mBAAmB,CAAE,KAAK/B,KAAL,CAAWgB,mBAAX,EAAkC,EAF3D,CAGI,aAAa,CAAE,KAAKrB,aAHxB,EAFR,CADa,CA1BrB,EADJ,CADJ,cAwCI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,EACKnB,WAAU,EAAIA,WAAU,CAACqJ,MAAX,CAAoB,CAAlC,EAAuC3D,YAAvC,EAAuDyB,MAAM,CAACG,MAAP,CAAc5B,YAAd,EAA4B2D,MAA5B,CAAqC,CAA5F,cACG,oBAAC,YAAD,EAAc,SAAS,CAAC,oBAAxB,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,eACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,YAAD,EAAc,KAAK,CAAC,QAApB,CAA6B,cAAc,CAAC,OAA5C,EADJ,cAEI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,EACK3D,YAAY,CAAC4D,SADlB,CAFJ,cAKI,oBAAC,IAAD,CAAM,QAAN,mBAGI,2BAAK,SAAS,CAAC,yBAAf,eACI,0BAAI,SAAS,CAAC,+BAAd,eACI,oBAAC,UAAD,EAAY,SAAS,4BAAsB5D,YAAY,CAAC6D,kBAAb,GAAoC,CAApC,CAAwC,iBAAxC,CAA4D,mBAAlF,gBAArB,EACK7D,YAAY,CAAC6D,kBAAb,GAAoC,CAApC,eAAyC,oBAAC,eAAD,EAAiB,IAAI,CAAEpK,OAAvB,EAD9C,CAEKuG,YAAY,CAAC8D,kBAFlB,CADJ,cAKI,oBAAC,UAAD,EAAY,SAAS,sBAAgB9D,YAAY,CAAC+D,WAAb,GAA6B,EAA7B,CAAkC,iBAAlC,CAAsD,eAAtE,gBAArB,EACK/D,YAAY,CAACgE,WADlB,CALJ,CADJ,cAaI,2BAAK,SAAS,CAAC,UAAf,eAOI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,kCAApB,CAAuD,IAAI,CAAC,cAA5D,CACI,MAAM,CAAE,KAAKlI,KAAL,CAAW6D,qBAAX,CAAiCsE,OAAjC,CAAyCd,MAAzC,IAAqD,CAAC,CADlE,CAEI,WAAU,KAAK5I,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAFd,CAGI,WAAS,mBAHb,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAChB,KAAL,CAAW3C,OAAX,CAAmB,QAAnB,CAA6BoI,YAA7B,CAA2CtC,QAA3C,CAAqDyF,MAArD,CAA6D,MAAI,CAACrH,KAAL,CAAWgB,mBAAxE,CAAN,EAJb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAEvD,WAAvB,EALJ,CAPJ,cAcI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,oDAApB,CAAyE,IAAI,CAAC,gBAA9E,CACI,WAAU,KAAKgB,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,YAAN,CAA9B,CADd,CAEI,WAAS,mBAFb,CAGI,MAAM,CAAE,KAAKO,KAAL,CAAW6D,qBAAX,CAAiCsE,OAAjC,CAAyCb,QAAzC,IAAuD,CAAC,CAHpE,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACvI,aAAL,CAAmBmF,YAAnB,CAAiC,QAAjC,CAA2CoD,QAA3C,CAAqD,YAArD,CAAmE,WAAnE,CAAN,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAE9J,UAAvB,EANJ,CAdJ,cAgCI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,mCAApB,CAAwD,IAAI,CAAC,cAA7D,CACI,MAAM,CAAE,KAAKwC,KAAL,CAAW6D,qBAAX,CAAiCsE,OAAjC,CAAyCZ,MAAzC,IAAqD,CAAC,CADlE,CAEI,WAAU,KAAK9I,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,UAAN,CAA9B,CAFd,CAGI,WAAS,mBAHb,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAChB,KAAL,CAAW3C,OAAX,CAAmB,MAAnB,CAA2BoI,YAA3B,CAAyCtC,QAAzC,CAAmD2F,MAAnD,CAA2D,MAAI,CAACvH,KAAL,CAAWgB,mBAAtE,CAAN,EAJb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAEtD,MAAvB,EALJ,CAhCJ,CAbJ,CAHJ,CALJ,CADJ,cAoEI,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,kBAArB,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,oBAAC,SAAD,mBACI,oBAAC,SAAD,MAAY,KAAKe,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CAAZ,CADJ,cAEI,oBAAC,YAAD,MAAeyE,YAAY,CAACkE,YAA5B,CAFJ,CADJ,CADJ,cAOI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,oBAAC,SAAD,mBACI,oBAAC,SAAD,MAAY,KAAK3J,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,mBAAN,CAA9B,CAAZ,CADJ,cAEI,oBAAC,YAAD,MAAeyE,YAAY,CAACmE,YAA5B,CAFJ,CADJ,CAPJ,CAcK,KAAK5J,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BwG,aAA5B,EAA6C,KAAK7J,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BwG,aAA5B,CAA0CT,MAA1C,CAAmD,CAAhG,EAAqG,KAAKpJ,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BwG,aAA5B,CAA0C,CAA1C,EAA6CC,kBAA7C,GAAoE,CAAzK,eACG,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACI,oBAAC,SAAD,mBACI,oBAAC,SAAD,MAAY,KAAK9J,KAAL,CAAWc,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,WAAN,CAA9B,CAAZ,CADJ,cAEI,oBAAC,YAAD,MAAeyE,YAAY,CAACsE,KAA5B,CAFJ,CADJ,CAfR,CADJ,cAiCI,oBAAC,QAAD,EACI,aAAa,CAAE,KAAK/J,KAAL,CAAWgC,KAAX,CAAiBgI,aADpC,CAEI,UAAU,CAAE1B,UAFhB,CAGI,SAAS,CAAEC,SAHf,CAII,QAAQ,CAAE,KAAKvI,KAAL,CAAWgC,KAAX,CAAiBmB,QAJ/B,CAKI,aAAa,CAAEpB,aAAa,EAAI,EALpC,CAMI,aAAa,CAAEsG,aAAa,EAAI,EANpC,CAOI,WAAW,CAAE,KAAKrI,KAAL,CAAWgC,KAAX,CAAiBiI,WAAjB,EAAgC,EAPjD,CAQI,SAAS,CAAE,KAAKjK,KAAL,CAAWgC,KAAX,CAAiBkI,SARhC,CASI,UAAU,CAAE7G,UAThB,CAUI,UAAU,CAAE,KAAKrD,KAAL,CAAWgC,KAAX,CAAiBe,UAVjC,CAWI,UAAU,CAAE,KAAKxB,KAAL,CAAWuG,UAX3B,CAYI,qBAAqB,CAAE,KAAKvG,KAAL,CAAW6D,qBAZtC,CAaI,WAAW,CAAE,KAAKpF,KAAL,CAAWgC,KAAX,CAAiBoD,qBAblC,CAcI,UAAU,CAAE,KAAKpF,KAAL,CAAWgC,KAAX,CAAiBsD,UAdjC,CAeI,cAAc,CAAE,KAAKtF,KAAL,CAAWgC,KAAX,CAAiBmI,cAfrC,CAgBI,gBAAgB,CAAE,KAAKnK,KAAL,CAAWgC,KAAX,CAAiBoI,gBAhBvC,CAiBI,SAAS,CAAE,KAAKpK,KAAL,CAAWgC,KAAX,CAAiBxB,SAjBhC,CAkBI,UAAU,CAAE,KAAKR,KAAL,CAAWgC,KAAX,CAAiB2C,UAlBjC,CAmBI,cAAc,CAAE,KAAK3E,KAAL,CAAWgC,KAAX,CAAiBV,cAnBrC,CAoBI,SAAS,CAAE,KAAKtB,KAAL,CAAWgC,KAAX,CAAiBqC,SApBhC,CAqBI,YAAY,CAAE,KAAKrE,KAAL,CAAWgC,KAAX,CAAiBvB,YArBnC,CAsBI,UAAU,CAAE,KAAKT,KAAL,CAAW7C,UAtB3B,CAuBI,yBAAyB,CAAE,KAAK6C,KAAL,CAAWnC,yBAvB1C,CAwBI,gBAAgB,CAAE,KAAKmC,KAAL,CAAWlC,gBAxBjC,CAyBI,cAAc,CAAE,KAAKkC,KAAL,CAAWpC,cAzB/B,CA0BI,UAAU,CAAE,KAAKoC,KAAL,CAAWjC,UA1B3B,CA2BI,qBAAqB,CAAE,KAAKiC,KAAL,CAAWxC,qBA3BtC,CA4BI,YAAY,CAAE,KAAKwC,KAAL,CAAWtC,YA5B7B,CA6BI,YAAY,CAAE,KAAKuD,YA7BvB,CA8BI,cAAc,CAAE,KAAKjB,KAAL,CAAWzC,cA9B/B,CA+BI,WAAW,CAAE,KAAKyC,KAAL,CAAW1C,WA/B5B,CAgCI,uBAAuB,CAAE,KAAK0C,KAAL,CAAWrC,uBAhCxC,CAiCI,WAAW,CAAE,KAAKqC,KAAL,CAAW/B,WAjC5B,CAkCI,cAAc,CAAE,KAAK+B,KAAL,CAAW9B,cAlC/B,CAmCI,QAAQ,CAAI,KAAK8B,KAAL,CAAWgC,KAAX,CAAiBgG,QAnCjC,CAoCI,8BAA8B,CAAE,KAAKhI,KAAL,CAAW7B,8BApC/C,EAjCJ,CApEJ,CADJ,CADH,CAiJK,EAlJV,CAxCJ,CANJ,CAFJ,CA0MK,KAAK6B,KAAL,CAAWgC,KAAX,CAAiBsC,SAAjB,EAA8B,KAAKtE,KAAL,CAAWgC,KAAX,CAAiBxB,SAA/C,EAA4D,KAAKR,KAAL,CAAWgC,KAAX,CAAiBe,UAA7E,eACG,oBAAC,aAAD,EACI,IAAI,CAAE,KAAK/C,KAAL,CAAWgC,KAAX,CAAiBsC,SAD3B,CAEI,UAAU,CAAE,KAAKF,UAFrB,CAGI,SAAS,CAAE,KAAKpE,KAAL,CAAWgC,KAAX,CAAiBxB,SAHhC,CAII,UAAU,CAAE,KAAKR,KAAL,CAAWgC,KAAX,CAAiBe,UAJjC,CAKI,UAAU,CAAE,KAAK/C,KAAL,CAAWgC,KAAX,CAAiB2C,UALjC,CAMI,WAAW,CAAE,KAAKiB,UANtB,CAOI,KAAK,CAAE,KAAK5F,KAAL,CAAWgC,KAAX,CAAiBqC,SAP5B,CAQI,aAAa,CAAE,KAAKqD,aARxB,CASI,cAAc,CAAE,KAAKnG,KAAL,CAAWD,cAAX,EAA6B,EATjD,CAUI,eAAe,CAAE,KAAK0H,eAAL,EAAwB,EAV7C,CAWI,YAAY,CAAE,KAAKhJ,KAAL,CAAWgC,KAAX,CAAiBqC,SAAjB,cACV,oBAAC,KAAD,EACI,SAAS,CAAE,KAAKrE,KAAL,CAAWgC,KAAX,CAAiBxB,SADhC,CAEI,eAAe,CAAE,KAAKgD,oBAF1B,CAGI,UAAU,CAAE,KAAKxD,KAAL,CAAWgC,KAAX,CAAiBe,UAHjC,CAII,cAAc,CAAE,KAAKxB,KAAL,CAAWD,cAAX,EAA6B,EAJjD,EADU,cAOR,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,KAAKtB,KAAL,CAAWgC,KAAX,CAAiBqI,aAAjB,CAAiC,GAAjC,CAAuC,IAAhD,eACI,oBAAC,OAAD,EACI,cAAc,CAAE,KAAK9I,KAAL,CAAWD,cAAX,EAA6B,EADjD,CAEI,eAAe,CAAE,KAAKuC,eACtB;AAHJ,CAII,oBAAoB,CAAE,KAAKG,oBAJ/B,CAKI,aAAa,CAAE,KAAK9C,aALxB,CAMI,QAAQ,CAAEkH,QANd,CAOI,aAAa,CAAEC,aAPnB,CAQI,aAAa,CAAE,KAAKrI,KAAL,CAAWgC,KAAX,CAAiBqI,aARpC,EADJ,CADF,CAaG,KAAKrK,KAAL,CAAWgC,KAAX,CAAiBqI,aAAjB,eACG,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,YAAD,EACI,cAAc,CAAE,KAAK9I,KAAL,CAAWD,cAAX,EAA6B,EADjD,CAEI,eAAe,CAAE,KAAKuC,eAF1B,CAGI,oBAAoB,CAAE,KAAKG,oBAH/B,CAII,aAAa,CAAE,KAAK9C,aAJxB,CAKI,aAAa,CAAEa,aALnB,EADJ,CAdN,CAlBV,EA3MR,CADJ,CA6PH,C,mCAeD,6BAAoB4C,UAApB,CAAgCrD,cAAhC,CAAgDd,SAAhD,CAA2D,CACvD,GAAImE,UAAU,GAAK,UAAnB,CAA+B,CAC3B,GAAIqE,CAAAA,eAAe,CAAG,CAClB,CAAE,UAAW,kBAAb,CAAiC,YAAa,mBAA9C,CAAmE,QAAS,OAA5E,CAAqF,YAAa,IAAlG,CAAwG,iBAAiB,YAAzH,CAAuI,cAAe,WAAtJ,CADkB,CAElB,CAAE,UAAW,cAAb,CAA6B,YAAa,WAA1C,CAAuD,QAAS,OAAhE,CAAyE,YAAa,IAAtF,CAA6F,iBAAiB,WAA9G,CAA2H,cAAe,SAA1I,CAFkB,CAGlB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CAA+E,YAAa,IAA5F,CAAkG,iBAAiB,WAAnH,CAAgI,cAAe,SAA/I,CAHkB,CAAtB,CAKA,GAAIxI,SAAS,GAAK,QAAlB,CAA4B,CACxBwI,eAAe,CAACxC,IAAhB,CACI,CAAE,UAAW,aAAb,CAA4B,YAAa,cAAzC,CAAyD,QAAS,OAAlE,CAA2E,YAAa,IAAxF,CAA8F,iBAAiB,YAA/G,CAA6H,cAAe,WAA5I,CADJ,CAEI,CAAE,UAAW,mBAAb,CAAkC,YAAa,gBAA/C,CAAiE,QAAS,OAA1E,CAAmF,YAAa,IAAhG,CAAsG,iBAAiB,WAAvH,CAAoI,cAAe,SAAnJ,CAFJ,CAGI,CAAE,UAAW,sBAAb,CAAqC,YAAa,mBAAlD,CAAuE,QAAS,OAAhF,CAAyF,YAAa,IAAtG,CAA4G,iBAAiB,WAA7H,CAA0I,cAAe,SAAzJ,CAHJ,CAII,CAAE,UAAW,mBAAb,CAAkC,YAAa,oBAA/C,CAAqE,QAAS,OAA9E,CAAuF,YAAa,IAApG,CAA2G,iBAAiB,YAA5H,CAA0I,cAAe,WAAzJ,CAJJ,EAMA,GAAIlF,cAAc,EAAI4F,MAAM,CAACG,MAAP,CAAc/F,cAAd,EAA8B8H,MAA9B,CAAuC,CAAzD,EAA8D9H,cAAc,CAAC,oBAAD,CAAhF,CAAwG,CACpG,GAAIA,cAAc,CAAC,oBAAD,CAAd,CAAqCE,KAArC,GAA+C/B,aAAa,CAAC6K,OAAjE,CAA0E,CACtEtB,eAAe,CAACxC,IAAhB,CACI,CAAE,UAAW,oBAAb,CAAmC,YAAa,iBAAhD,CAAmE,QAAS,OAA5E,CAAqF,YAAa,IAAlG,CAAwG,iBAAiB,WAAzH,CAAsI,cAAe,SAArJ,CADJ,CAEI,CAAE,UAAW,UAAb,CAAyB,YAAa,WAAtC,CAAmD,QAAS,OAA5D,CAAqE,YAAa,IAAlF,CAAyF,iBAAiB,YAA1G,CAAwH,cAAe,WAAvI,CAFJ,EAIH,CALD,IAKO,IAAIlF,cAAc,CAAC,oBAAD,CAAd,CAAqCE,KAArC,GAA+C/B,aAAa,CAAC8K,UAAjE,CAA6E,CAChFvB,eAAe,CAACxC,IAAhB,CACI,CAAE,UAAW,iBAAb,CAAgC,YAAa,iBAA7C,CAAgE,QAAS,OAAzE,CAAkF,YAAa,IAA/F,CAAqG,iBAAiB,WAAtH,CAAmI,cAAe,SAAlJ,CADJ,CAEI,CAAE,UAAW,kBAAb,CAAiC,YAAa,YAA9C,CAA4D,QAAS,OAArE,CAA8E,YAAa,IAA3F,CAAkG,iBAAiB,YAAnH,CAAiI,cAAe,WAAhJ,CAFJ,EAIH,CACJ,CAEJ,CACDwC,eAAe,CAACjC,OAAhB,CAAwB,SAAAxG,IAAI,QAAIA,CAAAA,IAAI,CAACiK,SAAL,GAAmB,IAAnB,EAA2BxB,eAAe,CAACxC,IAAhB,CAAqBjG,IAArB,CAA/B,EAA5B,EACA,MAAOyI,CAAAA,eAAP,CACH,CA9BD,IA8BO,CACH,MAAO,EAAP,CACH,CACJ,C,kCAylBD,4BAAmByB,aAAnB,CAAkC,CAC9B,GAAIC,CAAAA,kBAAkB,CAAG,KAAzB,CACA,GAAIpJ,CAAAA,cAAc,CAAG,KAAKC,KAAL,CAAWD,cAAX,EAA6B,EAAlD,CACA,GAAI,KAAKtB,KAAL,CAAWgC,KAAX,CAAiBV,cAAjB,GAAoCmJ,aAAa,CAACzI,KAAd,CAAoBV,cAA5D,CAA4E,CACxEA,cAAc,CAAG,KAAKtB,KAAL,CAAWgC,KAAX,CAAiBV,cAAlC,CACAoJ,kBAAkB,CAAG,IAArB,CACH,CAED,GAAItF,CAAAA,qBAAqB,CAAG,KAAK7D,KAAL,CAAW6D,qBAAX,EAAoC,EAAhE,CACA,GAAI0C,CAAAA,UAAU,CAAG,KAAKvG,KAAL,CAAWuG,UAAX,EAAyB,GAAIC,CAAAA,GAAJ,EAA1C,CACA,GAAI,KAAK/H,KAAL,CAAWgC,KAAX,CAAiBmB,QAAjB,EAA6B,KAAKnD,KAAL,CAAWgC,KAAX,CAAiBmB,QAAjB,CAA0BkC,SAA1B,GAAwCoF,aAAa,CAACzI,KAAd,CAAoBmB,QAApB,CAA6BkC,SAAtG,CAAiH,CAC7G,GAAMsF,CAAAA,SAAS,CAAG,KAAK3K,KAAL,CAAWgC,KAAX,CAAiBmB,QAAjB,CAA0BkC,SAA5C,CACA,GAAI,KAAKrF,KAAL,CAAWgC,KAAX,CAAiBoD,qBAArB,CAA4C,CACxC,KAAKpF,KAAL,CAAWgC,KAAX,CAAiBoD,qBAAjB,CAAuCuF,SAAvC,GAAqDzD,MAAM,CAACG,MAAP,CAAc,KAAKrH,KAAL,CAAWgC,KAAX,CAAiBoD,qBAAjB,CAAuCuF,SAAvC,CAAd,EAAiErD,GAAjE,CAAqE,SAAA/G,IAAI,QAC1H6E,CAAAA,qBAAqB,CAACoB,IAAtB,CAA2BjG,IAAI,CAACoI,YAAhC,CAD0H,EAAzE,CAArD,CAEH,CACDb,UAAU,CAAGpJ,aAAa,CAAC,KAAKsB,KAAL,CAAWgC,KAAX,CAAiBoD,qBAAlB,CAAyCuF,SAAzC,CAA1B,CACAD,kBAAkB,CAAG,IAArB,CACH,CACD,GAAInI,CAAAA,mBAAmB,CAAG,KAAKhB,KAAL,CAAWgB,mBAAX,EAAkC,EAA5D,CACA,GAAIe,CAAAA,kBAAkB,CAAG,KAAK/B,KAAL,CAAW+B,kBAAX,EAAiC,EAA1D,CAEA,GAAI,KAAKtD,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BC,kBAA5B,GAAmDmH,aAAa,CAACzI,KAAd,CAAoBqB,UAApB,CAA+BC,kBAAtF,CAA0G,CACtG,GAAMsH,CAAAA,eAAe,CAAGhM,mBAAmB,CAAC,KAAKoB,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BC,kBAA5B,EAAkD,EAAnD,CAAuD,mBAAvD,CACvC,mBADuC,CAClB,mBADkB,CACG,WADH,CACgB,KADhB,CAA3C,CAEAA,kBAAkB,CAAGsH,eAAe,CAAClC,GAAhB,CAAoB,YAApB,CAArB,CACA,GAAIkC,eAAe,CAAClC,GAAhB,CAAoB,cAApB,CAAJ,CAAyC,CACrCnG,mBAAmB,CAAGqI,eAAe,CAAClC,GAAhB,CAAoB,cAApB,CAAtB,CACH,CAFD,IAEO,IAAIpF,kBAAkB,EAAIA,kBAAkB,CAAC8F,MAAnB,CAA4B,CAAtD,CAAyD,CAC5D7G,mBAAmB,CAAGe,kBAAkB,CAAC,CAAD,CAAxC,CACH,CACDoH,kBAAkB,CAAG,IAArB,CACH,CAVD,IAUO,IAAI,KAAK1K,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4Bd,mBAA5B,GAAoDkI,aAAa,CAACzI,KAAd,CAAoBqB,UAApB,CAA+Bd,mBAAvF,CAA4G,CAC/GA,mBAAmB,CAAG,KAAKvC,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4Bd,mBAAlD,CACAmI,kBAAkB,CAAG,IAArB,CACH,CACD,GAAIA,kBAAJ,CAAwB,CACpB,KAAKvK,QAAL,CAAc,CAAEoC,mBAAmB,CAAnBA,mBAAF,CAAuB6C,qBAAqB,CAArBA,qBAAvB,CAA8C0C,UAAU,CAAVA,UAA9C,CAA0DxG,cAAc,CAAdA,cAA1D,CAA0EgC,kBAAkB,CAAlBA,kBAA1E,CAAd,EACH,CACD,GAAI,KAAKtD,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,GAAgCoH,aAAa,CAACzI,KAAd,CAAoBqB,UAAxD,CAAoE,CAChE,GAAM8F,CAAAA,UAAU,CAAG,KAAK0B,qBAAL,EAAnB,CACA,KAAK1K,QAAL,CAAc,CAAEgJ,UAAU,CAAVA,UAAF,CAAd,EACH,CACJ,C,qCAED,gCAAwB,CACpB,GAAMD,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAI,KAAKlJ,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,EAA+B,KAAKrD,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4BC,kBAA/D,CAAmF,CAE/E4F,cAAc,CAAC1C,IAAf,CACI,CACI,QAAS,kBADb,CAEI,QAAS,KAAKxG,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4ByH,eAA5B,CAA8C,KAAK9K,KAAL,CAAWgC,KAAX,CAAiBqB,UAAjB,CAA4ByH,eAA5B,CAA4CC,iBAA1F,CAA8G,IAF3H,CADJ,EAMH,CACD,MAAO7B,CAAAA,cAAP,CACH,C,oCAGD,+BAAuB,CACnB,GAAMtG,CAAAA,UAAU,CAAG,CACfP,QAAQ,CAAE9C,cADK,CAEf+C,IAAI,CAAE,CACFe,UAAU,CAAE,EADV,CACcN,UAAU,CAAE8C,SAD1B,CACqCrF,SAAS,CAAE,IADhD,CACsDG,SAAS,CAAEkF,SADjE,CAEFuC,QAAQ,CAAE,EAFR,CAEYrG,aAAa,CAAE,EAF3B,CAE+BsG,aAAa,CAAE,EAF9C,CAEkD4B,WAAW,CAAE,EAF/D,CAFS,CAAnB,CAOA,KAAKjK,KAAL,CAAW1C,WAAX,CAAuBsF,UAAvB,EACH,C,0CA7+BD,kCAAgC5C,KAAhC,CAAuCuB,KAAvC,CAA8C,CAC1C,GAAIvB,KAAK,CAACgC,KAAN,CAAYgJ,YAAZ,GAA6B,EAAjC,CAAqC,CACjC,GAAIhL,KAAK,CAACgC,KAAN,CAAYiJ,SAAZ,GAA0B,GAA1B,EAAiCjL,KAAK,CAACgC,KAAN,CAAYiJ,SAAZ,GAA0B,GAA/D,CAAoE,CAChE3M,KAAK,CAACiF,IAAN,CAAWvD,KAAK,CAACgC,KAAN,CAAYgJ,YAAvB,EACAhL,KAAK,CAACgC,KAAN,CAAYgJ,YAAZ,CAA2B,EAA3B,CACH,CACJ,CACD,GAAIhL,KAAK,CAACgC,KAAN,CAAY+D,KAAZ,GAAsBxE,KAAK,CAACwE,KAAhC,CAAuC,CACnCzH,KAAK,CAACyH,KAAN,CAAY/F,KAAK,CAACgC,KAAN,CAAY+D,KAAxB,EACA/F,KAAK,CAACgC,KAAN,CAAY+D,KAAZ,CAAoB,EAApB,CACH,CACD,MAAO,KAAP,CACH,C,wBA5BoBtJ,S,EAigCzB,GAAMyO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC3J,KAAD,CAAW,CAC/B,MAAO,CACHS,KAAK,CAAET,KAAK,CAACS,KADV,CAAP,CAGH,CAJD,CAMA,cAAehF,CAAAA,OAAO,CAACkO,eAAD,CAAkB,CACpChO,WAAW,CAAXA,WADoC,CACvBC,UAAU,CAAVA,UADuB,CACXC,aAAa,CAAbA,aADW,CACIC,OAAO,CAAPA,OADJ,CACaC,WAAW,CAAXA,WADb,CAC0BE,qBAAqB,CAArBA,qBAD1B,CAEpCC,gBAAgB,CAAhBA,gBAFoC,CAElBF,cAAc,CAAdA,cAFkB,CAEFG,YAAY,CAAZA,YAFE,CAEYC,uBAAuB,CAAvBA,uBAFZ,CAEqCC,cAAc,CAAdA,cAFrC,CAEqDC,yBAAyB,CAAzBA,yBAFrD,CAGpCC,gBAAgB,CAAhBA,gBAHoC,CAGlBC,UAAU,CAAVA,UAHkB,CAGNC,wBAAwB,CAAxBA,wBAHM,CAGoBC,WAAW,CAAXA,WAHpB,CAGiCC,cAAc,CAAdA,cAHjC,CAGgDC,8BAA8B,CAA9BA,8BAHhD,CAAlB,CAAP,CAIZE,UAAU,CAAC0B,UAAD,CAJE,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport rsapi from '../../rsapi';\r\n\r\nimport {\r\n    callService, crudMaster, getTestMaster, addTest, updateStore, getTestDetails, formulaChangeFunction, filterColumnData,\r\n    addParameter, validateEsignCredential, addCodedResult, addParameterSpecification, getAvailableData, addFormula,\r\n    changeTestCategoryFilter, addTestFile, viewAttachment,getActiveTestContainerTypeById\r\n} from '../../actions'\r\nimport TestView from './TestView';\r\nimport { injectIntl } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport AddParameter from './AddParameter'\r\nimport AddTest from '../../pages/testmanagement/AddTest'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { getControlMap, showEsign, constructOptionList } from '../../components/CommonScript';\r\nimport TestCategoryFilter from './TestCategoryFilter';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { faTrashAlt, faPencilAlt, faCopy, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nclass TestMaster extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            take: this.props.Login.settings ? this.props.Login.settings[3] : 25\r\n        });\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"stestname\", \"stestsynonym\", \"sdescription\", \"saccredited\", \"stestcategoryname\", \"ncost\", \"stransactionstatus\"]\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        const { TestMaster, SelectedTest, searchedData } = this.props.Login.masterData;\r\n        const { masterData, userInfo, testData, parameterData, otherTestData, linkMaster, editFiles } = this.props.Login;\r\n        const addId = this.state.controlMap.has(\"AddTest\") && this.state.controlMap.get(\"AddTest\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditTest\") && this.state.controlMap.get(\"EditTest\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteTest\") && this.state.controlMap.get(\"DeleteTest\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"CopyTest\") && this.state.controlMap.get(\"CopyTest\").ncontrolcode;\r\n        const filterParam = {\r\n            inputListName: \"TestMaster\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestcode\",\r\n            fetchUrl: \"testmaster/getTestById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        if (this.props.Login.openModal) {\r\n            this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n        }\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* Start of get display */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md=\"4\">\r\n                            <ListMaster\r\n                                masterData={masterData}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                masterList={searchedData || TestMaster}\r\n                                getMasterDetail={(test) => this.props.getTestMaster(test, userInfo, masterData)}\r\n                                selectedMaster={SelectedTest}\r\n                                primaryKeyField=\"ntestcode\"\r\n                                mainField=\"stestname\"\r\n                                firstField=\"stestcategoryname\"\r\n                                secondField=\"stransactionstatus\"\r\n                                openModal={() => this.props.addTest(\"create\", SelectedTest, userInfo, addId, this.state.nfilterTestCategory)}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                needAccordianFilter={false}\r\n                                //skip={this.state.skip}\r\n                                //take={this.state.take}\r\n                                //handlePageChange={this.handlePageChange}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_TESTFILTER\":\r\n                                            <TestCategoryFilter\r\n                                                filterTestCategory={this.state.filterTestCategory || []}\r\n                                                nfilterTestCategory={this.state.nfilterTestCategory || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            {TestMaster && TestMaster.length > 0 && SelectedTest && Object.values(SelectedTest).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {SelectedTest.stestname}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                {/* <Row>\r\n                                                <Col md={8}> */}\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <MediaLabel className={`btn btn-outlined ${SelectedTest.ntransactionstatus === 1 ? \"outline-success\" : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                            {SelectedTest.ntransactionstatus === 1 && <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>}\r\n                                                            {SelectedTest.stransactionstatus}\r\n                                                        </MediaLabel>\r\n                                                        <MediaLabel className={`btn-normal ${SelectedTest.naccredited === 70 ? \"outline-success\" : \"normal-danger\"} btn-sm mr-3`}>\r\n                                                            {SelectedTest.saccredited}\r\n                                                        </MediaLabel>\r\n                                                    </h2>\r\n                                                    {/* </Col>\r\n                                                <Col md=\"4\"> */}\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <div className=\"d-inline\">\r\n                                                        {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                                                        {/* Start Here */}\r\n                                                        {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\" >  \r\n                                                            <FontAwesomeIcon icon={faEye} className=\"ActionIconColor\" onClick={(e)=>this.viewAdditionalInfo(e)} />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* End Here */}\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.props.addTest(\"update\", SelectedTest, userInfo, editId, this.state.nfilterTestCategory)}>\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletetestname\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(SelectedTest, \"delete\", deleteId, \"TestMaster\", \"openModal\")}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            {/* <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    handleClickDelete={() => this.deleteAction(SelectedTest, \"delete\", deleteId, \"TestMaster\", \"openModal\")}\r\n                                                                /> */}\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" name=\"copytestname\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.props.addTest(\"copy\", SelectedTest, userInfo, copyId, this.state.nfilterTestCategory)}>\r\n                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                    {/* </Tooltip> */}\r\n                                                </div>\r\n                                                {/* </Col>\r\n                                            </Row> */}\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TESTSYNONYM\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{SelectedTest.stestsynonym}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TESTPROCEDURE\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{SelectedTest.sdescription}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n                                                {this.props.Login.masterData.TestParameter && this.props.Login.masterData.TestParameter.length > 0 && this.props.Login.masterData.TestParameter[0].nparametertypecode === 1 &&\r\n                                                    <Col md=\"6\">\r\n                                                        <FormGroup>\r\n                                                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PRICE\" })}</FormLabel>\r\n                                                            <ReadOnlyText>{SelectedTest.ncost}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                }\r\n                                                {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                                                {/* Start Here */}\r\n                                                {/* <Col md=\"6\">\r\n                                                <FormGroup>\r\n                                                    <FormLabel>{ this.props.intl.formatMessage({id: \"IDS_ADDITIONALINFO\"}) }</FormLabel>\r\n                                                    <ReadOnlyText>{ selectedTest.schecklistname }</ReadOnlyText>\r\n                                                </FormGroup>\r\n                                            </Col> */}\r\n                                                {/* End Here */}\r\n                                            </Row>\r\n                                            <TestView\r\n                                                isFormulaOpen={this.props.Login.isFormulaOpen}\r\n                                                linkMaster={linkMaster}\r\n                                                editFiles={editFiles}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                parameterData={parameterData || []}\r\n                                                otherTestData={otherTestData || []}\r\n                                                formulaData={this.props.Login.formulaData || {}}\r\n                                                dataState={this.props.Login.dataState}\r\n                                                masterData={masterData}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                esignRights={this.props.Login.userRoleControlRights}\r\n                                                screenData={this.props.Login.screenData}\r\n                                                openChildModal={this.props.Login.openChildModal}\r\n                                                showSaveContinue={this.props.Login.showSaveContinue}\r\n                                                operation={this.props.Login.operation}\r\n                                                screenName={this.props.Login.screenName}\r\n                                                selectedRecord={this.props.Login.selectedRecord}\r\n                                                loadEsign={this.props.Login.loadEsign}\r\n                                                ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                crudMaster={this.props.crudMaster}\r\n                                                addParameterSpecification={this.props.addParameterSpecification}\r\n                                                getAvailableData={this.props.getAvailableData}\r\n                                                addCodedResult={this.props.addCodedResult}\r\n                                                addFormula={this.props.addFormula}\r\n                                                formulaChangeFunction={this.props.formulaChangeFunction}\r\n                                                addParameter={this.props.addParameter}\r\n                                                deleteAction={this.deleteAction}\r\n                                                getTestDetails={this.props.getTestDetails}\r\n                                                updateStore={this.props.updateStore}\r\n                                                validateEsignCredential={this.props.validateEsignCredential}\r\n                                                addTestFile={this.props.addTestFile}\r\n                                                viewAttachment={this.props.viewAttachment}\r\n                                                settings = {this.props.Login.settings}\r\n                                                getActiveTestContainerTypeById={this.props.getActiveTestContainerTypeById}\r\n\r\n                                            ></TestView>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* End of get display */}\r\n\r\n                {/* Start of Modal Sideout for Test Creation */}\r\n                {this.props.Login.openModal && this.props.Login.operation && this.props.Login.inputParam &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveTest}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.mandatoryFields || []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <Row>\r\n                                <Col md={this.props.Login.needOtherTest ? \"6\" : \"12\"}>\r\n                                    <AddTest\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        // onActiveStatusChange={this.onActiveStatusChange}\r\n                                        onNumericInputChange={this.onNumericInputChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        testData={testData}\r\n                                        otherTestData={otherTestData}\r\n                                        needOtherTest={this.props.Login.needOtherTest}\r\n                                    ></AddTest>\r\n                                </Col>\r\n                                {this.props.Login.needOtherTest &&\r\n                                    <Col md={6}>\r\n                                        <AddParameter\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onNumericInputChange={this.onNumericInputChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            parameterData={parameterData}\r\n                                        ></AddParameter>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for Test Creation */}\r\n            </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = (event) => {\r\n        this.setState({\r\n            skip: event.skip,\r\n            take: event.take\r\n        });\r\n    }\r\n\r\n    ConfirmDelete = (item, operation, ncontrolCode, methodUrl, modalName) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteAction(item, operation, ncontrolCode, methodUrl, modalName));\r\n    }\r\n\r\n    findMandatoryFields(screenName, selectedRecord, operation) {\r\n        if (screenName === \"IDS_TEST\") {\r\n            let mandatoryFields = [\r\n                { \"idsName\": \"IDS_TESTCATEGORY\", \"dataField\": \"ntestcategorycode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ]\r\n            if (operation === \"create\") {\r\n                mandatoryFields.push(\r\n                    { \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametername\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n                );\r\n                if (selectedRecord && Object.values(selectedRecord).length > 0 && selectedRecord[\"nparametertypecode\"]) {\r\n                    if (selectedRecord[\"nparametertypecode\"].value === parameterType.NUMERIC) {\r\n                        mandatoryFields.push(\r\n                            { \"idsName\": \"IDS_ROUNDINGDIGITS\", \"dataField\": \"nroundingdigits\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                            { \"idsName\": \"IDS_UNIT\", \"dataField\": \"nunitcode\", \"width\": \"200px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                        );\r\n                    } else if (selectedRecord[\"nparametertypecode\"].value === parameterType.PREDEFINED) {\r\n                        mandatoryFields.push(\r\n                            { \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                            { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n            mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n            return mandatoryFields;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (fieldName === \"sparametername\") {\r\n                    selectedRecord[fieldName] = comboData;\r\n                    selectedRecord[\"sparametersynonym\"] = comboData ? comboData.value : \"\";\r\n                } else {\r\n                    selectedRecord[fieldName] = comboData;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                let item = comboData['item'];\r\n                let needUnit = true;\r\n                let needRoundingDigit = true;\r\n                let needCodedResult = true;\r\n                let needActualResult = true;\r\n                let npredefinedcode = transactionStatus.NO;\r\n                const parameterData = this.props.Login.parameterData;\r\n                if (item[\"nunitrequired\"] === transactionStatus.YES) {\r\n                    needUnit = false;\r\n                    selectedRecord[\"nunitcode\"] = this.props.Login.parameterData.defaultUnit;\r\n                } else {\r\n                    selectedRecord[\"nunitcode\"] = \"\";\r\n                }\r\n                if (item[\"nroundingrequired\"] === transactionStatus.YES) {\r\n                    needRoundingDigit = false;\r\n                } else {\r\n                    selectedRecord[\"nroundingdigit\"] = \"\";\r\n                }\r\n                if (item[\"npredefinedrequired\"] === transactionStatus.YES) {\r\n                    needCodedResult = false;\r\n                    npredefinedcode = item[\"npredefinedrequired\"];\r\n                } else {\r\n                    selectedRecord[\"spredefinedname\"] = \"\";\r\n                }\r\n                if (item[\"ngraderequired\"] === transactionStatus.YES) {\r\n                    needActualResult = false;\r\n                    selectedRecord[\"ngradecode\"] = this.props.Login.parameterData.defaultGrade;\r\n                } else {\r\n                    selectedRecord[\"ngradecode\"] = \"\";\r\n                }\r\n                selectedRecord[fieldName] = comboData;\r\n                const parameterInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        parameterData: {\r\n                            ...parameterData, needUnit, needRoundingDigit, needCodedResult, needActualResult, npredefinedcode\r\n                        }, selectedRecord\r\n                    }\r\n                }\r\n                this.props.updateStore(parameterInfo);\r\n\r\n                break;\r\n\r\n            case 3:\r\n                let nfilterTestCategory = this.state.nfilterTestCategory || {}\r\n                nfilterTestCategory = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.setState({ nfilterTestCategory })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.state.nfilterTestCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    ntestcategorycode: this.state.nfilterTestCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterTestCategory: this.state.nfilterTestCategory\r\n                },\r\n                classUrl: \"testmaster\",\r\n                methodUrl: \"TestMasterByCategory\"\r\n            }\r\n            this.props.changeTestCategoryFilter(inputParam, this.props.Login.masterData.filterTestCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_TESTCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    // onActiveStatusChange =(event, optional)=>{\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n    //     this.setState({ selectedRecord });\r\n    //     if (event.target.checked === false){\r\n    //        this.validateTestExistenceInTestGroup();\r\n    //     }\r\n    // }\r\n\r\n    onInputOnChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[event.target.name] = selectedRecord[\"stestsynonym\"] =\r\n                    selectedRecord[\"sparametersynonym\"] = event.target.value;\r\n                selectedRecord[\"sparametername\"] = { label: event.target.value, value: event.target.value };\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 3:\r\n                selectedRecord[event.target.name] = selectedRecord[\"sparametersynonym\"] = event.target.value;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // onNumericInputChange = (value, name) => {\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     selectedRecord[name] = value;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        console.log(\"value:\", value, name);\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (name === \"nroundingdigits\") {\r\n            \r\n            if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n                console.log(\"val:\", value.target.value);\r\n                selectedRecord[name] = value.target.value;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[name] = value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = transactionStatus.NO;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFormulaModal = () => {\r\n        this.setState({ addformula: false });\r\n    }\r\n\r\n    deleteAction = (item, operation, ncontrolCode, methodUrl, modalName) => {\r\n        const selected = item[\"dataItem\"] ? item[\"dataItem\"] : item;\r\n        const inputParam = {\r\n            inputData: {\r\n                [methodUrl.toLowerCase()]: selected,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"testmaster\",\r\n            operation: operation,\r\n            methodUrl: methodUrl,\r\n            screenName: \"IDS_TEST\",\r\n            postParam: {\r\n                inputListName: \"TestMaster\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestcode\",\r\n                primaryKeyValue: selected.ntestcode,\r\n                fetchUrl: \"testmaster/getTestById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    [modalName]: true, screenName: \"IDS_TEST\", operation: operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, modalName, {});\r\n        }\r\n    }\r\n\r\n    validateTestExistenceInTestGroup = () => {\r\n\r\n        const operation = this.props.Login.operation;\r\n        if (operation === \"update\") {\r\n            return rsapi.post(\"testmaster/validateTestExistenceInTestGroup\", {\r\n                ntestcode: this.props.Login.masterData.SelectedTest[\"ntestcode\"],\r\n                \"userinfo\": this.props.Login.userInfo\r\n            })\r\n                .then(response => {\r\n                    if (response.data === true) {\r\n                        this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_TESTEXISTSINTESTGROUP\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                            () => this.onSaveTest(null, null),\r\n                            false,\r\n                            undefined);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: error.response }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    onSaveTest = () => {\r\n        const operation = this.props.Login.operation;\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        if (operation === \"update\") {\r\n            if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.DEACTIVE) {\r\n                return rsapi.post(\"testmaster/validateTestExistenceInTestGroup\", {\r\n                    ntestcode: this.props.Login.masterData.SelectedTest[\"ntestcode\"],\r\n                    \"userinfo\": this.props.Login.userInfo\r\n                })\r\n                    .then(response => {\r\n                        if (response.data === true) {\r\n                            this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_TESTEXISTSINTESTGROUP\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                () => this.onSaveValidatedTest(null, null),\r\n                                false,\r\n                                undefined);\r\n                        }\r\n                        else {\r\n                            this.onSaveValidatedTest(null, null);\r\n                        }\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                        }\r\n                        else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: error.response }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                this.onSaveValidatedTest(null, null);\r\n            }\r\n        }\r\n        else {\r\n            this.onSaveValidatedTest(null, null);\r\n        }\r\n    }\r\n\r\n    // onSaveTest1 = (saveType, formRef) => {\r\n    //     const operation = this.props.Login.operation;\r\n    //     let inputData = {};\r\n    //     let customobject = null;\r\n    //     const userInfo = this.props.Login.userInfo;\r\n    //     const selectedRecord = this.state.selectedRecord;\r\n    //     let testColumns = [{\r\n    //         \"testmaster\": [{ \"ntestcode\": \"int\" }, { \"ntestcategorycode\": \"input\" }, { \"nchecklistversioncode\": \"input\" }, { \"naccredited\": \"int\" },\r\n    //         { \"ntransactionstatus\": \"int\" }, { \"stestname\": \"string\" }, { \"stestsynonym\": \"string\" }, { \"sdescription\": \"string\" }, { \"ncost\": \"float\" }]\r\n    //     }]\r\n    //     if (operation === \"create\") {\r\n    //         testColumns.push({\r\n    //             \"testparameter\": [{ \"ntestcode\": \"int\" }, { \"nparametertypecode\": \"input\" }, { \"nunitcode\": \"input\" }, { \"sparametername\": \"input\" },\r\n    //             { \"sparametersynonym\": \"string\" }, { \"nroundingdigits\": \"int\" }, { \"objPredefinedParameter\": \"customobject\" }]\r\n    //         });\r\n    //         inputData = {\r\n    //             \"testmaster\": {},\r\n    //             \"testparameter\": {\r\n    //                 nisadhocparameter: transactionStatus.NO,\r\n    //                 nisvisible: transactionStatus.YES,\r\n    //                 nstatus: transactionStatus.ACTIVE\r\n    //             },\r\n    //             \"testsection\": {},\r\n    //             \"testmethod\": {},\r\n    //             \"testinstrumentcategory\": {}\r\n    //         };\r\n    //         if (this.props.Login.parameterData.npredefinedcode === transactionStatus.YES) {\r\n    //             customobject = {};\r\n    //             customobject[\"spredefinedname\"] = selectedRecord[\"spredefinedname\"].trim();\r\n    //             customobject[\"nstatus\"] = transactionStatus.ACTIVE;\r\n    //             customobject[\"ndefaultstatus\"] = transactionStatus.YES;\r\n    //             customobject[\"ngradecode\"] = selectedRecord[\"ngradecode\"] ? selectedRecord[\"ngradecode\"].value ? selectedRecord[\"ngradecode\"].value : -1 : -1;\r\n    //         }\r\n    //     } else {\r\n    //         inputData = {\r\n    //             \"testmaster\": {}\r\n    //         };\r\n    //     }\r\n    //     inputData[\"userinfo\"] = userInfo;\r\n    //     inputData[\"testmaster\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n    //     inputData[\"testmaster\"][\"nsitecode\"] = userInfo.nmastersitecode;\r\n    //     testColumns.forEach(function (items) {\r\n    //         const mapkey = Object.keys(items)[0];\r\n    //         const columns = Object.values(items)[0];\r\n    //         columns.map(item => {\r\n    //             const key = Object.keys(item)[0];\r\n    //             const value = Object.values(item)[0];\r\n    //             if (value === \"input\") {\r\n    //                 return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key].value ? selectedRecord[key].value : -1 : -1;\r\n    //             } else if (value === \"int\") {\r\n    //                 return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key] : 0;\r\n    //             } else if (value === \"string\") {\r\n    //                 return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key].trim() : \"\";\r\n    //             } else if (value === \"float\") {\r\n    //                 return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key] : 0;\r\n    //             } else if (value === \"customobject\") {\r\n    //                 return inputData[mapkey][key] = customobject;\r\n    //             } else {\r\n    //                 return null;\r\n    //             }\r\n    //         });\r\n    //     });\r\n    //     let postParam = undefined;\r\n    //     if (operation === \"create\") {\r\n    //         if (selectedRecord[\"nsectioncode\"]) {\r\n    //             inputData[\"testsection\"][\"nsectioncode\"] = selectedRecord[\"nsectioncode\"].value;\r\n    //             inputData[\"testsection\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n    //             inputData[\"testsection\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n    //         }\r\n    //         if (selectedRecord[\"nmethodcode\"]) {\r\n    //             inputData[\"testmethod\"][\"nmethodcode\"] = selectedRecord[\"nmethodcode\"].value;\r\n    //             inputData[\"testmethod\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n    //             inputData[\"testmethod\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n    //         }\r\n\r\n    //         if (selectedRecord[\"ninstrumentcatcode\"]) {\r\n    //             inputData[\"testinstrumentcategory\"][\"ninstrumentcatcode\"] = selectedRecord[\"ninstrumentcatcode\"].value;\r\n    //             inputData[\"testinstrumentcategory\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n    //             inputData[\"testinstrumentcategory\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n    //         }\r\n    //     } else if (operation === \"copy\") {\r\n    //         inputData[\"testmaster\"][\"ntestcode\"] = this.props.Login.masterData.SelectedTest[\"ntestcode\"]\r\n    //     } else if (operation === \"update\") {\r\n    //         postParam = { inputListName: \"TestMaster\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestcode\" };\r\n    //     }       \r\n\r\n    //    // this.setState({ nfilterTestCategory: { \"label\": selectedRecord.ntestcategorycode.label, \"value\": selectedRecord.ntestcategorycode.value } });\r\n    //     if (operation !== \"update\") {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: { defaultkeyname: \"parametereventkey\" }\r\n    //         };\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     let valid = true;\r\n    //     // if (operation === \"update\" && (validateTest === undefined || validateTest === true)){\r\n\r\n\r\n    //     if (valid){\r\n    //         const inputParam = {\r\n    //             inputData :{...inputData, validatetest:false},\r\n    //             classUrl: \"testmaster\",\r\n    //             operation: operation,\r\n    //             methodUrl: \"TestMaster\",\r\n    //             saveType, \r\n    //             formRef, postParam, searchRef: this.searchRef\r\n    //         }\r\n    //         const masterData = this.props.Login.masterData;\r\n    //         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     loadEsign: true, screenData: { inputParam, masterData }, saveType, formRef\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         } else {\r\n    //             this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    onSaveValidatedTest = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        let inputData = {};\r\n        let customobject = null;\r\n        const userInfo = this.props.Login.userInfo;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let testColumns = [{\r\n            \"testmaster\": [{ \"ntestcode\": \"int\" }, { \"ntestcategorycode\": \"input\" }, { \"nchecklistversioncode\": \"input\" }, { \"naccredited\": \"int\" },\r\n            { \"ntransactionstatus\": \"int\" }, { \"stestname\": \"string\" }, { \"stestsynonym\": \"string\" }, { \"sdescription\": \"string\" }, { \"ncost\": \"float\" }]\r\n        }]\r\n        if (operation === \"create\") {\r\n            testColumns.push({\r\n                \"testparameter\": [{ \"ntestcode\": \"int\" }, { \"nparametertypecode\": \"input\" }, { \"nunitcode\": \"input\" }, { \"sparametername\": \"input\" },\r\n                { \"sparametersynonym\": \"string\" }, { \"nroundingdigits\": \"int\" }, { \"objPredefinedParameter\": \"customobject\" }]\r\n            });\r\n            inputData = {\r\n                \"testmaster\": {},\r\n                \"testparameter\": {\r\n                    nisadhocparameter: transactionStatus.NO,\r\n                    nisvisible: transactionStatus.YES,\r\n                    nstatus: transactionStatus.ACTIVE\r\n                },\r\n                \"testsection\": {},\r\n                \"testmethod\": {},\r\n                \"testinstrumentcategory\": {}\r\n            };\r\n            if (this.props.Login.parameterData.npredefinedcode === transactionStatus.YES) {\r\n                customobject = {};\r\n                customobject[\"spredefinedname\"] = selectedRecord[\"spredefinedname\"].trim();\r\n                customobject[\"nstatus\"] = transactionStatus.ACTIVE;\r\n                customobject[\"ndefaultstatus\"] = transactionStatus.YES;\r\n                customobject[\"ngradecode\"] = selectedRecord[\"ngradecode\"] ? selectedRecord[\"ngradecode\"].value ? selectedRecord[\"ngradecode\"].value : -1 : -1;\r\n            }\r\n        } else {\r\n            inputData = {\r\n                \"testmaster\": {}\r\n            };\r\n        }\r\n        inputData[\"userinfo\"] = userInfo;\r\n        inputData[\"testmaster\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n        inputData[\"testmaster\"][\"nsitecode\"] = userInfo.nmastersitecode;\r\n        testColumns.forEach(function (items) {\r\n            const mapkey = Object.keys(items)[0];\r\n            const columns = Object.values(items)[0];\r\n            columns.map(item => {\r\n                const key = Object.keys(item)[0];\r\n                const value = Object.values(item)[0];\r\n                if (value === \"input\") {\r\n                    return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key].value ? selectedRecord[key].value : -1 : -1;\r\n                } else if (value === \"int\") {\r\n                    return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key] : 0;\r\n                } else if (value === \"string\") {\r\n                    return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key].trim() : \"\";\r\n                } else if (value === \"float\") {\r\n                    return inputData[mapkey][key] = selectedRecord[key] ? selectedRecord[key] : 0;\r\n                } else if (value === \"customobject\") {\r\n                    return inputData[mapkey][key] = customobject;\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n        });\r\n        let postParam = undefined;\r\n        if (operation === \"create\") {\r\n            if (selectedRecord[\"nsectioncode\"]) {\r\n                inputData[\"testsection\"][\"nsectioncode\"] = selectedRecord[\"nsectioncode\"].value;\r\n                inputData[\"testsection\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n                inputData[\"testsection\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n            }\r\n            if (selectedRecord[\"nmethodcode\"]) {\r\n                inputData[\"testmethod\"][\"nmethodcode\"] = selectedRecord[\"nmethodcode\"].value;\r\n                inputData[\"testmethod\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n                inputData[\"testmethod\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n            }\r\n\r\n            if (selectedRecord[\"ninstrumentcatcode\"]) {\r\n                inputData[\"testinstrumentcategory\"][\"ninstrumentcatcode\"] = selectedRecord[\"ninstrumentcatcode\"].value;\r\n                inputData[\"testinstrumentcategory\"][\"ndefaultstatus\"] = transactionStatus.YES;\r\n                inputData[\"testinstrumentcategory\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n            }\r\n        } else if (operation === \"copy\") {\r\n            inputData[\"testmaster\"][\"ntestcode\"] = this.props.Login.masterData.SelectedTest[\"ntestcode\"]\r\n        } else if (operation === \"update\") {\r\n            postParam = { inputListName: \"TestMaster\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestcode\" };\r\n        }\r\n\r\n        this.setState({ nfilterTestCategory: { \"label\": selectedRecord.ntestcategorycode.label, \"value\": selectedRecord.ntestcategorycode.value } });\r\n        if (operation !== \"update\") {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { defaultkeyname: \"parametereventkey\" }\r\n            };\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        //  let valid = true;\r\n        // if (operation === \"update\" && (validateTest === undefined || validateTest === true)){       \r\n        // if (valid){\r\n        const inputParam = {\r\n            inputData: { ...inputData, validatetest: false },\r\n            classUrl: \"testmaster\",\r\n            operation: operation,\r\n            methodUrl: \"TestMaster\",\r\n            saveType,\r\n            formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, formRef\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n        }\r\n        // }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    reloadData = () => {\r\n        // this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"testmaster\",\r\n        //     methodUrl: \"TestMaster\",\r\n        //     userInfo: this.props.Login.userInfo,\r\n        //     displayName: \"IDS_TESTMASTER\"\r\n        // };\r\n        // this.props.callService(inputParam);\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.nfilterTestCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    ntestcategorycode: this.state.nfilterTestCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterTestCategory: this.state.nfilterTestCategory\r\n                },\r\n                classUrl: \"testmaster\",\r\n                methodUrl: \"TestMasterByCategory\"\r\n            }\r\n            this.props.changeTestCategoryFilter(inputParam, this.props.Login.masterData.filterTestCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_TESTCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let isComponentUpdated = false;\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            isComponentUpdated = true;\r\n        }\r\n\r\n        let userRoleControlRights = this.state.userRoleControlRights || [];\r\n        let controlMap = this.state.controlMap || new Map();\r\n        if (this.props.Login.userInfo && this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const nformCode = this.props.Login.userInfo.nformcode;\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[nformCode] && Object.values(this.props.Login.userRoleControlRights[nformCode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode));\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, nformCode);\r\n            isComponentUpdated = true;\r\n        }\r\n        let nfilterTestCategory = this.state.nfilterTestCategory || {};\r\n        let filterTestCategory = this.state.filterTestCategory || {};\r\n\r\n        if (this.props.Login.masterData.filterTestCategory !== previousProps.Login.masterData.filterTestCategory) {\r\n            const testCategoryMap = constructOptionList(this.props.Login.masterData.filterTestCategory || [], \"ntestcategorycode\",\r\n                \"stestcategoryname\", 'ntestcategorycode', 'ascending', false);\r\n            filterTestCategory = testCategoryMap.get(\"OptionList\");\r\n            if (testCategoryMap.get(\"DefaultValue\")) {\r\n                nfilterTestCategory = testCategoryMap.get(\"DefaultValue\");\r\n            } else if (filterTestCategory && filterTestCategory.length > 0) {\r\n                nfilterTestCategory = filterTestCategory[0];\r\n            }\r\n            isComponentUpdated = true;\r\n        } else if (this.props.Login.masterData.nfilterTestCategory !== previousProps.Login.masterData.nfilterTestCategory) {\r\n            nfilterTestCategory = this.props.Login.masterData.nfilterTestCategory;\r\n            isComponentUpdated = true;\r\n        }\r\n        if (isComponentUpdated) {\r\n            this.setState({ nfilterTestCategory, userRoleControlRights, controlMap, selectedRecord, filterTestCategory });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.filterTestCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_TESTCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.SelectedTestCat ? this.props.Login.masterData.SelectedTestCat.stestcategoryname : \"NA\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined,\r\n                testData: {}, parameterData: {}, otherTestData: {}, formulaData: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getTestMaster, addTest, updateStore, formulaChangeFunction,\r\n    filterColumnData, getTestDetails, addParameter, validateEsignCredential, addCodedResult, addParameterSpecification,\r\n    getAvailableData, addFormula, changeTestCategoryFilter, addTestFile, viewAttachment,getActiveTestContainerTypeById\r\n})(injectIntl(TestMaster));"]},"metadata":{},"sourceType":"module"}