{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\AddMaterialOpenDate.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddMaterialOpenDate = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: props.label,\n    label: props.isMultiLingualLabel ? props.intl.formatMessage({\n      id: props.label\n    }) : props.label,\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[props.label] ? new Date(props.selectedRecord[props.label]) : null,\n    dateFormat: props.dateonly === true ? props.userInfo[\"ssitedate\"] : props.timeonly ? 'HH:mm' : props.userInfo[\"ssitedatetime\"],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: props.dateonly === true ? false : true,\n    showTimeSelectOnly: props.timeonly,\n    isMandatory: props.mandatory,\n    maxDate: props.CurrentTime,\n    maxTime: props.CurrentTime,\n    onChange: date => props.handleDateChange(date, props.label),\n    value: props.selectedRecord ? props.selectedRecord[\"dcollectiondate\"] : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddMaterialOpenDate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/Material/AddMaterialOpenDate.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","injectIntl","DateTimePicker","AddMaterialOpenDate","props","label","isMultiLingualLabel","intl","formatMessage","id","selectedRecord","Date","dateonly","userInfo","timeonly","mandatory","CurrentTime","date","handleDateChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,8DAA3B;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACnC,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEA,KAAK,CAACC,KADhB;AAEI,IAAA,KAAK,EAAED,KAAK,CAACE,mBAAN,GAA4BF,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEL,KAAK,CAACC;AAAZ,KAAzB,CAA5B,GAA4ED,KAAK,CAACC,KAF7F;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,eAAe,EAAED,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJrB;AAKI,IAAA,QAAQ,EAAEL,KAAK,CAACM,cAAN,CAAqBN,KAAK,CAACC,KAA3B,IAAoC,IAAIM,IAAJ,CAASP,KAAK,CAACM,cAAN,CAAqBN,KAAK,CAACC,KAA3B,CAAT,CAApC,GAAkF,IALhG;AAMI,IAAA,UAAU,EAAED,KAAK,CAACQ,QAAN,KAAmB,IAAnB,GAA0BR,KAAK,CAACS,QAAN,CAAe,WAAf,CAA1B,GAAwDT,KAAK,CAACU,QAAN,GAAiB,OAAjB,GAA2BV,KAAK,CAACS,QAAN,CAAe,eAAf,CANnG;AAOI,IAAA,cAAc,EAAET,KAAK,CAACG,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAPpB;AAQI,IAAA,aAAa,EAAEL,KAAK,CAACQ,QAAN,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,IARrD;AASI,IAAA,kBAAkB,EAAER,KAAK,CAACU,QAT9B;AAUI,IAAA,WAAW,EAAEV,KAAK,CAACW,SAVvB;AAWI,IAAA,OAAO,EAAEX,KAAK,CAACY,WAXnB;AAYI,IAAA,OAAO,EAAEZ,KAAK,CAACY,WAZnB;AAaI,IAAA,QAAQ,EAAGC,IAAD,IAAUb,KAAK,CAACc,gBAAN,CAAuBD,IAAvB,EAA6Bb,KAAK,CAACC,KAAnC,CAbxB;AAcI,IAAA,KAAK,EAAED,KAAK,CAACM,cAAN,GAAuBN,KAAK,CAACM,cAAN,CAAqB,iBAArB,CAAvB,GAAiE,IAAIC,IAAJ,EAd5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAwCH,CAzCD;;AA0CA,eAAeV,UAAU,CAACE,mBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddMaterialOpenDate = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <DateTimePicker\r\n                    name={props.label}\r\n                    label={props.isMultiLingualLabel ? props.intl.formatMessage({ id: props.label }) : props.label}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                    selected={props.selectedRecord[props.label] ? new Date(props.selectedRecord[props.label]) : null}\r\n                    dateFormat={props.dateonly === true ? props.userInfo[\"ssitedate\"] : props.timeonly ? 'HH:mm' : props.userInfo[\"ssitedatetime\"]}\r\n                    timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                    showTimeInput={props.dateonly === true ? false : true}\r\n                    showTimeSelectOnly={props.timeonly}\r\n                    isMandatory={props.mandatory}\r\n                    maxDate={props.CurrentTime}\r\n                    maxTime={props.CurrentTime}\r\n                    onChange={(date) => props.handleDateChange(date, props.label)}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                />\r\n            </Col>\r\n            {/* <Col md={6}>\r\n                <FormSelectSearch\r\n                    name={`tz${props.label}`}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event,`tz${props.label}`)}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    // defaultValue={this.props.defaultTimeZone}\r\n                    value={props.selectedRecord[`tz${props.label}`] ? props.selectedRecord[`tz${props.label}`] : props.defaultTimeZone}\r\n                    options={props.timeZoneList}\r\n                    optionId={\"value\"}\r\n                    optionValue={\"label\"}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    isClearable={false}\r\n                />\r\n            </Col> */}\r\n        </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddMaterialOpenDate);"]},"metadata":{},"sourceType":"module"}