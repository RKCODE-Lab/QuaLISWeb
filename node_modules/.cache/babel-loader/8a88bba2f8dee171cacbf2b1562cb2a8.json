{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\submitter\\\\institution\\\\Institution.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstitutionDetail, getInstitutionCombo, getInstitutionSiteData, addInstitutionFile, changeInstitutionCategoryFilter, viewAttachment, filterColumnData, getCitComboServices, getDistComboServices } from \"../../../actions\";\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\nimport { Affix } from 'rsuite';\nimport { constructOptionList, getControlMap, showEsign, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, validatePhoneNumber, validateEmail, Lims_JSON_stringify } from '../../../components/CommonScript';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\nimport { ContentPanel } from '../../product/product.styled';\nimport ListMaster from \"../../../components/list-master/list-master.component\";\nimport ReactTooltip from 'react-tooltip';\nimport InstitutionCategoryFilter from \"./InstitutionCategoryFilter\";\nimport { ReadOnlyText } from '../../../components/App.styles';\nimport CustomTab from \"../../../components/custom-tabs/custom-tabs.component\";\nimport InstitutionSiteTab from \"./InstitutionSiteTab\";\nimport InstitutionFileTab from \"./InstitutionFileTab\";\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../../audittrail/Esign\";\nimport AddInstitution from \"./AddInstitution\";\nimport AddInstitutionSite from \"./AddInstitutionSite\";\nimport AddInstitutionFile from \"./AddInstitutionFile\";\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\nimport { toast } from 'react-toastify';\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Institution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const editSiteId = this.state.controlMap.has(\"EditInstitutionSite\") && this.state.controlMap.get(\"EditInstitutionSite\").ncontrolcode;\n      const deleteSiteId = this.state.controlMap.has(\"DeleteInstitutionSite\") && this.state.controlMap.get(\"DeleteInstitutionSite\").ncontrolcode;\n      const deleteFileId = this.state.controlMap.has(\"DeleteInstitutionFile\") && this.state.controlMap.get(\"DeleteInstitutionFile\").ncontrolcode;\n      const deleteParam = {\n        operation: \"delete\",\n        deleteSiteId\n      };\n      const deleteTestParam = {\n        operation: \"delete\",\n        deleteFileId\n      };\n      const editParam = {\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONSITE\"\n        }),\n        operation: \"update\",\n        primaryKeyField: \"ninstitutionsitecode\",\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        ncontrolcode: editSiteId,\n        instItem: this.props.Login.masterData.selectedInstitution,\n        instItemSite: this.props.Login.masterData.selectedInstitutionSite\n      };\n      tabMap.set(\"IDS_INSTITUTIONSITE\", /*#__PURE__*/React.createElement(InstitutionSiteTab, {\n        selectedId: this.props.Login.selectedId,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstitution: this.props.Login.masterData.selectedInstitution,\n        InstitutionSite: this.props.Login.masterData.InstitutionSite,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getInstitutionSiteData: this.props.getInstitutionSiteData,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        dataState: this.props.Login.dataState,\n        deleteRecord: this.DeleteInstitutionSite,\n        deleteParam: deleteParam,\n        fetchRecord: this.props.getInstitutionSiteData,\n        editParam: editParam,\n        InstitutionSiteData: this.props.Login.masterData.InstitutionSite || [],\n        screenName: \"Institution Site\",\n        settings: this.props.Login.settings,\n        errorCode: this.props.Login.errorCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }));\n      tabMap.set(\"IDS_INSTITUTIONFILE\", /*#__PURE__*/React.createElement(InstitutionFileTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        InstitutionFile: this.props.Login.masterData.InstitutionFile || [],\n        settings: this.props.Login.settings,\n        addInstitutionFile: this.props.addInstitutionFile,\n        deleteRecord: this.DeleteInstitutionFile,\n        deleteParam: deleteTestParam //editParam={editTestParam}\n        ,\n        viewInstitutionFile: this.viewInstitutionFile,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONFILE\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }\n      }));\n      return tabMap;\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.props.Login.masterData.defaultInstitutionCategory) {\n        let inputParam = {\n          inputData: {\n            ninstitutioncatcode: this.state.selectedFilterRecord.ninstitutioncatcode.value,\n            userinfo: this.props.Login.userInfo\n          },\n          classUrl: \"institution\",\n          methodUrl: \"InstitutionByCategory\"\n        };\n        this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.state.selectedFilterRecord);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"ninstitutioncatcode\": this.props.Login.masterData.SelectedInstitutionCategory.ninstitutioncatcode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"InstitutionByCategory\",\n        displayName: this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTION\"\n        })\n      };\n      this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.SelectedInstitutionCategory);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = [];\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          selectedRecord = selectedRecord;\n        }\n      } else {\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = [];\n        this.props.Login.cityList = [];\n        this.props.Login.districtList = [];\n        selectedId = null; //this.setState({ selectedRecord });\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId,\n          openChildModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === \"radio\") {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        if (event.target.name === \"sfaxno\" || event.target.name === \"stelephone\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeFilter = (comboData, fieldName) => {\n      const selectedFilterRecord = this.state.selectedFilterRecord || [];\n\n      if (comboData) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          //    if(comboData.value !== this.props.Login.masterData.defaultInstitutionCategory. ninstitutioncatcode) {\n          //         let masterData = { ...this.props.Login.masterData, defaultInstitutionCategory: comboData.item}\n          //         const updateInfo = { \n          //             typeName: DEFAULT_RETURN,\n          //             data: { masterData }\n          //         }\n          //         this.props.updateStore(updateInfo);\n          //     }  \n          selectedFilterRecord[fieldName] = comboData;\n        }\n\n        this.setState({\n          selectedFilterRecord\n        });\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData != null) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          selectedRecord[fieldName] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nsitecode\") {\n          selectedRecord[\"nsitecode\"] = comboData;\n          selectedRecord[\"ssitecode\"] = comboData.item[\"ssitecode\"];\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nregioncode\") {\n          selectedRecord[\"nregioncode\"] = comboData;\n          selectedRecord[\"sregioncode\"] = comboData.item[\"sregioncode\"];\n          this.props.getDistComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nregioncode.label,\n              primarykey: selectedRecord.nregioncode.value\n            }\n          });\n          selectedRecord[\"ndistrictcode\"] = \"\";\n          selectedRecord[\"sdistrictcode\"] = \"\";\n          selectedRecord[\"ncitycode\"] = \"\";\n          selectedRecord[\"scitycode\"] = \"\";\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ncountrycode\") {\n          selectedRecord[\"ncountrycode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ndistrictcode\") {\n          selectedRecord[\"ndistrictcode\"] = comboData;\n          selectedRecord[\"sdistrictcode\"] = comboData.item[\"sdistrictcode\"];\n          this.props.getCitComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.ndistrictcode.label,\n              primarykey: selectedRecord.ndistrictcode.value\n            }\n          });\n          selectedRecord[\"ncitycode\"] = \"\";\n          selectedRecord[\"scitycode\"] = \"\";\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ncitycode\") {\n          selectedRecord[\"ncitycode\"] = comboData;\n          selectedRecord[\"scitycode\"] = comboData.item[\"scitycode\"];\n          this.setState({\n            selectedRecord\n          });\n        }\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let postParam = undefined;\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let dataState = undefined;\n\n      if (this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      })) {\n        if (this.props.Login.operation === \"update\") {\n          // edit\n          const selectedRecord = this.state.selectedRecord;\n          postParam = {\n            inputListName: \"Institution\",\n            selectedObject: \"selectedInstitution\",\n            primaryKeyField: \"ninstitutioncode\"\n          };\n          inputData[\"institution\"] = {};\n          this.fieldInstitutionList.map(item => {\n            return inputData[\"institution\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n          });\n          inputData[\"institution\"][\"ninstitutioncode\"] = selectedRecord[\"ninstitutioncode\"] ? selectedRecord[\"ninstitutioncode\"] : -1;\n          inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\n          dataState = this.state.dataState;\n        } else {\n          //add               \n          inputData[\"institution\"] = {\n            \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n          };\n          this.fieldInstitutionList.map(item => {\n            return inputData[\"institution\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n          });\n          inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Institution\",\n          displayName: this.props.Login.screenName,\n          inputData: inputData,\n          selectedId: this.state.selectedRecord[\"ninstututioncode\"],\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          dataState,\n          searchRef: this.searchRef,\n          postParam: postParam,\n          filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord.ninstitutioncatcode.value === this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode ? false : true : false\n        };\n        let masterData = { ...this.props.Login.masterData\n        };\n\n        if (this.state.selectedRecord.ninstitutioncatcode.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\n          masterData = { ...this.props.Login.masterData,\n            defaultInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item,\n            SelectedInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item\n          };\n        } //  this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.screenName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTIONSITE\"\n      })) {\n        const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n\n        if (isValidateEmail) {\n          if (this.props.Login.operation === \"update\") {\n            // edit\n            const selectedRecord = this.state.selectedRecord;\n            postParam = {\n              inputListName: \"InstitutionSite\",\n              selectedObject: \"selectedInstitutionSite\",\n              primaryKeyField: \"ninstitutionsitecode\"\n            };\n            inputData[\"institutionsite\"] = {};\n            inputData[\"institutionsite\"][\"ninstitutionsitecode\"] = selectedRecord[\"ninstitutionsitecode\"] ? selectedRecord[\"ninstitutionsitecode\"] : -1;\n            inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];\n            ;\n            inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\n            inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\n            this.fieldInstitutionSiteList.map(item => {\n              return inputData[\"institutionsite\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n            });\n            dataState = this.state.dataState;\n          } else {\n            postParam = undefined; //add               \n            //inputData[\"institutionsite\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };  \n\n            inputData[\"institutionsite\"] = {};\n            inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];\n            ;\n            inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\n            inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\n            this.fieldInstitutionSiteList.map(item => {\n              return inputData[\"institutionsite\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n            });\n          }\n\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"InstitutionSite\",\n            displayName: this.props.Login.screenName,\n            inputData: inputData,\n            selectedId: this.state.selectedRecord[\"ninstitutionsitecode\"],\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            dataState,\n            searchRef: this.searchRef,\n            postParam: postParam\n          }; //this.setState({ FilterClientCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openChildModal: true,\n                screenName: this.props.intl.formatMessage({\n                  id: this.props.Login.screenName\n                }),\n                operation: this.props.Login.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERVALIDEMAIL\"\n          }));\n        }\n      } else if (this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTIONFILE\"\n      })) {\n        const selectedRecord = this.state.selectedRecord;\n        const acceptedFiles = selectedRecord.sfilename;\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n        let isFileEdited = transactionStatus.NO;\n        let institutionFileArray = [];\n        let institutionFile = {\n          ninstitutioncode: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\n          ninstitutionfilecode: selectedRecord.ninstitutionfilecode ? selectedRecord.ninstitutionfilecode : 0,\n          nstatus: transactionStatus.ACTIVE,\n          nattachmenttypecode\n        };\n        const formData = new FormData();\n\n        if (nattachmenttypecode === attachmentType.FTP) {\n          if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n            acceptedFiles.forEach((file, index) => {\n              const tempData = Object.assign({}, institutionFile);\n              const splittedFileName = file.name.split('.');\n              const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n              const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n              const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n              const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n              tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n              tempData[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\", false);\n              tempData[\"nlinkcode\"] = transactionStatus.NA;\n              tempData[\"ssystemfilename\"] = uniquefilename;\n              tempData[\"nfilesize\"] = file.size;\n              formData.append(\"uploadedFile\" + index, file);\n              formData.append(\"uniquefilename\" + index, uniquefilename);\n              institutionFileArray.push(tempData);\n            });\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n          } else {\n            institutionFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n            institutionFile[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\", false);\n            institutionFile[\"nlinkcode\"] = transactionStatus.NA;\n            institutionFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n            institutionFile[\"nfilesize\"] = selectedRecord.nfilesize;\n            institutionFileArray.push(institutionFile);\n          }\n        } else {\n          institutionFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\n          institutionFile[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\n          institutionFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n          institutionFile[\"ssystemfilename\"] = \"\";\n          institutionFile[\"nfilesize\"] = 0;\n          institutionFileArray.push(institutionFile);\n        }\n\n        formData.append(\"isFileEdited\", isFileEdited);\n        formData.append(\"institutionfile\", JSON.stringify(institutionFileArray));\n        let selectedId = null;\n        let postParam = undefined;\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Institution\",\n            selectedObject: \"selectedInstitution\",\n            primaryKeyField: \"ninstitutioncode\"\n          };\n          selectedId = selectedRecord[\"ninstitutionfilecode\"];\n        }\n\n        const inputParam = {\n          inputData: {\n            \"userinfo\": { ...this.props.Login.userInfo,\n              sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n              smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n              //ALPD-1628(while file saving,audit trail is not captured respective language)\n              slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n            }\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          classUrl: \"institution\",\n          saveType,\n          formRef,\n          methodUrl: \"InstitutionFile\",\n          postParam\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.screenName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstitution(\"delete\", deleteId));\n    };\n\n    this.DeleteInstitutionFile = deleteTestParam => {\n      let inputData = [];\n      let ncontrolcode = deleteTestParam.ncontrolCode;\n      let operation = deleteTestParam.operation;\n      inputData[\"institutionfile\"] = deleteTestParam.selectedRecord;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institutionfile\",\n        selectedObject: \"selectedInstitutionFile\",\n        primaryKeyField: \"ninstitutionfilecode\",\n        primaryKeyValue: deleteTestParam.selectedRecord.ninstitutionfilecode,\n        fetchUrl: \"institution/getInstitutionFile\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"InstitutionFile\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Institution File\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n      }\n    };\n\n    this.DeleteInstitutionSite = deleteParam => {\n      let inputData = [];\n      let ncontrolcode = deleteParam.ncontrolCode;\n      let operation = deleteParam.operation;\n      delete deleteParam.selectedRecord.expanded;\n      inputData[\"institutionsite\"] = deleteParam.selectedRecord;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institutionsite\",\n        selectedObject: \"selectedInstitutionSite\",\n        primaryKeyField: \"ninstitutionsitecode\",\n        primaryKeyValue: deleteParam.selectedRecord.ninstitutionsitecode,\n        fetchUrl: \"institution/getInstitutionSite\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"InstitutionSite\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Institution Site\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n      }\n    };\n\n    this.DeleteInstitution = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"institution\"] = this.props.Login.masterData.selectedInstitution;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institution\",\n        selectedObject: \"selectedInstitution\",\n        primaryKeyField: \"ninstitutioncode\",\n        primaryKeyValue: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\n        fetchUrl: \"institution/getSelectedInstitutionDetail\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Institution\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Institution\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.viewInstitutionFile = filedata => {\n      const inputParam = {\n        inputData: {\n          institutionfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"institution\",\n        operation: \"view\",\n        methodUrl: \"InstitutionFile\",\n        screenName: \"IDS_INSTITUTION\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onDropInstitutionFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.validateEsign = () => {\n      let modalName;\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.screenName === \"Institution\") {\n        modalName = \"openModal\";\n      } else {\n        modalName = \"openChildModal\";\n      }\n\n      this.props.validateEsignCredential(inputParam, modalName);\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchRef = React.createRef();\n    this.fieldInstitutionList = [];\n    this.fieldInstitutionSiteList = [];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === this.props.intl.formatMessage({\n      id: \"IDS_INSTITUTION\"\n    })) {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONCATEGORY\",\n        dataField: \"ninstitutioncatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTION\",\n        dataField: \"sinstitutionname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONCODE\",\n        dataField: \"sinstitutioncode\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      });\n    } else if (this.props.Login.screenName === this.props.intl.formatMessage({\n      id: \"IDS_INSTITUTIONSITE\"\n    })) {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONSITE\",\n        dataField: \"sinstitutionsitename\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_REGIONNAME\",\n        dataField: \"nregioncode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_DISTRICT\",\n        dataField: \"ndistrictcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_CITY\",\n        dataField: \"ncitycode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_COUNTRY\",\n        dataField: \"ncountrycode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_LIMSSITE\",\n        dataField: \"nsitecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      } else {\n        // if (this.props.operation !== 'update') {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        });\n      }\n    }\n\n    this.fieldInstitutionList = [\"sinstitutionname\", \"sinstitutioncode\", \"sdescription\"];\n    this.fieldInstitutionSiteList = [\"sinstitutionsitename\", \"sinstitutionsiteaddress\", \"szipcode\", \"sstate\", \"stelephone\", \"sfaxno\", \"semail\", \"swebsite\"];\n    const addId = this.state.controlMap.has(\"AddInstitution\") && this.state.controlMap.get(\"AddInstitution\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstitution\") && this.state.controlMap.get(\"EditInstitution\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstitution\") && this.state.controlMap.get(\"DeleteInstitution\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Institution\",\n      selectedObject: \"selectedInstitution\",\n      primaryKeyField: \"ninstitutioncode\",\n      fetchUrl: \"institution/getSelectedInstitutionDetail\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        Institution: this.props.Login.masterData.selectedInstitution\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sinstitutioncatname\", \"sinstitutionname\", \"sdescription\"]\n    };\n    const {\n      selectedInstitution\n    } = this.props.Login.masterData;\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Institution,\n      getMasterDetail: Institution => this.props.getInstitutionDetail(Institution, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstitution,\n      primaryKeyField: \"ninstitutioncode\",\n      mainField: \"sinstitutionname\",\n      firstField: \"sinstitutioncatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getInstitutionCombo(this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      }), \"create\", \"ninstitutioncode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_INSTITUTIONCATEGORYFILTER\": /*#__PURE__*/React.createElement(InstitutionCategoryFilter, {\n          FilterInstitutionCategory: this.state.FilterInstitutionCategory || [],\n          nfilterInstitutionCategory: this.props.Login.masterData.defaultInstitutionCategory || {},\n          selectedFilterRecord: this.state.selectedFilterRecord || {},\n          onFilterComboChange: this.onComboChangeFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedInstitution ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedInstitution.sinstitutionname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstitution\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getInstitutionCombo(this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      }), \"update\", \"ninstitutioncode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstitution\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 73\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTITUTIONCODE\",\n      messasge: \"Institution\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstitution.sinstitutioncode))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DESCRIPTION\",\n      messasge: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedInstitution.sdescription)))), selectedInstitution && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 61\n      }\n    }))) : \"\"))))))), (this.props.Login.openModal || this.props.Login.openChildModal) && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.props.Login.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      }) ? /*#__PURE__*/React.createElement(AddInstitution, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstitutionCategory: this.props.Login.InstitutionCategory,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTIONSITE\"\n      }) ? /*#__PURE__*/React.createElement(AddInstitutionSite, {\n        selectedRecord: this.state.selectedRecord || {},\n        Site: this.props.Login.Site,\n        Region: this.props.Login.Region,\n        Country: this.props.Login.Country,\n        onComboChange: this.onComboChange,\n        onInputOnChange: this.onInputOnChange,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        districtList: this.props.Login.districtList,\n        cityList: this.props.Login.cityList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTIONFILE\"\n      }) ? /*#__PURE__*/React.createElement(AddInstitutionFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropInstitutionFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 33\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FilterInstitutionCategory) {\n      breadCrumbData.push({\n        \"label\": \"IDS_INSTITUTIONCATEGORY\",\n        \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : \"-\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let selectedRecord = this.state.selectedRecord || {};\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      this.setState({\n        selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          dataState,\n          selectedRecord: this.props.Login.selectedRecord\n        });\n      } ///     let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\n      //   if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\n\n\n      const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\n      const FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\"); //  } \n\n      const filterData = this.generateBreadCrumData();\n      const selectedFilterRecord = {\n        \"ninstitutioncatcode\": {\n          \"label\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : -1,\n          \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode : '-',\n          \"item\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory : {}\n        }\n      };\n      this.setState({\n        FilterInstitutionCategory,\n        filterData,\n        selectedFilterRecord\n      }); // if(this.props.Login.comboSet){\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { comboSet: false }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n    } // if (this.props.Login.masterData !== previousProps.Login.masterData) {\n    //     this.setState({ filterData });\n    // }\n\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getInstitutionDetail,\n  getInstitutionCombo,\n  getInstitutionSiteData,\n  addInstitutionFile,\n  changeInstitutionCategoryFilter,\n  viewAttachment,\n  filterColumnData,\n  getCitComboServices,\n  getDistComboServices\n})(injectIntl(Institution));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/submitter/institution/Institution.jsx"],"names":["React","connect","FormattedMessage","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstitutionDetail","getInstitutionCombo","getInstitutionSiteData","addInstitutionFile","changeInstitutionCategoryFilter","viewAttachment","filterColumnData","getCitComboServices","getDistComboServices","BreadcrumbComponent","Affix","constructOptionList","getControlMap","showEsign","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","validatePhoneNumber","validateEmail","Lims_JSON_stringify","Row","Col","Card","FormGroup","FormLabel","Nav","ContentPanel","ListMaster","ReactTooltip","InstitutionCategoryFilter","ReadOnlyText","CustomTab","InstitutionSiteTab","InstitutionFileTab","DEFAULT_RETURN","FontAwesomeIcon","faPencilAlt","faTrashAlt","SlideOutModal","Esign","AddInstitution","AddInstitutionSite","AddInstitutionFile","ConfirmMessage","toast","attachmentType","transactionStatus","mapStateToProps","state","Login","Institution","Component","constructor","props","tabDetail","tabMap","Map","editSiteId","controlMap","has","get","ncontrolcode","deleteSiteId","deleteFileId","deleteParam","operation","deleteTestParam","editParam","screenName","intl","formatMessage","id","primaryKeyField","userInfo","inputParam","instItem","masterData","selectedInstitution","instItemSite","selectedInstitutionSite","set","selectedId","userRoleControlRights","InstitutionSite","selectedRecord","dataState","DeleteInstitutionSite","settings","errorCode","InstitutionFile","DeleteInstitutionFile","viewInstitutionFile","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","defaultInstitutionCategory","inputData","ninstitutioncatcode","selectedFilterRecord","value","userinfo","classUrl","methodUrl","FilterInstitutionCategory","warn","reloadData","searchRef","current","SelectedInstitutionCategory","displayName","closeModal","loadEsign","openModal","openChildModal","cityList","districtList","onTabChange","tabProps","onNumericInputOnChange","name","setState","onInputOnChange","event","optional","target","type","checked","onComboChangeFilter","comboData","fieldName","onComboChange","item","sdisplayname","nregioncode","label","primarykey","ndistrictcode","onSaveClick","saveType","formRef","postParam","undefined","inputListName","selectedObject","fieldInstitutionList","map","nmastersitecode","filtercombochange","searchedData","nformcode","ncontrolCode","screenData","isValidateEmail","fieldInstitutionSiteList","info","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","institutionFileArray","institutionFile","ninstitutioncode","ninstitutionfilecode","nstatus","ACTIVE","formData","FormData","FTP","Array","isArray","length","forEach","file","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sfiledesc","trim","NA","size","append","push","YES","nfilesize","slinkfilename","slinkdescription","nlinkcode","JSON","stringify","sformname","smodulename","slanguagename","isFileupload","ConfirmDelete","deleteId","confirmMessage","confirm","DeleteInstitution","primaryKeyValue","fetchUrl","fecthInputObject","expanded","ninstitutionsitecode","filedata","institutionfile","onDropInstitutionFile","attachedFiles","maxSize","actionType","deleteAttachment","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","password","createRef","skip","take","parseInt","render","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","LINK","addId","editId","filterParam","searchFieldList","breadCrumbData","filterData","sinstitutionname","indexOf","e","sinstitutioncode","sdescription","masterStatus","InstitutionCategory","Site","Region","Country","linkMaster","getDerivedStateFromProps","error","generateBreadCrumData","sinstitutioncatname","componentDidUpdate","previousProps","values","InstitutionCategoryMap"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getInstitutionDetail, getInstitutionCombo,\r\n    getInstitutionSiteData, addInstitutionFile, changeInstitutionCategoryFilter, viewAttachment, filterColumnData, getCitComboServices, getDistComboServices\r\n} from \"../../../actions\";\r\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\r\nimport { Affix } from 'rsuite';\r\nimport { constructOptionList, getControlMap, showEsign, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, validatePhoneNumber, validateEmail, Lims_JSON_stringify } from '../../../components/CommonScript';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\r\nimport { ContentPanel } from '../../product/product.styled';\r\nimport ListMaster from \"../../../components/list-master/list-master.component\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InstitutionCategoryFilter from \"./InstitutionCategoryFilter\";\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\nimport CustomTab from \"../../../components/custom-tabs/custom-tabs.component\";\r\nimport InstitutionSiteTab from \"./InstitutionSiteTab\";\r\nimport InstitutionFileTab from \"./InstitutionFileTab\";\r\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../../audittrail/Esign\";\r\nimport AddInstitution from \"./AddInstitution\";\r\nimport AddInstitutionSite from \"./AddInstitutionSite\";\r\nimport AddInstitutionFile from \"./AddInstitutionFile\";\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { toast } from 'react-toastify';\r\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Institution extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchRef = React.createRef();\r\n        this.fieldInstitutionList = [];\r\n        this.fieldInstitutionSiteList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {},\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let mandatoryFields = [];\r\n        if (this.props.Login.screenName === this.props.intl.formatMessage({id: \"IDS_INSTITUTION\"})) {\r\n            mandatoryFields.push(\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONCATEGORY\",\r\n                    dataField: \"ninstitutioncatcode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTION\",\r\n                    dataField: \"sinstitutionname\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONCODE\",\r\n                    dataField: \"sinstitutioncode\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n\r\n            );\r\n\r\n\r\n\r\n        } else if (this.props.Login.screenName === this.props.intl.formatMessage({id: \"IDS_INSTITUTIONSITE\"})) {\r\n            mandatoryFields.push(\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONSITE\",\r\n                    dataField: \"sinstitutionsitename\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_REGIONNAME\",\r\n                    dataField: \"nregioncode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_DISTRICT\",\r\n                    dataField: \"ndistrictcode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_CITY\",\r\n                    dataField: \"ncitycode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_COUNTRY\",\r\n                    dataField: \"ncountrycode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_LIMSSITE\",\r\n                    dataField: \"nsitecode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                mandatoryFields.push(\r\n                    { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                );\r\n            } else {\r\n                // if (this.props.operation !== 'update') {\r\n                mandatoryFields.push(\r\n                    { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        this.fieldInstitutionList = [\"sinstitutionname\", \"sinstitutioncode\", \"sdescription\"];\r\n        this.fieldInstitutionSiteList = [\"sinstitutionsitename\", \"sinstitutionsiteaddress\", \"szipcode\", \"sstate\", \"stelephone\", \"sfaxno\", \"semail\", \"swebsite\"];\r\n\r\n\r\n\r\n        const addId = this.state.controlMap.has(\"AddInstitution\") && this.state.controlMap.get(\"AddInstitution\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditInstitution\") && this.state.controlMap.get(\"EditInstitution\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteInstitution\") && this.state.controlMap.get(\"DeleteInstitution\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"Institution\", selectedObject: \"selectedInstitution\", primaryKeyField: \"ninstitutioncode\",\r\n            fetchUrl: \"institution/getSelectedInstitutionDetail\", fecthInputObject: { userinfo: this.props.Login.userInfo, Institution: this.props.Login.masterData.selectedInstitution },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sinstitutioncatname\", \"sinstitutionname\", \"sdescription\"]\r\n        };\r\n\r\n        const { selectedInstitution } = this.props.Login.masterData;\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Institution}\r\n                                getMasterDetail={(Institution) => this.props.getInstitutionDetail(Institution, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedInstitution}\r\n                                primaryKeyField=\"ninstitutioncode\"\r\n                                mainField=\"sinstitutionname\"\r\n                                firstField=\"sinstitutioncatname\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() =>\r\n                                    this.props.getInstitutionCombo(\r\n                                        this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" }),\r\n                                        \"create\",\r\n                                        \"ninstitutioncode\",\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        addId\r\n                                    )\r\n                                }\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_INSTITUTIONCATEGORYFILTER\":\r\n                                            <InstitutionCategoryFilter\r\n                                                FilterInstitutionCategory={this.state.FilterInstitutionCategory || []}\r\n                                                nfilterInstitutionCategory={this.props.Login.masterData.defaultInstitutionCategory || {}}\r\n                                                selectedFilterRecord={this.state.selectedFilterRecord || {}}\r\n                                                onFilterComboChange={this.onComboChangeFilter}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedInstitution ? (\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <ReactTooltip\r\n                                                            place=\"bottom\"\r\n                                                            globalEventOff=\"click\"\r\n                                                            id=\"tooltip_list_wrap\"\r\n                                                        />\r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.selectedInstitution.sinstitutionname}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link\r\n                                                                        name=\"editInstitution\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\", })}\r\n                                                                        data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        onClick={(e) => this.props.getInstitutionCombo(this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" }), \"update\", \"ninstitutioncode\", this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link\r\n                                                                        name=\"deleteInstitution\"\r\n                                                                        className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\", })}\r\n                                                                        data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_INSTITUTION\" messasge=\"Institution\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sinstitutionname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                            {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_INSTITUTIONCATEGORY\" messasge=\"Institution Category\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sinstitutioncatname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_INSTITUTIONCODE\" messasge=\"Institution\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstitution.sinstitutioncode}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_DESCRIPTION\" messasge=\"Description\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedInstitution.sdescription}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        {selectedInstitution && (\r\n                                                            <CustomTab\r\n                                                                tabDetail={this.tabDetail()}\r\n                                                                onTabChange={this.onTabChange}\r\n                                                            />\r\n                                                        )}\r\n                                                    </Card.Body>\r\n                                                </>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {(this.props.Login.openModal || this.props.Login.openChildModal) && (\r\n                    <SlideOutModal\r\n                        show={(this.props.Login.openModal || this.props.Login.openChildModal)}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ? (\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) : this.props.Login.screenName === this.props.intl.formatMessage({\r\n                                id: \"IDS_INSTITUTION\"}) ? (\r\n                                <AddInstitution\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    InstitutionCategory={this.props.Login.InstitutionCategory}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n\r\n                                />\r\n                            ) : this.props.Login.screenName === this.props.intl.formatMessage({\r\n                                id: \"IDS_INSTITUTIONSITE\"}) ? (\r\n                                <AddInstitutionSite\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    Site={this.props.Login.Site}\r\n                                    Region={this.props.Login.Region}\r\n                                    Country={this.props.Login.Country}\r\n                                    onComboChange={this.onComboChange}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    districtList={this.props.Login.districtList}\r\n                                    cityList={this.props.Login.cityList}\r\n\r\n                                />\r\n                            ) : this.props.Login.screenName === this.props.intl.formatMessage({\r\n                                id: \"IDS_INSTITUTIONFILE\"}) ? (\r\n                                <AddInstitutionFile\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onDrop={this.onDropInstitutionFile}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    linkMaster={this.props.Login.linkMaster}\r\n                                    maxSize={20}\r\n                                    maxFiles={1}\r\n                                />\r\n                            ) : (\r\n                                \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                )}\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n\r\n        const editSiteId = this.state.controlMap.has(\"EditInstitutionSite\") && this.state.controlMap.get(\"EditInstitutionSite\").ncontrolcode;\r\n        const deleteSiteId = this.state.controlMap.has(\"DeleteInstitutionSite\") && this.state.controlMap.get(\"DeleteInstitutionSite\").ncontrolcode;\r\n        const deleteFileId = this.state.controlMap.has(\"DeleteInstitutionFile\") && this.state.controlMap.get(\"DeleteInstitutionFile\").ncontrolcode;\r\n        const deleteParam = { operation: \"delete\", deleteSiteId };\r\n        const deleteTestParam = { operation: \"delete\", deleteFileId };\r\n        const editParam = {\r\n            screenName: this.props.intl.formatMessage({\r\n                id: \"IDS_INSTITUTIONSITE\"\r\n              }), operation: \"update\", primaryKeyField: \"ninstitutionsitecode\",\r\n            userInfo: this.props.Login.userInfo, inputParam: this.props.Login.inputParam, ncontrolcode: editSiteId,\r\n            instItem: this.props.Login.masterData.selectedInstitution, instItemSite: this.props.Login.masterData.selectedInstitutionSite\r\n        }\r\n\r\n        tabMap.set(\"IDS_INSTITUTIONSITE\",\r\n            <InstitutionSiteTab\r\n                selectedId={this.props.Login.selectedId}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedInstitution={this.props.Login.masterData.selectedInstitution}\r\n                InstitutionSite={this.props.Login.masterData.InstitutionSite}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                getInstitutionSiteData={this.props.getInstitutionSiteData}\r\n                inputParam={this.props.Login.inputParam}\r\n                selectedRecord={this.state.selectedRecord}\r\n                dataState={this.props.Login.dataState}\r\n                deleteRecord={this.DeleteInstitutionSite}\r\n                deleteParam={deleteParam}\r\n                fetchRecord={this.props.getInstitutionSiteData}\r\n                editParam={editParam}\r\n                InstitutionSiteData={this.props.Login.masterData.InstitutionSite || []}\r\n                screenName=\"Institution Site\"\r\n                settings={this.props.Login.settings}\r\n                errorCode={this.props.Login.errorCode}\r\n            />);\r\n\r\n\r\n\r\n\r\n\r\n        tabMap.set(\"IDS_INSTITUTIONFILE\",\r\n            <InstitutionFileTab\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                InstitutionFile={this.props.Login.masterData.InstitutionFile || []}\r\n                settings={this.props.Login.settings}\r\n                addInstitutionFile={this.props.addInstitutionFile}\r\n                deleteRecord={this.DeleteInstitutionFile}\r\n                deleteParam={deleteTestParam}\r\n                //editParam={editTestParam}\r\n                viewInstitutionFile={this.viewInstitutionFile}\r\n                screenName={this.props.intl.formatMessage({\r\n                    id: \"IDS_INSTITUTIONFILE\"\r\n                  })}\r\n            />);\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.props.Login.masterData.defaultInstitutionCategory) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    ninstitutioncatcode: this.state.selectedFilterRecord.ninstitutioncatcode.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n\r\n                },\r\n                classUrl: \"institution\",\r\n                methodUrl: \"InstitutionByCategory\"\r\n            }\r\n            this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.state.selectedFilterRecord);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"ninstitutioncatcode\": this.props.Login.masterData.SelectedInstitutionCategory.ninstitutioncatcode,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"InstitutionByCategory\",\r\n            displayName: this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" }),\r\n        };\r\n        this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.SelectedInstitutionCategory);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = [];\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n                selectedRecord = selectedRecord;\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = [];\r\n            this.props.Login.cityList = [];\r\n            this.props.Login.districtList = [];\r\n            selectedId = null;\r\n            //this.setState({ selectedRecord });\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId, openChildModal },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onInputOnChange = (event, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        } else if (event.target.type === \"radio\") {\r\n            selectedRecord[event.target.name] = optional;\r\n        } else {\r\n            if (event.target.name === \"sfaxno\" || event.target.name === \"stelephone\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChangeFilter = (comboData, fieldName) => {\r\n        const selectedFilterRecord = this.state.selectedFilterRecord || [];\r\n        if (comboData) {\r\n            if (fieldName === \"ninstitutioncatcode\") {\r\n                //    if(comboData.value !== this.props.Login.masterData.defaultInstitutionCategory. ninstitutioncatcode) {\r\n                //         let masterData = { ...this.props.Login.masterData, defaultInstitutionCategory: comboData.item}\r\n                //         const updateInfo = { \r\n                //             typeName: DEFAULT_RETURN,\r\n                //             data: { masterData }\r\n                //         }\r\n                //         this.props.updateStore(updateInfo);\r\n                //     }  \r\n\r\n                selectedFilterRecord[fieldName] = comboData;\r\n            }\r\n            this.setState({ selectedFilterRecord });\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData != null) {\r\n            if (fieldName === \"ninstitutioncatcode\") {\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n            } else if (fieldName === \"nsitecode\") {\r\n                selectedRecord[\"nsitecode\"] = comboData;\r\n                selectedRecord[\"ssitecode\"] = comboData.item[\"ssitecode\"];\r\n                this.setState({ selectedRecord });\r\n            } else if (fieldName === \"nregioncode\") {\r\n                selectedRecord[\"nregioncode\"] = comboData;\r\n                selectedRecord[\"sregioncode\"] = comboData.item[\"sregioncode\"];\r\n                this.props.getDistComboServices({\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sdisplayname: selectedRecord.nregioncode.label,\r\n                        primarykey: selectedRecord.nregioncode.value,\r\n                    }\r\n                });\r\n                selectedRecord[\"ndistrictcode\"] = \"\";\r\n                selectedRecord[\"sdistrictcode\"] = \"\";\r\n                selectedRecord[\"ncitycode\"] = \"\";\r\n                selectedRecord[\"scitycode\"] = \"\";\r\n                this.setState({ selectedRecord });\r\n            } else if (fieldName === \"ncountrycode\") {\r\n                selectedRecord[\"ncountrycode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            } else if (fieldName === \"ndistrictcode\") {\r\n                selectedRecord[\"ndistrictcode\"] = comboData;\r\n                selectedRecord[\"sdistrictcode\"] = comboData.item[\"sdistrictcode\"];\r\n                this.props.getCitComboServices({\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sdisplayname: selectedRecord.ndistrictcode.label,\r\n                        primarykey: selectedRecord.ndistrictcode.value,\r\n                    }\r\n                });\r\n                selectedRecord[\"ncitycode\"] = \"\";\r\n                selectedRecord[\"scitycode\"] = \"\";\r\n                this.setState({ selectedRecord });\r\n            } else if (fieldName === \"ncitycode\") {\r\n                selectedRecord[\"ncitycode\"] = comboData;\r\n                selectedRecord[\"scitycode\"] = comboData.item[\"scitycode\"];\r\n                this.setState({ selectedRecord });\r\n            }\r\n        }\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let postParam = undefined;\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n\r\n        if (this.props.Login.screenName === this.props.intl.formatMessage({id: \"IDS_INSTITUTION\"})) {\r\n            if (this.props.Login.operation === \"update\") {  // edit\r\n                const selectedRecord = this.state.selectedRecord;\r\n                postParam = {\r\n                    inputListName: \"Institution\",\r\n                    selectedObject: \"selectedInstitution\",\r\n                    primaryKeyField: \"ninstitutioncode\",\r\n                };\r\n                inputData[\"institution\"] = {};\r\n\r\n                this.fieldInstitutionList.map(item => {\r\n                    return inputData[\"institution\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                })\r\n                inputData[\"institution\"][\"ninstitutioncode\"] = selectedRecord[\"ninstitutioncode\"] ? selectedRecord[\"ninstitutioncode\"] : -1;\r\n                inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\r\n                dataState = this.state.dataState;\r\n            } else {\r\n                //add               \r\n                inputData[\"institution\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n                this.fieldInstitutionList.map(item => {\r\n                    return inputData[\"institution\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\r\n                })\r\n                inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"Institution\",\r\n                displayName: this.props.Login.screenName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"ninstututioncode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                searchRef: this.searchRef,\r\n                postParam: postParam,\r\n                filtercombochange: this.props.Login.masterData.searchedData !== undefined ?\r\n                    this.state.selectedRecord.ninstitutioncatcode.value ===\r\n                        this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode ? false : true : false\r\n            }\r\n\r\n            let masterData = {\r\n                ...this.props.Login.masterData\r\n            };\r\n\r\n            if (this.state.selectedRecord.ninstitutioncatcode.value !==\r\n                this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\r\n                masterData = {\r\n                    ...this.props.Login.masterData,\r\n                    defaultInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item,\r\n                    SelectedInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item\r\n                };\r\n            }\r\n\r\n            //  this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        } else if (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONSITE\"})) {\r\n\r\n            const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\r\n            if (isValidateEmail) {\r\n\r\n                if (this.props.Login.operation === \"update\") {  // edit\r\n                    const selectedRecord = this.state.selectedRecord;\r\n                    postParam = {\r\n                        inputListName: \"InstitutionSite\",\r\n                        selectedObject: \"selectedInstitutionSite\",\r\n                        primaryKeyField: \"ninstitutionsitecode\",\r\n                    };\r\n                    inputData[\"institutionsite\"] = {};\r\n\r\n                    inputData[\"institutionsite\"][\"ninstitutionsitecode\"] = selectedRecord[\"ninstitutionsitecode\"] ? selectedRecord[\"ninstitutionsitecode\"] : -1;\r\n                    inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];;\r\n                    inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\r\n\r\n                    this.fieldInstitutionSiteList.map(item => {\r\n                        return inputData[\"institutionsite\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                    })\r\n\r\n\r\n                    dataState = this.state.dataState;\r\n                } else {\r\n                    postParam = undefined;\r\n                    //add               \r\n                    //inputData[\"institutionsite\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };  \r\n                    inputData[\"institutionsite\"] = {};\r\n                    inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];;\r\n                    inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\r\n                    inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\r\n\r\n\r\n                    this.fieldInstitutionSiteList.map(item => {\r\n                        return inputData[\"institutionsite\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\r\n                    })\r\n                }\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl: \"InstitutionSite\",\r\n                    displayName: this.props.Login.screenName,\r\n                    inputData: inputData,\r\n                    selectedId: this.state.selectedRecord[\"ninstitutionsitecode\"],\r\n                    operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                    searchRef: this.searchRef,\r\n                    postParam: postParam\r\n                }\r\n                //this.setState({ FilterClientCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                            operation: this.props.Login.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n                }\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n            }\r\n\r\n        } else if (this.props.Login.screenName === this.props.intl.formatMessage({id: \"IDS_INSTITUTIONFILE\"})) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            const acceptedFiles = selectedRecord.sfilename;\r\n            const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n            let isFileEdited = transactionStatus.NO;\r\n            let institutionFileArray = [];\r\n            let institutionFile = {\r\n                ninstitutioncode: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n                ninstitutionfilecode: selectedRecord.ninstitutionfilecode ? selectedRecord.ninstitutionfilecode : 0,\r\n                nstatus: transactionStatus.ACTIVE,\r\n                nattachmenttypecode,\r\n            };\r\n            const formData = new FormData();\r\n            if (nattachmenttypecode === attachmentType.FTP) {\r\n                if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                    acceptedFiles.forEach((file, index) => {\r\n                        const tempData = Object.assign({}, institutionFile);\r\n                        const splittedFileName = file.name.split('.');\r\n                        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                        const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                        const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                        const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                            && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                        tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\r\n                        tempData[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\", false);\r\n                        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                        tempData[\"ssystemfilename\"] = uniquefilename;\r\n                        tempData[\"nfilesize\"] = file.size;\r\n                        formData.append(\"uploadedFile\" + index, file);\r\n                        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                        institutionFileArray.push(tempData);\r\n                    });\r\n\r\n                    formData.append(\"filecount\", acceptedFiles.length);\r\n                    isFileEdited = transactionStatus.YES;\r\n                } else {\r\n                    institutionFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\r\n                    institutionFile[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\", false);\r\n                    institutionFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                    institutionFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                    institutionFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                    institutionFileArray.push(institutionFile);\r\n                }\r\n            } else {\r\n                institutionFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\r\n                institutionFile[\"sfiledesc\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\r\n                institutionFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n                institutionFile[\"ssystemfilename\"] = \"\";\r\n                institutionFile[\"nfilesize\"] = 0;\r\n                institutionFileArray.push(institutionFile);\r\n            }\r\n            formData.append(\"isFileEdited\", isFileEdited);\r\n            formData.append(\"institutionfile\", JSON.stringify(institutionFileArray));\r\n            let selectedId = null;\r\n            let postParam = undefined;\r\n            if (this.props.Login.operation === \"update\") {\r\n                postParam = { inputListName: \"Institution\", selectedObject: \"selectedInstitution\", primaryKeyField: \"ninstitutioncode\" };\r\n                selectedId = selectedRecord[\"ninstitutionfilecode\"];\r\n            }\r\n            const inputParam = {\r\n                inputData: {\r\n                    \"userinfo\": {\r\n                        ...this.props.Login.userInfo,\r\n                        sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                        smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                        //ALPD-1628(while file saving,audit trail is not captured respective language)\r\n                        slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                    }\r\n                },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"institution\",\r\n                saveType, formRef, methodUrl: \"InstitutionFile\", postParam\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteInstitution(\"delete\", deleteId));\r\n    }\r\n\r\n    DeleteInstitutionFile = (deleteTestParam) => {\r\n        let inputData = [];\r\n        let ncontrolcode = deleteTestParam.ncontrolCode;\r\n        let operation = deleteTestParam.operation;\r\n        inputData[\"institutionfile\"] = deleteTestParam.selectedRecord;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institutionfile\", selectedObject: \"selectedInstitutionFile\",\r\n            primaryKeyField: \"ninstitutionfilecode\",\r\n            primaryKeyValue: deleteTestParam.selectedRecord.ninstitutionfilecode,\r\n            fetchUrl: \"institution/getInstitutionFile\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"InstitutionFile\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openChildModal: true, screenName: \"Institution File\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n\r\n    DeleteInstitutionSite = (deleteParam) => {\r\n        let inputData = [];\r\n        let ncontrolcode = deleteParam.ncontrolCode;\r\n        let operation = deleteParam.operation;\r\n        delete (deleteParam.selectedRecord.expanded);\r\n        inputData[\"institutionsite\"] = deleteParam.selectedRecord;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institutionsite\", selectedObject: \"selectedInstitutionSite\",\r\n            primaryKeyField: \"ninstitutionsitecode\",\r\n            primaryKeyValue: deleteParam.selectedRecord.ninstitutionsitecode,\r\n            fetchUrl: \"institution/getInstitutionSite\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"InstitutionSite\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openChildModal: true, screenName: \"Institution Site\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    DeleteInstitution = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"institution\"] = this.props.Login.masterData.selectedInstitution;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institution\", selectedObject: \"selectedInstitution\",\r\n            primaryKeyField: \"ninstitutioncode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n            fetchUrl: \"institution/getSelectedInstitutionDetail\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Institution\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Institution\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    viewInstitutionFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                institutionfile: filedata,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"institution\",\r\n            operation: \"view\",\r\n            methodUrl: \"InstitutionFile\",\r\n            screenName: \"IDS_INSTITUTION\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    onDropInstitutionFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(\r\n            selectedRecord[fieldName],\r\n            attachedFiles,\r\n            maxSize\r\n        );\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    };\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n            selectedRecord[fieldName],\r\n            file\r\n        );\r\n\r\n        this.setState({\r\n            selectedRecord,\r\n            actionType: \"delete\",\r\n        });\r\n    };\r\n\r\n    validateEsign = () => {\r\n        let modalName;\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.screenName === \"Institution\") {\r\n            modalName = \"openModal\";\r\n        }\r\n        else {\r\n            modalName = \"openChildModal\";\r\n        }\r\n        this.props.validateEsignCredential(inputParam, modalName);\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FilterInstitutionCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_INSTITUTIONCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : \"-\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({ userRoleControlRights, controlMap, data: this.props.Login.masterData });\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({ data: this.props.Login.masterData, dataState, selectedRecord: this.props.Login.selectedRecord });\r\n            }\r\n\r\n\r\n\r\n            ///     let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\r\n\r\n            //   if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\r\n            const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\r\n            const FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\");\r\n            //  } \r\n\r\n\r\n            const filterData = this.generateBreadCrumData();\r\n\r\n            const selectedFilterRecord = {\r\n                \"ninstitutioncatcode\": {\r\n                    \"label\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : -1,\r\n                    \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode : '-',\r\n                    \"item\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory : {}\r\n                }\r\n            }\r\n\r\n\r\n\r\n            this.setState({ FilterInstitutionCategory, filterData, selectedFilterRecord });\r\n\r\n            // if(this.props.Login.comboSet){\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: { comboSet: false }\r\n            //     }\r\n            //     this.props.updateStore(updateInfo);\r\n            // }\r\n        }\r\n\r\n\r\n\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n        //     this.setState({ filterData });\r\n        // }\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getInstitutionDetail, getInstitutionCombo, getInstitutionSiteData, addInstitutionFile, changeInstitutionCategoryFilter, viewAttachment, filterColumnData, getCitComboServices, getDistComboServices\r\n})(injectIntl(Institution));\r\n"]},"metadata":{},"sourceType":"module"}