{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\organisation\\\\organisationmapping\\\\AddChild.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\n\nconst AddChild = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: props.extractedColumnList[0].idsName\n    }),\n    name: props.extractedColumnList[0].dataField,\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: props.extractedColumnList[0].idsName\n    }),\n    value: props.selectedRecord ? props.selectedRecord[props.extractedColumnList[0].dataField] : \"\",\n    isMandatory: props.extractedColumnList[0].mandatory,\n    required: props.extractedColumnList[0].mandatory,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormMultiSelect, {\n    name: props.extractedColumnList[1].dataField,\n    label: props.intl.formatMessage({\n      id: props.extractedColumnList[1].idsName\n    }),\n    options: props.comboDataList || [],\n    optionId: props.extractedColumnList[1].optionId,\n    optionValue: props.extractedColumnList[1].optionValue,\n    value: props.selectedRecord ? props.selectedRecord[props.extractedColumnList[1].dataField] || [] : [],\n    isMandatory: true,\n    isClearable: true,\n    disableSearch: false,\n    disabled: false,\n    closeMenuOnSelect: false,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, props.extractedColumnList[1].dataField) //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  })));\n};\n\nexport default injectIntl(AddChild);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/organisation/organisationmapping/AddChild.js"],"names":["React","Row","Col","injectIntl","FormInput","FormMultiSelect","AddChild","props","intl","formatMessage","id","extractedColumnList","idsName","dataField","selectedRecord","mandatory","comboDataList","optionId","optionValue","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,OAAOC,eAAP,MAA4B,mEAA5B;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACpB,sBACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,SAAD;AACQ,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC;AAAnC,KAAzB,CADf;AAEQ,IAAA,IAAI,EAAEL,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAF3C;AAGQ,IAAA,IAAI,EAAC,MAHb;AAIQ,IAAA,WAAW,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC;AAAnC,KAAzB,CAJrB;AAKQ,IAAA,KAAK,EAAEL,KAAK,CAACO,cAAN,GAAuBP,KAAK,CAACO,cAAN,CAAqBP,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAAlD,CAAvB,GAAsF,EALrG;AAMQ,IAAA,WAAW,EAAEN,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BI,SANlD;AAOQ,IAAA,QAAQ,EAAER,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BI,SAP/C;AAQQ,IAAA,QAAQ,EAAE,IARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAgCQ,oBAAC,eAAD;AACQ,IAAA,IAAI,EAAER,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAD3C;AAEQ,IAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC;AAAnC,KAAzB,CAFf;AAGQ,IAAA,OAAO,EAAEL,KAAK,CAACS,aAAN,IAAuB,EAHxC;AAIQ,IAAA,QAAQ,EAAET,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BM,QAJ/C;AAKQ,IAAA,WAAW,EAAEV,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BO,WALlD;AAMQ,IAAA,KAAK,EAAEX,KAAK,CAACO,cAAN,GAAuBP,KAAK,CAACO,cAAN,CAAqBP,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAAlD,KAAiE,EAAxF,GAA4F,EAN3G;AAOQ,IAAA,WAAW,EAAE,IAPrB;AAQQ,IAAA,WAAW,EAAE,IARrB;AASQ,IAAA,aAAa,EAAE,KATvB;AAUQ,IAAA,QAAQ,EAAE,KAVlB;AAWQ,IAAA,iBAAiB,EAAE,KAX3B;AAYQ,IAAA,gBAAgB,EAAE,IAZ1B;AAaQ,IAAA,QAAQ,EAAGM,KAAD,IAAWZ,KAAK,CAACa,aAAN,CAAoBD,KAApB,EAA2BZ,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAAxD,CAb7B,CAcA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCR,CADR,CADR;AAuDP,CAxDD;;AA0DA,eAAeV,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\r\n\r\n\r\nconst AddChild = (props) => {\r\n        return (\r\n                <Row>\r\n                        <Col md={12}>\r\n                                <FormInput\r\n                                        label={props.intl.formatMessage({ id: props.extractedColumnList[0].idsName })}\r\n                                        name={props.extractedColumnList[0].dataField}\r\n                                        type=\"text\"\r\n                                        placeholder={props.intl.formatMessage({ id: props.extractedColumnList[0].idsName })}\r\n                                        value={props.selectedRecord ? props.selectedRecord[props.extractedColumnList[0].dataField] : \"\"}\r\n                                        isMandatory={props.extractedColumnList[0].mandatory}\r\n                                        required={props.extractedColumnList[0].mandatory}\r\n                                        readOnly={true}\r\n                                />\r\n\r\n                                {/* <FormSelectSearch\r\n                                    name={props.extractedColumnList[1].dataField}\r\n                                    formLabel={ props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}                              \r\n                                    placeholder=\"Please Select...\"                              \r\n                                    options={ props.comboDataList || []}\r\n                                    optionId={props.extractedColumnList[1].optionId}\r\n                                    optionValue={props.extractedColumnList[1].optionValue}\r\n                                    value = { props.selectedRecord ? props.selectedRecord[props.extractedColumnList[1].dataField]:\"\"}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    isMulti={true}\r\n                                    isClearable={true}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={false}\r\n                                    alphabeticalSort={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, props.extractedColumnList[1].dataField)}                               \r\n                                    //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\r\n                        \r\n                            /> */}\r\n                                <FormMultiSelect\r\n                                        name={props.extractedColumnList[1].dataField}\r\n                                        label={props.intl.formatMessage({ id: props.extractedColumnList[1].idsName })}\r\n                                        options={props.comboDataList || []}\r\n                                        optionId={props.extractedColumnList[1].optionId}\r\n                                        optionValue={props.extractedColumnList[1].optionValue}\r\n                                        value={props.selectedRecord ? props.selectedRecord[props.extractedColumnList[1].dataField]  || []: []}\r\n                                        isMandatory={true}\r\n                                        isClearable={true}\r\n                                        disableSearch={false}\r\n                                        disabled={false}\r\n                                        closeMenuOnSelect={false}\r\n                                        alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, props.extractedColumnList[1].dataField)}\r\n                                //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\r\n\r\n                                />\r\n                        </Col>\r\n\r\n                </Row>\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddChild);"]},"metadata":{},"sourceType":"module"}