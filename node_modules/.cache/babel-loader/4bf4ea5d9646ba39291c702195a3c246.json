{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\components\\\\type2component\\\\AddType2Component.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../form-input/form-input.component';\nimport FormTextarea from '../form-textarea/form-textarea.component';\nimport CustomSwitch from '../custom-switch/custom-switch.component';\n\nconst AddType2Component = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: props.extractedColumnList[0].idsName\n    }),\n    name: props.extractedColumnList[0].dataField,\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: props.extractedColumnList[0].idsName\n    }),\n    value: props.selectedRecord[props.extractedColumnList[0].dataField] || \"\",\n    isMandatory: props.extractedColumnList[0].mandatory,\n    required: props.extractedColumnList[0].mandatory,\n    maxLength: props.extractedColumnList[0].fieldLength //isInvalid={props.failedControls.indexOf(props.extractedColumnList[0].dataField) !==-1}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: props.extractedColumnList[1].idsName\n    }),\n    name: props.extractedColumnList[1].dataField,\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: props.extractedColumnList[1].idsName\n    }),\n    value: props.selectedRecord[props.extractedColumnList[1].dataField] || \"\",\n    rows: \"2\",\n    isMandatory: props.extractedColumnList[1].mandatory,\n    required: props.extractedColumnList[1].mandatory,\n    maxLength: props.extractedColumnList[1].fieldLength //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: props.extractedColumnList[2].idsName\n    }),\n    type: \"switch\",\n    name: props.extractedColumnList[2].controlName,\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: props.extractedColumnList[2].idsName\n    }),\n    defaultValue: props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true : false,\n    isMandatory: props.extractedColumnList[2].mandatory,\n    required: props.extractedColumnList[2].mandatory,\n    checked: props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true : false //disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default injectIntl(AddType2Component);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/type2component/AddType2Component.js"],"names":["React","Row","Col","injectIntl","FormInput","FormTextarea","CustomSwitch","AddType2Component","props","intl","formatMessage","id","extractedColumnList","idsName","dataField","event","onInputOnChange","selectedRecord","mandatory","fieldLength","controlName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport FormTextarea from '../form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\n\r\nconst AddType2Component = (props) => { \r\n    return(<Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        name={props.extractedColumnList[0].dataField}\r\n                        type=\"text\"\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        value ={props.selectedRecord[props.extractedColumnList[0].dataField] || \"\"}\r\n                        isMandatory={props.extractedColumnList[0].mandatory}\r\n                        required={props.extractedColumnList[0].mandatory}\r\n                        maxLength={props.extractedColumnList[0].fieldLength}\r\n                        //isInvalid={props.failedControls.indexOf(props.extractedColumnList[0].dataField) !==-1}\r\n                        \r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        name={props.extractedColumnList[1].dataField}\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        value ={props.selectedRecord[props.extractedColumnList[1].dataField] || \"\"}\r\n                        rows=\"2\"\r\n                        isMandatory={props.extractedColumnList[1].mandatory}\r\n                        required={props.extractedColumnList[1].mandatory}\r\n                        maxLength={props.extractedColumnList[1].fieldLength}\r\n                        //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <CustomSwitch\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[2].idsName})}\r\n                        type=\"switch\"\r\n                        name={props.extractedColumnList[2].controlName}\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[2].idsName})}\r\n                        defaultValue ={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false }\r\n                        isMandatory={props.extractedColumnList[2].mandatory}\r\n                        required={props.extractedColumnList[2].mandatory}\r\n                        checked={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                        //disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                    />                                               \r\n                </Col>\r\n            </Row>)\r\n}\r\nexport default injectIntl(AddType2Component);"]},"metadata":{},"sourceType":"module"}