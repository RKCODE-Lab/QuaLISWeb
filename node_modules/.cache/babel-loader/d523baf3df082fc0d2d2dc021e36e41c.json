{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\reports\\\\reportsconfig\\\\AddAttachment.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../../components/dropzone/dropzone.component';\nimport FormInput from '../../../components/form-input/form-input.component';\n\nconst AddAttachment = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REPORTNAME\"\n    }),\n    name: \"sreportname\",\n    type: \"text\",\n    placeholder: props.intl.formatMessage({\n      id: \"sreportname\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\" // isMandatory = {true}\n    // required={true}\n    ,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(DropZone, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FILE\"\n    }),\n    maxFiles: 1,\n    accept: props.attachmentType,\n    minSize: 0,\n    maxSize: 10,\n    onDrop: event => props.onDropImage(event, \"sfilename\"),\n    multiple: false,\n    isMandatory: true,\n    editFiles: props.selectedRecord ? props.selectedRecord : {} // attachmentTypeCode={props.operation===\"update\"? attachmentType.OTHERS:\"\"}            \n    ,\n    fileName: \"sfilename\",\n    deleteAttachment: () => props.deleteFile(\"sfilename\"),\n    actionType: props.actionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  })));\n};\n\nexport default injectIntl(AddAttachment);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/reportsconfig/AddAttachment.js"],"names":["React","Row","Col","injectIntl","DropZone","FormInput","AddAttachment","props","intl","formatMessage","id","selectedRecord","event","onInputOnChange","attachmentType","onDropImage","deleteFile","actionType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,UAAR,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,OAAOC,SAAP,MAAsB,qDAAtB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACzB,sBACS,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,SAAD;AACQ,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADf;AAEQ,IAAA,IAAI,EAAE,aAFd;AAGQ,IAAA,IAAI,EAAC,MAHb;AAIQ,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAJrB;AAKQ,IAAA,KAAK,EAAGH,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACI,cAAN,CAAqB,aAArB,CAAvB,GAA6D,EAL7E,CAMQ;AACA;AAPR;AAQQ,IAAA,QAAQ,MARhB;AASQ,IAAA,QAAQ,EAAGC,KAAD,IAAUL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAYQ,oBAAC,QAAD;AACQ,IAAA,KAAK,EAAGL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADhB;AAEQ,IAAA,QAAQ,EAAE,CAFlB;AAGQ,IAAA,MAAM,EAAEH,KAAK,CAACO,cAHtB;AAIQ,IAAA,OAAO,EAAE,CAJjB;AAKQ,IAAA,OAAO,EAAE,EALjB;AAMQ,IAAA,MAAM,EAAGF,KAAD,IAASL,KAAK,CAACQ,WAAN,CAAkBH,KAAlB,EAAyB,WAAzB,CANzB;AAOQ,IAAA,QAAQ,EAAE,KAPlB;AAQQ,IAAA,WAAW,EAAE,IARrB;AASQ,IAAA,SAAS,EAAEL,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACI,cAA7B,GAA6C,EAThE,CAUO;AAVP;AAWQ,IAAA,QAAQ,EAAC,WAXjB;AAYQ,IAAA,gBAAgB,EAAE,MAAIJ,KAAK,CAACS,UAAN,CAAiB,WAAjB,CAZ9B;AAaQ,IAAA,UAAU,EAAET,KAAK,CAACU,UAb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CADP,CADT;AAkCP,CAnCD;;AAqCA,eAAed,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\n\r\nconst AddAttachment = (props) => {\r\n        return(\r\n                 <Row> \r\n                        <Col md={12}> \r\n                                <FormInput\r\n                                        label={props.intl.formatMessage({ id:\"IDS_REPORTNAME\"})}\r\n                                        name={\"sreportname\"}\r\n                                        type=\"text\"\r\n                                        placeholder={props.intl.formatMessage({ id:\"sreportname\"})}\r\n                                        value ={props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\"}\r\n                                        // isMandatory = {true}\r\n                                        // required={true}\r\n                                        readOnly\r\n                                        onChange={(event)=> props.onInputOnChange(event)}\r\n                                />\r\n                                <DropZone \r\n                                        label={ props.intl.formatMessage({ id:\"IDS_FILE\"})} \r\n                                        maxFiles={1}\r\n                                        accept={props.attachmentType}\r\n                                        minSize={0}\r\n                                        maxSize={10}\r\n                                        onDrop={(event)=>props.onDropImage(event, \"sfilename\")}\r\n                                        multiple={false}\r\n                                        isMandatory={true}\r\n                                        editFiles={props.selectedRecord ? props.selectedRecord :{}}\r\n                                       // attachmentTypeCode={props.operation===\"update\"? attachmentType.OTHERS:\"\"}            \r\n                                        fileName=\"sfilename\"\r\n                                        deleteAttachment={()=>props.deleteFile(\"sfilename\")}\r\n                                        actionType={props.actionType}\r\n                                        />\r\n                              \r\n                                       \r\n                   </Col>\r\n                </Row>\r\n            )   \r\n}\r\n\r\nexport default injectIntl(AddAttachment);"]},"metadata":{},"sourceType":"module"}