{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from\"../rsapi\";import{toast}from\"react-toastify\";import{DEFAULT_RETURN}from\"./LoginTypes\";import Axios from\"axios\";import{intl}from'../components/App';import{transactionStatus}from\"../components/Enumeration\";import{sortData}from\"../components/CommonScript\";import{initRequest}from'./LoginAction';//add userroletemplate\nexport function addScreenModel(operation,masterData,userInfo,ncontrolCode,selectedInput){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/userroletemplate/getUserRoleforTree/\",{userinfo:userInfo}).then(function(response){// const  TaguserRoleData  = constructOptionList(response.data ||[], \"nuserrolecode\",\n// \"suserrolename\" , undefined, undefined, undefined);\n// const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\nvar userRoleActualData=response.data.slice();selectedInput[\"sversiondescription\"]=\"\";// masterData[\"selectedInput\"] = selectedInput;\ndispatch({type:DEFAULT_RETURN,payload:{userRoleData:response.data,userRoleActualData:userRoleActualData,openModal:true,userRoleTreeData:[{input:\"\"}],operation:operation,ncontrolCode:ncontrolCode,masterData:masterData,selectedInput:selectedInput,selectedRecord:{},totalLevel:1,id:0,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function fetchRecordById(primaryKeyName,primaryKeyValue,masterData,operation,selectedRecord,selectedInput,userInfo,ncontrolCode){return function(dispatch){if(selectedRecord[\"ntransactionstatus\"]===transactionStatus.APPROVED||selectedRecord[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}else{var userRole=rsapi.post(\"userroletemplate/getUserRoleforTree\",{\"nsitecode\":userInfo.nmastersitecode,\"userinfo\":userInfo});var urlArray=[];if(operation===\"update\"){var _rsapi$post;var component=rsapi.post(\"userroletemplate/getTreetemplate\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post));urlArray=[userRole,component];}else{urlArray=[userRole];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){selectedInput[\"sversiondescription\"]=response[1].data.levelsuserroletemplate[0][\"sversiondescription\"];// masterData[\"selectedInput\"] = selectedInput;\nselectedRecord[\"napprovalconfigcode\"]=response[1].data.levelsuserroletemplate[0][\"napprovalconfigcode\"];var userRoleActualData=response[0].data;var listUserRoledata=response[0].data.slice();response[1].data.levelsuserroletemplate.map(function(item,i){return selectedRecord[i]=item[\"nuserrolecode\"].toString();});var _loop=function _loop(i){if(selectedRecord[i]!==undefined){var index=listUserRoledata.findIndex(function(data){return data.nuserrolecode===parseInt(selectedRecord[i]);});if(index>-1){listUserRoledata.splice(index,1);}}};for(var i in userRoleActualData){_loop(i);}var id=response[1].data.levelsuserroletemplate.length-1;dispatch({type:DEFAULT_RETURN,payload:{userRoleTreeData:response[1].data.levelsuserroletemplate,userRoleData:listUserRoledata,userRoleActualData:userRoleActualData,openModal:true,operation:operation,selectedRecord:selectedRecord,selectedInput:selectedInput,ncontrolCode:ncontrolCode,id:id,totalLevel:response[1].data.levelsuserroletemplate.length,masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function getTreetemplate(URTvalue,masterData,userInfo){return function(dispatch){var _this=this;dispatch(initRequest(true));return rsapi.post(\"userroletemplate/getTreetemplate\",{ntreeversiontempcode:URTvalue.ntreeversiontempcode,userinfo:userInfo}).then(function(response){masterData[\"levelsuserroletemplate\"]=response.data[\"levelsuserroletemplate\"];masterData[\"selectedURTVersion\"]=URTvalue;var selectedRecord={};selectedRecord[\"napprovalconfigcode\"]=response.data[\"levelsuserroletemplate\"]?response.data[\"levelsuserroletemplate\"].length>0?response.data[\"levelsuserroletemplate\"][0][\"napprovalconfigcode\"]:-1:-1;selectedRecord[\"ntransactionstatus\"]=response.data[\"levelsuserroletemplate\"]?response.data[\"levelsuserroletemplate\"].length>0?response.data[\"levelsuserroletemplate\"][0][\"ntransactionstatus\"]:_this.props.Login.selectedRecord?_this.props.Login.selectedRecord[\"ntransactionstatus\"]:[]:[];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getURTFilterRegType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"userroletemplate/getApprovalRegSubType\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getURTFilterRegSubType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"userroletemplate/getApprovalRegSubType\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getURTFilterSubmit(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"userroletemplate/getFilterSubmit\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);var listuserroletemplate=sortData(response.data.listuserroletemplate);masterData=_objectSpread(_objectSpread({},masterData),{},{listuserroletemplate:listuserroletemplate});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/UserroleTemplateAction.js"],"names":["rsapi","toast","DEFAULT_RETURN","Axios","intl","transactionStatus","sortData","initRequest","addScreenModel","operation","masterData","userInfo","ncontrolCode","selectedInput","dispatch","post","userinfo","then","response","userRoleActualData","data","slice","type","payload","userRoleData","openModal","userRoleTreeData","input","selectedRecord","totalLevel","id","loading","catch","error","status","formatMessage","message","warn","fetchRecordById","primaryKeyName","primaryKeyValue","APPROVED","RETIRED","userRole","nmastersitecode","urlArray","component","all","levelsuserroletemplate","listUserRoledata","map","item","i","toString","undefined","index","findIndex","nuserrolecode","parseInt","splice","length","getTreetemplate","URTvalue","ntreeversiontempcode","props","Login","getURTFilterRegType","inputParam","inputData","getURTFilterRegSubType","getURTFilterSubmit","listuserroletemplate"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    intl\r\n} from '../components/App'\r\nimport {\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport { sortData } from \"../components/CommonScript\";\r\nimport { initRequest } from './LoginAction';\r\n\r\n//add userroletemplate\r\nexport function addScreenModel(operation, masterData, userInfo, ncontrolCode, selectedInput) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/userroletemplate/getUserRoleforTree/\", {userinfo: userInfo})\r\n            .then(response => {\r\n                // const  TaguserRoleData  = constructOptionList(response.data ||[], \"nuserrolecode\",\r\n                // \"suserrolename\" , undefined, undefined, undefined);\r\n                // const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\r\n\r\n\r\n                const userRoleActualData = response.data.slice();\r\n                selectedInput[\"sversiondescription\"] = \"\";\r\n                // masterData[\"selectedInput\"] = selectedInput;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userRoleData: response.data,\r\n                        userRoleActualData,\r\n                        openModal: true,\r\n                        userRoleTreeData: [{\r\n                            input: \"\"\r\n                        }],\r\n                        operation: operation,\r\n                        ncontrolCode,\r\n                        masterData,\r\n                        selectedInput,\r\n                        selectedRecord: {},\r\n                        totalLevel: 1,\r\n                        id: 0, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fetchRecordById(primaryKeyName, primaryKeyValue, masterData, operation, selectedRecord, selectedInput, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\r\n            }));\r\n        } else {\r\n            const userRole = rsapi.post(\"userroletemplate/getUserRoleforTree\", {\r\n                \"nsitecode\": userInfo.nmastersitecode,\r\n                \"userinfo\": userInfo\r\n            });\r\n\r\n            let urlArray = [];\r\n            if (operation === \"update\") {\r\n                const component = rsapi.post(\"userroletemplate/getTreetemplate\", {\r\n                    [primaryKeyName]: primaryKeyValue,\r\n                    \"userinfo\": userInfo\r\n                });\r\n                urlArray = [userRole, component];\r\n            } else {\r\n                urlArray = [userRole];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    selectedInput[\"sversiondescription\"] = response[1].data.levelsuserroletemplate[0][\"sversiondescription\"];\r\n                    // masterData[\"selectedInput\"] = selectedInput;\r\n                    selectedRecord[\"napprovalconfigcode\"] = response[1].data.levelsuserroletemplate[0][\"napprovalconfigcode\"];\r\n                    let userRoleActualData = response[0].data;\r\n                    let listUserRoledata = response[0].data.slice();\r\n                    response[1].data.levelsuserroletemplate.map((item, i) =>\r\n                        selectedRecord[i] = (item[\"nuserrolecode\"]).toString(),\r\n                    )\r\n\r\n                    for (let i in userRoleActualData) {\r\n                        if (selectedRecord[i] !== undefined) {\r\n                            let index = (listUserRoledata).findIndex(data => data.nuserrolecode === parseInt(selectedRecord[i]));\r\n                            if (index > -1) {\r\n                                listUserRoledata.splice(index, 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const id = response[1].data.levelsuserroletemplate.length - 1\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            userRoleTreeData: response[1].data.levelsuserroletemplate,\r\n                            userRoleData: listUserRoledata,\r\n                            userRoleActualData,\r\n                            openModal: true,\r\n                            operation: operation,\r\n                            selectedRecord,\r\n                            selectedInput,\r\n                            ncontrolCode,\r\n                            id,\r\n                            totalLevel: response[1].data.levelsuserroletemplate.length,\r\n                            masterData, loading: false\r\n                        }\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getTreetemplate(URTvalue, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"userroletemplate/getTreetemplate\", {\r\n            ntreeversiontempcode: URTvalue.ntreeversiontempcode,\r\n            userinfo: userInfo,\r\n        })\r\n            .then(response => {\r\n                masterData[\"levelsuserroletemplate\"] = response.data[\"levelsuserroletemplate\"];\r\n                masterData[\"selectedURTVersion\"] = URTvalue;\r\n                const selectedRecord = {};\r\n                selectedRecord[\"napprovalconfigcode\"] = response.data[\"levelsuserroletemplate\"] ? response.data[\"levelsuserroletemplate\"].length > 0 ?\r\n                    response.data[\"levelsuserroletemplate\"][0][\"napprovalconfigcode\"] : -1 : -1\r\n\r\n                selectedRecord[\"ntransactionstatus\"] = response.data[\"levelsuserroletemplate\"] ? response.data[\"levelsuserroletemplate\"].length > 0 ?\r\n                    response.data[\"levelsuserroletemplate\"][0][\"ntransactionstatus\"] :\r\n                    this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : []\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        selectedRecord, loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function getURTFilterRegType(inputParam){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"userroletemplate/getApprovalRegSubType\", inputParam.inputData)\r\n        .then(response=> {\r\n            let masterData = {...inputParam.masterData,...response.data}\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData, loading: false\r\n                }\r\n            });\r\n        })\r\n        .catch(error=> {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({\r\n                    id: error.message\r\n                }));\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: error.response.data\r\n                }));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport function getURTFilterRegSubType(inputParam){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"userroletemplate/getApprovalRegSubType\", inputParam.inputData)\r\n        .then(response=> {\r\n            let masterData = {...inputParam.masterData,...response.data}\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData, loading: false\r\n                }\r\n            });\r\n        })\r\n        .catch(error=> {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({\r\n                    id: error.message\r\n                }));\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: error.response.data\r\n                }));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport function getURTFilterSubmit(inputParam){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"userroletemplate/getFilterSubmit\", inputParam.inputData)\r\n        .then(response=> {\r\n            let masterData = {...inputParam.masterData,...response.data}\r\n            let listuserroletemplate = sortData(response.data.listuserroletemplate);\r\n            masterData ={...masterData,listuserroletemplate}\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData, loading: false\r\n                }\r\n            });\r\n        })\r\n        .catch(error=> {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading: false}}); \r\n            if (error.response.status === 500) {\r\n                toast.error(intl.formatMessage({\r\n                    id: error.message\r\n                }));\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: error.response.data\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}