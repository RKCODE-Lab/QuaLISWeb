{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultRuleProperties = exports.defaultRule = exports.defaultRoot = exports.defaultOperatorOptions = exports.defaultOperator = exports.defaultItemProperties = exports.defaultGroupProperties = exports.defaultGroupConjunction = exports.defaultField = exports.defaultConjunction = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nvar _uuid = _interopRequireDefault(require(\"./uuid\"));\n\nvar _configUtils = require(\"./configUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar defaultField = function defaultField(config) {\n  var canGetFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var parentRuleGroupPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return typeof config.settings.defaultField === \"function\" ? config.settings.defaultField(parentRuleGroupPath) : config.settings.defaultField || (canGetFirst ? (0, _ruleUtils.getFirstField)(config, parentRuleGroupPath) : null);\n};\n\nexports.defaultField = defaultField;\n\nvar defaultOperator = function defaultOperator(config, field) {\n  var canGetFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n  var fieldOperators = fieldConfig && fieldConfig.operators || [];\n  var fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator)) fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst) fieldDefaultOperator = (0, _ruleUtils.getFirstOperator)(config, field);\n  var op = typeof config.settings.defaultOperator === \"function\" ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n}; //used for complex operators like proximity\n\n\nexports.defaultOperator = defaultOperator;\n\nvar defaultOperatorOptions = function defaultOperatorOptions(config, operator, field) {\n  var operatorConfig = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n  if (!operatorConfig) return null; //new Immutable.Map();\n\n  return operatorConfig.options ? new _immutable[\"default\"].Map(operatorConfig.options && operatorConfig.options.defaults || {}) : null;\n};\n\nexports.defaultOperatorOptions = defaultOperatorOptions;\n\nvar defaultRuleProperties = function defaultRuleProperties(config) {\n  var parentRuleGroupPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var item = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var field = null,\n      operator = null;\n  var _config$settings = config.settings,\n      setDefaultFieldAndOp = _config$settings.setDefaultFieldAndOp,\n      showErrorMessage = _config$settings.showErrorMessage;\n\n  if (item) {\n    var _item$properties, _item$properties2;\n\n    field = item === null || item === void 0 ? void 0 : (_item$properties = item.properties) === null || _item$properties === void 0 ? void 0 : _item$properties.field;\n    operator = item === null || item === void 0 ? void 0 : (_item$properties2 = item.properties) === null || _item$properties2 === void 0 ? void 0 : _item$properties2.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n\n  var current = new _immutable[\"default\"].Map({\n    field: field,\n    operator: operator,\n    value: new _immutable[\"default\"].List(),\n    valueSrc: new _immutable[\"default\"].List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field)\n  });\n\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new _immutable[\"default\"].List());\n  }\n\n  if (field && operator) {\n    var _getNewValueForFieldO = (0, _ruleUtils.getNewValueForFieldOp)(config, config, current, field, operator, \"operator\", false),\n        newValue = _getNewValueForFieldO.newValue,\n        newValueSrc = _getNewValueForFieldO.newValueSrc,\n        newValueType = _getNewValueForFieldO.newValueType,\n        newValueError = _getNewValueForFieldO.newValueError;\n\n    current = current.set(\"value\", newValue).set(\"valueSrc\", newValueSrc).set(\"valueType\", newValueType);\n\n    if (showErrorMessage) {\n      current = current.set(\"valueError\", newValueError);\n    }\n  }\n\n  return current;\n};\n\nexports.defaultRuleProperties = defaultRuleProperties;\n\nvar defaultGroupConjunction = function defaultGroupConjunction(config) {\n  var fieldConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  fieldConfig = (0, _configUtils.getFieldConfig)(config, fieldConfig); // if `fieldConfig` is field name, not config\n\n  var conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1) return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexports.defaultGroupConjunction = defaultGroupConjunction;\n\nvar defaultConjunction = function defaultConjunction(config) {\n  return config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n};\n\nexports.defaultConjunction = defaultConjunction;\n\nvar defaultGroupProperties = function defaultGroupProperties(config) {\n  var fieldConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new _immutable[\"default\"].Map({\n    conjunction: defaultGroupConjunction(config, fieldConfig),\n    not: false\n  });\n};\n\nexports.defaultGroupProperties = defaultGroupProperties;\n\nvar defaultItemProperties = function defaultItemProperties(config, item) {\n  var _item$properties3;\n\n  return item && item.type == \"group\" ? defaultGroupProperties(config, item === null || item === void 0 ? void 0 : (_item$properties3 = item.properties) === null || _item$properties3 === void 0 ? void 0 : _item$properties3.field) : defaultRuleProperties(config, null, item);\n};\n\nexports.defaultItemProperties = defaultItemProperties;\n\nvar defaultRule = function defaultRule(id, config) {\n  return (0, _defineProperty2[\"default\"])({}, id, new _immutable[\"default\"].Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  }));\n};\n\nexports.defaultRule = defaultRule;\n\nvar defaultRoot = function defaultRoot(config) {\n  if (config.tree) {\n    return new _immutable[\"default\"].Map(config.tree);\n  }\n\n  return new _immutable[\"default\"].Map({\n    type: \"group\",\n    id: (0, _uuid[\"default\"])(),\n    children1: new _immutable[\"default\"].OrderedMap(_objectSpread({}, defaultRule((0, _uuid[\"default\"])(), config))),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexports.defaultRoot = defaultRoot;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/utils/defaultUtils.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","defaultRuleProperties","defaultRule","defaultRoot","defaultOperatorOptions","defaultOperator","defaultItemProperties","defaultGroupProperties","defaultGroupConjunction","defaultField","defaultConjunction","_defineProperty2","_immutable","_uuid","_configUtils","_ruleUtils","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","config","canGetFirst","undefined","parentRuleGroupPath","settings","getFirstField","field","fieldConfig","getFieldConfig","fieldOperators","operators","fieldDefaultOperator","includes","getFirstOperator","op","operator","operatorConfig","getOperatorConfig","options","Map","defaults","item","_config$settings","setDefaultFieldAndOp","showErrorMessage","_item$properties","_item$properties2","properties","current","List","valueSrc","operatorOptions","set","_getNewValueForFieldO","getNewValueForFieldOp","newValue","newValueSrc","newValueType","newValueError","conjs","conjunctions","conjunction","not","_item$properties3","type","id","tree","children1","OrderedMap"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultRuleProperties = exports.defaultRule = exports.defaultRoot = exports.defaultOperatorOptions = exports.defaultOperator = exports.defaultItemProperties = exports.defaultGroupProperties = exports.defaultGroupConjunction = exports.defaultField = exports.defaultConjunction = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nvar _uuid = _interopRequireDefault(require(\"./uuid\"));\n\nvar _configUtils = require(\"./configUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultField = function defaultField(config) {\n  var canGetFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var parentRuleGroupPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return typeof config.settings.defaultField === \"function\" ? config.settings.defaultField(parentRuleGroupPath) : config.settings.defaultField || (canGetFirst ? (0, _ruleUtils.getFirstField)(config, parentRuleGroupPath) : null);\n};\n\nexports.defaultField = defaultField;\n\nvar defaultOperator = function defaultOperator(config, field) {\n  var canGetFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var fieldConfig = (0, _configUtils.getFieldConfig)(config, field);\n  var fieldOperators = fieldConfig && fieldConfig.operators || [];\n  var fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator)) fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst) fieldDefaultOperator = (0, _ruleUtils.getFirstOperator)(config, field);\n  var op = typeof config.settings.defaultOperator === \"function\" ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n}; //used for complex operators like proximity\n\n\nexports.defaultOperator = defaultOperator;\n\nvar defaultOperatorOptions = function defaultOperatorOptions(config, operator, field) {\n  var operatorConfig = operator ? (0, _configUtils.getOperatorConfig)(config, operator, field) : null;\n  if (!operatorConfig) return null; //new Immutable.Map();\n\n  return operatorConfig.options ? new _immutable[\"default\"].Map(operatorConfig.options && operatorConfig.options.defaults || {}) : null;\n};\n\nexports.defaultOperatorOptions = defaultOperatorOptions;\n\nvar defaultRuleProperties = function defaultRuleProperties(config) {\n  var parentRuleGroupPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var item = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var field = null,\n      operator = null;\n  var _config$settings = config.settings,\n      setDefaultFieldAndOp = _config$settings.setDefaultFieldAndOp,\n      showErrorMessage = _config$settings.showErrorMessage;\n\n  if (item) {\n    var _item$properties, _item$properties2;\n\n    field = item === null || item === void 0 ? void 0 : (_item$properties = item.properties) === null || _item$properties === void 0 ? void 0 : _item$properties.field;\n    operator = item === null || item === void 0 ? void 0 : (_item$properties2 = item.properties) === null || _item$properties2 === void 0 ? void 0 : _item$properties2.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n\n  var current = new _immutable[\"default\"].Map({\n    field: field,\n    operator: operator,\n    value: new _immutable[\"default\"].List(),\n    valueSrc: new _immutable[\"default\"].List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field)\n  });\n\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new _immutable[\"default\"].List());\n  }\n\n  if (field && operator) {\n    var _getNewValueForFieldO = (0, _ruleUtils.getNewValueForFieldOp)(config, config, current, field, operator, \"operator\", false),\n        newValue = _getNewValueForFieldO.newValue,\n        newValueSrc = _getNewValueForFieldO.newValueSrc,\n        newValueType = _getNewValueForFieldO.newValueType,\n        newValueError = _getNewValueForFieldO.newValueError;\n\n    current = current.set(\"value\", newValue).set(\"valueSrc\", newValueSrc).set(\"valueType\", newValueType);\n\n    if (showErrorMessage) {\n      current = current.set(\"valueError\", newValueError);\n    }\n  }\n\n  return current;\n};\n\nexports.defaultRuleProperties = defaultRuleProperties;\n\nvar defaultGroupConjunction = function defaultGroupConjunction(config) {\n  var fieldConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  fieldConfig = (0, _configUtils.getFieldConfig)(config, fieldConfig); // if `fieldConfig` is field name, not config\n\n  var conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1) return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexports.defaultGroupConjunction = defaultGroupConjunction;\n\nvar defaultConjunction = function defaultConjunction(config) {\n  return config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n};\n\nexports.defaultConjunction = defaultConjunction;\n\nvar defaultGroupProperties = function defaultGroupProperties(config) {\n  var fieldConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new _immutable[\"default\"].Map({\n    conjunction: defaultGroupConjunction(config, fieldConfig),\n    not: false\n  });\n};\n\nexports.defaultGroupProperties = defaultGroupProperties;\n\nvar defaultItemProperties = function defaultItemProperties(config, item) {\n  var _item$properties3;\n\n  return item && item.type == \"group\" ? defaultGroupProperties(config, item === null || item === void 0 ? void 0 : (_item$properties3 = item.properties) === null || _item$properties3 === void 0 ? void 0 : _item$properties3.field) : defaultRuleProperties(config, null, item);\n};\n\nexports.defaultItemProperties = defaultItemProperties;\n\nvar defaultRule = function defaultRule(id, config) {\n  return (0, _defineProperty2[\"default\"])({}, id, new _immutable[\"default\"].Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  }));\n};\n\nexports.defaultRule = defaultRule;\n\nvar defaultRoot = function defaultRoot(config) {\n  if (config.tree) {\n    return new _immutable[\"default\"].Map(config.tree);\n  }\n\n  return new _immutable[\"default\"].Map({\n    type: \"group\",\n    id: (0, _uuid[\"default\"])(),\n    children1: new _immutable[\"default\"].OrderedMap(_objectSpread({}, defaultRule((0, _uuid[\"default\"])(), config))),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexports.defaultRoot = defaultRoot;"]},"metadata":{},"sourceType":"script"}