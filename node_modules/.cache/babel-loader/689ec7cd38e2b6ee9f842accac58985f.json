{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col,Card}from'react-bootstrap';import{toast}from'react-toastify';import MISRightsTab from'./MISRightsTab';import{getAlertRightsComboDataService,getMISRightsDetail,callService,crudMaster,getReportRightsComboDataService,getDashBoardRightsComboDataService,filterColumnData,validateEsignCredential,updateStore,getHomeRightsComboDataService,getAlertHomeRightsComboDataService}from'../../actions';import{getControlMap}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ContentPanel}from'../../components/App.styles';import ListMaster from'../../components/list-master/list-master.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var MISRights=/*#__PURE__*/function(_React$Component){_inherits(MISRights,_React$Component);var _super=_createSuper(MISRights);function MISRights(props){var _this;_classCallCheck(this,MISRights);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"MISRights\",displayName:\"MIS Rights\",userInfo:_this.props.Login.userInfo// displayName: this.props.Login.inputParam.displayName\n};_this.props.callService(inputParam);};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();// this.closeModal = this.closeModal.bind(this);\n_this.extractedColumnList=[];_this.userColumnList=[];_this.fieldList=[];_this.state={availableDatas:\"\",availableList:\"\",dataSource:[],masterStatus:\"\",error:\"\",selectedRecord:{},isOpen:false,userRoleControlRights:[],controlMap:new Map()};_this.searchRef=React.createRef();_this.searchFieldList=[\"suserrolename\"];return _this;}_createClass(MISRights,[{key:\"render\",value:function render(){var _this2=this;var filterParam={inputListName:\"UserRole\",selectedObject:\"SelectedMIS\",primaryKeyField:\"nuserrolecode\",fetchUrl:\"misrights/getMISRights\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"list-fixed-wrap\"},/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_USERROLE\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.UserRole,getMasterDetail:function getMasterDetail(_MISRights){return _this2.props.getMISRightsDetail(_MISRights,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedMIS,primaryKeyField:\"nuserrolecode\",mainField:\"suserrolename\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,searchRef:this.searchRef,reloadData:this.reloadData,isMultiSelecct:false,hidePaging:true}))))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.UserRole&&this.props.Login.masterData.UserRole.length>0&&this.props.Login.masterData.SelectedMIS?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedMIS.suserrolename)),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(MISRightsTab,{formatMessage:this.props.intl.formatMessage,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,masterStatus:this.props.Login.masterStatus,openChildModal:this.props.Login.openChildModal,DashBoardType:this.props.Login.DashBoardType,Reports:this.props.Login.Reports,Alert:this.props.Login.Alert,HomeRights:this.props.Login.HomeRights,AlertHomeRights:this.props.Login.AlertHomeRights,updateStore:this.props.updateStore,selectedRecord:this.props.Login.selectedRecord,getDashBoardRightsComboDataService:this.props.getDashBoardRightsComboDataService,getReportRightsComboDataService:this.props.getReportRightsComboDataService,getAlertRightsComboDataService:this.props.getAlertRightsComboDataService,getHomeRightsComboDataService:this.props.getHomeRightsComboDataService,getAlertHomeRightsComboDataService:this.props.getAlertHomeRightsComboDataService,ncontrolCode:this.props.Login.ncontrolCode,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,controlMap:this.state.controlMap,showAccordian:this.state.showAccordian//selectedId={this.props.Login.selectedId}\n,dataState:this.props.Login.dataState,onTabChange:this.onTabChange,searchRef:this.searchRef,updateDataState:this.props.Login.masterData.updateDataState}))):\"\"))))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return MISRights;}(React.Component);export default connect(mapStateToProps,{getAlertRightsComboDataService:getAlertRightsComboDataService,getMISRightsDetail:getMISRightsDetail,callService:callService,filterColumnData:filterColumnData,getReportRightsComboDataService:getReportRightsComboDataService,getDashBoardRightsComboDataService:getDashBoardRightsComboDataService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getHomeRightsComboDataService:getHomeRightsComboDataService,getAlertHomeRightsComboDataService:getAlertHomeRightsComboDataService})(injectIntl(MISRights));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/credentialmanagement/MISRights.jsx"],"names":["React","connect","injectIntl","Row","Col","Card","toast","MISRightsTab","getAlertRightsComboDataService","getMISRightsDetail","callService","crudMaster","getReportRightsComboDataService","getDashBoardRightsComboDataService","filterColumnData","validateEsignCredential","updateStore","getHomeRightsComboDataService","getAlertHomeRightsComboDataService","getControlMap","DEFAULT_RETURN","ContentPanel","ListMaster","mapStateToProps","state","Login","MISRights","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","onTabChange","tabProps","screenName","validateEsign","sreason","password","screenData","formRef","createRef","extractedColumnList","userColumnList","fieldList","availableDatas","availableList","dataSource","masterStatus","error","isOpen","userRoleControlRights","controlMap","Map","searchRef","searchFieldList","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","masterData","intl","formatMessage","id","searchedData","UserRole","SelectedMIS","length","suserrolename","errorCode","openChildModal","DashBoardType","Reports","Alert","HomeRights","AlertHomeRights","ncontrolCode","showAccordian","dataState","updateDataState","previousProps","nformcode","Object","values","map","item","push","ncontrolcode","setState","undefined","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Card  } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport MISRightsTab from './MISRightsTab';\r\nimport {getAlertRightsComboDataService,getMISRightsDetail, callService, crudMaster,getReportRightsComboDataService,\r\n    getDashBoardRightsComboDataService,filterColumnData, validateEsignCredential, updateStore,getHomeRightsComboDataService,getAlertHomeRightsComboDataService } from '../../actions';\r\nimport { getControlMap } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ContentPanel} from '../../components/App.styles';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass MISRights extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        // this.closeModal = this.closeModal.bind(this);\r\n        this.extractedColumnList = [];\r\n        this.userColumnList=[];\r\n        this.fieldList = [];\r\n       \r\n       \r\n        this.state = {\r\n            availableDatas:\"\",\r\n            availableList:\"\",\r\n            dataSource: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.searchFieldList=[\"suserrolename\"];\r\n     \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord ,selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        const filterParam = { inputListName :\"UserRole\", selectedObject : \"SelectedMIS\",  primaryKeyField: \"nuserrolecode\",\r\n                             fetchUrl : \"misrights/getMISRights\", fecthInputObject : {userinfo:this.props.Login.userInfo},\r\n                             masterData:this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n                            };\r\n  \r\n\r\n        return(<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4\">\r\n            <Row noGutters={true}>\r\n                <Col md={4}>\r\n                    <Row noGutters={true}><Col md={12}>\r\n                        <div className=\"list-fixed-wrap\">\r\n                            <ListMaster\r\n                                screenName = {this.props.intl.formatMessage({id:\"IDS_USERROLE\"})}     \r\n                                masterData ={this.props.Login.masterData}\r\n                                userInfo = {this.props.Login.userInfo}                         \r\n                                masterList = {this.props.Login.masterData.searchedData ||this.props.Login.masterData.UserRole}\r\n                                getMasterDetail = {(MISRights)=>this.props.getMISRightsDetail(MISRights, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster = {this.props.Login.masterData.SelectedMIS}\r\n                                primaryKeyField = \"nuserrolecode\"\r\n                                mainField = \"suserrolename\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                searchRef = {this.searchRef}\r\n                                reloadData = {this.reloadData}\r\n                                isMultiSelecct={false}\r\n                                hidePaging={true}\r\n                               />\r\n                        </div>\r\n                    </Col></Row>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Row><Col md={12}>\r\n                    <ContentPanel className=\"panel-main-content\">\r\n                        <Card className=\"border-0\">\r\n                            {this.props.Login.masterData.UserRole && this.props.Login.masterData.UserRole.length > 0 && this.props.Login.masterData.SelectedMIS ?\r\n                                <>\r\n                                <Card.Header>\r\n                                    <Card.Title className=\"product-title-main\">\r\n                                            {this.props.Login.masterData.SelectedMIS.suserrolename}\r\n                                    </Card.Title>\r\n                                  \r\n                                </Card.Header>                                   \r\n                                <Card.Body>\r\n                                    <MISRightsTab\r\n                                               formatMessage={this.props.intl.formatMessage}\r\n                                               operation={this.props.Login.operation}\r\n                                               inputParam={this.props.Login.inputParam}\r\n                                               screenName={this.props.Login.screenName}\r\n                                               userInfo={this.props.Login.userInfo}\r\n                                               masterData={this.props.Login.masterData}\r\n                                               crudMaster={this.props.crudMaster}\r\n                                               errorCode={this.props.Login.errorCode}\r\n                                               masterStatus={this.props.Login.masterStatus}\r\n                                               openChildModal={this.props.Login.openChildModal}\r\n                                               DashBoardType={this.props.Login.DashBoardType}\r\n                                               Reports={this.props.Login.Reports}\r\n                                               Alert={this.props.Login.Alert}\r\n                                               HomeRights={this.props.Login.HomeRights}\r\n                                               AlertHomeRights={this.props.Login.AlertHomeRights}\r\n                                               updateStore={this.props.updateStore}\r\n                                               selectedRecord={this.props.Login.selectedRecord}\r\n                                               getDashBoardRightsComboDataService={this.props.getDashBoardRightsComboDataService}\r\n                                               getReportRightsComboDataService={this.props.getReportRightsComboDataService}\r\n                                               getAlertRightsComboDataService={this.props.getAlertRightsComboDataService}\r\n                                               getHomeRightsComboDataService={this.props.getHomeRightsComboDataService}\r\n                                               getAlertHomeRightsComboDataService={this.props.getAlertHomeRightsComboDataService}\r\n                                               ncontrolCode={this.props.Login.ncontrolCode}\r\n                                               userRoleControlRights={this.state.userRoleControlRights}\r\n                                               esignRights={this.props.Login.userRoleControlRights}\r\n                                               screenData={this.props.Login.screenData}\r\n                                               validateEsignCredential={this.props.validateEsignCredential}\r\n                                               loadEsign={this.props.Login.loadEsign}\r\n                                               controlMap={this.state.controlMap}\r\n                                               showAccordian={this.state.showAccordian}\r\n                                               //selectedId={this.props.Login.selectedId}\r\n                                               dataState={this.props.Login.dataState}\r\n                                               onTabChange={this.onTabChange}\r\n                                               searchRef = {this.searchRef}\r\n                                               updateDataState = {this.props.Login.masterData.updateDataState}\r\n                                            />\r\n                                </Card.Body>                                \r\n                                </>\r\n                                :\"\"\r\n                            }\r\n                        </Card>\r\n                    </ContentPanel>\r\n                    </Col></Row>\r\n                </Col>\r\n            </Row>    \r\n            </div>\r\n               \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap\r\n                   \r\n                });\r\n            }\r\n           \r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n           \r\n        }   \r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"MISRights\",\r\n            displayName:\"MIS Rights\",\r\n            userInfo: this.props.Login.userInfo\r\n           // displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { getAlertRightsComboDataService,getMISRightsDetail,callService,filterColumnData,getReportRightsComboDataService,\r\n    getDashBoardRightsComboDataService, crudMaster, validateEsignCredential, updateStore,getHomeRightsComboDataService ,getAlertHomeRightsComboDataService})(injectIntl(MISRights));"]},"metadata":{},"sourceType":"module"}