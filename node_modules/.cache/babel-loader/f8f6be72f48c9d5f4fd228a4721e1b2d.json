{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\registrationsubtype\\\\AddSeqNoFormatRelease.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { AtAccordion } from '../../../components/custom-accordion/custom-accordion.styles';\nimport { Accordion, Button, Card, Col, FormGroup, ListGroupItem, Nav, Row, useAccordionToggle } from 'react-bootstrap';\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\nimport { Draggable, Droppable } from 'react-drag-and-drop';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBackspace, faChevronDown, faChevronUp, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport FormNumericInput from '../../../components/form-numeric-input/form-numeric-input.component';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../../components/Enumeration'; //import { transactionStatus } from '../../../components/Enumeration';\n\nclass AddSeqNoFormatRelease extends React.Component {\n  constructor(props) {\n    super(props);\n    this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    this.date = new Date();\n    this.year = this.props.intl.formatMessage({\n      id: \"IDS_YEAR\"\n    });\n    this.month = this.props.intl.formatMessage({\n      id: \"IDS_MONTH\"\n    });\n    this.dates = this.props.intl.formatMessage({\n      id: \"IDS_DATE\"\n    });\n    this.character = this.props.intl.formatMessage({\n      id: \"IDS_LIMSCHARACTER\"\n    });\n    this.seqNo = this.props.intl.formatMessage({\n      id: \"IDS_SEQNO\"\n    });\n    this.site = this.props.intl.formatMessage({\n      id: \"IDS_SITE\"\n    });\n  }\n\n  render() {\n    let str = '{9999}';\n    str = str.substring(1, str.length - 4);\n    str = str.padStart(this.props.selectedRecord && this.props.selectedRecord.seqnolength || 4, 9);\n    let sseqno = '{' + str + '}';\n    const formatComponents = [{\n      \"componentname\": `${this.year} (${this.date.getFullYear()})`,\n      \"componentvalue\": \"{yyyy}\"\n    }, {\n      \"componentname\": `${this.year} (${this.date.getFullYear().toString().substring(2, 4)})`,\n      \"componentvalue\": \"{yy}\"\n    }, {\n      \"componentname\": `${this.month} (${(this.date.getMonth() + 1).toString().padStart(2, \"0\")})`,\n      \"componentvalue\": \"{MM}\"\n    }, {\n      \"componentname\": `${this.month} (${this.months[this.date.getMonth()]})`,\n      \"componentvalue\": \"{MMM}\"\n    }, {\n      \"componentname\": `${this.dates} (${this.date.getDate()})`,\n      \"componentvalue\": \"{DD}\"\n    }, {\n      \"componentname\": `${this.character} (${this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\"})`,\n      \"componentvalue\": this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\"\n    }, {\n      \"componentname\": `${this.seqNo} (${sseqno})`,\n      \"componentvalue\": this.props.selectedRecord && this.props.selectedRecord.sseqno || \"{9999}\"\n    }, {\n      \"componentname\": \"/\",\n      \"componentvalue\": \"/\"\n    }, {\n      \"componentname\": \"-\",\n      \"componentvalue\": \"-\"\n    }];\n\n    if (parseInt(this.props.settings[23]) === transactionStatus.YES) {\n      formatComponents.push({\n        \"componentname\": `${this.site} (${this.props.userInfo.ssitecode})`,\n        \"componentvalue\": \"{XXXXX}\"\n      });\n    }\n\n    const configFields = [{\n      \"idsName\": \"IDS_USENEWFORMAT\",\n      \"dataField\": \"nisnewformat\"\n    }, {\n      \"idsName\": \"IDS_NEEDSITEWISEARNO\",\n      \"dataField\": \"nneedsitewisearnorelease\"\n    }];\n\n    const CustomToggle = ({\n      children,\n      eventKey\n    }) => {\n      const currentEventKey = React.useContext(AccordionContext);\n      const isCurrentEventKey = currentEventKey === eventKey;\n      const decoratedOnClick = useAccordionToggle(eventKey, \"\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        onClick: decoratedOnClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, children, isCurrentEventKey ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronDown //onClick={children.props.onExpandCall}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }\n      }));\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, configFields.map((field, index) => index < 2 ? /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: field.idsName\n      }),\n      type: \"switch\",\n      name: field.dataField,\n      onChange: event => this.props.onInputOnChange(event),\n      isMandatory: false,\n      required: true,\n      disabled: //field.dataField==='nneedjoballocation'||\n      false,\n      checked: this.props.selectedRecord && this.props.selectedRecord[field.dataField],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    })) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdown-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FORMATRELEASE\"\n    }))), this.props.selectedRecord && this.props.selectedRecord.nisnewformat ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nperiodcode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_RESETSEQEVERY\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_RESETDURATION\"\n      }),\n      options: this.props.periodList || [],\n      value: this.props.selectedRecord && this.props.selectedRecord.nperiodcode || '',\n      isMandatory: true,\n      isSearchable: true,\n      isMulti: false,\n      onChange: event => this.props.onComboChange(event, 'nperiodcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"splaintext\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TEXTVALUE\"\n      }),\n      type: \"text\",\n      value: this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\",\n      required: true,\n      maxLength: 10,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      name: \"seqnolength\",\n      className: \"form-control\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SEQUENCENOLENGTH\"\n      }) //value={this.props.selectedRecord && this.props.selectedRecord.seqnolength || 4}\n      ,\n      value: this.props.selectedRecord && this.props.selectedRecord.seqnolength == \"\" ? this.props.selectedRecord.seqnolength : this.props.selectedRecord.seqnolength || 4,\n      isMandatory: true,\n      type: \"number\",\n      noStyle: true,\n      required: true,\n      strict: true,\n      maxLength: 1,\n      onChange: event => this.props.onNumericInputChange(event, 'seqnolength'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AtAccordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      activeKey: this.props.selectedRecord && this.props.selectedRecord.nisnewformat ? \"InputFields\" : \"ExistingFormats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 37\n      }\n    }, this.props.selectedRecord && this.props.selectedRecord.nisnewformat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CustomToggle, {\n      eventKey: \"InputFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 57\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FORMATFIELDS\"\n    })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"InputFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, formatComponents.map((sideBarItem, index) => /*#__PURE__*/React.createElement(Draggable, {\n      type: 'formatcomponents',\n      data: sideBarItem.componentvalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"sideBarItem ml-0\",\n      style: {\n        backgroundColor: \"#155592\",\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 69\n      }\n    }, sideBarItem.componentname)))))) : this.props.selectedRecord && this.props.selectedRecord.nneedsitewisearnorelease ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CustomToggle, {\n      eventKey: \"ExistingFormats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 57\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SITEWISEEXISTINGFORMAT\"\n    })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"ExistingFormats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, this.props.sitewiseexistingFormatsRelease && this.props.sitewiseexistingFormatsRelease.map((sideBarItem, index) => /*#__PURE__*/React.createElement(Draggable, {\n      type: 'formatcomponents',\n      data: sideBarItem.sreleaseformat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"sideBarItem ml-0\",\n      style: {\n        backgroundColor: \"#155592\",\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 69\n      }\n    }, sideBarItem.sreleaseformat)))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CustomToggle, {\n      eventKey: \"ExistingFormats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 61\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_EXISTINGFORMAT\"\n    })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"ExistingFormats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, this.props.sreleaseexistingFormats && this.props.sreleaseexistingFormats.map((sideBarItem, index) => /*#__PURE__*/React.createElement(Draggable, {\n      type: 'formatcomponents',\n      data: sideBarItem.sreleaseformat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"sideBarItem ml-0\",\n      style: {\n        backgroundColor: \"#155592\",\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 73\n      }\n    }, sideBarItem.sreleaseformat))))))))))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, this.props.selectedRecord && this.props.selectedRecord.nisnewformat ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn-user btn-cancel btn p-0\",\n      onClick: this.props.onClickBackspace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faBackspace,\n      className: \"pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }), this.props.intl.formatMessage({\n      id: \"IDS_BACKSPACE\"\n    }))) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \" d-flex justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn-user btn-cancel btn p-0 mb-3\",\n      onClick: this.props.onClickClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      className: \"pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }), this.props.intl.formatMessage({\n      id: \"IDS_CLEARALL\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      types: ['formatcomponents'],\n      onDrop: event => this.props.onDrop(event),\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"sreleaseformat\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_INPUTFORMATWITHINFO\"\n      }),\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_INPUTFORMAT\"\n      }),\n      value: this.props.selectedRecord && this.props.selectedRecord[\"sreleaseformat\"],\n      rows: 2,\n      isMandatory: true,\n      readOnly: true,\n      required: true,\n      showCharCount: true,\n      maxLength: 40,\n      charLength: this.props.selectedRecord && this.props.selectedRecord[\"sreleaseformat\"] ? this.props.selectedRecord[\"sreleaseformat\"].replaceAll(\"{\", \"\").replaceAll(\"}\", \"\").length : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"sreleaseexampleformat\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_OUTPUTFORMAT\"\n      }),\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_OUTPUTFORMAT\"\n      }),\n      value: this.props.selectedRecord && this.props.selectedRecord[\"sreleaseexampleformat\"],\n      rows: 2,\n      isMandatory: true,\n      readOnly: true,\n      required: true,\n      showCharCount: true,\n      maxLength: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default injectIntl(AddSeqNoFormatRelease);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dynamicpreregdesign/registrationsubtype/AddSeqNoFormatRelease.jsx"],"names":["React","injectIntl","PerfectScrollbar","AtAccordion","Accordion","Button","Card","Col","FormGroup","ListGroupItem","Nav","Row","useAccordionToggle","AccordionContext","Draggable","Droppable","FormTextarea","FontAwesomeIcon","faBackspace","faChevronDown","faChevronUp","faTimes","FormSelectSearch","FormNumericInput","FormInput","CustomSwitch","transactionStatus","AddSeqNoFormatRelease","Component","constructor","props","months","date","Date","year","intl","formatMessage","id","month","dates","character","seqNo","site","render","str","substring","length","padStart","selectedRecord","seqnolength","sseqno","formatComponents","getFullYear","toString","getMonth","getDate","splaintext","parseInt","settings","YES","push","userInfo","ssitecode","configFields","CustomToggle","children","eventKey","currentEventKey","useContext","isCurrentEventKey","decoratedOnClick","map","field","index","idsName","dataField","event","onInputOnChange","nisnewformat","periodList","nperiodcode","onComboChange","onNumericInputChange","sideBarItem","componentvalue","backgroundColor","justifyContent","componentname","nneedsitewisearnorelease","sitewiseexistingFormatsRelease","sreleaseformat","sreleaseexistingFormats","onClickBackspace","onClickClear","onDrop","replaceAll"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { AtAccordion } from '../../../components/custom-accordion/custom-accordion.styles';\r\nimport { Accordion, Button, Card, Col, FormGroup, ListGroupItem, Nav, Row, useAccordionToggle } from 'react-bootstrap';\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport { Draggable, Droppable } from 'react-drag-and-drop';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackspace, faChevronDown, faChevronUp, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport FormNumericInput from '../../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\n//import { transactionStatus } from '../../../components/Enumeration';\r\nclass AddSeqNoFormatRelease extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        this.date = new Date();\r\n        this.year = this.props.intl.formatMessage({ id: \"IDS_YEAR\" })\r\n        this.month = this.props.intl.formatMessage({ id: \"IDS_MONTH\" })\r\n        this.dates = this.props.intl.formatMessage({ id: \"IDS_DATE\" })\r\n        this.character = this.props.intl.formatMessage({ id: \"IDS_LIMSCHARACTER\" })\r\n        this.seqNo = this.props.intl.formatMessage({ id: \"IDS_SEQNO\" })\r\n        this.site = this.props.intl.formatMessage({ id: \"IDS_SITE\" })\r\n    }\r\n    render() {\r\n        let str = '{9999}'\r\n        str = str.substring(1, str.length - 4)\r\n        str = str.padStart(this.props.selectedRecord && this.props.selectedRecord.seqnolength || 4, 9)\r\n        let sseqno = '{' + str + '}'\r\n\r\n        const formatComponents = [\r\n            { \"componentname\": `${this.year} (${this.date.getFullYear()})`, \"componentvalue\": \"{yyyy}\" },\r\n            { \"componentname\": `${this.year} (${this.date.getFullYear().toString().substring(2, 4)})`, \"componentvalue\": \"{yy}\" },\r\n            { \"componentname\": `${this.month} (${(this.date.getMonth() + 1).toString().padStart(2, \"0\")})`, \"componentvalue\": \"{MM}\" },\r\n            { \"componentname\": `${this.month} (${this.months[this.date.getMonth()]})`, \"componentvalue\": \"{MMM}\" },\r\n            { \"componentname\": `${this.dates} (${this.date.getDate()})`, \"componentvalue\": \"{DD}\" },\r\n            { \"componentname\": `${this.character} (${this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\"})`, \"componentvalue\": this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\" },\r\n            { \"componentname\": `${this.seqNo} (${sseqno})`, \"componentvalue\": this.props.selectedRecord && this.props.selectedRecord.sseqno || \"{9999}\" },\r\n            { \"componentname\": \"/\", \"componentvalue\": \"/\" },\r\n            { \"componentname\": \"-\", \"componentvalue\": \"-\" }\r\n        ];\r\n        if (parseInt(this.props.settings[23]) === transactionStatus.YES) {\r\n            formatComponents.push({ \"componentname\": `${this.site} (${this.props.userInfo.ssitecode})`, \"componentvalue\": \"{XXXXX}\" });\r\n        }\r\n        \r\n        const configFields = [\r\n            { \"idsName\": \"IDS_USENEWFORMAT\", \"dataField\": \"nisnewformat\" },\r\n            { \"idsName\": \"IDS_NEEDSITEWISEARNO\", \"dataField\": \"nneedsitewisearnorelease\" },\r\n\r\n        ]\r\n        const CustomToggle = ({ children, eventKey }) => {\r\n            const currentEventKey = React.useContext(AccordionContext);\r\n            const isCurrentEventKey = currentEventKey === eventKey;\r\n            const decoratedOnClick = useAccordionToggle(eventKey, \"\");\r\n            return (\r\n                <div\r\n                    className=\"d-flex justify-content-between\"\r\n                    onClick={decoratedOnClick}>\r\n                    {children}\r\n                    {isCurrentEventKey ?\r\n                        <FontAwesomeIcon icon={faChevronUp} />\r\n                        : <FontAwesomeIcon icon={faChevronDown} //onClick={children.props.onExpandCall}\r\n                        />}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                {/* <Row> */}\r\n                <Row>\r\n                    {configFields.map((field, index) =>\r\n\r\n                        index < 2 ?\r\n                            <Col md={3} key={index}>\r\n                                <CustomSwitch\r\n                                    label={this.props.intl.formatMessage({ id: field.idsName })}\r\n                                    type=\"switch\"\r\n                                    name={field.dataField}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    isMandatory={false}\r\n                                    required={true}\r\n                                    disabled={\r\n                                        //field.dataField==='nneedjoballocation'||\r\n                                       false}\r\n                                    checked={this.props.selectedRecord && this.props.selectedRecord[field.dataField]}\r\n                                />\r\n                            </Col>\r\n                            :\r\n\r\n                            \"\"\r\n\r\n                    )}\r\n                </Row>\r\n               \r\n                <div class='dropdown-divider'/>\r\n                <Row>\r\n                    \r\n                    <FormGroup>\r\n                        {this.props.intl.formatMessage({ id: \"IDS_FORMATRELEASE\" })}\r\n                    </FormGroup>\r\n                   \r\n                </Row>\r\n           \r\n                {/* </Row> */}\r\n                {this.props.selectedRecord && this.props.selectedRecord.nisnewformat ?\r\n                    <Row>\r\n                        {/* <Col md={6}>\r\n                            <FormNumericInput\r\n                                name={\"nresetduration\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_RESETDURATION\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_RESETDURATION\" })}\r\n                                value={this.props.selectedRecord.nresetduration || \"\"}\r\n                                className=\"form-control\"\r\n                                noStyle={true}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={100}\r\n                                onChange={(event) => this.props.onNumericInputChange(event, 'nresetduration')}\r\n                            />\r\n                        </Col> */}\r\n                        <Col md={4}>\r\n                            <FormSelectSearch\r\n                                name={\"nperiodcode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_RESETSEQEVERY\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_RESETDURATION\" })}\r\n                                options={this.props.periodList || []}\r\n                                value={this.props.selectedRecord && this.props.selectedRecord.nperiodcode || ''}\r\n                                isMandatory={true}\r\n                                isSearchable={true}\r\n                                isMulti={false}\r\n                                onChange={(event) => this.props.onComboChange(event, 'nperiodcode')}\r\n                            />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormInput\r\n                                name={\"splaintext\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_TEXTVALUE\" })}\r\n                                type=\"text\"\r\n                                value={this.props.selectedRecord && this.props.selectedRecord.splaintext || \"\"}\r\n                                required={true}\r\n                                maxLength={10}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormNumericInput\r\n                                name={\"seqnolength\"}\r\n                                className={\"form-control\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_SEQUENCENOLENGTH\" })}\r\n                                //value={this.props.selectedRecord && this.props.selectedRecord.seqnolength || 4}\r\n                                value={this.props.selectedRecord && this.props.selectedRecord.seqnolength == \"\" ? this.props.selectedRecord.seqnolength : this.props.selectedRecord.seqnolength || 4}\r\n                                isMandatory={true}\r\n                                type=\"number\"\r\n                                noStyle={true}\r\n                                required={true}\r\n                                strict={true}\r\n                                maxLength={1}\r\n                                onChange={(event) => this.props.onNumericInputChange(event, 'seqnolength')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    : \"\"}\r\n                <Row>\r\n                    <Col md={4} className='mt-3'>\r\n                        <PerfectScrollbar>\r\n                            <AtAccordion>\r\n                                <Accordion activeKey={this.props.selectedRecord && this.props.selectedRecord.nisnewformat ? \"InputFields\" : \"ExistingFormats\"} >\r\n                                    <Card>\r\n                                        {this.props.selectedRecord && this.props.selectedRecord.nisnewformat ?\r\n                                            <>\r\n                                                <Card.Header>\r\n                                                    <CustomToggle eventKey={\"InputFields\"}>\r\n                                                        <Card.Title>\r\n                                                            {this.props.intl.formatMessage({ id: \"IDS_FORMATFIELDS\" })}\r\n                                                        </Card.Title>\r\n                                                    </CustomToggle>\r\n                                                </Card.Header>\r\n                                                <Accordion.Collapse eventKey={\"InputFields\"}>\r\n                                                    <>\r\n                                                        {\r\n                                                            formatComponents.map((sideBarItem, index) => (\r\n                                                                <Draggable type={'formatcomponents'} data={sideBarItem.componentvalue}>\r\n                                                                    <ListGroupItem key={index} className=\"sideBarItem ml-0\" style={{ backgroundColor: \"#155592\", justifyContent: \"space-around\" }}>\r\n                                                                        {sideBarItem.componentname}\r\n                                                                    </ListGroupItem>\r\n                                                                </Draggable>\r\n                                                            ))\r\n                                                        }\r\n                                                    </>\r\n                                                </Accordion.Collapse>\r\n                                            </>\r\n\r\n\r\n                                            :\r\n\r\n                                            this.props.selectedRecord && this.props.selectedRecord.nneedsitewisearnorelease ? <>\r\n                                                <Card.Header>\r\n                                                    <CustomToggle eventKey={\"ExistingFormats\"}>\r\n                                                        <Card.Title>\r\n                                                            {this.props.intl.formatMessage({ id: \"IDS_SITEWISEEXISTINGFORMAT\" })}\r\n                                                        </Card.Title>\r\n                                                    </CustomToggle>\r\n                                                </Card.Header>\r\n                                                <Accordion.Collapse eventKey={\"ExistingFormats\"}>\r\n                                                    <>\r\n                                                        {\r\n                                                            this.props.sitewiseexistingFormatsRelease && this.props.sitewiseexistingFormatsRelease.map((sideBarItem, index) => (\r\n                                                                <Draggable type={'formatcomponents'} data={sideBarItem.sreleaseformat}>\r\n                                                                    <ListGroupItem key={index} className=\"sideBarItem ml-0\" style={{ backgroundColor: \"#155592\", justifyContent: \"space-around\" }}>\r\n                                                                        {sideBarItem.sreleaseformat}\r\n                                                                    </ListGroupItem>\r\n                                                                </Draggable>\r\n                                                            ))\r\n                                                        }\r\n                                                    </>\r\n                                                </Accordion.Collapse>\r\n                                            </> :\r\n\r\n\r\n\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <CustomToggle eventKey={\"ExistingFormats\"}>\r\n                                                            <Card.Title>\r\n                                                                {this.props.intl.formatMessage({ id: \"IDS_EXISTINGFORMAT\" })}\r\n                                                            </Card.Title>\r\n                                                        </CustomToggle>\r\n                                                    </Card.Header>\r\n                                                    <Accordion.Collapse eventKey={\"ExistingFormats\"}>\r\n                                                        <>\r\n                                                            {\r\n                                                                this.props.sreleaseexistingFormats && this.props.sreleaseexistingFormats.map((sideBarItem, index) => (\r\n                                                                    <Draggable type={'formatcomponents'} data={sideBarItem.sreleaseformat}>\r\n                                                                        <ListGroupItem key={index} className=\"sideBarItem ml-0\" style={{ backgroundColor: \"#155592\", justifyContent: \"space-around\" }}>\r\n                                                                            {sideBarItem.sreleaseformat}\r\n                                                                        </ListGroupItem>\r\n                                                                    </Draggable>\r\n                                                                ))\r\n                                                            }\r\n                                                        </>\r\n                                                    </Accordion.Collapse>\r\n                                                </>\r\n                                        }\r\n                                    </Card>\r\n                                </Accordion>\r\n                            </AtAccordion>\r\n                        </PerfectScrollbar>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Row>\r\n                            {this.props.selectedRecord && this.props.selectedRecord.nisnewformat ?\r\n                                <Col md={6} className='d-flex flex-column'>\r\n                                    <Nav.Link className=\"btn-user btn-cancel btn p-0\" onClick={this.props.onClickBackspace}>\r\n                                        <FontAwesomeIcon icon={faBackspace} className='pr-1' />\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_BACKSPACE\" })}\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                                : \"\"\r\n                            }\r\n                            <Col md={6} className=' d-flex justify-content-start'>\r\n                                <Nav.Link className=\"btn-user btn-cancel btn p-0 mb-3\" onClick={this.props.onClickClear}>\r\n                                    <FontAwesomeIcon icon={faTimes} className='pr-1' />\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_CLEARALL\" })}\r\n                                </Nav.Link>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <Droppable\r\n                                    types={['formatcomponents']}\r\n                                    onDrop={event => this.props.onDrop(event)}\r\n                                    className={\"p-1\"}\r\n                                >\r\n                                    <FormTextarea\r\n                                        name={\"sreleaseformat\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_INPUTFORMATWITHINFO\" })}\r\n                                        onChange={(event) => this.props.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_INPUTFORMAT\" })}\r\n                                        value={this.props.selectedRecord && this.props.selectedRecord[\"sreleaseformat\"]}\r\n                                        rows={2}\r\n                                        isMandatory={true}\r\n                                        readOnly={true}\r\n                                        required={true}\r\n                                        showCharCount={true}\r\n                                        maxLength={40}\r\n                                        charLength={this.props.selectedRecord && this.props.selectedRecord[\"sreleaseformat\"] ? this.props.selectedRecord[\"sreleaseformat\"].replaceAll(\"{\", \"\").replaceAll(\"}\", \"\").length : 0}\r\n                                    />\r\n                                </Droppable>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <FormTextarea\r\n                                    name={\"sreleaseexampleformat\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_OUTPUTFORMAT\" })}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_OUTPUTFORMAT\" })}\r\n                                    value={this.props.selectedRecord && this.props.selectedRecord[\"sreleaseexampleformat\"]}\r\n                                    rows={2}\r\n                                    isMandatory={true}\r\n                                    readOnly={true}\r\n                                    required={true}\r\n                                    showCharCount={true}\r\n                                    maxLength={40}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(AddSeqNoFormatRelease)"]},"metadata":{},"sourceType":"module"}