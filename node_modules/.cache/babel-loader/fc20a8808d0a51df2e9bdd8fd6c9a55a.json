{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\goodsin\\\\SampleReceivingTabs.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { Row, Col, Card, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { formatInputDate, rearrangeDateFormat } from '../../components/CommonScript';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { showEsign } from '../../components/CommonScript';\nimport Esign from '../audittrail/Esign';\nimport AddChainCustody from './AddChainCustody';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nclass SampleReceivingTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ccDataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.masterData[\"ChainCustody\"], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord;\n      selectedRecord[\"dreceiveddate\"] = rearrangeDateFormat(this.props.userInfo, selectedRecord[\"sreceiveddate\"]);\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openChildModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n\n      if (fieldName === \"ntzreceiveddate\") {\n        if (comboData === null) {\n          selectedRecord[\"ntzreceiveddate\"] = 0;\n          selectedRecord[\"stzreceiveddate\"] = \"\";\n        } else {\n          selectedRecord[\"stzreceiveddate\"] = comboData.label;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit         \n      let inputData = [];\n      inputData[\"fromDate\"] = this.props.fromDate;\n      inputData[\"toDate\"] = this.props.toDate;\n      inputData[\"userinfo\"] = this.props.userInfo;\n      inputData[\"chaincustody\"] = {\n        \"nsitecode\": this.props.userInfo.ntranssitecode\n      };\n      let selectedId = null;\n      let dataState = undefined;\n      let postParam = undefined;\n\n      if (this.props.operation === \"update\") {\n        // edit            \n        inputData[\"chaincustody\"] = JSON.parse(JSON.stringify(this.props.selectedRecord));\n        selectedId = this.props.selectedRecord.nchaincustodycode;\n        dataState = this.state.dataState;\n      } else {\n        postParam = {\n          inputListName: \"GoodsInList\",\n          selectedObject: \"SelectedGoodsIn\",\n          primaryKeyField: \"nrmsno\",\n          isSingleGet: true\n        };\n        inputData[\"chaincustody\"][\"nrmsno\"] = this.props.masterData.SelectedGoodsIn.nrmsno;\n      }\n\n      inputData[\"chaincustody\"][\"npackagersqty\"] = this.state.selectedRecord[\"npackagersqty\"];\n      inputData[\"chaincustody\"][\"nreceivedownercode\"] = this.props.userInfo.nusercode; // inputData[\"chaincustody\"][\"ndeptcode\"] = this.props.userInfo.ndeptcode;\n\n      inputData[\"chaincustody\"][\"dreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"];\n      inputData[\"chaincustody\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] || \"\";\n      inputData[\"chaincustody\"][\"ntzreceiveddate\"] = this.state.selectedRecord[\"ntzreceiveddate\"] ? this.state.selectedRecord[\"ntzreceiveddate\"].value : 1;\n      inputData[\"chaincustody\"][\"stzreceiveddate\"] = this.state.selectedRecord[\"stzreceiveddate\"] || \"\";\n      const receivedDate = inputData[\"chaincustody\"][\"dreceiveddate\"]; //need this conversion when the datatype of the field is 'Instant'      \n\n      inputData[\"chaincustody\"][\"dreceiveddate\"] = //\"2020-10-12T11:25:00.000Z\";\n      formatInputDate(receivedDate, false);\n      if (Object.keys(inputData[\"chaincustody\"]).indexOf(\"expanded\") !== -1) delete inputData[\"chaincustody\"][\"expanded\"];\n      const inputParam = {\n        classUrl: this.props.inputParam.classUrl,\n        methodUrl: \"ChainCustody\",\n        postParam,\n        inputData: inputData,\n        selectedId,\n        dataState,\n        operation: this.props.operation,\n        saveType,\n        formRef\n      };\n\n      if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n      }\n    };\n\n    this.deleteRecord = deleteParam => {\n      if (deleteParam.selectedRecord.nreceivedownercode === this.props.userInfo.nusercode) {\n        if (Object.keys(deleteParam.selectedRecord).indexOf(\"expanded\") !== -1) delete deleteParam.selectedRecord[\"expanded\"];\n        const inputParam = {\n          classUrl: this.props.inputParam.classUrl,\n          methodUrl: \"ChainCustody\",\n          displayName: \"IDS_CHAINCUSTODY\",\n          inputData: {\n            \"chaincustody\": deleteParam.selectedRecord,\n            \"userinfo\": this.props.userInfo,\n            \"fromDate\": this.props.fromDate,\n            \"toDate\": this.props.toDate\n          },\n          operation: deleteParam.operation,\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              openChildModal: true,\n              screenName: deleteParam.screenName,\n              operation: deleteParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INVALIDOWNERTODELETE\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      // isOpen:false, //activeTab:'chaincustody-tab', \n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState\n    };\n    this.chainCustodyColumnList = [{\n      \"idsName\": \"IDS_RECEIVEDOWNER\",\n      \"dataField\": \"sreceivedowner\",\n      \"width\": \"200px\"\n    }, //{\"idsName\":\"IDS_DEPARTMENT\",\"dataField\":\"sdeptname\",\"width\":\"150px\"},\n    {\n      \"idsName\": \"IDS_NPACKAGERSQTY\",\n      \"dataField\": \"npackagersqty\",\n      \"width\": \"200px\"\n    } // {\"idsName\":\"IDS_RECEIVEDDATE\",\"dataField\":\"sreceiveddate\",\"width\":\"150px\"},                    \n    ];\n    this.detailedFieldList = [// {\"idsName\":\"IDS_RECEIVEDOWNER\",\"dataField\":\"sreceivedowner\"},\n    {\n      \"idsName\": \"IDS_DEPARTMENT\",\n      \"dataField\": \"sdeptname\"\n    }, //   {\"idsName\":\"IDS_NPACKAGERSQTY\",\"dataField\":\"npackagersqty\"},\n    {\n      \"idsName\": \"IDS_RECEIVEDDATETIME\",\n      \"dataField\": \"sreceiveddate\"\n    }, {\n      \"idsName\": \"IDS_TIMEZONE\",\n      \"dataField\": \"stzreceiveddate\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\"\n    }];\n  }\n\n  render() {\n    const addChainCustodyId = this.props.controlMap.has(\"AddChainCustody\") && this.props.controlMap.get(\"AddChainCustody\").ncontrolcode;\n    const editChainCustodyId = this.props.controlMap.has(\"EditChainCustody\") && this.props.controlMap.get(\"EditChainCustody\").ncontrolcode;\n    const ccAddParam = {\n      screenName: \"ChainCustody\",\n      operation: \"create\",\n      primaryKeyField: \"nchaincustodycode\",\n      primaryKeyValue: -2,\n      masterData: this.props.masterData,\n      userInfo: this.props.userInfo,\n      ncontrolCode: addChainCustodyId\n    };\n    const ccEditParam = {\n      screenName: \"ChainCustody\",\n      operation: \"update\",\n      primaryKeyField: \"nchaincustodycode\",\n      masterData: this.props.masterData,\n      userInfo: this.props.userInfo,\n      ncontrolCode: editChainCustodyId\n    };\n    const ccDeleteParam = {\n      screenName: \"ChainCustody\",\n      methodUrl: \"ChainCustody\",\n      operation: \"delete\"\n    };\n    const mandatoryFields = [{\n      \"idsName\": \"IDS_NPACKAGERSQTY\",\n      \"dataField\": \"npackagersqty\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_RECEIVEDDATE\",\n      \"dataField\": \"dreceiveddate\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TIMEZONE\",\n      \"dataField\": \"ntzreceiveddate\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"add-txt-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHAINCUSTODY\",\n      defaultMessage: \"Chain Custody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addchaincustody\",\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addChainCustodyId) === -1,\n      onClick: () => this.props.getChainCustodyComboDataService(ccAddParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CHAINCUSTODY\",\n      defaultMessage: \"Chain Custody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nchaincustodycode\",\n      data: this.props.masterData[\"ChainCustody\"],\n      dataResult: process(this.props.masterData[\"ChainCustody\"], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.ccDataStateChange,\n      extractedColumnList: this.chainCustodyColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      methodUrl: \"ChainCustody\",\n      fetchRecord: this.props.getChainCustodyComboDataService,\n      editParam: ccEditParam,\n      deleteRecord: this.deleteRecord,\n      deleteParam: ccDeleteParam,\n      pageable: true,\n      scrollable: \"scrollable\" //isComponent={true}\n      ,\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: this.props.selectedId,\n      expandField: \"expanded\",\n      detailedFieldList: this.detailedFieldList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }))))))), this.props.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.onSaveClick,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation //formatMessage={this.props.formatMessage}\n        ,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddChainCustody, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedGoodsIn: this.props.masterData.SelectedGoodsIn || {},\n        operation: this.props.operation,\n        userInfo: this.props.userInfo,\n        timeZoneList: this.props.timeZoneList || [],\n        currentTime: this.props.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 39\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.masterData !== previousProps.masterData) {\n      let {\n        dataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        dataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        activeTab: 'chaincustody-tab',\n        dataState\n      });\n    }\n\n    if (this.props.selectedRecord !== previousProps.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default injectIntl(SampleReceivingTabs);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/goodsin/SampleReceivingTabs.jsx"],"names":["React","FormattedMessage","injectIntl","toast","process","Row","Col","Card","Nav","FontAwesomeIcon","faPlus","SlideOutModal","formatInputDate","rearrangeDateFormat","DEFAULT_RETURN","showEsign","Esign","AddChainCustody","DataGrid","transactionStatus","SampleReceivingTabs","Component","constructor","props","ccDataStateChange","event","setState","dataResult","masterData","dataState","closeModal","loadEsign","openChildModal","selectedRecord","userInfo","operation","updateInfo","typeName","data","selectedId","updateStore","handleDateChange","dateName","dateValue","state","onComboChange","comboData","fieldName","label","onInputOnChange","target","type","name","checked","YES","NO","value","onNumericInputOnChange","onSaveClick","saveType","formRef","inputData","fromDate","toDate","ntranssitecode","undefined","postParam","JSON","parse","stringify","nchaincustodycode","inputListName","selectedObject","primaryKeyField","isSingleGet","SelectedGoodsIn","nrmsno","nusercode","receivedDate","Object","keys","indexOf","inputParam","classUrl","methodUrl","esignRights","nformcode","ncontrolCode","screenData","crudMaster","deleteRecord","deleteParam","nreceivedownercode","displayName","screenName","warn","intl","formatMessage","id","validateEsign","sreason","password","validateEsignCredential","skip","take","settings","parseInt","chainCustodyColumnList","detailedFieldList","render","addChainCustodyId","controlMap","has","get","ncontrolcode","editChainCustodyId","ccAddParam","primaryKeyValue","ccEditParam","ccDeleteParam","mandatoryFields","userRoleControlRights","getChainCustodyComboDataService","timeZoneList","currentTime","componentDidUpdate","previousProps","activeTab"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport {Row, Col, Card, Nav} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { formatInputDate, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {showEsign} from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddChainCustody from './AddChainCustody';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nclass SampleReceivingTabs extends React.Component{\r\n    constructor(props){\r\n        super(props);  \r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };       \r\n        this.state = {// isOpen:false, //activeTab:'chaincustody-tab', \r\n                        selectedRecord:{},  dataResult:[],\r\n                        dataState:dataState};\r\n\r\n        this.chainCustodyColumnList=[\r\n                        {\"idsName\":\"IDS_RECEIVEDOWNER\",\"dataField\":\"sreceivedowner\",\"width\":\"200px\"},\r\n                        //{\"idsName\":\"IDS_DEPARTMENT\",\"dataField\":\"sdeptname\",\"width\":\"150px\"},\r\n                        {\"idsName\":\"IDS_NPACKAGERSQTY\",\"dataField\":\"npackagersqty\",\"width\":\"200px\"},\r\n                       // {\"idsName\":\"IDS_RECEIVEDDATE\",\"dataField\":\"sreceiveddate\",\"width\":\"150px\"},                    \r\n                       \r\n                        ];   \r\n                        \r\n        this.detailedFieldList = [\r\n                           // {\"idsName\":\"IDS_RECEIVEDOWNER\",\"dataField\":\"sreceivedowner\"},\r\n                            {\"idsName\":\"IDS_DEPARTMENT\",\"dataField\":\"sdeptname\"},\r\n                         //   {\"idsName\":\"IDS_NPACKAGERSQTY\",\"dataField\":\"npackagersqty\"},\r\n                            {\"idsName\":\"IDS_RECEIVEDDATETIME\",\"dataField\":\"sreceiveddate\"},\r\n                            {\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"stzreceiveddate\"}, \r\n                            {\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\"},  \r\n                                     \r\n                        ];\r\n                       \r\n    } \r\n\r\n    ccDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.masterData[\"ChainCustody\"], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    render(){        \r\n        const addChainCustodyId = this.props.controlMap.has(\"AddChainCustody\") && this.props.controlMap.get(\"AddChainCustody\").ncontrolcode\r\n        const editChainCustodyId = this.props.controlMap.has(\"EditChainCustody\") && this.props.controlMap.get(\"EditChainCustody\").ncontrolcode;\r\n        \r\n        const ccAddParam = {screenName:\"ChainCustody\", operation:\"create\", primaryKeyField:\"nchaincustodycode\", \r\n                            primaryKeyValue:-2, masterData:this.props.masterData, userInfo:this.props.userInfo,\r\n                            ncontrolCode:addChainCustodyId};\r\n                            \r\n        const ccEditParam = {screenName:\"ChainCustody\", operation:\"update\",  primaryKeyField:\"nchaincustodycode\", \r\n                            masterData:this.props.masterData,   userInfo:this.props.userInfo,  ncontrolCode:editChainCustodyId};\r\n\r\n        const ccDeleteParam ={screenName:\"ChainCustody\",methodUrl:\"ChainCustody\", operation:\"delete\"};\r\n\r\n        const mandatoryFields =[{\"idsName\":\"IDS_NPACKAGERSQTY\",\"dataField\":\"npackagersqty\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                    {\"idsName\":\"IDS_RECEIVEDDATE\",\"dataField\":\"dreceiveddate\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                    {\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntzreceiveddate\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}];\r\n        return(\r\n            <>\r\n                <Row noGutters>\r\n                    <Col md={12}>  \r\n                        <Card>  \r\n                            <Card.Header className=\"add-txt-btn\">\r\n                                <strong><FormattedMessage id=\"IDS_CHAINCUSTODY\" defaultMessage=\"Chain Custody\"/></strong> \r\n                            </Card.Header>   \r\n                            <Card.Body>\r\n                                {/* <Row className=\"no-gutters text-right border-bottom pb-2\" >                                            \r\n                                    <Col md={12}>\r\n                                        <Nav.Link name=\"addchaincustody\"  className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addChainCustodyId) === -1}\r\n                                                    onClick={()=>this.props.getChainCustodyComboDataService(ccAddParam)}>\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                            <FormattedMessage id='IDS_CHAINCUSTODY' defaultMessage='Chain Custody' />\r\n                                        </Nav.Link>\r\n                                    </Col>\r\n                                </Row> */}\r\n\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Nav.Link name=\"addchaincustody\"  className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addChainCustodyId) === -1}\r\n                                                    onClick={()=>this.props.getChainCustodyComboDataService(ccAddParam)}>\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                            <FormattedMessage id='IDS_CHAINCUSTODY' defaultMessage='Chain Custody' />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                       \r\n                                <Row noGutters>\r\n                                    <Col md={12}>\r\n                                        <DataGrid\r\n                                            primaryKeyField={\"nchaincustodycode\"}\r\n                                            data={this.props.masterData[\"ChainCustody\"]}\r\n                                            dataResult={process(this.props.masterData[\"ChainCustody\"], this.state.dataState)}\r\n                                            dataState={this.state.dataState}\r\n                                            dataStateChange={this.ccDataStateChange}\r\n                                            extractedColumnList={this.chainCustodyColumnList}\r\n                                            controlMap={this.props.controlMap}\r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            inputParam={this.props.inputParam}\r\n                                            userInfo={this.props.userInfo}\r\n                                            methodUrl=\"ChainCustody\"\r\n                                            fetchRecord={this.props.getChainCustodyComboDataService}\r\n                                            editParam={ccEditParam}\r\n                                            deleteRecord={this.deleteRecord}   \r\n                                            deleteParam={ccDeleteParam}                                                                                         \r\n                                            pageable={true}\r\n                                            scrollable={\"scrollable\"}\r\n                                            //isComponent={true}\r\n                                            isActionRequired={true}\r\n                                            isToolBarRequired={false}\r\n                                            selectedId={this.props.selectedId}\r\n                                            expandField=\"expanded\"\r\n                                            detailedFieldList = {this.detailedFieldList}\r\n                                        />                                                \r\n                                    </Col>\r\n                                </Row>        \r\n                        </Card.Body>                   \r\n                                                                       \r\n                            {/* <Tab.Container defaultActiveKey={this.state.activeTab}>\r\n                                <Card.Header className=\"d-flex tab-card-header\">\r\n                                    <Nav className=\"nav nav-tabs card-header-tabs flex-grow-1\" as=\"ul\">  \r\n                                        <Nav.Item as='li'>\r\n                                            <Nav.Link   name=\"chaincustodytab\" eventKey=\"chaincustody-tab\"> \r\n                                                <FormattedMessage id=\"IDS_CHAINCUSTODY\" defaultMessage=\"Chain Custody\"/>                                                      \r\n                                            </Nav.Link>\r\n                                        </Nav.Item>                                      \r\n                                    </Nav>\r\n                                </Card.Header>\r\n                                <Tab.Content>\r\n                                    <Tab.Pane className=\"fade p-0 \" eventKey=\"chaincustody-tab\">\r\n                                        <Row className=\"no-gutters text-right border-bottom pt-2 pb-2\" >                                            \r\n                                            <Col md={12}>\r\n                                                <Nav.Link name=\"addchaincustody\"  className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addChainCustodyId) === -1}\r\n                                                            onClick={()=>this.props.getChainCustodyComboDataService(ccAddParam)}>\r\n                                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                    <FormattedMessage id='IDS_ADDCHAINCUSTODY' defaultMessage='Add Chain Custody' />\r\n                                                </Nav.Link>\r\n                                            </Col>\r\n                                        </Row>\r\n                                       \r\n                                        <Row className=\"no-gutters\">\r\n                                            <Col md={12}>\r\n                                            <DataGrid\r\n                                                        primaryKeyField={\"nchaincustodycode\"}\r\n                                                        data={this.props.masterData[\"ChainCustody\"]}\r\n                                                        dataResult={process(this.props.masterData[\"ChainCustody\"], this.state.dataState)}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={this.ccDataStateChange}\r\n                                                        extractedColumnList={this.chainCustodyColumnList}\r\n                                                        controlMap={this.props.controlMap}\r\n                                                        userRoleControlRights={this.props.userRoleControlRights}\r\n                                                        inputParam={this.props.inputParam}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        methodUrl=\"ChainCustody\"\r\n                                                        fetchRecord={this.props.getChainCustodyComboDataService}\r\n                                                        editParam={ccEditParam}\r\n                                                        deleteRecord={this.deleteRecord}   \r\n                                                        deleteParam={ccDeleteParam}                                                                                         \r\n                                                        pageable={false}\r\n                                                        scrollable={\"scrollable\"}\r\n                                                        isComponent={true}\r\n                                                        isActionRequired={true}\r\n                                                        isToolBarRequired={false}\r\n                                                        selectedId={this.props.selectedId}\r\n                                                        expandField=\"expanded\"\r\n                                                        detailedFieldList = {this.detailedFieldList}\r\n                                                    />                                                \r\n                                            </Col>\r\n                                        </Row>                                        \r\n                                    </Tab.Pane> \r\n                                    \r\n                                </Tab.Content>\r\n                            </Tab.Container>  */}\r\n                                                                       \r\n                                                                 \r\n                        </Card>   \r\n                    </Col>\r\n                </Row>\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {this.props.openChildModal ? \r\n                <SlideOutModal show={this.props.openChildModal} \r\n                    closeModal={this.closeModal}  \r\n                    operation={this.props.operation}\r\n                    inputParam={this.props.inputParam}  \r\n                    screenName={this.props.screenName}    \r\n                    onSaveClick={this.onSaveClick} \r\n                    updateStore={this.props.updateStore}\r\n                    esign={this.props.loadEsign}\r\n                    validateEsign={this.validateEsign}   \r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={mandatoryFields}               \r\n                    addComponent ={this.props.loadEsign ? \r\n                                <Esign  operation={this.props.operation}\r\n                                        //formatMessage={this.props.formatMessage}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        inputParam={this.props.inputParam}                                               \r\n                                        selectedRecord={this.state.selectedRecord ||{}}\r\n                                 /> : <AddChainCustody selectedRecord={this.state.selectedRecord ||{}}                                  \r\n                                                            onInputOnChange={this.onInputOnChange}\r\n                                                            onComboChange={this.onComboChange}\r\n                                                            handleDateChange={this.handleDateChange}                                                                                                                      \r\n                                                            onNumericInputOnChange={this.onNumericInputOnChange}                                                          \r\n                                                            selectedGoodsIn={this.props.masterData.SelectedGoodsIn ||{}}\r\n                                                            operation={this.props.operation}\r\n                                                            userInfo={this.props.userInfo}\r\n                                                            timeZoneList={this.props.timeZoneList || []}\r\n                                                            currentTime={this.props.currentTime}\r\n                                                         />\r\n                                    }               \r\n                        \r\n                />:\"\"}\r\n            </>\r\n        )\r\n \r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        selectedRecord[\"dreceiveddate\"] = rearrangeDateFormat(this.props.userInfo, selectedRecord[\"sreceiveddate\"]);\r\n        if (this.props.loadEsign){          \r\n            if (this.props.operation === \"delete\"){\r\n                loadEsign = false;\r\n                openChildModal =  false;\r\n            }\r\n            else{\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else{\r\n            openChildModal =  false;\r\n            selectedRecord={};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {openChildModal, loadEsign, selectedRecord, selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        \r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {        \r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue; \r\n        this.setState({selectedRecord});\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        if (fieldName === \"ntzreceiveddate\"){\r\n            if (comboData === null) {\r\n                selectedRecord[\"ntzreceiveddate\"] = 0;\r\n                selectedRecord[\"stzreceiveddate\"] = \"\";\r\n            }\r\n            else {\r\n                selectedRecord[\"stzreceiveddate\"] = comboData.label;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n      \r\n        if (event.target.type === 'checkbox')\r\n        {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else{\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({selectedRecord});\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    componentDidUpdate(previousProps){       \r\n        if (this.props.masterData !== previousProps.masterData ){\r\n            let {dataState} = this.state;\r\n            if(this.props.dataState === undefined){\r\n               dataState = {skip:0,take:this.props.settings ? parseInt(this.props.settings[14]) : 5};\r\n            }\r\n                    \r\n            this.setState({  activeTab:'chaincustody-tab', dataState});\r\n        }\r\n\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord ){             \r\n            this.setState({selectedRecord:this.props.selectedRecord});\r\n         }       \r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n              //add / edit         \r\n     \r\n        let inputData = [];\r\n       \r\n        inputData[\"fromDate\"]=this.props.fromDate;\r\n        inputData[\"toDate\"]=this.props.toDate;\r\n  \r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"chaincustody\"] = {\"nsitecode\":this.props.userInfo.ntranssitecode};\r\n       \r\n        let selectedId = null;\r\n        let dataState = undefined;\r\n        let postParam = undefined;\r\n        if ( this.props.operation === \"update\"){\r\n            // edit            \r\n          \r\n            inputData[\"chaincustody\"] = JSON.parse(JSON.stringify(this.props.selectedRecord));  \r\n            selectedId = this.props.selectedRecord.nchaincustodycode;  \r\n            dataState = this.state.dataState;       \r\n        }\r\n        else{       \r\n            postParam =  { inputListName : \"GoodsInList\", selectedObject : \"SelectedGoodsIn\", primaryKeyField : \"nrmsno\", isSingleGet:true};\r\n            inputData[\"chaincustody\"][\"nrmsno\"] = this.props.masterData.SelectedGoodsIn.nrmsno;\r\n        }\r\n            \r\n        inputData[\"chaincustody\"][\"npackagersqty\"] =  this.state.selectedRecord[\"npackagersqty\"] ;\r\n        inputData[\"chaincustody\"][\"nreceivedownercode\"] = this.props.userInfo.nusercode;\r\n       // inputData[\"chaincustody\"][\"ndeptcode\"] = this.props.userInfo.ndeptcode;\r\n        inputData[\"chaincustody\"][\"dreceiveddate\"]= this.state.selectedRecord[\"dreceiveddate\"];\r\n        inputData[\"chaincustody\"][\"scomments\"]= this.state.selectedRecord[\"scomments\"]||\"\";\r\n        inputData[\"chaincustody\"][\"ntzreceiveddate\"] = this.state.selectedRecord[\"ntzreceiveddate\"] ? this.state.selectedRecord[\"ntzreceiveddate\"].value : 1;\r\n        inputData[\"chaincustody\"][\"stzreceiveddate\"] = this.state.selectedRecord[\"stzreceiveddate\"] || \"\";\r\n      \r\n\r\n        const receivedDate =  inputData[\"chaincustody\"][\"dreceiveddate\"];\r\n        //need this conversion when the datatype of the field is 'Instant'      \r\n        inputData[\"chaincustody\"][\"dreceiveddate\"] = //\"2020-10-12T11:25:00.000Z\";\r\n        formatInputDate(receivedDate, false);\r\n\r\n        if (Object.keys(inputData[\"chaincustody\"]).indexOf(\"expanded\") !== -1)\r\n            delete inputData[\"chaincustody\"][\"expanded\"]\r\n        const inputParam = {\r\n                                classUrl: this.props.inputParam.classUrl,\r\n                                methodUrl: \"ChainCustody\", postParam,\r\n                                inputData: inputData,  selectedId, dataState,\r\n                                operation: this.props.operation , saveType, formRef       \r\n                            }       \r\n           \r\n       if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData:this.props.masterData}, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n        }           \r\n    }   \r\n\r\n    deleteRecord = (deleteParam) =>{       \r\n        if (deleteParam.selectedRecord.nreceivedownercode === this.props.userInfo.nusercode){ \r\n\r\n            if (Object.keys(deleteParam.selectedRecord).indexOf(\"expanded\") !== -1)\r\n            delete deleteParam.selectedRecord[\"expanded\"]\r\n            const inputParam = {\r\n                                    classUrl: this.props.inputParam.classUrl,\r\n                                    methodUrl:\"ChainCustody\",   \r\n                                    displayName:\"IDS_CHAINCUSTODY\",                               \r\n                                    inputData: {\"chaincustody\" :deleteParam.selectedRecord,\r\n                                                \"userinfo\": this.props.userInfo,\r\n                                                \"fromDate\":this.props.fromDate,\r\n                                                \"toDate\":this.props.toDate},\r\n                                    operation:deleteParam.operation ,\r\n                                    dataState : this.state.dataState\r\n                            }        \r\n             \r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, deleteParam.ncontrolCode)){\r\n                const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign:true, screenData:{inputParam, masterData:this.props.masterData}, \r\n                            openChildModal:true, screenName:deleteParam.screenName, operation:deleteParam.operation\r\n                            }\r\n                        }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else{\r\n                \r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n        else{\r\n            toast.warn(this.props.intl.formatMessage({id:\"IDS_INVALIDOWNERTODELETE\"}));\r\n        }\r\n        \r\n    }  \r\n\r\n    validateEsign = () =>{       \r\n        const inputParam = {\r\n                                inputData: {\"userinfo\": {...this.props.userInfo, \r\n                                                        sreason: this.state.selectedRecord[\"esigncomments\"] },\r\n                                             password : this.state.selectedRecord[\"esignpassword\"]\r\n                                            },\r\n                                screenData : this.props.screenData\r\n                            }        \r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n}\r\n\r\nexport default injectIntl(SampleReceivingTabs);"]},"metadata":{},"sourceType":"module"}