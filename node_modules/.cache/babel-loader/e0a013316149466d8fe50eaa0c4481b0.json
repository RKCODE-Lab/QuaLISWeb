{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryTaskTab.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Nav } from 'react-bootstrap';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nclass ResultEntryTaskTab extends React.Component {\n  render() {\n    const addResultUsedTaskId = this.props.controlMap.has(\"AddResultUsedTask\") && this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode;\n    const extractedColumnList = []; // if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\n\n    if (this.props.masterData[\"realRegSubTypeValue\"] && this.props.masterData[\"realRegSubTypeValue\"].nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"155px\"\n      });\n    } else {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"width\": \"155px\"\n      });\n    }\n\n    extractedColumnList.push( //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"155px\" },\n    //{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" },\n    {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PREANALYSISTIME\",\n      \"dataField\": \"spreanalysistime\",\n      \"width\": \"170px\"\n    }, {\n      \"idsName\": \"IDS_PREPARATIONTIME\",\n      \"dataField\": \"spreparationtime\",\n      \"width\": \"170px\"\n    }, {\n      \"idsName\": \"IDS_ANALYSISTIME\",\n      \"dataField\": \"sanalysistime\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_MISCTIME\",\n      \"dataField\": \"smisctime\",\n      \"width\": \"180px\"\n    }, {\n      \"idsName\": \"IDS_USERNAME\",\n      \"dataField\": \"sanalyst\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\",\n      \"width\": \"200px\"\n    });\n    const detailedFieldList = [{\n      \"idsName\": \"IDS_TASKPROCEDURE\",\n      \"dataField\": \"staskprocedure\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"resultusedtask\",\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addResultUsedTaskId) === -1,\n      onClick: () => this.props.addResultEntryTask({\n        userInfo: this.props.userInfo,\n        ntransactiontestcode: this.props.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\n        stestsynonym: this.props.masterData.RESelectedTest.map(test => test.stestsynonym).join(\",\"),\n        addResultUsedTaskId: addResultUsedTaskId,\n        screenName: this.props.screenName\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDTASK\",\n      defaultMessage: \"Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nresultusedtaskcode\",\n      data: this.props.masterData.ResultUsedTasks,\n      dataResult: process(this.props.masterData.ResultUsedTasks || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      extractedColumnList: extractedColumnList,\n      detailedFieldList: detailedFieldList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      methodUrl: this.props.methodUrl,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      hideDetailBand: false,\n      expandField: \"expanded\",\n      isActionRequired: this.props.isActionRequired,\n      deleteParam: this.props.deleteParam || \"\",\n      fetchRecord: this.props.fetchRecord || \"\",\n      editParam: this.props.editParam || \"\",\n      deleteRecord: this.props.deleteRecord || \"\",\n      selectedId: this.props.selectedId,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"550px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ResultEntryTaskTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskTab.jsx"],"names":["React","Row","Col","FormattedMessage","injectIntl","DataGrid","process","FontAwesomeIcon","Nav","faPlus","ResultEntryTaskTab","Component","render","addResultUsedTaskId","props","controlMap","has","get","ncontrolcode","extractedColumnList","masterData","nneedsubsample","push","genericLabel","userInfo","slanguagetypecode","detailedFieldList","userRoleControlRights","indexOf","addResultEntryTask","ntransactiontestcode","RESelectedTest","map","test","join","stestsynonym","screenName","ResultUsedTasks","dataState","dataStateChange","methodUrl","inputParam","isActionRequired","deleteParam","fetchRecord","editParam","deleteRecord","selectedId"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ResultEntryTaskTab extends React.Component {\r\n\r\n    render() {\r\n        const addResultUsedTaskId = this.props.controlMap.has(\"AddResultUsedTask\") && this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode\r\n        const extractedColumnList = [];\r\n        // if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n            if (this.props.masterData[\"realRegSubTypeValue\"] && this.props.masterData[\"realRegSubTypeValue\"].nneedsubsample){\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n        }\r\n        else{\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n        }\r\n            extractedColumnList.push(\r\n            //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"155px\" },\r\n            //{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\", \"width\": \"180px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"sanalyst\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" }\r\n            );\r\n\r\n            const detailedFieldList = [\r\n                { \"idsName\": \"IDS_TASKPROCEDURE\", \"dataField\": \"staskprocedure\" },\r\n             \r\n            ]\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div className=\"actions-stripe border-bottom\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"resultusedtask\" className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addResultUsedTaskId) === -1}\r\n                                    onClick={() => this.props.addResultEntryTask({\r\n                                        userInfo: this.props.userInfo,\r\n                                        ntransactiontestcode: this.props.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\r\n                                        stestsynonym: this.props.masterData.RESelectedTest.map(test => test.stestsynonym).join(\",\"),\r\n                                        addResultUsedTaskId: addResultUsedTaskId, screenName: this.props.screenName\r\n                                    })}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_ADDTASK\" defaultMessage=\"Task\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nresultusedtaskcode\"}\r\n                            data={this.props.masterData.ResultUsedTasks}\r\n                            dataResult={process(this.props.masterData.ResultUsedTasks || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            extractedColumnList={extractedColumnList}\r\n                            detailedFieldList={detailedFieldList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            methodUrl={this.props.methodUrl}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            hideDetailBand={false}\r\n                            expandField=\"expanded\"\r\n                            isActionRequired={this.props.isActionRequired}\r\n                            deleteParam={this.props.deleteParam || \"\"}\r\n                            fetchRecord={this.props.fetchRecord || \"\"}\r\n                            editParam={this.props.editParam || \"\"}\r\n                            deleteRecord={this.props.deleteRecord || \"\"}\r\n                            selectedId={this.props.selectedId}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"550px\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ResultEntryTaskTab);"]},"metadata":{},"sourceType":"module"}