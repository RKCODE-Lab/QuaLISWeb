{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryFormulaForm.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { MediaHeader, MediaSubHeader } from '../../components/App.styles';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst ResultEntryFormulaForm = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props.selectedRecord && props.selectedRecord.parameterData ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, props.selectedRecord.parameterData.sarno ? /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    style: {\n      color: \"#172b4d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, props.selectedRecord.parameterData.sarno) : \"\", props.selectedRecord.parameterData.stestsynonym ? /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    style: {\n      color: \"#505f79\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, \" \", props.selectedRecord.parameterData.stestsynonym, \" \", props.selectedRecord.parameterData.sretestrepeatcount) : \"\", props.selectedRecord.parameterData.sparametersynonym ? /*#__PURE__*/React.createElement(MediaSubHeader, {\n    className: `labelfont`,\n    style: {\n      color: \"#97a0af\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \" \", props.selectedRecord.parameterData.sparametersynonym) : \"\") : \"\", props.DynamicFields.map((fields, index) => /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"mt-4\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: `dynamicformulafield_${index}`,\n    label: fields.sdynamicfieldname,\n    type: \"text\",\n    required: true,\n    isMandatory: true,\n    value: props.selectedRecord.selectedForumulaInput.length > 0 ? props.selectedRecord.selectedForumulaInput[index] ? props.selectedRecord.selectedForumulaInput[index].svalues : \"\" : \"\" //value={props.selectedRecord[\"formulainput\"] ? props.selectedRecord[\"formulainput\"][`dynamicformulafield_${index}`] : \"\"}\n    ,\n    placeholder: fields.sdynamicfieldname,\n    onChange: event => props.onFormulaInputChange(event, index, fields),\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ResultEntryFormulaForm;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryFormulaForm.jsx"],"names":["React","Col","Row","MediaHeader","MediaSubHeader","FormInput","ResultEntryFormulaForm","props","selectedRecord","parameterData","sarno","color","stestsynonym","sretestrepeatcount","sparametersynonym","DynamicFields","map","fields","index","sdynamicfieldname","selectedForumulaInput","length","svalues","event","onFormulaInputChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MediaHeader, MediaSubHeader } from '../../components/App.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst ResultEntryFormulaForm = (props) => {\r\n\r\n    return (\r\n        <Row>\r\n            {props.selectedRecord && props.selectedRecord.parameterData ?\r\n                <Col md={12}>\r\n                    {props.selectedRecord.parameterData.sarno ?\r\n                        <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                            {props.selectedRecord.parameterData.sarno}\r\n                        </MediaHeader>\r\n                        : \"\"}\r\n                    {props.selectedRecord.parameterData.stestsynonym ?\r\n                        <MediaHeader className={`labelfont`} style={{ color: \"#505f79\" }}>\r\n                            { }{ } {props.selectedRecord.parameterData.stestsynonym} {props.selectedRecord.parameterData.sretestrepeatcount}\r\n                        </MediaHeader>\r\n                        : \"\"}\r\n                    {props.selectedRecord.parameterData.sparametersynonym ?\r\n                        <MediaSubHeader className={`labelfont`} style={{ color: \"#97a0af\" }}>\r\n                            { }{ } {props.selectedRecord.parameterData.sparametersynonym}{ }{ }\r\n                        </MediaSubHeader>\r\n                        : \"\"}\r\n                </Col>\r\n                : \"\"}\r\n            {props.DynamicFields.map((fields, index) =>\r\n                <Col md=\"12\" className=\"mt-4\" key={index}>\r\n                    <FormInput\r\n                        name={`dynamicformulafield_${index}`}\r\n                        label={fields.sdynamicfieldname}\r\n                        type=\"text\"\r\n                        required={true}\r\n                        isMandatory={true}\r\n                        value={props.selectedRecord.selectedForumulaInput.length > 0 ?\r\n                            props.selectedRecord.selectedForumulaInput[index] ? props.selectedRecord.selectedForumulaInput[index].svalues : \"\" : \"\"}\r\n                        //value={props.selectedRecord[\"formulainput\"] ? props.selectedRecord[\"formulainput\"][`dynamicformulafield_${index}`] : \"\"}\r\n                        placeholder={fields.sdynamicfieldname}\r\n                        onChange={(event) => props.onFormulaInputChange(event, index, fields)}\r\n                        maxLength={9}\r\n                    />\r\n                </Col>\r\n            )\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultEntryFormulaForm;"]},"metadata":{},"sourceType":"module"}