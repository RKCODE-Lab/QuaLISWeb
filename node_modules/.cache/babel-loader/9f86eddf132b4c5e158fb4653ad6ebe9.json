{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\Approval.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { faFileInvoice, faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync, faPalette } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\nimport { ContentPanel } from '../../components/App.styles';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport { process } from \"@progress/kendo-data-query\"; //import SplitPane from \"react-splitter-layout\";\n\nimport SplitterLayout from \"react-splitter-layout\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\nimport { getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport, getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail, ViewPatientDetails, getTestBasedCompletedBatch, updateEnforceStatus, checkReleaseRecord, getTestResultCorrection, fetchParameterDetails, filterObject, toTimestamp, rearrangeDateFormatforKendoDataTool } from '../../actions';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ApprovalResultsTab from './ApprovalResultsTab';\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\nimport { toast } from 'react-toastify'; //import TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\n\nimport ApprovalFilter from './ApprovalFilter';\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno, SideBarTabIndex, ResultEntry } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport SampleInfoGrid from './SampleInfoGrid';\nimport SampleInfoView from './SampleInfoView';\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport Esign from '../audittrail/Esign';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EditApprovalParameter from './EditApprovalParameter'; //import ApprovalHistoryTab from './ApprovalHistoryTab';\n\nimport SampleApprovalHistory from './SampleApprovalHistory';\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\nimport ApprovalTask from './ApprovalTask';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\nimport TemplateForm from '../checklist/checklist/TemplateForm';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport CustomPopOver from '../../components/customPopover';\nimport ScrollBar from 'react-perfect-scrollbar';\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport ReportHistoryTab from './ReportHistoryTab'; // import ReactTooltip from 'react-tooltip';\n\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SpecificationInfo from '../testgroup/SpecificationInfo';\nimport fullviewExpand from \"../../assets/image/fullview-expand.svg\";\nimport fullviewCollapse from \"../../assets/image/fullview-collapse.svg\";\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import ReactTooltip from 'react-tooltip';\n\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\nimport ModalShow from '../../components/ModalShow';\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\nimport { ReactComponent as ResultCorrection } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/resultcorrection.svg\";\nimport { checkBoxOperation } from '../../components/Enumeration';\nimport { sortDataForDate } from '../../components/CommonScript';\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\nimport { intl } from '../../components/App';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Approval extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onResultInputChange = parameterResults => {\n      this.setState({\n        parameterResults: [...parameterResults],\n        isParameterInitialRender: false // currentAlertResultCode,\n        //  currentntestgrouptestpredefcode\n\n      });\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let ReportmodalShow = this.props.Login.ReportmodalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedComment = this.props.Login.masterData.selectedComment;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n        selectedComment = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal,\n          selectedComment,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveModalResultClick = (saveType, data) => {\n      // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\n      let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults; // let selectedRecord = this.state.selectedRecord || {};\n      // let selectedId = this.props.Login.selectedId || null;\n      // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\n\n      const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\n      const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\n      const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let transactiontestcode = this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\");\n      const classUrl = \"approval\";\n      const formData = new FormData();\n      let neditable = 0;\n      let releaseParameters = [];\n      let inputParam = {}; // let inputData = [];\n\n      let i = 0;\n\n      if (ReleaseParameter !== undefined && ReleaseParameter.length > 0 && ReleaseParameter[0].sresult !== \"\") {\n        ReleaseParameter.map((resultData, index) => {\n          let results = {};\n\n          if (resultData.editable === true) {\n            neditable = 1;\n\n            switch (resultData.nparametertypecode) {\n              case 1:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: resultData[\"ncalculatedresult\"],\n                  sresult: resultData.sresult,\n                  sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\n                  sunitname: resultData.nunitcode.label,\n                  sresultaccuracyname: resultData.nresultaccuracycode.label,\n                  nresultaccuracycode: resultData.nresultaccuracycode.value\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\n                results[\"sresult\"] = resultData.sresult;\n                results[\"sfinal\"] = resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\n                results[\"ngradecode\"] = resultData.sresult !== \"\" ? numericGrade(resultData, results[\"sfinal\"]) : -1;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode.value;\n                break;\n\n              case 2:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sfinal, false),\n                  sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\n                  salertmessage: resultData.salertmessage,\n                  additionalInfo: resultData['additionalInfo'],\n                  additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\n                  ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.ngradecode;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode;\n                break;\n\n              case 3:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode;\n                break;\n\n              case 4:\n                if (resultData.sfinal.length > 0) {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = create_UUID() + '.' + fileExtension;\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = uniquefilename;\n                  results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\n                  results['nunitcode'] = resultData.nunitcode;\n                  formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\n                  formData.append(\"uniquefilename\" + index, uniquefilename);\n                  formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\n                  i++;\n                } else {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = \"\";\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\n                    ncalculatedresult: 4,\n                    sresult: \"\",\n                    sfinal: \"\"\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = \"\";\n                  results[\"sfinal\"] = \"\";\n                  results[\"ngradecode\"] = -1;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = \"\";\n                  results[\"nfilesize\"] = \"\";\n                  formData.append(\"uploadedFile\" + index, \"\");\n                  formData.append(\"uniquefilename\" + index, \"\");\n                  formData.append(\"ntransactiontestcode\", \"\");\n                }\n\n                break;\n\n              default:\n                break;\n            }\n\n            if (Object.values(results).length > 0) {\n              releaseParameters.push(results);\n            }\n          }\n\n          return null;\n        });\n\n        if (neditable === 0) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            // ALPD-4026 (18-05-2024) Added modalShow as false\n            data: {\n              loading: false,\n              openModal: false,\n              modalShow: false,\n              parameterResults: [],\n              selectedRecord: {}\n            }\n          };\n          return this.props.updateStore(updateInfo);\n        }\n\n        formData.append(\"filecount\", i);\n        formData.append(\"nregtypecode\", nregtypecode);\n        formData.append(\"nregsubtypecode\", nregsubtypecode);\n        formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\n        formData.append(\"transactiontestcode\", transactiontestcode);\n        formData.append(\"resultData\", JSON.stringify(releaseParameters));\n        inputParam = {\n          classUrl: classUrl,\n          methodUrl: \"ReleaseParameter\",\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            doAction: \"editresult\"\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          displayName: this.props.Login.inputParam.displayName,\n          saveType //, postParam\n\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              modalShow: false,\n              openModal: true,\n              ncontrolcode: editResultId,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\n        }\n      } // else {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { loading: false, openModal: false }\n      //     }\n      //     return this.props.updateStore(updateInfo);\n      // }\n      else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERRESULT\"\n        }));\n      }\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subSampleSkip: e.skip,\n        subSampleTake: e.take\n      });\n    };\n\n    this.showAPSampleinfo = () => {\n      this.setState({\n        showSample: true,\n        showTest: false\n      });\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.resultCorrectionDataStateChange = event => {\n      this.setState({\n        resultCorrectionDataState: event.dataState\n      });\n    };\n\n    this.currentResultStateChange = event => {\n      this.setState({\n        currentResultState: event.dataState\n      });\n    };\n\n    this.tabDetailResultView = () => {\n      const tabMap = new Map();\n      {\n        tabMap.set(\"IDS_PREVIOUSRESULT\", /*#__PURE__*/React.createElement(DataGrid, {\n          primaryKeyField: \"ntransactiontestcode\",\n          data: this.props.Login.masterData.AuditModifiedComments || [],\n          detailedFieldList: this.feildsForGrid,\n          extractedColumnList: this.feildsForGrid,\n          dataResult: this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0 && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.state.dataState ? this.state.dataState : {\n            skip: 0,\n            take: 10\n          },\n          pageable: true,\n          pageSizes: this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n          scrollable: 'scrollable',\n          dataStateChange: this.dataStateChange,\n          activeTabName: \"IDS_PREVIOUSRESULT\",\n          gridHeight: '500px',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }\n        }));\n        tabMap.set(\"IDS_CURRENTRESULT\", /*#__PURE__*/React.createElement(DataGrid, {\n          primaryKeyField: \"ntransactiontestcode\",\n          data: this.props.Login.masterData.CurrentResult || [],\n          detailedFieldList: this.feildsForGrid,\n          extractedColumnList: this.feildsForGrid,\n          dataResult: this.props.Login.masterData.CurrentResult && this.props.Login.masterData.CurrentResult.length > 0 && process(this.props.Login.masterData.CurrentResult, this.state.currentResultState ? this.state.currentResultState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.state.currentResultState ? this.state.currentResultState : {\n            skip: 0,\n            take: 10\n          },\n          pageable: true,\n          scrollable: 'scrollable',\n          dataStateChange: this.currentResultStateChange,\n          activeTabName: \"IDS_CURRENTRESULT\",\n          pageSizes: this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n          gridHeight: '500px',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.onTabChangeResultView = tabProps => {\n      let masterData = this.props.Login.masterData && this.props.Login.masterData;\n      masterData['activeTabName'] = tabProps.activeTabName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.verticalPaneSizeChange = val => {\n      if (this.state.enableAutoHeight) {\n        this.setState({\n          initialVerticalWidth: val - 150\n        });\n      }\n    };\n\n    this.changeSplitterOption = () => {\n      this.setState({\n        enableAutoHeight: !this.state.enableAutoHeight,\n        initialVerticalWidth: \"57vh\"\n      });\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_RESULTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        tabDetail: this.resultTabDetail(),\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 17\n        }\n      }) : screenName == \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 21\n        }\n      }) : screenName == \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 25\n        }\n      }) : screenName == \"IDS_HISTORY\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTHISTORY\",\n        tabDetail: this.historyTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 29\n        }\n      }) : screenName == \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(ApprovalInstrumentTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.instrumentDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_INSTRUMENT\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 33\n        }\n      }) : screenName == \"IDS_MATERIAL\" ? /*#__PURE__*/React.createElement(ApprovalUsedMaterial, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"ResultUsedMaterial\",\n        controlMap: this.state.controlMap // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\n        ,\n        dataState: this.state.materialDataState // selectedId={this.props.Login.selectedId || null}\n        ,\n        isActionRequired: false,\n        dataStateChange: this.testDataStateChange //deleteRecord={this.deleteMaterialRecord}\n        ,\n        fetchRecord: this.props.fetchMaterialRecord,\n        userRoleControlRights: this.state.userRoleControlRights,\n        screenName: \"IDS_MATERIAL\",\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 37\n        }\n      }) : screenName == \"IDS_TASK\" ? /*#__PURE__*/React.createElement(ApprovalTask, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        ResultUsedTasks: this.props.Login.masterData.ResultUsedTasks,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.taskDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TASK\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 41\n        }\n      }) : screenName == \"IDS_TESTAPPROVALHISTORY\" ? /*#__PURE__*/React.createElement(ApprovalHistoryTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        ApprovalHistory: this.props.Login.masterData.ApprovalHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.historyDataState,\n        masterData: this.props.Login.masterData,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_TESTAPPROVALHISTORY\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 45\n        }\n      }) : screenName == \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0 ? this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {},\n        SingleItem: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 53\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.APSelectedSample,\n        userInfo: this.props.Login.userInfo || {},\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleInfoDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_SAMPLEINFO\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 53\n        }\n      }) : \"\";\n    };\n\n    this.changePropertyViewClose = id => {\n      // this.setState({\n      //             activeTabIndex :undefined,\n      //             activeTestTab:undefined,\n      //             activeTabId :  id\n      //         })\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, screenName, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      } //console.log(this.state.activeTabId, id , \"=======>\")\n\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false; //activeTabId = this.state.activeTabIndex !== index ? true:false;\n      }\n\n      if (status != \"click\") {\n        if (index) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName === \"IDS_HISTORY\" ? \"IDS_TESTHISTORY\" : screenName,\n            activeTabIndex //activeTabId\n\n          };\n          this.onTabChange(tabProps);\n        } //     if (index == SideBarTabIndex.RESULT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_RESULTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.INSTRUMENT) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_INSTRUMENT\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.MATERIAL) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_MATERIAL\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.TASK) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TASK\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTAPPROVALHISTORY\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.ATTACHMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTATTACHMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else if (index == SideBarTabIndex.COMMENTS) {\n        //         const tabProps = {\n        //             tabSequence: SideBarSeqno.TEST,\n        //             screenName: \"IDS_TESTCOMMENTS\",\n        //             activeTabIndex,\n        //             activeTabId\n        //         }\n        //         this.onTabChange(tabProps);\n        //     }\n        //     else {\n        //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        //             const updateInfo = {\n        //                 typeName: DEFAULT_RETURN,\n        //                 data: {\n        //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n        //                     activeTabId: id\n        //                 }\n        //             }\n        //             this.props.updateStore(updateInfo);\n        //         }\n        //     }\n\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence; // if (activeTestTab !== this.props.Login.activeTestTab) {\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            resultDataState: this.state.resultDataState,\n            instrumentDataState: this.state.instrumentDataState,\n            materialDataState: this.state.materialDataState,\n            taskDataState: this.state.taskDataState,\n            documentDataState: this.state.documentDataState,\n            historyDataState: this.state.historyDataState,\n            resultChangeDataState: this.state.resultChangeDataState,\n            testCommentDataState: this.state.testCommentDataState,\n            registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getTestChildTabDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.APSelectedSample,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      } //}\n\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        UserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\n        TestValue: this.props.Login.masterData.realTestValue || {},\n        BatchValue: this.props.Login.masterData.realBatchvalue || {},\n        defaultBatchvalue: this.props.Login.masterData.realBatchvalue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        UserSection: this.props.Login.masterData.realUserSectionList || [],\n        Test: this.props.Login.masterData.realTestList || [],\n        Batchvalues: this.props.Login.masterData.realBatchvaluesList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      }; // JobStatus={this.props.Login.masterData.JobStatus || []}\n      // DynamicDesignMapping={this.state.stateDynamicDesign || []}\n      // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadReport = input => {\n      let inputParam = {\n        inputData: {\n          selectedRecord: { ...input.inputData\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"approval\",\n        operation: \"view\",\n        methodUrl: \"Report\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.subsampleTabDetail = () => {\n      let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      const tabMap = new Map();\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      let {\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2676,\n          columnNumber: 48\n        }\n      }));\n      tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2717,\n          columnNumber: 45\n        }\n      }));\n      return tabMap;\n    };\n\n    this.resultTabDetail = () => {\n      const resultTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      resultTabMap.set(\"IDS_RESULTS\", /*#__PURE__*/React.createElement(ApprovalResultsTab, {\n        userInfo: this.props.Login.userInfo,\n        genericLabel: this.props.Login.genericLabel,\n        tabSequence: SideBarSeqno.TEST,\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTS\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        getStatusCombo: this.props.getStatusCombo,\n        selectedId: this.props.Login.masterData.selectedParamId,\n        viewFile: this.props.viewAttachment,\n        checkListRecord: this.props.checkListRecord,\n        getEnforceCommentsHistory: this.props.getEnforceCommentsHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2775,\n          columnNumber: 41\n        }\n      }));\n      resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\", /*#__PURE__*/React.createElement(ResultChangeHistoryTab, {\n        tabSequence: SideBarSeqno.TEST,\n        genericLabel: this.props.Login.genericLabel,\n        userInfo: this.props.Login.userInfo,\n        ApprovalResultChangeHistory: this.props.Login.masterData.ApprovalResultChangeHistory,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.resultChangeDataState,\n        dataStateChange: this.testDataStateChange,\n        screenName: \"IDS_RESULTCHANGEHISTORY\",\n        controlMap: this.state.controlMap,\n        masterData: this.props.Login.masterData,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedId: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2794,\n          columnNumber: 13\n        }\n      }));\n      return resultTabMap;\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_TESTATTACHMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"screateddate\"\n        }],\n        isneedReport: false,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2831,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment //  masterList={this.props.Login.masterData.APSelectedSubSample}\n        ,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2877,\n          columnNumber: 62\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: this.props.Login.masterData.APSelectedSample,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick // masterList={this.props.Login.masterData.APSelectedSample}\n        ,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.APSelectedSample\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2921,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subSampleSkip,\n        subSampleTake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        isSampleTestComment: true,\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        isneedReport: false,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2985,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false //  masterList={this.props.Login.masterData.APSelectedSubSample}\n        ,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLEARNO\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3034,\n          columnNumber: 56\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false //masterList={this.props.Login.masterData.APSelectedSample}\n        ,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.sampleCommentDataState,\n        dataStateChange: this.sampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.APSelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_ARNUMBER\",\n        displayName: \"sarno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3081,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.historyTabDetail = () => {\n      const historyTabMap = new Map();\n      let historyExtractedColumnList = []; // if(this.props.Login.screenName === \"IDS_TESTHISTORY\"){\n\n      historyExtractedColumnList.push({\n        \"idsName\": \"IDS_ARNO\",\n        \"dataField\": \"sarno\",\n        \"width\": \"150px\"\n      });\n      this.props.Login.masterData && this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && historyExtractedColumnList.push({\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"200px\"\n      });\n      historyExtractedColumnList.push({\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"stransdisplaystatus\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_TRANSACTIONDATE\",\n        \"dataField\": \"stransactiondate\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_USER\",\n        \"dataField\": \"susername\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_USERROLE\",\n        \"dataField\": \"suserrolename\",\n        \"width\": \"200px\"\n      }); // } \n      // else if(this.props.Login.screenName === \"IDS_SUBSAMPLEHISTORY\"){\n      //     historyExtractedColumnList.push(\n      //         { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" },\n      //         { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }\n      //     );\n      // } else if(this.props.Login.screenName === \"IDS_SAMPLEHISTORY\"){\n      //     historyExtractedColumnList.push(\n      //         { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }\n      //     );\n      // }\n\n      historyTabMap.set(\"IDS_TESTHISTORY\", /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntesthistorycode\",\n        data: this.props.Login.masterData.RegistrationTestHistory,\n        dataResult: process(this.props.Login.masterData.RegistrationTestHistory || [], this.state.registrationTestHistoryDataState),\n        dataState: this.state.registrationTestHistoryDataState,\n        dataStateChange: this.RegistrationHistoryDataStateChange,\n        extractedColumnList: historyExtractedColumnList,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        isRefreshRequired: false,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: false,\n        isToolBarRequired: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3159,\n          columnNumber: 46\n        }\n      }));\n      return historyTabMap;\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (value === 0 || value === 0.0) {\n        selectedRecord[name] = \"\";\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[name] = value;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      }); //setTimeout(() => { this._scrollBarRef.updateScroll() })\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.closeAlert = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          availableReleaseRecord: undefined,\n          loading: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkRetestAction = (action, ncontrolCode) => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.props.Login.availableReleaseRecord == undefined) {\n          //|| action.ntransactionstatus === transactionStatus.RECALC) \n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n              let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n              if (ntransCode === transactionStatus.ALL) {\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n              } else {\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n              }\n\n              let {\n                testskip,\n                testtake\n              } = this.state;\n              let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n              testList = testList.slice(testskip, testskip + testtake);\n              let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n              const inputParam = {\n                inputData: {\n                  'performaction': {\n                    npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n                    ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n                    nTransStatus: action.ntransactionstatus,\n                    stransdisplaystatus: action.stransdisplaystatus,\n                    ntransactionstatus: String(-1),\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                    nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                    nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n                    dfrom: obj.fromDate,\n                    dto: obj.toDate,\n                    nflag: 2,\n                    ntype: 1,\n                    userinfo: this.props.Login.userInfo,\n                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\n                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\n                    retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n                    ncontrolCode,\n                    //  checkBoxOperation: 3,\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                    nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n                    activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n                    activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n                    activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\",\n                    nneedmyjob: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedmyjob || false\n                  },\n                  userinfo: this.props.Login.userInfo\n                },\n                userinfo: this.props.Login.userInfo,\n                masterData: this.props.Login.masterData,\n                methodUrl: \"checkReleaseRecord\",\n                postParamList: this.postParamList,\n                action: action,\n                availableReleaseRecord: undefined\n              };\n              this.props.checkReleaseRecord(inputParam);\n            }\n          }\n        } else if (action.ntransactionstatus === transactionStatus.RETEST) {\n          //&& this.props.Login.availableReleaseRecord === false) {\n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              if (this.props.Login.masterData.APSelectedTest[0].nisiqcmaterial === 3) {\n                toast.warn(this.props.intl.formatMessage({\n                  id: \"IDS_IQCSAMPLECAN'TRETEST\"\n                }));\n              } else {\n                const updateInfo = {\n                  typeName: DEFAULT_RETURN,\n                  data: {\n                    action,\n                    masterData: this.props.Login.masterData,\n                    openChildModal: true,\n                    screenName: \"IDS_RETESTCOUNT\",\n                    operation: \"dynamic\",\n                    availableReleaseRecord: undefined\n                  }\n                };\n                this.props.updateStore(updateInfo);\n              }\n            }\n          } else {\n            this.performTestActions(action, ncontrolCode);\n          }\n        } else if (action.ntransactionstatus === transactionStatus.RECALC && this.props.Login.availableReleaseRecord == undefined) {\n          const inputParam = {\n            inputData: {\n              'performaction': {\n                npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n                ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n                nTransStatus: action.ntransactionstatus,\n                stransdisplaystatus: action.stransdisplaystatus,\n                ntransactionstatus: String(-1),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n                // dfrom: obj.fromDate,\n                // dto: obj.toDate,\n                nflag: 2,\n                ntype: 1,\n                userinfo: this.props.Login.userInfo,\n                APSelectedSample: this.props.Login.masterData.APSelectedSample,\n                APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n                APSelectedTest: this.props.Login.masterData.APSelectedTest,\n                retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n                ncontrolCode,\n                // checkBoxOperation: 3,\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n                activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n                activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n                activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\n              },\n              userinfo: this.props.Login.userInfo\n            },\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            methodUrl: \"checkReleaseRecord\",\n            postParamList: this.postParamList,\n            action: action,\n            availableReleaseRecord: undefined\n          };\n          this.props.checkReleaseRecord(inputParam);\n        } else if (action.ntransactionstatus === transactionStatus.RECALC) {\n          // && this.props.Login.availableReleaseRecord === false)\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              action,\n              masterData: this.props.Login.masterData,\n              //openChildModal: true,\n              //screenName: \"IDS_RETESTCOUNT\",\n              operation: \"dynamic\",\n              availableReleaseRecord: undefined\n            }\n          };\n          this.props.updateStore(updateInfo);\n          this.performTestActions(action, ncontrolCode);\n        } else {\n          this.performTestActions(action, ncontrolCode);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.performTestActions = (action, ncontrolCode) => {\n      if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount);\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n        if (ntransCode === transactionStatus.ALL) {\n          ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        } else {\n          ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n        }\n\n        let {\n          testskip,\n          testtake\n        } = this.state;\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n        testList = testList.slice(testskip, testskip + testtake);\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n        const inputParam = {\n          inputData: {\n            'performaction': {\n              npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n              ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n              ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n              nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              nTransStatus: action.ntransactionstatus,\n              stransdisplaystatus: action.stransdisplaystatus,\n              ntransactionstatus: String(-1),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              nneedjoballocation: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nflag: 2,\n              ntype: 1,\n              userinfo: this.props.Login.userInfo,\n              APSelectedSample: this.props.Login.masterData.APSelectedSample,\n              APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n              APSelectedTest: this.props.Login.masterData.APSelectedTest,\n              retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              ncontrolCode,\n              //  checkBoxOperation: 3,\n              checkBoxOperation: checkBoxOperation.SINGLESELECT,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n              nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1,\n              activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\n              activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\n              activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\",\n              nneedmyjob: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedmyjob || false\n            },\n            userinfo: this.props.Login.userInfo\n          },\n          masterData: this.props.Login.masterData,\n          methodUrl: \"performaction\",\n          postParamList: this.postParamList\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"performaction\",\n              operation: \"dynamic\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.performAction(inputParam);\n        }\n      }\n    };\n\n    this.updateDecision = action => {\n      let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus;\n\n      if (ntransCode === transactionStatus.ALL) {\n        ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      }\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      let {\n        skip,\n        take\n      } = this.state;\n      let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.splice(skip, skip + take);\n      let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\n\n      if (selectedsampleList.length > 0) {\n        const inputData = {\n          'updatedecision': {\n            npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\n            nTransStatus: action.ntransactionstatus,\n            ntransactionstatus: String(ntransCode),\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\n            nflag: 1,\n            userinfo: this.props.Login.userInfo,\n            napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\n            napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\n            selectedSample: this.props.Login.masterData.selectedSample\n          },\n          userinfo: this.props.Login.userInfo\n        };\n        let inputParam = {\n          postParamList: this.postParamList,\n          inputData,\n          masterData: this.props.Login.masterData\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"updatedecision\",\n              operation: \"decision\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateDecision(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLE\"\n        }));\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            this.props.getRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            this.props.getRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              //nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null,\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n              realRegTypeList: this.props.Login.masterData.realRegTypeList,\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            let ApprovalVersionValue = comboData.item;\n            ApprovalVersionValue['napproveconfversioncode'] = comboData.value;\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              napproveconfversioncode: comboData.value,\n              ApprovalVersionValue: comboData.item,\n              //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\n              //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            let inputData = {\n              masterData: masterData,\n              ntestcode: comboData.item.ntestcode,\n              defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\n              //ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus.toString(),\n              userinfo: this.props.Login.userInfo,\n              napprovalversioncode: parseInt(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode)\n            };\n            this.props.getTestBasedCompletedBatch(inputData); // const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //     data: { masterData }\n            // }\n            // this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'nbatchmastercode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let defaultBatchvalue = comboData.item;\n            this.props.Login.masterData.defaultBatchvalue = defaultBatchvalue;\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData: { ...this.props.Login.masterData\n                }\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null,\n              //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1 //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode, \n\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        }\n      } else {\n        if (fieldName === 'nbatchmastercode') {\n          this.props.Login.masterData.defaultBatchvalue = [];\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData: { ...this.props.Login.masterData\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.onComboChange = comboData => {\n      if (comboData) {\n        let masterData = { ...this.props.Login.masterData,\n          GradeValue: comboData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            masterData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\n          realRegTypeList: this.props.Login.masterData.realRegTypeList,\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getApprovalVersion(inputParam);\n    };\n\n    this.changeMandatory = (event, dataItem) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO;\n      selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"],\n        [dataItem.ntransactionresultcode]: value\n      };\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onReload = () => {\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realBatchvalue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        nbatchmastercode: realBatchvalue && realBatchvalue.nbatchmastercode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        //  ALPD-4133 to Clear Additional Filter Config Data upon Refresh and clear filter ATE-241\n        masterData[\"kendoFilterList\"] = undefined;\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realBatchCodeValue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType && this.props.Login.masterData.SampleType;\n      let realRegTypeList = this.props.Login.masterData.RegType && this.props.Login.masterData.RegType;\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType && this.props.Login.masterData.RegSubType;\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus && this.props.Login.masterData.FilterStatus;\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion && this.props.Login.masterData.ApprovalVersion;\n      let realUserSectionList = this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection;\n      let realTestList = this.props.Login.masterData.Test && this.props.Login.masterData.Test;\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping;\n      let realBatchvalue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue;\n      let realBatchvaluesList = this.props.Login.masterData.Batchvalues && this.props.Login.masterData.Batchvalues; // Batchvalues:this.props.Login.masterData.realBatchvaluesList || {},\n\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue,\n        realBatchCodeValue,\n        realDesignTemplateMappingList,\n        realTestList,\n        realUserSectionList,\n        realApprovalVersionList,\n        realFilterStatusList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realSampleTypeList,\n        realBatchvalue,\n        realBatchvaluesList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab,\n        activeSampleTab: this.props.Login.activeSampleTab,\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        //  checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        nbatchmastercode: this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        // ALPD-4133 to Clear Additional Filter info on filter Submit ATE-241\n        masterData[\"kendoFilterList\"] = undefined; // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\n\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onMultiFilterClick = () => {\n      var _this$props$Login$mas;\n\n      const filterFields = this.state.sampledisplayfields || [];\n      const samplefilteritem = this.state.samplefilteritem || [];\n      const languageTypeCode = this.props.Login.userInfo.slanguagetypecode;\n      const datefileds = [];\n      let updFilterFields = [];\n      filterFields.length > 0 && filterFields.map(item => {\n        let obj = {};\n        obj[\"filterinputtype\"] = item[3];\n        obj[\"displayname\"] = item[1];\n        obj[\"columnname\"] = item[2];\n        updFilterFields.push(obj);\n      });\n      const fields = [];\n      const kendoFilterList = ((_this$props$Login$mas = this.props.Login.masterData) === null || _this$props$Login$mas === void 0 ? void 0 : _this$props$Login$mas.kendoFilterList) || [];\n\n      if (kendoFilterList.length === 0 || kendoFilterList.filters && kendoFilterList.filters.length === 0) {\n        kendoFilterList[\"logic\"] = \"and\";\n        kendoFilterList[\"filters\"] = [];\n        samplefilteritem.length > 0 && samplefilteritem.map(item => {\n          let obj = {};\n          obj[\"field\"] = item[2];\n          obj[\"value\"] = \"\";\n\n          if (item[3] === \"date\" || item[3] === \"numeric\") {\n            obj[\"operator\"] = \"eq\";\n          } else {\n            obj[\"operator\"] = \"contains\";\n          }\n\n          kendoFilterList[\"filters\"].push(obj);\n        });\n      }\n\n      updFilterFields.length > 0 && updFilterFields.map(item => {\n        fields.push(filterObject(item, languageTypeCode, null, null, true));\n\n        if (item.filterinputtype === \"date\") {\n          datefileds.push(item.columnname);\n        }\n      });\n      const sampleList = this.props.Login.masterData.AP_SAMPLE || [];\n      const kendoOptionList = sampleList.length > 0 ? sampleList.map(item => {\n        datefileds.map(x => {\n          item[x + \"timestamp\"] = toTimestamp(rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, item[x]));\n        });\n        return item;\n      }) : [];\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal: true,\n          masterData: { ...this.props.Login.masterData,\n            fields,\n            kendoFilterList,\n            kendoOptionList\n          },\n          multiFilterLoad: true,\n          screenName: \"IDS_ADDITIONALFILTER\",\n          skip: undefined\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.parentCallBack = (data, filter) => {\n      this.setState({\n        filterSampleList: data,\n        kendoFilterList: filter\n      });\n    };\n\n    this.handleFilterChange = event => {\n      let masterData = this.props.Login.masterData || {};\n      masterData['kendoFilterList'] = event.filter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_RESULTS\":\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_INSTRUMENT\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_MATERIAL\":\n          this.setState({\n            materialDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TASK\":\n          this.setState({\n            taskDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTHISTORY\":\n          this.setState({\n            registrationTestHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_DOCUMENTS\":\n          this.setState({\n            documentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_RESULTCHANGEHISTORY\":\n          this.setState({\n            resultChangeDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTAPPROVALHISTORY\":\n          this.setState({\n            historyDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.subSampledataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subSampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subSampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            popUptestDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLEINFO\":\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEAPPROVALHISTORY\":\n          this.setState({\n            sampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_PRINTHISTORY\":\n          this.setState({\n            samplePrintHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_REPORTHISTORY\":\n          this.setState({\n            reportHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLECOMMENTS\":\n          this.setState({\n            sampleCommentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.RegistrationHistoryDataStateChange = event => {\n      switch (this.props.Login.screenName) {\n        case \"IDS_TESTHISTORY\":\n          this.setState({\n            registrationTestHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEHISTORY\":\n          this.setState({\n            registrationSubSampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEHISTORY\":\n          this.setState({\n            registrationSampleHistoryDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData;\n      let {\n        realFromDate,\n        realToDate,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n      let inputData = {};\n      let inputParam = {};\n      let ok = true;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.operation === 'enforce') {\n        inputData[\"enforcestatus\"] = {\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          ngradecode: this.props.Login.masterData.GradeValue.value || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\n          ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\n          senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\n          selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\n          // ALPD-1413\n          // ntransactionstatus: this.props.Login.masterData.FilterStatusValue \n          // ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\n          // || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \n          // ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\n          napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n          npreregno: \"0\",\n          preregno: this.props.Login.masterData.APSelectedSample[0].npreregno,\n          // ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample[0].ntransactionsamplecode,\n          nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n          ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          ntype: 2,\n          //  checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          activeTestTab: this.props.Login.activeTestTab || \"\",\n          activeSampleTab: this.props.Login.activeSampleTab || \"\",\n          activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n          enforcestatus: true,\n          masterData: this.props.Login.masterData\n        };\n        inputParam = {\n          methodUrl: \"EnforceStatus\",\n          classUrl: 'approval',\n          inputData: inputData,\n          masterData: this.props.Login.masterData,\n          postParam: {\n            selectedObject: \"APSelectedTest\",\n            primaryKeyField: \"ntransactiontestcode\"\n          },\n          operation: \"update\"\n        };\n      } else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord: this.state.selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation\n        };\n        inputParam = onSaveSampleAttachment(saveParam);\n      } else {\n        let approvalparameter = [];\n\n        if (this.state.selectedRecord.approvalParameterEdit) {\n          Object.keys(this.state.selectedRecord.approvalParameterEdit).map(key => approvalparameter.push({\n            ntransactionresultcode: key,\n            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\n          }));\n          inputData[\"approvalparameter\"] = approvalparameter;\n          inputParam = {\n            methodUrl: \"ApprovalParameter\",\n            classUrl: 'approval',\n            inputData: inputData,\n            postParam: {\n              selectedObject: \"APSelectedTest\",\n              primaryKeyField: \"ntransactiontestcode\"\n            },\n            operation: \"update\"\n          };\n        } else {\n          ok = false;\n          this.handleClose();\n        }\n      }\n\n      if (ok) {\n        if (this.props.Login.operation === 'enforce') {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                operation: this.props.Login.operation,\n                screenName: \"IDS_ENFORCESTATUS\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.updateEnforceStatus(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                operation: this.props.Login.operation,\n                screenName: \"IDS_ENFORCESTATUS\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        }\n      }\n    };\n\n    this.onKeyPress = (event, index, paremterResultcode) => {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < event.target.form.elements.length; i++) {\n          if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\n            event.target.form.elements[i].focus();\n            break;\n          }\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let templateData = this.props.Login.templateData;\n      let operation = this.props.Login.operation;\n      let multiFilterLoad = this.props.Login.multiFilterLoad;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n      let availableReleaseRecord = this.props.Login.availableReleaseRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n          templateData = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n        }\n\n        selectedRecord['esignpassword'] = \"\";\n        selectedRecord['esigncomments'] = \"\";\n        selectedRecord['esignreason'] = \"\";\n        availableReleaseRecord = undefined;\n      } else {\n        openTemplateModal = false;\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        templateData = {};\n        availableReleaseRecord = undefined;\n        multiFilterLoad = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          templateData,\n          selectedParamId: null,\n          operation,\n          openTemplateModal,\n          availableReleaseRecord,\n          multiFilterLoad\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveMultiFilterClick = () => {\n      const startDate = this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date();\n      const endDate = this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date();\n      let obj = convertDateValuetoString(startDate, endDate, this.props.Login.userInfo);\n      const fromDate = obj.fromDate;\n      const toDate = obj.toDate;\n      const searchedSample = this.state.filterSampleList ? sortDataForDate(this.state.filterSampleList, 'dtransactiondate', 'npreregno') : [];\n      const kendoFilterList = this.state.kendoFilterList || [];\n      const emptyFilterList = [];\n\n      if (kendoFilterList.filters && kendoFilterList.filters.length > 0) {\n        kendoFilterList.filters.map(item => {\n          if (item.value === \"\") {\n            emptyFilterList.push(item);\n          }\n        });\n      }\n\n      if (emptyFilterList.length > 0) {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_PROVIDEVALUESFORINPUTS\"\n        }));\n      } else {\n        const selectedSample = [];\n        const masterData = this.props.Login.masterData;\n\n        if (searchedSample.length === 0) {\n          let searchSampleRef = this.searchSampleRef;\n          searchSampleRef.current.value = \"\";\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData: { ...masterData,\n                selectedSample: [],\n                selectedSubSample: [],\n                selectedTest: [],\n                searchedSample: [],\n                searchedSubSample: undefined,\n                searchedTest: undefined,\n                RegistrationAttachment: [],\n                AP_SUBSAMPLE: [],\n                AP_TEST: [],\n                RegistrationTestComment: [],\n                RegistrationParameter: [],\n                RegistrationTestAttachment: [],\n                RegistrationComment: [],\n                RegistrationSampleAttachment: [],\n                RegistrationSampleComment: []\n              },\n              multiFilterLoad: false,\n              openChildModal: false,\n              searchSampleRef\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          selectedSample.push(searchedSample[0]);\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n            userinfo: this.props.Login.userInfo,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n            screenName: this.props.Login.screenName,\n            searchSubSampleRef: this.searchSubSampleRef,\n            searchTestRef: this.searchTestRef,\n            instrumentDataState: this.state.instrumentDataState,\n            materialDataState: this.state.materialDataState,\n            taskDataState: this.state.taskDataState,\n            documentDataState: this.state.documentDataState,\n            resultChangeDataState: this.state.resultChangeDataState,\n            testCommentDataState: this.state.testCommentDataState,\n            historyDataState: this.state.historyDataState,\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1,\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n            fromdate: fromDate,\n            todate: toDate,\n            testskip: 0,\n            testtake: this.state.testtake,\n            subSampleSkip: 0,\n            subSampleTake: this.state.subSampleTake,\n            skip: 0,\n            resultDataState: this.state.resultDataState,\n            sampleChangeDataState: this.state.sampleChangeDataState,\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\n            childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"],\n            npreregno: selectedSample[0].npreregno && selectedSample[0].npreregno.toString(),\n            removeElementFromArray: masterData.selectedSample,\n            sample: selectedSample,\n            APSelectedSample: selectedSample,\n            searchSampleRef: this.searchSampleRef,\n            masterData: { ...masterData,\n              searchedSample,\n              selectedSample,\n              kendoFilterList: kendoFilterList\n            },\n            openChildModal: false,\n            multiFilterLoad: false\n          }; // const updateInfo = {\n          //     typeName: DEFAULT_RETURN,\n          //     data: {\n          //         masterData:{...this.props.Login.masterData, searchedSample, selectedSample},\n          //         openModal: false, \n          //         multiFilterLoad : false,\n          //     }\n          // }\n          // this.props.updateStore(updateInfo);\n\n          this.props.getsubSampleDetail(inputData, true);\n        }\n      }\n    };\n\n    this.viewSample = viewdetails => {\n      this.props.ViewPatientDetails(this.props.Login.masterData, \"IDS_PREVIOUSRESULTVIEW\", this.props.Login.userInfo, viewdetails);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData,\n        operation: this.props.Login.operation\n      };\n\n      if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision' || this.props.Login.operation === 'enforce') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\n      }\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveTestComments(saveParam, selectedTestList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSampleComments(saveParam, acceptList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSubSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\"); // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\n\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSubSampleComments(saveParam, acceptList);\n        }\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let {\n        testskip,\n        testtake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let ok = true;\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n\n        if (selectedSampleList.length > 0) {\n          inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n\n        if (selectedTestList.length > 0) {\n          inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n        }\n      }\n    };\n\n    this.generateCOAReport = (inputData, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        let inputParam = {\n          reporparam: inputData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openChildModal: true,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: \"reportgeneration\",\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateCOAReport(inputData);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      resultCorrectionDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }]\n\n      },\n      instrumentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      materialDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      taskDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 // group: [{ field: 'sarno' }] \n\n      },\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      documentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      resultChangeDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      sampleHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      reportHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      historyDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      dataState: {\n        skip: 0,\n        take: 10\n      },\n      samplePrintHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }]\n\n      },\n      subSampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      registrationTestHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      currentResultState: {\n        skip: 0,\n        take: 10\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      showSample: false,\n      showSubSample: false,\n      showTest: true,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      stateDynamicDesign: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      TestList: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 22,\n      subSampleSkip: 0,\n      subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\n      initialVerticalWidth: \"57vh\",\n      enablePin: false,\n      filterSampleList: []\n    }; //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  } // onSecondaryPaneSizeChange = (e, val) => {\n  //     this.setState({\n  //         firstPane: e - val,\n  //         tabPane: e - 80,\n  //         childPane: this.state.parentHeight - e - 80\n  //     })\n  // }\n\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  constructDesign(list) {\n    let newList = [];\n\n    if (list.length > 0) {\n      list.map(i => {\n        newList.push({\n          [designProperties.LABEL]: i,\n          [designProperties.VALUE]: i\n        });\n      });\n    }\n\n    return newList;\n  }\n\n  showAPTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false,\n      showSubSample: false\n    });\n  }\n\n  showAPSubSampleinfo() {\n    this.setState({\n      showSample: false,\n      showTest: true,\n      showSubSample: !this.state.showSubSample\n    });\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\",\n        \"dataType\": [option[designProperties.LISTITEM]]\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const auditInfoFields = [// { \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \n    {\n      \"label\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"fieldName\": \"sarno\"\n    }, //{ \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\n    //{ \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \n    {\n      \"fieldName\": \"sfirstname\",\n      \"label\": \"IDS_PATIENTNAME\"\n    }, //{ \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\n    {\n      \"fieldName\": \"sgendername\",\n      \"label\": \"IDS_GENDER\"\n    } //{ \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\n    //{ \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\n    ];\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\n    {\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"200px\"\n    }, //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\n    //{ \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }, \n    {\n      \"idsName\": \"IDS_TEST\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETER\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REGISTRATIONDATE\",\n      \"dataField\": \"sregdate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTREFNO\",\n      \"dataField\": \"sreportno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    } // { \"idsName\": \"IDS_COMPLETEDDATEANDTIME\", \"dataField\": \"scompletedate\", \"width\": \"200px\" },\n    ];\n    let resultCorrectionColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"150px\"\n    }];\n    {\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && resultCorrectionColumnList.push({\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"150px\"\n      });\n    }\n    resultCorrectionColumnList.push({\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"150px\",\n      \"fieldType\": \"gradeColumn\"\n    }, {\n      \"idsName\": \"IDS_UNIT\",\n      \"dataField\": \"sunitname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWA\",\n      \"dataField\": \"smina\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWB\",\n      \"dataField\": \"sminb\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHA\",\n      \"dataField\": \"smaxa\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHB\",\n      \"dataField\": \"smaxb\",\n      \"width\": \"150px\"\n    }\n    /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\n    );\n    const filterSampleParam = {\n      inputListName: \"AP_SAMPLE\",\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      selectedObject: \"APSelectedSample\",\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        // checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\n      searchFieldList: this.state.sampleSearchField || [],\n      changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"AP_SUBSAMPLE\",\n      selectedObject: \"APSelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        //  checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.subsampleSearchField || [],\n      changeList: [\"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\n    };\n    const filterTestParam = {\n      inputListName: \"AP_TEST\",\n      selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        // checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n      },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.testSearchField || [],\n      changeList: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedTest\"]\n    };\n    let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\n    let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\n    let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\n    let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\n    let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\n    let subSampleGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      subSampleCommentDataState: this.state.subSampleCommentDataState,\n      subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      // activeTabIndex: this.state.enableAutoClick ? 1 : \"\",\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n    };\n    let testChildGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      postParamList: this.postParamList,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      historyDataState: this.state.historyDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n      nbatchmastercode: this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode || -1\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, // {\n    //     \"label\": \"IDS_SAMPLETYPE\",\n    //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\n    //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n    // }, \n    {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, // {\n    //     \"label\": \"IDS_DESIGNTEMPLATE\",\n    //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\n    //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\n    //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_CONFIGVERSION\",\n    //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\n    //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n    //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n    // // },\n    // {\n    //     \"label\": \"IDS_SECTION\",\n    //     \"value\": this.props.Login.masterData.realUserSectionValue ?\n    //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\n    //         this.props.Login.masterData.UserSectionValue ?\n    //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    // },\n    {\n      \"label\": \"IDS_Test\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n    const PatientPreviousResultViewId = this.state.controlMap.has(\"PatientPreviousResultView\") && this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode;\n    const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\n    const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\n    const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\n    const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\n    const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\n    const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\n    const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\n    let {\n      testskip,\n      testtake\n    } = this.state;\n    let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n    const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n    testList = testList.slice(testskip, testskip + testtake);\n    let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n    let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      fecthInputObject: subSampleGetParam,\n      selectedObject: \"APSelectedSample\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"updatedSample\",\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      updatedListname: \"updatedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: testGetParam,\n      selectedObject: \"APSelectedSubSample\",\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      inputListName: \"AP_SUBSAMPLE\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedTests\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: testChildGetParam,\n      selectedObject: \"APSelectedTest\",\n      inputListName: \"AP_TEST\",\n      updatedListname: \"updatedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      clickIconGroup: true // paneHeight={this.state.initialVerticalWidth}\n      ,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedTests || AP_TestList,\n      selectedMaster: this.props.Login.masterData.APSelectedTest || [],\n      primaryKeyField: \"ntransactiontestcode\" //getMasterDetail={this.props.getTestChildTabDetail}\n      ,\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(1, \"IDS_RESULTS\", event, \"click\");\n      },\n      inputParam: testChildGetParam,\n      additionalParam: [],\n      mainField: 'stestsynonym',\n      selectedListName: \"APSelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      showStatusIcon: false,\n      showStatusName: true,\n      subFieldsLabel: true // jsonField={'jsondata'}\n      //jsonDesignFields={false}\n      ,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"scolorhexcode\",\n      selectionList: this.props.Login.masterData.FilterStatus || [],\n      needSubFieldlabel: true,\n      subFields: this.state.testListColumns,\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTests\",\n      searchRef: this.searchTestRef,\n      filterParam: filterTestParam,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"AP_SAMPLE\",\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\", \"ResultUsedMaterial\", \"RegistrationTestHistory\"],\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        hidden: this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RESULTCORRECTION\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": \"left\",\n        className: \"btn btn-circle outline-grey\",\n        onClick: () => this.props.getTestResultCorrection({\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ResultCorrection, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        hidden: this.state.userRoleControlRights.indexOf(editParamId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTMANDATORY\"\n        }) //  data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-place\": \"left\",\n        className: \"btn btn-circle outline-grey\",\n        onClick: () => this.props.getParameterEdit({\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 37\n        }\n      })), this.props.Login.masterData.actionStatus && this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 && actionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faPalette,\n        nav: true,\n        data: actionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        dynamicButton: value => this.checkRetestAction(value, TestApprovalActionId),\n        textKey: \"stransdisplaystatus\",\n        iconKey: \"ntransactionstatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 37\n        }\n      }) : \"\") // actionIcons={\n      //     [\n      //        { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),  controlname: \"faEye\", hidden:this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\n      //     ]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage // onSecondaryPaneSizeChange={this.paneSizeChange}\n        ,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0  sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView //clickIconGroup={true}\n      , {\n        cardHead: 94 //paneHeight={this.state.initialVerticalWidth}\n        ,\n        masterList: this.props.Login.masterData.searchedSubSample || AP_SubSampleList,\n        selectedMaster: this.props.Login.masterData.APSelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\",\n        getMasterDetail: this.props.getTestDetail,\n        inputParam: testGetParam,\n        additionalParam: [],\n        mainField: \"ssamplearno\",\n        selectedListName: \"APSelectedSubSample\",\n        objectName: \"subSample\",\n        listName: \"IDS_SUBSAMPLE\",\n        showStatusLink: true,\n        showStatusName: false,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        selectionList: this.state.selectedFilter,\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"sfilterstatus\",\n        selectionColorField: \"stranscolor\",\n        statusColor: \"stranscolor\",\n        subFields: this.state.DynamicSubSampleColumns,\n        moreField: this.state.subSampleMoreField,\n        needValidation: false,\n        needMultiSelect: true,\n        needFilter: false,\n        searchRef: this.searchSubSampleRef,\n        filterParam: filterSubSampleParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        skip: this.state.subSampleSkip,\n        take: this.state.subSampleTake,\n        handlePageChange: this.handleSubSamplePageChange,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n        childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"ResultUsedMaterial\"],\n        subFieldsFile: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      bsPrefix: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1554,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage //onSecondaryPaneSizeChange={this.paneSizeChange} \n      ,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1556,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedSample || AP_SampleList,\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      primaryKeyField: \"npreregno\",\n      getMasterDetail: this.props.getsubSampleDetail,\n      inputParam: subSampleGetParam,\n      additionalParam: ['napprovalversioncode'],\n      mainField: 'sarno',\n      selectionList: this.state.selectedFilter,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"stranscolor\",\n      selectedListName: \"APSelectedSample\",\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedSample\",\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      moreField: this.state.sampleMoreField,\n      jsonDesignFields: true,\n      jsonField: 'jsondata',\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" //statusColor=\"sdecisioncolor\"\n      ,\n      statusColor: \"stranscolor\",\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      needMultiValueFilter: true,\n      clearAllFilter: this.onReload,\n      onMultiFilterClick: this.onMultiFilterClick,\n      searchRef: this.searchSampleRef,\n      filterParam: filterSampleParam,\n      skip: this.state.skip,\n      take: this.state.take,\n      handlePageChange: this.handlePageChange,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      listMasterShowIcon: 0 //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n      ,\n      childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"],\n      actionIcons: [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: this.props.previewSampleReport,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId\n        }\n      } : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: obj => this.generateCOAReport(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode\n        }\n      } : {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\n        onClick: obj => this.props.reportGenerate(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: coaReportId\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_PREVIOUSRESULTVIEW\"\n        }),\n        controlname: \"faEye\",\n        hidden: this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1,\n        onClick: this.viewSample,\n        objectName: \"test\",\n        inputData: {\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          elnUserInfo: this.props.Login.elnUserInfo,\n          elnSite: this.props.Login.elnSite\n        }\n      }],\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1666,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        onClick: () => this.onReload() // data-for=\"tooltip-common-wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1667,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1671,\n          columnNumber: 65\n        }\n      })), this.props.Login.masterData.decisionStatus && this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 && this.props.Login.masterData.decisionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: decisionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        textKey: \"sdecisionstatus\",\n        iconKey: \"ntransactionstatus\",\n        dynamicButton: value => this.updateDecision(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 65\n        }\n      }) : \"\")),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ApprovalFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          Batch: this.state.Batchvalues || [],\n          BatchValue: this.props.Login.masterData.defaultBatchvalue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1728,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1735,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-results position-relative sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1739,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1748,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1750,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1751,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1772,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1775,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1784,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1795,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TESTAPPROVALHISTORY\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1807,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1808,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1811,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1814,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1819,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1820,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1822,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1823,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 9 ? this.sideNavDetail(\"IDS_HISTORY\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1829,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1, \"IDS_RESULTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1832,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileInvoice //  data-for=\"tooltip-common-wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1833,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RESULTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2, \"IDS_ATTACHMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1840,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1841,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3, \"IDS_COMMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1847,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(5, \"IDS_MATERIAL\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1858,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFlask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1860,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_MATERIAL\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(6, \"IDS_TASK\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1865,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCommentDots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1866,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1867,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TASK\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8, \"IDS_SAMPLEDETAILS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1877,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1878,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1879,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(9, \"IDS_HISTORY\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1884,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1885,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_HISTORY\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1890,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch //label={\"IDS_AUTOSHOW\"}\n    , {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1891,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.props.Login.multiFilterLoad ? this.onSaveMultiFilterClick : this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openChildModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'enforce' ? [{\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"senforcestatuscomment\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      loginoperation: this.props.Login.operation === 'view' ? true : false //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\n      ,\n      noSave: this.props.Login.operation === 'view' ? true : false,\n      hideSave: this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" || this.props.Login.screenName === \"IDS_RESULTCORRECTION\" ? true : false,\n      size: this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" || this.props.Login.screenName === \"IDS_RESULTCORRECTION\" ? \"xl\" : \"lg\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1942,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'enforce' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1950,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1951,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"ngradecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        value: this.props.Login.masterData.GradeValue || [],\n        options: this.props.Login.masterData.Grade || [],\n        optionId: \"ngradecode\",\n        optionValue: \"sgradename\",\n        isMandatory: true,\n        isMulti: false,\n        isDisabled: false,\n        isSearchable: false,\n        closeMenuOnSelect: true,\n        isClearable: false,\n        onChange: event => this.onComboChange(event, 'ngradecode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1952,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"senforcestatuscomment\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\",\n        rows: \"2\",\n        isMandatory: true,\n        required: false,\n        maxLength: 255,\n        onChange: event => this.onInputOnChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1968,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.operation === 'dynamic' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1982,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1983,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormNumericInput, {\n        name: \"retestcount\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_RETESTCOUNT\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount,\n        type: \"text\",\n        strict: true,\n        className: \"form-control\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\",\n        maxLength: 6,\n        onChange: event => this.onNumericInputOnChange(event, 'retestcount'),\n        isMandatory: \"*\",\n        required: true,\n        noStyle: true // min={1}\n        // max={this.props.Login.masterData.retestcount}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 45\n        }\n      }))) : this.props.Login.screenName === 'IDS_PREVIOUSRESULTVIEW' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n        className: \"one\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2018,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2019,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(SpecificationInfo, {\n        controlMap: this.state.controlMap,\n        auditInfoFields: auditInfoFields,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedSpecification: this.props.Login.masterData.viewdetails,\n        userInfo: this.props.Login.userInfo,\n        selectedNode: this.props.Login.masterData.selectedNode,\n        selectedRecord: this.state.filterData,\n        approvalRoleActionDetail: this.props.Login.masterData.ApprovalRoleActionDetail,\n        screenName: \"IDS_PREVIOUSRESULTVIEW\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2020,\n          columnNumber: 57\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2034,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2035,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(CustomTab, {\n        tabDetail: this.tabDetailResultView(),\n        onTabChange: this.onTabChangeResultView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2038,\n          columnNumber: 58\n        }\n      })))) : this.props.Login.operation === 'view' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2066,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2067,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"nresultparamcommenthistorycode\",\n        data: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataResult: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataState: {\n          skip: 0,\n          take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0\n        } // dataStateChange={this.dataStateChange}\n        ,\n        extractedColumnList: [{\n          \"idsName\": this.props.Login.idsName,\n          \"dataField\": this.props.Login.dataField,\n          \"width\": \"450px\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        pageable: false,\n        hideColumnFilter: true,\n        isActionRequired: false,\n        isToolBarRequired: false,\n        scrollable: \"scrollable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2068,\n          columnNumber: 53\n        }\n      }))) : this.props.Login.screenName === 'IDS_RESULTCORRECTION' ? /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntransactionresultcode\",\n        selectedId: this.props.Login.selectedId,\n        data: this.props.Login.masterData.ResultCorrection,\n        dataResult: process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.resultCorrectionDataState),\n        dataState: this.state.resultCorrectionDataState,\n        dataStateChange: this.resultCorrectionDataStateChange,\n        extractedColumnList: resultCorrectionColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"Result\",\n        userInfo: this.props.Login.userInfo,\n        fetchRecord: this.props.fetchParameterDetails,\n        deleteRecord: this.deleteRecord //  reloadData={this.reloadData}\n        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\n        ,\n        editParam: {\n          screenName: this.props.Login.screenName,\n          primaryKeyField: \"ntransactionresultcode\",\n          operation: \"update\",\n          inputParam: this.props.Login.inputParam,\n          userInfo: this.props.Login.userInfo,\n          ncontrolCode: editResultId,\n          masterData: this.props.Login.masterData\n        } //  deleteParam={deleteParam}\n        ,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: true //  isToolBarRequired={true}\n        ,\n        pageable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2094,\n          columnNumber: 49\n        }\n      }) // ALPD-4133 Start  of Addition Filter Component Render - ATE-241\n      : this.props.Login.multiFilterLoad ? /*#__PURE__*/React.createElement(KendoDatatoolFilter, {\n        filter: this.props.Login.masterData['kendoFilterList'] || {\n          logic: \"and\",\n          filters: []\n        },\n        handleFilterChange: this.handleFilterChange,\n        filterData: this.props.Login.masterData.kendoOptionList || [],\n        fields: this.props.Login.masterData[\"fields\"] || [],\n        userInfo: this.props.Login.userInfo,\n        static: true,\n        parentCallBack: this.parentCallBack,\n        needParentCallBack: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2125,\n          columnNumber: 53\n        }\n      }) //  End of Additional filter component render ALPD-4133 ATE-241\n      : /*#__PURE__*/React.createElement(EditApprovalParameter, {\n        ApprovalParamEdit: this.props.Login.ApprovalParamEdit || [],\n        changeMandatory: this.changeMandatory,\n        selectedRecord: this.state.selectedRecord.approvalParameterEdit || {},\n        nsubsampleneed: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2141,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalResultClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n      ,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2167,\n          columnNumber: 33\n        }\n      }) : this.state.selectedRecord.ReleaseParameter && this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\n        return /*#__PURE__*/React.createElement(ResultEntryForm, {\n          index: index,\n          ResultParameter: [...this.state.selectedRecord.ReleaseParameter],\n          predefinedValues: this.props.Login.masterData.PredefinedValues,\n          defaultPredefinedValues: this.props.Login.masterData.PredefinedValues,\n          gradeValues: this.props.Login.masterData.GradeValues || [],\n          selectedNumericData: this.props.Login.masterData.selectedNumericData,\n          selectedResultGrade: this.state.selectedRecord.selectedResultGrade || [],\n          paremterResultcode: this.props.Login.masterData.paremterResultcode || [],\n          parameterResults: parameterResult || [],\n          Login: this.props.Login,\n          handleClose: this.handleClose,\n          onSaveClick: this.onSaveClick,\n          onResultInputChange: this.onResultInputChange //onGradeEvent={this.onGradeEvent}\n          ,\n          getFormula: this.getFormula,\n          onDropTestFile: this.onDropTestFile,\n          onKeyPress: this.onKeyPress //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\n          ,\n          viewAdditionalInfo: this.viewAdditionalInfo,\n          needSubSample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          needdelete: true,\n          needmandatory: true,\n          ResultAccuracy: this.props.Login.masterData.ResultAccuracy || [],\n          Unit: this.props.Login.masterData.Unit || [] //intl={this.props.intl}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2175,\n            columnNumber: 44\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2155,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ? /*#__PURE__*/React.createElement(TemplateForm, {\n      templateData: this.props.Login.masterData.ChecklistData,\n      needSaveButton: false,\n      formRef: this.formRef,\n      onTemplateInputChange: this.onTemplateInputChange,\n      handleClose: this.handleClose,\n      onTemplateComboChange: this.onTemplateComboChange,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.onSaveCheckList,\n      Login: this.props.Login,\n      viewScreen: this.props.Login.openTemplateModal,\n      selectedRecord: this.state.selectedRecord || [],\n      onTemplateDateChange: this.onTemplateDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2211,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentWillUnmount() {\n    let activeTabIndex = this.props.Login.activeTabIndex;\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        activeTabIndex: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      registrationTestHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      activeTabIndex,\n      activeTabId,\n      Batchvalues,\n      subSampleSkip,\n      subSampleTake,\n      samplefilteritem,\n      sampledisplayfields\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true; // this.setState({userRoleControlRights, controlMap});\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState; // this.setState({\n        //     resultDataState: dataSate,instrumentDataState: dataSate,\n        //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\n        //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\n        //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\n        // });\n\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord; // this.setState({selectedRecord: this.props.Login.selectedRecord });\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      Batchvalues = constructOptionList(this.props.Login.masterData.Batchvalues || [], 'nbatchmastercode', 'sbatcharno', 'ascending', 'nbatchmastercode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      Batchvalues = Batchvalues.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      subSampleSkip = this.props.Login.subSampleSkip === undefined ? subSampleSkip : this.props.Login.subSampleSkip;\n      subSampleTake = this.props.Login.subSampleTake || subSampleTake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      }; // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \n      //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\n      // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\n      //     this.props.Login.masterData.FilterStatus : [];\n\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n\n      if (this.props.Login.registrationTestHistoryDataState && this.props.Login.registrationTestHistoryDataState !== previousProps.Login.registrationTestHistoryDataState) {\n        registrationTestHistoryDataState = this.props.Login.registrationTestHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.availableReleaseRecord === true) {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_TESTADDEDINRELEASE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_AREUSURETORETESTORCALC\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.checkRetestAction(this.props.Login.action, this.props.Login.ncontrolCode), undefined, () => this.closeAlert());\n    }\n\n    if (this.props.Login.availableReleaseRecord === false) {\n      this.checkRetestAction(this.props.Login.action, this.props.Login.ncontrolCode);\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      samplefilteritem = dynamicColumn.samplefilteritem || [];\n      sampledisplayfields = dynamicColumn.sampledisplayfields || [];\n      this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample && DynamicSubSampleColumns.push({\n        1: {\n          'en-US': 'Specimen',\n          'ru-RU': 'Образец',\n          'tg-TG': 'Намуна'\n        },\n        2: \"scomponentname\"\n      });\n      bool = true; // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\n      // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\n      // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\n      // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\n      // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\n      // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\n      // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\n      // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\n      // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\n      // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\n      // let {selectedRecord}=this.state\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate; // this.setState({\n      //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\n      //     sampleListMainField, subSampleListMainField, testListMainField,\n      //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\n      // })\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        registrationTestHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        activeTabIndex,\n        activeTabId,\n        Batchvalues,\n        subSampleSkip,\n        subSampleTake,\n        samplefilteritem,\n        sampledisplayfields\n      });\n    }\n  } // previewSampleReport = (ncontrolCode) => {\n  //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\n  //     const selectedSample = this.props.Login.masterData.selectedSample[0];\n  //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\n  //                         userinfo:this.props.Login.userInfo,\n  //                         nprimarykey: selectedSample.npreregno,\n  //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\n  //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\n  //                         sprimarykeyname :\"npreregno\",\n  //                         ncontrolcode : ncontrolCode,\n  //                         nregtypecode:selectedSample.nregtypecode,\n  //                         nregsubtypecode: selectedSample.nregsubtypecode\n  //                         }\n  //     this.props.previewSampleReport(inputData);\n  // }\n\n\n  sampleTabDetail() {\n    const tabMap = new Map();\n    let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n    tabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n      screenName: \"IDS_SAMPLEATTACHMENTS\",\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      attachments: this.props.Login.masterData.RegistrationAttachment || [],\n      deleteRecord: this.props.deleteAttachment,\n      onSaveClick: this.onAttachmentSaveClick,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n      nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n      fetchRecord: this.props.getAttachmentCombo,\n      addName: \"AddSampleAttachment\",\n      editName: \"EditSampleAttachment\",\n      deleteName: \"DeleteSampleAttachment\",\n      viewName: \"ViewSampleAttachment\",\n      methodUrl: \"SampleAttachment\",\n      userInfo: this.props.Login.userInfo,\n      deleteParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: this.props.Login.screenName\n      },\n      editParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        masterList: this.props.Login.masterData.APSelectedSample\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      isneedHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2525,\n        columnNumber: 13\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n      screenName: \"IDS_SAMPLECOMMENTS\",\n      onSaveClick: this.onCommentsSaveClick,\n      selectedMaster: \"APSelectedSample\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      Comments: this.props.Login.masterData.RegistrationComment || [],\n      fetchRecord: this.props.getCommentsCombo,\n      addName: \"AddSampleComment\",\n      editName: \"EditSampleComment\",\n      deleteName: \"DeleteSampleComment\",\n      methodUrl: \"SampleComment\",\n      isTestComment: false,\n      masterData: this.props.Login.masterData,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n      primaryKeyField: \"nregcommentcode\",\n      dataState: this.state.testCommentDataState,\n      dataStateChange: this.testDataStateChange,\n      deleteParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\"\n      },\n      editParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        operation: \"update\",\n        masterList: this.props.Login.masterData.APSelectedSample || [],\n        ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n      },\n      selectedListName: \"IDS_ARNUMBER\",\n      displayName: \"sarno\",\n      selectedId: this.props.Login.selectedId || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2567,\n        columnNumber: 42\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\", /*#__PURE__*/React.createElement(SampleApprovalHistory, {\n      userInfo: this.props.Login.userInfo,\n      genericLabel: this.props.Login.genericLabel,\n      ApprovalHistory: this.props.Login.masterData.SampleApprovalHistory,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleHistoryDataState,\n      dataStateChange: this.sampleDataStateChange,\n      screenName: \"IDS_SAMPLEAPPROVALHISTORY\",\n      controlMap: this.state.controlMap,\n      masterData: this.props.Login.masterData,\n      userRoleControlRights: this.state.userRoleControlRights,\n      selectedId: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2614,\n        columnNumber: 13\n      }\n    })); // tabMap.set(\"IDS_PRINTHISTORY\",\n    //     <ApprovalPrintHistoryTab\n    //         userInfo={this.props.Login.userInfo}\n    //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\n    //         inputParam={this.props.Login.inputParam}\n    //         dataState={this.state.samplePrintHistoryDataState}\n    //         dataStateChange={this.sampleDataStateChange}\n    //         screenName=\"IDS_PRINTHISTORY\"\n    //         controlMap={this.state.controlMap}\n    //         userRoleControlRights={this.state.userRoleControlRights}\n    //         selectedId={null}\n    //     />);\n    // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\n    //     tabMap.set(\"IDS_REPORTHISTORY\",\n    //         <ReportHistoryTab\n    //             userInfo={this.props.Login.userInfo}\n    //             COAHistory={this.props.Login.masterData.COAHistory}\n    //             inputParam={this.props.Login.inputParam}\n    //             dataState={this.state.reportHistoryDataState}\n    //             dataStateChange={this.sampleDataStateChange}\n    //             screenName=\"IDS_REPORTHISTORY\"\n    //             controlMap={this.state.controlMap}\n    //             userRoleControlRights={this.state.userRoleControlRights}\n    //             selectedId={null}\n    //             viewDownloadFile={this.downloadReport}\n    //         />);\n    // }\n\n    return tabMap;\n  }\n\n  // onSampleTabChange = (tabProps) => {\n  //     const activeSampleTab = tabProps.screenName;\n  //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSample: this.props.Login.masterData.APSelectedSample,\n  //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSampleTab,\n  //             activeSampleTab\n  //         }\n  //         this.props.getSampleChildTabDetail(inputData)\n  //     }\n  // }\n  // onSubSampleTabChange = (tabProps) => {\n  //     const activeSubSampleTab = tabProps.screenName;\n  //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n  //         let inputData = {\n  //             masterData: this.props.Login.masterData,\n  //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n  //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n  //             userinfo: this.props.Login.userInfo,\n  //             screenName: activeSubSampleTab,\n  //             activeSubSampleTab,\n  //             subSampleCommentDataState: this.state.subSampleCommentDataState,\n  //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n  //         }\n  //         this.props.getSubSampleChildTabDetail(inputData)\n  //     }\n  // }\n  showSampleInfo() {\n    this.setState({\n      showSample: true,\n      showTest: false\n    });\n  }\n\n  showTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false\n    });\n  }\n\n  // covertDatetoString(startDateValue, endDateValue) {\n  //     const startDate = new Date(startDateValue);\n  //     const endDate = new Date(endDateValue);\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n  //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n  //     const fromDate = fromDateOnly + \"T00:00:00\";\n  //     const toDate = toDateOnly + \"T23:59:59\";\n  //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n  // }\n  getActiveTestURL() {\n    let url = \"approval/getapprovalparameter\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_RESULTS\":\n        url = \"approval/getapprovalparameter\";\n        break;\n\n      case \"IDS_INSTRUMENT\":\n        url = \"resultentrybysample/getResultUsedInstrument\";\n        break;\n\n      case \"IDS_MATERIAL\":\n        url = \"resultentrybysample/getResultUsedMaterial\";\n        break;\n\n      case \"IDS_TASK\":\n        url = \"resultentrybysample/getResultUsedTask\";\n        break;\n\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      case \"IDS_RESULTCHANGEHISTORY\":\n        url = \"approval/getApprovalResultChangeHistory\";\n        break;\n\n      case \"IDS_TESTAPPROVALHISTORY\":\n        url = \"approval/getApprovalHistory\";\n        break;\n\n      default:\n        url = \"approval/getapprovalparameter\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getsubSampleDetail,\n  getTestDetail,\n  getTestChildTabDetail,\n  performAction,\n  updateStore,\n  viewAttachment,\n  checkListRecord,\n  updateDecision,\n  getRegistrationType,\n  getRegistrationSubType,\n  getFilterStatus,\n  getApprovalSample,\n  getStatusCombo,\n  validateEsignCredential,\n  crudMaster,\n  validateEsignforApproval,\n  getApprovalVersion,\n  getParameterEdit,\n  filterTransactionList,\n  getSampleChildTabDetail,\n  getAttachmentCombo,\n  deleteAttachment,\n  getCommentsCombo,\n  previewSampleReport,\n  getFilterBasedTest,\n  ViewPatientDetails,\n  generateCOAReport,\n  getEnforceCommentsHistory,\n  reportGenerate,\n  getSubSampleChildTabDetail,\n  getTestBasedCompletedBatch,\n  updateEnforceStatus,\n  checkReleaseRecord,\n  getTestResultCorrection,\n  fetchParameterDetails\n})(injectIntl(Approval));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/Approval.jsx"],"names":["React","connect","injectIntl","faFileInvoice","faBolt","faBorderAll","faChevronRight","faComment","faCommentDots","faComments","faEye","faFlask","faHistory","faLink","faMicroscope","faPaperclip","faPencilAlt","faSync","faPalette","FontAwesomeIcon","Button","Card","Col","Nav","Row","ContentPanel","ListWrapper","ProductList","process","SplitterLayout","DEFAULT_RETURN","getsubSampleDetail","getTestDetail","getTestChildTabDetail","performAction","updateStore","updateDecision","getRegistrationType","getRegistrationSubType","getFilterStatus","getApprovalSample","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforApproval","getApprovalVersion","getParameterEdit","filterTransactionList","checkListRecord","generateCOAReport","getSampleChildTabDetail","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getFilterBasedTest","getEnforceCommentsHistory","reportGenerate","getSubSampleChildTabDetail","ViewPatientDetails","getTestBasedCompletedBatch","updateEnforceStatus","checkReleaseRecord","getTestResultCorrection","fetchParameterDetails","filterObject","toTimestamp","rearrangeDateFormatforKendoDataTool","CustomTabs","ApprovalResultsTab","getControlMap","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","Lims_JSON_stringify","create_UUID","toast","ApprovalFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","SideBarSeqno","SideBarTabIndex","ResultEntry","BreadcrumbComponent","SampleInfoGrid","SampleInfoView","ApprovalInstrumentTab","FormSelectSearch","FormTextarea","Esign","SlideOutModal","EditApprovalParameter","SampleApprovalHistory","ResultChangeHistoryTab","ApprovalTask","templateChangeHandler","TemplateForm","Attachments","onSaveSampleAttachment","onSaveSubSampleAttachment","onSaveTestAttachment","Comments","onSaveSampleComments","onSaveSubSampleComments","onSaveTestComments","CustomPopOver","ScrollBar","ApprovalPrintHistoryTab","ApprovalHistoryTab","FormNumericInput","DataGrid","ReportHistoryTab","ApprovalUsedMaterial","CustomSwitch","TransactionListMasterJsonView","SpecificationInfo","ConfirmMessage","CustomTab","ResultEntryForm","ModalShow","numberConversion","numericGrade","checkBoxOperation","sortDataForDate","KendoDatatoolFilter","intl","mapStateToProps","state","Login","Approval","Component","constructor","props","onResultInputChange","parameterResults","setState","isParameterInitialRender","closeModalShow","loadEsign","closeModal","modalShow","ReportmodalShow","selectedRecord","selectedComment","masterData","updateInfo","typeName","data","selectedId","onSaveModalResultClick","saveType","ReleaseParameter","nregtypecode","parseInt","realRegTypeValue","nregsubtypecode","realRegSubTypeValue","ndesigntemplatemappingcode","editResultId","controlMap","has","get","ncontrolcode","transactiontestcode","APSelectedTest","map","item","ntransactiontestcode","join","classUrl","formData","FormData","neditable","releaseParameters","inputParam","i","undefined","length","sresult","resultData","index","results","editable","nparametertypecode","ncalculatedresult","sfinal","parseFloat","nroundingdigits","sunitname","nunitcode","label","sresultaccuracyname","nresultaccuracycode","value","JSON","stringify","userInfo","nuserrole","nusercode","ntransactionresultcode","sresultcomment","salertmessage","additionalInfo","additionalInfoUidata","ntestgrouptestpredefcode","ngradecode","trim","RESULTSTATUS_FIO","splittedFileName","name","split","fileExtension","uniquefilename","ssystemfilename","nfilesize","size","append","Object","values","push","loading","openModal","methodUrl","inputData","userinfo","doAction","isFileupload","operation","displayName","userRoleControlRights","nformcode","screenData","info","formatMessage","id","paneSizeChange","d","splitChangeWidthPercentage","handleTestPageChange","e","testskip","skip","testtake","take","handleSubSamplePageChange","subSampleSkip","subSampleTake","showAPSampleinfo","showSample","showTest","sampleInfoDataStateChange","event","sampleGridDataState","dataState","resultCorrectionDataStateChange","resultCorrectionDataState","currentResultStateChange","currentResultState","tabDetailResultView","tabMap","Map","set","AuditModifiedComments","feildsForGrid","settings","setting","dataStateChange","CurrentResult","onTabChangeResultView","tabProps","activeTabName","verticalPaneSizeChange","val","enableAutoHeight","initialVerticalWidth","changeSplitterOption","sideNavDetail","screenName","testList","searchedTests","AP_TEST","editTestCommentsId","slice","selectedTestList","test","activeTestTab","resultTabDetail","onTabChange","attachmentTabDetail","commentTabDetail","historyTabDetail","genericLabel","instrumentDataState","testDataStateChange","materialDataState","fetchMaterialRecord","ResultUsedTasks","taskDataState","ApprovalHistory","historyDataState","APSelectedSample","SingleItem","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","changePropertyViewClose","activeTabIndex","activeTabId","changePropertyView","status","ntransactionsamplecode","npreregno","window","innerWidth","enableAutoClick","tabSequence","TEST","onInputSwitchOnChange","target","enablePropertyPopup","tabseqno","String","resultDataState","documentDataState","resultChangeDataState","testCommentDataState","registrationTestHistoryDataState","warn","SUBSAMPLE","selectedSubSample","APSelectedSubSample","activeSubSampleTab","subSampleCommentDataState","subSampleAttachmentDataState","selectedSample","activeSampleTab","closeFilter","inputValues","SampleTypeValue","realSampleTypeValue","RegTypeValue","RegSubTypeValue","ApprovalVersionValue","realApprovalVersionValue","UserSectionValue","realUserSectionValue","TestValue","realTestValue","BatchValue","realBatchvalue","defaultBatchvalue","FilterStatusValue","realFilterStatusValue","fromDate","realFromDate","Date","toDate","realToDate","DesignTemplateMappingValue","realDesignTemplateMappingValue","SampleType","realSampleTypeList","RegType","realRegTypeList","RegSubType","realRegSubTypeList","FilterStatus","realFilterStatusList","ApprovalVersion","realApprovalVersionList","UserSection","realUserSectionList","Test","realTestList","Batchvalues","realBatchvaluesList","DesignTemplateMapping","realDesignTemplateMappingList","showFilter","downloadReport","input","subsampleTabDetail","sample","subsampleList","AP_SUBSAMPLE","selectedSubSampleList","onAttachmentSaveClick","RegistrationSampleAttachment","nneedsubsample","attachmentskip","attachmenttake","esignRights","masterList","onCommentsSaveClick","RegistrationSampleComment","subSampledataStateChange","ncontrolCode","resultTabMap","selectedParamId","ApprovalResultChangeHistory","attachmentTabMap","sampleList","AP_SAMPLE","selectedSampleList","RegistrationTestAttachment","VALUE","SAMPLE","RegistrationAttachment","commentTabMap","RegistrationTestComment","RegistrationComment","sampleCommentDataState","sampleDataStateChange","historyTabMap","historyExtractedColumnList","RegistrationTestHistory","RegistrationHistoryDataStateChange","onNumericInputOnChange","handlePageChange","closeAlert","availableReleaseRecord","checkRetestAction","action","ntransactionstatus","RETEST","retestcount","obj","ntransCode","ALL","nsectioncode","section","ntestcode","nTransStatus","stransdisplaystatus","nsampletypecode","napprovalversioncode","napprovalconfigversioncode","nneedtemplatebasedflow","nneedjoballocation","dfrom","dto","nflag","ntype","SINGLESELECT","nbatchmastercode","nneedmyjob","postParamList","nisiqcmaterial","openChildModal","performTestActions","RECALC","nesignneed","YES","splice","selectedsampleList","napprovalconfigcode","onFilterComboChange","comboData","fieldName","inputParamData","stransactionstatus","napproveconfversioncode","JobStatusValue","njobstatuscode","defaultRegistrationSubType","ntranscode","toString","onComboChange","GradeValue","onInputOnChange","type","checked","NO","handleDateChange","dateName","dateValue","changeMandatory","dataItem","currentTarget","onReload","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","samplePrintHistoryDataState","sampleHistoryDataState","onFilterSubmit","realBatchCodeValue","onMultiFilterClick","filterFields","sampledisplayfields","samplefilteritem","languageTypeCode","slanguagetypecode","datefileds","updFilterFields","fields","kendoFilterList","filters","filterinputtype","columnname","kendoOptionList","x","multiFilterLoad","parentCallBack","filter","filterSampleList","handleFilterChange","sampleGridDataStateChange","popUptestDataState","reportHistoryDataState","registrationSubSampleHistoryDataState","registrationSampleHistoryDataState","onSaveClick","formRef","ok","senforcestatuscomment","selectedTestCode","preregno","enforcestatus","postParam","selectedObject","primaryKeyField","saveParam","approvalparameter","approvalParameterEdit","keys","key","nreportmandatory","handleClose","onKeyPress","paremterResultcode","keyCode","form","elements","focus","preventDefault","templateData","openTemplateModal","onSaveMultiFilterClick","startDate","endDate","searchedSample","emptyFilterList","current","selectedTest","searchedSubSample","searchedTest","RegistrationParameter","fromdate","todate","sampleChangeDataState","childTabsKey","removeElementFromArray","viewSample","viewdetails","validateEsign","sreason","nreasoncode","spredefinedreason","password","onTemplateInputChange","control","onTemplateComboChange","onTemplateDateChange","dateData","isTestComment","acceptList","selectedMaster","reporparam","createRef","confirmMessage","masterStatus","error","oldComboData","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","stateDynamicDesign","sampleSearchField","subsampleSearchField","testSearchField","TestList","enablePin","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","constructDesign","list","newList","LABEL","showAPTestList","showAPSubSampleinfo","temparray","option","LISTITEM","render","auditInfoFields","resultCorrectionColumnList","filterSampleParam","inputListName","fetchUrl","isSortable","sortValue","sortList","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","isSingleSelect","AP_SampleList","AP_SubSampleList","AP_TestList","decisionStatus","actionStatus","subSampleGetParam","testGetParam","testChildGetParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","stestsynonym","PatientPreviousResultViewId","reportPreviewId","editParamId","ResultCorrectionId","TestDecisionActionId","TestApprovalActionId","reportGenerateId","coaReportId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","testDesign","borderBottom","display","indexOf","mainDesign","marginTop","selectedFilter","DynamicSubSampleColumns","subSampleMoreField","openFilter","DynamicSampleColumns","sampleMoreField","PLASMA_POOL","title","controlname","objectName","hidden","onClick","ROUTINE","elnUserInfo","elnSite","JobStatus","onDesignTemplateChange","width","propertyPopupWidth","fullviewExpand","fullviewCollapse","Grade","selectedNode","filterData","ApprovalRoleActionDetail","enforceCommentsHistory","idsName","dataField","ResultCorrection","deleteRecord","logic","ApprovalParamEdit","nsubsampleneed","modalTitle","onEsignInputOnChange","parameterResult","PredefinedValues","GradeValues","selectedNumericData","selectedResultGrade","getFormula","onDropTestFile","viewAdditionalInfo","ResultAccuracy","Unit","ChecklistData","onSaveCheckList","componentWillUnmount","componentDidUpdate","previousProps","DynamicTestColumns","bool","SampletypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","UserSectionListMap","TestListMap","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","parse","findIndex","confirm","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","samplesearchfields","subsamplesearchfields","testListFields","testlistmoreitems","testsearchfields","DesignTemplateMappingMap","sampleTabDetail","showSampleInfo","showTestList","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faFileInvoice,faBolt, faBorderAll, faChevronRight, faComment, faCommentDots, faComments, faEye, faFlask, faHistory, faLink, faMicroscope, faPaperclip, faPencilAlt, faSync, faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport { process } from \"@progress/kendo-data-query\";\r\n//import SplitPane from \"react-splitter-layout\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision,\r\n    getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail, ViewPatientDetails,\r\n    getTestBasedCompletedBatch, updateEnforceStatus, checkReleaseRecord, getTestResultCorrection, fetchParameterDetails,\r\n    filterObject, toTimestamp, rearrangeDateFormatforKendoDataTool,\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalResultsTab from './ApprovalResultsTab';\r\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\n//import TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport ApprovalFilter from './ApprovalFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno, SideBarTabIndex, ResultEntry } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SampleInfoGrid from './SampleInfoGrid';\r\nimport SampleInfoView from './SampleInfoView';\r\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EditApprovalParameter from './EditApprovalParameter';\r\n//import ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport SampleApprovalHistory from './SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\r\nimport ApprovalTask from './ApprovalTask';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\r\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReportHistoryTab from './ReportHistoryTab';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SpecificationInfo from '../testgroup/SpecificationInfo';\r\nimport fullviewExpand from '../../assets/image/fullview-expand.svg';\r\nimport fullviewCollapse from '../../assets/image/fullview-collapse.svg';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport { ReactComponent as ResultCorrection } from '../../assets/image/resultcorrection.svg'\r\nimport { checkBoxOperation } from '../../components/Enumeration';\r\nimport { sortDataForDate } from '../../components/CommonScript';\r\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter';\r\nimport { intl } from '../../components/App';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Approval extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.state = {\r\n            resultCorrectionDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }]\r\n            },\r\n            instrumentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            materialDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            taskDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,// group: [{ field: 'sarno' }] \r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            documentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            resultChangeDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            sampleHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            reportHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            dataState: { skip: 0, take: 10 },\r\n            samplePrintHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }]\r\n            },\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            sampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            registrationTestHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            currentResultState: { skip: 0, take: 10 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            stateDynamicDesign: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            TestList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false,\r\n            filterSampleList: [],\r\n        }\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender: false\r\n            // currentAlertResultCode,\r\n            //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedComment = this.props.Login.masterData.selectedComment;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n            selectedComment = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, closeModal, selectedComment, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n\r\n    onSaveModalResultClick = (saveType, data) => {\r\n\r\n        // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\r\n        let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults;\r\n        // let selectedRecord = this.state.selectedRecord || {};\r\n        // let selectedId = this.props.Login.selectedId || null;\r\n        // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let transactiontestcode = this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\");\r\n        const classUrl = \"approval\";\r\n        const formData = new FormData();\r\n        let neditable = 0;\r\n        let releaseParameters = [];\r\n        let inputParam = {};\r\n        // let inputData = [];\r\n        let i = 0;\r\n        if (ReleaseParameter !== undefined && ReleaseParameter.length > 0  && ReleaseParameter[0].sresult !== \"\") {\r\n            ReleaseParameter.map((resultData, index) => {\r\n                let results = {};\r\n                if (resultData.editable === true) {\r\n                    neditable = 1;\r\n                    switch (resultData.nparametertypecode) {\r\n                        case 1:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                sresult: resultData.sresult,\r\n                                sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\r\n                                sunitname: resultData.nunitcode.label,\r\n                                sresultaccuracyname: resultData.nresultaccuracycode.label,\r\n                                nresultaccuracycode: resultData.nresultaccuracycode.value,\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                            results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode.value;\r\n\r\n\r\n                            break;\r\n                        case 2:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sfinal, false),\r\n                                sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\r\n                                salertmessage: resultData.salertmessage,\r\n                                additionalInfo: resultData['additionalInfo'],\r\n                                additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\r\n                                ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.ngradecode;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode;\r\n\r\n                            break;\r\n                        case 3:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode;\r\n                            break;\r\n                        case 4:\r\n                            if (resultData.sfinal.length > 0) {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = uniquefilename;\r\n                                results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                i++;\r\n                            }\r\n                            else {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = \"\";\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: \"\",\r\n                                    sfinal: \"\"\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = \"\";\r\n                                results[\"sfinal\"] = \"\";\r\n                                results[\"ngradecode\"] = -1;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = \"\";\r\n                                results[\"nfilesize\"] = \"\";\r\n                                formData.append(\"uploadedFile\" + index, \"\");\r\n                                formData.append(\"uniquefilename\" + index, \"\");\r\n                                formData.append(\"ntransactiontestcode\", \"\");\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (Object.values(results).length > 0) {\r\n                        releaseParameters.push(results);\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n\r\n            if (neditable === 0) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    // ALPD-4026 (18-05-2024) Added modalShow as false\r\n                    data: { loading: false, openModal: false, modalShow: false, parameterResults: [], selectedRecord: {} }\r\n                }\r\n                return this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            formData.append(\"filecount\", i);\r\n            formData.append(\"nregtypecode\", nregtypecode);\r\n            formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n            formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n            formData.append(\"transactiontestcode\", transactiontestcode);\r\n            formData.append(\"resultData\", JSON.stringify(releaseParameters));\r\n            inputParam = {\r\n                classUrl: classUrl,\r\n                methodUrl: \"ReleaseParameter\",\r\n                inputData: { userinfo: this.props.Login.userInfo, doAction: \"editresult\" },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n            }\r\n\r\n\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: editResultId,\r\n                        screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\r\n            }\r\n        }\r\n        // else {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { loading: false, openModal: false }\r\n        //     }\r\n        //     return this.props.updateStore(updateInfo);\r\n        // }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" }));\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n    // onSecondaryPaneSizeChange = (e, val) => {\r\n    //     this.setState({\r\n    //         firstPane: e - val,\r\n    //         tabPane: e - 80,\r\n    //         childPane: this.state.parentHeight - e - 80\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subSampleSkip: e.skip,\r\n            subSampleTake: e.take\r\n        });\r\n    };\r\n\r\n    // handleSubSamplePageChange = e => {\r\n    //     this.setState({ subSampleSkip: e.skip, subSampleTake: e.take });\r\n\r\n    //     setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    // }\r\n\r\n    showAPSampleinfo = () => {\r\n\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showAPTestList() {\r\n\r\n        this.setState({ showTest: true, showSample: false, showSubSample: false })\r\n    }\r\n    showAPSubSampleinfo() {\r\n        this.setState({ showSample: false, showTest: true, showSubSample: !this.state.showSubSample })\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\", \"dataType\": [option[designProperties.LISTITEM]] };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    resultCorrectionDataStateChange = (event) => {\r\n        this.setState({\r\n            resultCorrectionDataState: event.dataState\r\n        });\r\n    }\r\n    currentResultStateChange = (event) => {\r\n        this.setState({\r\n            currentResultState: event.dataState\r\n        });\r\n    }\r\n\r\n    tabDetailResultView = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            tabMap.set(\"IDS_PREVIOUSRESULT\",\r\n                <DataGrid\r\n                    primaryKeyField={\"ntransactiontestcode\"}\r\n                    data={this.props.Login.masterData.AuditModifiedComments || []}\r\n                    detailedFieldList={this.feildsForGrid}\r\n                    extractedColumnList={this.feildsForGrid}\r\n                    dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                        && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : { skip: 0, take: 10 })}\r\n                    dataState={this.state.dataState\r\n                        ? this.state.dataState : { skip: 0, take: 10 }}\r\n                    pageable={true}\r\n                    pageSizes={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n\r\n                    scrollable={'scrollable'}\r\n                    dataStateChange={this.dataStateChange}\r\n                    activeTabName={\"IDS_PREVIOUSRESULT\"}\r\n                    gridHeight={'500px'}\r\n                >\r\n                </DataGrid>\r\n            );\r\n            tabMap.set(\"IDS_CURRENTRESULT\",\r\n                <DataGrid\r\n                    primaryKeyField={\"ntransactiontestcode\"}\r\n                    data={this.props.Login.masterData.CurrentResult || []}\r\n                    detailedFieldList={this.feildsForGrid}\r\n                    extractedColumnList={this.feildsForGrid}\r\n                    dataResult={this.props.Login.masterData.CurrentResult && this.props.Login.masterData.CurrentResult.length > 0\r\n                        && process(this.props.Login.masterData.CurrentResult, this.state.currentResultState ? this.state.currentResultState : { skip: 0, take: 10 })}\r\n                    dataState={this.state.currentResultState\r\n                        ? this.state.currentResultState : { skip: 0, take: 10 }}\r\n                    pageable={true}\r\n                    scrollable={'scrollable'}\r\n                    dataStateChange={this.currentResultStateChange}\r\n                    activeTabName={\"IDS_CURRENTRESULT\"}\r\n                    pageSizes={this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                    gridHeight={'500px'}\r\n                >\r\n                </DataGrid>);\r\n        }\r\n        return tabMap;\r\n    }\r\n    onTabChangeResultView = (tabProps) => {\r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        masterData['activeTabName'] = tabProps.activeTabName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        if (this.state.enableAutoHeight) {\r\n            this.setState({\r\n                initialVerticalWidth: val - 150\r\n            })\r\n        }\r\n    }\r\n    changeSplitterOption = () => {\r\n        this.setState({\r\n            enableAutoHeight: !this.state.enableAutoHeight,\r\n            initialVerticalWidth: \"57vh\"\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName == \"IDS_RESULTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"} tabDetail={this.resultTabDetail()} onTabChange={this.onTabChange} />\r\n                : screenName == \"IDS_ATTACHMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName == \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                        : screenName == \"IDS_HISTORY\" ?\r\n                            <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTHISTORY\"} tabDetail={this.historyTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                            :\r\n                            screenName == \"IDS_INSTRUMENT\" ?\r\n                                <ApprovalInstrumentTab\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    genericLabel={this.props.Login.genericLabel}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    dataState={this.state.instrumentDataState}\r\n                                    dataStateChange={this.testDataStateChange}\r\n                                    screenName=\"IDS_INSTRUMENT\"\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    selectedId={null}\r\n                                />\r\n                                :\r\n                                screenName == \"IDS_MATERIAL\" ?\r\n                                    <ApprovalUsedMaterial\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        genericLabel={this.props.Login.genericLabel}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        methodUrl={\"ResultUsedMaterial\"}\r\n                                        controlMap={this.state.controlMap}\r\n                                        // deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                        //editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                        dataState={this.state.materialDataState}\r\n                                        // selectedId={this.props.Login.selectedId || null}\r\n                                        isActionRequired={false}\r\n                                        dataStateChange={this.testDataStateChange}\r\n                                        //deleteRecord={this.deleteMaterialRecord}\r\n                                        fetchRecord={this.props.fetchMaterialRecord}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        screenName=\"IDS_MATERIAL\"\r\n                                        selectedId={null}\r\n                                    />\r\n                                    :\r\n                                    screenName == \"IDS_TASK\" ?\r\n                                        <ApprovalTask\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            genericLabel={this.props.Login.genericLabel}\r\n                                            ResultUsedTasks={this.props.Login.masterData.ResultUsedTasks}\r\n                                            inputParam={this.props.Login.inputParam}\r\n                                            dataState={this.state.taskDataState}\r\n                                            masterData={this.props.Login.masterData}\r\n                                            dataStateChange={this.testDataStateChange}\r\n                                            screenName=\"IDS_TASK\"\r\n                                            controlMap={this.state.controlMap}\r\n                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                            selectedId={null}\r\n                                        />\r\n                                        :\r\n                                        screenName == \"IDS_TESTAPPROVALHISTORY\" ?\r\n                                            <ApprovalHistoryTab\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                genericLabel={this.props.Login.genericLabel}\r\n                                                ApprovalHistory={this.props.Login.masterData.ApprovalHistory}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                dataState={this.state.historyDataState}\r\n                                                masterData={this.props.Login.masterData}\r\n                                                dataStateChange={this.testDataStateChange}\r\n                                                screenName=\"IDS_TESTAPPROVALHISTORY\"\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                selectedId={null}\r\n                                            />\r\n\r\n                                            :\r\n                                            screenName == \"IDS_SAMPLEDETAILS\" ?\r\n                                                this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ?\r\n                                                    <SampleInfoView\r\n                                                        data={(this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0) ?\r\n                                                            this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {}}\r\n                                                        SingleItem={this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ?\r\n                                                            this.state.SingleItem : []}\r\n                                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                                        userInfo={this.props.Login.userInfo}\r\n\r\n                                                    />\r\n\r\n                                                    :\r\n                                                    <SampleInfoGrid\r\n                                                        selectedSample={this.props.Login.masterData.APSelectedSample}\r\n                                                        userInfo={this.props.Login.userInfo || {}}\r\n                                                        masterData={this.props.Login.masterData}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        dataState={this.state.sampleGridDataState}\r\n                                                        dataStateChange={this.sampleInfoDataStateChange}\r\n                                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                        primaryKeyField={\"npreregno\"}\r\n                                                        expandField=\"expanded\"\r\n                                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                                        jsonField={\"jsondata\"}\r\n                                                    />\r\n\r\n                                                : \"\"\r\n        )\r\n    }\r\n\r\n\r\n    changePropertyViewClose = (id) => {\r\n        // this.setState({\r\n        //             activeTabIndex :undefined,\r\n        //             activeTestTab:undefined,\r\n        //             activeTabId :  id\r\n        //         })\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index, screenName, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n        //console.log(this.state.activeTabId, id , \"=======>\")\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n            //activeTabId = this.state.activeTabIndex !== index ? true:false;\r\n        }\r\n        if (status != \"click\") {\r\n            if (index) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName === \"IDS_HISTORY\" ? \"IDS_TESTHISTORY\" : screenName,\r\n                    activeTabIndex,\r\n                    //activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n\r\n            //     if (index == SideBarTabIndex.RESULT) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_RESULTS\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else if (index == SideBarTabIndex.INSTRUMENT) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_INSTRUMENT\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else if (index == SideBarTabIndex.MATERIAL) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_MATERIAL\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else if (index == SideBarTabIndex.TASK) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_TASK\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //    else if (index == SideBarTabIndex.TESTAPPROVALHISTORY) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_TESTAPPROVALHISTORY\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else if (index == SideBarTabIndex.ATTACHMENTS) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_TESTATTACHMENTS\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else if (index == SideBarTabIndex.COMMENTS) {\r\n            //         const tabProps = {\r\n            //             tabSequence: SideBarSeqno.TEST,\r\n            //             screenName: \"IDS_TESTCOMMENTS\",\r\n            //             activeTabIndex,\r\n            //             activeTabId\r\n            //         }\r\n            //         this.onTabChange(tabProps);\r\n            //     }\r\n            //     else {\r\n            //         if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n            //             const updateInfo = {\r\n            //                 typeName: DEFAULT_RETURN,\r\n            //                 data: {\r\n            //                     activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n            //                     activeTabId: id\r\n            //                 }\r\n            //             }\r\n            //             this.props.updateStore(updateInfo);\r\n\r\n            //         }\r\n            //     }\r\n        }\r\n\r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        // if (activeTestTab !== this.props.Login.activeTestTab) {\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ?\r\n                        String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ?\r\n                        this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                    subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.APSelectedSample,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n\r\n        //}\r\n    }\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const auditInfoFields = [\r\n            // { \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \r\n            { \"label\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"fieldName\": \"sarno\", },\r\n            //{ \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\r\n            //{ \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \r\n            { \"fieldName\": \"sfirstname\", \"label\": \"IDS_PATIENTNAME\" },\r\n            //{ \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\r\n            { \"fieldName\": \"sgendername\", \"label\": \"IDS_GENDER\" },\r\n\r\n            //{ \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\r\n            //{ \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\r\n\r\n        ];\r\n\r\n        this.feildsForGrid =\r\n            [\r\n                // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n\r\n                //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n                //{ \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }, \r\n                { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONDATE\", \"dataField\": \"sregdate\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTREFNO\", \"dataField\": \"sreportno\", \"width\": \"200px\" },\r\n                { \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n\r\n                // { \"idsName\": \"IDS_COMPLETEDDATEANDTIME\", \"dataField\": \"scompletedate\", \"width\": \"200px\" },\r\n\r\n\r\n            ];\r\n        let resultCorrectionColumnList = [{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }];\r\n        {\r\n            this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n                resultCorrectionColumnList.push(\r\n                    { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\" }\r\n                )\r\n        }\r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"150px\", \"fieldType\": \"gradeColumn\" },\r\n            { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWA\", \"dataField\": \"smina\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWB\", \"dataField\": \"sminb\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHA\", \"dataField\": \"smaxa\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHB\", \"dataField\": \"smaxb\", \"width\": \"150px\" },\r\n            /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\r\n        )\r\n\r\n        const filterSampleParam = {\r\n            inputListName: \"AP_SAMPLE\",\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            selectedObject: \"APSelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"approval/getApprovalSubSample\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\r\n            searchFieldList: this.state.sampleSearchField || [],\r\n            changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\r\n        };\r\n        const filterSubSampleParam = {\r\n            inputListName: \"AP_SUBSAMPLE\",\r\n            selectedObject: \"APSelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"approval/getApprovalTest\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                //  checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.subsampleSearchField || [],\r\n            changeList: [\"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"AP_TEST\",\r\n            selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                // checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.testSearchField || [],\r\n            changeList: [\"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedTest\"]\r\n        };\r\n\r\n        let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\r\n        let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\r\n        let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\r\n        let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1,\r\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        };\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            // activeTabIndex: this.state.enableAutoClick ? 1 : \"\",\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n            nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            registrationTestHistoryDataState: this.state.registrationTestHistoryDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined,\r\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n            nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n\r\n        };\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n            //         this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_DESIGNTEMPLATE\",\r\n            //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n            //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n            //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n            // // },\r\n            // {\r\n            //     \"label\": \"IDS_SECTION\",\r\n            //     \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n            //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n            //         this.props.Login.masterData.UserSectionValue ?\r\n            //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            // },\r\n            {\r\n                \"label\": \"IDS_Test\",\r\n                \"value\": this.props.Login.masterData.realTestValue ?\r\n                    this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ?\r\n                        this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n\r\n        ];\r\n\r\n\r\n        const editResultId =\r\n            this.state.controlMap.has(\"EditResult\") &&\r\n            this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const PatientPreviousResultViewId = this.state.controlMap.has(\"PatientPreviousResultView\") && this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode;\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\r\n        const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\r\n        const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\r\n        const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\r\n        const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\r\n        const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\r\n        const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\r\n\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"approval/getApprovalSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                selectedObject: \"APSelectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"updatedSample\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"APSelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedTests\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"APSelectedTest\",\r\n                inputListName: \"AP_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager'>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        clickIconGroup={true}\r\n                        // paneHeight={this.state.initialVerticalWidth}\r\n                        needMultiSelect={true}\r\n                        masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                        selectedMaster={this.props.Login.masterData.APSelectedTest || []}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        //getMasterDetail={this.props.getTestChildTabDetail}\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetail(event, status); this.state.enableAutoClick && this.changePropertyView(1, \"IDS_RESULTS\", event, \"click\") }}\r\n                        inputParam={testChildGetParam}\r\n                        additionalParam={[]}\r\n                        mainField={'stestsynonym'}\r\n                        selectedListName=\"APSelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        showStatusIcon={false}\r\n                        showStatusName={true}\r\n                        subFieldsLabel={true}\r\n                        // jsonField={'jsondata'}\r\n                        //jsonDesignFields={false}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"sfilterstatus\"\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                        needSubFieldlabel={true}\r\n                        subFields={this.state.testListColumns}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTests\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={filterTestParam}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"AP_SAMPLE\"\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        childTabsKey={\r\n                            [\r\n                                \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\", \"ResultUsedMaterial\",\r\n                                \"RegistrationTestHistory\"\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n\r\n                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n\r\n                                <Nav.Link\r\n                                    hidden={this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })}\r\n                                    //  data-for=\"tooltip-common-wrap\"\r\n                                    data-place=\"left\"\r\n                                    className=\"btn btn-circle outline-grey\"\r\n                                    onClick={() => this.props.getTestResultCorrection({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                >\r\n                                    {/* <FontAwesomeIcon icon={faPencilAlt} /> */}\r\n                                    <ResultCorrection className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                </Nav.Link>\r\n                                <Nav.Link\r\n                                    hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                    //  data-for=\"tooltip-common-wrap\"\r\n                                    data-place=\"left\"\r\n                                    className=\"btn btn-circle outline-grey\"\r\n                                    onClick={() => this.props.getParameterEdit({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </Nav.Link>\r\n\r\n                                {this.props.Login.masterData.actionStatus &&\r\n                                    this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                    actionStatus.length > 0 ?\r\n                                    <CustomPopOver\r\n                                        icon={faPalette}\r\n                                        nav={true}\r\n                                        data={actionStatus}\r\n                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                        dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                        textKey=\"stransdisplaystatus\"\r\n                                        iconKey=\"ntransactionstatus\"\r\n                                    >\r\n                                    </CustomPopOver>\r\n                                    : \"\"}\r\n                            </ProductList>\r\n                        }\r\n\r\n\r\n                    // actionIcons={\r\n                    //     [\r\n                    //        { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),  controlname: \"faEye\", hidden:this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\r\n                    //     ]}\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue &&\r\n            this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card>\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0  sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            //clickIconGroup={true}\r\n                            cardHead={94}\r\n                            //paneHeight={this.state.initialVerticalWidth}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || AP_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.APSelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={this.props.getTestDetail}\r\n                            inputParam={testGetParam}\r\n                            additionalParam={[]}\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"APSelectedSubSample\"\r\n                            objectName=\"subSample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectionList={this.state.selectedFilter}\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"sfilterstatus\"\r\n                            selectionColorField=\"stranscolor\"\r\n                            statusColor=\"stranscolor\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            moreField={this.state.subSampleMoreField}\r\n                            needValidation={false}\r\n                            needMultiSelect={true}\r\n                            needFilter={false}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={filterSubSampleParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            skip={this.state.subSampleSkip}\r\n                            take={this.state.subSampleTake}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            childTabsKey={[\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"ResultUsedMaterial\"]}\r\n                            subFieldsFile={true}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        }\r\n        else {\r\n            mainDesign = testDesign\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"} bsPrefix=\"toolbar-top\">\r\n                        {/* sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }} */}\r\n                        <Col md={12} className='parent-port-height' >\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        //onSecondaryPaneSizeChange={this.paneSizeChange} \r\n                                        primaryMinSize={40} secondaryMinSize={20}>\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                needMultiSelect={true}\r\n                                                masterList={this.props.Login.masterData.searchedSample || AP_SampleList}\r\n                                                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                                                primaryKeyField=\"npreregno\"\r\n                                                getMasterDetail={this.props.getsubSampleDetail}\r\n                                                inputParam={subSampleGetParam}\r\n                                                additionalParam={['napprovalversioncode']}\r\n                                                mainField={'sarno'}\r\n                                                selectionList={this.state.selectedFilter}\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"sfilterstatus\"\r\n                                                selectionColorField=\"stranscolor\"\r\n                                                selectedListName=\"APSelectedSample\"\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                searchListName=\"searchedSample\"\r\n                                                needValidation={true}\r\n                                                validationKey=\"napprovalversioncode\"\r\n                                                validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                moreField={this.state.sampleMoreField}\r\n                                                jsonDesignFields={true}\r\n                                                jsonField={'jsondata'}\r\n                                                showStatusLink={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                //statusColor=\"sdecisioncolor\"\r\n                                                statusColor=\"stranscolor\"\r\n                                                showStatusIcon={false}\r\n                                                showStatusName={true}\r\n                                                needFilter={true}\r\n                                                needMultiValueFilter={true}\r\n                                                clearAllFilter={this.onReload}\r\n                                                onMultiFilterClick={this.onMultiFilterClick}\r\n                                                searchRef={this.searchSampleRef}\r\n                                                filterParam={filterSampleParam}\r\n                                                skip={this.state.skip}\r\n                                                take={this.state.take}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                showStatusBlink={true}\r\n                                                callCloseFunction={true}\r\n                                                listMasterShowIcon={0}\r\n                                                //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                childTabsKey={[\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\",\r\n                                                    \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"]}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                            {\r\n                                                                title: \"Report\",\r\n                                                                controlname: \"reports\",\r\n                                                                objectName: \"sample\",\r\n                                                                hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                                // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                onClick: this.props.previewSampleReport,\r\n                                                                inputData: {\r\n                                                                    userinfo: this.props.Login.userInfo,\r\n                                                                    ncontrolcode: reportPreviewId\r\n                                                                },\r\n                                                            } :\r\n                                                            this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                                {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\r\n                                                                    // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                                    //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                                    onClick: (obj) => this.generateCOAReport(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: reportPreviewId,\r\n                                                                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                                                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                                                    },\r\n                                                                }\r\n\r\n                                                                : {\r\n                                                                    title: \"Report\",\r\n                                                                    controlname: \"reports\",\r\n                                                                    objectName: \"sample\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\r\n                                                                    onClick: (obj) => this.props.reportGenerate(obj, reportGenerateId),\r\n                                                                    inputData: {\r\n                                                                        userinfo: this.props.Login.userInfo,\r\n                                                                        ncontrolcode: coaReportId,\r\n\r\n                                                                    },\r\n\r\n                                                                }, { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }), controlname: \"faEye\", hidden: this.state.userRoleControlRights.indexOf(PatientPreviousResultViewId) === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, elnUserInfo: this.props.Login.elnUserInfo, elnSite: this.props.Login.elnSite } },\r\n\r\n                                                    ]\r\n                                                }\r\n\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                                            <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                                onClick={() => this.onReload()}\r\n                                                                // data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                                <RefreshIcon className='custom_icons' />\r\n                                                            </Button>\r\n                                                            {this.props.Login.masterData.decisionStatus &&\r\n                                                                this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 &&\r\n                                                                this.props.Login.masterData.decisionStatus.length > 0 ?\r\n                                                                <CustomPopOver\r\n                                                                    icon={faBolt}\r\n                                                                    nav={true}\r\n                                                                    data={decisionStatus}\r\n                                                                    btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                    textKey=\"sdecisionstatus\"\r\n                                                                    iconKey=\"ntransactionstatus\"\r\n                                                                    dynamicButton={(value) => this.updateDecision(value)}\r\n                                                                >\r\n                                                                </CustomPopOver>\r\n\r\n                                                                : \"\"}\r\n                                                        </ProductList>\r\n                                                    </>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <ApprovalFilter\r\n                                                            SampleType={this.state.SampletypeList || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                            RegType={this.state.RegistrationTypeList || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                            UserSection={this.state.UserSectionList || []}\r\n                                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                            JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                            Test={this.state.TestList || []}\r\n                                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                            Batch={this.state.Batchvalues || []}\r\n                                                            BatchValue={this.props.Login.masterData.defaultBatchvalue || []}\r\n                                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true ? { display: \"block\" } : { display: \"none\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-results position-relative sm-view-v-t  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_INSTRUMENT\") : \"\"}\r\n                                        </div> */}\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments position-relative vertical-tab-content-common ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 9 ? this.sideNavDetail(\"IDS_HISTORY\") : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1, \"IDS_RESULTS\")}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                                    //  data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2, \"IDS_ATTACHMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3, \"IDS_COMMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4,\"IDS_INSTRUMENT\")}>\r\n                                                <FontAwesomeIcon icon={faMicroscope} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(5, \"IDS_MATERIAL\")}>\r\n                                                <FontAwesomeIcon icon={faFlask} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(6, \"IDS_TASK\")}>\r\n                                                <FontAwesomeIcon icon={faCommentDots} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(7)}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8, \"IDS_SAMPLEDETAILS\")}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(9, \"IDS_HISTORY\")}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_HISTORY\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                //label={\"IDS_AUTOSHOW\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                //label={\"IDS_POPUPNAV\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.props.Login.multiFilterLoad ? this.onSaveMultiFilterClick : this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openChildModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'enforce' ? [{ \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforcestatuscomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        loginoperation={this.props.Login.operation === 'view' ? true : false}\r\n                        //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\r\n                        noSave={this.props.Login.operation === 'view' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" || this.props.Login.screenName === \"IDS_RESULTCORRECTION\" ? true : false}\r\n                        size={this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" || this.props.Login.screenName === \"IDS_RESULTCORRECTION\" ? \"xl\" : \"lg\"}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.operation === 'enforce' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ngradecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            value={this.props.Login.masterData.GradeValue || []}\r\n                                            options={this.props.Login.masterData.Grade || []}\r\n                                            optionId=\"ngradecode\"\r\n                                            optionValue=\"sgradename\"\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isDisabled={false}\r\n                                            isSearchable={false}\r\n                                            closeMenuOnSelect={true}\r\n                                            isClearable={false}\r\n                                            onChange={(event) => this.onComboChange(event, 'ngradecode')}\r\n                                        />\r\n                                        <FormTextarea\r\n                                            name=\"senforcestatuscomment\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                            rows=\"2\"\r\n                                            isMandatory={true}\r\n                                            required={false}\r\n                                            maxLength={255}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> :\r\n                                this.props.Login.operation === 'dynamic' ?\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            {/* <FormNumericInput\r\n                                            name={\"retestcount\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                            type=\"number\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                            value={this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\"}\r\n                                            isMandatory=\"*\" \r\n                                            required={true}\r\n                                            min={1}\r\n                                            max={10}\r\n                                        /> */}\r\n                                            <FormNumericInput\r\n                                                name=\"retestcount\"\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount}\r\n                                                type=\"text\"\r\n                                                strict={true}\r\n                                                className=\"form-control\"\r\n                                                value={this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\"}\r\n                                                maxLength={6}\r\n                                                onChange={(event) => this.onNumericInputOnChange(event, 'retestcount')}\r\n                                                isMandatory=\"*\"\r\n                                                required={true}\r\n                                                noStyle={true}\r\n                                            // min={1}\r\n                                            // max={this.props.Login.masterData.retestcount}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row> :\r\n                                    this.props.Login.screenName === 'IDS_PREVIOUSRESULTVIEW' ?\r\n                                        (\r\n                                            <>\r\n\r\n                                                <Card className='one' >\r\n                                                    <Card.Body>\r\n                                                        <SpecificationInfo\r\n                                                            controlMap={this.state.controlMap}\r\n                                                            auditInfoFields={auditInfoFields}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                            selectedSpecification={this.props.Login.masterData.viewdetails}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            selectedNode={this.props.Login.masterData.selectedNode}\r\n                                                            selectedRecord={this.state.filterData}\r\n                                                            approvalRoleActionDetail={this.props.Login.masterData.ApprovalRoleActionDetail}\r\n                                                            screenName=\"IDS_PREVIOUSRESULTVIEW\"\r\n\r\n                                                        />\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                                <br></br>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n\r\n                                                        {<CustomTab tabDetail={this.tabDetailResultView()} onTabChange={this.onTabChangeResultView} />}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* <DataGrid\r\n                                            primaryKeyField={\"ntransactiontestcode\"}\r\n                                            data={this.props.Login.masterData.AuditModifiedComments || []}\r\n                                            //data={this.props.Login.addComponentDataList || []}\r\n                                            detailedFieldList={this.feildsForGrid}\r\n                                            extractedColumnList={this.feildsForGrid}\r\n                                            // dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                            //   && process(this.props.Login.masterData.AuditModifiedComments, { skip: 0, take: 10 })}\r\n                                            // dataState={{ skip: 0, take: 10 }}\r\n                                            dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                                && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : { skip: 0, take: 10 })}\r\n                                              //dataState={{ skip: 0, take: 10 }}\r\n                                              dataState={this.state.dataState\r\n                                                ? this.state.dataState : { skip: 0, take: 10 }}\r\n                                            pageable={true}\r\n                                            scrollable={'scrollable'}\r\n                                            dataStateChange={this.dataStateChange}\r\n                  \r\n                                          /> */}\r\n                                            </>\r\n                                        )\r\n                                        :\r\n\r\n\r\n                                        this.props.Login.operation === 'view' ?\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"nresultparamcommenthistorycode\"}\r\n                                                        data={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                        dataResult={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                        dataState={{ skip: 0, take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0 }}\r\n                                                        // dataStateChange={this.dataStateChange}\r\n                                                        extractedColumnList={\r\n                                                            [\r\n                                                                { \"idsName\": this.props.Login.idsName, \"dataField\": this.props.Login.dataField, \"width\": \"450px\" }\r\n                                                            ]\r\n                                                        }\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        pageable={false}\r\n                                                        hideColumnFilter={true}\r\n                                                        isActionRequired={false}\r\n                                                        isToolBarRequired={false}\r\n                                                        scrollable={\"scrollable\"}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            : this.props.Login.screenName === 'IDS_RESULTCORRECTION' ?\r\n\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"ntransactionresultcode\"}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    data={this.props.Login.masterData.ResultCorrection}\r\n                                                    dataResult={process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.resultCorrectionDataState)}\r\n                                                    dataState={this.state.resultCorrectionDataState}\r\n                                                    dataStateChange={this.resultCorrectionDataStateChange}\r\n                                                    extractedColumnList={resultCorrectionColumnList}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    methodUrl={\"Result\"}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    fetchRecord={this.props.fetchParameterDetails}\r\n                                                    deleteRecord={this.deleteRecord}\r\n                                                    //  reloadData={this.reloadData}\r\n                                                    //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\r\n                                                    editParam={\r\n                                                        {\r\n                                                            screenName: this.props.Login.screenName, primaryKeyField: \"ntransactionresultcode\", operation: \"update\",\r\n                                                            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editResultId, masterData: this.props.Login.masterData\r\n                                                        }}\r\n                                                    //  deleteParam={deleteParam}\r\n                                                    scrollable={'scrollable'}\r\n                                                    gridHeight={'600px'}\r\n                                                    isActionRequired={true}\r\n                                                    //  isToolBarRequired={true}\r\n                                                    pageable={true}\r\n                                                />\r\n                                                // ALPD-4133 Start  of Addition Filter Component Render - ATE-241\r\n                                                : this.props.Login.multiFilterLoad ?\r\n                                                    <KendoDatatoolFilter\r\n                                                        filter={this.props.Login.masterData['kendoFilterList'] || {\r\n                                                            logic: \"and\",\r\n                                                            filters: []\r\n                                                        }}\r\n                                                        handleFilterChange={this.handleFilterChange}\r\n                                                        filterData={this.props.Login.masterData.kendoOptionList || []}\r\n                                                        fields={this.props.Login.masterData[\"fields\"] || []}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        static={true}\r\n                                                        parentCallBack={this.parentCallBack}\r\n                                                        needParentCallBack={true}\r\n                                                    />\r\n                                                    //  End of Additional filter component render ALPD-4133 ATE-241\r\n\r\n                                                    :\r\n                                                    <EditApprovalParameter\r\n                                                        ApprovalParamEdit={this.props.Login.ApprovalParamEdit || []}\r\n                                                        changeMandatory={this.changeMandatory}\r\n                                                        selectedRecord={this.state.selectedRecord.approvalParameterEdit || {}}\r\n                                                        nsubsampleneed={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed}\r\n                                                    />\r\n\r\n                        }\r\n\r\n\r\n                    />\r\n                    : \"\"}\r\n\r\n                {this.props.Login.modalShow ? (\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalResultClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        //  mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                /> :\r\n                                this.state.selectedRecord.ReleaseParameter &&\r\n                                this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\r\n                                    return <ResultEntryForm\r\n                                        index={index}\r\n\r\n                                        ResultParameter={[...this.state.selectedRecord.ReleaseParameter]}\r\n                                        predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                        selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                        selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                        paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                        parameterResults={parameterResult\r\n                                            || []}\r\n                                        Login={this.props.Login}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        onResultInputChange={this.onResultInputChange}\r\n                                        //onGradeEvent={this.onGradeEvent}\r\n                                        getFormula={this.getFormula}\r\n                                        onDropTestFile={this.onDropTestFile}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                        viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                        needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                        needdelete={true}\r\n                                        needmandatory={true}\r\n                                        ResultAccuracy={this.props.Login.masterData.ResultAccuracy || []}\r\n                                        Unit={this.props.Login.masterData.Unit || []}\r\n                                    //intl={this.props.intl}\r\n                                    />\r\n                                })\r\n                        }\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                {this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                    <TemplateForm\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.handleClose}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.onSaveCheckList}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            UserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\r\n            TestValue: this.props.Login.masterData.realTestValue || {},\r\n            BatchValue: this.props.Login.masterData.realBatchvalue || {},\r\n            defaultBatchvalue: this.props.Login.masterData.realBatchvalue || {},\r\n            FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(), //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\r\n            toDate: this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\r\n            DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            RegType: this.props.Login.masterData.realRegTypeList || [],\r\n            RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\r\n            ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\r\n            UserSection: this.props.Login.masterData.realUserSectionList || [],\r\n            Test: this.props.Login.masterData.realTestList || [],\r\n            Batchvalues: this.props.Login.masterData.realBatchvaluesList || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || [],\r\n\r\n        }\r\n        // JobStatus={this.props.Login.masterData.JobStatus || []}\r\n        // DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n        // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let activeTabIndex = this.props.Login.activeTabIndex\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState, registrationTestHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField,\r\n            activeTabIndex, activeTabId, Batchvalues, subSampleSkip, subSampleTake, samplefilteritem, sampledisplayfields } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n            // this.setState({userRoleControlRights, controlMap});\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n                // this.setState({\r\n                //     resultDataState: dataSate,instrumentDataState: dataSate,\r\n                //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\r\n                //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\r\n                //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\r\n                // });\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            // this.setState({selectedRecord: this.props.Login.selectedRecord });\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            Batchvalues = constructOptionList(this.props.Login.masterData.Batchvalues || [], 'nbatchmastercode', 'sbatcharno', 'ascending', 'nbatchmastercode', false);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            Batchvalues = Batchvalues.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subSampleSkip = this.props.Login.subSampleSkip === undefined ? subSampleSkip : this.props.Login.subSampleSkip\r\n            subSampleTake = this.props.Login.subSampleTake || subSampleTake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \r\n            //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\r\n            //     this.props.Login.masterData.FilterStatus : [];\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n            if (this.props.Login.registrationTestHistoryDataState && this.props.Login.registrationTestHistoryDataState !== previousProps.Login.registrationTestHistoryDataState) {\r\n                registrationTestHistoryDataState = this.props.Login.registrationTestHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.availableReleaseRecord === true) {\r\n            this.confirmMessage.confirm(\"deleteMessage\",\r\n                this.props.intl.formatMessage({ id: \"IDS_TESTADDEDINRELEASE\" }),\r\n                this.props.intl.formatMessage({ id: \"IDS_AREUSURETORETESTORCALC\" }),\r\n                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                () => this.checkRetestAction(this.props.Login.action,\r\n                    this.props.Login.ncontrolCode),\r\n                undefined, () => this.closeAlert());\r\n        }\r\n        if (this.props.Login.availableReleaseRecord === false) {\r\n            this.checkRetestAction(this.props.Login.action,\r\n                this.props.Login.ncontrolCode)\r\n        }\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n            samplefilteritem = dynamicColumn.samplefilteritem || [];\r\n            sampledisplayfields = dynamicColumn.sampledisplayfields || [];\r\n\r\n            this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample &&\r\n                DynamicSubSampleColumns.push({\r\n                    1: { 'en-US': 'Specimen', 'ru-RU': 'Образец', 'tg-TG': 'Намуна' },\r\n                    2: \"scomponentname\"\r\n                });\r\n\r\n            bool = true;\r\n            // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\r\n            // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\r\n            // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\r\n            // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\r\n            // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\r\n            // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\r\n            // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\r\n            // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\r\n            // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\r\n            // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\r\n            // let {selectedRecord}=this.state\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            // this.setState({\r\n            //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            //     sampleListMainField, subSampleListMainField, testListMainField,\r\n            //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\r\n            // })\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState, registrationTestHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField,\r\n                activeTabIndex, activeTabId, Batchvalues, subSampleSkip, subSampleTake, samplefilteritem, sampledisplayfields,\r\n            });\r\n        }\r\n    }\r\n\r\n    // previewSampleReport = (ncontrolCode) => {\r\n\r\n    //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\r\n    //     const selectedSample = this.props.Login.masterData.selectedSample[0];\r\n\r\n    //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\r\n    //                         userinfo:this.props.Login.userInfo,\r\n    //                         nprimarykey: selectedSample.npreregno,\r\n    //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n    //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\r\n    //                         sprimarykeyname :\"npreregno\",\r\n    //                         ncontrolcode : ncontrolCode,\r\n    //                         nregtypecode:selectedSample.nregtypecode,\r\n    //                         nregsubtypecode: selectedSample.nregsubtypecode\r\n    //                         }\r\n    //     this.props.previewSampleReport(inputData);\r\n\r\n    // }\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n                isneedHeader={true}\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterData={this.props.Login.masterData}\r\n            masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                genericLabel={this.props.Login.genericLabel}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        // tabMap.set(\"IDS_PRINTHISTORY\",\r\n        //     <ApprovalPrintHistoryTab\r\n        //         userInfo={this.props.Login.userInfo}\r\n        //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\r\n        //         inputParam={this.props.Login.inputParam}\r\n        //         dataState={this.state.samplePrintHistoryDataState}\r\n        //         dataStateChange={this.sampleDataStateChange}\r\n        //         screenName=\"IDS_PRINTHISTORY\"\r\n        //         controlMap={this.state.controlMap}\r\n        //         userRoleControlRights={this.state.userRoleControlRights}\r\n        //         selectedId={null}\r\n        //     />);\r\n        // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n        //     tabMap.set(\"IDS_REPORTHISTORY\",\r\n        //         <ReportHistoryTab\r\n        //             userInfo={this.props.Login.userInfo}\r\n        //             COAHistory={this.props.Login.masterData.COAHistory}\r\n        //             inputParam={this.props.Login.inputParam}\r\n        //             dataState={this.state.reportHistoryDataState}\r\n        //             dataStateChange={this.sampleDataStateChange}\r\n        //             screenName=\"IDS_REPORTHISTORY\"\r\n        //             controlMap={this.state.controlMap}\r\n        //             userRoleControlRights={this.state.userRoleControlRights}\r\n        //             selectedId={null}\r\n        //             viewDownloadFile={this.downloadReport}\r\n        //         />);\r\n        // }\r\n        return tabMap;\r\n    }\r\n    downloadReport = (input) => {\r\n        let inputParam = {\r\n            inputData: { selectedRecord: { ...input.inputData }, userinfo: this.props.Login.userInfo },\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Report\"\r\n        }\r\n        this.props.viewAttachment(inputParam)\r\n    }\r\n\r\n    subsampleTabDetail = () => {\r\n        let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ?\r\n            this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        let { subSampleSkip, subSampleTake } = this.state\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    resultTabDetail = () => {\r\n        const resultTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        resultTabMap.set(\"IDS_RESULTS\", <ApprovalResultsTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel={this.props.Login.genericLabel}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            screenName=\"IDS_RESULTS\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            getStatusCombo={this.props.getStatusCombo}\r\n            selectedId={this.props.Login.masterData.selectedParamId}\r\n            viewFile={this.props.viewAttachment}\r\n            checkListRecord={this.props.checkListRecord}\r\n            getEnforceCommentsHistory={this.props.getEnforceCommentsHistory}\r\n        />)\r\n\r\n        resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\",\r\n            <ResultChangeHistoryTab\r\n                tabSequence={SideBarSeqno.TEST}\r\n                genericLabel={this.props.Login.genericLabel}\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ApprovalResultChangeHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        return resultTabMap;\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n        let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"screateddate\" }]}\r\n            isneedReport={false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            isneedHeader={true}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n                screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                selectedMaster=\"APSelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                //  masterList={this.props.Login.masterData.APSelectedSubSample}\r\n                masterList={selectedSubSampleList}\r\n                masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                viewFile={this.props.viewAttachment}\r\n                addName={\"AddSubSampleAttachment\"}\r\n                editName={\"EditSubSampleAttachment\"}\r\n                deleteName={\"DeleteSubSampleAttachment\"}\r\n                viewName={\"ViewSubSampleAttachment\"}\r\n                methodUrl={\"SubSampleAttachment\"}\r\n                skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n                take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleAttachment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLEARNO\"\r\n                displayName=\"ssamplearno\"\r\n                isneedHeader={true}\r\n            />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                // masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterList={selectedSampleList}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n                isneedHeader={true}\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n        let sampleList = this.props.Login.masterData.AP_SAMPLE || [];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            isSampleTestComment={true}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            isneedReport={false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n                screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                selectedMaster=\"APSelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                addName={\"AddSubSampleComment\"}\r\n                editName={\"EditSubSampleComment\"}\r\n                deleteName={\"DeleteSubSampleComment\"}\r\n                methodUrl={\"SubSampleComment\"}\r\n                isTestComment={false}\r\n                //  masterList={this.props.Login.masterData.APSelectedSubSample}\r\n                masterList={selectedSubSampleList}\r\n                masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n                primaryKeyField={\"nsamplecommentcode\"}\r\n                dataState={this.state.subSampleCommentDataState}\r\n                dataStateChange={this.subSampledataStateChange}\r\n                masterData={this.props.Login.masterData}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleComment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                    ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n                }}\r\n                selectedListName=\"IDS_SAMPLEARNO\"\r\n                displayName=\"ssamplearno\"\r\n                selectedId={this.props.Login.selectedId || null}\r\n            />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            //masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterList={selectedSampleList}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.sampleCommentDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    historyTabDetail = () => {\r\n        const historyTabMap = new Map();\r\n        let historyExtractedColumnList = [];\r\n        // if(this.props.Login.screenName === \"IDS_TESTHISTORY\"){\r\n        historyExtractedColumnList.push({ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" });\r\n\r\n        this.props.Login.masterData && this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            historyExtractedColumnList.push({ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" });\r\n\r\n        historyExtractedColumnList.push({ \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"stransactiondate\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" }\r\n        );\r\n        // } \r\n        // else if(this.props.Login.screenName === \"IDS_SUBSAMPLEHISTORY\"){\r\n        //     historyExtractedColumnList.push(\r\n        //         { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" },\r\n        //         { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" }\r\n        //     );\r\n        // } else if(this.props.Login.screenName === \"IDS_SAMPLEHISTORY\"){\r\n        //     historyExtractedColumnList.push(\r\n        //         { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }\r\n        //     );\r\n        // }\r\n\r\n        historyTabMap.set(\"IDS_TESTHISTORY\", <DataGrid\r\n            primaryKeyField={\"ntesthistorycode\"}\r\n            data={this.props.Login.masterData.RegistrationTestHistory}\r\n            dataResult={process(this.props.Login.masterData.RegistrationTestHistory || [], this.state.registrationTestHistoryDataState)}\r\n            dataState={this.state.registrationTestHistoryDataState}\r\n            dataStateChange={this.RegistrationHistoryDataStateChange}\r\n            extractedColumnList={historyExtractedColumnList}\r\n            inputParam={this.props.Login.inputParam}\r\n            userInfo={this.props.Login.userInfo}\r\n            isRefreshRequired={false}\r\n            pageable={true}\r\n            scrollable={'scrollable'}\r\n            gridHeight={'600px'}\r\n            isActionRequired={false}\r\n            isToolBarRequired={false}\r\n        />\r\n        )\r\n        return historyTabMap;\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // onSampleTabChange = (tabProps) => {\r\n    //     const activeSampleTab = tabProps.screenName;\r\n    //     if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSample: this.props.Login.masterData.APSelectedSample,\r\n    //             npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSampleTab,\r\n    //             activeSampleTab\r\n    //         }\r\n    //         this.props.getSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    // onSubSampleTabChange = (tabProps) => {\r\n    //     const activeSubSampleTab = tabProps.screenName;\r\n    //     if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n    //         let inputData = {\r\n    //             masterData: this.props.Login.masterData,\r\n    //             selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             screenName: activeSubSampleTab,\r\n    //             activeSubSampleTab,\r\n    //             subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n    //             subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n    //         }\r\n    //         this.props.getSubSampleChildTabDetail(inputData)\r\n    //     }\r\n    // }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestList() {\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { availableReleaseRecord: undefined, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    checkRetestAction = (action, ncontrolCode) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n            if (action.ntransactionstatus === transactionStatus.RETEST && this.props.Login.availableReleaseRecord == undefined) {\r\n                //|| action.ntransactionstatus === transactionStatus.RECALC) \r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n                        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n                        if (ntransCode === transactionStatus.ALL) {\r\n                            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n                        } else {\r\n                            ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n                        }\r\n                        let { testskip, testtake } = this.state\r\n                        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n                        testList = testList.slice(testskip, testskip + testtake);\r\n                        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n                        const inputParam = {\r\n                            inputData: {\r\n                                'performaction': {\r\n                                    npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                                    ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                                        null,\r\n                                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                                    nTransStatus: action.ntransactionstatus,\r\n                                    stransdisplaystatus: action.stransdisplaystatus,\r\n                                    ntransactionstatus: String(-1),\r\n                                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                                    nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                                    dfrom: obj.fromDate,\r\n                                    dto: obj.toDate,\r\n                                    nflag: 2,\r\n                                    ntype: 1,\r\n                                    userinfo: this.props.Login.userInfo,\r\n                                    APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                                    APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                                    retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                                    ncontrolCode,\r\n                                    //  checkBoxOperation: 3,\r\n                                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                                    nbatchmastercode: (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                                    activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\r\n                                    activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\r\n                                    activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\",\r\n                                    nneedmyjob: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedmyjob) || false,\r\n                                },\r\n                                userinfo: this.props.Login.userInfo\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            masterData: this.props.Login.masterData,\r\n                            methodUrl: \"checkReleaseRecord\",\r\n                            postParamList: this.postParamList,\r\n                            action: action,\r\n                            availableReleaseRecord: undefined\r\n                        }\r\n                        this.props.checkReleaseRecord(inputParam)\r\n                    }\r\n                }\r\n            } else if (action.ntransactionstatus === transactionStatus.RETEST) {\r\n                //&& this.props.Login.availableReleaseRecord === false) {\r\n\r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n\r\n                        if (this.props.Login.masterData.APSelectedTest[0].nisiqcmaterial === 3) {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"IDS_IQCSAMPLECAN'TRETEST\" }));\r\n                        }\r\n                        else {\r\n\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    action,\r\n                                    masterData: this.props.Login.masterData,\r\n                                    openChildModal: true,\r\n                                    screenName: \"IDS_RETESTCOUNT\",\r\n                                    operation: \"dynamic\",\r\n                                    availableReleaseRecord: undefined\r\n                                }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.performTestActions(action, ncontrolCode);\r\n                }\r\n\r\n            } else if (action.ntransactionstatus === transactionStatus.RECALC && this.props.Login.availableReleaseRecord == undefined) {\r\n                const inputParam = {\r\n                    inputData: {\r\n                        'performaction': {\r\n                            npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                            ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                            nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                                this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                    this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                    String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                                null,\r\n                            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                            nTransStatus: action.ntransactionstatus,\r\n                            stransdisplaystatus: action.stransdisplaystatus,\r\n                            ntransactionstatus: String(-1),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                            // dfrom: obj.fromDate,\r\n                            // dto: obj.toDate,\r\n                            nflag: 2,\r\n                            ntype: 1,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                            APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                            APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                            retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                            ncontrolCode,\r\n                            // checkBoxOperation: 3,\r\n                            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                            nbatchmastercode: (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                            activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\r\n                            activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\r\n                            activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\"\r\n                        },\r\n                        userinfo: this.props.Login.userInfo\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    methodUrl: \"checkReleaseRecord\",\r\n                    postParamList: this.postParamList,\r\n                    action: action,\r\n                    availableReleaseRecord: undefined\r\n                }\r\n                this.props.checkReleaseRecord(inputParam)\r\n            } else if (action.ntransactionstatus === transactionStatus.RECALC) {\r\n                // && this.props.Login.availableReleaseRecord === false)\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        action,\r\n                        masterData: this.props.Login.masterData,\r\n                        //openChildModal: true,\r\n                        //screenName: \"IDS_RETESTCOUNT\",\r\n                        operation: \"dynamic\",\r\n                        availableReleaseRecord: undefined\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n                this.performTestActions(action, ncontrolCode);\r\n            } else {\r\n                this.performTestActions(action, ncontrolCode);\r\n\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    performTestActions = (action, ncontrolCode) => {\r\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\r\n\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount)\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            if (ntransCode === transactionStatus.ALL) {\r\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            } else {\r\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n            }\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n            const inputParam = {\r\n                inputData: {\r\n                    'performaction': {\r\n                        npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                        ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                        ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                            null,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        nTransStatus: action.ntransactionstatus,\r\n                        stransdisplaystatus: action.stransdisplaystatus,\r\n                        ntransactionstatus: String(-1),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        nneedjoballocation: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nflag: 2,\r\n                        ntype: 1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                        APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                        APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                        retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        ncontrolCode,\r\n                        //  checkBoxOperation: 3,\r\n                        checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                        nbatchmastercode: (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1,\r\n                        activeTestTab: this.props.Login.masterData.activeTestTab || \"\",\r\n                        activeSampleTab: this.props.Login.masterData.activeSampleTab || \"\",\r\n                        activeSubSampleTab: this.props.Login.masterData.activeSubSampleTab || \"\",\r\n                        nneedmyjob: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedmyjob) || false,\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                methodUrl: \"performaction\",\r\n                postParamList: this.postParamList\r\n            }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"performaction\",\r\n                        operation: \"dynamic\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.performAction(inputParam)\r\n            }\r\n        }\r\n    }\r\n    updateDecision = (action) => {\r\n        let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        }\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let { skip, take } = this.state\r\n        let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.splice(skip, skip + take);\r\n        let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (selectedsampleList.length > 0) {\r\n            const inputData = {\r\n                'updatedecision': {\r\n                    npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\r\n                    nTransStatus: action.ntransactionstatus,\r\n                    ntransactionstatus: String(ntransCode),\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\r\n                    nflag: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\r\n                    napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                }, userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n            let inputParam = { postParamList: this.postParamList, inputData, masterData: this.props.Login.masterData }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"updatedecision\",\r\n                        operation: \"decision\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.updateDecision(inputParam)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n        }\r\n\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList\r\n\r\n                    };\r\n                    this.props.getRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList\r\n\r\n                    }\r\n                    this.props.getRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        //nsectioncode: this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.length > 0 ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode : null,\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList,\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList\r\n\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    //  nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    let ApprovalVersionValue = comboData.item\r\n                    ApprovalVersionValue['napproveconfversioncode'] = comboData.value\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        napproveconfversioncode: comboData.value,\r\n                        ApprovalVersionValue: comboData.item,\r\n                        //   nsectioncode: this.props.Login.masterData.UserSectionValue!== null&&\r\n                        //    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode &&\r\n                            this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\")\r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    let inputData = {\r\n                        masterData: masterData,\r\n                        ntestcode: comboData.item.ntestcode,\r\n                        defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                        //ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ntranscode: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus.toString(),\r\n                        userinfo: this.props.Login.userInfo,\r\n                        napprovalversioncode: parseInt(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode)\r\n\r\n                    }\r\n                    this.props.getTestBasedCompletedBatch(inputData)\r\n                    // const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //     data: { masterData }\r\n                    // }\r\n                    // this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'nbatchmastercode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let defaultBatchvalue = comboData.item;\r\n                    this.props.Login.masterData.defaultBatchvalue = defaultBatchvalue;\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData: { ...this.props.Login.masterData } }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null,//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1    //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode, \r\n\r\n\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (fieldName === 'nbatchmastercode') {\r\n\r\n                this.props.Login.masterData.defaultBatchvalue = [];\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n        }\r\n    }\r\n    onComboChange = (comboData) => {\r\n        if (comboData) {\r\n            let masterData = { ...this.props.Login.masterData, GradeValue: comboData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList,\r\n                realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList,\r\n                realRegTypeList: this.props.Login.masterData.realRegTypeList,\r\n                realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList,\r\n                realFilterStatusList: this.props.Login.masterData.realFilterStatusList\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersion(inputParam)\r\n    }\r\n    changeMandatory = (event, dataItem) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO\r\n        selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"], [dataItem.ntransactionresultcode]: value }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realBatchvalue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue\r\n                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                    || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0')\r\n                    ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\r\n\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            //checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n            nbatchmastercode: (realBatchvalue && realBatchvalue.nbatchmastercode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            //  ALPD-4133 to Clear Additional Filter Config Data upon Refresh and clear filter ATE-241\r\n            masterData[\"kendoFilterList\"] = undefined;\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realBatchCodeValue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue\r\n        let realSampleTypeList = this.props.Login.masterData.SampleType && this.props.Login.masterData.SampleType\r\n        let realRegTypeList = this.props.Login.masterData.RegType && this.props.Login.masterData.RegType\r\n        let realRegSubTypeList = this.props.Login.masterData.RegSubType && this.props.Login.masterData.RegSubType\r\n        let realFilterStatusList = this.props.Login.masterData.FilterStatus && this.props.Login.masterData.FilterStatus\r\n        let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion && this.props.Login.masterData.ApprovalVersion\r\n        let realUserSectionList = this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection\r\n        let realTestList = this.props.Login.masterData.Test && this.props.Login.masterData.Test\r\n        let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping && this.props.Login.masterData.DesignTemplateMapping\r\n        let realBatchvalue = this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue\r\n        let realBatchvaluesList = this.props.Login.masterData.Batchvalues && this.props.Login.masterData.Batchvalues\r\n        // Batchvalues:this.props.Login.masterData.realBatchvaluesList || {},\r\n\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue, realBatchCodeValue, realDesignTemplateMappingList, realTestList, realUserSectionList,\r\n            realApprovalVersionList, realFilterStatusList, realRegSubTypeList, realRegTypeList, realSampleTypeList,\r\n            realBatchvalue, realBatchvaluesList\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue\r\n                ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                    || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0')\r\n                    ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            activeSampleTab: this.props.Login.activeSampleTab,\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            //  checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            nbatchmastercode: (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n            // ALPD-4133 to Clear Additional Filter info on filter Submit ATE-241\r\n            masterData[\"kendoFilterList\"] = undefined;\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    \r\n    // ALPD-4133 Start of On Click Additional Filter handler - ATE-241\r\n    onMultiFilterClick = () => {\r\n        const filterFields = this.state.sampledisplayfields || [];\r\n        const samplefilteritem = this.state.samplefilteritem || [];\r\n        const languageTypeCode = this.props.Login.userInfo.slanguagetypecode;\r\n        const datefileds = [];\r\n        let updFilterFields = [];\r\n        filterFields.length > 0 && filterFields.map(item => {\r\n            let obj = {};\r\n            obj[\"filterinputtype\"] = item[3];\r\n            obj[\"displayname\"] = item[1];\r\n            obj[\"columnname\"] = item[2];\r\n            updFilterFields.push(obj)\r\n        });\r\n        const fields = [];\r\n        const kendoFilterList = this.props.Login.masterData?.kendoFilterList || [];\r\n        if (kendoFilterList.length === 0 || (kendoFilterList.filters && kendoFilterList.filters.length === 0)) {\r\n            kendoFilterList[\"logic\"] = \"and\";\r\n            kendoFilterList[\"filters\"] = [];\r\n            samplefilteritem.length > 0 && samplefilteritem.map(item => {\r\n                let obj = {};\r\n                obj[\"field\"] = item[2];\r\n                obj[\"value\"] = \"\";\r\n                if (item[3] === \"date\" || item[3] === \"numeric\") {\r\n                    obj[\"operator\"] = \"eq\";\r\n                } else {\r\n                    obj[\"operator\"] = \"contains\";\r\n                }\r\n                kendoFilterList[\"filters\"].push(obj);\r\n            });\r\n        }\r\n        updFilterFields.length > 0 && updFilterFields.map(item => {\r\n            fields.push(filterObject(item, languageTypeCode, null, null, true));\r\n            if (item.filterinputtype === \"date\") {\r\n                datefileds.push(item.columnname)\r\n            }\r\n        });\r\n        const sampleList = this.props.Login.masterData.AP_SAMPLE || [];\r\n        const kendoOptionList = sampleList.length > 0 ? sampleList.map(item => {\r\n            datefileds.map(x => {\r\n                item[x + \"timestamp\"] = toTimestamp(rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, item[x]))\r\n            })\r\n            return item;\r\n        }) : [];\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openChildModal: true,\r\n                masterData: {\r\n                    ...this.props.Login.masterData, fields,\r\n                    kendoFilterList, kendoOptionList\r\n                },\r\n                multiFilterLoad: true,\r\n                screenName: \"IDS_ADDITIONALFILTER\",\r\n                skip:undefined\r\n            }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    // ALPD-4133 parentCallBack for Additional Filter ATE-241\r\n    parentCallBack = (data, filter) => {\r\n        this.setState({\r\n            filterSampleList: data,\r\n            kendoFilterList: filter\r\n        });\r\n    }\r\n\r\n    //  ALPD-4133 Additional Filter Change handler ATE-241\r\n    handleFilterChange = (event) => {\r\n\r\n        let masterData = this.props.Login.masterData || {};\r\n        masterData['kendoFilterList'] = event.filter;\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData,\r\n            }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    //  End of ALPD-4133 -ATE-241\r\n\r\n\r\n\r\n\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTHISTORY\":\r\n                this.setState({\r\n                    registrationTestHistoryDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                this.setState({\r\n                    historyDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState })\r\n    }\r\n    subSampledataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subSampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subSampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleCommentDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    RegistrationHistoryDataStateChange = (event) => {\r\n        switch (this.props.Login.screenName) {\r\n            case \"IDS_TESTHISTORY\":\r\n                this.setState({\r\n                    registrationTestHistoryDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEHISTORY\":\r\n                this.setState({\r\n                    registrationSubSampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_SAMPLEHISTORY\":\r\n                this.setState({\r\n                    registrationSampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let { realFromDate, realToDate, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let ok = true;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.operation === 'enforce') {\r\n            inputData[\"enforcestatus\"] = {\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                ngradecode: this.props.Login.masterData.GradeValue.value || -1,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue\r\n                    ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                        || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0')\r\n                        ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\",\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\r\n                ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\r\n                senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\r\n                selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\r\n\r\n                // ALPD-1413\r\n                // ntransactionstatus: this.props.Login.masterData.FilterStatusValue \r\n                // ? (this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined\r\n                // || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') \r\n                // ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\":\"-1\",\r\n                napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                npreregno: \"0\",\r\n                preregno: this.props.Login.masterData.APSelectedSample[0].npreregno,\r\n                // ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample[0].ntransactionsamplecode,\r\n                nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                ntype: 2,\r\n                //  checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                activeTestTab: this.props.Login.activeTestTab || \"\",\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n                enforcestatus: true,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            inputParam = {\r\n                methodUrl: \"EnforceStatus\",\r\n                classUrl: 'approval',\r\n                inputData: inputData,\r\n                masterData: this.props.Login.masterData,\r\n                postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                operation: \"update\"\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam);\r\n        }\r\n        else {\r\n            let approvalparameter = []\r\n            if (this.state.selectedRecord.approvalParameterEdit) {\r\n                Object.keys(this.state.selectedRecord.approvalParameterEdit).map((key) =>\r\n                    approvalparameter.push(\r\n                        {\r\n                            ntransactionresultcode: key,\r\n                            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\r\n                        }\r\n                    )\r\n                )\r\n                inputData[\"approvalparameter\"] = approvalparameter\r\n                inputParam = {\r\n                    methodUrl: \"ApprovalParameter\",\r\n                    classUrl: 'approval',\r\n                    inputData: inputData,\r\n                    postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                    operation: \"update\"\r\n                }\r\n            } else {\r\n                ok = false;\r\n                this.handleClose()\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (this.props.Login.operation === 'enforce') {\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            openChildModal: true,\r\n                            operation: this.props.Login.operation,\r\n                            screenName: \"IDS_ENFORCESTATUS\",\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.updateEnforceStatus(inputParam, masterData, \"openChildModal\");\r\n                }\r\n            } else {\r\n\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            openChildModal: true,\r\n                            operation: this.props.Login.operation,\r\n                            screenName: \"IDS_ENFORCESTATUS\",\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let multiFilterLoad = this.props.Login.multiFilterLoad;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        let availableReleaseRecord = this.props.Login.availableReleaseRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord['esignpassword'] = \"\"\r\n            selectedRecord['esigncomments'] = \"\"\r\n            selectedRecord['esignreason'] = \"\"\r\n            availableReleaseRecord = undefined;\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {};\r\n            availableReleaseRecord = undefined;\r\n            multiFilterLoad = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, openChildModal, loadEsign, selectedRecord, templateData,\r\n                selectedParamId: null, operation, openTemplateModal, availableReleaseRecord, multiFilterLoad\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    //  ALPD-4133 Start of On Save handler of Additional Filter -ATE-241\r\n    onSaveMultiFilterClick = () => {\r\n        \r\n        const startDate = (this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date());\r\n        const endDate = (this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date());\r\n\r\n        let obj = convertDateValuetoString(startDate, endDate, this.props.Login.userInfo);\r\n\r\n        const fromDate = obj.fromDate;\r\n        const toDate = obj.toDate;\r\n        const searchedSample = this.state.filterSampleList ? sortDataForDate(this.state.filterSampleList, 'dtransactiondate', 'npreregno') : [];\r\n        const kendoFilterList = this.state.kendoFilterList || [];\r\n        const emptyFilterList = [];\r\n        if (kendoFilterList.filters && kendoFilterList.filters.length > 0) {\r\n            kendoFilterList.filters.map(item => {\r\n                if (item.value === \"\") {\r\n                    emptyFilterList.push(item);\r\n                }\r\n            });\r\n        }\r\n        if (emptyFilterList.length > 0) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_PROVIDEVALUESFORINPUTS\" }));\r\n        } else {\r\n            const selectedSample = [];\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (searchedSample.length === 0) {\r\n                let searchSampleRef = this.searchSampleRef;\r\n                searchSampleRef.current.value = \"\";\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            selectedSample: [],\r\n                            selectedSubSample: [],\r\n                            selectedTest: [],\r\n                            searchedSample: [],\r\n                            searchedSubSample: undefined,\r\n                            searchedTest: undefined,\r\n                            RegistrationAttachment: [],\r\n                            AP_SUBSAMPLE: [],\r\n                            AP_TEST: [],\r\n                            RegistrationTestComment: [],\r\n                            RegistrationParameter: [],\r\n                            RegistrationTestAttachment: [],\r\n                            RegistrationComment: [],\r\n                            RegistrationSampleAttachment: [],\r\n                            RegistrationSampleComment: [],\r\n\r\n                        },\r\n                        multiFilterLoad: false,\r\n                        openChildModal: false,\r\n                        searchSampleRef,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                selectedSample.push(searchedSample[0]);\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                    activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n                    activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                    activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                    screenName: this.props.Login.screenName,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                    sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                    nbatchmastercode: (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1,\r\n                    activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                    fromdate: fromDate,\r\n                    todate: toDate,\r\n                    testskip: 0,\r\n                    testtake: this.state.testtake,\r\n                    subSampleSkip: 0,\r\n                    subSampleTake: this.state.subSampleTake,\r\n                    skip:0,\r\n                    resultDataState: this.state.resultDataState,\r\n                    sampleChangeDataState: this.state.sampleChangeDataState,\r\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                    childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\", \"RegistrationComment\", \"ResultUsedTasks\", \"ResultUsedMaterial\",\r\n                                                            \"RegistrationSampleComment\", \"RegistrationSampleAttachment\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"],\r\n                    npreregno: selectedSample[0].npreregno && selectedSample[0].npreregno.toString(),\r\n                    removeElementFromArray: masterData.selectedSample,\r\n                    sample: selectedSample,\r\n                    APSelectedSample: selectedSample,\r\n                    searchSampleRef: this.searchSampleRef,\r\n                    masterData: { ...masterData, searchedSample, selectedSample, kendoFilterList: kendoFilterList },\r\n                    openChildModal: false,\r\n                    multiFilterLoad: false,\r\n                };\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         masterData:{...this.props.Login.masterData, searchedSample, selectedSample},\r\n                //         openModal: false, \r\n                //         multiFilterLoad : false,\r\n                //     }\r\n                // }\r\n                // this.props.updateStore(updateInfo);\r\n                this.props.getsubSampleDetail(inputData, true);\r\n            }\r\n        }\r\n    }\r\n    //  End of on Save handler of Additional Filter ALPD-4132 ATE-241\r\n\r\n\r\n\r\n    viewSample = (viewdetails) => {\r\n        this.props.ViewPatientDetails(this.props.Login.masterData, \"IDS_PREVIOUSRESULTVIEW\", this.props.Login.userInfo, viewdetails);\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision' || this.props.Login.operation === 'enforce') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        }\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    getActiveTestURL() {\r\n        let url = \"approval/getapprovalparameter\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"approval/getApprovalResultChangeHistory\"\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                url = \"approval/getApprovalHistory\"\r\n                break;\r\n\r\n            default:\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSampleComments(saveParam, acceptList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n                // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedSampleList.length > 0) {\r\n                inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCOAReport = (inputData, ncontrolCode) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            let inputParam = { reporparam: inputData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: \"reportgeneration\",\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        } else {\r\n\r\n            this.props.generateCOAReport(inputData);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList,\r\n    getSampleChildTabDetail, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    ViewPatientDetails,\r\n    generateCOAReport, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail, getTestBasedCompletedBatch, updateEnforceStatus, checkReleaseRecord, getTestResultCorrection, fetchParameterDetails\r\n})(injectIntl(Approval))"]},"metadata":{},"sourceType":"module"}