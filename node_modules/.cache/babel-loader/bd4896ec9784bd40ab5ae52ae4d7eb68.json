{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\PreRegisterRoutine.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { HeaderSpan, TreeDesign } from './registration.styled';\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport './registration.css';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nclass PreRegisterRoutine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTestItem: [],\n      selectedSourceItem: [],\n      selectedTest: []\n    };\n  }\n\n  render() {\n    const testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      width: \"200px\"\n    }, {\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"ssectionname\",\n      width: \"150px\"\n    }, // { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"100px\" },\n    {\n      \"idsName\": \"IDS_METHOD\",\n      \"dataField\": \"smethodname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n      \"dataField\": \"sinstrumentcatname\",\n      width: \"150px\"\n    }];\n    const {\n      ProductCategory,\n      Product,\n      Manufacturer,\n      Specification,\n      Client,\n      AgaramTree,\n      OpenNodes,\n      FocusKey,\n      ActiveKey,\n      Supplier,\n      ContainerType,\n      StorageCondition,\n      Disposition,\n      Unit,\n      Priority,\n      Period,\n      timezone,\n      selectedTest\n    } = this.props;\n    const diableAllStatus = this.props.statustoEditDetail && this.props.statustoEditDetail.napprovalstatuscode;\n    const recordStatus = this.props.selectedRecord && this.props.selectedRecord.ntransactionstatus;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CLIENTNAME\"\n      }),\n      isSearchable: true,\n      isDisabled: diableAllStatus === recordStatus,\n      name: \"nclientcode\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: Client,\n      alphabeticalSort: \"true\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onClientComboChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLEDCATEGORY\"\n      }),\n      isSearchable: true,\n      name: \"nproductcatcode\",\n      isDisabled: this.props.operation === 'update' ? true : false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: ProductCategory,\n      alphabeticalSort: \"true\",\n      optionId: \"nproductcatcode\",\n      optionValue: \"sproductcatname\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onproductCategoryChange(event, 'nproductcatcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      isSearchable: true,\n      name: \"nproductcode\",\n      isDisabled: this.props.operation === 'update' ? true : false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: Product,\n      alphabeticalSort: \"true\",\n      optionId: \"nproductcode\",\n      optionValue: \"sproductname\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onProductChange(event, 'nproductcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"r_treepadding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TreeDesign, {\n      operation: this.props.operation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, AgaramTree && AgaramTree.length > 0 && /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormTreeMenu, {\n      data: AgaramTree,\n      handleTreeClick: this.props.onTreeClick // openNodes={OpenNodes}\n      ,\n      hasSearch: false,\n      initialOpenNodes: OpenNodes // initialFocusKey={InitialFocusKey}\n      // initialActiveKey={InitialActiveKey}\n      ,\n      focusKey: FocusKey || \"\",\n      activeKey: ActiveKey || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SPECIFICATION\"\n      }),\n      isSearchable: true,\n      name: \"nallottedspeccode\",\n      isDisabled: this.props.operation === 'update' ? true : false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: Specification,\n      alphabeticalSort: \"true\",\n      optionId: \"nallottedspeccode\",\n      optionValue: \"sspecname\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onspecChange(event, ['nallottedspeccode', 'sversionno']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_VERSION\"\n      }),\n      name: \"sversion\",\n      type: \"text\",\n      maxLength: \"100\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sversion\"] || \"\" : \"\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_VERSION\"\n      }),\n      isDisabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_MANUFACTURER\"\n      }),\n      isSearchable: true,\n      name: \"nmanufcode\",\n      isDisabled: diableAllStatus === recordStatus,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: Manufacturer,\n      alphabeticalSort: \"true\",\n      optionId: \"nmanufcode\",\n      optionValue: \"smanufname\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nmanufcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nmanufcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'nmanufcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SUPPLIER\"\n      }),\n      isSearchable: true,\n      name: \"nsuppliercode\",\n      isDisabled: diableAllStatus === recordStatus,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: Supplier,\n      alphabeticalSort: \"true\",\n      optionId: \"nsuppliercode\",\n      optionValue: \"ssuppliername\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nsuppliercode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nsuppliercode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'nsuppliercode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLECONDITION\"\n      }),\n      name: \"ssamplecondition\",\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLECONDITION\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ssamplecondition\"] : \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      row: 2,\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_STORAGECONDITION\"\n      }),\n      isSearchable: true,\n      isClearable: true,\n      name: \"nstorageconditioncode\",\n      isDisabled: diableAllStatus === recordStatus,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      options: StorageCondition,\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nstorageconditioncode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nstorageconditioncode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'nstorageconditioncode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"dreceiveddate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_RECEIVEDDATE\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_SELECTDATE\"\n      }),\n      selected: this.props.selectedRecord ? this.props.selectedRecord[\"dreceiveddate\"] : new Date(),\n      dateFormat: this.props.userInfo[\"ssitedatetime\"],\n      timeInputLabel: this.props.intl.formatMessage({\n        id: \"IDS_RECEIVEDDATE\"\n      }),\n      showTimeInput: true,\n      isClearable: false,\n      isMandatory: true,\n      required: true,\n      isDisabled: diableAllStatus === recordStatus,\n      maxDate: this.props.CurrentTime,\n      maxTime: this.props.CurrentTime,\n      onChange: date => this.props.handleDateChange(\"dreceiveddate\", date),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"dreceiveddate\"] : new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ntzdreceivedate\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TIMEZONE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: timezone,\n      optionId: \"ntimezonecode\",\n      optionValue: \"stimezoneid\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ntzdreceivedate\"] : [],\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"ntzdreceivedate\"] : [],\n      isMandatory: true,\n      isSearchable: true,\n      isClearable: false,\n      closeMenuOnSelect: true,\n      alphabeticalSort: true,\n      isDisabled: diableAllStatus === recordStatus,\n      onChange: value => this.props.onComboChange(value, 'ntzdreceivedate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONTAINERTYPE\"\n      }),\n      isSearchable: true,\n      name: \"ncontainertypecode\",\n      isDisabled: diableAllStatus === recordStatus,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: ContainerType,\n      alphabeticalSort: \"true\",\n      optionId: \"ncontainertypecode\",\n      optionValue: \"ssuppliername\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ncontainertypecode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"ncontainertypecode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'ncontainertypecode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sourfile\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_OURFILECODE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_OURFILECODE\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sourfile\"] : \"\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: false,\n      onChange: event => this.props.onInputOnChange(event),\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sbatchno\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_BATCHNO\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_BATCHNO\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sbatchno\"] : \"\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: false,\n      onChange: event => this.props.onInputOnChange(event),\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"slotno\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_LOTNO\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_LOTNO\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"slotno\"] : \"\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: false,\n      onChange: event => this.props.onInputOnChange(event),\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_DISPOSITION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isSearchable: true,\n      name: \"ndisposition\",\n      isDisabled: diableAllStatus === recordStatus,\n      isMandatory: true,\n      options: Disposition,\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ndisposition\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"ndisposition\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'ndisposition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TOTALQUANTITY\"\n      }),\n      name: \"stotalqty\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_TOTALQUANTITY\"\n      }),\n      type: \"number\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"stotalqty\"] : \"\",\n      min: 0,\n      strict: true,\n      maxLength: 8,\n      onChange: event => this.props.onNumericInputChange(event, \"stotalqty\"),\n      noStyle: true,\n      precision: 2,\n      className: \"form-control\",\n      isMandatory: true,\n      errors: \"Please provide a valid number.\",\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_UNIT\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isSearchable: true,\n      name: \"ntotalunitcode\",\n      isDisabled: diableAllStatus === recordStatus,\n      isMandatory: true,\n      options: Unit,\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"ntotalunitcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"ntotalunitcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'ntotalunitcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_PRIORITY\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isSearchable: true,\n      name: \"npriority\",\n      isDisabled: diableAllStatus === recordStatus,\n      isMandatory: true,\n      options: Priority,\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"npriority\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"npriority\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'npriority'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DEADLINE\"\n      }),\n      name: \"sdeadline\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_DEADLINE\"\n      }),\n      type: \"number\",\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sdeadline\"] : \"\",\n      min: 0,\n      strict: true,\n      maxLength: 8,\n      onChange: event => this.props.onNumericInputChange(event, \"sdeadline\"),\n      noStyle: true,\n      precision: 0,\n      className: \"form-control\",\n      isMandatory: false,\n      errors: \"Please provide a valid number.\",\n      isDisabled: diableAllStatus === recordStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_PERIOD\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isSearchable: true,\n      isClearable: true,\n      name: \"nperiodconfigcode\",\n      isDisabled: diableAllStatus === recordStatus,\n      isMandatory: false,\n      options: Period,\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nperiodconfigcode\"] : \"\",\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nperiodconfigcode\"] : \"\",\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'nperiodconfigcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_REMARKS\"\n      }),\n      name: \"sremarks\",\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REMARKS\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sremarks\"] : \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      row: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_REPORTREMARKS\"\n      }),\n      name: \"sreportremarks\",\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REPORTREMARKS\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sreportremarks\"] : \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      row: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DEVIATIONCOMMENTS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_DEVIATIONCOMMENTS\"\n      }),\n      name: \"sdeviationcomments\",\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sdeviationcomments\"] : \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      row: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 33\n      }\n    }))))), this.props.operation === 'create' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addComponentTest(this.props.selectedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"ntestgrouptestcode\",\n      primaryKeyField: \"ntestgrouptestcode\",\n      selectedId: this.state.selectedTestItem.ntestgrouptestcode // data={selectedTest}\n      ,\n      dataResult: process(selectedTest || [], this.props.popUptestDataState || {\n        skip: 0,\n        take: 10\n      }),\n      dataState: this.props.popUptestDataState || {\n        skip: 0,\n        take: 10\n      },\n      dataStateChange: this.props.testdataStateChange,\n      extractedColumnList: testColumnList,\n      controlMap: new Map(),\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true // handleRowClick={this.handleRowClick}\n      ,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      deleteRecordWORights: this.props.deleteTest,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 25\n      }\n    }))) : \"\");\n  }\n\n}\n\nexport default injectIntl(PreRegisterRoutine);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/PreRegisterRoutine.jsx"],"names":["React","Component","Row","Col","Nav","FormSelectSearch","FormInput","HeaderSpan","TreeDesign","FormTreeMenu","PerfectScrollbar","FormattedMessage","injectIntl","DateTimePicker","FormTextarea","FormNumericInput","FontAwesomeIcon","faPlus","DataGrid","process","PreRegisterRoutine","constructor","props","state","selectedTestItem","selectedSourceItem","selectedTest","render","testColumnList","width","ProductCategory","Product","Manufacturer","Specification","Client","AgaramTree","OpenNodes","FocusKey","ActiveKey","Supplier","ContainerType","StorageCondition","Disposition","Unit","Priority","Period","timezone","diableAllStatus","statustoEditDetail","napprovalstatuscode","recordStatus","selectedRecord","ntransactionstatus","intl","formatMessage","id","event","onClientComboChange","operation","onproductCategoryChange","onProductChange","length","onTreeClick","onspecChange","onComboChange","onInputOnChange","Date","userInfo","CurrentTime","date","handleDateChange","value","onNumericInputChange","addComponentTest","selectedComponent","ntestgrouptestcode","popUptestDataState","skip","take","testdataStateChange","Map","userRoleControlRights","inputParam","deleteTest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { HeaderSpan, TreeDesign } from './registration.styled';\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport './registration.css'\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nclass PreRegisterRoutine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTestItem: [],\r\n            selectedSourceItem: [],\r\n            selectedTest: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            // { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"100px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"150px\" }]\r\n        const { ProductCategory, Product, Manufacturer, Specification, Client, AgaramTree, OpenNodes, FocusKey, ActiveKey,\r\n            Supplier, ContainerType, StorageCondition, Disposition, Unit, Priority, Period, timezone ,selectedTest} = this.props;\r\n        const diableAllStatus = this.props.statustoEditDetail && this.props.statustoEditDetail.napprovalstatuscode;\r\n        const recordStatus = this.props.selectedRecord && this.props.selectedRecord.ntransactionstatus;\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {/* Client */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                                    isSearchable={true}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    name={\"nclientcode\"}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={Client}\r\n                                    alphabeticalSort=\"true\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onClientComboChange(event)}>\r\n                                </FormSelectSearch>\r\n\r\n                                {/* Product Category */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLEDCATEGORY\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nproductcatcode\"}\r\n                                    isDisabled={this.props.operation === 'update' ? true : false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={ProductCategory}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nproductcatcode\"\r\n                                    optionValue=\"sproductcatname\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onproductCategoryChange(event, 'nproductcatcode')}>\r\n                                </FormSelectSearch>\r\n\r\n                                {/* Product */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nproductcode\"}\r\n                                    isDisabled={this.props.operation === 'update' ? true : false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={Product}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nproductcode\"\r\n                                    optionValue=\"sproductname\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onProductChange(event, 'nproductcode')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n\r\n                            {/* Spec Tree */}\r\n                            <Col md={12} className=\"r_treepadding\" >\r\n                                <TreeDesign operation={this.props.operation}>\r\n\r\n                                    {AgaramTree && AgaramTree.length > 0 &&\r\n                                        <PerfectScrollbar>\r\n                                            <FormTreeMenu\r\n                                                data={AgaramTree}\r\n                                                handleTreeClick={this.props.onTreeClick}\r\n                                                // openNodes={OpenNodes}\r\n                                                hasSearch={false}\r\n                                                initialOpenNodes={OpenNodes}\r\n                                                // initialFocusKey={InitialFocusKey}\r\n                                                // initialActiveKey={InitialActiveKey}\r\n                                                focusKey={FocusKey || \"\"}\r\n                                                activeKey={ActiveKey || \"\"}\r\n                                            />\r\n                                        </PerfectScrollbar>\r\n\r\n                                    }\r\n\r\n                                </TreeDesign>\r\n                            </Col>\r\n\r\n                            {/* Spec */}\r\n                            <Col md={6}>\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nallottedspeccode\"}\r\n                                    isDisabled={this.props.operation === 'update' ? true : false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={Specification}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nallottedspeccode\"\r\n                                    optionValue=\"sspecname\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onspecChange(event, ['nallottedspeccode', 'sversionno'])}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n\r\n                            {/* Spec Version */}\r\n                            <Col md={6}>\r\n                                <FormInput\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                    name=\"sversion\"\r\n                                    type=\"text\"\r\n                                    maxLength=\"100\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sversion\"] || \"\" : \"\"}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                    isDisabled={true}\r\n                                />\r\n                            </Col>\r\n                            <Col md={12}>\r\n\r\n                                {/* Manufacturer */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_MANUFACTURER\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nmanufcode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    isClearable={true}\r\n                                    options={Manufacturer}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nmanufcode\"\r\n                                    optionValue=\"smanufname\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nmanufcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nmanufcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nmanufcode')}>\r\n                                </FormSelectSearch>\r\n\r\n                                {/* Supplier */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SUPPLIER\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nsuppliercode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    isClearable={true}\r\n                                    options={Supplier}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nsuppliercode\"\r\n                                    optionValue=\"ssuppliername\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nsuppliercode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nsuppliercode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nsuppliercode')}>\r\n                                </FormSelectSearch>\r\n                                {/* Sample Condition */}\r\n                                <FormTextarea\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SAMPLECONDITION\" })}\r\n                                    name=\"ssamplecondition\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLECONDITION\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"ssamplecondition\"] : \"\"}\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    maxLength={255}\r\n                                    row={2}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n\r\n                                {/* Storage Condition */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_STORAGECONDITION\" })}\r\n                                    isSearchable={true}\r\n                                    isClearable={true}\r\n                                    name={\"nstorageconditioncode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    options={StorageCondition}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nstorageconditioncode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nstorageconditioncode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nstorageconditioncode')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                {/* Recieved Date */}\r\n                                <DateTimePicker\r\n                                    name={\"dreceiveddate\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\r\n                                    className='form-control'\r\n                                    placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                    selected={this.props.selectedRecord ? this.props.selectedRecord[\"dreceiveddate\"] : new Date()}\r\n                                    dateFormat={this.props.userInfo[\"ssitedatetime\"]}\r\n                                    timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\r\n                                    showTimeInput={true}\r\n                                    isClearable={false}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    maxDate={this.props.CurrentTime}\r\n                                    maxTime={this.props.CurrentTime}\r\n                                    onChange={date => this.props.handleDateChange(\"dreceiveddate\", date)}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"dreceiveddate\"] : new Date()}\r\n                                />\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormSelectSearch\r\n                                    name={\"ntzdreceivedate\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    options={timezone}\r\n                                    optionId=\"ntimezonecode\"\r\n                                    optionValue=\"stimezoneid\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"ntzdreceivedate\"] : []}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"ntzdreceivedate\"] : []}\r\n                                    isMandatory={true}\r\n                                    isSearchable={true}\r\n                                    isClearable={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    onChange={(value) => this.props.onComboChange(value, 'ntzdreceivedate')}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col md={12}>\r\n                                {/* Container */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_CONTAINERTYPE\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"ncontainertypecode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    isClearable={true}\r\n                                    options={ContainerType}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"ncontainertypecode\"\r\n                                    optionValue=\"ssuppliername\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"ncontainertypecode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"ncontainertypecode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'ncontainertypecode')}>\r\n                                </FormSelectSearch>\r\n\r\n                                {/* OUR File Code*/}\r\n                                <FormInput\r\n                                    name=\"sourfile\"\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_OURFILECODE\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_OURFILECODE\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sourfile\"] : \"\"}\r\n                                    type=\"text\"\r\n                                    maxLength=\"100\"\r\n                                    isMandatory={false}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n\r\n                                {/* OUR File Code*/}\r\n                                <FormInput\r\n                                    name=\"sbatchno\"\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_BATCHNO\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_BATCHNO\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sbatchno\"] : \"\"}\r\n                                    type=\"text\"\r\n                                    maxLength=\"100\"\r\n                                    isMandatory={false}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n\r\n                                {/* OUR File Code*/}\r\n                                <FormInput\r\n                                    name=\"slotno\"\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_LOTNO\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_LOTNO\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"slotno\"] : \"\"}\r\n                                    type=\"text\"\r\n                                    maxLength=\"100\"\r\n                                    isMandatory={false}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n\r\n                                {/* Disposition */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_DISPOSITION\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"ndisposition\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    isMandatory={true}\r\n                                    options={Disposition}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"ndisposition\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"ndisposition\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'ndisposition')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_TOTALQUANTITY\" })}\r\n                                    name=\"stotalqty\"\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_TOTALQUANTITY\" })}\r\n                                    type=\"number\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"stotalqty\"] : \"\"}\r\n                                    min={0}\r\n                                    strict={true}\r\n                                    maxLength={8}\r\n                                    onChange={(event) => this.props.onNumericInputChange(event, \"stotalqty\")}\r\n                                    noStyle={true}\r\n                                    precision={2}\r\n                                    className=\"form-control\"\r\n                                    isMandatory={true}\r\n                                    errors=\"Please provide a valid number.\"\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                {/* Disposition */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"ntotalunitcode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    isMandatory={true}\r\n                                    options={Unit}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"ntotalunitcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"ntotalunitcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'ntotalunitcode')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                {/* Disposition */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_PRIORITY\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"npriority\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    isMandatory={true}\r\n                                    options={Priority}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"npriority\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"npriority\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'npriority')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormNumericInput\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_DEADLINE\" })}\r\n                                    name=\"sdeadline\"\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_DEADLINE\" })}\r\n                                    type=\"number\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sdeadline\"] : \"\"}\r\n                                    min={0}\r\n                                    strict={true}\r\n                                    maxLength={8}\r\n                                    onChange={(event) => this.props.onNumericInputChange(event, \"sdeadline\")}\r\n                                    noStyle={true}\r\n                                    precision={0}\r\n                                    className=\"form-control\"\r\n                                    isMandatory={false}\r\n                                    errors=\"Please provide a valid number.\"\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                />\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                {/* Disposition */}\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isSearchable={true}\r\n                                    isClearable={true}\r\n                                    name={\"nperiodconfigcode\"}\r\n                                    isDisabled={diableAllStatus === recordStatus}\r\n                                    isMandatory={false}\r\n                                    options={Period}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nperiodconfigcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nperiodconfigcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nperiodconfigcode')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                {/* Remarks */}\r\n                                <FormTextarea\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                    name=\"sremarks\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sremarks\"] : \"\"}\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    maxLength={255}\r\n                                    row={2}\r\n                                />\r\n                                {/* Report Remarks */}\r\n                                <FormTextarea\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_REPORTREMARKS\" })}\r\n                                    name=\"sreportremarks\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_REPORTREMARKS\" })}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sreportremarks\"] : \"\"}\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    maxLength={255}\r\n                                    row={2}\r\n                                />\r\n                                {/* Deviation Comments */}\r\n                                <FormTextarea\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                                    name=\"sdeviationcomments\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"sdeviationcomments\"] : \"\"}\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    maxLength={255}\r\n                                    row={2}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.operation === 'create' ? \r\n                <Row>\r\n                    <Col md={12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addComponentTest(this.props.selectedComponent)} >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <DataGrid\r\n                            key=\"ntestgrouptestcode\"\r\n                            primaryKeyField=\"ntestgrouptestcode\"\r\n                            selectedId={this.state.selectedTestItem.ntestgrouptestcode}\r\n                            // data={selectedTest}\r\n                            dataResult={process(selectedTest || [], this.props.popUptestDataState||{skip:0,take:10})}\r\n                            dataState={this.props.popUptestDataState||{skip:0,take:10}}\r\n                            dataStateChange={this.props.testdataStateChange}\r\n                            extractedColumnList={testColumnList}\r\n                            controlMap={new Map()}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            // handleRowClick={this.handleRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"400px\"}\r\n                            deleteRecordWORights={this.props.deleteTest}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={false}\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n                </Row>\r\n                :\"\"}\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(PreRegisterRoutine);"]},"metadata":{},"sourceType":"module"}