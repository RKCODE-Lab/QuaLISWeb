{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddModuleSorting.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddModuleSorting = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nformcode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FORMNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.formMapList || [],\n    value: props.selectedRecord.nformcode.label,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nmodulecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MODULENAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.moduleMapList || [],\n    value: props.selectedRecord ? props.selectedRecord[\"nmodulecode\"] : \"\",\n    isMandatory: true,\n    required: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"nmodulecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default injectIntl(AddModuleSorting);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/credentialmanagement/AddModuleSorting.jsx"],"names":["React","Row","Col","FormInput","FormSelectSearch","injectIntl","AddModuleSorting","props","intl","formatMessage","id","formMapList","selectedRecord","nformcode","label","moduleMapList","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAAQC,UAAR,QAA0B,YAA1B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,sBACM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,SAAD;AACI,IAAA,IAAI,EAAE,WADV;AAEI,IAAA,KAAK,EAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHjB;AAII,IAAA,OAAO,EAAGH,KAAK,CAACI,WAAN,IAAqB,EAJnC;AAKI,IAAA,KAAK,EAAKJ,KAAK,CAACK,cAAN,CAAqBC,SAArB,CAA+BC,KAL7C;AAMI,IAAA,QAAQ,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADJ,eAWE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AACgB,IAAA,IAAI,EAAE,aADtB;AAEgB,IAAA,SAAS,EAAGP,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAF5B;AAGgB,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAH7B;AAIgB,IAAA,OAAO,EAAGH,KAAK,CAACQ,aAAN,IAAuB,EAJjD;AAKgB,IAAA,KAAK,EAAKR,KAAK,CAACK,cAAN,GAAuBL,KAAK,CAACK,cAAN,CAAqB,aAArB,CAAvB,GAA2D,EALrF;AAMgB,IAAA,WAAW,EAAE,IAN7B;AAOgB,IAAA,QAAQ,EAAE,IAP1B;AAQgB,IAAA,OAAO,EAAE,KARzB;AASgB,IAAA,YAAY,EAAE,IAT9B;AAUgB,IAAA,UAAU,EAAE,KAV5B;AAWgB,IAAA,iBAAiB,EAAE,IAXnC;AAYgB,IAAA,QAAQ,EAAKI,KAAD,IAAUT,KAAK,CAACU,aAAN,CAAoBD,KAApB,EAA2B,aAA3B,CAZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAXF,CADN;AA8BH,CA/BD;;AAgCA,eAAeX,UAAU,CAACC,gBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {injectIntl } from 'react-intl';\r\n\r\nconst AddModuleSorting = (props) => {\r\n    return(\r\n          <Row>    \r\n              <Col md={12}>\r\n                    <FormInput\r\n                        name={\"nformcode\"}\r\n                        label={ props.intl.formatMessage({ id:\"IDS_FORMNAME\"})}                              \r\n                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                            \r\n                        options={ props.formMapList || []}\r\n                        value = { props.selectedRecord.nformcode.label }\r\n                        readOnly={true}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                            name={\"nmodulecode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_MODULENAME\"})}                              \r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                            options={ props.moduleMapList || []}\r\n                            value = { props.selectedRecord ? props.selectedRecord[\"nmodulecode\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}                                \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {(event)=> props.onComboChange(event, \"nmodulecode\")}                               \r\n                    />\r\n            </Col>\r\n         </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddModuleSorting);"]},"metadata":{},"sourceType":"module"}