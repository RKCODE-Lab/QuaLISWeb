{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\FormModuleSortingConfig.jsx\";\nimport { connect } from 'react-redux';\nimport * as React from 'react';\nimport { Sortable } from \"@progress/kendo-react-sortable\";\nimport { updateStore } from '../../actions';\nimport { formSortingService1, moduleSortingOrder1 } from '../../actions';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nconst NestedSortableUI = props => {\n  const {\n    style,\n    attributes,\n    dataItem,\n    forwardRef,\n    isActive\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: forwardRef\n  }, attributes, {\n    style: { ...style,\n      border: isActive ? \"2px dashed black\" : 0,\n      paddingTop: 1,\n      paddingBottom: 1,\n      paddingLeft: 1,\n      paddingRight: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"rgba(6, 83, 248, 0.918)\",\n      color: \"white\",\n      height: 30,\n      border: \"1px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, dataItem.sformname));\n};\n\nclass SortableItemUI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = event => {\n      let changedSorter = event.newState;\n      let beforeSorter = this.state.colors;\n      let afterSorting = [];\n      beforeSorter.map((item, index) => {\n        return changedSorter.map((item1, index1) => {\n          if (index == index1) {\n            afterSorting[index] = {\n              nsorter: item.nsorter,\n              sformname: item1.sformname\n            };\n          }\n        });\n      });\n      this.setState({\n        colors: afterSorting\n      });\n      this.props.Login.boolValue !== 2 ? this.props.formSortingService1({\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          primarykey: this.props.dataItem.data[0].nmenucode,\n          nmodulecode: this.props.dataItem.data[0].nmodulecode,\n          changedValues: afterSorting\n        },\n        masterData: this.props.masterData,\n        url: \"sorting/updateForms\"\n      }) : this.props.moduleSortingOrder1({\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          primarykey: this.props.dataItem.data[0].nmenucode,\n          changedValues: afterSorting\n        },\n        masterData: this.props.masterData,\n        url: \"sorting/updateModules\"\n      });\n    };\n\n    this.onNavigate = event => {\n      this.setState({\n        colors: event.newState\n      });\n    };\n\n    this.props.Login.boolValue !== 2 ? this.state = {\n      colors: this.props.dataItem.data.map(item => ({\n        nsorter: item.nsorter,\n        sformname: item.sdisplayname\n      }))\n    } : this.state = {\n      colors: this.props.dataItem.data.map(item => ({\n        nsorter: item.nsorter,\n        sformname: item.sdisplayname\n      }))\n    };\n  }\n\n  render() {\n    const {\n      style,\n      attributes,\n      dataItem,\n      forwardRef\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: forwardRef\n    }, attributes, {\n      style: { ...style,\n        float: \"left\",\n        display: \"inline-block\",\n        width: 350,\n        backgroundColor: \"#FFF\",\n        marginTop: 50,\n        marginLeft: 210,\n        marginRight: -188,\n        marginBottom: 20,\n        border: \"1px solid black\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }), dataItem.name, /*#__PURE__*/React.createElement(Sortable, {\n      idField: \"sformname\",\n      data: this.state.colors,\n      itemUI: NestedSortableUI,\n      onNavigate: this.onNavigate,\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (previousProps.dataItem.name !== this.props.dataItem.name) {\n      this.props.Login.boolValue !== 2 ? this.setState({\n        colors: this.props.dataItem.data && this.props.dataItem.data.map(item => ({\n          nsorter: item.nsorter,\n          sformname: item.sdisplayname\n        }))\n      }) : this.setState({\n        colors: this.props.dataItem.data.map(item => ({\n          nsorter: item.nsorter,\n          sformname: item.sdisplayname\n        }))\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  formSortingService1,\n  moduleSortingOrder1\n})(SortableItemUI);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/FormModuleSortingConfig.jsx"],"names":["connect","React","Sortable","updateStore","formSortingService1","moduleSortingOrder1","mapStateToProps","state","Login","NestedSortableUI","props","style","attributes","dataItem","forwardRef","isActive","border","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","color","height","sformname","SortableItemUI","Component","constructor","onDragEnd","event","changedSorter","newState","beforeSorter","colors","afterSorting","map","item","index","item1","index1","nsorter","setState","boolValue","inputData","userinfo","userInfo","primarykey","data","nmenucode","nmodulecode","changedValues","masterData","url","onNavigate","sdisplayname","render","float","display","width","marginTop","marginLeft","marginRight","marginBottom","textAlign","name","componentDidUpdate","previousProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\nimport * as React from 'react';\r\nimport { Sortable } from \"@progress/kendo-react-sortable\";\r\nimport { updateStore } from '../../actions';\r\nimport { formSortingService1, moduleSortingOrder1 } from '../../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return ({ Login: state.Login })\r\n}\r\nconst NestedSortableUI = (props) => {\r\n  const { style, attributes, dataItem, forwardRef, isActive } = props;\r\n  return (\r\n    <div\r\n      ref={forwardRef}\r\n      {...attributes}\r\n      style={{\r\n        ...style,\r\n        border: isActive ? \"2px dashed black\" : 0,\r\n        paddingTop: 1,\r\n        paddingBottom: 1,\r\n        paddingLeft: 1,\r\n        paddingRight: 1,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgba(6, 83, 248, 0.918)\",\r\n          color: \"white\",\r\n          height: 30,\r\n          border: \"1px solid black\",\r\n        }}\r\n      >\r\n        {dataItem.sformname}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nclass SortableItemUI extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.props.Login.boolValue !== 2 ?\r\n    this.state = {\r\n      colors: this.props.dataItem.data.map((item) => ({\r\n        nsorter: item.nsorter,\r\n        sformname: item.sdisplayname,\r\n      })),\r\n    } :\r\n    this.state = {\r\n      colors: this.props.dataItem.data.map((item) => ({\r\n        nsorter: item.nsorter,\r\n        sformname: item.sdisplayname,\r\n      })),\r\n    }\r\n  }\r\n\r\nonDragEnd = (event) => {\r\n  let changedSorter = event.newState;\r\n  let beforeSorter = this.state.colors;\r\n\r\nlet afterSorting = [];\r\nbeforeSorter.map((item, index)=>{\r\nreturn(\r\n  changedSorter.map((item1, index1)=>{\r\n    if(index==index1){\r\n      afterSorting[index]={\r\n        nsorter: item.nsorter,\r\n        sformname: item1.sformname\r\n      }\r\n    }      \r\n    }\r\n    ))\r\n  })\r\n\r\n    this.setState({colors: afterSorting,});\r\n    this.props.Login.boolValue !== 2 ?\r\n     this.props.formSortingService1({\r\n       inputData: {\r\n          userinfo: this.props.Login.userInfo,\r\n          primarykey: this.props.dataItem.data[0].nmenucode,\r\n          nmodulecode: this.props.dataItem.data[0].nmodulecode,\r\n          changedValues : afterSorting\r\n      },\r\n      masterData: this.props.masterData,\r\n      url: \"sorting/updateForms\"\r\n  }) :\r\n  this.props.moduleSortingOrder1({\r\n    inputData: {\r\n       userinfo: this.props.Login.userInfo,\r\n       primarykey: this.props.dataItem.data[0].nmenucode,\r\n      changedValues : afterSorting\r\n   },\r\n   masterData: this.props.masterData,\r\n   url: \"sorting/updateModules\"\r\n});\r\n   }\r\n\r\n  \r\n  onNavigate = (event) => {\r\n    this.setState({\r\n      colors: event.newState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { style, attributes, dataItem, forwardRef } = this.props;\r\n    return (\r\n      <div\r\n        ref={forwardRef}\r\n        {...attributes}\r\n        style={{\r\n                ...style,\r\n                float: \"left\",\r\n                display: \"inline-block\",\r\n                width: 350,\r\n                backgroundColor: \"#FFF\",\r\n                marginTop: 50,\r\n                marginLeft:210,\r\n                marginRight:-188,\r\n                marginBottom:20,\r\n                border: \"1px solid black\",\r\n                textAlign: \"center\"\r\n        }}\r\n      >\r\n        {dataItem.name}\r\n      <Sortable\r\n      idField={\"sformname\"}\r\n      data={this.state.colors}\r\n      itemUI={NestedSortableUI}\r\n      onNavigate={this.onNavigate}\r\n      onDragEnd={this.onDragEnd}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(previousProps){\r\n    if(previousProps.dataItem.name !== this.props.dataItem.name)\r\n    {\r\n      this.props.Login.boolValue !== 2 ?\r\n      this.setState({\r\n        colors: this.props.dataItem.data && this.props.dataItem.data.map((item) => ({\r\n          nsorter: item.nsorter,\r\n          sformname: item.sdisplayname,\r\n        })), \r\n      }) :\r\n      this.setState({\r\n        colors: this.props.dataItem.data.map((item) => ({\r\n          nsorter: item.nsorter,\r\n          sformname: item.sdisplayname,\r\n        })), \r\n      }) \r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateStore, formSortingService1, moduleSortingOrder1})(SortableItemUI);"]},"metadata":{},"sourceType":"module"}