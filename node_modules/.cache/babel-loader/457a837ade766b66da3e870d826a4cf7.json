{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import{toast}from'react-toastify';import React from'react';import rsapi from'../rsapi';import{constructOptionList,sortData,reArrangeArrays}from'../components/CommonScript';import Axios from'axios';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from\"./LoginAction\";import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getSectionAndTest(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedInsCat!==null){var urlArray=[];var Section=rsapi.post(\"worklist/getSectionAndTest\",{\"ncontrolCode\":ncontrolCode,\"userinfo\":userInfo,\"nregtypecode\":masterData.defaultRegTypeValue.nregtypecode,\"nregsubtypecode\":masterData.defaultRegSubTypeValue.nregsubtypecode});urlArray=[Section];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var SectionMap=constructOptionList(response[0].data||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,false);var Section=SectionMap.get(\"OptionList\");var selectedRecord={};var instrumentCategory=[];dispatch({type:DEFAULT_RETURN,payload:{Section:Section,Test:[],instrumentCategory:instrumentCategory,isOpen:true,selectedRecord:selectedRecord,operation:operation,screenName:screenName,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SECTIONNOTAVALIABLE\"}));}};}export function getWorklistSample(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolCode){return function(dispatch){var _rsapi$post;var urlArray=[];var InstrumentCategory=rsapi.post(\"/worklist/refreshGetForAddComponent\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,masterData.selectedWorklist[primaryKeyName]),_defineProperty(_rsapi$post,\"ntestcode\",masterData.selectedWorklist['ntestcode']),_defineProperty(_rsapi$post,\"ntransactionstatus\",masterData.defaultFilterStatusValue['ntransactionstatus']),_defineProperty(_rsapi$post,\"nsampletypecode\",masterData.selectedWorklist['nsampletypecode']),_defineProperty(_rsapi$post,\"nregtypecode\",masterData.selectedWorklist['nregtypecode']),_defineProperty(_rsapi$post,\"nregsubtypecode\",masterData.selectedWorklist['nregsubtypecode']),_defineProperty(_rsapi$post,\"napprovalconfigversioncode\",masterData.defaultApprovalVersionValue['napprovalconfigversioncode']),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_defineProperty(_rsapi$post,\"ncontrolCode\",ncontrolCode),_defineProperty(_rsapi$post,\"nsectioncode\",masterData.selectedWorklist['nsectioncode']),_rsapi$post));urlArray=[InstrumentCategory];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var expiryDate=undefined;var currentTime=undefined;dispatch({type:DEFAULT_RETURN,payload:{activeKey:\"IDS_WORKLISTSAMPLE\",addedComponentList:[],addComponentDataList:response[0].data||[],isOpen:true,operation:operation,screenName:screenName,openModal:true,ncontrolCode:ncontrolCode,loading:false,currentTime:currentTime,expiryDate:expiryDate}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getRegTypeWorklist(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getRegistrationTypeBySampleType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{defaultSampleTypeValue:inputData.defaultSampleTypeValue,realApprovalConfigVersionList:inputData.realApprovalConfigVersionList,realApprovalVersionValue:inputData.realApprovalVersionValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getWorklistDetail(Worklist,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"worklist/getWorklistSample\",{nworklistcode:Worklist.nworklistcode,ndesigntemplatemappingcode:masterData.ndesigntemplatemappingcode,userinfo:userInfo}).then(function(response){delete masterData['selectedWorklist'];masterData['selectedWorklist']={};masterData['selectedWorklist']=Worklist;masterData=_objectSpread(_objectSpread({},masterData),response.data);//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{activeKey:\"IDS_WORKLISTSAMPLE\",masterData:masterData,operation:null,modalName:undefined,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSectionbaseTest(inputParam,userInfo,masterData,addId){return function(dispatch){if(inputParam.SelectedInsCat!==null){var urlArray=[];var Section=rsapi.post(\"worklist/getSectionbaseTest\",{nsectionCode:inputParam.nsectioncode.value,\"userinfo\":userInfo,\"ncontrolCode\":addId,\"nregtypecode\":masterData.defaultRegTypeValue.nregtypecode,\"nregsubtypecode\":masterData.defaultRegSubTypeValue.nregsubtypecode});urlArray=[Section];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var TestMap=constructOptionList(response[0].data||[],\"ntestcode\",\"stestsynonym\",undefined,undefined,false);var Test=TestMap.get(\"OptionList\");var selectedRecord=_objectSpread({},inputParam);var instrumentCategory=[];//nsectioncode=inputParam.nsectioncode,\nmasterData=_objectSpread({},masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,Test:Test,instrumentCategory:instrumentCategory,isOpen:true,selectedRecord:selectedRecord,// operation: operation,\n//screenName: screenName,\n//openModal: true,\n//ncontrolCode: ncontrolCode,\nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"}));}};}export var getWorklistDetailFilter=function getWorklistDetailFilter(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getWorklistDetailFilter\",inputParam.inputData).then(function(response){delete inputParam.masterData['Worklist'];delete inputParam.masterData['WorklistSamples'];delete inputParam.masterData['WorklistHistory'];delete inputParam.masterData['selectedWorklist'];inputParam.masterData['Worklist']={};inputParam.masterData['WorklistSamples']={};inputParam.masterData['WorklistHistory']={};inputParam.masterData['selectedWorklist']={};inputParam.masterData['Worklist']=response.data.Worklist;inputParam.masterData['WorklistSamples']=response.data.WorklistSamples;inputParam.masterData['WorklistHistory']=response.data.WorklistHistory;inputParam.masterData['selectedWorklist']=response.data.selectedWorklist;var masterData=response.data;//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,dataState:undefined,activeKey:\"IDS_WORKLISTSAMPLE\",masterData:_objectSpread(_objectSpread({},inputParam.masterData),{},{defaultRegSubTypeValue:inputParam.masterData.RegSubTypeValue,FilterStatusValue:inputParam.masterData.defaultFilterStatusValue})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var onWorklistApproveClick=function onWorklistApproveClick(masterData,userInfo,ConfirmMessage,approvalId,operation){return function(dispatch){dispatch(initRequest(true));//   rsapi.post(\"worklist/updateWorklistDetail\", { \"worklist\": masterData.selectedWorklist, \"userinfo\": userInfo, \"ncontrolCode\": approvalId,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode }\nrsapi.post(\"worklist/prepareWorklist\",{\"worklist\":masterData.selectedWorklist,\"userinfo\":userInfo,\"ncontrolCode\":approvalId,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode}).then(function(response){var Worklist=[];Worklist=masterData.Worklist;Worklist.map(function(item,index){if(response.data[\"selectedWorklist\"].nworklistcode===item.nworklistcode){Worklist.splice(index,1);Worklist.splice(index,0,response.data[\"selectedWorklist\"]);}});masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{Worklist:Worklist});if(!(masterData.searchedData&&masterData.searchedData.length>0)){dispatch({type:DEFAULT_RETURN,activeKey:\"IDS_WORKLISTSAMPLE\",payload:{loading:false,loadEsign:false,dataState:undefined,openModal:false,openChildModal:false,masterData:_objectSpread({},masterData)}});}else{var searchedData=reArrangeArrays(masterData[\"searchedData\"],masterData.Worklist,\"nworklistcode\");rsapi.post(\"worklist/getWorklistSelectSample\",{\"nworklistcode\":searchedData.length>0?searchedData[0].nworklistcode:-1,\"userinfo\":userInfo,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode,\"nneedsampleandhistory\":transactionStatus.YES}).then(function(response){var responseData=response.data;responseData[\"searchedData\"]=searchedData;masterData=_objectSpread(_objectSpread({},masterData),responseData);dispatch({type:DEFAULT_RETURN,activeKey:\"IDS_WORKLISTSAMPLE\",payload:{loading:false,dataState:undefined,openModal:false,openChildModal:false,loadEsign:false,masterData:_objectSpread({},masterData)}});});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else if(error.response.status===417){ConfirmMessage.confirm(\"information\",\"Information!\",error.response.data,undefined,\"ok\",undefined,true,undefined);}else{toast.warn(intl.formatMessage({id:error.response.data}));}//toast.error(error.message);\n});};};export function getEditSectionAndTest(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedInsCat!==null){var urlArray=[];var Section=rsapi.post(\"worklist/getSectionAndTest\",{\"ncontrolCode\":ncontrolCode,\"userinfo\":userInfo});// const GetEditSetionAndTest={}\nif(operation===\"update\"){var _rsapi$post2;var GetEditSetionAndTest=rsapi.post(\"/worklistpreparation/getEditSectionAndTest\",(_rsapi$post2={},_defineProperty(_rsapi$post2,primaryKeyName,masterData.selectedWorklist[primaryKeyName]),_defineProperty(_rsapi$post2,\"userinfo\",userInfo),_rsapi$post2));var TestGet=rsapi.post(\"worklist/getSectionbaseTest\",{nsectionCode:masterData.selectedWorklist[\"nsectioncode\"],\"userinfo\":userInfo});urlArray=[Section,GetEditSetionAndTest,TestGet];}//urlArray = [Section,GetEditSetionAndTest];\ndispatch(initRequest(true));Axios.all(urlArray).then(function(response){var SectionMap=constructOptionList(response[0].data||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,false);var Section=SectionMap.get(\"OptionList\");var TestMap=constructOptionList(response[2].data||[],\"ntestcode\",\"stestsynonym\",undefined,undefined,false);var Test=TestMap.get(\"OptionList\");var selectedRecord={};var instrumentCategory=[];selectedRecord={\"nsectioncode\":{\"value\":response[1].data.nsectioncode,\"label\":response[1].data.ssectionname},\"ntestcode\":{\"value\":response[1].data.ntestcode,\"label\":response[1].data.stestsynonym}};dispatch({type:DEFAULT_RETURN,activeKey:\"IDS_WORKLISTSAMPLE\",payload:{masterData:_objectSpread({},masterData),Section:Section,Test:Test,instrumentCategory:instrumentCategory,isOpen:true,selectedRecord:selectedRecord,operation:operation,screenName:screenName,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"}));}};}export var createWorklistCreation=function createWorklistCreation(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/createWorklistCreation\",inputParam.inputData).then(function(response){delete inputParam.masterData['WorklistSamples'];inputParam.masterData['WorklistSamples']={};inputParam.masterData['WorklistSamples']=response.data.WorklistSamples;delete inputParam.masterData['WorklistHistory'];inputParam.masterData['WorklistHistory']={};inputParam.masterData['WorklistHistory']=response.data.WorklistHistory;var masterData=response.data;//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:false,dataState:undefined,addedComponentList:[],masterData:_objectSpread({},inputParam.masterData)}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});// toast.error(error.message);\nif(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getConfigVersionTestWise(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getApprovalConfigVersionByRegSubType\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{RegSubTypeValue:inputParam.masterData.RegSubTypeValue,RegistrationSubTypeList:inputParam.masterData.RegistrationSubTypeList,realApprovalConfigVersionList:inputParam.inputData.realApprovalConfigVersionList,realApprovalVersionValue:inputParam.inputData.realApprovalVersionValue//nneedsubsample:inputParam.masterData.realRegSubTypeValue.nneedsubsample\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function ViewSampleDetails(masterData,screenName,userInfo,viewdetails){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getSampleViewDetails\",{selectedRecord:masterData.selectedWorklist,PatientId:viewdetails[\"Patient Id\"],npreregno:viewdetails[\"npreregno\"],userinfo:userInfo}).then(function(response){//  masterData = {\n//     ...masterData,\n//     ...response.data\n// }\nmasterData['AuditModifiedComments']=[];masterData['AuditModifiedComments']=response.data['AuditModifiedComments'];masterData['viewdetails']=[];masterData['viewdetails']=response.data['viewdetails'][0];//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{//viewdetails:viewdetails,\nmasterData:masterData,screenName:\"IDS_PREVIOUSRESULTVIEW\",operation:\"\",loading:false,openModal:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getWorklisthistoryAction(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getWorklisthistory\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),response.data),loading:false,openModal:false,activeKey:\"IDS_WORKLISTHISTORY\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegSubTypeWise(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/getRegistrationsubTypeByRegType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{//defaultRegTypeValue: inputData.defaultRegTypeValue\nRegTypeValue:inputData.masterData.RegTypeValue,realApprovalConfigVersionList:inputData.realApprovalConfigVersionList,realApprovalVersionValue:inputData.realApprovalVersionValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var reportWorklist=function reportWorklist(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"worklist/worklistReportGenerate\",_objectSpread(_objectSpread({},inputParam),{},{nworklistcode:inputParam.nworklistcode})).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export function insertWorklist(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var requestUrl='';requestUrl=rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData));requestUrl.then(function(response){if(masterData.searchedData!==undefined){masterData.searchedData=undefined;}var Worklist=[];Worklist=masterData.Worklist;Worklist.unshift(response.data[\"selectedWorklist\"]);//  Worklist={...Worklist};\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{Worklist:Worklist});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,loadEsign:false,openModal:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignforWorklist(inputParam,modalName,ConfirmMessage){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}// ALPD-2437 added for Type3 Component. Use selected record to clear esign values\nif(inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];}dispatch(onWorklistApproveClick(inputParam[\"screenData\"][\"masterData\"],inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"],ConfirmMessage,inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"ncontrolCode\"],inputParam[\"screenData\"][\"inputParam\"][\"operation\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/WorklistPreparationAction.js"],"names":["toast","React","rsapi","constructOptionList","sortData","reArrangeArrays","Axios","DEFAULT_RETURN","initRequest","intl","transactionStatus","getSectionAndTest","screenName","operation","primaryKeyName","masterData","userInfo","ncontrolCode","dispatch","SelectedInsCat","urlArray","Section","post","defaultRegTypeValue","nregtypecode","defaultRegSubTypeValue","nregsubtypecode","all","then","response","SectionMap","data","undefined","get","selectedRecord","instrumentCategory","type","payload","Test","isOpen","openModal","loading","catch","error","status","formatMessage","id","message","warn","getWorklistSample","InstrumentCategory","selectedWorklist","defaultFilterStatusValue","defaultApprovalVersionValue","expiryDate","currentTime","activeKey","addedComponentList","addComponentDataList","getRegTypeWorklist","inputData","responseData","defaultSampleTypeValue","realApprovalConfigVersionList","realApprovalVersionValue","getWorklistDetail","Worklist","nworklistcode","ndesigntemplatemappingcode","userinfo","modalName","dataState","getSectionbaseTest","inputParam","addId","nsectionCode","nsectioncode","value","TestMap","getWorklistDetailFilter","WorklistSamples","WorklistHistory","RegSubTypeValue","FilterStatusValue","onWorklistApproveClick","ConfirmMessage","approvalId","map","item","index","splice","searchedData","length","loadEsign","openChildModal","YES","confirm","getEditSectionAndTest","GetEditSetionAndTest","TestGet","ssectionname","ntestcode","stestsynonym","createWorklistCreation","getConfigVersionTestWise","RegistrationSubTypeList","ViewSampleDetails","viewdetails","PatientId","npreregno","getWorklisthistoryAction","getRegSubTypeWise","RegTypeValue","reportWorklist","showConfirmAlert","document","getElementById","setAttribute","filepath","click","insertWorklist","requestUrl","classUrl","methodUrl","unshift","validateEsignforWorklist","toLowerCase"],"mappings":"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","sourcesContent":["import {\r\n    toast\r\n} from 'react-toastify';\r\nimport React from 'react';\r\nimport rsapi from '../rsapi';\r\nimport { constructOptionList, sortData, reArrangeArrays } from '../components/CommonScript';\r\nimport Axios from 'axios';\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getSectionAndTest(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (masterData.SelectedInsCat !== null) {\r\n            let urlArray = [];\r\n            const Section = rsapi.post(\"worklist/getSectionAndTest\", { \"ncontrolCode\": ncontrolCode, \"userinfo\": userInfo, \"nregtypecode\": masterData.defaultRegTypeValue.nregtypecode, \"nregsubtypecode\": masterData.defaultRegSubTypeValue.nregsubtypecode })\r\n            urlArray = [Section];\r\n\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const SectionMap = constructOptionList(response[0].data || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, false);\r\n                    const Section = SectionMap.get(\"OptionList\");\r\n                    let selectedRecord = {};\r\n                    let instrumentCategory = [];\r\n\r\n\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            Section,\r\n                            Test:[],\r\n                            instrumentCategory: instrumentCategory,\r\n                            isOpen: true,\r\n                            selectedRecord: selectedRecord,\r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            openModal: true,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SECTIONNOTAVALIABLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getWorklistSample(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const InstrumentCategory = rsapi.post(\"/worklist/refreshGetForAddComponent\", {\r\n            [primaryKeyName]: masterData.selectedWorklist[primaryKeyName],\r\n            \"ntestcode\": masterData.selectedWorklist['ntestcode'],\r\n            \"ntransactionstatus\": masterData.defaultFilterStatusValue['ntransactionstatus'],\r\n            \"nsampletypecode\": masterData.selectedWorklist['nsampletypecode'],\r\n            \"nregtypecode\": masterData.selectedWorklist['nregtypecode'],\r\n            \"nregsubtypecode\": masterData.selectedWorklist['nregsubtypecode'],\r\n            \"napprovalconfigversioncode\": masterData.defaultApprovalVersionValue['napprovalconfigversioncode'],\r\n            \"userinfo\": userInfo,\r\n            \"ncontrolCode\": ncontrolCode,\r\n            \"nsectioncode\": masterData.selectedWorklist['nsectioncode'],\r\n        });\r\n        urlArray = [InstrumentCategory];\r\n\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                let expiryDate = undefined;\r\n                let currentTime = undefined;\r\n\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                        addedComponentList: [],\r\n                        addComponentDataList: response[0].data || [],\r\n                        isOpen: true,\r\n\r\n                        operation: operation,\r\n                        screenName: screenName,\r\n                        openModal: true,\r\n                        ncontrolCode: ncontrolCode,\r\n                        loading: false,\r\n                        currentTime,\r\n                        expiryDate\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getRegTypeWorklist(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/getRegistrationTypeBySampleType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            defaultSampleTypeValue: inputData.defaultSampleTypeValue,\r\n                            realApprovalConfigVersionList:inputData.realApprovalConfigVersionList,\r\n                            realApprovalVersionValue:inputData.realApprovalVersionValue,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function getWorklistDetail(Worklist, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"worklist/getWorklistSample\", {\r\n            nworklistcode: Worklist.nworklistcode,\r\n            ndesigntemplatemappingcode:masterData.ndesigntemplatemappingcode,\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n                delete masterData['selectedWorklist']\r\n                masterData['selectedWorklist'] = {}\r\n\r\n                masterData['selectedWorklist'] = Worklist\r\n\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                };\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                        masterData,\r\n                        operation: null,\r\n                        modalName: undefined,\r\n                        loading: false,\r\n                        dataState: undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getSectionbaseTest(inputParam, userInfo, masterData,addId) {\r\n    return function (dispatch) {\r\n        if (inputParam.SelectedInsCat !== null) {\r\n            let urlArray = [];\r\n            const Section = rsapi.post(\"worklist/getSectionbaseTest\", { nsectionCode: inputParam.nsectioncode.value,\"userinfo\": userInfo,\"ncontrolCode\":addId,\"nregtypecode\": masterData.defaultRegTypeValue.nregtypecode, \"nregsubtypecode\": masterData.defaultRegSubTypeValue.nregsubtypecode  })\r\n            urlArray = [Section];\r\n\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const TestMap = constructOptionList(response[0].data || [], \"ntestcode\",\r\n                        \"stestsynonym\", undefined, undefined, false);\r\n                    const Test = TestMap.get(\"OptionList\");\r\n                    let selectedRecord = { ...inputParam };\r\n                    let instrumentCategory = [];\r\n                    //nsectioncode=inputParam.nsectioncode,\r\n                    masterData = {\r\n                        ...masterData,\r\n                    }\r\n\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            Test,\r\n                            instrumentCategory: instrumentCategory,\r\n                            isOpen: true,\r\n                            selectedRecord: selectedRecord,\r\n                            // operation: operation,\r\n                            //screenName: screenName,\r\n                            //openModal: true,\r\n                            //ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getWorklistDetailFilter = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/getWorklistDetailFilter\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                delete inputParam.masterData['Worklist']\r\n                delete inputParam.masterData['WorklistSamples']\r\n                delete inputParam.masterData['WorklistHistory']\r\n                delete inputParam.masterData['selectedWorklist']\r\n                inputParam.masterData['Worklist'] = {}\r\n                inputParam.masterData['WorklistSamples'] = {}\r\n                inputParam.masterData['WorklistHistory'] = {}\r\n                inputParam.masterData['selectedWorklist'] = {}\r\n                inputParam.masterData['Worklist'] = response.data.Worklist\r\n                inputParam.masterData['WorklistSamples'] = response.data.WorklistSamples\r\n                inputParam.masterData['WorklistHistory'] = response.data.WorklistHistory\r\n                inputParam.masterData['selectedWorklist'] = response.data.selectedWorklist\r\n                const masterData = response.data\r\n                //sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            defaultRegSubTypeValue: inputParam.masterData.RegSubTypeValue,\r\n                            FilterStatusValue: inputParam.masterData.defaultFilterStatusValue\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const onWorklistApproveClick = (masterData, userInfo, ConfirmMessage, approvalId,operation) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n     //   rsapi.post(\"worklist/updateWorklistDetail\", { \"worklist\": masterData.selectedWorklist, \"userinfo\": userInfo, \"ncontrolCode\": approvalId,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode }\r\n            \r\n       \r\n     \r\n     rsapi.post(\"worklist/prepareWorklist\", { \"worklist\": masterData.selectedWorklist, \"userinfo\": userInfo, \"ncontrolCode\": approvalId,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode })\r\n            .then(response => {\r\n\r\n                let Worklist=[];\r\n                Worklist=masterData.Worklist;\r\n\r\n                Worklist.map((item,index)=>{\r\n                    if(response.data[\"selectedWorklist\"].nworklistcode===item.nworklistcode){\r\n                        Worklist.splice(index,1)\r\n                        Worklist.splice(index,0,response.data[\"selectedWorklist\"]);\r\n                     }\r\n                    })\r\n              \r\n    \r\n                 masterData = {\r\n                    ...masterData,\r\n                    ...response.data, \r\n                     Worklist:Worklist\r\n                }\r\n\r\n            if(!(masterData.searchedData && masterData.searchedData.length > 0)){\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign :false,\r\n                        dataState: undefined,\r\n                        openModal:false,\r\n                        openChildModal:false,\r\n                        masterData: {\r\n                            ...masterData\r\n                        }\r\n                    }\r\n                });\r\n            } else{\r\n                let searchedData = reArrangeArrays(masterData[\"searchedData\"], masterData.Worklist, \"nworklistcode\");\r\n                rsapi.post(\"worklist/getWorklistSelectSample\", { \"nworklistcode\": searchedData.length > 0 ? searchedData[0].nworklistcode : -1, \"userinfo\": userInfo,\"ndesigntemplatemappingcode\":masterData.ndesigntemplatemappingcode, \"nneedsampleandhistory\": transactionStatus.YES })\r\n                .then(response => {\r\n                    let responseData = response.data;\r\n                    responseData[\"searchedData\"] = searchedData;\r\n                     masterData = {\r\n                        ...masterData, ...responseData\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                        payload: {\r\n                            loading: false,\r\n                            dataState: undefined,\r\n                            openModal:false,\r\n                            openChildModal:false,\r\n                            loadEsign :false,\r\n                            masterData: {\r\n                                ...masterData\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                }\r\n                else if (error.response.status === 417) {\r\n                    ConfirmMessage.confirm(\"information\", \"Information!\", error.response.data, undefined, \"ok\", undefined, true, undefined);\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n                //toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getEditSectionAndTest(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (masterData.SelectedInsCat !== null) {\r\n            let urlArray = [];\r\n            const Section = rsapi.post(\"worklist/getSectionAndTest\", { \"ncontrolCode\": ncontrolCode, \"userinfo\": userInfo })\r\n            // const GetEditSetionAndTest={}\r\n            if (operation === \"update\") {\r\n                const GetEditSetionAndTest = rsapi.post(\"/worklistpreparation/getEditSectionAndTest\", {\r\n                    [primaryKeyName]: masterData.selectedWorklist[primaryKeyName],\r\n                    \"userinfo\": userInfo\r\n                });\r\n\r\n                const TestGet = rsapi.post(\"worklist/getSectionbaseTest\", { nsectionCode: masterData.selectedWorklist[\"nsectioncode\"], \"userinfo\": userInfo })\r\n                urlArray = [Section, GetEditSetionAndTest, TestGet];\r\n            }\r\n            //urlArray = [Section,GetEditSetionAndTest];\r\n\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    const SectionMap = constructOptionList(response[0].data || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, false);\r\n                    const Section = SectionMap.get(\"OptionList\");\r\n\r\n                    const TestMap = constructOptionList(response[2].data || [], \"ntestcode\",\r\n                        \"stestsynonym\", undefined, undefined, false);\r\n                    const Test = TestMap.get(\"OptionList\");\r\n\r\n\r\n                    let selectedRecord = {};\r\n                    let instrumentCategory = [];\r\n\r\n                    selectedRecord = {\r\n                        \"nsectioncode\": {\r\n                            \"value\": response[1].data.nsectioncode,\r\n                            \"label\": response[1].data.ssectionname\r\n                        },\r\n                        \"ntestcode\": {\r\n                            \"value\": response[1].data.ntestcode,\r\n                            \"label\": response[1].data.stestsynonym\r\n                        }\r\n                    };\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        activeKey: \"IDS_WORKLISTSAMPLE\",\r\n                        payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                            },\r\n                            Section, Test,\r\n                            instrumentCategory: instrumentCategory,\r\n                            isOpen: true,\r\n                            selectedRecord: selectedRecord,\r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            openModal: true,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n\r\n\r\n\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({\r\n                            id: error.message\r\n                        }));\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createWorklistCreation = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/createWorklistCreation\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                delete inputParam.masterData['WorklistSamples']\r\n                inputParam.masterData['WorklistSamples'] = {}\r\n\r\n                inputParam.masterData['WorklistSamples'] = response.data.WorklistSamples\r\n                delete inputParam.masterData['WorklistHistory']\r\n                inputParam.masterData['WorklistHistory'] = {}\r\n\r\n                inputParam.masterData['WorklistHistory'] = response.data.WorklistHistory\r\n\r\n                const masterData = response.data\r\n                //sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        openModal: false,\r\n                        dataState: undefined,\r\n                        addedComponentList: [],\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                // toast.error(error.message);\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getConfigVersionTestWise(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/getApprovalConfigVersionByRegSubType\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputParam.masterData.RegSubTypeValue,\r\n                            RegistrationSubTypeList: inputParam.masterData.RegistrationSubTypeList,\r\n                            realApprovalConfigVersionList:inputParam.inputData.realApprovalConfigVersionList,\r\n                            realApprovalVersionValue:inputParam.inputData.realApprovalVersionValue,\r\n                            //nneedsubsample:inputParam.masterData.realRegSubTypeValue.nneedsubsample\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function ViewSampleDetails(masterData, screenName, userInfo, viewdetails) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/getSampleViewDetails\", { selectedRecord: masterData.selectedWorklist, PatientId: viewdetails[\"Patient Id\"], npreregno: viewdetails[\"npreregno\"], userinfo: userInfo })\r\n            .then(response => {\r\n                //  masterData = {\r\n                //     ...masterData,\r\n                //     ...response.data\r\n                // }\r\n                masterData['AuditModifiedComments'] = [];\r\n                masterData['AuditModifiedComments'] = response.data['AuditModifiedComments']\r\n                masterData['viewdetails'] = [];\r\n                masterData['viewdetails'] = response.data['viewdetails'][0]\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        //viewdetails:viewdetails,\r\n                        masterData,\r\n                        screenName: \"IDS_PREVIOUSRESULTVIEW\",\r\n                        operation: \"\",\r\n                        loading: false,\r\n                        openModal: true,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getWorklisthistoryAction(inputData) {\r\n\r\n    return function (dispatch) {\r\n\r\n\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"worklist/getWorklisthistory\", inputData)\r\n\r\n            .then(response => {\r\n\r\n                dispatch({\r\n\r\n                    type: DEFAULT_RETURN,\r\n\r\n                    payload: {\r\n\r\n                        masterData: {\r\n\r\n                            ...inputData.masterData,\r\n\r\n                            ...response.data,\r\n\r\n                        },\r\n\r\n                        loading: false,\r\n\r\n                        openModal: false,\r\n\r\n                        activeKey: \"IDS_WORKLISTHISTORY\"\r\n\r\n                    }\r\n\r\n                })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getRegSubTypeWise(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/getRegistrationsubTypeByRegType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            //defaultRegTypeValue: inputData.defaultRegTypeValue\r\n                            RegTypeValue: inputData.masterData.RegTypeValue,\r\n                            realApprovalConfigVersionList:inputData.realApprovalConfigVersionList,\r\n                            realApprovalVersionValue:inputData.realApprovalVersionValue,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const reportWorklist = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"worklist/worklistReportGenerate\", {\r\n            ...inputParam,\r\n            nworklistcode: inputParam.nworklistcode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function insertWorklist(inputParam,masterData){\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let requestUrl = '';\r\n        requestUrl = rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData });\r\n\r\n        requestUrl.then(response => {\r\n            \r\n\r\n           if(masterData.searchedData!==undefined){\r\n            masterData.searchedData=undefined;\r\n           }\r\n           let Worklist=[];\r\n            Worklist=masterData.Worklist;\r\n           Worklist.unshift(response.data[\"selectedWorklist\"]);\r\n           //  Worklist={...Worklist};\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    Worklist:Worklist\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                        },\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false\r\n                       \r\n                    }\r\n                })\r\n             \r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\nexport function validateEsignforWorklist(inputParam,modalName,ConfirmMessage) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    const methodUrl = inputParam[\"screenData\"][\"inputParam\"][\"methodUrl\"];\r\n\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    }\r\n                    // ALPD-2437 added for Type3 Component. Use selected record to clear esign values\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"]) {\r\n\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"selectedRecord\"][\"agree\"];\r\n                    }\r\n                   \r\n                        dispatch(onWorklistApproveClick(inputParam[\"screenData\"][\"masterData\"],inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"],ConfirmMessage,inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"ncontrolCode\"],inputParam[\"screenData\"][\"inputParam\"][\"operation\"] ))\r\n\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}