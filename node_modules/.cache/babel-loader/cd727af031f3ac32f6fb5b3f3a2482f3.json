{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{transactionStatus}from'../../components/Enumeration';import{process}from'@progress/kendo-data-query';//const InstrumentSectionTab = (props) =>\nvar InstrumentSectionTab=/*#__PURE__*/function(_React$Component){_inherits(InstrumentSectionTab,_React$Component);var _super=_createSuper(InstrumentSectionTab);function InstrumentSectionTab(props){var _this;_classCallCheck(this,InstrumentSectionTab);_this=_super.call(this,props);_this.state={sectionDataState:{skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5}};return _this;}// dataStateChange = (event) => {\n//     this.setState({\n//         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n//         sectionDataState: event.dataState\n//     });\n//}\n_createClass(InstrumentSectionTab,[{key:\"render\",value:function render(){var _this2=this;var addSectionId=this.props.controlMap.has(\"AddSection\")&&this.props.controlMap.get(\"AddSection\").ncontrolcode;var instSectionColumnList=[{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"width\":\"150px\"},{\"idsName\":\"IDS_INCHARGE\",\"dataField\":\"susername\",\"width\":\"150px\"}// {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \n// \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\n];var methodUrl=\"Section\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestsection\",className:\"add-txt-btn\",hidden:this.props.userRoleControlRights.indexOf(addSectionId)===-1,onClick:function onClick(){return _this2.props.getAvailableInstData(_this2.props.selectedInstrument,\"getInstrumentSection\",\"section\",\"IDS_SECTION\",_this2.props.userInfo,addSectionId,_this2.props.selectedRecord);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDSECTION\",defaultMessage:\"Add Section\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"instrumentsectionkey\",primaryKeyField:\"ninstrumentsectioncode\",data:this.props.InstrumentSection,dataResult:process(this.props.InstrumentSection||[],this.state.sectionDataState),dataState:this.state.sectionDataState,dataStateChange:function dataStateChange(event){return _this2.setState({sectionDataState:event.dataState});},extractedColumnList:instSectionColumnList,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,userInfo:this.props.userInfo,deleteRecord:this.props.deleteRecord,onSwitchChange:this.props.defaultRecord,pageable:true,scrollable:'scrollable'//gridHeight = {'600px'}\n,isActionRequired:true,deleteParam:{operation:\"delete\",methodUrl:methodUrl,screenName:this.props.screenName},methodUrl:methodUrl//  switchParam={{operation:\"Default\", methodUrl,screenName:this.props.screenName}}\n}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.InstrumentSection!==previousProps.InstrumentSection){var sectionDataState=this.state.sectionDataState;if(this.props.dataState===undefined){sectionDataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({sectionDataState:sectionDataState});}}}]);return InstrumentSectionTab;}(React.Component);;export default injectIntl(InstrumentSectionTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/InstrumentSectionTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","transactionStatus","process","InstrumentSectionTab","props","state","sectionDataState","skip","take","settings","parseInt","addSectionId","controlMap","has","get","ncontrolcode","instSectionColumnList","methodUrl","userRoleControlRights","indexOf","getAvailableInstData","selectedInstrument","userInfo","selectedRecord","InstrumentSection","event","setState","dataState","inputParam","deleteRecord","defaultRecord","operation","screenName","previousProps","undefined","Component"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA;GACOC,CAAAA,oB,wIACH,8BAAYC,KAAZ,CAAmB,sDACnB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAc,CACVC,gBAAgB,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,MAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CADR,CAAd,CAFmB,aAKtB,CAGD;AACA;AACA;AACA;AACA;AACA;uDACI,iBAAQ,iBACJ,GAAME,CAAAA,YAAY,CAAG,KAAKP,KAAL,CAAWQ,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,GAA2C,KAAKT,KAAL,CAAWQ,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCC,YAAxG,CACA,GAAMC,CAAAA,qBAAqB,CAAG,CAC1B,CAAC,UAAU,aAAX,CAAyB,YAAY,cAArC,CAAoD,QAAQ,OAA5D,CAD0B,CAE1B,CAAC,UAAU,cAAX,CAA0B,YAAY,WAAtC,CAAkD,QAAQ,OAA1D,CACA;AACA;AAJ0B,CAA9B,CAMA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACJ,mBACI,qDACI,2BAAK,SAAS,CAAC,gBAAf,eACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,gBAAf,CAAgC,SAAS,CAAC,aAA1C,CAAwD,MAAM,CAAE,KAAKb,KAAL,CAAWc,qBAAX,CAAiCC,OAAjC,CAAyCR,YAAzC,IAA2D,CAAC,CAA5H,CACQ,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACP,KAAL,CAAWgB,oBAAX,CAAgC,MAAI,CAAChB,KAAL,CAAWiB,kBAA3C,CACT,sBADS,CACe,SADf,CAC0B,aAD1B,CACyC,MAAI,CAACjB,KAAL,CAAWkB,QADpD,CAC8DX,YAD9D,CAC2E,MAAI,CAACP,KAAL,CAAWmB,cADtF,CAAJ,EADjB,eAIQ,oBAAC,eAAD,EAAiB,IAAI,CAAKvB,MAA1B,EAJR,kBAKQ,oBAAC,gBAAD,EAAkB,EAAE,CAAC,gBAArB,CAAsC,cAAc,CAAC,aAArD,EALR,CADJ,CADJ,CADJ,cAYI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,QAAD,EACG,GAAG,CAAC,sBADP,CAEG,eAAe,CAAG,wBAFrB,CAGG,IAAI,CAAI,KAAKI,KAAL,CAAWoB,iBAHtB,CAIG,UAAU,CAAItB,OAAO,CAAC,KAAKE,KAAL,CAAWoB,iBAAX,EAA8B,EAA/B,CAAkC,KAAKnB,KAAL,CAAWC,gBAA7C,CAJxB,CAKG,SAAS,CAAI,KAAKD,KAAL,CAAWC,gBAL3B,CAMG,eAAe,CAAI,yBAACmB,KAAD,QAAW,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEpB,gBAAgB,CAAEmB,KAAK,CAACE,SAA1B,CAAd,CAAX,EANtB,CAOG,mBAAmB,CAAIX,qBAP1B,CAQG,UAAU,CAAI,KAAKZ,KAAL,CAAWQ,UAR5B,CASG,qBAAqB,CAAE,KAAKR,KAAL,CAAWc,qBATrC,CAUG,UAAU,CAAI,KAAKd,KAAL,CAAWwB,UAV5B,CAWG,QAAQ,CAAI,KAAKxB,KAAL,CAAWkB,QAX1B,CAYG,YAAY,CAAI,KAAKlB,KAAL,CAAWyB,YAZ9B,CAaG,cAAc,CAAI,KAAKzB,KAAL,CAAW0B,aAbhC,CAcG,QAAQ,CAAE,IAdb,CAeG,UAAU,CAAE,YACZ;AAhBH,CAiBG,gBAAgB,CAAE,IAjBrB,CAkBG,WAAW,CAAE,CAACC,SAAS,CAAC,QAAX,CAAqBd,SAAS,CAATA,SAArB,CAA+Be,UAAU,CAAC,KAAK5B,KAAL,CAAW4B,UAArD,CAlBhB,CAmBG,SAAS,CAAEf,SACb;AApBD,EADJ,CADJ,CAZJ,CADJ,CA2CH,C,kCACD,4BAAmBgB,aAAnB,CAAkC,CAC9B,GAAI,KAAK7B,KAAL,CAAWoB,iBAAX,GAAiCS,aAAa,CAACT,iBAAnD,CAAsE,CAClE,GAAMlB,CAAAA,gBAAN,CAA0B,KAAKD,KAA/B,CAAMC,gBAAN,CACA,GAAI,KAAKF,KAAL,CAAWuB,SAAX,GAAwBO,SAA5B,CAAuC,CAC/B5B,gBAAgB,CAAG,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,KAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CAAnB,CACP,CACD,KAAKiB,QAAL,CAAc,CAAEpB,gBAAgB,CAAhBA,gBAAF,CAAd,EACH,CAEJ,C,kCA7EmCd,KAAK,CAAC2C,S,EA8EzC,CAED,cAAe1C,CAAAA,UAAU,CAACU,oBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { process } from '@progress/kendo-data-query';\r\n//const InstrumentSectionTab = (props) =>\r\nclass  InstrumentSectionTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        sectionDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n\r\n\r\n// dataStateChange = (event) => {\r\n//     this.setState({\r\n//         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\r\n//         sectionDataState: event.dataState\r\n//     });\r\n//}\r\n    render(){\r\n        const addSectionId = this.props.controlMap.has(\"AddSection\") && this.props.controlMap.get(\"AddSection\").ncontrolcode;\r\n        const instSectionColumnList = [\r\n            {\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_INCHARGE\",\"dataField\":\"susername\",\"width\":\"150px\"}\r\n            // {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \r\n            // \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\r\n        ];\r\n        const methodUrl = \"Section\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addtestsection\" className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addSectionId) === -1}\r\n                            onClick={()=>this.props.getAvailableInstData(this.props.selectedInstrument, \r\n                                \"getInstrumentSection\", \"section\", \"IDS_SECTION\", this.props.userInfo, addSectionId,this.props.selectedRecord)}\r\n                            >\r\n                            <FontAwesomeIcon icon = { faPlus } /> { }\r\n                            <FormattedMessage id=\"IDS_ADDSECTION\" defaultMessage=\"Add Section\"></FormattedMessage>\r\n                        </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                       key=\"instrumentsectionkey\"\r\n                       primaryKeyField = \"ninstrumentsectioncode\"\r\n                       data = {this.props.InstrumentSection}\r\n                       dataResult = {process(this.props.InstrumentSection||[],this.state.sectionDataState)}\r\n                       dataState = {this.state.sectionDataState}\r\n                       dataStateChange = {(event) => this.setState({ sectionDataState: event.dataState })}\r\n                       extractedColumnList = {instSectionColumnList}\r\n                       controlMap = {this.props.controlMap}\r\n                       userRoleControlRights={this.props.userRoleControlRights}\r\n                       inputParam = {this.props.inputParam}\r\n                       userInfo = {this.props.userInfo}\r\n                       deleteRecord = {this.props.deleteRecord}\r\n                       onSwitchChange = {this.props.defaultRecord}\r\n                       pageable={true}\r\n                       scrollable={'scrollable'}\r\n                       //gridHeight = {'600px'}\r\n                       isActionRequired={true}\r\n                       deleteParam={{operation:\"delete\", methodUrl,screenName:this.props.screenName}}\r\n                       methodUrl={methodUrl}\r\n                     //  switchParam={{operation:\"Default\", methodUrl,screenName:this.props.screenName}}\r\n                       \r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.InstrumentSection !== previousProps.InstrumentSection) {\r\n        let { sectionDataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n                sectionDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ sectionDataState });\r\n    }\r\n\r\n}\r\n};\r\n\r\nexport default injectIntl(InstrumentSectionTab);"]},"metadata":{},"sourceType":"module"}