{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\form-select-search\\\\form-select-search.component.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { Form } from 'react-bootstrap';\n\nconst FormSelectSearch = _ref => {\n  let {\n    name,\n    formLabel,\n    label,\n    placeholder,\n    isMandatory,\n    optionId,\n    optionValue,\n    options,\n    value,\n    defaultValue,\n    isMulti,\n    isSearchable,\n    isDisabled,\n    onChange,\n    onBlur,\n    closeMenuOnSelect,\n    className,\n    classNamePrefix,\n    minMenuHeight,\n    maxMenuHeight,\n    openMenuOnFocus,\n    menuPlacement,\n    menuPortalTarget,\n    menuPosition,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched,\n    isInvalid,\n    required,\n    onKeyUp,\n    ...props\n  } = _ref;\n  // const optionList =Object.values(\n  //                                 (props.sortField ? (\n  //                                                     (props.sortOrder === \"ascending\" ?\n  //                                                         options.sort((itemA, itemB) => itemA[props.sortField] < itemB[props.sortField] ? -1 : 1)\n  //                                                         : options.sort((itemA, itemB) => itemA[props.sortField] > itemB[props.sortField] ? -1 : 1))\n  //                                                     )\n  //                                 : (props.alphabeticalSort ?\n  //                                     options.sort((itemA, itemB) => itemA[optionValue] < itemB[optionValue] ? -1 : 1) : options)\n  //                                 )\n  //                             ).map(item =>(\n  //                                 item.ndefaultstatus === transactionStatus.YES ? (defaultValue ={label: item[optionValue], value: item[optionId], item: item}) : \"\",\n  //                                 { label: item[optionValue], value: item[optionId], item: item }\n  //                             ));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    onKeyUp: onKeyUp,\n    className: \"form-select w-100 floating-label react-select-wrap\",\n    controlId: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    inputId: name,\n    id: name,\n    name: name,\n    placeholder: placeholder,\n    options: options,\n    value: value,\n    isInvalid: isInvalid,\n    required: required,\n    defaultValue: defaultValue,\n    isMulti: isMulti,\n    isSearchable: isSearchable,\n    isDisabled: isDisabled,\n    isClearable: props.isClearable,\n    onChange: onChange,\n    onBlur: onBlur,\n    closeMenuOnSelect: closeMenuOnSelect,\n    className: className,\n    classNamePrefix: \"react-select\",\n    minMenuHeight: minMenuHeight,\n    maxMenuHeight: maxMenuHeight,\n    openMenuOnFocus: true,\n    menuPlacement: \"auto\",\n    autoComplete: \"off\",\n    menuPosition: menuPosition // menuPortalTarget={document.querySelector('body')}\n    // menuPosition=\"absolute\"\n    // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, formLabel, isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 71\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, errors)));\n};\n\nexport default FormSelectSearch;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/form-select-search/form-select-search.component.jsx"],"names":["React","Select","Form","FormSelectSearch","name","formLabel","label","placeholder","isMandatory","optionId","optionValue","options","value","defaultValue","isMulti","isSearchable","isDisabled","onChange","onBlur","closeMenuOnSelect","className","classNamePrefix","minMenuHeight","maxMenuHeight","openMenuOnFocus","menuPlacement","menuPortalTarget","menuPosition","errors","touched","setFieldValue","setFieldTouched","isInvalid","required","onKeyUp","props","isClearable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,gBAAgB,GAAG,QAiCnB;AAAA,MAjCoB;AACtBC,IAAAA,IADsB;AAEtBC,IAAAA,SAFsB;AAGtBC,IAAAA,KAHsB;AAItBC,IAAAA,WAJsB;AAKtBC,IAAAA,WALsB;AAMtBC,IAAAA,QANsB;AAOtBC,IAAAA,WAPsB;AAQtBC,IAAAA,OARsB;AAStBC,IAAAA,KATsB;AAUtBC,IAAAA,YAVsB;AAWtBC,IAAAA,OAXsB;AAYtBC,IAAAA,YAZsB;AAatBC,IAAAA,UAbsB;AActBC,IAAAA,QAdsB;AAetBC,IAAAA,MAfsB;AAgBtBC,IAAAA,iBAhBsB;AAiBtBC,IAAAA,SAjBsB;AAkBtBC,IAAAA,eAlBsB;AAmBtBC,IAAAA,aAnBsB;AAoBtBC,IAAAA,aApBsB;AAqBtBC,IAAAA,eArBsB;AAsBtBC,IAAAA,aAtBsB;AAuBtBC,IAAAA,gBAvBsB;AAwBtBC,IAAAA,YAxBsB;AAyBtBC,IAAAA,MAzBsB;AA0BtBC,IAAAA,OA1BsB;AA2BtBC,IAAAA,aA3BsB;AA4BtBC,IAAAA,eA5BsB;AA6BtBC,IAAAA,SA7BsB;AA8BtBC,IAAAA,QA9BsB;AA+BtBC,IAAAA,OA/BsB;AAgCtB,OAAGC;AAhCmB,GAiCpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAED,OAArB;AAA8B,IAAA,SAAS,EAAC,oDAAxC;AAA6F,IAAA,SAAS,EAAE9B,IAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEA,IADb;AAEI,IAAA,EAAE,EAAEA,IAFR;AAGI,IAAA,IAAI,EAAEA,IAHV;AAII,IAAA,WAAW,EAAEG,WAJjB;AAKI,IAAA,OAAO,EAAEI,OALb;AAMI,IAAA,KAAK,EAAEC,KANX;AAOI,IAAA,SAAS,EAAEoB,SAPf;AAQI,IAAA,QAAQ,EAAEC,QARd;AASI,IAAA,YAAY,EAAEpB,YATlB;AAUI,IAAA,OAAO,EAAEC,OAVb;AAWI,IAAA,YAAY,EAAEC,YAXlB;AAYI,IAAA,UAAU,EAAEC,UAZhB;AAaI,IAAA,WAAW,EAAEmB,KAAK,CAACC,WAbvB;AAcI,IAAA,QAAQ,EAAEnB,QAdd;AAeI,IAAA,MAAM,EAAEC,MAfZ;AAgBI,IAAA,iBAAiB,EAAEC,iBAhBvB;AAiBI,IAAA,SAAS,EAAEC,SAjBf;AAkBI,IAAA,eAAe,EAAC,cAlBpB;AAmBI,IAAA,aAAa,EAAEE,aAnBnB;AAoBI,IAAA,aAAa,EAAEC,aApBnB;AAqBI,IAAA,eAAe,EAAE,IArBrB;AAsBI,IAAA,aAAa,EAAE,MAtBnB;AAuBI,IAAA,YAAY,EAAC,KAvBjB;AAwBI,IAAA,YAAY,EAAEI,YAxBlB,CAyBA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eA+BI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAEvB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,SAA5B,EAAuCG,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD,CA/BJ,eAgCI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKoB,MADL,CAhCJ,CADJ,CADJ;AA0CH,CA1FD;;AA2FA,eAAezB,gBAAf","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormSelectSearch = ({\r\n    name,\r\n    formLabel,\r\n    label,\r\n    placeholder,\r\n    isMandatory,\r\n    optionId,\r\n    optionValue,\r\n    options,\r\n    value,\r\n    defaultValue,\r\n    isMulti,\r\n    isSearchable,\r\n    isDisabled,\r\n    onChange,\r\n    onBlur,\r\n    closeMenuOnSelect,\r\n    className,\r\n    classNamePrefix,\r\n    minMenuHeight,\r\n    maxMenuHeight,\r\n    openMenuOnFocus,\r\n    menuPlacement,\r\n    menuPortalTarget,\r\n    menuPosition,\r\n    errors,\r\n    touched,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    isInvalid,\r\n    required,\r\n    onKeyUp,\r\n    ...props\r\n}) => {\r\n    // const optionList =Object.values(\r\n    //                                 (props.sortField ? (\r\n    //                                                     (props.sortOrder === \"ascending\" ?\r\n    //                                                         options.sort((itemA, itemB) => itemA[props.sortField] < itemB[props.sortField] ? -1 : 1)\r\n    //                                                         : options.sort((itemA, itemB) => itemA[props.sortField] > itemB[props.sortField] ? -1 : 1))\r\n    //                                                     )\r\n    //                                 : (props.alphabeticalSort ?\r\n    //                                     options.sort((itemA, itemB) => itemA[optionValue] < itemB[optionValue] ? -1 : 1) : options)\r\n\r\n    //                                 )\r\n    //                             ).map(item =>(\r\n    //                                 item.ndefaultstatus === transactionStatus.YES ? (defaultValue ={label: item[optionValue], value: item[optionId], item: item}) : \"\",\r\n    //                                 { label: item[optionValue], value: item[optionId], item: item }\r\n    //                             ));\r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group onKeyUp={onKeyUp} className=\"form-select w-100 floating-label react-select-wrap\" controlId={name}>\r\n                <Select\r\n                    inputId={name}\r\n                    id={name}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    options={options}\r\n                    value={value}\r\n                    isInvalid={isInvalid}\r\n                    required={required}\r\n                    defaultValue={defaultValue}\r\n                    isMulti={isMulti}\r\n                    isSearchable={isSearchable}\r\n                    isDisabled={isDisabled}\r\n                    isClearable={props.isClearable}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    closeMenuOnSelect={closeMenuOnSelect}\r\n                    className={className}\r\n                    classNamePrefix=\"react-select\"\r\n                    minMenuHeight={minMenuHeight}\r\n                    maxMenuHeight={maxMenuHeight}\r\n                    openMenuOnFocus={true}\r\n                    menuPlacement={\"auto\"}\r\n                    autoComplete=\"off\"\r\n                    menuPosition={menuPosition}\r\n                // menuPortalTarget={document.querySelector('body')}\r\n                // menuPosition=\"absolute\"\r\n                // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n\r\n                />\r\n                <Form.Label htmlFor={name}>{formLabel}{isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n};\r\nexport default FormSelectSearch;"]},"metadata":{},"sourceType":"module"}