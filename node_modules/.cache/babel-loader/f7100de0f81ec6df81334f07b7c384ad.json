{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col,Button}from'react-bootstrap';import{Grid,GridColumn,GridToolbar}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';// import { css } from 'styled-components';\nimport ColumnMenu from'../../components/data-grid/ColumnMenu';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../../pages/audittrail/Esign';import{callService,crudMaster,updateStore,validateEsignCredential}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap}from'../../components/CommonScript';import{transactionStatus,formCode}from'../../components/Enumeration';import{ListWrapper}from'../../components/client-group.styles';import{LocalizationProvider}from'@progress/kendo-react-intl';import ReactTooltip from'react-tooltip';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSync}from'@fortawesome/free-solid-svg-icons';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var UserRoleConfiguration=/*#__PURE__*/function(_React$Component){_inherits(UserRoleConfiguration,_React$Component);var _super=_createSuper(UserRoleConfiguration);function UserRoleConfiguration(props){var _this;_classCallCheck(this,UserRoleConfiguration);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){loadEsign=false;openModal=false;selectedRecord={};var data=_toConsumableArray(_this.state.data);if(_this.state.selectedUserRole[_this.state.columnName]===transactionStatus.YES){data[_this.state.rowIndex][_this.state.columnName]=transactionStatus.NO;}else{data[_this.state.rowIndex][_this.state.columnName]=transactionStatus.YES;}_this.setState({data:data});}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.onSaveClick=function(selectedRecord,saveType,formRef){var operation=\"\";var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;// edit    \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]=selectedRecord;_this.extractedColumnList.map(function(item){return inputData[_this.props.Login.inputParam.methodUrl.toLowerCase()][item]=selectedRecord[item]?selectedRecord[item]:\"\";});operation=\"update\";var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,114)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:operation//this.props.Login.operation\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}//this.props.crudMaster(inputParam);\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.columnWidth=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={addScreen:false,data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,selectedUserRole:{},columnName:'',rowIndex:0};return _this;}_createClass(UserRoleConfiguration,[{key:\"render\",value:function render(){var _this2=this;//  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\n// this.columnWidth = [{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" }];\n// this.columnWidth = [{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" }];\nthis.extractedColumnList=[\"nuserrolecode\",\"suserrolename\",\"nneedapprovalflow\",\"nneedresultflow\"];//, \"nneedproductflow\", \"nwithdrawnmail\"\nvar pageSizes=this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.userInfo.slanguagetypecode},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid// className={this.setPercentage()}\n// sortable\n,Object.assign({className:\"active-paging\",style:{height:'600px'},resizable:true,reorderable:true//scrollable=\"none\"\n,scrollable:\"scrollable\",pageable:{buttonCount:5,pageSizes:pageSizes,previousNext:false},data:this.state.dataResult},this.state.dataState,{onDataStateChange:this.dataStateChange}),/*#__PURE__*/React.createElement(GridToolbar,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.reloadData();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync}))),/*#__PURE__*/React.createElement(GridColumn,{field:\"suserrolename\",columnMenu:ColumnMenu,title:this.props.intl.formatMessage({id:\"IDS_USERROLENAME\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"]['suserrolename']// data-for=\"tooltip-grid-wrap\"\n},row[\"dataItem\"]['suserrolename']);}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"nneedapprovalflow\",title:this.props.intl.formatMessage({id:\"IDS_NEEDAPPROVALFLOW\"}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}// data-tip={\"kfkf\"} \n//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedapprovalflow\"],onChange:function onChange(event){return _this2.onInputOnChangeRole(event,row[\"dataItem\"],\"nneedapprovalflow\",row.dataIndex);},checked:row[\"dataItem\"][\"nneedapprovalflow\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolecode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"nneedresultflow\",title:this.props.intl.formatMessage({id:\"IDS_NEEDRESULTFLOW\"}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}//data-tip=\"jdjd\" \n//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedresultflow\"],onChange:function onChange(event){return _this2.onInputOnChangeRole(event,row[\"dataItem\"],\"nneedresultflow\",row.dataIndex);},checked:row[\"dataItem\"][\"nneedresultflow\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolecode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}),this.props.Login.userRoleControlRights&&this.props.Login.userRoleControlRights[formCode.PROJECT]&&this.props.Login.userRoleControlRights[formCode.PROJECT].length>0?/*#__PURE__*/React.createElement(GridColumn,{field:\"nneedprojectflow\",title:this.props.intl.formatMessage({id:\"IDS_NEEDPROJECTFLOW\"}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}//data-tip=\"jdjd\" \n//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedprojectflow\"],onChange:function onChange(event){return _this2.onInputOnChangeRole(event,row[\"dataItem\"],\"nneedprojectflow\",row.dataIndex);},checked:row[\"dataItem\"][\"nneedprojectflow\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolecode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}):\"\"))))))),/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(React.Fragment,null)}));}// setPercentage = () => {\n//     let styles = css;\n//     let idx = 1;\n//     this.columnWidth.forEach(item => {\n//         styles += `.k-grid-header col:nth-of-type(${idx}){\n//                 width: ${item.width}\n//             }\n//             .k-grid-table col:nth-of-type(${idx}){\n//                 width: ${item.width}\n//             }`\n//         idx++;\n//     })\n// }\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){ReactTooltip.rebuild();if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,this.state.dataState)});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}// if (this.props.Login.masterData !== previousProps.Login.masterData) {\n//     this.setState({\n//         data: this.props.Login.masterData,\n//         addScreen: this.props.Login.showScreen,\n//         dataResult: process(this.props.Login.masterData, this.state.dataState),\n//     });\n// }\n}},{key:\"onInputOnChangeRole\",value:function onInputOnChangeRole(event,rowItem,columnName,rowIndex){var selectedRecord=rowItem||{};var selectedUserRole=rowItem||{};var isCheck=false;var editUserRoleConfiguration=this.state.controlMap.has(\"EditUserRoleConfiguration\")&&this.state.controlMap.get(\"EditUserRoleConfiguration\").ncontrolcode;if(this.state.userRoleControlRights.indexOf(editUserRoleConfiguration)!=-1){if(columnName===\"nneedresultflow\"){if(event.target.checked===true){if(rowItem[\"nneedapprovalflow\"]===transactionStatus.YES){toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAPPROVALFLOWORRESULTFLOW\"}));}else{isCheck=true;}}else{// toast.warn(\"If you want deselect, Select another role\");\nisCheck=true;}}else if(columnName===\"nneedapprovalflow\"){if(event.target.checked===true){if(rowItem[\"nneedresultflow\"]===transactionStatus.YES){toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAPPROVALFLOWORRESULTFLOW\"}));}else{isCheck=true;}}else{isCheck=true;}}else if(columnName===\"nneedproductflow\"||columnName===\"nwithdrawnmail\"||columnName===\"nfailmail\"||columnName===\"nneedprojectflow\"){isCheck=true;}if(isCheck===true){selectedRecord[columnName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;selectedUserRole[columnName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;this.onSaveClick(selectedRecord,undefined,undefined);this.setState({selectedUserRole:selectedUserRole,columnName:columnName,rowIndex:rowIndex});}}}}]);return UserRoleConfiguration;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(UserRoleConfiguration));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/UserRoleConfiguration.jsx"],"names":["React","connect","injectIntl","Row","Col","Button","Grid","GridColumn","GridToolbar","process","toast","ColumnMenu","CustomSwitch","SlideOutModal","Esign","callService","crudMaster","updateStore","validateEsignCredential","DEFAULT_RETURN","showEsign","getControlMap","transactionStatus","formCode","ListWrapper","LocalizationProvider","ReactTooltip","FontAwesomeIcon","faSync","AtTableWrap","mapStateToProps","state","Login","UserRoleConfiguration","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedUserRole","columnName","YES","rowIndex","NO","updateInfo","typeName","onInputOnChange","target","name","checked","value","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","onSaveClick","saveType","formRef","operation","toLowerCase","extractedColumnList","map","item","userRoleControlRights","nformcode","screenData","masterData","screenName","intl","formatMessage","id","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","columnWidth","skip","take","settings","parseInt","addScreen","masterStatus","error","pageSizes","split","setting","slanguagetypecode","height","buttonCount","previousNext","row","textAlign","onInputOnChangeRole","dataIndex","columnIndex","PROJECT","length","previousProps","rebuild","Object","values","push","ncontrolcode","controlMap","isOpen","rowItem","isCheck","editUserRoleConfiguration","has","get","indexOf","warn","undefined","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport { Grid, GridColumn, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\n// import { css } from 'styled-components';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport { transactionStatus, formCode } from '../../components/Enumeration';\r\nimport { ListWrapper } from '../../components/client-group.styles'\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass UserRoleConfiguration extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.columnWidth = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            selectedUserRole: {}, columnName: '', rowIndex: 0\r\n        }\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            const data = [...this.state.data];\r\n            if (this.state.selectedUserRole[this.state.columnName] === transactionStatus.YES) {\r\n                data[this.state.rowIndex][this.state.columnName] = transactionStatus.NO;\r\n\r\n            }\r\n            else {\r\n                data[this.state.rowIndex][this.state.columnName] = transactionStatus.YES;\r\n\r\n            }\r\n            this.setState({ data });\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    render() {\r\n        //  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\r\n        // this.columnWidth = [{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" },{ \"width\": \"35%\" }];\r\n        // this.columnWidth = [{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" },{ \"width\": \"20%\" }];\r\n        this.extractedColumnList = [\"nuserrolecode\", \"suserrolename\", \"nneedapprovalflow\", \"nneedresultflow\"];\r\n        //, \"nneedproductflow\", \"nwithdrawnmail\"\r\n        const pageSizes = this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (<>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n                        {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n\r\n                        <AtTableWrap className=\"at-list-table\">\r\n                            <LocalizationProvider language={this.props.Login.userInfo.slanguagetypecode}>\r\n                                <>\r\n                                    <Grid\r\n                                        // className={this.setPercentage()}\r\n                                        // sortable\r\n                                        className={\"active-paging\"}\r\n                                        style={{ height: '600px' }}\r\n                                        resizable\r\n                                        reorderable\r\n                                        //scrollable=\"none\"\r\n                                        scrollable={\"scrollable\"}\r\n                                        pageable={{ buttonCount: 5, pageSizes: pageSizes, previousNext: false }}\r\n                                        data={this.state.dataResult}\r\n                                        {...this.state.dataState}\r\n                                        onDataStateChange={this.dataStateChange}>\r\n                                        <GridToolbar>\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.reloadData()}>\r\n                                                <FontAwesomeIcon icon={faSync} />\r\n                                            </Button>\r\n                                        </GridToolbar>\r\n\r\n                                        <GridColumn\r\n                                            field=\"suserrolename\"\r\n                                            columnMenu={ColumnMenu}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_USERROLENAME\" })}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"]['suserrolename']}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                >\r\n                                                    {row[\"dataItem\"]['suserrolename']}\r\n                                                </td>\r\n                                            )}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nneedapprovalflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDAPPROVALFLOW\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}\r\n                                                // data-tip={\"kfkf\"} \r\n                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                >\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedapprovalflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedapprovalflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedapprovalflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nneedresultflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDRESULTFLOW\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}\r\n                                                //data-tip=\"jdjd\" \r\n                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                >\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedresultflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedresultflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedresultflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        {/* {  this.props.Login.masterData[0].nprojectcheck !=='0'? :\"\"} */}\r\n                                        {\r\n                                        this.props.Login.userRoleControlRights && \r\n                                        this.props.Login.userRoleControlRights[formCode.PROJECT] &&\r\n                                        this.props.Login.userRoleControlRights[formCode.PROJECT].length >0  ?  \r\n\r\n                                        <GridColumn\r\n                                            field={\"nneedprojectflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDPROJECTFLOW\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}\r\n                                                //data-tip=\"jdjd\" \r\n                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                >\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedprojectflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedprojectflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedprojectflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        :\"\"}\r\n\r\n                                        {/* <GridColumn\r\n                                            field={\"nneedproductflow\"}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_NEEDPRODUCTFLOW\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedproductflow\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nneedproductflow\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nneedproductflow\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nwithdrawnmail\"}\r\n                                            width=\"175px\"\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_WITHDRAWNEMAIL\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nwithdrawnmail\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nwithdrawnmail\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nwithdrawnmail\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        />\r\n                                        <GridColumn\r\n                                            field={\"nfailmail\"}\r\n                                            width=\"175px\"\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_FAILEMAIL\" })}\r\n                                            headerClassName=\"text-center\"\r\n                                            cell={(row) => (\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nfailmail\"]}\r\n                                                        onChange={(event) => this.onInputOnChangeRole(event, row[\"dataItem\"], \"nfailmail\", row.dataIndex)}\r\n                                                        checked={row[\"dataItem\"][\"nfailmail\"] === transactionStatus.YES ? true : false}\r\n                                                        name={row[\"dataItem\"][\"nuserrolecode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                </td>)}\r\n                                        /> */}\r\n                                    </Grid>\r\n                                </>\r\n                            </LocalizationProvider>\r\n                        </AtTableWrap>\r\n                        {/* <ReactTooltip/> */}\r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n            <SlideOutModal show={this.props.Login.openModal}\r\n                closeModal={this.closeModal}\r\n                operation={this.props.Login.operation}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName={this.props.Login.screenName}\r\n                onSaveClick={this.onSaveClick}\r\n                esign={this.props.Login.loadEsign}\r\n                validateEsign={this.validateEsign}\r\n                masterStatus={this.props.Login.masterStatus}\r\n                updateStore={this.props.updateStore}\r\n                selectedRecord={this.state.selectedRecord}\r\n                addComponent={this.props.Login.loadEsign ?\r\n                    <Esign operation={this.props.Login.operation}\r\n                        formatMessage={this.props.intl.formatMessage}\r\n                        onInputOnChange={this.onInputOnChange}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                    />\r\n                    :\r\n                    <>\r\n                    </>\r\n                }\r\n            />\r\n        </>\r\n        );\r\n    }\r\n\r\n    // setPercentage = () => {\r\n    //     let styles = css;\r\n    //     let idx = 1;\r\n    //     this.columnWidth.forEach(item => {\r\n    //         styles += `.k-grid-header col:nth-of-type(${idx}){\r\n    //                 width: ${item.width}\r\n    //             }\r\n    //             .k-grid-table col:nth-of-type(${idx}){\r\n    //                 width: ${item.width}\r\n    //             }`\r\n    //         idx++;\r\n    //     })\r\n    // }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n        //     this.setState({\r\n        //         data: this.props.Login.masterData,\r\n        //         addScreen: this.props.Login.showScreen,\r\n        //         dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n        //     });\r\n        // }\r\n    }\r\n    onInputOnChangeRole(event, rowItem, columnName, rowIndex) {\r\n\r\n        const selectedRecord = rowItem || {};\r\n        const selectedUserRole = rowItem || {};\r\n        let isCheck = false;\r\n        let editUserRoleConfiguration = this.state.controlMap.has(\"EditUserRoleConfiguration\") && this.state.controlMap.get(\"EditUserRoleConfiguration\").ncontrolcode;\r\n\r\n        if (this.state.userRoleControlRights.indexOf(editUserRoleConfiguration) != -1) {\r\n            if (columnName === \"nneedresultflow\") {\r\n                if (event.target.checked === true) {\r\n                    if (rowItem[\"nneedapprovalflow\"] === transactionStatus.YES) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVALFLOWORRESULTFLOW\" }));\r\n                    }\r\n                    else {\r\n                        isCheck = true;\r\n                    }\r\n                }\r\n                else {\r\n                    // toast.warn(\"If you want deselect, Select another role\");\r\n                    isCheck = true;\r\n                }\r\n\r\n            }\r\n            else if (columnName === \"nneedapprovalflow\") {\r\n                if (event.target.checked === true) {\r\n                    if (rowItem[\"nneedresultflow\"] === transactionStatus.YES) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVALFLOWORRESULTFLOW\" }));\r\n                    }\r\n                    else {\r\n                        isCheck = true;\r\n                    }\r\n                }\r\n                else {\r\n                    isCheck = true;\r\n                }\r\n            }\r\n            else if (columnName === \"nneedproductflow\" || columnName === \"nwithdrawnmail\" || columnName === \"nfailmail\" || columnName === \"nneedprojectflow\") {\r\n                isCheck = true;\r\n            }\r\n\r\n            if (isCheck === true) {\r\n                selectedRecord[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                selectedUserRole[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                this.onSaveClick(selectedRecord, undefined, undefined);\r\n                this.setState({ selectedUserRole, columnName, rowIndex });\r\n            }\r\n        }\r\n\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.name === \"agree\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n\r\n    onSaveClick = (selectedRecord, saveType, formRef) => {\r\n\r\n        let operation = \"\";\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        // edit    \r\n        inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = selectedRecord;\r\n        this.extractedColumnList.map(item => {\r\n            return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n        })\r\n        operation = \"update\";\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, 114)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: operation//this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n        //this.props.crudMaster(inputParam);\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, updateStore, validateEsignCredential })(injectIntl(UserRoleConfiguration));"]},"metadata":{},"sourceType":"module"}