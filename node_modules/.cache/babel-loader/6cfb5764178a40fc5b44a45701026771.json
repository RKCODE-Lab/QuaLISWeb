{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\batchruncreation\\\\BatchIqcSampleTab.jsx\";\nimport React from 'react';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage } from 'react-intl';\n\nconst BatchIqcSampleTab = props => {\n  const addIqcSampleId = props.controlMap.has(\"AddIQCSample\") && props.controlMap.get(\"AddIQCSample\").ncontrolcode; // const sampleColumnList = [];\n  // if (props.nneedsubsample){\n  //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\n  // }\n  // else{\n  //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\n  // }\n\n  const deleteParam = {\n    operation: \"delete\"\n  };\n  const batchIqcColumnList = [];\n  batchIqcColumnList.push({\n    \"idsName\": \"IDS_IQCSAMPLE\",\n    \"dataField\": \"smaterialname\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_IQCSAMPLEARNO\",\n    \"dataField\": \"sarno\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_AVAILABLEQTY\",\n    \"dataField\": \"savailablequatity\",\n    \"width\": \"170px\"\n  }, {\n    \"idsName\": \"IDS_ISSUEDQTY\",\n    \"dataField\": \"nqtyused\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_UNIT\",\n    \"dataField\": \"sunitname\",\n    \"width\": \"100px\"\n  }, {\n    \"idsName\": \"IDS_INVENTORYID\",\n    \"dataField\": \"sinventoryid\",\n    \"width\": \"155px\"\n  }, {\n    \"idsName\": \"IDS_REMARKS\",\n    \"dataField\": \"sremarks\",\n    \"width\": \"155px\"\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addiqcsample\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addIqcSampleId) === -1,\n    onClick: props.getIqcSamples,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_IQCSAMPLE\",\n    defaultMessage: \"IQCSamples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    key: \"nbatchsampleiqccode\",\n    primaryKeyField: \"nbatchsampleiqccode\",\n    data: props.iqcsample && props.iqcsample.length > 0 ? props.iqcsample : [],\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: batchIqcColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    userInfo: props.userInfo,\n    pageable: true,\n    methodUrl: props.methodUrl,\n    deleteParam: deleteParam,\n    deleteRecord: props.cancelRecord //cancelRecord={props.cancelRecord}\n    ,\n    scrollable: 'scrollable',\n    gridHeight: '375px',\n    hideDetailBand: true // width={'600px'}\n    ,\n    isActionRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default BatchIqcSampleTab;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/batchruncreation/BatchIqcSampleTab.jsx"],"names":["React","Nav","Row","Col","DataGrid","faPlus","FontAwesomeIcon","FormattedMessage","BatchIqcSampleTab","props","addIqcSampleId","controlMap","has","get","ncontrolcode","deleteParam","operation","batchIqcColumnList","push","userRoleControlRights","indexOf","getIqcSamples","iqcsample","length","dataResult","dataState","dataStateChange","userInfo","methodUrl","cancelRecord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,GAAlB,QAA6B,iBAA7B;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAU;AAChC,QAAMC,cAAc,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,cAArB,KAAwCH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,cAArB,EAAqCC,YAApG,CADgC,CAGhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAApB;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AAEAA,EAAAA,kBAAkB,CAACC,IAAnB,CACI;AAAC,eAAU,eAAX;AAA2B,iBAAY,eAAvC;AAAuD,aAAQ;AAA/D,GADJ,EAEI;AAAC,eAAU,mBAAX;AAA+B,iBAAY,OAA3C;AAAmD,aAAQ;AAA3D,GAFJ,EAGI;AAAC,eAAU,kBAAX;AAA8B,iBAAY,mBAA1C;AAA8D,aAAQ;AAAtE,GAHJ,EAII;AAAC,eAAU,eAAX;AAA2B,iBAAY,UAAvC;AAAkD,aAAQ;AAA1D,GAJJ,EAKI;AAAC,eAAU,UAAX;AAAsB,iBAAY,WAAlC;AAA8C,aAAQ;AAAtD,GALJ,EAMI;AAAC,eAAU,iBAAX;AAA6B,iBAAY,cAAzC;AAAwD,aAAQ;AAAhE,GANJ,EAOI;AAAC,eAAU,aAAX;AAAyB,iBAAY,UAArC;AAAgD,aAAQ;AAAxD,GAPJ;AAWA,sBACI,uDACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,cAAf;AAA8B,IAAA,SAAS,EAAC,aAAxC;AAAsD,IAAA,MAAM,EAAET,KAAK,CAACU,qBAAN,CAA4BC,OAA5B,CAAoCV,cAApC,MAAwD,CAAC,CAAvH;AACQ,IAAA,OAAO,EAAED,KAAK,CAACY,aADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGQ,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAKhB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,oBAIQ,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ,CADP,CADD,eAYA,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAC,qBADR;AAEI,IAAA,eAAe,EAAG,qBAFtB;AAGI,IAAA,IAAI,EAAII,KAAK,CAACa,SAAN,IAAmBb,KAAK,CAACa,SAAN,CAAgBC,MAAhB,GAAyB,CAA5C,GAAgDd,KAAK,CAACa,SAAtD,GAAiE,EAH7E;AAII,IAAA,UAAU,EAAIb,KAAK,CAACe,UAJxB;AAKI,IAAA,SAAS,EAAIf,KAAK,CAACgB,SALvB;AAMI,IAAA,eAAe,EAAIhB,KAAK,CAACiB,eAN7B;AAOI,IAAA,mBAAmB,EAAIT,kBAP3B;AAQI,IAAA,UAAU,EAAIR,KAAK,CAACE,UARxB;AASI,IAAA,qBAAqB,EAAEF,KAAK,CAACU,qBATjC;AAUI,IAAA,QAAQ,EAAEV,KAAK,CAACkB,QAVpB;AAWI,IAAA,QAAQ,EAAE,IAXd;AAYI,IAAA,SAAS,EAAElB,KAAK,CAACmB,SAZrB;AAaI,IAAA,WAAW,EAAEb,WAbjB;AAcI,IAAA,YAAY,EAAEN,KAAK,CAACoB,YAdxB,CAeI;AAfJ;AAgBI,IAAA,UAAU,EAAE,YAhBhB;AAiBI,IAAA,UAAU,EAAI,OAjBlB;AAkBI,IAAA,cAAc,EAAE,IAlBpB,CAmBI;AAnBJ;AAoBI,IAAA,gBAAgB,EAAE,IApBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAZA,CADJ;AA0CH,CAnED;;AAoEA,eAAerB,iBAAf","sourcesContent":["import React from 'react';\r\nimport {Nav, Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst BatchIqcSampleTab = (props) =>{\r\n    const addIqcSampleId = props.controlMap.has(\"AddIQCSample\") && props.controlMap.get(\"AddIQCSample\").ncontrolcode;\r\n    \r\n    // const sampleColumnList = [];\r\n    \r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n    const deleteParam = { operation: \"delete\" };\r\n    const batchIqcColumnList = [];\r\n\r\n    batchIqcColumnList.push(   \r\n        {\"idsName\":\"IDS_IQCSAMPLE\",\"dataField\":\"smaterialname\",\"width\":\"155px\"},\r\n        {\"idsName\":\"IDS_IQCSAMPLEARNO\",\"dataField\":\"sarno\",\"width\":\"155px\"},\r\n        {\"idsName\":\"IDS_AVAILABLEQTY\",\"dataField\":\"savailablequatity\",\"width\":\"170px\"},\r\n        {\"idsName\":\"IDS_ISSUEDQTY\",\"dataField\":\"nqtyused\",\"width\":\"155px\"},\r\n        {\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"100px\"},\r\n        {\"idsName\":\"IDS_INVENTORYID\",\"dataField\":\"sinventoryid\",\"width\":\"155px\"},\r\n        {\"idsName\":\"IDS_REMARKS\",\"dataField\":\"sremarks\",\"width\":\"155px\"},\r\n        \r\n     );\r\n    \r\n    return (\r\n        <>\r\n         <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addiqcsample\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addIqcSampleId) === -1}\r\n                            onClick={props.getIqcSamples}\r\n                    >\r\n                            <FontAwesomeIcon icon = { faPlus } /> { }\r\n                            <FormattedMessage id=\"IDS_IQCSAMPLE\" defaultMessage=\"IQCSamples\"></FormattedMessage>\r\n                        </Nav.Link>\r\n                </div>\r\n            </div>\r\n    \r\n        <Row noGutters>\r\n            <Col md={12}>\r\n                <DataGrid\r\n                    key=\"nbatchsampleiqccode\"\r\n                    primaryKeyField = \"nbatchsampleiqccode\"\r\n                    data = {props.iqcsample && props.iqcsample.length > 0 ? props.iqcsample :[]}\r\n                    dataResult = {props.dataResult}\r\n                    dataState = {props.dataState}\r\n                    dataStateChange = {props.dataStateChange}\r\n                    extractedColumnList = {batchIqcColumnList}\r\n                    controlMap = {props.controlMap}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    userInfo={props.userInfo}\r\n                    pageable={true}\r\n                    methodUrl={props.methodUrl}\r\n                    deleteParam={deleteParam}\r\n                    deleteRecord={props.cancelRecord}\r\n                    //cancelRecord={props.cancelRecord}\r\n                    scrollable={'scrollable'}\r\n                    gridHeight = {'375px'}\r\n                    hideDetailBand={true}\r\n                    // width={'600px'}\r\n                    isActionRequired={true}\r\n                >\r\n                </DataGrid>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\nexport default BatchIqcSampleTab;\r\n"]},"metadata":{},"sourceType":"module"}