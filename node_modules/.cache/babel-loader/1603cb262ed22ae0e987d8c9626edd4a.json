{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingupdate\\\\AddTraineeDocFile.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../../components/dropzone/dropzone.component';\nimport { Row, Col } from 'react-bootstrap';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\n\nconst AddTraineeDocFile = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"sfilename\",\n    label: props.label,\n    isMandatory: true,\n    maxFiles: props.maxFiles,\n    minSize: 0,\n    maxSize: props.maxSize,\n    onDrop: event => props.onDrop(event, \"sfilename\", props.maxFiles),\n    actionType: props.actionType,\n    deleteAttachment: props.deleteAttachment,\n    multiple: props.multiple,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sfiledesc\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sfiledesc\"],\n    isMandatory: false,\n    required: true,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddTraineeDocFile);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/trainingupdate/AddTraineeDocFile.jsx"],"names":["React","injectIntl","DropZone","Row","Col","FormTextarea","AddTraineeDocFile","props","label","maxFiles","maxSize","event","onDrop","actionType","deleteAttachment","multiple","selectedRecord","intl","formatMessage","id","onInputOnChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,2DAAzB;;AAGA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAE/B,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,QAAD;AACI,IAAA,IAAI,EAAE,WADV;AAEI,IAAA,KAAK,EAAEA,KAAK,CAACC,KAFjB;AAGI,IAAA,WAAW,EAAE,IAHjB;AAII,IAAA,QAAQ,EAAED,KAAK,CAACE,QAJpB;AAKI,IAAA,OAAO,EAAE,CALb;AAMI,IAAA,OAAO,EAAEF,KAAK,CAACG,OANnB;AAOI,IAAA,MAAM,EAAGC,KAAD,IAAWJ,KAAK,CAACK,MAAN,CAAaD,KAAb,EAAoB,WAApB,EAAiCJ,KAAK,CAACE,QAAvC,CAPvB;AAQI,IAAA,UAAU,EAAEF,KAAK,CAACM,UARtB;AASI,IAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAT5B;AAUI,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QAVpB;AAWI,IAAA,SAAS,EAAER,KAAK,CAACS,cAAN,GAAuBT,KAAK,CAACS,cAA7B,GAA8C,EAX7D;AAYI,IAAA,YAAY,EAAC,WAZjB;AAaI,IAAA,QAAQ,EAAC,WAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAiBI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAE,WADV;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAGT,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHZ;AAII,IAAA,WAAW,EAAGZ,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAJlB;AAKI,IAAA,KAAK,EAAIZ,KAAK,CAACS,cAAN,CAAqB,WAArB,CALb;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,SAAS,EAAE,EARf;AASI,IAAA,QAAQ,EAAGL,KAAD,IAAUJ,KAAK,CAACa,eAAN,CAAsBT,KAAtB,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ,CADJ;AAmCH,CArCD;;AAuCA,eAAeV,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst AddTraineeDocFile = props => {\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                    <DropZone\r\n                        name={\"sfilename\"}\r\n                        label={props.label}\r\n                        isMandatory={true}\r\n                        maxFiles={props.maxFiles}\r\n                        minSize={0}\r\n                        maxSize={props.maxSize}\r\n                        onDrop={(event) => props.onDrop(event, \"sfilename\", props.maxFiles)}\r\n                        actionType={props.actionType}\r\n                        deleteAttachment={props.deleteAttachment}\r\n                        multiple={props.multiple}\r\n                        editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                        fileSizeName=\"nfilesize\"\r\n                        fileName=\"sfilename\"\r\n                    />\r\n            \r\n                <FormTextarea\r\n                    name={\"sfiledesc\"}\r\n                    type=\"text\"\r\n                    label={ props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}                  \r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                    value ={ props.selectedRecord[\"sfiledesc\"]}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    onChange={(event)=> props.onInputOnChange(event)}\r\n                >\r\n                </FormTextarea>\r\n                \r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTraineeDocFile);"]},"metadata":{},"sourceType":"module"}