{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddRegistrationSubtypeConfigUserRole.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddRegistrationSubtypeConfigUserRole = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERROLE\"\n    }),\n    isSearchable: true,\n    name: \"nuserrolecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Lab,\n    optionId: \"nuserrolecode\",\n    optionValue: \"suserrolename\",\n    disableSearch: false,\n    value: props.selectedRecord[\"nuserrolecode\"],\n    defaultValue: props.selectedRecord[\"nuserrolecode\"],\n    onChange: event => props.onComboChange(event, \"nuserrolecode\", 4),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ndeltacheck\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ALLUSERS\"\n    }),\n    type: \"switch\",\n    onChange: event => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO]),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DELTACHECK\"\n    }),\n    defaultValue: props.selectedRecord[\"ndeltacheck\"] === 3 ? true : false,\n    checked: props.selectedRecord[\"ndeltacheck\"] === 3 ? true : false,\n    disabled: props.isdisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }\n  }), props.selectedRecord[\"ndeltacheck\"] === 4 ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERS\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\" //isDisabled={props.selectedRecord[\"ndeltacheck\"]===3? true:false}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Users || [],\n    isMulti: true,\n    value: props.selectedRecord[\"nusercode\"] || \"\",\n    onChange: event => props.onComboChange(event, \"nusercode\", 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }) : \"\"));\n};\n\nexport default injectIntl(AddRegistrationSubtypeConfigUserRole);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/credentialmanagement/AddRegistrationSubtypeConfigUserRole.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","CustomSwitch","transactionStatus","AddRegistrationSubtypeConfigUserRole","props","intl","formatMessage","id","Lab","selectedRecord","event","onComboChange","onInputOnChange","YES","NO","isdisable","Users"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\nconst AddRegistrationSubtypeConfigUserRole = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_USERROLE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nuserrolecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Lab}\r\n                    optionId='nuserrolecode'\r\n                    optionValue='suserrolename'\r\n                    disableSearch={false}\r\n                    value={props.selectedRecord[\"nuserrolecode\"]}\r\n                    defaultValue={props.selectedRecord[\"nuserrolecode\"]}\r\n                    onChange={(event) => props.onComboChange(event, \"nuserrolecode\", 4)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n\r\n                />\r\n\r\n<CustomSwitch\r\n                    name={\"ndeltacheck\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_ALLUSERS\"})}\r\n                    type=\"switch\"\r\n                    onChange={(event)=>props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DELTACHECK\"})}\r\n                    defaultValue ={props.selectedRecord[\"ndeltacheck\"] === 3 ? true :false}\r\n                    checked={props.selectedRecord[\"ndeltacheck\"] === 3 ? true :false}\r\n                   disabled={props.isdisable}\r\n                >\r\n            </CustomSwitch>\r\n{ props.selectedRecord[\"ndeltacheck\"]=== 4 ?\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    //isDisabled={props.selectedRecord[\"ndeltacheck\"]===3? true:false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Users || []}\r\n                    isMulti={true}        \r\n                    value={props.selectedRecord[\"nusercode\"] || \"\"}  \r\n                    onChange={(event) => props.onComboChange(event, \"nusercode\", 1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />:\"\"\r\n}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddRegistrationSubtypeConfigUserRole);"]},"metadata":{},"sourceType":"module"}