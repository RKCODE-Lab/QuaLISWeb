{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddOpenDate.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddOpenDate = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntranscode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.Status,\n    value: props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    isMulti: false,\n    isSearchable: true,\n    isMandatory: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntranscode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dopendate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_OPENDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dopendate\"],\n    dateFormat: props.userInfo.ssitedate,\n    minDate: props.currentTime,\n    isClearable: false,\n    required: true,\n    isMandatory: true,\n    onChange: date => props.handleDateChange(\"dopendate\", date),\n    value: props.selectedRecord[\"dopendate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzopendate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzopendate\"],\n    defaultValue: props.selectedRecord[\"ntzopendate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzopendate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_REASON\"\n    }),\n    name: \"sopenreason\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_OPENREASON\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddOpenDate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/instrumentmanagement/AddOpenDate.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormTextarea","FormSelectSearch","transactionStatus","AddOpenDate","props","intl","formatMessage","id","Status","selectedRecord","event","onComboChange","userInfo","istimezoneshow","YES","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddOpenDate = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"ntranscode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.Status}\r\n                    value={props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isMandatory={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => props.onComboChange(event, 'ntranscode', 1)}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dopendate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_OPENDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dopendate\"]}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    minDate={props.currentTime}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    onChange={date => props.handleDateChange(\"dopendate\", date)}\r\n                    value={props.selectedRecord[\"dopendate\"]}\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzopendate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzopendate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzopendate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzopendate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                    name={\"sopenreason\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_OPENREASON\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddOpenDate);"]},"metadata":{},"sourceType":"module"}