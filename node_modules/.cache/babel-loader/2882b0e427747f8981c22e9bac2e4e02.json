{"ast":null,"code":"import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';var DesignParameterTab=function DesignParameterTab(props){var addDesignId=props.controlMap.has(\"AddDashBoardDesignConfig\")&&props.controlMap.get(\"AddDashBoardDesignConfig\").ncontrolcode;//console.log(\"dataResult:\", props.dataResult, props.dataState);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addDesignId)===-1,onClick:function onClick(){return props.getAddDashboardDesign(props.masterData.selectedDashBoardTypes,props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DESIGNPARAMETER\",defaultMessage:\"Design Parameter\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ndashboardtypecode\",data:props.masterData[\"selectedDesignConfig\"],dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:props.extractedColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,pageable:false,scrollable:\"scrollable\",isComponent:false,isActionRequired:false,isToolBarRequired:false,selectedId:props.selectedId,name:props.name,hideColumnFilter:true}))));};export default injectIntl(DesignParameterTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/dashboardtypes/DesignParameterTab.js"],"names":["React","FormattedMessage","injectIntl","Row","Col","Nav","FontAwesomeIcon","faPlus","DataGrid","DesignParameterTab","props","addDesignId","controlMap","has","get","ncontrolcode","userRoleControlRights","indexOf","getAddDashboardDesign","masterData","selectedDashBoardTypes","userInfo","dataResult","dataState","dataStateChange","extractedColumnList","inputParam","selectedId","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAElC,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,0BAArB,GAAoDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,0BAArB,EAAiDC,YAAzH,CACA;AACA,mBAAQ,qDACJ,2BAAK,SAAS,CAAC,gBAAf,eACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,aAApB,CAAkC,MAAM,CAAEL,KAAK,CAACM,qBAAN,CAA4BC,OAA5B,CAAoCN,WAApC,IAAqD,CAAC,CAAhG,CACI,OAAO,CAAE,yBAAMD,CAAAA,KAAK,CAACQ,qBAAN,CAA4BR,KAAK,CAACS,UAAN,CAAiBC,sBAA7C,CAAqEV,KAAK,CAACW,QAA3E,CAAN,EADb,eAEI,oBAAC,eAAD,EAAiB,IAAI,CAAEd,MAAvB,EAFJ,kBAGI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,qBAArB,CAA2C,cAAc,CAAC,kBAA1D,EAHJ,CADJ,CADJ,CADI,cAWJ,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,QAAD,EAAU,eAAe,CAAE,oBAA3B,CACI,IAAI,CAAEG,KAAK,CAACS,UAAN,CAAiB,sBAAjB,CADV,CAEI,UAAU,CAAET,KAAK,CAACY,UAFtB,CAGI,SAAS,CAAEZ,KAAK,CAACa,SAHrB,CAII,eAAe,CAAEb,KAAK,CAACc,eAJ3B,CAKI,mBAAmB,CAAEd,KAAK,CAACe,mBAL/B,CAMI,UAAU,CAAEf,KAAK,CAACE,UANtB,CAOI,qBAAqB,CAAEF,KAAK,CAACM,qBAPjC,CAQI,UAAU,CAAEN,KAAK,CAACgB,UARtB,CASI,QAAQ,CAAEhB,KAAK,CAACW,QATpB,CAUI,QAAQ,CAAE,KAVd,CAWI,UAAU,CAAE,YAXhB,CAYI,WAAW,CAAE,KAZjB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,iBAAiB,CAAE,KAdvB,CAeI,UAAU,CAAEX,KAAK,CAACiB,UAftB,CAgBI,IAAI,CAAEjB,KAAK,CAACkB,IAhBhB,CAiBI,gBAAgB,CAAE,IAjBtB,EADJ,CADJ,CAXI,CAAR,CAoCH,CAxCD,CAyCA,cAAe1B,CAAAA,UAAU,CAACO,kBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nconst DesignParameterTab = (props) => {\r\n\r\n    const addDesignId = props.controlMap.has(\"AddDashBoardDesignConfig\") && props.controlMap.get(\"AddDashBoardDesignConfig\").ncontrolcode\r\n    //console.log(\"dataResult:\", props.dataResult, props.dataState);\r\n    return (<>\r\n        <div className=\"actions-stripe\">\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Nav.Link className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addDesignId) === -1}\r\n                    onClick={() => props.getAddDashboardDesign(props.masterData.selectedDashBoardTypes, props.userInfo)}>\r\n                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                    <FormattedMessage id='IDS_DESIGNPARAMETER' defaultMessage='Design Parameter' />\r\n                </Nav.Link>\r\n            </div>\r\n        </div>\r\n\r\n        <Row noGutters={true}>\r\n            <Col md={12}>\r\n                <DataGrid primaryKeyField={\"ndashboardtypecode\"}\r\n                    data={props.masterData[\"selectedDesignConfig\"]}\r\n                    dataResult={props.dataResult}\r\n                    dataState={props.dataState}\r\n                    dataStateChange={props.dataStateChange}\r\n                    extractedColumnList={props.extractedColumnList}\r\n                    controlMap={props.controlMap}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    inputParam={props.inputParam}\r\n                    userInfo={props.userInfo}\r\n                    pageable={false}\r\n                    scrollable={\"scrollable\"}\r\n                    isComponent={false}\r\n                    isActionRequired={false}\r\n                    isToolBarRequired={false}\r\n                    selectedId={props.selectedId}\r\n                    name={props.name}\r\n                    hideColumnFilter={true}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\nexport default injectIntl(DesignParameterTab);"]},"metadata":{},"sourceType":"module"}