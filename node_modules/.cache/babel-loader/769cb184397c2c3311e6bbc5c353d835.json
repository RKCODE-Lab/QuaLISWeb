{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\SupplierMaterialCategoryTab.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap'; //, Nav, Tab\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faPlus } from '@fortawesome/free-solid-svg-icons';//,faPencilAlt, faTrash\n\nimport { injectIntl } from 'react-intl'; //FormattedMessage,\n//import { Grid, GridColumn } from '@progress/kendo-react-grid';\n\nimport { process } from '@progress/kendo-data-query';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal'; //import Axios from 'axios';\n//import rsapi from '../../rsapi';\n\nimport { toast } from 'react-toastify';\nimport AddSupplierCategory from './AddSupplierCategory';\nimport AddMaterialCategory from './AddMaterialCategory';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { constructOptionList, showEsign } from '../../components/CommonScript'; //import DataGrid from '../../components/DataGrid';\n\nimport SupplierTabs from './SupplierTabs';\nimport { transactionStatus } from '../../components/Enumeration';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\n\nclass SupplierMaterialCategoryTab extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.supplierDataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.materialDataStateChange = event => {\n      this.setState({\n        dataStateMaterial: event.dataState\n      });\n    };\n\n    this.tabDetail = () => {\n      const addSupCatId = this.props.controlMap.has(\"AddSupplierCategory\") && this.props.controlMap.get(\"AddSupplierCategory\").ncontrolcode;\n      const deleteSupCatId = this.props.controlMap.has(\"DeleteSupplierCategory\") && this.props.controlMap.get(\"DeleteSupplierCategory\").ncontrolcode;\n      const addMatCatId = this.props.controlMap.has(\"AddMaterialCategory\") && this.props.controlMap.get(\"AddMaterialCategory\").ncontrolcode;\n      const deleteMatCatId = this.props.controlMap.has(\"DeleteMaterialCategory\") && this.props.controlMap.get(\"DeleteMaterialCategory\").ncontrolcode;\n      const supcatAddParam = {\n        screenName: \"Supplier Category\",\n        operation: \"create\",\n        primaryKeyField: \"nsuppliercatcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addSupCatId\n      };\n      const supcatDeleteParam = {\n        screenName: \"SupplierCategory\",\n        methodUrl: \"SupplierMatrix\",\n        operation: \"delete\",\n        ncontrolCode: deleteSupCatId\n      };\n      const matericatAddParam = {\n        screenName: \"Material Category\",\n        operation: \"create\",\n        primaryKeyField: \"nmaterialcatcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addMatCatId\n      };\n      const materialcatDeleteParam = {\n        screenName: \"MaterialCategory\",\n        methodUrl: \"SupplierMatrix\",\n        operation: \"delete\",\n        ncontrolCode: deleteMatCatId\n      };\n      const tabMap = new Map();\n      tabMap.set(\"IDS_SUPPLIERCATEGORY\", /*#__PURE__*/React.createElement(SupplierTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addSupCatId,\n        addParam: supcatAddParam,\n        comboDataService: this.props.getSupplierCategoryComboDataService,\n        addTitleIDS: \"IDS_SUPPLIERCATEGORY\",\n        addTitleDefaultMsg: 'SupplierCategory',\n        primaryKeyField: \"nsuppliermatrixcode\",\n        masterData: this.props.masterData,\n        primaryList: \"SupplierCategory\",\n        dataResult: process(this.props.masterData[\"SupplierCategory\"], this.state.dataState) // dataState={this.state.dataState}\n        // dataStateChange={this.supplierDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"SupplierCategory\" ? this.state.dataState : {\n          skip: 0\n        },\n        dataStateChange: event => this.setState({\n          dataState: event.data\n        }),\n        columnList: this.suppliercatColumnList,\n        methodUrl: \"SupplierMatrix\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: supcatDeleteParam //selectedId={this.props.selectedId}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 44\n        }\n      }));\n      tabMap.set(\"IDS_MATERIALCATEGORY\", /*#__PURE__*/React.createElement(SupplierTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addMatCatId,\n        addParam: matericatAddParam,\n        comboDataService: this.props.getMaterialCategoryComboDataService,\n        addTitleIDS: \"IDS_MATERIALCATEGORY\",\n        addTitleDefaultMsg: 'MaterialCategory',\n        primaryKeyField: \"nsuppliermatrixcode\",\n        masterData: this.props.masterData,\n        primaryList: \"MaterialCategory\",\n        dataResult: process(this.props.masterData[\"MaterialCategory\"], this.state.dataStateMaterial) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"MaterialCategory\" ? this.state.dataStateMaterial : {\n          skip: 0\n        },\n        dataStateChange: event => this.setState({\n          dataStateMaterial: event.data\n        }),\n        columnList: this.materialcatColumnList,\n        methodUrl: \"SupplierMatrix\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: materialcatDeleteParam //selectedId={this.props.selectedId}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 44\n        }\n      }));\n      return tabMap;\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord;\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n        }\n      } else {\n        openChildModal = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n\n      if (fieldName === \"nsuppliercatcode\") {\n        let selectedSupplierCategory = comboData;\n        this.setState({\n          selectedRecord,\n          selectedSupplierCategory\n        });\n      }\n\n      if (fieldName === \"nmaterialcatcode\") {\n        let selectedMaterialCategory = comboData;\n        this.setState({\n          selectedRecord,\n          selectedMaterialCategory\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit  \n      let inputParam = {};\n\n      if (this.props.screenName === \"Supplier Category\") {\n        inputParam = this.saveSupplierCategory(saveType, formRef);\n      } else if (this.props.screenName === \"Material Category\") {\n        inputParam = this.saveMaterial(saveType, formRef);\n      }\n\n      if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n      }\n    };\n\n    this.deleteRecord = supplierparam => {\n      if (this.props.masterData.SelectedSupplier.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.masterData.SelectedSupplier.stranstatus\n        }));\n      } else {\n        const inputParam = {\n          classUrl: \"suppliermatrix\",\n          methodUrl: supplierparam.methodUrl,\n          inputData: {\n            [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\n            \"userinfo\": this.props.userInfo\n          },\n          operation: supplierparam.operation,\n          //dataState: this.state.dataState,\n          //dataStateMaterial: this.state.dataStateMaterial\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, supplierparam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              openChildModal: true,\n              screenName: supplierparam.screenName,\n              operation: supplierparam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    const dataStateMaterial = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      isOpen: false,\n      selectedRecord: {},\n      dataResult: [],\n      activeTab: 'SupplierCategory-tab',\n      dataState: dataState,\n      dataStateMaterial: dataStateMaterial,\n      supplierCategory: [],\n      materialCategory: []\n    };\n    this.supplerCategoryFieldList = ['nsuppliercode', 'ncategorycode', 'ntypecode', 'ssuppliercatname', 'smaterialcatname', 'sremarks', 'ntransactionstatus'];\n    this.suppliercatColumnList = [{\n      \"idsName\": \"IDS_SUPPLIERCATNAME\",\n      \"dataField\": \"ssuppliercatname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    this.materialcatColumnList = [{\n      \"idsName\": \"IDS_MATERIALCATNAME\",\n      \"dataField\": \"smaterialcatname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    this.validationSuppliercatColumnList = [{\n      \"idsName\": \"IDS_SUPPLIERCATNAME\",\n      \"dataField\": \"nsuppliercatcode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.validationMaterialcatColumnList = [{\n      \"idsName\": \"IDS_MATERIALCATNAME\",\n      \"dataField\": \"nmaterialcatcode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  render() {\n    const mandatoryFields = [];\n    const matmandatoryFields = [];\n    this.validationSuppliercatColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    this.validationMaterialcatColumnList.forEach(item => item.mandatory === true ? matmandatoryFields.push(item) : \"\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.props.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    })))), this.props.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.onSaveClick,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.screenName === \"Supplier Category\" ? mandatoryFields : matmandatoryFields || [],\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"Supplier Category\" ? /*#__PURE__*/React.createElement(AddSupplierCategory, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        selectedSupplierCategory: this.props.masterData.selectedSupplierCategory,\n        supplierCategory: this.state.supplierCategory || [] //{this.props.supplierCategory || []}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddMaterialCategory, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedMaterialCategory: this.props.masterData.selectedMaterialCategory,\n        materialCategory: this.state.materialCategory //{this.props.materialCategory}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.masterData !== previousProps.masterData) {\n      let isOpen = false;\n\n      if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\n        isOpen = true;\n      }\n\n      let {\n        dataState,\n        dataStateMaterial\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        dataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\n          filter: undefined,\n          sort: undefined\n        };\n        dataStateMaterial = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\n          filter: undefined,\n          sort: undefined\n        };\n      }\n\n      this.setState({\n        isOpen,\n        activeTab: 'SupplierCategory-tab',\n        dataState,\n        dataStateMaterial\n      });\n    }\n\n    if (this.props.selectedRecord !== previousProps.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.selectedRecord\n      });\n    }\n\n    let {\n      dataState,\n      dataStateMaterial\n    } = this.state;\n\n    if (this.props.dataState !== previousProps.dataState && this.props.dataState !== dataState) {\n      dataState = {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      };\n      dataStateMaterial = {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      };\n      this.setState({\n        dataState,\n        dataStateMaterial\n      });\n    } // {\n    //     dataState={...dataState,filter:undefined,sort:undefined}\n    //     dataStateMaterial={...dataStateMaterial,filter:undefined,sort:undefined}\n    //     this.setState({ dataState, dataStateMaterial });\n    // }\n\n\n    if (this.props.supplierCategory !== previousProps.supplierCategory || this.props.materialCategory !== previousProps.materialCategory) {\n      const supplierCategory = constructOptionList(this.props.supplierCategory || [], \"nsuppliercatcode\", \"ssuppliercatname\", undefined, undefined, undefined);\n      const supplierCategoryList = supplierCategory.get(\"OptionList\");\n      const materialCategory = constructOptionList(this.props.materialCategory || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      const materialCategoryList = materialCategory.get(\"OptionList\");\n      this.setState({\n        supplierCategory: supplierCategoryList,\n        materialCategory: materialCategoryList\n      });\n    }\n  }\n\n  saveSupplierCategory(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    inputData[\"suppliermatrix\"] = {};\n    let dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    let suppliermatrixArray = [];\n    suppliermatrixArray = this.state.selectedRecord.nsuppliercatcode.map(item => {\n      let suppliermat = {};\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"ntypecode\"] = 1;\n      suppliermat[\"sremarks\"] = \"\";\n      suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n      suppliermat[\"ncategorycode\"] = item.value; //suppliermatrixArray.push(suppliermat);\n\n      return suppliermat;\n    });\n    inputData['suppliermatrix'] = suppliermatrixArray;\n    const inputParam = {\n      classUrl: \"suppliermatrix\",\n      methodUrl: \"SupplierMatrix\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState\n    };\n    return inputParam;\n  }\n\n  saveMaterial(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    inputData[\"suppliermatrix\"] = {};\n    let dataStateMaterial = undefined;\n    let suppliermatrixArray = [];\n    suppliermatrixArray = this.state.selectedRecord.nmaterialcatcode.map(item => {\n      let suppliermat = {};\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"ntypecode\"] = 2;\n      suppliermat[\"sremarks\"] = \"\";\n      suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n      suppliermat[\"ncategorycode\"] = item.value; //suppliermatrixArray.push(suppliermat);\n\n      return suppliermat;\n    });\n    inputData['suppliermatrix'] = suppliermatrixArray;\n    const inputParam = {\n      classUrl: \"suppliermatrix\",\n      methodUrl: \"SupplierMatrix\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataStateMaterial\n    };\n    return inputParam;\n  }\n\n}\n\nexport default injectIntl(SupplierMaterialCategoryTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/SupplierMaterialCategoryTab.jsx"],"names":["React","Row","Col","Card","injectIntl","process","SlideOutModal","toast","AddSupplierCategory","AddMaterialCategory","Esign","DEFAULT_RETURN","constructOptionList","showEsign","SupplierTabs","transactionStatus","CustomTabs","SupplierMaterialCategoryTab","Component","constructor","props","supplierDataStateChange","event","setState","dataState","materialDataStateChange","dataStateMaterial","tabDetail","addSupCatId","controlMap","has","get","ncontrolcode","deleteSupCatId","addMatCatId","deleteMatCatId","supcatAddParam","screenName","operation","primaryKeyField","masterData","userInfo","ncontrolCode","supcatDeleteParam","methodUrl","matericatAddParam","materialcatDeleteParam","tabMap","Map","set","userRoleControlRights","inputParam","getSupplierCategoryComboDataService","state","undefined","skip","data","suppliercatColumnList","deleteRecord","getMaterialCategoryComboDataService","materialcatColumnList","closeModal","loadEsign","openChildModal","selectedRecord","updateInfo","typeName","updateStore","onComboChange","comboData","fieldName","selectedSupplierCategory","selectedMaterialCategory","onInputOnChange","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","value","onSaveClick","saveType","formRef","saveSupplierCategory","saveMaterial","esignRights","nformcode","screenData","crudMaster","supplierparam","SelectedSupplier","ntransactionstatus","RETIRED","warn","intl","formatMessage","id","stranstatus","classUrl","inputData","toLowerCase","validateEsign","sreason","password","validateEsignCredential","take","settings","parseInt","isOpen","dataResult","activeTab","supplierCategory","materialCategory","supplerCategoryFieldList","validationSuppliercatColumnList","validationMaterialcatColumnList","render","mandatoryFields","matmandatoryFields","forEach","item","mandatory","push","onTabChange","componentDidUpdate","previousProps","errorCode","filter","sort","supplierCategoryList","materialCategoryList","suppliermatrixArray","nsuppliercatcode","map","suppliermat","nsuppliercode","nmaterialcatcode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap';//, Nav, Tab\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { faPlus } from '@fortawesome/free-solid-svg-icons';//,faPencilAlt, faTrash\r\nimport { injectIntl } from 'react-intl';//FormattedMessage,\r\n//import { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\n//import Axios from 'axios';\r\n//import rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport AddSupplierCategory from './AddSupplierCategory';\r\nimport AddMaterialCategory from './AddMaterialCategory';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { constructOptionList, showEsign } from '../../components/CommonScript';\r\n//import DataGrid from '../../components/DataGrid';\r\nimport SupplierTabs from './SupplierTabs';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n\r\nclass SupplierMaterialCategoryTab extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings? parseInt(this.props.settings[14]) : 5\r\n        };\r\n        const dataStateMaterial = {\r\n            skip: 0,\r\n            take:this.props.settings? parseInt(this.props.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            isOpen: false, selectedRecord: {}, dataResult: [],\r\n            activeTab: 'SupplierCategory-tab',\r\n            dataState: dataState,\r\n            dataStateMaterial: dataStateMaterial, supplierCategory: [], materialCategory: []\r\n        };\r\n        this.supplerCategoryFieldList = ['nsuppliercode', 'ncategorycode', 'ntypecode', 'ssuppliercatname', 'smaterialcatname',\r\n            'sremarks', 'ntransactionstatus'];\r\n        this.suppliercatColumnList = [{ \"idsName\": \"IDS_SUPPLIERCATNAME\", \"dataField\": \"ssuppliercatname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }];\r\n        this.materialcatColumnList = [{ \"idsName\": \"IDS_MATERIALCATNAME\", \"dataField\": \"smaterialcatname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }];\r\n        this.validationSuppliercatColumnList = [{ \"idsName\": \"IDS_SUPPLIERCATNAME\", \"dataField\": \"nsuppliercatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n        this.validationMaterialcatColumnList = [{ \"idsName\": \"IDS_MATERIALCATNAME\", \"dataField\": \"nmaterialcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n    }\r\n    supplierDataStateChange = (event) => {\r\n        this.setState({\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    materialDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateMaterial: event.dataState\r\n        });\r\n    }\r\n    render() {\r\n        const mandatoryFields = [];\r\n        const matmandatoryFields = [];\r\n        this.validationSuppliercatColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        this.validationMaterialcatColumnList.forEach(item => item.mandatory === true ?\r\n            matmandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card className=\"at-tabs\">\r\n                            <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.props.onTabChange} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.screenName === \"Supplier Category\" ? mandatoryFields : matmandatoryFields || []}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"Supplier Category\" ?\r\n                                <AddSupplierCategory selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    selectedSupplierCategory={this.props.masterData.selectedSupplierCategory}\r\n                                    supplierCategory={this.state.supplierCategory || []} //{this.props.supplierCategory || []}\r\n                                />\r\n                                : <AddMaterialCategory selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    operation={this.props.operation}\r\n                                    selectedMaterialCategory={this.props.masterData.selectedMaterialCategory}\r\n                                    materialCategory={this.state.materialCategory}//{this.props.materialCategory}\r\n                                />\r\n\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const addSupCatId = this.props.controlMap.has(\"AddSupplierCategory\") && this.props.controlMap.get(\"AddSupplierCategory\").ncontrolcode\r\n\r\n        const deleteSupCatId = this.props.controlMap.has(\"DeleteSupplierCategory\") && this.props.controlMap.get(\"DeleteSupplierCategory\").ncontrolcode\r\n\r\n        const addMatCatId = this.props.controlMap.has(\"AddMaterialCategory\") && this.props.controlMap.get(\"AddMaterialCategory\").ncontrolcode\r\n\r\n        const deleteMatCatId = this.props.controlMap.has(\"DeleteMaterialCategory\") && this.props.controlMap.get(\"DeleteMaterialCategory\").ncontrolcode\r\n\r\n        const supcatAddParam = {\r\n            screenName: \"Supplier Category\", operation: \"create\", primaryKeyField: \"nsuppliercatcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addSupCatId\r\n        };\r\n\r\n        const supcatDeleteParam = { screenName: \"SupplierCategory\", methodUrl: \"SupplierMatrix\", operation: \"delete\", ncontrolCode: deleteSupCatId };\r\n\r\n        const matericatAddParam = {\r\n            screenName: \"Material Category\", operation: \"create\", primaryKeyField: \"nmaterialcatcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addMatCatId\r\n        };\r\n\r\n        const materialcatDeleteParam = { screenName: \"MaterialCategory\", methodUrl: \"SupplierMatrix\", operation: \"delete\", ncontrolCode: deleteMatCatId };\r\n\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SUPPLIERCATEGORY\", <SupplierTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addSupCatId}\r\n            addParam={supcatAddParam}\r\n            comboDataService={this.props.getSupplierCategoryComboDataService}\r\n            addTitleIDS={\"IDS_SUPPLIERCATEGORY\"}\r\n            addTitleDefaultMsg={'SupplierCategory'}\r\n            primaryKeyField={\"nsuppliermatrixcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"SupplierCategory\"}\r\n            dataResult={process(this.props.masterData[\"SupplierCategory\"], this.state.dataState)}\r\n            // dataState={this.state.dataState}\r\n            // dataStateChange={this.supplierDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"SupplierCategory\") ? this.state.dataState : { skip: 0 }}\r\n            dataStateChange={(event) => this.setState({ dataState: event.data })}\r\n            columnList={this.suppliercatColumnList}\r\n            methodUrl={\"SupplierMatrix\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={supcatDeleteParam}\r\n        //selectedId={this.props.selectedId}\r\n        />)\r\n        tabMap.set(\"IDS_MATERIALCATEGORY\", <SupplierTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addMatCatId}\r\n            addParam={matericatAddParam}\r\n            comboDataService={this.props.getMaterialCategoryComboDataService}\r\n            addTitleIDS={\"IDS_MATERIALCATEGORY\"}\r\n            addTitleDefaultMsg={'MaterialCategory'}\r\n            primaryKeyField={\"nsuppliermatrixcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"MaterialCategory\"}\r\n            dataResult={process(this.props.masterData[\"MaterialCategory\"], this.state.dataStateMaterial)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"MaterialCategory\") ? this.state.dataStateMaterial : { skip: 0 }}\r\n            dataStateChange={(event) => this.setState({ dataStateMaterial: event.data })}\r\n            columnList={this.materialcatColumnList}\r\n            methodUrl={\"SupplierMatrix\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={materialcatDeleteParam}\r\n        //selectedId={this.props.selectedId}\r\n        />)\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord={};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = '';\r\n                selectedRecord['esigncomments'] = '';\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n\r\n        if (fieldName === \"nsuppliercatcode\") {\r\n            let selectedSupplierCategory = comboData;\r\n            this.setState({ selectedRecord, selectedSupplierCategory });\r\n        }\r\n        if (fieldName === \"nmaterialcatcode\") {\r\n            let selectedMaterialCategory = comboData;\r\n            this.setState({ selectedRecord, selectedMaterialCategory });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.masterData !== previousProps.masterData) {\r\n\r\n            let isOpen = false;\r\n            if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\r\n                isOpen = true;\r\n            }\r\n            let { dataState, dataStateMaterial } = this.state;\r\n            if(this.props.dataState === undefined)\r\n            {\r\n                dataState={skip: 0,take:this.props.settings? parseInt(this.props.settings[14]) : 5,filter:undefined,sort:undefined}\r\n                dataStateMaterial = { skip: 0, take :this.props.settings? parseInt(this.props.settings[14]) : 5,filter:undefined,sort:undefined }\r\n            } \r\n            this.setState({ isOpen, activeTab: 'SupplierCategory-tab',dataState, dataStateMaterial });\r\n        }\r\n\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord });\r\n        }\r\n        let { dataState, dataStateMaterial } = this.state;\r\n        if (this.props.dataState !== previousProps.dataState && this.props.dataState !== dataState) {\r\n            dataState = { skip: 0,take : this.props.settings? parseInt(this.props.settings[14]) : 5 }\r\n            dataStateMaterial = { skip: 0 , take:this.props.settings? parseInt(this.props.settings[14]) : 5}\r\n            this.setState({ dataState, dataStateMaterial });\r\n        }\r\n     \r\n        // {\r\n        //     dataState={...dataState,filter:undefined,sort:undefined}\r\n        //     dataStateMaterial={...dataStateMaterial,filter:undefined,sort:undefined}\r\n        //     this.setState({ dataState, dataStateMaterial });\r\n        // }\r\n        if (this.props.supplierCategory !== previousProps.supplierCategory || this.props.materialCategory !== previousProps.materialCategory) {\r\n\r\n            const supplierCategory = constructOptionList(this.props.supplierCategory || [], \"nsuppliercatcode\",\r\n                \"ssuppliercatname\", undefined, undefined, undefined);\r\n            const supplierCategoryList = supplierCategory.get(\"OptionList\");\r\n\r\n            const materialCategory = constructOptionList(this.props.materialCategory || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            const materialCategoryList = materialCategory.get(\"OptionList\");\r\n\r\n            this.setState({ supplierCategory: supplierCategoryList, materialCategory: materialCategoryList });\r\n        }\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit  \r\n        let inputParam = {};\r\n\r\n        if (this.props.screenName === \"Supplier Category\") {\r\n            inputParam = this.saveSupplierCategory(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"Material Category\") {\r\n            inputParam = this.saveMaterial(saveType, formRef);\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n        }\r\n\r\n    }\r\n\r\n    saveSupplierCategory(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n        inputData[\"suppliermatrix\"] = {};\r\n        let dataState = { skip: 0 , take :this.props.settings? parseInt(this.props.settings[14]) : 5 };\r\n\r\n        let suppliermatrixArray = []\r\n        suppliermatrixArray = this.state.selectedRecord.nsuppliercatcode.map(item => {\r\n            let suppliermat = {}\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"ntypecode\"] = 1;\r\n            suppliermat[\"sremarks\"] = \"\";\r\n            suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\r\n            suppliermat[\"ncategorycode\"] = item.value\r\n            //suppliermatrixArray.push(suppliermat);\r\n            return suppliermat;\r\n        });\r\n        inputData['suppliermatrix'] = suppliermatrixArray;\r\n\r\n        const inputParam = {\r\n            classUrl: \"suppliermatrix\",\r\n            methodUrl: \"SupplierMatrix\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveMaterial(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n        inputData[\"suppliermatrix\"] = {};\r\n        let dataStateMaterial = undefined;\r\n\r\n        let suppliermatrixArray = []\r\n        suppliermatrixArray = this.state.selectedRecord.nmaterialcatcode.map(item => {\r\n            let suppliermat = {}\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"ntypecode\"] = 2;\r\n            suppliermat[\"sremarks\"] = \"\";\r\n            suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\r\n            suppliermat[\"ncategorycode\"] = item.value\r\n            //suppliermatrixArray.push(suppliermat);\r\n            return suppliermat;\r\n        });\r\n        inputData['suppliermatrix'] = suppliermatrixArray;\r\n\r\n        const inputParam = {\r\n            classUrl: \"suppliermatrix\",\r\n            methodUrl: \"SupplierMatrix\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataStateMaterial\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    deleteRecord = (supplierparam) => {\r\n        if (this.props.masterData.SelectedSupplier.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: this.props.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n        else {\r\n            const inputParam = {\r\n                classUrl: \"suppliermatrix\",\r\n                methodUrl: supplierparam.methodUrl,\r\n                inputData: {\r\n                    [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\r\n                    \"userinfo\": this.props.userInfo,\r\n\r\n                },\r\n                operation: supplierparam.operation,\r\n                //dataState: this.state.dataState,\r\n                //dataStateMaterial: this.state.dataStateMaterial\r\n                dataState: this.state.dataState\r\n            }\r\n\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, supplierparam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\r\n                        openChildModal: true, screenName: supplierparam.screenName, operation: supplierparam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n}\r\n\r\nexport default injectIntl(SupplierMaterialCategoryTab);\r\n\r\n"]},"metadata":{},"sourceType":"module"}