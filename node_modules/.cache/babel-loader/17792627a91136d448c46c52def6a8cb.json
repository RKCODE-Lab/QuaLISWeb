{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\NewJobAlloct.jsx\";\nimport React from \"react\";\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, AgendaView } from '@progress/kendo-react-scheduler';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from \"react-bootstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { guid } from '@progress/kendo-react-common';\nimport './Calender.css';\nimport CustomEditItem, { CustomEditSlotForMonth, CustomSlot, CustomSlotForDayAndWeek, CustomTask } from \"./EditItem\";\nimport CustomItem from './NewCustomItem';\nimport { FormWithCustomEditor } from \"./custom-form\";\nimport { toast } from \"react-toastify\";\nimport rsapi from \"../../rsapi\";\nimport { convertDateTimetoStringDBFormat } from \"../../components/CommonScript\";\n\nclass NewJobAlloct extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = e => {\n      const date = e.value;\n      const view = this.state.view;\n      return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\n        \"nusercode\": this.props.selectedRecord[\"nusercode\"] ? this.props.selectedRecord[\"nusercode\"].value : -1,\n        view: view,\n        startDate: convertDateTimetoStringDBFormat(date, this.props.userInfo),\n        \"userinfo\": this.props.userInfo\n      }).then(response => {\n        let data = [];\n\n        for (let i = 0; i < response.data.UserData.length; i++) {\n          data.push({ ...response.data.UserData[i].jsondata,\n            ...response.data.UserData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: new Date(dataItem.UserStartDate),\n          end: new Date(dataItem.UserEndDate),\n          title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\n          // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.Instrument.value,\n          InstrumentCategory: dataItem.InstrumentCategory.value,\n          sarno: dataItem.sarno,\n          ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus,\n          ntransactiontestcode: dataItem.ntransactiontestcode,\n          npreregno: dataItem.npreregno\n        }));\n        this.setState({\n          data: data,\n          startDate: date\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    };\n\n    this.onViewChange = e => {\n      return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\n        \"nusercode\": this.props.selectedRecord[\"nusercode\"] ? this.props.selectedRecord[\"nusercode\"].value : -1,\n        view: e.value,\n        startDate: convertDateTimetoStringDBFormat(this.state.startDate, this.props.userInfo),\n        \"userinfo\": this.props.userInfo\n      }).then(response => {\n        let data = [];\n\n        for (let i = 0; i < response.data.UserData.length; i++) {\n          data.push({ ...response.data.UserData[i].jsondata,\n            ...response.data.UserData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: new Date(dataItem.UserStartDate),\n          end: new Date(dataItem.UserEndDate),\n          title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.Instrument.value,\n          InstrumentCategory: dataItem.InstrumentCategory.value,\n          sarno: dataItem.sarno,\n          ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus,\n          ntransactiontestcode: dataItem.ntransactiontestcode,\n          npreregno: dataItem.npreregno\n        }));\n        this.setState({\n          data: data,\n          view: e.value\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    };\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleted\n    }) => {\n      let data = this.state.data;\n      const aa = created.concat(created.map(item => Object.assign({}, item, {\n        id: guid()\n      })));\n\n      if (aa.length > 1) {\n        const dataTest = data.filter(x => x.insertRecord);\n\n        if (dataTest.length !== this.props.selectedTest.length) {\n          data = data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n          .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n          .concat(this.props.selectedTest.map(y => {\n            if (dataTest.filter(x => x.ntransactiontestcode === y.ntransactiontestcode).length === 0) {\n              return Object.assign({}, y, { ...created.map(item => Object.assign({}, item, {\n                  id: guid(),\n                  insertRecord: true,\n                  title: `${y.sarno && y.sarno}/${y.stestsynonym && y.stestsynonym}`\n                }))[0]\n              });\n            }\n          }));\n          const newArray = data.filter(a => a);\n          this.setState({\n            data: newArray\n          });\n          this.props.parentScheduleState(newArray);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_TESTALREADYASSIGNEDEDITASSIGNED\"\n          }));\n        }\n      }\n\n      if (updated.length > 0) {\n        data = data // Filter the deleted items\n        .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n        .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n        .concat(created.map(item => Object.assign({}, item, {\n          id: guid()\n        })));\n        this.setState({\n          data\n        });\n        this.props.parentScheduleState(data);\n      }\n\n      if (deleted.length > 0) {\n        if (deleted[0].ntransactionstatus !== 20) {\n          this.setState(old => ({\n            data: old.data // Filter the deleted items\n            .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n            .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n            .concat(created.map(item => Object.assign({}, item, {})))\n          }));\n          this.props.parentScheduleState(data);\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ALLOTEDCANNOTBEDELETED\"\n          }));\n        }\n      }\n    };\n\n    this.state = {\n      data: [],\n      view: 'month',\n      startDate: this.props.currentTime\n    };\n  }\n\n  render() {\n    var displayDate = this.props.currentTime;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-n4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TECHNIQUE\"\n      }),\n      isSearchable: true,\n      name: \"ntechniquecode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: this.props.Technique,\n      value: this.props.selectedRecord[\"ntechniquecode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"ntechniquecode\"],\n      onChange: event => this.props.onComboChange(event, \"ntechniquecode\"),\n      closeMenuOnSelect: true,\n      formGroupClassName: \"single-line-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_USERS\"\n      }),\n      isSearchable: true,\n      name: \"nusercode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      isClearable: false,\n      options: this.props.Users,\n      value: this.props.selectedRecord[\"nusercode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"nusercode\"],\n      onChange: event => this.props.onComboChange(event, \"nusercode\"),\n      closeMenuOnSelect: true,\n      formGroupClassName: \"single-line-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Scheduler, {\n      data: this.state.data,\n      onDataChange: this.handleDataChange,\n      onDateChange: this.handleDateChange,\n      onViewChange: this.onViewChange,\n      editable: {\n        add: true,\n        remove: true,\n        drag: false,\n        resize: true,\n        select: true,\n        edit: true\n      },\n      height: 600,\n      editItem: CustomEditItem,\n      item: CustomItem,\n      form: FormWithCustomEditor,\n      defaultDate: displayDate,\n      editSlot: CustomEditSlotForMonth,\n      slot: CustomSlot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MonthView, {\n      editable: {\n        add: true,\n        remove: true,\n        drag: false,\n        resize: true,\n        select: true,\n        edit: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(AgendaView, {\n      slotDivisions: 1,\n      task: CustomTask,\n      editable: {\n        add: false,\n        remove: false,\n        drag: false,\n        resize: false,\n        select: false,\n        edit: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(WeekView, {\n      slot: CustomSlotForDayAndWeek,\n      editItem: CustomEditItem,\n      editSlot: CustomEditSlotForMonth,\n      item: CustomItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(DayView, {\n      slot: CustomSlotForDayAndWeek,\n      editSlot: CustomEditSlotForMonth,\n      editItem: CustomEditItem,\n      item: CustomItem,\n      numberOfDays: 2,\n      style: {\n        zorder: 25000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TimelineView, {\n      slot: CustomSlotForDayAndWeek,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    let data = [];\n\n    if (this.props.userData !== undefined) {\n      if (!(this.props.userData.length <= this.state.data.length)) {\n        for (let i = 0; i < this.props.userData.length; i++) {\n          data.push({ ...this.props.userData[i].jsondata,\n            ...this.props.userData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: new Date(dataItem.UserStartDate),\n          end: new Date(dataItem.UserEndDate),\n          title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\n          // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.Instrument.value,\n          InstrumentCategory: dataItem.InstrumentCategory.value,\n          sarno: dataItem.sarno,\n          ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus,\n          ntransactiontestcode: dataItem.ntransactiontestcode,\n          npreregno: dataItem.npreregno\n        }));\n        this.setState({\n          data: data\n        });\n      }\n    }\n  }\n\n}\n\nexport default injectIntl(NewJobAlloct);\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};\nexport const parseAdjustDate = eventDate => {\n  return [padTo2Digits(eventDate.getMonth() + 1), eventDate.getFullYear(), padTo2Digits(eventDate.getDate())].join('/');\n};\nexport const padTo2Digits = num => {\n  return num.toString().padStart(2, '0');\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/NewJobAlloct.jsx"],"names":["React","Scheduler","TimelineView","DayView","WeekView","MonthView","AgendaView","FormSelectSearch","Col","Row","injectIntl","guid","CustomEditItem","CustomEditSlotForMonth","CustomSlot","CustomSlotForDayAndWeek","CustomTask","CustomItem","FormWithCustomEditor","toast","rsapi","convertDateTimetoStringDBFormat","NewJobAlloct","Component","constructor","props","handleDateChange","e","date","value","view","state","post","selectedRecord","startDate","userInfo","then","response","data","i","UserData","length","push","jsondata","map","dataItem","start","Date","UserStartDate","end","UserEndDate","title","sarno","stestsynonym","id","startTimezone","endTimezone","description","Comments","Instrument","InstrumentCategory","ssamplearno","ntransactionstatus","stransdisplaystatus","ntransactiontestcode","npreregno","setState","catch","error","status","message","warn","onViewChange","handleDataChange","created","updated","deleted","aa","concat","item","Object","assign","dataTest","filter","x","insertRecord","selectedTest","find","current","undefined","y","newArray","a","parentScheduleState","info","intl","formatMessage","old","currentTime","render","displayDate","Technique","event","onComboChange","Users","add","remove","drag","resize","select","edit","zorder","componentDidUpdate","previousProps","userData","currentYear","getFullYear","parseAdjust","eventDate","setFullYear","parseAdjustDate","padTo2Digits","getMonth","getDate","join","num","toString","padStart"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, AgendaView } from '@progress/kendo-react-scheduler';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { guid } from '@progress/kendo-react-common';\r\nimport './Calender.css'\r\nimport CustomEditItem, {\r\n    CustomEditSlotForMonth,\r\n    CustomSlot,\r\n    CustomSlotForDayAndWeek,\r\n    CustomTask\r\n} from \"./EditItem\";\r\nimport CustomItem from './NewCustomItem'\r\nimport { FormWithCustomEditor } from \"./custom-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport rsapi from \"../../rsapi\";\r\nimport { convertDateTimetoStringDBFormat } from \"../../components/CommonScript\";\r\n\r\nclass NewJobAlloct extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            view: 'month',\r\n            startDate:this.props.currentTime\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var displayDate = this.props.currentTime;\r\n        return (\r\n            <Row>\r\n            <Col md={12}>\r\n                <Row className=\"mt-n4\">\r\n                    <Col md={8} className=\"d-flex\">\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                                isSearchable={true}\r\n                                name={\"ntechniquecode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                isClearable={true}\r\n                                options={this.props.Technique}\r\n                                value={this.props.selectedRecord[\"ntechniquecode\"] || \"\"}\r\n                                defaultValue={this.props.selectedRecord[\"ntechniquecode\"]}\r\n                                onChange={(event) => this.props.onComboChange(event, \"ntechniquecode\")}\r\n                                closeMenuOnSelect={true}\r\n                                formGroupClassName={\"single-line-label\"}\r\n                            >\r\n                            </FormSelectSearch>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                                isSearchable={true}\r\n                                name={\"nusercode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                isClearable={false}\r\n                                options={this.props.Users}\r\n                                value={this.props.selectedRecord[\"nusercode\"] || \"\"}\r\n                                defaultValue={this.props.selectedRecord[\"nusercode\"]}\r\n                                onChange={(event) => this.props.onComboChange(event, \"nusercode\")}\r\n                                closeMenuOnSelect={true}\r\n                                formGroupClassName={\"single-line-label\"}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Scheduler data={this.state.data}\r\n                        onDataChange={this.handleDataChange}\r\n                        onDateChange={this.handleDateChange}\r\n                        onViewChange={this.onViewChange}\r\n                        editable={{\r\n                            add: true,\r\n                            remove: true,\r\n                            drag: false,\r\n                            resize: true,\r\n                            select: true,\r\n                            edit: true\r\n                        }}\r\n                        height={600}\r\n                        editItem={CustomEditItem}\r\n                        item={CustomItem}\r\n                        form={FormWithCustomEditor}\r\n                        defaultDate={displayDate}\r\n                        editSlot={CustomEditSlotForMonth}\r\n                        slot={CustomSlot}\r\n                    >\r\n                        <MonthView\r\n                            editable={{\r\n                                add: true,\r\n                                remove: true,\r\n                                drag: false,\r\n                                resize: true,\r\n                                select: true,\r\n                                edit: true\r\n                            }}\r\n                        />\r\n                        <AgendaView slotDivisions={1} task={CustomTask} editable={{\r\n                            add: false,\r\n                            remove: false,\r\n                            drag: false,\r\n                            resize: false,\r\n                            select: false,\r\n                            edit: false\r\n                        }} />\r\n                        <WeekView\r\n                            slot={CustomSlotForDayAndWeek}\r\n                            editItem={CustomEditItem}\r\n                            editSlot={CustomEditSlotForMonth}\r\n                            item={CustomItem}\r\n                        />\r\n                        <DayView\r\n                            slot={CustomSlotForDayAndWeek}\r\n                            editSlot={CustomEditSlotForMonth}\r\n                            editItem={CustomEditItem}\r\n                            item={CustomItem}\r\n                            numberOfDays={2}\r\n                            style={{ zorder: 25000 }}\r\n                        />\r\n                        <TimelineView \r\n                            slot={CustomSlotForDayAndWeek}\r\n                        />\r\n                    </Scheduler>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    handleDateChange = (e) => {\r\n        const date = e.value\r\n        const view = this.state.view\r\n        return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\r\n            \"nusercode\": this.props.selectedRecord[\"nusercode\"] ? this.props.selectedRecord[\"nusercode\"].value : -1, view: view, startDate: convertDateTimetoStringDBFormat(date, this.props.userInfo),\r\n            \"userinfo\": this.props.userInfo\r\n        })\r\n            .then(response => {\r\n                let data = [];\r\n                for (let i = 0; i < response.data.UserData.length; i++) {\r\n                    data.push({ ...response.data.UserData[i].jsondata, ...response.data.UserData[i] });\r\n                }\r\n                data = data.map((dataItem, i) => ({\r\n                    start: new Date(dataItem.UserStartDate),\r\n                    end: new Date(dataItem.UserEndDate),\r\n                    title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\r\n                    // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.Instrument.value,\r\n                    InstrumentCategory: dataItem.InstrumentCategory.value,\r\n                    sarno: dataItem.sarno,\r\n                    ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                    ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                    npreregno: dataItem.npreregno,\r\n                }))\r\n                this.setState({ data: data, startDate: date });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n    onViewChange = (e) => {\r\n        return rsapi.post(\"joballocation/getAnalystCalendarBasedOnUserWithDate\", {\r\n            \"nusercode\": this.props.selectedRecord[\"nusercode\"] ? this.props.selectedRecord[\"nusercode\"].value : -1, view: e.value, startDate: convertDateTimetoStringDBFormat(this.state.startDate, this.props.userInfo),\r\n            \"userinfo\": this.props.userInfo\r\n        })\r\n            .then(response => {\r\n                let data = [];\r\n                for (let i = 0; i < response.data.UserData.length; i++) {\r\n                    data.push({ ...response.data.UserData[i].jsondata, ...response.data.UserData[i] });\r\n                }\r\n                data = data.map((dataItem, i) => ({\r\n                    start: new Date(dataItem.UserStartDate),\r\n                    end: new Date(dataItem.UserEndDate),\r\n                    title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.Instrument.value,\r\n                    InstrumentCategory: dataItem.InstrumentCategory.value,\r\n                    sarno: dataItem.sarno,\r\n                    ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                    ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                    npreregno: dataItem.npreregno,\r\n                }));\r\n                this.setState({ data: data, view: e.value });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    handleDataChange = ({\r\n        created,\r\n        updated,\r\n        deleted\r\n    }) => {\r\n        let data = this.state.data;\r\n        const aa = created.concat(created.map(item => Object.assign({}, item, {\r\n            id: guid()\r\n        })));\r\n        if (aa.length > 1) {\r\n            const dataTest = data.filter(x => x.insertRecord);\r\n            if (dataTest.length !== this.props.selectedTest.length) {\r\n                data = data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                    .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                    .concat(this.props.selectedTest.map((y) => {\r\n                        if (dataTest.filter(x => x.ntransactiontestcode === y.ntransactiontestcode).length === 0) {\r\n                            return Object.assign({}, y, {\r\n                                ...created.map(item => Object.assign({}, item, {\r\n                                    id: guid(), insertRecord: true, title: `${y.sarno && y.sarno}/${y.stestsynonym && y.stestsynonym}`\r\n                                }))[0]\r\n                            })\r\n                        }\r\n                    }\r\n                    ))\r\n                const newArray = data.filter((a) => a)\r\n                this.setState({ data: newArray });\r\n                this.props.parentScheduleState(newArray);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({id:\"IDS_TESTALREADYASSIGNEDEDITASSIGNED\"}))\r\n            }\r\n        }\r\n        if (updated.length > 0) {\r\n            data = data     // Filter the deleted items\r\n                .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                .concat(created.map(item => Object.assign({}, item, {\r\n                    id: guid()\r\n                })))\r\n            this.setState({data});\r\n            this.props.parentScheduleState(data);\r\n        }\r\n\r\n        if (deleted.length > 0) {\r\n            if (deleted[0].ntransactionstatus !== 20) {\r\n                this.setState(old => ({\r\n                    data: old.data     // Filter the deleted items\r\n                        .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                        .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                        .concat(created.map(item => Object.assign({}, item, {\r\n                        })))\r\n                }));\r\n                this.props.parentScheduleState(data);\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({id:\"IDS_ALLOTEDCANNOTBEDELETED\"}))\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let data = [];\r\n        if (this.props.userData !== undefined) {\r\n            if (!(this.props.userData.length <= this.state.data.length)) {\r\n                for (let i = 0; i < this.props.userData.length; i++) {\r\n                    data.push({ ...this.props.userData[i].jsondata, ...this.props.userData[i] });\r\n                }\r\n                data = data.map((dataItem, i) => ({\r\n                    start: new  Date(dataItem.UserStartDate),\r\n                    end: new Date(dataItem.UserEndDate),\r\n                    title: `${dataItem.sarno && dataItem.sarno}/${dataItem.stestsynonym && dataItem.stestsynonym}`,\r\n                    // title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.Instrument.value,\r\n                    InstrumentCategory: dataItem.InstrumentCategory.value,\r\n                    sarno: dataItem.sarno,\r\n                    ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus,\r\n                    ntransactiontestcode: dataItem.ntransactiontestcode,\r\n                    npreregno: dataItem.npreregno,\r\n                }))\r\n                this.setState({ data: data });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default injectIntl(NewJobAlloct);\r\nexport const currentYear = new Date().getFullYear();\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};\r\n\r\nexport const parseAdjustDate = eventDate => {\r\n\r\n    return [\r\n        padTo2Digits(eventDate.getMonth() + 1),\r\n        eventDate.getFullYear(),\r\n        padTo2Digits(eventDate.getDate()),\r\n    ].join('/');\r\n};\r\n\r\nexport const padTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}