{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,Card,Button}from'react-bootstrap';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSync}from\"@fortawesome/free-solid-svg-icons\";import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import DataGrid from'../../components/data-grid/data-grid.component';import{ListWrapper,PrimaryHeader}from'../../components/client-group.styles';import{callService,updateStore,crudMaster,SyncRecords}from'../../actions';import{getControlMap}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{getStartOfDay,getEndOfDay,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SyncConfiguration=/*#__PURE__*/function(_React$Component){_inherits(SyncConfiguration,_React$Component);var _super=_createSuper(SyncConfiguration);function SyncConfiguration(props){var _this;_classCallCheck(this,SyncConfiguration);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data.JsonExceptionLogs,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"syncconfiguration\",methodUrl:\"SyncConfiguration\",displayName:_this.props.Login.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,isOpen:false,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(SyncConfiguration,[{key:\"render\",value:function render(){var _this2=this;var syncConfiguration=this.state.controlMap.has(\"Sync Configuration\")&&this.state.controlMap.get(\"Sync Configuration\").ncontrolcode;if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_TRANSFERID\",\"dataField\":\"stransferid\",\"width\":\"200px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"sstatuscode\",\"width\":\"200px\"},{\"idsName\":\"IDS_TRANSFERTYPE\",\"dataField\":\"stransfertype\",\"width\":\"200px\"},{\"idsName\":\"IDS_DATETIME\",\"dataField\":\"dmodifieddate\",\"width\":\"200px\"}];}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",hidden:this.state.userRoleControlRights.indexOf(syncConfiguration)===-1,onClick:function onClick(){return _this2.props.SyncRecords(_this2.props.Login.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SYNC\",defaultMessage:\"Sync\"}))),/*#__PURE__*/React.createElement(Col,{md:3})),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nsynchistorycode\",selectedId:this.props.Login.selectedId,data:this.state.data.syncHistory,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,reloadData:this.reloadData,scrollable:\"scrollable\",gridHeight:\"600px\",isActionRequired:false,isToolBarRequired:true,pageable:true,isAddRequired:false,isDownloadPDFRequired:false// actionIcons={[{\n//     title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\n//     controlname: \"faEye\",\n//     objectName: \"ExceptionLogs\",\n//     hidden: this.state.userRoleControlRights.indexOf(viewJsonExceptionLogs) === -1,\n//     onClick: (viewJsonExceptionLogs) => this.viewJsonExceptionLogs(viewJsonExceptionLogs)\n// }]}\n}):\"\"))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData.syncHistory,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData.syncHistory?this.props.Login.masterData.syncHistory:[],dataState),//dataResult: process(this.props.Login.masterData, dataState),\ndataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SyncConfiguration;}(React.Component);export default connect(mapStateToProps,{callService:callService,updateStore:updateStore,crudMaster:crudMaster,SyncRecords:SyncRecords})(injectIntl(SyncConfiguration));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/SyncConfiguration.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Row","Col","Card","Button","FontAwesomeIcon","faSync","process","toast","DataGrid","ListWrapper","PrimaryHeader","callService","updateStore","crudMaster","SyncRecords","getControlMap","DEFAULT_RETURN","DateTimePicker","getStartOfDay","getEndOfDay","convertDateValuetoString","rearrangeDateFormat","SlideOutModal","mapStateToProps","state","Login","SyncConfiguration","props","dataStateChange","event","setState","dataResult","data","JsonExceptionLogs","dataState","closeModal","loadEsign","openModal","selectedRecord","selectedId","operation","updateInfo","typeName","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","formRef","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","isOpen","userRoleControlRights","controlMap","Map","syncConfiguration","has","get","ncontrolcode","undefined","indexOf","syncHistory","previousProps","masterData","nformcode","Object","values","map","item","push","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Card,Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSync } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ListWrapper, PrimaryHeader } from '../../components/client-group.styles';\r\nimport { callService, updateStore, crudMaster, SyncRecords } from '../../actions';\r\nimport { getControlMap } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { getStartOfDay, getEndOfDay, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SyncConfiguration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data.JsonExceptionLogs, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: \"syncconfiguration\",\r\n            methodUrl: \"SyncConfiguration\",\r\n            displayName: this.props.Login.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      \r\n        const syncConfiguration = this.state.controlMap.has(\"Sync Configuration\") && this.state.controlMap.get(\"Sync Configuration\").ncontrolcode;\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_TRANSFERID\", \"dataField\": \"stransferid\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_STATUS\", \"dataField\": \"sstatuscode\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_TRANSFERTYPE\", \"dataField\": \"stransfertype\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_DATETIME\", \"dataField\": \"dmodifieddate\", \"width\": \"200px\" }\r\n            ]\r\n           \r\n        }\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <Button className=\"btn-user btn-primary-blue\"\r\n                                     hidden={this.state.userRoleControlRights.indexOf(syncConfiguration) === -1}\r\n                                      onClick={() => this.props.SyncRecords(this.props.Login.userInfo)}>\r\n                                        <FontAwesomeIcon icon={faSync} /> { }\r\n                                        <FormattedMessage id='IDS_SYNC' defaultMessage='Sync' />\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col md={3}>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"nsynchistorycode\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    data={this.state.data.syncHistory}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    reloadData={this.reloadData}\r\n                                    scrollable={\"scrollable\"}\r\n                                    gridHeight={\"600px\"}\r\n                                    isActionRequired={false}\r\n                                    isToolBarRequired={true}\r\n                                    pageable={true}\r\n                                    isAddRequired={false}\r\n                                    isDownloadPDFRequired={false}\r\n                                // actionIcons={[{\r\n                                //     title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                                //     controlname: \"faEye\",\r\n                                //     objectName: \"ExceptionLogs\",\r\n                                //     hidden: this.state.userRoleControlRights.indexOf(viewJsonExceptionLogs) === -1,\r\n                                //     onClick: (viewJsonExceptionLogs) => this.viewJsonExceptionLogs(viewJsonExceptionLogs)\r\n                                // }]}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData.syncHistory, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData.syncHistory ? this.props.Login.masterData.syncHistory : [], dataState),\r\n                    //dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, updateStore, crudMaster, SyncRecords })(injectIntl(SyncConfiguration));"]},"metadata":{},"sourceType":"module"}