{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\Incident.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Col, Row, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { FormattedMessage } from \"react-intl\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport { getControlMap, onSaveMandatoryValidation, showEsign, Lims_JSON_stringify, create_UUID, replaceUpdatedObject, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport { callService, getIncidentMasterData, getIncidentDetail, onSaveIncidentWorkFlowTransaction, updateStore, viewAttachment, onSaveIncidentChecklistQb, deleteIncidentWorkFlowTransaction, getIncidentDetailsData, filterColumnData, onUpdateIncidentWorkFlowTransaction, onSaveIncident, crudMaster, openCloseIncident, validateEsignforIncident } from '../../actions';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport Axios from 'axios';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport rsapi from '../../rsapi';\nimport AddOOSWorkFlowTransaction from './AddOOSWorkFlowTransaction';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\nimport { constructOptionList } from '../../components/CommonScript';\nimport AddOOSChecklistQb from './AddOOSChecklistQb';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/rectangle-xmark-regular.svg\";\nimport { ReactComponent as Open } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/open.svg\";\nimport { faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AddIncident from './AddIncident';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Incident extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let masterData = { ...this.props.Login.masterData\n      };\n      let inputData = {\n        userinfo: this.props.Login.userInfo\n      };\n      let inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getIncidentMasterData(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\n      let openModal = this.props.Login.openModal;\n      let screenName = this.props.Login.screenName;\n      let operation = this.props.Login.operation;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n      let scomments = this.props.Login.scomments;\n      let sadditionalcomments = this.props.Login.sadditionalcomments;\n\n      if (this.props.Login.loadEsignStateHandle) {\n        if (this.props.Login.operation === \"close\") {\n          loadEsignStateHandle = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsignStateHandle = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        screenName = \"\";\n        operation = \"\";\n        selectedId = \"\";\n        scomments = \"\";\n        sadditionalcomments = \"\";\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsignStateHandle,\n          selectedRecord,\n          screenName,\n          operation,\n          selectedId,\n          scomments,\n          sadditionalcomments\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openIncidentModal = () => {\n      let openModal = true;\n      let screenName = \"IDS_INCIDENT\";\n      let operation = \"create\";\n      let selectedRecord = {};\n      rsapi.post(\"timezone/getLocalTimeByZone\", {\n        userinfo: this.props.Login.userInfo\n      }).then(response => {\n        const currentTime = rearrangeDateFormat(this.props.Login.userInfo, response.data);\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal,\n            screenName,\n            operation,\n            selectedRecord,\n            currentTime\n          }\n        };\n        this.props.updateStore(updateInfo);\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.oosDetailsDataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.OOSMasterDetails || [], event.dataState),\n        oosDetailsDataState: event.dataState\n      });\n    };\n\n    this.openIncidentStep = controlCode => {\n      const isInitialRender = true;\n      let selectedRecord = {};\n      const url = \"incident/getWorkFlowType\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosmastercode: this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let responseData = response[0].data;\n        const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", 'noosworkflowtypecode', 'ascending', false);\n        let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\n        let noosworkflowtypecode = [];\n        let ntranscode = [];\n        const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\n        let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            OosWorkFlowType,\n            OosStepStatus,\n            noosworkflowtypecode,\n            ntranscode,\n            screenName: \"IDS_INCIDENTWORKFLOWSTEP\",\n            operation: \"create\",\n            isInitialRender,\n            selectedRecord,\n            ncontrolCode: controlCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }); // }\n    };\n\n    this.editIncidentStep = editParam => {\n      const isInitialRender = true;\n      let selectedWorkFlowTransaction = editParam.editRow;\n      const url = \"incident/getActiveIncidentWorkFlowTransactionById\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosworkflowtransactioncode: selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosworkflowtransactioncode,\n        noosmastercode: selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let responseData = response[0].data;\n\n        if (responseData && responseData.OosWorkFlowTransaction && responseData.OosWorkFlowTransaction !== null && responseData.OosWorkFlowTransaction.length > 0) {\n          const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\n          const OosStepStatus = OosStepStatusMap.get(\"OptionList\");\n          const noosworkflowtypecode = {\n            label: responseData.OosWorkFlowTransaction[0].soosworkflowtypename,\n            value: responseData.OosWorkFlowTransaction[0].noosworkflowtypecode\n          };\n          const ntranscode = {\n            label: responseData.OosWorkFlowTransaction[0].stransdisplaystatus,\n            value: responseData.OosWorkFlowTransaction[0].ntransactionstatus\n          };\n          let selectedRecord = {\n            noosworkflowtypecode: noosworkflowtypecode,\n            ntranscode: ntranscode,\n            scomments: responseData.OosWorkFlowTransaction[0].scomments,\n            sadditionalcomments: responseData.OosWorkFlowTransaction[0].sadditionalcomments\n          };\n          const scomments = responseData.OosWorkFlowTransaction[0].scomments;\n          const sadditionalcomments = responseData.OosWorkFlowTransaction[0].sadditionalcomments;\n          const selectedId = responseData.OosWorkFlowTransaction[0].noosworkflowtransactioncode;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: true,\n              OosStepStatus,\n              noosworkflowtypecode,\n              ntranscode,\n              screenName: \"IDS_INCIDENTWORKFLOWSTEP\",\n              operation: \"update\",\n              isInitialRender,\n              scomments,\n              sadditionalcomments,\n              selectedRecord,\n              ncontrolCode: editParam.ncontrolCode,\n              selectedId\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ALREADYDELETED\"\n          }));\n        }\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }); // }\n    };\n\n    this.deleteIncidentWorkFlowTransaction = deleteParam => {\n      let selectedRecord = deleteParam.selectedRecord;\n      let inputData = {};\n      inputData[\"noosworkflowtransactioncode\"] = selectedRecord.noosworkflowtransactioncode;\n      inputData[\"noosmastercode\"] = selectedRecord.noosmastercode;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"IncidentWorkFlowTransaction\",\n        inputData: inputData,\n        operation: \"delete\",\n        selectedRecord: this.state.selectedRecord,\n        masterData: this.props.Login.masterData\n      };\n      this.props.deleteIncidentWorkFlowTransaction(inputParam);\n    };\n\n    this.viewChecklistQb = inputParam => {\n      const isInitialRender = true;\n      let masterData = inputParam.masterData;\n      let selectedRow = inputParam.viewRow;\n      const url = \"incident/viewCheclistQb\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosworkflowtransactioncode: selectedRow.noosworkflowtransactioncode,\n        noosmastercode: selectedRow.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let templateData = response[0].data.ChecklistData;\n\n        if (templateData !== null) {\n          masterData[\"templateData\"] = templateData;\n          let selectedId = selectedRow.noosworkflowtransactioncode;\n          let selectedRecord = {};\n          let lsteditedQB = [];\n          templateData.map(checklist => {\n            selectedRecord[checklist.nchecklistversionqbcode] = {\n              nchecklistqbcode: checklist.nchecklistqbcode,\n              nchecklistversioncode: checklist.nchecklistversioncode,\n              nchecklistversionqbcode: checklist.nchecklistversionqbcode,\n              sdefaultvalue: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue,\n              noosworkflowtransactioncode: inputParam.primaryKeyValue\n            };\n            lsteditedQB.push(checklist.nchecklistversionqbcode);\n            return null;\n          });\n          templateData.map(checklist => {\n            selectedRecord['jsondata'] = { ...selectedRecord['jsondata'],\n              [checklist.nchecklistversionqbcode]: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue\n            };\n            return null;\n          });\n          selectedRecord[\"editedQB\"] = lsteditedQB;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: true,\n              screenName: \"IDS_INCIDENTCHECKLISTQB\",\n              operation: \"view\",\n              isInitialRender,\n              selectedRecord,\n              ncontrolCode: inputParam.ncontrolCode,\n              masterData,\n              selectedId\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_NODATAFOUND\"\n          }));\n        }\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.downloadWorkFlowTransactionFile = downloadParam => {\n      let downloadParameterValue = downloadParam.inputData;\n      delete downloadParameterValue.userinfo;\n      const inputParam = {\n        inputData: {\n          oosworkflowtransactionfile: downloadParameterValue,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"incident\",\n        operation: \"download\",\n        methodUrl: \"IncidentWorkFlowTransaction\",\n        screenName: \"Step File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.childDataChange = selectedRecord => {\n      let isInitialRender = false;\n      this.setState({\n        selectedRecord: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onMandatoryCheck = () => {\n      const mandatoryFields = this.props.Login.loadEsignStateHandle ? [{\n        \"idsName\": \"IDS_PASSWORD\",\n        \"dataField\": \"esignpassword\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REASON\",\n        \"dataField\": \"esignreason\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"esigncomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\" ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_STEPNAME\",\n        \"dataField\": \"noosworkflowtypecode\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textarea\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"ntranscode\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === \"IDS_INCIDENT\" ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_INCIDENTDATE\",\n        \"dataField\": \"dincidentdate\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"datepicker\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SOURCEOFINCIDENT\",\n        \"dataField\": \"ssourceofincident\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textarea\"\n      }] : [];\n      onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.onSaveClick, this.props.Login.loadEsignStateHandle);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\") {\n        if (this.props.Login.operation === \"create\") {\n          const formData = new FormData();\n          const selectedRecord = this.state.selectedRecord;\n          const acceptedFiles = selectedRecord.sfilename;\n          const userInfo = this.props.Login.userInfo;\n          const masterData = this.props.Login.masterData;\n          let isFileEdited = transactionStatus.NO;\n          let fileArray = [];\n\n          if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n            if (this.props.Login.operation === 'create') {\n              acceptedFiles.forEach((file, index) => {\n                const splittedFileName = file.name.split('.');\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n                const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n                const uniquefilename = fileName + '.' + fileExtension;\n                const tempData = {};\n                tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n                tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n                tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n                tempData[\"scomments\"] = selectedRecord.scomments;\n                tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\n                tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n                tempData[\"ssystemfilename\"] = uniquefilename;\n                tempData[\"nfilesize\"] = file.size;\n                formData.append(\"uploadedFile\" + index, file);\n                formData.append(\"uniquefilename\" + index, uniquefilename);\n                fileArray.push(tempData);\n              });\n              formData.append(\"filecount\", acceptedFiles.length);\n              isFileEdited = transactionStatus.YES;\n            } else {\n              acceptedFiles.forEach((file, index) => {\n                const splittedFileName = file.name.split('.');\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n                const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n                const uniquefilename = fileName + '.' + fileExtension;\n                const tempData = {};\n                tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n                tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n                tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n                tempData[\"scomments\"] = selectedRecord.scomments;\n                tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\n                tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n                tempData[\"ssystemfilename\"] = uniquefilename;\n                tempData[\"nfilesize\"] = file.size;\n                formData.append(\"uploadedFile\" + index, file);\n                formData.append(\"uniquefilename\" + index, uniquefilename);\n                formData.append(\"filecount\", acceptedFiles.length);\n                isFileEdited = transactionStatus.YES;\n                fileArray.push(tempData);\n              });\n            }\n          } else {\n            let tempData = {};\n            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n            tempData[\"scomments\"] = selectedRecord.scomments;\n            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments; // tempData[\"sfilename\"] = acceptedFiles ? Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n            // tempData[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n            // tempData[\"nfilesize\"] = selectedRecord.size;\n\n            fileArray.push(tempData);\n          }\n\n          formData.append(\"isFileEdited\", isFileEdited);\n          formData.append(\"oosworkflowtransaction\", JSON.stringify(fileArray));\n          formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n          formData.append(\"noosworkflowtransactioncode\", masterData.selectedOosMaster);\n          formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\n          formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          }));\n          const inputParam = {\n            inputData: {\n              \"userinfo\": { ...userInfo,\n                sformname: Lims_JSON_stringify(userInfo.sformname),\n                smodulename: Lims_JSON_stringify(userInfo.smodulename),\n                slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n              },\n              formData: formData,\n              isFileupload: true,\n              operation: this.props.Login.operation,\n              classUrl: \"incident\",\n              saveType: saveType,\n              formRef: formRef,\n              methodUrl: \"IncidentWorkFlowTransaction\",\n              selectedRecord: this.state.selectedRecord,\n              screenName: this.props.Login.screenName,\n              masterData: this.props.Login.masterData\n            }\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                screenData: {\n                  inputParam\n                },\n                loadEsignStateHandle: true,\n                ncontrolcode: this.props.Login.ncontrolCode\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.onSaveIncidentWorkFlowTransaction(inputParam);\n          }\n        } else {\n          const selectedRecord = this.state.selectedRecord;\n          const userInfo = this.props.Login.userInfo;\n          const masterData = this.props.Login.masterData;\n          let inputData = {\n            userinfo: this.props.Login.userInfo,\n            noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1,\n            noosworkflowtransactioncode: this.props.Login.selectedId,\n            ntranscode: selectedRecord.ntranscode.value,\n            scomments: selectedRecord.scomments,\n            sadditionalcomments: selectedRecord.sadditionalcomments\n          };\n          let inputParam = {\n            masterData,\n            inputData,\n            operation: this.props.Login.operation,\n            classUrl: \"incident\",\n            methodUrl: \"IncidentWorkFlowTransaction\"\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                screenData: {\n                  inputParam\n                },\n                loadEsignStateHandle: true,\n                ncontrolcode: this.props.Login.ncontrolCode\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.onUpdateIncidentWorkFlowTransaction(inputParam);\n          }\n        }\n      } else if (this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\") {\n        const failedControls = [];\n        const mandatoryFields = [];\n        this.props.Login.masterData.templateData.map(control => control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : '');\n        mandatoryFields.forEach(item => {\n          if (this.state.selectedRecord && this.state.selectedRecord[item.nchecklistversionqbcode] && this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\n            if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            } else if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            } else {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            }\n          } else {\n            const alertMessage = item.squestion;\n            failedControls.push(alertMessage);\n          }\n        });\n\n        if (failedControls.length === 0) {\n          let inputData = [];\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          inputData[\"noosworkflowtransactioncode\"] = this.props.Login.selectedId;\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"IncidentChecklistQb\",\n            displayName: this.props.Login.inputParam.displayName,\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            selectedRecord: this.state.selectedRecord,\n            masterData: this.props.Login.masterData\n          }; // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          //     const updateInfo = {\n          //         typeName: DEFAULT_RETURN,\n          //         data: {\n          //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n          //             openModal: true, openTemplateModal: true, screenName: \"IDS_GOODSINCHECKLIST\",\n          //             operation: this.props.Login.operation\n          //         }\n          //     }\n          //     this.props.updateStore(updateInfo);\n          // }\n          // else {\n\n          this.props.onSaveIncidentChecklistQb(inputParam); // }\n        } else {\n          toast.info(`${this.props.intl.formatMessage({\n            id: \"IDS_ENTER\"\n          })} ${failedControls[0]}`);\n        }\n      } else if (this.props.Login.screenName === \"IDS_INCIDENT\") {\n        const selectedRecord = this.state.selectedRecord;\n        let inputData = {};\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        inputData[\"dincidentdate\"] = selectedRecord.dincidentdate;\n        inputData[\"ssourceofincident\"] = selectedRecord.ssourceofincident ? selectedRecord.ssourceofincident : \"\";\n        inputData[\"ssourcename\"] = selectedRecord.ssourcename ? selectedRecord.ssourcename : \"\";\n        inputData[\"ssourceid\"] = selectedRecord.ssourceid ? selectedRecord.ssourceid : \"\";\n        inputData[\"sreportername\"] = selectedRecord.sreportername ? selectedRecord.sreportername : \"\";\n        inputData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription : \"\"; // inputData[\"noosmastercode\"] = this.props.Login.selectedId;\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: this.props.Login.inputParam.methodUrl,\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          selectedRecord: this.state.selectedRecord,\n          masterData: this.props.Login.masterData,\n          searchRef: this.searchRef\n        };\n        this.props.onSaveIncident(inputParam);\n      }\n    };\n\n    this.ConfirmDelete = deleteIncidentId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteIncident(\"delete\", deleteIncidentId));\n    };\n\n    this.DeleteIncident = (operation, ncontrolCode) => {\n      let inputData = {};\n      inputData[\"incident\"] = this.props.Login.masterData.selectedOosMaster;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"OosMaster\",\n        selectedObject: \"selectedOosMaster\",\n        primaryKeyField: \"noosmastercode\",\n        primaryKeyValue: this.props.Login.masterData.selectedOosMaster.noosmastercode,\n        fetchUrl: \"incident/getActiveIncidentById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam // masterData: this.props.Login.masterData\n\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_INCIDENT\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.openCloseIncident = parameter => {\n      let masterData = parameter.masterData;\n      let inputData = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode && masterData.selectedOosMaster.noosmastercode;\n      inputData[\"operation\"] = parameter.operation;\n      const inputParam = {\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: parameter.operation,\n        masterData: masterData\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, parameter.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsignStateHandle: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.screenName,\n            operation: parameter.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.openCloseIncident(inputParam);\n      }\n    };\n\n    this.getIncidentDetails = incidentDetailParam => {\n      const masterData = incidentDetailParam.masterData;\n      let inputData = {};\n      inputData[\"noosmastercode\"] = masterData && masterData.selectedOosMaster ? masterData.selectedOosMaster.noosmastercode : -1;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"IncidentDetails\",\n        inputData: inputData,\n        operation: \"view\",\n        selectedRecord: this.state.selectedRecord,\n        masterData: masterData,\n        screenName: \"IDS_INCIDENTDETAILS\"\n      };\n      this.props.getIncidentDetailsData(inputParam);\n    };\n\n    this.validateEsign = () => {\n      // let ncontrolcode = this.props.Login.ncontrolcode;\n      let modalName = \"openModal\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforIncident(inputParam, modalName);\n    };\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      oosDetailsDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      data: []\n    };\n  }\n\n  render() {\n    const filterParam = {\n      inputListName: \"OosMaster\",\n      selectedObject: \"selectedOosMaster\",\n      primaryKeyField: \"noosmastercode\",\n      fetchUrl: \"incident/getActiveIncidentById\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"ssourceofincident\", \"soosno\", \"sincidentdate\", \"ssourceid\", \"ssourcename\", \"sdescription\", \"sopendate\", \"sclosedate\", \"sreportername\"]\n    };\n    const addIncidentId = this.state.controlMap.has(\"AddIncident\") ? this.state.controlMap.get(\"AddIncident\").ncontrolcode : -1;\n    const editOOSWorkFlowTransactionId = this.state.controlMap.has(\"EditWorkFlowTransaction\") && this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\n    const viewOOSWorkFlowTransactionId = this.state.controlMap.has(\"ViewWorkFlowTransaction\") && this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\n    const viewParamWorkFlowTransaction = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"noosworkflowtransactioncode\",\n      operation: \"view\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: viewOOSWorkFlowTransactionId,\n      masterData: this.props.Login.masterData\n    };\n    const editParamWorkFlowTransaction = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"noosworkflowtransactioncode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editOOSWorkFlowTransactionId,\n      masterData: this.props.Login.masterData\n    };\n    const deleteIncidentId = this.state.controlMap.has(\"DeleteIncident\") && this.state.controlMap.get(\"DeleteIncident\").ncontrolcode;\n    const openIncidentId = this.state.controlMap.has(\"OpenIncident\") && this.state.controlMap.get(\"OpenIncident\").ncontrolcode;\n    const closeIncidentId = this.state.controlMap.has(\"CloseIncident\") && this.state.controlMap.get(\"CloseIncident\").ncontrolcode;\n    const viewIncidentDetailsId = this.state.controlMap.has(\"ViewIncidentDetails\") && this.state.controlMap.get(\"ViewIncidentDetails\").ncontrolcode;\n    const openIncidentParam = {\n      operation: \"open\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: openIncidentId,\n      masterData: this.props.Login.masterData\n    };\n    const closeIncidentParam = {\n      operation: \"close\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: closeIncidentId,\n      masterData: this.props.Login.masterData\n    };\n    const incidentDetailParam = {\n      operation: \"view\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: closeIncidentId,\n      masterData: this.props.Login.masterData\n    };\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.RECEIVED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"IDS_INCIDENT\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.OosMaster,\n      getMasterDetail: OosMaster => this.props.getIncidentDetail(OosMaster, this.props.Login.userInfo, this.props.Login.masterData),\n      openModal: this.openIncidentModal,\n      selectedMaster: this.props.Login.masterData.selectedOosMaster,\n      primaryKeyField: \"noosmastercode\",\n      mainField: \"soosno\",\n      firstField: \"ssourceofincident\",\n      secondField: \"sincidentdate\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addIncidentId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      showFilterIcon: false,\n      showFilter: false,\n      filterComponent: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.OosMaster && this.props.Login.masterData.OosMaster.length > 0 && this.props.Login.masterData.selectedOosMaster ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.selectedOosMaster.ssourceofincident), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 69\n      }\n    }), this.props.Login.masterData.selectedOosMaster.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteIncidentId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      onClick: () => this.ConfirmDelete(deleteIncidentId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(openIncidentId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_OPENINCIDENT\"\n      }),\n      onClick: e => this.openCloseIncident(openIncidentParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Open, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(closeIncidentId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CLOSEINCIDENT\"\n      }),\n      onClick: e => this.openCloseIncident(closeIncidentParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(viewIncidentDetailsId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_INCIDENTDETAILS\"\n      }),\n      onClick: e => this.getIncidentDetails(incidentDetailParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"noosmastercode\",\n      data: this.props.Login.masterData.OosWorkFlowTransaction || [],\n      dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: [{\n        \"idsName\": \"IDS_STEPNAME\",\n        \"dataField\": \"soosworkflowtypename\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_ADDITIONALCOMMENTS\",\n        \"dataField\": \"sadditionalcomments\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"stransdisplaystatus\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_FILENAME\",\n        \"dataField\": \"sfilename\",\n        \"width\": \"200px\"\n      }],\n      userInfo: this.props.Login.userInfo,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      deleteRecord: this.deleteIncidentWorkFlowTransaction,\n      methodUrl: \"WorkFlowTransaction\",\n      pageable: true,\n      isComponent: false,\n      hasDynamicColSize: true,\n      isActionRequired: true,\n      isToolBarRequired: true,\n      isAddRequired: true,\n      addRecord: this.openIncidentStep,\n      editParam: editParamWorkFlowTransaction,\n      fetchRecord: this.editIncidentStep,\n      isRefreshRequired: false,\n      isImportRequired: false,\n      isDownloadPDFRequired: false,\n      isDownloadExcelRequired: false,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      expandField: \"expanded\",\n      viewParam: viewParamWorkFlowTransaction,\n      viewRecord: this.viewChecklistQb,\n      viewDownloadFile: this.downloadWorkFlowTransactionFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 53\n      }\n    }))) : \"\")))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" ? \"xl\" : \"lg\",\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onMandatoryCheck,\n      esign: false,\n      validateEsign: this.validateEsign,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: [],\n      hideSave: this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" ? true : this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\" && this.props.Login.masterData && this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED ? true : false,\n      addComponent: this.props.Login.loadEsignStateHandle ? /*#__PURE__*/React.createElement(EsignStateHandle, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_INCIDENT\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(AddIncident, {\n        inputParam: this.props.Login.inputParam,\n        operation: this.props.Login.operation,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        childDataChange: this.childDataChange,\n        OosWorkFlowType: this.props.Login.OosWorkFlowType || [],\n        OosStepStatus: this.props.Login.OosStepStatus || [],\n        noosworkflowtypecode: this.props.Login.noosworkflowtypecode,\n        ntranscode: this.props.Login.ntranscode,\n        OosMaster: this.props.Login.masterData.OosMaster || [],\n        scomments: this.props.Login.scomments || \"\",\n        sadditionalcomments: this.props.Login.sadditionalcomments || \"\",\n        currentDateTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(AddOOSWorkFlowTransaction, {\n        inputParam: this.props.Login.inputParam,\n        operation: this.props.Login.operation,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        childDataChange: this.childDataChange,\n        OosWorkFlowType: this.props.Login.OosWorkFlowType || [],\n        OosStepStatus: this.props.Login.OosStepStatus || [],\n        noosworkflowtypecode: this.props.Login.noosworkflowtypecode,\n        ntranscode: this.props.Login.ntranscode,\n        OosMaster: this.props.Login.masterData.OosMaster || [],\n        scomments: this.props.Login.scomments || \"\",\n        sadditionalcomments: this.props.Login.sadditionalcomments || \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\" && this.props.Login.operation === \"view\" ? /*#__PURE__*/React.createElement(AddOOSChecklistQb, {\n        inputParam: this.props.Login.inputParam,\n        operation: this.props.Login.operation,\n        selectedRecord: this.props.Login.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        childDataChange: this.childDataChange,\n        OosMaster: this.props.Login.masterData.OosMaster || [],\n        needValidation: true,\n        templateData: this.props.Login.masterData.templateData,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" && this.props.Login.operation === \"view\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_INCIDENTDATE\",\n        message: \"Incident Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sincidentdate !== '' ? this.props.Login.masterData.OOSMasterDetails[0].sincidentdate : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_SOURCEOFINCIDENT\",\n        message: \"Source of Incident\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].ssourceofincident !== '' ? this.props.Login.masterData.OOSMasterDetails[0].ssourceofincident : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_SOURCEID\",\n        message: \"Source ID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].ssourceid !== '' ? this.props.Login.masterData.OOSMasterDetails[0].ssourceid : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_SOURCENAME\",\n        message: \"Source Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].ssourcename !== '' ? this.props.Login.masterData.OOSMasterDetails[0].ssourcename : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_DESCRIPTION\",\n        message: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sdescription !== '' ? this.props.Login.masterData.OOSMasterDetails[0].sdescription : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_REPORTERNAME\",\n        message: \"Reporter Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sreportername !== '' ? this.props.Login.masterData.OOSMasterDetails[0].sreportername : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OPENDATE\",\n        message: \"Open Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sopendate !== '' ? this.props.Login.masterData.OOSMasterDetails[0].sopendate : '-' : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_CLOSEDATE\",\n        message: \"Close Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        className: \"text-break\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 49\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sclosedate !== '' ? this.props.Login.masterData.OOSMasterDetails[0].sclosedate : '-' : '-'))))) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      selectedRecord,\n      skip,\n      take,\n      masterData\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n    }\n\n    if (bool) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        skip,\n        take,\n        masterData\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.isInitialRender === false && nextState.selectedRecord !== this.state.selectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  } // Commented due to removed tabs\n  // tabDetail = () => {\n  //     const tabMap = new Map();\n  //     const editOOSWorkFlowTransactionId =\n  //         this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\n  //         this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\n  //     const viewOOSWorkFlowTransactionId =\n  //         this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\n  //         this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\n  //     // const extractedColumnList = [\n  //     //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //     // ];\n  //     const editParamWorkFlowTransaction = {\n  //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\n  //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     };\n  //     const viewParamWorkFlowTransaction = {\n  //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\n  //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     };\n  //     // const editParamOOSChecklist = {\n  //     //     screenName: this.props.Login.screenName, primaryKeyField: \"noosmasterchecklistcode\", operation: \"update\",\n  //     //     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     // }\n  //     tabMap.set(\"IDS_WORKFLOWTRANSACTION\",\n  //         <DataGrid\n  //             primaryKeyField={\"noosmastercode\"}\n  //             data={this.props.Login.masterData.OosWorkFlowTransaction || []}\n  //             dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.sampleGridDataState)}\n  //             dataState={this.state.sampleGridDataState}\n  //             dataStateChange={this.sampleInfoDataStateChange}\n  //             extractedColumnList={[\n  //                 { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //             ]}\n  //             // detailedFieldList={[]}\n  //             // exportFieldList={[]}\n  //             userInfo={this.props.Login.userInfo}\n  //             controlMap={this.state.controlMap}\n  //             userRoleControlRights={this.state.userRoleControlRights}\n  //             inputParam={this.props.Login.inputParam}\n  //             deleteRecord={this.deleteIncidentWorkFlowTransaction}\n  //             // deleteParam={goodsinDeleteSampleParam}\n  //             methodUrl={\"WorkFlowTransaction\"}\n  //             pageable={true}\n  //             isComponent={false}\n  //             hasDynamicColSize={true}\n  //             isActionRequired={true}\n  //             isToolBarRequired={true}\n  //             isAddRequired={true}\n  //             addRecord={this.openIncidentStep}\n  //             // fetchRecord={this.fetchEditOosMasterStep}\n  //             editParam={editParamWorkFlowTransaction}\n  //             isRefreshRequired={false}\n  //             isImportRequired={false}\n  //             isDownloadPDFRequired={false}\n  //             isDownloadExcelRequired={false}\n  //             // import={this.ImportFile}\n  //             scrollable={'scrollable'}\n  //             gridHeight={'600px'}\n  //             expandField=\"expanded\"\n  //             viewParam={viewParamWorkFlowTransaction}\n  //             viewRecord={this.viewChecklistQb}\n  //         // screenName=\"OOS Master\"\n  //         />\n  //     );\n  //     // tabMap.set(\"IDS_OOSCHECKLIST\",\n  //     //     <DataGrid\n  //     //         primaryKeyField={\"noosmastercode\"}\n  //     //         data={this.props.Login.masterData.OosMasterChecklist || []}\n  //     //         dataResult={process(this.props.Login.masterData.OosMasterChecklist || [], this.state.sampleGridDataState)}\n  //     //         dataState={this.state.sampleGridDataState}\n  //     //         dataStateChange={this.sampleInfoDataStateChange}\n  //     //         extractedColumnList={[\n  //     //             { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"200px\" },\n  //     //             { \"idsName\": \"IDS_CHECKLISTVERSION\", \"dataField\": \"schecklistversionname\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //     //         ]}\n  //     //         // detailedFieldList={[]}\n  //     //         // exportFieldList={[]}\n  //     //         userInfo={this.props.Login.userInfo}\n  //     //         controlMap={this.state.controlMap}\n  //     //         userRoleControlRights={this.state.userRoleControlRights}\n  //     //         inputParam={this.props.Login.inputParam}\n  //     //         deleteRecord={this.DeleteGoodsInSample}\n  //     //         // deleteParam={goodsinDeleteSampleParam}\n  //     //         methodUrl={\"OOSChecklist\"}\n  //     //         pageable={true}\n  //     //         isComponent={false}\n  //     //         hasDynamicColSize={true}\n  //     //         isActionRequired={true}\n  //     //         isToolBarRequired={true}\n  //     //         isAddRequired={true}\n  //     //         addRecord={this.openOosMasterChecklist}\n  //     //         // fetchRecord={this.fetchEditOosMasterStep}\n  //     //         editParam={editParamOOSChecklist}\n  //     //         isRefreshRequired={false}\n  //     //         isImportRequired={false}\n  //     //         isDownloadPDFRequired={false}\n  //     //         isDownloadExcelRequired={false}\n  //     //         // import={this.ImportFile}\n  //     //         scrollable={'scrollable'}\n  //     //         gridHeight={'600px'}\n  //     //         expandField=\"expanded\"\n  //     //     // screenName=\"OOS Master\"\n  //     //     />\n  //     // );\n  //     return tabMap;\n  // }\n  // onTabChange = (tabProps) => {\n  //     const screenName = tabProps.screenName;\n  //     const updateInfo = {\n  //         typeName: DEFAULT_RETURN,\n  //         data: { screenName }\n  //     }\n  //     this.props.updateStore(updateInfo);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  getIncidentMasterData,\n  getIncidentDetail,\n  updateStore,\n  viewAttachment,\n  onSaveIncidentWorkFlowTransaction,\n  getIncidentDetailsData,\n  filterColumnData,\n  onSaveIncidentChecklistQb,\n  deleteIncidentWorkFlowTransaction,\n  onUpdateIncidentWorkFlowTransaction,\n  onSaveIncident,\n  crudMaster,\n  openCloseIncident,\n  validateEsignforIncident\n})(injectIntl(Incident));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/approval/Incident.jsx"],"names":["React","ListWrapper","Col","Row","Card","Nav","FormGroup","FormLabel","ListMaster","connect","injectIntl","FormattedMessage","ReadOnlyText","ContentPanel","getControlMap","onSaveMandatoryValidation","showEsign","Lims_JSON_stringify","create_UUID","replaceUpdatedObject","rearrangeDateFormat","toast","callService","getIncidentMasterData","getIncidentDetail","onSaveIncidentWorkFlowTransaction","updateStore","viewAttachment","onSaveIncidentChecklistQb","deleteIncidentWorkFlowTransaction","getIncidentDetailsData","filterColumnData","onUpdateIncidentWorkFlowTransaction","onSaveIncident","crudMaster","openCloseIncident","validateEsignforIncident","transactionStatus","attachmentType","DataGrid","process","Axios","DEFAULT_RETURN","rsapi","AddOOSWorkFlowTransaction","SlideOutModal","EsignStateHandle","constructOptionList","AddOOSChecklistQb","faEye","faTrashAlt","FontAwesomeIcon","AddIncident","ConfirmMessage","mapStateToProps","state","Login","Incident","Component","constructor","props","reloadData","searchRef","current","value","masterData","inputData","userinfo","userInfo","inputParam","closeModal","loadEsignStateHandle","openModal","screenName","operation","selectedRecord","selectedId","scomments","sadditionalcomments","updateInfo","typeName","data","openIncidentModal","post","then","response","currentTime","dataStateChange","event","setState","dataResult","OosWorkFlowTransaction","dataState","oosDetailsDataStateChange","OOSMasterDetails","oosDetailsDataState","openIncidentStep","controlCode","isInitialRender","url","urlArray","push","noosmastercode","selectedOosMaster","all","responseData","OosWorkFlowTypeMap","oosWorkFlowType","OosWorkFlowType","get","noosworkflowtypecode","ntranscode","OosStepStatusMap","OosStepStatus","ncontrolCode","catch","error","status","message","warn","loading","editIncidentStep","editParam","selectedWorkFlowTransaction","editRow","noosworkflowtransactioncode","length","label","soosworkflowtypename","stransdisplaystatus","ntransactionstatus","intl","formatMessage","id","deleteParam","classUrl","methodUrl","viewChecklistQb","selectedRow","viewRow","templateData","ChecklistData","lsteditedQB","map","checklist","nchecklistversionqbcode","nchecklistqbcode","nchecklistversioncode","sdefaultvalue","nchecklistcomponentcode","primaryKeyValue","downloadWorkFlowTransactionFile","downloadParam","downloadParameterValue","oosworkflowtransactionfile","childDataChange","onMandatoryCheck","mandatoryFields","validateEsign","onSaveClick","saveType","formRef","formData","FormData","acceptedFiles","sfilename","isFileEdited","NO","fileArray","Array","isArray","forEach","file","index","splittedFileName","name","split","fileExtension","fileName","ssystemfilename","uniquefilename","tempData","replaceAll","trim","size","append","YES","JSON","stringify","FTP","sformname","smodulename","slanguagename","isFileupload","userRoleControlRights","nformcode","screenData","ncontrolcode","failedControls","control","nmandatoryfield","item","alertMessage","squestion","displayName","info","dincidentdate","ssourceofincident","ssourcename","ssourceid","sreportername","sdescription","ConfirmDelete","deleteIncidentId","confirmMessage","confirm","DeleteIncident","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","loadEsign","parameter","getIncidentDetails","incidentDetailParam","modalName","sreason","nreasoncode","spredefinedreason","password","createRef","skip","take","settings","parseInt","controlMap","Map","masterStatus","render","filterParam","searchFieldList","addIncidentId","has","editOOSWorkFlowTransactionId","viewOOSWorkFlowTransactionId","viewParamWorkFlowTransaction","editParamWorkFlowTransaction","openIncidentId","closeIncidentId","viewIncidentDetailsId","openIncidentParam","closeIncidentParam","userStatusCSS","activeIconCSS","DRAFT","RECEIVED","sidebarview","searchedData","OosMaster","parentFunction","indexOf","e","CLOSED","sincidentdate","sopendate","sclosedate","getDerivedStateFromProps","multilingualMsg","undefined","componentDidUpdate","previousProps","bool","Object","values","shouldComponentUpdate","nextProps","nextState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Col, Row, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport {\r\n    getControlMap, onSaveMandatoryValidation, showEsign, Lims_JSON_stringify, create_UUID, replaceUpdatedObject,\r\n    rearrangeDateFormat\r\n} from '../../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, getIncidentMasterData, getIncidentDetail, onSaveIncidentWorkFlowTransaction, updateStore, viewAttachment,\r\n    onSaveIncidentChecklistQb, deleteIncidentWorkFlowTransaction, getIncidentDetailsData, filterColumnData,\r\n    onUpdateIncidentWorkFlowTransaction, onSaveIncident, crudMaster, openCloseIncident, validateEsignforIncident\r\n} from '../../actions';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport Axios from 'axios';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport rsapi from '../../rsapi';\r\nimport AddOOSWorkFlowTransaction from './AddOOSWorkFlowTransaction';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\nimport AddOOSChecklistQb from './AddOOSChecklistQb';\r\nimport { ReactComponent as Close } from '../../assets/image/rectangle-xmark-regular.svg';\r\nimport { ReactComponent as Open } from '../../assets/image/open.svg';\r\nimport { faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AddIncident from './AddIncident';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n\r\nconst mapStateToProps = state => { return ({ Login: state.Login }) }\r\n\r\nclass Incident extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            oosDetailsDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            data: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const filterParam = {\r\n            inputListName: \"OosMaster\", selectedObject: \"selectedOosMaster\", primaryKeyField: \"noosmastercode\",\r\n            fetchUrl: \"incident/getActiveIncidentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssourceofincident\", \"soosno\", \"sincidentdate\", \"ssourceid\", \"ssourcename\", \"sdescription\", \"sopendate\", \"sclosedate\", \"sreportername\"]\r\n        };\r\n\r\n        const addIncidentId = this.state.controlMap.has(\"AddIncident\") ? this.state.controlMap.get(\"AddIncident\").ncontrolcode : -1;\r\n\r\n        const editOOSWorkFlowTransactionId =\r\n            this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\r\n            this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\r\n\r\n        const viewOOSWorkFlowTransactionId =\r\n            this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\r\n            this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\r\n\r\n        const viewParamWorkFlowTransaction = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const editParamWorkFlowTransaction = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const deleteIncidentId =\r\n            this.state.controlMap.has(\"DeleteIncident\") &&\r\n            this.state.controlMap.get(\"DeleteIncident\").ncontrolcode;\r\n\r\n        const openIncidentId =\r\n            this.state.controlMap.has(\"OpenIncident\") &&\r\n            this.state.controlMap.get(\"OpenIncident\").ncontrolcode;\r\n\r\n        const closeIncidentId =\r\n            this.state.controlMap.has(\"CloseIncident\") &&\r\n            this.state.controlMap.get(\"CloseIncident\").ncontrolcode;\r\n\r\n        const viewIncidentDetailsId =\r\n            this.state.controlMap.has(\"ViewIncidentDetails\") &&\r\n            this.state.controlMap.get(\"ViewIncidentDetails\").ncontrolcode;\r\n\r\n        const openIncidentParam = {\r\n            operation: \"open\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: openIncidentId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        const closeIncidentParam = {\r\n            operation: \"close\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: closeIncidentId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        const incidentDetailParam = {\r\n            operation: \"view\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: closeIncidentId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.RECEIVED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <Row noGutters={true} >\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"IDS_INCIDENT\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.OosMaster}\r\n                                getMasterDetail={(OosMaster) => this.props.getIncidentDetail(OosMaster, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                openModal={this.openIncidentModal}\r\n                                selectedMaster={this.props.Login.masterData.selectedOosMaster}\r\n                                primaryKeyField=\"noosmastercode\"\r\n                                mainField=\"soosno\"\r\n                                firstField={\"ssourceofincident\"}\r\n                                secondField={\"sincidentdate\"}\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addIncidentId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                showFilterIcon={false}\r\n                                showFilter={false}\r\n                                filterComponent={[]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.OosMaster && this.props.Login.masterData.OosMaster.length > 0 && this.props.Login.masterData.selectedOosMaster ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedOosMaster.ssourceofincident}</Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <div className=\"d-flex product-category\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                <span className={`btn btn-outlined ${userStatusCSS} btn-sm`}>\r\n                                                                    <i className={activeIconCSS}></i>\r\n                                                                    {this.props.Login.masterData.selectedOosMaster.stransdisplaystatus}\r\n                                                                </span>\r\n                                                            </h2>\r\n                                                            <div className=\"d-inline \">\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteIncidentId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    onClick={() => this.ConfirmDelete(deleteIncidentId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(openIncidentId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_OPENINCIDENT\" })}\r\n                                                                    onClick={(e) => this.openCloseIncident(openIncidentParam)} >\r\n                                                                    <Open className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(closeIncidentId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CLOSEINCIDENT\" })}\r\n                                                                    onClick={(e) => this.openCloseIncident(closeIncidentParam)} >\r\n                                                                    <Close className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(viewIncidentDetailsId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_INCIDENTDETAILS\" })}\r\n                                                                    onClick={(e) => this.getIncidentDetails(incidentDetailParam)} >\r\n                                                                    <FontAwesomeIcon icon={faEye} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    {/* <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"noosmastercode\"}\r\n                                                        data={this.props.Login.masterData.OosWorkFlowTransaction || []}\r\n                                                        dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.dataState)}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={this.dataStateChange}\r\n                                                        extractedColumnList={[\r\n                                                            { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" }\r\n                                                        ]}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        deleteRecord={this.deleteIncidentWorkFlowTransaction}\r\n                                                        methodUrl={\"WorkFlowTransaction\"}\r\n                                                        pageable={true}\r\n                                                        isComponent={false}\r\n                                                        hasDynamicColSize={true}\r\n                                                        isActionRequired={true}\r\n                                                        isToolBarRequired={true}\r\n                                                        isAddRequired={true}\r\n                                                        addRecord={this.openIncidentStep}\r\n                                                        editParam={editParamWorkFlowTransaction}\r\n                                                        fetchRecord={this.editIncidentStep}\r\n                                                        isRefreshRequired={false}\r\n                                                        isImportRequired={false}\r\n                                                        isDownloadPDFRequired={false}\r\n                                                        isDownloadExcelRequired={false}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'600px'}\r\n                                                        expandField=\"expanded\"\r\n                                                        viewParam={viewParamWorkFlowTransaction}\r\n                                                        viewRecord={this.viewChecklistQb}\r\n                                                        viewDownloadFile={this.downloadWorkFlowTransactionFile}\r\n                                                    />\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        size={this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" ? \"xl\" : \"lg\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onMandatoryCheck}\r\n                        esign={false}\r\n                        validateEsign={this.validateEsign}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={[]}\r\n                        hideSave={this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" ? true :\r\n                            (this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\" && this.props.Login.masterData\r\n                                && this.props.Login.masterData.selectedOosMaster\r\n                                && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED) ? true : false}\r\n                        addComponent={this.props.Login.loadEsignStateHandle ? (\r\n                            <EsignStateHandle\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                childDataChange={this.childDataChange}\r\n                            />\r\n                        ) : this.props.Login.screenName === \"IDS_INCIDENT\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ?\r\n                            <AddIncident\r\n                                inputParam={this.props.Login.inputParam}\r\n                                operation={this.props.Login.operation}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                childDataChange={this.childDataChange}\r\n                                OosWorkFlowType={this.props.Login.OosWorkFlowType || []}\r\n                                OosStepStatus={this.props.Login.OosStepStatus || []}\r\n                                noosworkflowtypecode={this.props.Login.noosworkflowtypecode}\r\n                                ntranscode={this.props.Login.ntranscode}\r\n                                OosMaster={this.props.Login.masterData.OosMaster || []}\r\n                                scomments={this.props.Login.scomments || \"\"}\r\n                                sadditionalcomments={this.props.Login.sadditionalcomments || \"\"}\r\n                                currentDateTime={this.props.Login.currentTime}\r\n                            />\r\n                            : this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? (\r\n                                <AddOOSWorkFlowTransaction\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    operation={this.props.Login.operation}\r\n                                    selectedRecord={this.state.selectedRecord}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    childDataChange={this.childDataChange}\r\n                                    OosWorkFlowType={this.props.Login.OosWorkFlowType || []}\r\n                                    OosStepStatus={this.props.Login.OosStepStatus || []}\r\n                                    noosworkflowtypecode={this.props.Login.noosworkflowtypecode}\r\n                                    ntranscode={this.props.Login.ntranscode}\r\n                                    OosMaster={this.props.Login.masterData.OosMaster || []}\r\n                                    scomments={this.props.Login.scomments || \"\"}\r\n                                    sadditionalcomments={this.props.Login.sadditionalcomments || \"\"}\r\n                                />\r\n                            ) : this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\" && (this.props.Login.operation === \"view\") ? (\r\n                                <AddOOSChecklistQb\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    operation={this.props.Login.operation}\r\n                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    childDataChange={this.childDataChange}\r\n                                    OosMaster={this.props.Login.masterData.OosMaster || []}\r\n                                    needValidation={true}\r\n                                    templateData={this.props.Login.masterData.templateData}\r\n                                    masterData={this.props.Login.masterData}\r\n                                />\r\n                            ) : this.props.Login.screenName === \"IDS_INCIDENTDETAILS\" && (this.props.Login.operation === \"view\") ? (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_INCIDENTDATE\"\r\n                                                        message=\"Incident Date\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].sincidentdate !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].sincidentdate : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_SOURCEOFINCIDENT\"\r\n                                                        message=\"Source of Incident\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].ssourceofincident !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].ssourceofincident : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_SOURCEID\"\r\n                                                        message=\"Source ID\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].ssourceid !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].ssourceid : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_SOURCENAME\"\r\n                                                        message=\"Source Name\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].ssourcename !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].ssourcename : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_DESCRIPTION\"\r\n                                                        message=\"Description\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].sdescription !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].sdescription : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_REPORTERNAME\"\r\n                                                        message=\"Reporter Name\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].sreportername !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].sreportername : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_OPENDATE\"\r\n                                                        message=\"Open Date\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].sopendate !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].sopendate : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel>\r\n                                                    <FormattedMessage\r\n                                                        id=\"IDS_CLOSEDATE\"\r\n                                                        message=\"Close Date\"\r\n                                                    />\r\n                                                </FormLabel>\r\n                                                <ReadOnlyText className='text-break'>\r\n                                                    {\r\n                                                        this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                            && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                            this.props.Login.masterData.OOSMasterDetails[0].sclosedate !== '' ?\r\n                                                                this.props.Login.masterData.OOSMasterDetails[0].sclosedate : '-' : '-'\r\n                                                    }\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : \"\"}\r\n                    />\r\n                    : \"\"\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap, selectedRecord, skip, take, masterData } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n        }\r\n        if (bool) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord, skip, take, masterData\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.isInitialRender === false && (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let masterData = {\r\n            ...this.props.Login.masterData\r\n        };\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let inputParam = {\r\n            masterData,\r\n            inputData\r\n        }\r\n        this.props.getIncidentMasterData(inputParam);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\r\n        let openModal = this.props.Login.openModal;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        let scomments = this.props.Login.scomments;\r\n        let sadditionalcomments = this.props.Login.sadditionalcomments;\r\n        if (this.props.Login.loadEsignStateHandle) {\r\n            if (this.props.Login.operation === \"close\") {\r\n                loadEsignStateHandle = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsignStateHandle = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            screenName = \"\";\r\n            operation = \"\";\r\n            selectedId = \"\";\r\n            scomments = \"\";\r\n            sadditionalcomments = \"\";\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsignStateHandle, selectedRecord, screenName, operation, selectedId, scomments, sadditionalcomments }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    openIncidentModal = () => {\r\n        let openModal = true;\r\n        let screenName = \"IDS_INCIDENT\";\r\n        let operation = \"create\";\r\n        let selectedRecord = {};\r\n        rsapi.post(\"timezone/getLocalTimeByZone\", { userinfo: this.props.Login.userInfo })\r\n            .then(response => {\r\n                const currentTime = rearrangeDateFormat(this.props.Login.userInfo, response.data)\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { openModal, screenName, operation, selectedRecord, currentTime }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            })\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    oosDetailsDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.OOSMasterDetails || [], event.dataState),\r\n            oosDetailsDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    openIncidentStep = (controlCode) => {\r\n        const isInitialRender = true;\r\n        let selectedRecord = {};\r\n        const url = \"incident/getWorkFlowType\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: this.props.Login.userInfo,\r\n            noosmastercode: (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.noosmastercode)\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let responseData = response[0].data;\r\n                const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", 'noosworkflowtypecode', 'ascending', false);\r\n                let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\r\n                let noosworkflowtypecode = [];\r\n                let ntranscode = [];\r\n                const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\r\n                let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: true,\r\n                        OosWorkFlowType,\r\n                        OosStepStatus,\r\n                        noosworkflowtypecode,\r\n                        ntranscode,\r\n                        screenName: \"IDS_INCIDENTWORKFLOWSTEP\",\r\n                        operation: \"create\",\r\n                        isInitialRender,\r\n                        selectedRecord,\r\n                        ncontrolCode: controlCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        // }\r\n    }\r\n\r\n    editIncidentStep = (editParam) => {\r\n        const isInitialRender = true;\r\n        let selectedWorkFlowTransaction = editParam.editRow;\r\n        const url = \"incident/getActiveIncidentWorkFlowTransactionById\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: this.props.Login.userInfo,\r\n            noosworkflowtransactioncode: (selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosworkflowtransactioncode),\r\n            noosmastercode: (selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosmastercode)\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let responseData = response[0].data;\r\n                if (responseData && responseData.OosWorkFlowTransaction && responseData.OosWorkFlowTransaction !== null && responseData.OosWorkFlowTransaction.length > 0) {\r\n                    const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\r\n                    const OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n                    const noosworkflowtypecode = {\r\n                        label: responseData.OosWorkFlowTransaction[0].soosworkflowtypename,\r\n                        value: responseData.OosWorkFlowTransaction[0].noosworkflowtypecode\r\n                    }\r\n                    const ntranscode = {\r\n                        label: responseData.OosWorkFlowTransaction[0].stransdisplaystatus,\r\n                        value: responseData.OosWorkFlowTransaction[0].ntransactionstatus\r\n                    }\r\n                    let selectedRecord = {\r\n                        noosworkflowtypecode: noosworkflowtypecode,\r\n                        ntranscode: ntranscode,\r\n                        scomments: responseData.OosWorkFlowTransaction[0].scomments,\r\n                        sadditionalcomments: responseData.OosWorkFlowTransaction[0].sadditionalcomments\r\n                    }\r\n                    const scomments = responseData.OosWorkFlowTransaction[0].scomments;\r\n                    const sadditionalcomments = responseData.OosWorkFlowTransaction[0].sadditionalcomments;\r\n                    const selectedId = responseData.OosWorkFlowTransaction[0].noosworkflowtransactioncode\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            OosStepStatus,\r\n                            noosworkflowtypecode,\r\n                            ntranscode,\r\n                            screenName: \"IDS_INCIDENTWORKFLOWSTEP\",\r\n                            operation: \"update\",\r\n                            isInitialRender,\r\n                            scomments,\r\n                            sadditionalcomments,\r\n                            selectedRecord,\r\n                            ncontrolCode: editParam.ncontrolCode,\r\n                            selectedId\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYDELETED\" }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        // }\r\n    }\r\n\r\n    deleteIncidentWorkFlowTransaction = (deleteParam) => {\r\n        let selectedRecord = deleteParam.selectedRecord;\r\n        let inputData = {};\r\n        inputData[\"noosworkflowtransactioncode\"] = selectedRecord.noosworkflowtransactioncode;\r\n        inputData[\"noosmastercode\"] = selectedRecord.noosmastercode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"IncidentWorkFlowTransaction\",\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        this.props.deleteIncidentWorkFlowTransaction(inputParam);\r\n    }\r\n\r\n    viewChecklistQb = (inputParam) => {\r\n        const isInitialRender = true;\r\n        let masterData = inputParam.masterData;\r\n        let selectedRow = inputParam.viewRow;\r\n        const url = \"incident/viewCheclistQb\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo, noosworkflowtransactioncode: selectedRow.noosworkflowtransactioncode, noosmastercode: selectedRow.noosmastercode }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let templateData = response[0].data.ChecklistData\r\n                if (templateData !== null) {\r\n                    masterData[\"templateData\"] = templateData;\r\n                    let selectedId = selectedRow.noosworkflowtransactioncode;\r\n                    let selectedRecord = {};\r\n                    let lsteditedQB = [];\r\n                    templateData.map(checklist => {\r\n                        selectedRecord[checklist.nchecklistversionqbcode] = {\r\n                            nchecklistqbcode: checklist.nchecklistqbcode,\r\n                            nchecklistversioncode: checklist.nchecklistversioncode,\r\n                            nchecklistversionqbcode: checklist.nchecklistversionqbcode,\r\n                            sdefaultvalue: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue,\r\n                            noosworkflowtransactioncode: inputParam.primaryKeyValue,\r\n                        }\r\n                        lsteditedQB.push(checklist.nchecklistversionqbcode);\r\n                        return null;\r\n                    });\r\n                    templateData.map(checklist => {\r\n                        selectedRecord['jsondata'] = {\r\n                            ...selectedRecord['jsondata'],\r\n                            [checklist.nchecklistversionqbcode]: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue\r\n                        }\r\n                        return null;\r\n                    });\r\n                    selectedRecord[\"editedQB\"] = lsteditedQB;\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            screenName: \"IDS_INCIDENTCHECKLISTQB\",\r\n                            operation: \"view\",\r\n                            isInitialRender,\r\n                            selectedRecord,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            masterData,\r\n                            selectedId\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_NODATAFOUND\" }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    downloadWorkFlowTransactionFile = (downloadParam) => {\r\n        let downloadParameterValue = downloadParam.inputData;\r\n        delete (downloadParameterValue.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                oosworkflowtransactionfile: downloadParameterValue,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"incident\",\r\n            operation: \"download\",\r\n            methodUrl: \"IncidentWorkFlowTransaction\",\r\n            screenName: \"Step File\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n\r\n    }\r\n    // openOosMasterChecklist = (controlCode) => {\r\n    //     const isInitialRender = true;\r\n    //     let selectedRecord = {};\r\n    //     const url = \"oos/getChecklist\";\r\n    //     let urlArray = [];\r\n    //     urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo }))\r\n    //     Axios.all(urlArray)\r\n    //         .then(response => {\r\n    //             let responseData = response[0].data;\r\n    //             const CheckListMap = constructOptionList(responseData.CheckList || [], \"nchecklistcode\", \"schecklistname\", '', 'nchecklistcode', false);\r\n    //             let CheckList = CheckListMap.get(\"OptionList\");\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     openModal: true,\r\n    //                     CheckList,\r\n    //                     screenName: \"IDS_INCIDENTMASTERCHECKLIST\",\r\n    //                     operation: \"create\",\r\n    //                     isInitialRender,\r\n    //                     selectedRecord,\r\n    //                     ncontrolCode: controlCode\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             } else {\r\n    //                 toast.warn(error.response.data);\r\n    //             }\r\n    //             this.setState({\r\n    //                 loading: false\r\n    //             });\r\n    //         });\r\n    // }\r\n\r\n    // fetchEditOosMasterStep = (editParam) => {\r\n    //     const isInitialRender = true;\r\n    //     let editParamValue = editParam;\r\n    //     const url = \"oos/getActiveOOSWorkFlowTransactionById\";\r\n    //         let urlArray = [];\r\n    //         urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo, noosworkflowtransactioncode: editParam.primaryKeyValue }))\r\n    //         Axios.all(urlArray)\r\n    //             .then(response => {\r\n    //                 let responseData = response[0].data;\r\n    //                 const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", '', 'noosworkflowtypecode', false);\r\n    //                 let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\r\n    //                 let noosworkflowtypecode = [];\r\n    //                 let ntranscode = [];\r\n    //                 const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", '', 'ntranscode', false);\r\n    //                 let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n    //                 const updateInfo = {\r\n    //                     typeName: DEFAULT_RETURN,\r\n    //                     data: {\r\n    //                         openModal: true,\r\n    //                         OosWorkFlowType,\r\n    //                         OosStepStatus,\r\n    //                         noosworkflowtypecode,\r\n    //                         ntranscode,\r\n    //                         screenName: \"IDS_INCIDENTMASTERSTEP\",\r\n    //                         operation: \"create\",\r\n    //                         isInitialRender,\r\n    //                         // selectedRecord,\r\n    //                         ncontrolCode: editParam.ncontrolCode\r\n    //                     }\r\n    //                 }\r\n    //                 this.props.updateStore(updateInfo);\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 if (error.response.status === 500) {\r\n    //                     toast.error(error.message);\r\n    //                 } else {\r\n    //                     toast.warn(error.response.data);\r\n    //                 }\r\n    //                 this.setState({\r\n    //                     loading: false\r\n    //                 });\r\n    //             });\r\n    // }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        let isInitialRender = false;\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender\r\n        });\r\n    }\r\n\r\n    onMandatoryCheck = () => {\r\n        const mandatoryFields =\r\n            this.props.Login.loadEsignStateHandle ?\r\n                [\r\n                    { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                ]\r\n                :\r\n                this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\" ?\r\n                    [\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"noosworkflowtypecode\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_STATUS\", \"dataField\": \"ntranscode\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                    :\r\n                    this.props.Login.screenName === \"IDS_INCIDENT\" ?\r\n                        [\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_INCIDENTDATE\", \"dataField\": \"dincidentdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"datepicker\" },\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_SOURCEOFINCIDENT\", \"dataField\": \"ssourceofincident\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\r\n                        ]\r\n                        :\r\n                        []\r\n            ;\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.onSaveClick, this.props.Login.loadEsignStateHandle);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.screenName === \"IDS_INCIDENTWORKFLOWSTEP\") {\r\n            if (this.props.Login.operation === \"create\") {\r\n                const formData = new FormData();\r\n                const selectedRecord = this.state.selectedRecord;\r\n                const acceptedFiles = selectedRecord.sfilename;\r\n                const userInfo = this.props.Login.userInfo;\r\n                const masterData = this.props.Login.masterData;\r\n                let isFileEdited = transactionStatus.NO;\r\n                let fileArray = [];\r\n                if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                    if (this.props.Login.operation === 'create') {\r\n                        acceptedFiles.forEach((file, index) => {\r\n                            const splittedFileName = file.name.split('.');\r\n                            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                                selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                            const uniquefilename = fileName + '.' + fileExtension;\r\n                            const tempData = {};\r\n                            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                            tempData[\"scomments\"] = selectedRecord.scomments;\r\n                            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                            tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                            tempData[\"ssystemfilename\"] = uniquefilename;\r\n                            tempData[\"nfilesize\"] = file.size;\r\n                            formData.append(\"uploadedFile\" + index, file);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            fileArray.push(tempData);\r\n                        });\r\n                        formData.append(\"filecount\", acceptedFiles.length);\r\n                        isFileEdited = transactionStatus.YES;\r\n                    } else {\r\n                        acceptedFiles.forEach((file, index) => {\r\n                            const splittedFileName = file.name.split('.');\r\n                            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                                selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                            const uniquefilename = fileName + '.' + fileExtension;\r\n                            const tempData = {};\r\n                            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                            tempData[\"scomments\"] = selectedRecord.scomments;\r\n                            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                            tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                            tempData[\"ssystemfilename\"] = uniquefilename;\r\n                            tempData[\"nfilesize\"] = file.size;\r\n                            formData.append(\"uploadedFile\" + index, file);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            formData.append(\"filecount\", acceptedFiles.length);\r\n                            isFileEdited = transactionStatus.YES;\r\n                            fileArray.push(tempData);\r\n                        });\r\n                    }\r\n                } else {\r\n                    let tempData = {};\r\n                    tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                    tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                    tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                    tempData[\"scomments\"] = selectedRecord.scomments;\r\n                    tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                    // tempData[\"sfilename\"] = acceptedFiles ? Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                    // tempData[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                    // tempData[\"nfilesize\"] = selectedRecord.size;\r\n                    fileArray.push(tempData);\r\n                }\r\n                formData.append(\"isFileEdited\", isFileEdited);\r\n                formData.append(\"oosworkflowtransaction\", JSON.stringify(fileArray));\r\n                formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n                formData.append(\"noosworkflowtransactioncode\", masterData.selectedOosMaster);\r\n                formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\r\n                formData.append(\"userinfo\", JSON.stringify({\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                }));\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        \"userinfo\": {\r\n                            ...userInfo,\r\n                            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                        },\r\n                        formData: formData,\r\n                        isFileupload: true,\r\n                        operation: this.props.Login.operation,\r\n                        classUrl: \"incident\",\r\n                        saveType: saveType,\r\n                        formRef: formRef,\r\n                        methodUrl: \"IncidentWorkFlowTransaction\",\r\n                        selectedRecord: this.state.selectedRecord,\r\n                        screenName: this.props.Login.screenName,\r\n                        masterData: this.props.Login.masterData\r\n                    }\r\n                };\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            screenData: { inputParam },\r\n                            loadEsignStateHandle: true,\r\n                            ncontrolcode: this.props.Login.ncontrolCode\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.onSaveIncidentWorkFlowTransaction(inputParam);\r\n                }\r\n            } else {\r\n                const selectedRecord = this.state.selectedRecord;\r\n                const userInfo = this.props.Login.userInfo;\r\n                const masterData = this.props.Login.masterData;\r\n                let inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1,\r\n                    noosworkflowtransactioncode: this.props.Login.selectedId,\r\n                    ntranscode: selectedRecord.ntranscode.value,\r\n                    scomments: selectedRecord.scomments,\r\n                    sadditionalcomments: selectedRecord.sadditionalcomments\r\n                }\r\n\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    operation: this.props.Login.operation,\r\n                    classUrl: \"incident\",\r\n                    methodUrl: \"IncidentWorkFlowTransaction\"\r\n                }\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            screenData: { inputParam },\r\n                            loadEsignStateHandle: true,\r\n                            ncontrolcode: this.props.Login.ncontrolCode\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.onUpdateIncidentWorkFlowTransaction(inputParam);\r\n                }\r\n\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_INCIDENTCHECKLISTQB\") {\r\n            const failedControls = [];\r\n            const mandatoryFields = [];\r\n            this.props.Login.masterData.templateData.map(control =>\r\n                control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : ''\r\n            )\r\n            mandatoryFields.forEach(item => {\r\n                if (this.state.selectedRecord && this.state.selectedRecord[item.nchecklistversionqbcode] && this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\r\n                    if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const alertMessage = item.squestion\r\n                    failedControls.push(alertMessage);\r\n                }\r\n            });\r\n            if (failedControls.length === 0) {\r\n                let inputData = [];\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"noosworkflowtransactioncode\"] = this.props.Login.selectedId;\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl: \"IncidentChecklistQb\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    masterData: this.props.Login.masterData\r\n                }\r\n                // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                //             openModal: true, openTemplateModal: true, screenName: \"IDS_GOODSINCHECKLIST\",\r\n                //             operation: this.props.Login.operation\r\n                //         }\r\n                //     }\r\n                //     this.props.updateStore(updateInfo);\r\n                // }\r\n                // else {\r\n                this.props.onSaveIncidentChecklistQb(inputParam);\r\n                // }\r\n            }\r\n            else {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${failedControls[0]}`);\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_INCIDENT\") {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            let inputData = {};\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"dincidentdate\"] = selectedRecord.dincidentdate;\r\n            inputData[\"ssourceofincident\"] = selectedRecord.ssourceofincident ? selectedRecord.ssourceofincident : \"\";\r\n            inputData[\"ssourcename\"] = selectedRecord.ssourcename ? selectedRecord.ssourcename : \"\";\r\n            inputData[\"ssourceid\"] = selectedRecord.ssourceid ? selectedRecord.ssourceid : \"\";\r\n            inputData[\"sreportername\"] = selectedRecord.sreportername ? selectedRecord.sreportername : \"\";\r\n            inputData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription : \"\";\r\n            // inputData[\"noosmastercode\"] = this.props.Login.selectedId;\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: this.props.Login.inputParam.methodUrl,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: this.props.Login.operation,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                searchRef: this.searchRef\r\n            }\r\n            this.props.onSaveIncident(inputParam);\r\n        }\r\n    }\r\n\r\n    ConfirmDelete = (deleteIncidentId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteIncident(\"delete\", deleteIncidentId));\r\n    }\r\n\r\n    DeleteIncident = (operation, ncontrolCode) => {\r\n        let inputData = {};\r\n        inputData[\"incident\"] = this.props.Login.masterData.selectedOosMaster;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"OosMaster\", selectedObject: \"selectedOosMaster\",\r\n            primaryKeyField: \"noosmastercode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedOosMaster.noosmastercode,\r\n            fetchUrl: \"incident/getActiveIncidentById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam,\r\n            // masterData: this.props.Login.masterData\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_INCIDENT\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    openCloseIncident = (parameter) => {\r\n        let masterData = parameter.masterData;\r\n        let inputData = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode\r\n            && masterData.selectedOosMaster.noosmastercode;\r\n        inputData[\"operation\"] = parameter.operation;\r\n\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: parameter.operation,\r\n            masterData: masterData\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, parameter.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsignStateHandle: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: this.props.Login.screenName, operation: parameter.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.openCloseIncident(inputParam);\r\n        }\r\n    }\r\n\r\n    getIncidentDetails = (incidentDetailParam) => {\r\n        const masterData = incidentDetailParam.masterData;\r\n        let inputData = {};\r\n        inputData[\"noosmastercode\"] = masterData && masterData.selectedOosMaster ? masterData.selectedOosMaster.noosmastercode : -1;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"IncidentDetails\",\r\n            inputData: inputData,\r\n            operation: \"view\",\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: masterData,\r\n            screenName: \"IDS_INCIDENTDETAILS\"\r\n        }\r\n        this.props.getIncidentDetailsData(inputParam);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        // let ncontrolcode = this.props.Login.ncontrolcode;\r\n        let modalName = \"openModal\";\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforIncident(inputParam, modalName);\r\n    }\r\n\r\n    // Commented due to removed tabs\r\n    // tabDetail = () => {\r\n    //     const tabMap = new Map();\r\n\r\n    //     const editOOSWorkFlowTransactionId =\r\n    //         this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\r\n    //         this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\r\n\r\n    //     const viewOOSWorkFlowTransactionId =\r\n    //         this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\r\n    //         this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\r\n    //     // const extractedColumnList = [\r\n    //     //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //     // ];\r\n\r\n    //     const editParamWorkFlowTransaction = {\r\n    //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\r\n    //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     };\r\n\r\n    //     const viewParamWorkFlowTransaction = {\r\n    //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\r\n    //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     };\r\n\r\n    //     // const editParamOOSChecklist = {\r\n    //     //     screenName: this.props.Login.screenName, primaryKeyField: \"noosmasterchecklistcode\", operation: \"update\",\r\n    //     //     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     // }\r\n\r\n    //     tabMap.set(\"IDS_WORKFLOWTRANSACTION\",\r\n    //         <DataGrid\r\n    //             primaryKeyField={\"noosmastercode\"}\r\n    //             data={this.props.Login.masterData.OosWorkFlowTransaction || []}\r\n    //             dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.sampleGridDataState)}\r\n    //             dataState={this.state.sampleGridDataState}\r\n    //             dataStateChange={this.sampleInfoDataStateChange}\r\n    //             extractedColumnList={[\r\n    //                 { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //             ]}\r\n    //             // detailedFieldList={[]}\r\n    //             // exportFieldList={[]}\r\n    //             userInfo={this.props.Login.userInfo}\r\n    //             controlMap={this.state.controlMap}\r\n    //             userRoleControlRights={this.state.userRoleControlRights}\r\n    //             inputParam={this.props.Login.inputParam}\r\n    //             deleteRecord={this.deleteIncidentWorkFlowTransaction}\r\n    //             // deleteParam={goodsinDeleteSampleParam}\r\n    //             methodUrl={\"WorkFlowTransaction\"}\r\n    //             pageable={true}\r\n    //             isComponent={false}\r\n    //             hasDynamicColSize={true}\r\n    //             isActionRequired={true}\r\n    //             isToolBarRequired={true}\r\n    //             isAddRequired={true}\r\n    //             addRecord={this.openIncidentStep}\r\n    //             // fetchRecord={this.fetchEditOosMasterStep}\r\n    //             editParam={editParamWorkFlowTransaction}\r\n    //             isRefreshRequired={false}\r\n    //             isImportRequired={false}\r\n    //             isDownloadPDFRequired={false}\r\n    //             isDownloadExcelRequired={false}\r\n    //             // import={this.ImportFile}\r\n    //             scrollable={'scrollable'}\r\n    //             gridHeight={'600px'}\r\n    //             expandField=\"expanded\"\r\n    //             viewParam={viewParamWorkFlowTransaction}\r\n    //             viewRecord={this.viewChecklistQb}\r\n    //         // screenName=\"OOS Master\"\r\n    //         />\r\n    //     );\r\n\r\n    //     // tabMap.set(\"IDS_OOSCHECKLIST\",\r\n    //     //     <DataGrid\r\n    //     //         primaryKeyField={\"noosmastercode\"}\r\n    //     //         data={this.props.Login.masterData.OosMasterChecklist || []}\r\n    //     //         dataResult={process(this.props.Login.masterData.OosMasterChecklist || [], this.state.sampleGridDataState)}\r\n    //     //         dataState={this.state.sampleGridDataState}\r\n    //     //         dataStateChange={this.sampleInfoDataStateChange}\r\n    //     //         extractedColumnList={[\r\n    //     //             { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"200px\" },\r\n    //     //             { \"idsName\": \"IDS_CHECKLISTVERSION\", \"dataField\": \"schecklistversionname\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //     //         ]}\r\n    //     //         // detailedFieldList={[]}\r\n    //     //         // exportFieldList={[]}\r\n    //     //         userInfo={this.props.Login.userInfo}\r\n    //     //         controlMap={this.state.controlMap}\r\n    //     //         userRoleControlRights={this.state.userRoleControlRights}\r\n    //     //         inputParam={this.props.Login.inputParam}\r\n    //     //         deleteRecord={this.DeleteGoodsInSample}\r\n    //     //         // deleteParam={goodsinDeleteSampleParam}\r\n    //     //         methodUrl={\"OOSChecklist\"}\r\n    //     //         pageable={true}\r\n    //     //         isComponent={false}\r\n    //     //         hasDynamicColSize={true}\r\n    //     //         isActionRequired={true}\r\n    //     //         isToolBarRequired={true}\r\n    //     //         isAddRequired={true}\r\n    //     //         addRecord={this.openOosMasterChecklist}\r\n    //     //         // fetchRecord={this.fetchEditOosMasterStep}\r\n    //     //         editParam={editParamOOSChecklist}\r\n    //     //         isRefreshRequired={false}\r\n    //     //         isImportRequired={false}\r\n    //     //         isDownloadPDFRequired={false}\r\n    //     //         isDownloadExcelRequired={false}\r\n    //     //         // import={this.ImportFile}\r\n    //     //         scrollable={'scrollable'}\r\n    //     //         gridHeight={'600px'}\r\n    //     //         expandField=\"expanded\"\r\n    //     //     // screenName=\"OOS Master\"\r\n    //     //     />\r\n    //     // );\r\n    //     return tabMap;\r\n    // }\r\n\r\n    // onTabChange = (tabProps) => {\r\n    //     const screenName = tabProps.screenName;\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { screenName }\r\n    //     }\r\n    //     this.props.updateStore(updateInfo);\r\n    // }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, getIncidentMasterData, getIncidentDetail, updateStore, viewAttachment, onSaveIncidentWorkFlowTransaction,\r\n    getIncidentDetailsData, filterColumnData, onSaveIncidentChecklistQb, deleteIncidentWorkFlowTransaction,\r\n    onUpdateIncidentWorkFlowTransaction, onSaveIncident, crudMaster, openCloseIncident, validateEsignforIncident\r\n})(injectIntl(Incident));"]},"metadata":{},"sourceType":"module"}