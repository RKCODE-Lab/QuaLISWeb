{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\AddTestGroupRule.js\";\nimport { faChevronRight, faComment, faCommentMedical, faComments, faCommentsDollar, faEye, faFlag, faGripVertical, faPlay, faPlus, faRecycle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form, Nav, Row } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../../components/data-grid/data-grid.styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { BuilderBorder, ContionalButton, DeleteRule } from '../configurationmaster/RuleEngineSqlbuilder.styled';\nimport '../../assets/styles/querybuilder.css';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport { ColumnType, parameterType, transactionStatus } from '../../components/Enumeration';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from '../configurationmaster/RuleEngineQueryBuilderData';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport SplitterLayout from 'react-splitter-layout';\nimport ModalShow from '../../components/ModalShow';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { sortData } from '../../components/CommonScript';\n\nconst AddTestGroupRule = props => {\n  const fieldsForGrid = props.activeTabIndex == 1 ? [{\n    \"idsName\": \"IDS_TOSITE\",\n    \"dataField\": \"stositename\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_FROMSITE\",\n    \"dataField\": \"sfromsitename\",\n    \"width\": \"200px\"\n  }] : props.activeTabIndex == 2 ? [{\n    \"idsName\": \"IDS_DESCRIPTION\",\n    \"dataField\": \"sdescription\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_RESULTS\",\n    \"dataField\": \"spredefinedname\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_COMMENTSUBTYPE\",\n    \"dataField\": \"scommentsubtype\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_COMMENTTYPE\",\n    \"dataField\": \"scommenttype\",\n    \"width\": \"200px\"\n  }] : props.activeTabIndex == 3 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"stestsynonym\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_REPEATCOUNT\",\n    \"dataField\": \"nrepeatcountno\",\n    \"width\": \"200px\"\n  }] : props.activeTabIndex == 4 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"stestsynonym\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_OPTIONALPARAMETERS\",\n    \"dataField\": \"sparametersynonym\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_PASSFLAG\",\n    \"dataField\": \"sgradename\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_RESULTS\",\n    \"dataField\": \"senforceresult\",\n    \"width\": \"200px\"\n  }] : \"\";\n  const customStyle = {\n    'padding-top': '8px',\n    'padding-left': '2px',\n    'padding-right': '50px'\n  };\n\n  function createRules(items, groupIndex) {\n    let design = [];\n    console.log('props.selectedRecord->>', props.selectedRecord);\n    props.selectedRecord && [...Array(items)].map((data, index) => {\n      let stringOperators = stringOperatorData;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ? /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: \"builder-btn-primary\",\n        marginLeft: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }\n      }))) : props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ? /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: \"builder-btn-primary\",\n        marginLeft: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 39\n        }\n      }))) : \"\" : \"\", /*#__PURE__*/React.createElement(Row, {\n        className: \"my-3 ml-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FontIconWrap, {\n        className: \"d-font-icon action-icons-wrap\",\n        style: customStyle,\n        \"data-tip\": props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        onClick: () => props.deleteRule(groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        className: \"pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: \"stestname\",\n        showOption: true,\n        options: props.rulesOption || [],\n        optionId: \"stestname\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\",\n        onChange: value => props.onRuleChange(value, \"stestname\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      })), props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: \"orderresulttype\",\n        placeholder: \"\",\n        showOption: true,\n        options: props.resultTypeList,\n        optionId: \"nresultypecode\",\n        optionValue: \"orderresulttype\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\",\n        onChange: value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: \"ssymbolname\",\n        placeholder: \"\",\n        showOption: true,\n        options: props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC ? numericOperatorData : stringOperators,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\",\n        onChange: value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`,\n        showOption: true,\n        options: props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList : props.PredefinedParameterOptions && props.PredefinedParameterOptions.length > 0 && props.PredefinedParameterOptions[groupIndex] && props.PredefinedParameterOptions[groupIndex].length > 0 && props.PredefinedParameterOptions[groupIndex][index],\n        optionId: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,\n        optionValue: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\",\n        onChange: value => props.onMasterDataChange(value, props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode', groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 45\n        }\n      })) : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormTextarea, {\n        name: `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`,\n        placeholder: props.intl.formatMessage({\n          id: \"IDS_RESULTS\"\n        }),\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"] : \"\",\n        rows: \"2\",\n        isMandatory: false,\n        required: false,\n        maxLength: 255,\n        onChange: event => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 49\n        }\n      })) : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC ? /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormNumericInput, {\n        name: `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`,\n        placeholder: props.intl.formatMessage({\n          id: \"IDS_RESULTS\"\n        }),\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"] : \"\",\n        type: \"text\",\n        strict: true,\n        maxLength: 10,\n        noStyle: true,\n        onChange: event => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index),\n        precision: 2,\n        min: 0,\n        className: \"form-control\",\n        isMandatory: false,\n        required: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 53\n        }\n      })) : /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`,\n        showOption: true,\n        options: props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? props.DiagnosticCaseList : props.GradeList,\n        optionId: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,\n        optionValue: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\",\n        onChange: value => props.onMasterDataChange(value, props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode' // `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\n        , groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 53\n        }\n      })) : \"\"))));\n    });\n    return design;\n  }\n\n  function createGroupRules() {\n    console.log('props.addGroupList->', props);\n    let indexCount = 0;\n    let design = [];\n    console.log('props.addGroupList->', props.addGroupList);\n    props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\n      let stringOperators = stringOperatorData;\n\n      if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"] && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\n        const temp = stringOperators.filter(item => {\n          if (item.items.symbolType !== 6) {\n            return item;\n          }\n        });\n        stringOperators = temp;\n      }\n\n      if (items > -1) {\n        indexCount = indexCount + 1;\n      }\n\n      ;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, index > 0 && /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(\"button_and\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_or\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_not\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_NOT\",\n        defaultMessage: \"NOT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 31\n        }\n      })))), items > -1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BuilderBorder, {\n        key: index,\n        className: \"p-3 mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => props.addRule(\"views\", index),\n        className: \"mr-1 rulesengine-rule-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 41\n        }\n      }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_RULE\",\n        defaultMessage: \"Rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 51\n        }\n      })), items > 1 ? /*#__PURE__*/React.createElement(Row, {\n        className: \"rulesengine-condition-btn \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(\"button_and\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_or\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_not\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_NOT\",\n        defaultMessage: \"NOT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 59\n        }\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 53\n        }\n      }))))), /*#__PURE__*/React.createElement(React.Fragment, null, createRules(items, index)))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    });\n    return design;\n  }\n\n  function testParameterAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameter => accordionMap.set(testParameter.npkAtestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"d-flex justify-content-end pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn pr-0\",\n      testParameter: testParameter,\n      onClick: () => props.addModalSite(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_OUTSOURCE\",\n      defaultMessage: \"Add Site\",\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\",\n      dataResult: props.masterData[\"testSite\"] && process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode], 'descending', 'npksitecode') || [], props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode] ? props.dataStateObject[testParameter.npkAtestparametercode] : {\n        skip: 0,\n        take: 10\n      }),\n      dataState: props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode] ? props.dataStateObject[testParameter.npkAtestparametercode] : {\n        skip: 0,\n        take: 10\n      },\n      dataStateChange: event => {\n        props.dataStateChange(event, testParameter.npkAtestparametercode);\n      },\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameter: testParameter,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 29\n      }\n    })) // : \"\"\n    )));\n    return accordionMap;\n  }\n\n  function testCommentsAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameterComments => accordionMap.set(testParameterComments.npkBtestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"d-flex justify-content-end pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn\",\n      testParameterComments: testParameterComments,\n      onClick: () => props.addComments(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMMENTS\",\n      defaultMessage: \"Add Test Comments\",\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\",\n      dataResult: props.masterData[\"testComments\"] && process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode], 'descending', 'npKAsampletestcommentscode') || [], props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode] ? props.dataStateObject[testParameterComments.npkBtestparametercode] : {\n        skip: 0,\n        take: 10\n      }),\n      dataState: props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode] ? props.dataStateObject[testParameterComments.npkBtestparametercode] : {\n        skip: 0,\n        take: 10\n      },\n      dataStateChange: event => {\n        props.dataStateChange(event, testParameterComments.npkBtestparametercode);\n      },\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameterComments: testParameterComments,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }\n    }))));\n    return accordionMap;\n  }\n\n  function reportCommentsAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameterreportComments => accordionMap.set(testParameterreportComments.ntestgrouptestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletetestparameter\",\n      className: \"add-txt-btn\",\n      testParameterreportComments: testParameterreportComments,\n      onClick: () => props.deleteModalTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DELETE\",\n      defaultMessage: \"Delete\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn\",\n      testParameterreportComments: testParameterreportComments,\n      onClick: () => props.addComments(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDREPORTCOMMENTS\",\n      defaultMessage: \"Add Report Comments\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\",\n      dataResult: props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode] || [], props.dataState ? props.dataState : {\n        skip: 0,\n        take: 10\n      }),\n      dataState: props.dataState ? props.dataState : {\n        skip: 0,\n        take: 10\n      },\n      dataStateChange: props.dataStateChange,\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameterComments: testParameterreportComments,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 21\n      }\n    }))));\n    return accordionMap;\n  }\n\n  function TabDetails() {\n    const resultTabMap = new Map();\n\n    if (props.addOutcomeList.length === 0) {\n      props.activeTabIndex == 1 ? resultTabMap.set(\"IDS_Test\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\",\n        onClick: () => props.addTest(\"IDS_Test\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 37\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 37\n        }\n      })))), props.masterData.testParameter && props.masterData.testParameter.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        clickIconGroup: true,\n        deleteAccordion: props.deleteModalTest,\n        accordionTitle: \"stestsynonym\",\n        accordionComponent: testParameterAccordion(props.masterData.testParameter),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"npkAtestparametercode\",\n        accordionObjectName: \"testParameter\",\n        selectedKey: props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkAtestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }\n      }))) : props.activeTabIndex == 2 ? resultTabMap.set(\"IDS_COMMENTS\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\",\n        onClick: () => props.addTest(\"IDS_COMMENTS\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 41\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      })))), props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        clickIconGroup: true,\n        deleteAccordion: props.deleteModalTest,\n        accordionTitle: \"stestsynonym\",\n        accordionComponent: testCommentsAccordion(props.masterData.testParameterComments),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"npkBtestparametercode\",\n        accordionObjectName: \"testParameterComments\",\n        selectedKey: props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkBtestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 33\n        }\n      }))) : props.activeTabIndex == 3 ? resultTabMap.set(\"IDS_REPEAT\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\",\n        onClick: () => props.addTest(\"IDS_REPEAT\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 45\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 45\n        }\n      })))), props.masterData.testRepeat && props.masterData.testRepeat.length > 0 && /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"testsectionkey\",\n        primaryKeyField: \"nresultusedmaterialcode\",\n        dataResult: props.masterData[\"testRepeat\"] && process(sortData(props.masterData[\"testRepeat\"], 'descending', 'npkCtestparametercode') || [], props.dataStatetestRepeat ? props.dataStatetestRepeat : {\n          skip: 0,\n          take: 10\n        }),\n        dataState: props.dataStatetestRepeat ? props.dataStatetestRepeat : {\n          skip: 0,\n          take: 10\n        },\n        dataStateChange: event => {\n          props.dataStateChangetestRepeat(event);\n        },\n        extractedColumnList: fieldsForGrid,\n        controlMap: props.controlMap,\n        userRoleControlRights: props.userRoleControlRights,\n        pageable: true,\n        isActionRequired: true,\n        scrollable: 'scrollable',\n        hideColumnFilter: true,\n        selectedId: 0,\n        testRepeat: props.masterData.testRepeat,\n        deleteRecord: props.deleteModalTest,\n        deleteParam: {\n          operation: \"delete\"\n        },\n        actionIcons: [{\n          title: props.intl.formatMessage({\n            id: \"IDS_DELETE\"\n          }),\n          controlname: \"faTrashAlt\",\n          hidden: false,\n          objectName: \"delete\",\n          onClick: props.deleteModalTest\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 37\n        }\n      }))) : props.activeTabIndex == 4 ? resultTabMap.set(\"IDS_ENFORCERESULT\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\",\n        onClick: () => props.addTest(\"IDS_ENFORCERESULT\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 49\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 49\n        }\n      })))), props.masterData.testenforceTests && props.masterData.testenforceTests.length > 0 && /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"testsectionkey\",\n        primaryKeyField: \"nresultusedmaterialcode\",\n        dataResult: props.masterData[\"testenforceTests\"] && process(sortData(props.masterData[\"testenforceTests\"], 'descending', 'npkDtestparametercode') || [], props.dataStatetestEnforce ? props.dataStatetestEnforce : {\n          skip: 0,\n          take: 10\n        }),\n        dataState: props.dataStatetestEnforce ? props.dataStatetestEnforce : {\n          skip: 0,\n          take: 10\n        },\n        dataStateChange: event => {\n          props.dataStateChangetestEnforce(event);\n        },\n        extractedColumnList: fieldsForGrid,\n        controlMap: props.controlMap,\n        userRoleControlRights: props.userRoleControlRights,\n        pageable: true,\n        isActionRequired: true,\n        scrollable: 'scrollable',\n        hideColumnFilter: true,\n        selectedId: 0,\n        testenforceTests: props.masterData.testenforceTests,\n        deleteRecord: props.deleteModalTest,\n        deleteParam: {\n          operation: \"delete\"\n        },\n        actionIcons: [{\n          title: props.intl.formatMessage({\n            id: \"IDS_DELETE\"\n          }),\n          controlname: \"faTrashAlt\",\n          hidden: false,\n          objectName: \"delete\",\n          onClick: props.deleteModalTest\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 41\n        }\n      }))) : resultTabMap.set(\"IDS_REPORTCOMMENTS\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\",\n        onClick: () => props.addTest(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 49\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 49\n        }\n      })))), props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        accordionTitle: \"stestparametersynonym\",\n        accordionComponent: reportCommentsAccordion(props.masterData.testParameterreportComments),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"ntestgrouptestparametercode\",\n        accordionObjectName: \"testParameterreportComments\",\n        selectedKey: props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 41\n        }\n      })));\n    }\n\n    return resultTabMap;\n  }\n\n  function testfilter(list) {\n    let activeTabIndex = props.activeTabIndex;\n\n    if (props.masterData.selectedParameterRulesEngine) {\n      let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode] : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode];\n\n      if (dynamicList !== undefined) {\n        list = list.filter(({\n          value\n        }) => !dynamicList.some(x => x.nsampletestcommentscode == value));\n      }\n    }\n\n    return list;\n  }\n\n  const mandatoryFields = props.action === 'IDS_SAVERULEMODAL' ? [{\n    \"idsName\": \"IDS_RULESENGINENAME\",\n    \"dataField\": \"srulename\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"file\"\n  } //, \n  //  { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nruleexecorder\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\n  ] : props.activeTabIndex === 1 ? props.action === 'IDS_ADDTEST' ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestgrouptestcode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  } // { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n  // { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n  ] : [{\n    \"idsName\": \"IDS_FROMSITE\",\n    \"dataField\": \"nfromsitecode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_TOSITE\",\n    \"dataField\": \"ntositecode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_SELECT\",\n    \"controlType\": \"selectbox\"\n  }] : props.activeTabIndex === 2 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestgrouptestcode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_COMMENTTYPE\",\n    \"dataField\": \"ncommenttypecode\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_COMMENTSUBTYPE\",\n    \"dataField\": \"ncommentsubtypecode\",\n    \"width\": \"200px\"\n  }, props.isneedsgeneralcomments === true ? {\n    \"idsName\": \"IDS_GENERALCOMMENTS\",\n    \"dataField\": \"sgeneralcomments\",\n    \"width\": \"200px\"\n  } : {\n    \"idsName\": \"IDS_PREFINEDCOMMENTS\",\n    \"dataField\": \"nsampletestcommentscode\",\n    \"width\": \"200px\"\n  }] : props.activeTabIndex === 3 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestgrouptestcode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }] : props.activeTabIndex === 4 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestgrouptestcode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_OPTIONALPARAMETERS\",\n    \"dataField\": \"ntestgrouptestparametercode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_PASSFLAG\",\n    \"dataField\": \"ngradecode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_RESULTS\",\n    \"dataField\": \"senforceresult\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"file\"\n  }] : \"\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-inner-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row margin-top-negative-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-0 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"vertical-tab-top popup rules-engine-add-rule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: `tab-left-area p-0  ${props.activeTabIndex ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-area mt-3 mb-0 mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.addGroup(\"views\"),\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 45\n    }\n  }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_GROUP\",\n    defaultMessage: \"Group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.resetRule(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_RESET\",\n    defaultMessage: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 41\n    }\n  }, props.addGroupList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BuilderBorder, {\n    className: \"border-0 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 53\n    }\n  }, \"    \", createGroupRules(), \"   \")) : /*#__PURE__*/React.createElement(React.Fragment, null)))))), /*#__PURE__*/React.createElement(\"div\", {\n    md: 6,\n    className: `${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab vertical-tab-expand ${props.activeTabIndex ? 'active' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex ? 'active' : \"\"}`,\n    style: {\n      width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: ` vertical-tab-close ${props.activeTabIndex ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 100\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: ` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex ? 'active' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"inner_h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 37\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_OUTCOME\"\n  })), props.activeTabIndex && props.activeTabIndex ? /*#__PURE__*/React.createElement(CustomTabs, {\n    activeKey: props.activeTestTab,\n    tabDetail: TabDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 41\n    }\n  }) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 41\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_Test\"\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 41\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_COMMENTS\"\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faRecycle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 41\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_REPEAT\"\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 4 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFlag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 41\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_ENFORCERESULT\"\n  })))))), props.openModalPopup && /*#__PURE__*/React.createElement(ModalShow, {\n    modalShow: true,\n    modalTitle: props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' : props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({\n      id: 'IDS_ADDREPORTCOMMENTS'\n    }) : props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({\n      id: 'IDS_ADDTESTCOMMENTS'\n    }) : props.action === 'IDS_ADDTEST' ? props.activeTabIndex == 3 ? props.intl.formatMessage({\n      id: 'IDS_ADDREPEATTEST'\n    }) : props.intl.formatMessage({\n      id: 'IDS_ADDTEST'\n    }) : props.intl.formatMessage({\n      id: 'IDS_ADDOUTSOURCESITE'\n    }),\n    closeModal: props.closeModalShow,\n    onSaveClick: props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick // validateEsign={this.validateEsign}\n    ,\n    selectedRecord: props.selectedRecord,\n    mandatoryFields: mandatoryFields,\n    modalBody: props.openmodalsavePopup === true ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: props.intl.formatMessage({\n        id: \"IDS_RULESENGINENAME\"\n      }),\n      name: `srulename`,\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_RULESENGINENAME\"\n      }),\n      type: \"text\",\n      maxLength: 100,\n      required: false,\n      isMandatory: true,\n      value: props.selectedRecord[\"srulename\"] || \"\",\n      onChange: event => props.onInputChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 49\n      }\n    }))) : props.activeTabIndex == 1 ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestgrouptestcode\",\n      showOption: true,\n      options: props.testInitiateTestCombo || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestgrouptestcode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 57\n      }\n    }))), (props.action === 'IDS_ADDSITE' // || props.action === 'IDS_ADDTEST'\n    ? true : false) ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_FROMSITE\"\n      }) // formGroupClassName=\"remove-floating-label-margin\"\n      ,\n      isSearchable: true,\n      name: \"nfromsitecode\",\n      showOption: true,\n      options: props.siteList || [],\n      optionId: \"nfromsitecode\",\n      optionValue: \"ssitename\",\n      isMandatory: true,\n      value: props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'nfromsitecode') //  isMandatory={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TOSITE\"\n      }) //    formGroupClassName=\"remove-floating-label-margin\"\n      ,\n      isSearchable: true,\n      name: \"ntositecode\",\n      showOption: true,\n      options: props.siteList || [],\n      optionId: \"ntositecode\",\n      optionValue: \"ssitename\",\n      isMandatory: true,\n      value: props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntositecode') //  isMandatory={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 61\n      }\n    }))) : \"\") : props.activeTabIndex == 2 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestgrouptestcode\",\n      showOption: true,\n      options: props.testCommentsTestCombo || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestgrouptestcode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_COMMENTTYPE\"\n      }),\n      isSearchable: true,\n      name: \"ncommenttypecode\",\n      showOption: true,\n      options: props.CommentType || [],\n      optionId: \"ncommenttypecode\",\n      optionValue: \"scommenttype\",\n      value: props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ncommenttypecode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_COMMENTSUBTYPE\"\n      }),\n      isSearchable: true,\n      name: \"ncommentsubtypecode\",\n      showOption: true,\n      options: props.CommentSubType || [],\n      optionId: \"ncommentsubtypecode\",\n      optionValue: \"scommentsubtype\",\n      value: props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ncommentsubtypecode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 57\n      }\n    })), props.selectedRecord[\"ncommentsubtypecode\"] ? props.isneedsgeneralcomments === true ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"sgeneralcomments\",\n      label: props.intl.formatMessage({\n        id: \"IDS_GENERALCOMMENTS\"\n      }),\n      type: \"text\",\n      value: props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\" // isMandatory={control.mandatory}\n      // required={control.mandatory}\n      ,\n      onChange: event => props.onInputChange(event, 1),\n      rows: \"2\",\n      maxLength: \"255\",\n      isDisabled: false,\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 65\n      }\n    })) : /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 70\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_PREDEFINEDNAME\"\n      }),\n      isSearchable: true,\n      name: \"nsampletestcommentscode\",\n      showOption: true,\n      options: props.predefcomments || [],\n      optionId: \"nsampletestcommentscode\",\n      optionValue: \"spredefinedname\",\n      value: props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'nsampletestcommentscode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      formGroupClassName: \"remove-floating-label-margin\",\n      label: props.intl.formatMessage({\n        id: \"IDS_DESCRIPTION\"\n      }),\n      name: `sdescription`,\n      type: \"text\",\n      required: false,\n      isMandatory: true,\n      value: props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\",\n      onChange: event => props.onInputChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 65\n      }\n    })) : \"\") : props.activeTabIndex == 3 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestgrouptestcode\",\n      showOption: true,\n      options: props.testRepeatTestCombo || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestgrouptestcode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      name: 'nrepeatcountno',\n      label: props.intl.formatMessage({\n        id: \"IDS_REPEATCOUNT\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_REPEATCOUNT\"\n      }),\n      value: props.selectedRecord[\"nrepeatcountno\"] ? props.selectedRecord[\"nrepeatcountno\"] : \"\",\n      type: \"text\",\n      strict: true,\n      maxLength: 10,\n      noStyle: true,\n      onChange: event => props.onRuleNumericInputOnChange(event, 'nrepeatcountno') //  precision={2}\n      ,\n      min: 0,\n      max: 9,\n      className: \"form-control\",\n      isMandatory: false,\n      required: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 61\n      }\n    }))) : props.activeTabIndex == 4 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestgrouptestcode\",\n      showOption: true,\n      options: props.testenforceTestCombo || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestgrouptestcode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_OPTIONALPARAMETERS\"\n      }),\n      isSearchable: true,\n      name: \"ntestgrouptestparametercode\",\n      showOption: true,\n      options: props.testGroupTestParameterRulesEngine || [],\n      optionId: \"ntestgrouptestparametercode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestgrouptestparametercode\"] && props.selectedRecord[\"ntestgrouptestparametercode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestgrouptestparametercode'),\n      isMandatory: true,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"senforceresult\",\n      label: props.intl.formatMessage({\n        id: \"IDS_RESULTS\"\n      }),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_RESULTS\"\n      }),\n      value: props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\",\n      rows: \"2\",\n      isMandatory: true,\n      required: false,\n      maxLength: 255,\n      onChange: event => props.onInputChange(event, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_PASSFLAG\"\n      }),\n      isSearchable: true,\n      name: \"ngradecode\",\n      showOption: true,\n      options: props.GradeList || [],\n      optionId: \"ngradecode\",\n      optionValue: \"sgradename\",\n      value: props.selectedRecord[\"ngradecode\"] && props.selectedRecord[\"ngradecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ngradecode'),\n      isMandatory: true,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 65\n      }\n    }))) : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default injectIntl(AddTestGroupRule);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupRule.js"],"names":["faChevronRight","faComment","faCommentMedical","faComments","faCommentsDollar","faEye","faFlag","faGripVertical","faPlay","faPlus","faRecycle","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Nav","Row","process","CustomAccordion","AtTableWrap","FormControlStatic","FontIconWrap","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","CustomTabs","ColumnType","parameterType","transactionStatus","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","FormMultiSelect","SplitterLayout","ModalShow","FormNumericInput","sortData","AddTestGroupRule","props","fieldsForGrid","activeTabIndex","customStyle","createRules","items","groupIndex","design","console","log","selectedRecord","Array","map","data","index","stringOperators","push","intl","formatMessage","id","deleteRule","rulesOption","value","onRuleChange","resultTypeList","onMasterDataChange","NUMERIC","onSymbolChange","PREDEFINED","valuemember","DiagnosticCaseList","GradeList","PredefinedParameterOptions","length","displaymember","CHARACTER","event","onRuleInputChange","onRuleNumericInputOnChange","createGroupRules","indexCount","addGroupList","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","onConditionClick","addRule","testParameterAccordion","TestParameter","accordionMap","Map","testParameter","set","npkAtestparametercode","addModalSite","masterData","dataStateObject","skip","take","dataStateChange","controlMap","userRoleControlRights","deletModalSite","operation","title","controlname","hidden","objectName","onClick","testCommentsAccordion","testParameterComments","npkBtestparametercode","addComments","reportCommentsAccordion","testParameterreportComments","ntestgrouptestparametercode","deleteModalTest","dataState","TabDetails","resultTabMap","addOutcomeList","addTest","userInfo","nFlag","getOutcomeDetails","selectedParameterRulesEngine","testRepeat","dataStatetestRepeat","dataStateChangetestRepeat","testenforceTests","dataStatetestEnforce","dataStateChangetestEnforce","testfilter","list","dynamicList","undefined","some","x","nsampletestcommentscode","mandatoryFields","action","isneedsgeneralcomments","enablePropertyPopup","addGroup","resetRule","width","propertyPopupWidth","changePropertyView","activeTestTab","openModalPopup","closeModalShow","save","modalsaveClick","openmodalsavePopup","onInputChange","testInitiateTestCombo","onmodalComboChange","siteList","testCommentsTestCombo","CommentType","CommentSubType","predefcomments","testRepeatTestCombo","testenforceTestCombo","testGroupTestParameterRulesEngine"],"mappings":"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","sourcesContent":["import { faChevronRight, faComment, faCommentMedical, faComments, faCommentsDollar, faEye, faFlag, faGripVertical, faPlay, faPlus, faRecycle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\n\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from '../configurationmaster/RuleEngineSqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\n\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n\r\nimport { ColumnType, parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from '../configurationmaster/RuleEngineQueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { sortData } from '../../components/CommonScript';\r\n\r\n\r\nconst AddTestGroupRule = (props) => {\r\n    const fieldsForGrid = props.activeTabIndex == 1 ? [\r\n        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"stositename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"sfromsitename\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 2 ? [\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"scommenttype\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 3 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_REPEATCOUNT\", \"dataField\": \"nrepeatcountno\", \"width\": \"200px\" }\r\n    ] : props.activeTabIndex == 4 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"width\": \"200px\" }\r\n    ] : \"\";\r\n    const customStyle = {\r\n        'padding-top': '8px',\r\n        'padding-left': '2px',\r\n        'padding-right': '50px'\r\n    }\r\n    function createRules(items, groupIndex) {\r\n        let design = [];\r\n        console.log('props.selectedRecord->>', props.selectedRecord)\r\n        props.selectedRecord && [...Array(items)].map((data, index) => {\r\n            let stringOperators = stringOperatorData;\r\n            design.push(\r\n                <>\r\n                    {index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ?\r\n                        <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                        >\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton> :\r\n                        props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ?\r\n                            <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                            >\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton> : \"\" : \"\"}\r\n                    <Row className=\"my-3 ml-1\">\r\n                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" style={customStyle} data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                            onClick={() => props.deleteRule(groupIndex, index)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                        </FontIconWrap>\r\n                        {/* <DeleteRule marginLeft={1} onClick={() => props.deleteRule(groupIndex, index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt}  className=\"d-font-icon action-icons-wrap\" />\r\n                        </DeleteRule>  */}\r\n                        <Col md={4} className=\"pl-0\"  >\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                isSearchable={true}\r\n                                name={\"stestname\"}\r\n                                showOption={true}\r\n                                options={props.rulesOption || []}\r\n                                optionId='stestname'\r\n                                optionValue='displayname'\r\n                                value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\"}\r\n                                onChange={value => props.onRuleChange(value, \"stestname\", groupIndex, index)}\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n\r\n\r\n                        {\r\n                            props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                            <>\r\n                                {/* <Col md={1}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={`sinputname`}\r\n                                        type=\"text\"\r\n                                        value={props.intl.formatMessage({ id: \"IDS_WITH\" })}\r\n                                        disabled={true}\r\n                                    />\r\n                                </Col> */}\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"orderresulttype\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.resultTypeList}\r\n                                        optionId='nresultypecode'\r\n                                        optionValue='orderresulttype'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"ssymbolname\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']\r\n                                                ['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                numericOperatorData : stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {/* {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 ?\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    showOption={true}\r\n                                                    options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                        props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                            : props.PredefinedParameterOptions}\r\n\r\n                                                    optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                    optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                        [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                    onChange={value => props.onMasterDataChange(value,\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                        , groupIndex, index)}\r\n                                                ></FormSelectSearch>\r\n                                            </Col> : props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                                <Col md={2}>\r\n                                                    <FormTextarea\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                        rows=\"2\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                        maxLength={255}\r\n                                                        onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                        type=\"number\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={0}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                        //asusual\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> : \"\"\r\n                                } */}\r\n\r\n\r\n                                {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions &&\r\n                                                        props.PredefinedParameterOptions.length > 0 && props.PredefinedParameterOptions[groupIndex] &&\r\n                                                        props.PredefinedParameterOptions[groupIndex].length > 0 &&\r\n                                                        props.PredefinedParameterOptions[groupIndex][index]}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> :\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                            <Col md={2}>\r\n                                                <FormTextarea\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"] : \"\"}\r\n                                                    rows=\"2\"\r\n                                                    isMandatory={false}\r\n                                                    required={false}\r\n                                                    maxLength={255}\r\n                                                    onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                />\r\n                                            </Col> :\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"] : \"\"}\r\n                                                        type=\"text\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={2}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormSelectSearch\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        isSearchable={true}\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        showOption={true}\r\n                                                        options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                            props.DiagnosticCaseList : props.GradeList}\r\n\r\n                                                        optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                        optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                            [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\r\n                                                        onChange={value => props.onMasterDataChange(value,\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\r\n                                                            , groupIndex, index)}\r\n                                                    ></FormSelectSearch>\r\n                                                </Col> : \"\"\r\n                                }\r\n\r\n\r\n                            </>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n    function createGroupRules() {\r\n        console.log('props.addGroupList->', props)\r\n        let indexCount = 0;\r\n        let design = [];\r\n        console.log('props.addGroupList->', props.addGroupList)\r\n        props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"]\r\n                && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata\r\n                && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item => {\r\n                    if (item.items.symbolType !== 6) {\r\n                        return item\r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>{index > 0 && <Row>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                        onClick={() => props.onConditionClick(\"button_and\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_or\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_not\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                    </ContionalButton>\r\n                </Row>}\r\n                    {items > -1 ?\r\n                        <>\r\n                            <BuilderBorder key={index} className=\"p-3 mb-1\">\r\n                                <Row >\r\n\r\n                                    <Col md={12} >\r\n                                        <Button onClick={() => props.addRule(\"views\", index)} className=\"mr-1 rulesengine-rule-btn\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_RULE\" defaultMessage=\"Rule\" />\r\n                                        </Button>\r\n                                        {items > 1 ?\r\n                                            <Row className=\"rulesengine-condition-btn \">\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                                    onClick={() => props.onConditionClick(\"button_and\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_or\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                </ContionalButton>\r\n                                            </Row>\r\n\r\n                                            :\r\n                                            <>\r\n                                                <Row >\r\n                                                    <br > \r\n                                                    </br>\r\n                                                </Row>\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <>\r\n                                    {createRules(items, index)}\r\n                                </>\r\n\r\n                            </BuilderBorder>\r\n\r\n                        </> : <></>\r\n                    }\r\n\r\n\r\n                </>)\r\n        });\r\n\r\n        return design;\r\n    }\r\n\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.npkAtestparametercode,\r\n                <Col md=\"12\" testParameter={testParameter}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn pr-0\" testParameter={testParameter}\r\n                                onClick={() => props.addModalSite()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameter={testParameter} /> { }\r\n                                <FormattedMessage id=\"IDS_OUTSOURCE\" defaultMessage=\"Add Site\" testParameter={testParameter} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        <>\r\n\r\n                            <DataGrid\r\n                                key=\"testsectionkey\"\r\n                                primaryKeyField=\"nresultusedmaterialcode\"\r\n                                dataResult={props.masterData[\"testSite\"] && process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode], 'descending', 'npksitecode') || [],\r\n                                    props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                        ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 })}\r\n                                dataState={props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                    ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 }}\r\n                                dataStateChange={(event) => { props.dataStateChange(event, testParameter.npkAtestparametercode) }}\r\n\r\n                                extractedColumnList={fieldsForGrid}\r\n                                controlMap={props.controlMap}\r\n                                userRoleControlRights={props.userRoleControlRights}\r\n                                pageable={true}\r\n                                isActionRequired={true}\r\n                                scrollable={'scrollable'}\r\n                                hideColumnFilter={true}\r\n                                selectedId={0}\r\n                                testParameter={testParameter}\r\n                                deleteRecord={props.deletModalSite}\r\n                                deleteParam={{ operation: \"delete\" }}\r\n                                actionIcons={[{\r\n                                    title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    controlname: \"faTrashAlt\",\r\n                                    hidden: false,\r\n                                    objectName: \"delete\",\r\n                                    onClick: props.deletModalSite\r\n\r\n                                }]}\r\n                            >\r\n                            </DataGrid></>\r\n                        // : \"\"\r\n                    }\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function testCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterComments) =>\r\n            accordionMap.set(testParameterComments.npkBtestparametercode,\r\n                <Col md=\"12\" testParameterComments={testParameterComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_COMMENTS\" defaultMessage=\"Add Test Comments\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"testComments\"] && process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode], 'descending', 'npKAsampletestcommentscode') || [],\r\n                            props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                                ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 })}\r\n                        dataState={props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                            ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => { props.dataStateChange(event, testParameterComments.npkBtestparametercode) }}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function reportCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterreportComments) =>\r\n            accordionMap.set(testParameterreportComments.ntestgrouptestparametercode,\r\n                <Col md=\"12\" testParameterreportComments={testParameterreportComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faTrashAlt} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_DELETE\" defaultMessage=\"Delete\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"actions-stripe\" testParameterreportComments={testParameterreportComments}>\r\n                        <div className=\"d-flex justify-content-end\" testParameterreportComments={testParameterreportComments}>\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_ADDREPORTCOMMENTS\" defaultMessage=\"Add Report Comments\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode] || [],\r\n                            props.dataState\r\n                                ? props.dataState : { skip: 0, take: 10 })}\r\n                        dataState={props.dataState\r\n                            ? props.dataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={props.dataStateChange}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterreportComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function TabDetails() {\r\n        const resultTabMap = new Map();\r\n        if (props.addOutcomeList.length === 0) {\r\n            props.activeTabIndex == 1 ?\r\n                resultTabMap.set(\"IDS_Test\",\r\n                    <>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"addtestparameter\"\r\n                                    onClick={() => props.addTest(\"IDS_Test\")}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        {props.masterData.testParameter && props.masterData.testParameter.length > 0 &&\r\n                            <CustomAccordion\r\n                                key=\"parameteraccordion\"\r\n                                clickIconGroup={true}\r\n                                deleteAccordion={props.deleteModalTest}\r\n                                accordionTitle={\"stestsynonym\"}\r\n                                accordionComponent={testParameterAccordion(props.masterData.testParameter)}\r\n                                inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                accordionClick={props.getOutcomeDetails}\r\n                                accordionPrimaryKey={\"npkAtestparametercode\"}\r\n                                accordionObjectName={\"testParameter\"}\r\n                                selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkAtestparametercode : 0}\r\n                            />\r\n                        }\r\n                    </>\r\n                ) : props.activeTabIndex == 2 ?\r\n                    resultTabMap.set(\"IDS_COMMENTS\",\r\n                        <>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link name=\"addtestparameter\"\r\n                                        onClick={() => props.addTest(\"IDS_COMMENTS\")}>\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            {props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 &&\r\n                                <CustomAccordion\r\n                                    key=\"parameteraccordion\"\r\n                                    clickIconGroup={true}\r\n                                    deleteAccordion={props.deleteModalTest}\r\n                                    accordionTitle={\"stestsynonym\"}\r\n                                    accordionComponent={testCommentsAccordion(props.masterData.testParameterComments)}\r\n                                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                    accordionClick={props.getOutcomeDetails}\r\n                                    accordionPrimaryKey={\"npkBtestparametercode\"}\r\n                                    accordionObjectName={\"testParameterComments\"}\r\n                                    selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkBtestparametercode : 0}\r\n                                />\r\n                            }\r\n                        </>\r\n                    ) : props.activeTabIndex == 3 ?\r\n                        resultTabMap.set(\"IDS_REPEAT\",\r\n                            <>\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Nav.Link name=\"addtestparameter\"\r\n                                            onClick={() => props.addTest(\"IDS_REPEAT\")}>\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                            <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                {props.masterData.testRepeat && props.masterData.testRepeat.length > 0 &&\r\n                                    <DataGrid\r\n                                        key=\"testsectionkey\"\r\n                                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                                        dataResult={props.masterData[\"testRepeat\"] && process(sortData(props.masterData[\"testRepeat\"], 'descending', 'npkCtestparametercode') || [],\r\n                                            props.dataStatetestRepeat\r\n                                                ? props.dataStatetestRepeat : { skip: 0, take: 10 })}\r\n                                        dataState={props.dataStatetestRepeat\r\n                                            ? props.dataStatetestRepeat : { skip: 0, take: 10 }}\r\n                                        dataStateChange={(event) => { props.dataStateChangetestRepeat(event) }}\r\n                                        extractedColumnList={fieldsForGrid}\r\n                                        controlMap={props.controlMap}\r\n                                        userRoleControlRights={props.userRoleControlRights}\r\n                                        pageable={true}\r\n                                        isActionRequired={true}\r\n                                        scrollable={'scrollable'}\r\n                                        hideColumnFilter={true}\r\n                                        selectedId={0}\r\n                                        testRepeat={props.masterData.testRepeat}\r\n                                        deleteRecord={props.deleteModalTest}\r\n                                        deleteParam={{ operation: \"delete\" }}\r\n                                        actionIcons={[{\r\n                                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                            controlname: \"faTrashAlt\",\r\n                                            hidden: false,\r\n                                            objectName: \"delete\",\r\n                                            onClick: props.deleteModalTest\r\n                                        }]}\r\n                                    >\r\n                                    </DataGrid>\r\n                                }\r\n                            </>\r\n                        ) : props.activeTabIndex == 4 ?\r\n                            resultTabMap.set(\"IDS_ENFORCERESULT\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest(\"IDS_ENFORCERESULT\")}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testenforceTests && props.masterData.testenforceTests.length > 0 &&\r\n                                        <DataGrid\r\n                                            key=\"testsectionkey\"\r\n                                            primaryKeyField=\"nresultusedmaterialcode\"\r\n                                            dataResult={props.masterData[\"testenforceTests\"] && process(sortData(props.masterData[\"testenforceTests\"], 'descending', 'npkDtestparametercode') || [],\r\n                                                props.dataStatetestEnforce\r\n                                                    ? props.dataStatetestEnforce : { skip: 0, take: 10 })}\r\n                                            dataState={props.dataStatetestEnforce\r\n                                                ? props.dataStatetestEnforce : { skip: 0, take: 10 }}\r\n                                            dataStateChange={(event) => { props.dataStateChangetestEnforce(event) }}\r\n                                            extractedColumnList={fieldsForGrid}\r\n                                            controlMap={props.controlMap}\r\n                                            userRoleControlRights={props.userRoleControlRights}\r\n                                            pageable={true}\r\n                                            isActionRequired={true}\r\n                                            scrollable={'scrollable'}\r\n                                            hideColumnFilter={true}\r\n                                            selectedId={0}\r\n                                            testenforceTests={props.masterData.testenforceTests}\r\n                                            deleteRecord={props.deleteModalTest}\r\n                                            deleteParam={{ operation: \"delete\" }}\r\n                                            actionIcons={[{\r\n                                                title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                controlname: \"faTrashAlt\",\r\n                                                hidden: false,\r\n                                                objectName: \"delete\",\r\n                                                onClick: props.deleteModalTest\r\n                                            }]}\r\n                                        >\r\n                                        </DataGrid>\r\n                                    }\r\n                                </>\r\n                            ) :\r\n                            resultTabMap.set(\"IDS_REPORTCOMMENTS\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest()}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 &&\r\n                                        <CustomAccordion\r\n                                            key=\"parameteraccordion\"\r\n                                            accordionTitle={\"stestparametersynonym\"}\r\n                                            accordionComponent={reportCommentsAccordion(props.masterData.testParameterreportComments)}\r\n                                            inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                            accordionClick={props.getOutcomeDetails}\r\n                                            accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                                            accordionObjectName={\"testParameterreportComments\"}\r\n                                            selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode : 0}\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n        }\r\n        return resultTabMap;\r\n    }\r\n    function testfilter(list) {\r\n        let activeTabIndex = props.activeTabIndex\r\n        if (props.masterData.selectedParameterRulesEngine) {\r\n            let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n                : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n            if (dynamicList !== undefined) {\r\n                list = list.filter(({ value }) => !dynamicList.some(x => x.nsampletestcommentscode == value))\r\n            }\r\n        }\r\n        return list\r\n    }\r\n    const mandatoryFields =\r\n        props.action === 'IDS_SAVERULEMODAL' ?\r\n            [{ \"idsName\": \"IDS_RULESENGINENAME\", \"dataField\": \"srulename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }//, \r\n          //  { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nruleexecorder\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\r\n        ] :\r\n            props.activeTabIndex === 1 ?\r\n                props.action === 'IDS_ADDTEST' ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ] :\r\n                    [\r\n                        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                :\r\n                props.activeTabIndex === 2 ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"ncommenttypecode\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"ncommentsubtypecode\", \"width\": \"200px\" },\r\n                    props.isneedsgeneralcomments === true ?\r\n                        { \"idsName\": \"IDS_GENERALCOMMENTS\", \"dataField\": \"sgeneralcomments\", \"width\": \"200px\" } :\r\n                        { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"width\": \"200px\" }\r\n                ] :\r\n                    props.activeTabIndex === 3 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n                    ] : props.activeTabIndex === 4 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"ntestgrouptestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"ngradecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\r\n                    ] : \"\"\r\n    return (\r\n\r\n        <div class=\"modal-inner-content\">\r\n            <div class=\"row margin-top-negative-1\">\r\n                <div class=\"p-0 col-md-12\">\r\n                    <div class=\"vertical-tab-top popup rules-engine-add-rule\">\r\n                        <Col className={`tab-left-area p-0  ${props.activeTabIndex\r\n                            ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                            <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\r\n                                <div className=\"center-area mt-3 mb-0 mx-4\">\r\n                                    <Row className='d-flex pt-0'>\r\n                                        <Col md={6}>\r\n                                            <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                                {'+'} <FormattedMessage id=\"IDS_GROUP\" defaultMessage=\"Group\" />\r\n                                            </Button>\r\n                                            <Button onClick={() => props.resetRule()}>\r\n                                                <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12} className=\"ml-0 mr-0\">\r\n\r\n                                            {props.addGroupList.length > 0 ?\r\n                                                <>\r\n                                                    <BuilderBorder className='border-0 mb-0'>    {\r\n                                                        createGroupRules()}   </BuilderBorder>\r\n                                                </>\r\n\r\n                                                : <></>}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <div md={6} className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab vertical-tab-expand ${props.activeTabIndex\r\n                            ? 'active' : \"\"}`} >\r\n                            <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                                ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                                <span className={` vertical-tab-close ${props.activeTabIndex\r\n                                    ? 'active' : \"\"}`} onClick={() => props.changePropertyView(0)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                                    ? 'active' : \"\"}`}>\r\n                                    <h4 className='inner_h4'>\r\n                                        {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                                    </h4>\r\n                                    {props.activeTabIndex && props.activeTabIndex\r\n                                        ?\r\n                                        <CustomTabs activeKey={props.activeTestTab\r\n                                        } tabDetail={TabDetails()} />\r\n                                        : \"\"}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='tab-head'>\r\n                                <ul>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(1)}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_Test\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(2)}>\r\n                                        <FontAwesomeIcon icon={faComments} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(3)}>\r\n                                        <FontAwesomeIcon icon={faRecycle} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_REPEAT\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 4 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(4)}>\r\n                                        <FontAwesomeIcon icon={faFlag} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_ENFORCERESULT\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            props.openModalPopup &&\r\n                            <ModalShow\r\n                                modalShow={true}\r\n                                modalTitle={props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' :\r\n                                    props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDREPORTCOMMENTS' }) :\r\n                                        props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDTESTCOMMENTS' })\r\n                                            : props.action === 'IDS_ADDTEST' ? props.activeTabIndex == 3 ? props.intl.formatMessage({ id: 'IDS_ADDREPEATTEST' }) :\r\n                                                props.intl.formatMessage({ id: 'IDS_ADDTEST' }) :\r\n                                                props.intl.formatMessage({ id: 'IDS_ADDOUTSOURCESITE' })}\r\n\r\n                                closeModal={props.closeModalShow}\r\n                                onSaveClick={props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick}\r\n                                // validateEsign={this.validateEsign}\r\n                                selectedRecord={props.selectedRecord}\r\n                                mandatoryFields={mandatoryFields}\r\n                                modalBody={\r\n\r\n                                    props.openmodalsavePopup === true ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <FormInput \r\n                                                    label={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                                                    name={`srulename`}\r\n                                                    placeholder={props.intl.formatMessage({ id:\"IDS_RULESENGINENAME\"})}\r\n                                                    type=\"text\"\r\n                                                    maxLength={100}\r\n                                                    required={false}\r\n                                                    isMandatory={true}\r\n                                                    value={props.selectedRecord[\"srulename\"] || \"\"}\r\n                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                />\r\n                                            </Col>\r\n                                            {/* <Col md={12}>\r\n                                                <FormNumericInput\r\n                                                    name={'nruleexecorder'}\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_SORTORDER\" })}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SORTORDER\" })}\r\n                                                    value={props.selectedRecord[\"nruleexecorder\"] ? props.selectedRecord[\"nruleexecorder\"] : \"\"}\r\n                                                    type=\"text\"\r\n                                                    strict={true}\r\n                                                    maxLength={10}\r\n                                                    noStyle={true}\r\n                                                    onChange={(event) => props.onRuleNumericInputOnChange(event, 'nruleexecorder')} \r\n                                                    min={0}\r\n                                                    isMandatory={true}\r\n                                                    className=\"form-control\" \r\n                                                    required={false}\r\n                                                />\r\n                                            </Col> */}\r\n                                        </Row>\r\n                                        :\r\n                                        props.activeTabIndex == 1 ?\r\n                                            <Col md={12}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ntestgrouptestcode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.testInitiateTestCombo || []}\r\n                                                            optionId='ntestgrouptestcode'\r\n                                                            optionValue='stestparametersynonym'\r\n                                                            value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                            isMandatory={true}\r\n                                                            isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                {(\r\n                                                    props.action === 'IDS_ADDSITE'// || props.action === 'IDS_ADDTEST'\r\n                                                        ? true : false\r\n                                                )\r\n                                                    ?\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\r\n                                                                // formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                isSearchable={true}\r\n                                                                name={\"nfromsitecode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.siteList || []}\r\n                                                                optionId='nfromsitecode'\r\n                                                                optionValue='ssitename'\r\n                                                                isMandatory={true}\r\n                                                                value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\r\n                                                            //  isMandatory={true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\r\n                                                                //    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                isSearchable={true}\r\n                                                                name={\"ntositecode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.siteList || []}\r\n                                                                optionId='ntositecode'\r\n                                                                optionValue='ssitename'\r\n                                                                isMandatory={true}\r\n                                                                value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'ntositecode')}\r\n                                                            //  isMandatory={true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                    </Row> : \"\"\r\n                                                }\r\n                                            </Col>\r\n                                            :\r\n                                            props.activeTabIndex == 2 ?\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ntestgrouptestcode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.testCommentsTestCombo || []}\r\n                                                            optionId='ntestgrouptestcode'\r\n                                                            optionValue='stestparametersynonym'\r\n                                                            value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                            isMandatory={true}\r\n                                                            isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTTYPE\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ncommenttypecode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.CommentType || []}\r\n                                                            optionId='ncommenttypecode'\r\n                                                            optionValue='scommenttype'\r\n                                                            value={props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ncommenttypecode')}\r\n                                                            isMandatory={true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ncommentsubtypecode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.CommentSubType || []}\r\n                                                            optionId='ncommentsubtypecode'\r\n                                                            optionValue='scommentsubtype'\r\n                                                            value={props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ncommentsubtypecode')}\r\n                                                            isMandatory={true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                    {props.selectedRecord[\"ncommentsubtypecode\"] ?\r\n                                                        props.isneedsgeneralcomments === true ?\r\n                                                            <Col md={12}>\r\n                                                                <FormTextarea\r\n                                                                    name={\"sgeneralcomments\"}\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_GENERALCOMMENTS\" })}\r\n                                                                    type=\"text\"\r\n                                                                    value={props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\"}\r\n                                                                    // isMandatory={control.mandatory}\r\n                                                                    // required={control.mandatory}\r\n                                                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                    rows=\"2\"\r\n                                                                    maxLength={\"255\"}\r\n                                                                    isDisabled={false}\r\n                                                                    isMandatory={true}\r\n                                                                />\r\n                                                            </Col> : <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_PREDEFINEDNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"nsampletestcommentscode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.predefcomments || []}\r\n                                                                    optionId='nsampletestcommentscode'\r\n                                                                    optionValue='spredefinedname'\r\n                                                                    value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                                                    isMandatory={true}\r\n                                                                ></FormSelectSearch>\r\n                                                                {/* <FormInput\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                    name={`sdescription`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={true}\r\n                                                                    value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                                /> */}\r\n                                                                <FormTextarea\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                    name={`sdescription`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={true}\r\n                                                                    value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        : \"\"\r\n                                                    }\r\n\r\n                                                </Row>\r\n                                                : props.activeTabIndex == 3 ?\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                isSearchable={true}\r\n                                                                name={\"ntestgrouptestcode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.testRepeatTestCombo || []}\r\n                                                                optionId='ntestgrouptestcode'\r\n                                                                optionValue='stestparametersynonym'\r\n                                                                value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                isMandatory={true}\r\n                                                                isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                        <Col md={12}>\r\n                                                            <FormNumericInput\r\n                                                                name={'nrepeatcountno'}\r\n                                                                label={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                value={props.selectedRecord[\"nrepeatcountno\"] ? props.selectedRecord[\"nrepeatcountno\"] : \"\"}\r\n                                                                type=\"text\"\r\n                                                                strict={true}\r\n                                                                maxLength={10}\r\n                                                                noStyle={true}\r\n                                                                onChange={(event) => props.onRuleNumericInputOnChange(event, 'nrepeatcountno')}\r\n                                                              //  precision={2}\r\n                                                                min={0}\r\n                                                                max={9}\r\n                                                                className=\"form-control\"\r\n                                                                isMandatory={false}\r\n                                                                required={false}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row> : props.activeTabIndex == 4 ?\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestcode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testenforceTestCombo || []}\r\n                                                                    optionId='ntestgrouptestcode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_OPTIONALPARAMETERS\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestparametercode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testGroupTestParameterRulesEngine || []}\r\n                                                                    optionId='ntestgrouptestparametercode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestparametercode\"] && props.selectedRecord[\"ntestgrouptestparametercode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestparametercode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={false}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormTextarea\r\n                                                                    name=\"senforceresult\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                    value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                                                                    rows=\"2\"\r\n                                                                    isMandatory={true}\r\n                                                                    required={false}\r\n                                                                    maxLength={255}\r\n                                                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                />\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_PASSFLAG\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ngradecode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.GradeList || []}\r\n                                                                    optionId='ngradecode'\r\n                                                                    optionValue='sgradename'\r\n                                                                    value={props.selectedRecord[\"ngradecode\"] && props.selectedRecord[\"ngradecode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ngradecode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={false}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                        </Row> : \"\"\r\n                                }\r\n                            />\r\n                        }\r\n                    </div></div></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestGroupRule);"]},"metadata":{},"sourceType":"module"}