{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\list-master\\\\list-master.component.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form, Nav } from 'react-bootstrap';\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\nimport { ListMasterWrapper } from '../list-master/list-master.styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faDatabase, faEye, faPlus, faSearch, faSitemap, faSync, faFilter, faTable, faBarcode } from '@fortawesome/free-solid-svg-icons'; // import FilterWithAccordian from './FilterWithAccordian';\n\nimport FilterAccordion from '../custom-accordion/filter-accordion.component';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Affix } from 'rsuite';\nimport AdvFilter from '../AdvFilter';\nimport CustomPager from '../CustomPager';\nimport { ListView } from '@progress/kendo-react-listview';\nimport { connect } from 'react-redux'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport { ListWrapper } from '../client-group.styles';\nimport ReactTooltip from 'react-tooltip';\nimport { ReactComponent as FilterIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/filer-icon.svg\"; //  import { ReactComponent as SolidFilterIcon } from '../../assets/image/databasefilter.svg';\n\nimport { ReactComponent as SolidFilterIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/usersearch.svg\";\nimport { ReactComponent as SyncInitiate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/SyncInitiate.svg\";\nimport BarcodeButton from '../../pages/BarcodeTemplate/BarcodeButton';\n\nclass ListMaster extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.filterColumn = event => {\n      let filterValue = event.target.value;\n\n      if (event.keyCode === 13) {\n        this.props.filterColumnData(filterValue, this.props.filterParam);\n      } // clearInterval(this.interval);\n      // if (filterValue === \"\") {\n      //     this.props.filterColumnData(filterValue, this.props.filterParam);\n      // } else {\n      //     // (filterValue.length > 2) {\n      //     this.interval = setInterval(() => {\n      //         this.props.filterColumnData(filterValue, this.props.filterParam);\n      //         clearInterval(this.interval);\n      //     }, 3000);\n      //     // }\n      // }\n\n    };\n\n    this.getSelectedDetail = master => {\n      if (this.props.allowDuplicateHits || this.props.selectedMaster[this.props.primaryKeyField] !== master[this.props.primaryKeyField]) this.props.getMasterDetail(master);\n    };\n\n    this.ListDesign = props => {\n      //add by neeraj-(05-11-2022)\n      let item = props.dataItem;\n      let value = item[this.props.mainField] ? item[this.props.mainField].trim() : \"\";\n      let firstLetter = value.substring(0, 1);\n      let wordArray = value.split(\" \");\n\n      if (wordArray.length > 1) {\n        firstLetter = firstLetter + wordArray[wordArray.length - 1][0];\n      }\n\n      const labelColor = ['label-orange', 'label-green', 'label-yellow', 'label-purple'];\n      return (\n        /*#__PURE__*/\n        // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\n        React.createElement(ListGroup.Item, {\n          key: `listKey_${props.index}`,\n          as: \"li\",\n          onClick: () => this.getSelectedDetail(item),\n          className: `list-bgcolor ${this.props.noSelectedRecord ? \"\" : this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? \"active\" : \"\" : \"\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Media, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, this.props.isMultiSelecct ? /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: \"checkbox\",\n          id: \"customControl\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n          type: \"checkbox\",\n          id: `tm_customCheck_${props.index}`,\n          checked: this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? true : false : false,\n          readOnly: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check.Label, {\n          className: `mr-3 label-circle ${labelColor[props.index % 4]}`,\n          htmlFor: `tm_customCheck_${props.index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, firstLetter.toUpperCase())) : this.props.hideCheckLabel ? this.props.showTableIcon ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTable,\n          size: \"lg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }\n        }) : \"\" : /*#__PURE__*/React.createElement(Form.Check.Label, {\n          className: `mr-3 label-circle ${labelColor[props.index % 4]}`,\n          htmlFor: `tm_customCheck_${props.index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }\n        }, firstLetter.toUpperCase()), /*#__PURE__*/React.createElement(Media.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MediaHeader, {\n          \"data-tip\": item[this.props.mainField] // data-for=\"tooltip_list_wrap\"\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, item[this.props.mainField]), /*#__PURE__*/React.createElement(MediaSubHeader, {\n          className: \"title-grid-width-sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(MediaLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        }, item[this.props.firstField]), this.props.secondField ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n          className: \"text_seperator\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }\n        }, item[this.props.secondField])) : \"\"))))\n      );\n    };\n\n    this.state = {\n      buttonCount: 4,\n      info: true,\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\n      testskip: 0,\n      testtake: this.props.Login.settings ? parseInt(this.props.Login.settings[12]) : 5\n    };\n  }\n\n  render() {\n    let headerClass = this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\";\n    const barcodeControl = this.props.controlMap && this.props.controlMap.has(this.props.methodUrl + \"Barcode\") && this.props.controlMap.get(this.props.methodUrl + \"Barcode\").ncontrolcode;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Affix, {\n      top: this.props.showFilterIcon ? 91 : 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListMasterWrapper, {\n      className: `${this.state.showModalBg ? 'show_modal_bg' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `d-flex ${headerClass}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, this.props.hideSearch ? \"\" : /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"list-group-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      style: {\n        color: \"#c1c7d0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      ref: this.props.searchRef // onEnterKeyPress={this.filterColumn}\n      ,\n      autoComplete: \"off\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_FILTER\"\n      }) //.concat(this.props.screenName)\n      ,\n      name: \"search\".concat(this.props.screenName.toLowerCase()),\n      onKeyUp: e => this.filterColumn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }), this.props.showFilterIcon ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(AdvFilter, {\n      filterComponent: this.props.filterComponent,\n      dataFor: \"tooltip_list_wrap\",\n      onFilterSubmit: this.props.onFilterSubmit,\n      showFilter: this.props.showFilter,\n      openFilter: this.props.openFilter,\n      closeFilter: this.props.closeFilter,\n      callCloseFunction: this.props.callCloseFunction,\n      showModalBg: e => this.setState({\n        showModalBg: e\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }\n    })) : \"\", this.props.showAdvFilterIcon ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADVFILTER\"\n      }) // data-for=\"tooltip-common-wrap\"\n      ,\n      className: \"bg-default svg_custom_big no-down-arrow custom-drop-down-arrow-top ico-fontello-psheudo\",\n      onClick: event => this.props.handleClick(event, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FilterIcon, {\n      className: \"custom_icons\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    }))) : \"\", this.props.showSolidFilterIcon ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button // data-tip={this.props.intl.formatMessage({\n    //   id: \"IDS_SOLIDFILTER\",\n    // })}\n    // data-for=\"tooltip-common-wrap\"\n    , {\n      className: \"bg-default svg_custom_big no-down-arrow custom-drop-down-arrow-top ico-fontello-psheudo\",\n      onClick: event => this.props.handleClick(event, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(SolidFilterIcon, {\n      className: \"custom_icons\" //stroke=\"rgb(151, 160, 175)\"\n      ,\n      width: \"24\",\n      height: \"24\" //fill='#FFF' \n      ,\n      \"stroke-width\": \"45\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 49\n      }\n    }))) : \"\"), /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"d-flex ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, this.props.titleHead ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 57\n      }\n    }, this.props.titleHead) : '', this.props.showBuildQuery ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      variant: \"link\" // hidden={this.props.userRoleControlRights.indexOf(this.props.buildQueryId) === -1}\n      // data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_BUILDQUERY\"\n      }),\n      onClick: () => this.props.builderData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDatabase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    })) : \"\", this.props.hideAddButton ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-icon-rounded btn-circle solid-blue\",\n      role: \"button\",\n      hidden: this.props.userRoleControlRights.indexOf(this.props.addId) === -1 //title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADD\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(BarcodeButton, {\n      userRoleControlRights: this.props.userRoleControlRights,\n      selectedMaster: this.props.selectedMaster,\n      userInfo: this.props.Login.userInfo,\n      controlMap: this.props.controlMap,\n      methodUrl: this.props.methodUrl + \"Barcode\",\n      screenName: this.props.Login.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 33\n      }\n    }), this.props.hideSyncButton ? \"\" : /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-icon-rounded btn-circle solid-blue\",\n      hidden: this.props.userRoleControlRights.indexOf(this.props.syncId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_INITIATESYNC\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SyncInitiate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    })), this.props.hideReload ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      variant: \"link\",\n      onClick: () => this.props.reloadData() // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\n      // data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REFRESH\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSync,\n      style: {\n        \"width\": \"0.6!important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }\n    })), this.props.showGraphView ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2 fa-rotate-270\",\n      variant: \"link\",\n      onClick: () => this.props.getGraphView() // data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GRAPH\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSitemap,\n      style: {\n        \"width\": \"0.6!important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    })) // <Nav.Link className=\"btn btn-circle outline-grey ml-2 action-icons-wrap\" onClick={() => this.props.getGraphView()} title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })} >\n    //     <Image src={Graph} alt=\"filer-icon\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"/>\n    // </Nav.Link>\n    : \"\", this.props.showCopy ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      variant: \"link\",\n      hidden: this.props.userRoleControlRights.indexOf(this.props.copyId) === -1 // title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\n      // data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      onClick: () => this.props.copyData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 41\n      }\n    })) : \"\")), this.props.needAccordianFilter ? /*#__PURE__*/React.createElement(FilterAccordion, {\n      key: \"filter\",\n      filterComponent: this.props.filterComponent,\n      className: this.props.accordianClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(ClientList, {\n      className: \"product-list list_rightborder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.props.needAccordianFilter ? 'height-md' : 'height-normal'} ${this.props.masterList == 0 && 'list-master-no-record'} ${this.props.showFilterIcon ? 'height-xd' : 'height-xl'} ${this.props.hidePaging ? '' : 'height-xld'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      as: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 37\n      }\n    }, this.props.masterList ? /*#__PURE__*/React.createElement(ListView, {\n      data: this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, (this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)),\n      item: props => this.ListDesign(props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }) : \"\")))), this.props.hidePaging ? \"\" : /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.props.skip ? this.props.skip : this.state.skip,\n      take: this.props.take ? this.props.take : this.state.take,\n      width: 20,\n      pagershowwidth: 18,\n      handlePageChange: this.handlePageChange,\n      total: this.props.masterList ? this.props.masterList.length : 0,\n      buttonCount: this.state.buttonCount,\n      info: this.state.info,\n      userInfo: this.props.Login.userInfo,\n      pageSize: this.props.pageSize ? this.props.pageSize : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    ReactTooltip.rebuild();\n\n    if (this.props.masterList !== previousProps.masterList) {\n      if (this.props.skip === undefined && this.props.masterList && this.props.masterList.length <= this.state.skip) {\n        this.setState({\n          skip: 0\n        });\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {})(injectIntl(ListMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/list-master/list-master.component.jsx"],"names":["React","injectIntl","Button","InputGroup","FormControl","Media","ListGroup","Form","Nav","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","SearchIcon","ListMasterWrapper","FontAwesomeIcon","faCopy","faDatabase","faEye","faPlus","faSearch","faSitemap","faSync","faFilter","faTable","faBarcode","FilterAccordion","PerfectScrollbar","Affix","AdvFilter","CustomPager","ListView","connect","ListWrapper","ReactTooltip","BarcodeButton","ListMaster","Component","constructor","props","handlePageChange","e","setState","skip","take","filterColumn","event","filterValue","target","value","keyCode","filterColumnData","filterParam","getSelectedDetail","master","allowDuplicateHits","selectedMaster","primaryKeyField","getMasterDetail","ListDesign","item","dataItem","mainField","trim","firstLetter","substring","wordArray","split","length","labelColor","index","noSelectedRecord","isMultiSelecct","toUpperCase","hideCheckLabel","showTableIcon","firstField","secondField","state","buttonCount","info","Login","settings","parseInt","testskip","testtake","render","headerClass","hideSearch","barcodeControl","controlMap","has","methodUrl","get","ncontrolcode","showFilterIcon","showModalBg","titleClasses","color","searchRef","intl","formatMessage","id","concat","screenName","toLowerCase","filterComponent","onFilterSubmit","showFilter","openFilter","closeFilter","callCloseFunction","showAdvFilterIcon","handleClick","showSolidFilterIcon","titleHead","showBuildQuery","builderData","hideAddButton","userRoleControlRights","indexOf","addId","openModal","userInfo","hideSyncButton","syncId","hideReload","reloadData","showGraphView","getGraphView","showCopy","copyId","copyData","needAccordianFilter","accordianClassName","masterList","hidePaging","slice","pageSize","map","setting","componentDidUpdate","previousProps","rebuild","undefined","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form, Nav } from 'react-bootstrap';\r\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\r\nimport { ListMasterWrapper } from '../list-master/list-master.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopy, faDatabase, faEye, faPlus, faSearch, faSitemap, faSync, faFilter, faTable, faBarcode } from '@fortawesome/free-solid-svg-icons';\r\n// import FilterWithAccordian from './FilterWithAccordian';\r\nimport FilterAccordion from '../custom-accordion/filter-accordion.component';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Affix } from 'rsuite';\r\nimport AdvFilter from '../AdvFilter';\r\nimport CustomPager from '../CustomPager';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { connect } from 'react-redux';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { ListWrapper } from '../client-group.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ReactComponent as FilterIcon } from '../../assets/image/filer-icon.svg';\r\n//  import { ReactComponent as SolidFilterIcon } from '../../assets/image/databasefilter.svg';\r\n import { ReactComponent as SolidFilterIcon } from '../../assets/image/usersearch.svg';\r\n import { ReactComponent as SyncInitiate } from '../../assets/image/SyncInitiate.svg';\r\n import BarcodeButton from '../../pages/BarcodeTemplate/BarcodeButton';\r\nclass ListMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            buttonCount: 4,\r\n            info: true,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings ? parseInt(this.props.Login.settings[12]) : 5\r\n        }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    filterColumn = (event) => {\r\n        let filterValue = event.target.value;\r\n        if (event.keyCode === 13) {\r\n            this.props.filterColumnData(filterValue, this.props.filterParam);\r\n        }\r\n\r\n        // clearInterval(this.interval);\r\n\r\n        // if (filterValue === \"\") {\r\n        //     this.props.filterColumnData(filterValue, this.props.filterParam);\r\n\r\n        // } else {\r\n        //     // (filterValue.length > 2) {\r\n        //     this.interval = setInterval(() => {\r\n        //         this.props.filterColumnData(filterValue, this.props.filterParam);\r\n        //         clearInterval(this.interval);\r\n        //     }, 3000);\r\n        //     // }\r\n        // }\r\n    }\r\n\r\n    getSelectedDetail = (master) => {\r\n        if (this.props.allowDuplicateHits\r\n            || this.props.selectedMaster[this.props.primaryKeyField] !== master[this.props.primaryKeyField])\r\n            this.props.getMasterDetail(master);\r\n    }\r\n    ListDesign = props => {\r\n        //add by neeraj-(05-11-2022)\r\n        let item = props.dataItem;\r\n        let value = item[this.props.mainField] ? item[this.props.mainField].trim() : \"\";\r\n        let firstLetter = value.substring(0, 1);\r\n        let wordArray = value.split(\" \");\r\n        if (wordArray.length > 1) {\r\n            firstLetter = firstLetter + wordArray[wordArray.length - 1][0];\r\n        }\r\n        const labelColor = ['label-orange', 'label-green', 'label-yellow', 'label-purple'];\r\n        return (\r\n            // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n            <ListGroup.Item key={`listKey_${props.index}`} as=\"li\" onClick={() => this.getSelectedDetail(item)}\r\n                className={`list-bgcolor ${this.props.noSelectedRecord ? \"\" : this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? \"active\" : \"\" : \"\"}`}>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip_list_wrap\" /> */}\r\n                <Media>\r\n                    {this.props.isMultiSelecct ?\r\n                        <Form.Check custom type=\"checkbox\" id=\"customControl\"  >\r\n                            <Form.Check.Input type=\"checkbox\" id={`tm_customCheck_${props.index}`}\r\n                                checked={this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? true : false : false}\r\n                                readOnly\r\n                            />\r\n\r\n                            <Form.Check.Label className={`mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{firstLetter.toUpperCase()}</Form.Check.Label>\r\n                        </Form.Check> :\r\n                        this.props.hideCheckLabel ? this.props.showTableIcon ?\r\n                            <FontAwesomeIcon icon={faTable} size='lg' />\r\n                            : \"\" :\r\n                            <Form.Check.Label className={`mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{firstLetter.toUpperCase()}</Form.Check.Label>\r\n                    }\r\n                    <Media.Body>\r\n                        {/* <ReactTooltip place=\"bottom\" id=\"tooltip_list_wrap\" /> */}\r\n                        <MediaHeader data-tip={item[this.props.mainField]}\r\n                        // data-for=\"tooltip_list_wrap\"\r\n                        >{item[this.props.mainField]}</MediaHeader>\r\n                        <MediaSubHeader className=\"title-grid-width-sm\">\r\n                            <MediaLabel>{item[this.props.firstField]}</MediaLabel>\r\n                            {this.props.secondField ? <>\r\n                                <MediaLabel className=\"text_seperator\">\r\n                                    {item[this.props.secondField]}\r\n                                </MediaLabel>\r\n                            </> : \"\"}\r\n                        </MediaSubHeader>\r\n                    </Media.Body>\r\n                </Media>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n    render() {\r\n        let headerClass = this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\";\r\n        const barcodeControl = this.props.controlMap && this.props.controlMap.has(this.props.methodUrl + \"Barcode\") && this.props.controlMap.get(this.props.methodUrl + \"Barcode\").ncontrolcode;\r\n\r\n        return (\r\n            <>\r\n                <Affix top={this.props.showFilterIcon ? 91 : 53}>\r\n                    {/* ${this.props.needAccordianFilter ? 'hight-md' : 'height-normal'} */}\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                    <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} `}>\r\n                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                        <SearchAdd className={`d-flex ${headerClass}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                            {this.props.hideSearch ? \"\" :\r\n                                <InputGroup className=\"list-group-search\">\r\n                                    <SearchIcon className=\"search-icon\">\r\n                                        {/* <FontAwesomeIcon icon={faFilter} style={{ color: \"#c1c7d0\" }} /> */}\r\n                                        <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                                        {/* <SolidFilterIcon className=\"custom_icons\" width=\"18\" height=\"18\" fill='#FFF' stroke='#000000' stroke-width=\"15\"/> */}\r\n                                    </SearchIcon>\r\n\r\n                                    <FormControl\r\n                                        ref={this.props.searchRef}// onEnterKeyPress={this.filterColumn}\r\n                                        autoComplete=\"off\"\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTER\" })} //.concat(this.props.screenName)\r\n                                        name={\"search\".concat(this.props.screenName.toLowerCase())}\r\n                                        onKeyUp={(e) => this.filterColumn(e)}\r\n                                    />\r\n\r\n                                    {this.props.showFilterIcon ?\r\n                                        <InputGroup.Append>\r\n                                            <AdvFilter\r\n                                                filterComponent={this.props.filterComponent}\r\n                                                dataFor=\"tooltip_list_wrap\"\r\n                                                onFilterSubmit={this.props.onFilterSubmit}\r\n                                                showFilter={this.props.showFilter}\r\n                                                openFilter={this.props.openFilter}\r\n                                                closeFilter={this.props.closeFilter}\r\n                                                callCloseFunction={this.props.callCloseFunction}\r\n                                                showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                            />\r\n                                        </InputGroup.Append>\r\n\r\n                                        : \"\"\r\n                                    }\r\n                                    {this.props.showAdvFilterIcon ? (\r\n                                        <InputGroup.Append>\r\n                                            <Button\r\n                                                data-tip={this.props.intl.formatMessage({\r\n                                                    id: \"IDS_ADVFILTER\",\r\n                                                })}\r\n                                                // data-for=\"tooltip-common-wrap\"\r\n                                                className=\"bg-default svg_custom_big no-down-arrow custom-drop-down-arrow-top ico-fontello-psheudo\"\r\n                                                onClick={(event) => this.props.handleClick(event, 1)}\r\n                                            >\r\n                                                <FilterIcon\r\n                                                    className=\"custom_icons\"\r\n                                                    width=\"24\"\r\n                                                    height=\"24\"\r\n                                                />\r\n                                            </Button>\r\n                                        </InputGroup.Append>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {this.props.showSolidFilterIcon ? (\r\n                                        <InputGroup.Append>\r\n                                            <Button\r\n                                                // data-tip={this.props.intl.formatMessage({\r\n                                                //   id: \"IDS_SOLIDFILTER\",\r\n                                                // })}\r\n                                                // data-for=\"tooltip-common-wrap\"\r\n                                                className=\"bg-default svg_custom_big no-down-arrow custom-drop-down-arrow-top ico-fontello-psheudo\"\r\n                                                onClick={(event) => this.props.handleClick(event, 1)}\r\n                                            >\r\n                                                <SolidFilterIcon\r\n                                                    className=\"custom_icons\"\r\n                                                    //stroke=\"rgb(151, 160, 175)\"\r\n                                                    width=\"24\"\r\n                                                    height=\"24\"\r\n                                                    //fill='#FFF' \r\n                                                    stroke-width=\"45\"\r\n                                                />\r\n                                            </Button>\r\n                                        </InputGroup.Append>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </InputGroup>\r\n                            }\r\n\r\n\r\n                            <ListWrapper className=\"d-flex ml-2\">\r\n                                {this.props.titleHead ? <h4>{this.props.titleHead}</h4> : ''}\r\n\r\n\r\n                                {this.props.showBuildQuery ?\r\n                                    <Button className=\"btn btn-circle outline-grey mr-2\" variant=\"link\"\r\n                                        // hidden={this.props.userRoleControlRights.indexOf(this.props.buildQueryId) === -1}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BUILDQUERY\" })}\r\n                                        onClick={() => this.props.builderData()}>\r\n                                        <FontAwesomeIcon icon={faDatabase} />\r\n                                    </Button>\r\n                                    : \"\"\r\n                                }\r\n\r\n                                {this.props.hideAddButton ? \"\" :\r\n                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.addId) === -1}\r\n                                        //title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        onClick={() => this.props.openModal()}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </Button>\r\n                                }\r\n\r\n                                <BarcodeButton userRoleControlRights={this.props.userRoleControlRights}\r\n                                    selectedMaster={this.props.selectedMaster}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    controlMap={this.props.controlMap}\r\n                                    methodUrl={this.props.methodUrl+\"Barcode\"}\r\n                                    screenName={this.props.Login.screenName}\r\n                                ></BarcodeButton>\r\n\r\n                                {/* <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                    hidden={this.props.userRoleControlRights.indexOf(barcodeControl) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_BARCODEGENERATE\" })}\r\n                                    onClick={() => this.props.openBarcodeModal(this.props.selectedMaster, barcodeControl, this.props.Login.userInfo)}>\r\n                                    <FontAwesomeIcon icon={faBarcode} />\r\n                                </Button> */}\r\n                                {this.props.hideSyncButton ? \"\" :\r\n                                    <Nav.Link className=\"btn btn-icon-rounded btn-circle solid-blue\" \r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.syncId) === -1}\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_INITIATESYNC\" })}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        onClick={() => this.props.openModal()}>\r\n                                        <SyncInitiate className=\"custom_icons\" width=\"20\" height=\"20\"/>\r\n                                        </Nav.Link>\r\n\r\n                                }\r\n                                {/* {this.props.hideViewButton ? \"\" :\r\n                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.viewId) === -1}\r\n                                        //title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                        onClick={() => this.props.viewMaterialInventoryDetails()}>\r\n                                        <FontAwesomeIcon icon={faEye}/>\r\n                                    </Button>\r\n                                } */}\r\n\r\n                                {this.props.hideReload ? \"\" :\r\n                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                        onClick={() => this.props.reloadData()}\r\n                                        // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                    </Button>\r\n                                }\r\n                                {this.props.showGraphView ?\r\n                                    <Button\r\n                                        className=\"btn btn-circle outline-grey ml-2 fa-rotate-270\" variant=\"link\"\r\n                                        onClick={() => this.props.getGraphView()}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })}>\r\n                                        {/* title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })}> */}\r\n                                        <FontAwesomeIcon icon={faSitemap} style={{ \"width\": \"0.6!important\" }} />\r\n                                    </Button>\r\n                                    // <Nav.Link className=\"btn btn-circle outline-grey ml-2 action-icons-wrap\" onClick={() => this.props.getGraphView()} title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })} >\r\n                                    //     <Image src={Graph} alt=\"filer-icon\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"/>\r\n                                    // </Nav.Link>\r\n                                    : \"\"\r\n                                }\r\n                                {this.props.showCopy ?\r\n                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.copyId) === -1}\r\n                                        // title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                        // data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                        onClick={() => this.props.copyData()}>\r\n                                        <FontAwesomeIcon icon={faCopy} />\r\n                                    </Button>\r\n                                    : \"\"\r\n                                }\r\n                            </ListWrapper>\r\n                        </SearchAdd>\r\n                        {/* </Tooltip> */}\r\n\r\n                        {this.props.needAccordianFilter ?\r\n                            <FilterAccordion\r\n                                key=\"filter\"\r\n                                filterComponent={this.props.filterComponent}\r\n                                className={this.props.accordianClassName}\r\n                            />\r\n                            : \"\"}\r\n\r\n                        <ClientList className=\"product-list list_rightborder\">\r\n                            <PerfectScrollbar>\r\n                                {/* style={{ height: this.props.paneHeight ? this.props.paneHeight : this.props.needAccordianFilter ? 'calc(100vh - 220px)' : 'calc(100vh - 180px)' }} */}\r\n                                {/* className=\"inner-hg-pane\" */}\r\n                                <div className={`${this.props.needAccordianFilter ? 'height-md' : 'height-normal'} ${this.props.masterList == 0 && 'list-master-no-record'} ${this.props.showFilterIcon ? 'height-xd' : 'height-xl'} ${this.props.hidePaging ? '' : 'height-xld'}`}>\r\n\r\n                                    <ListGroup as=\"ul\">\r\n                                        {this.props.masterList ?\r\n                                            <ListView\r\n                                                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\r\n                                                item={(props) => this.ListDesign(props)}\r\n                                            /> : \"\"}\r\n\r\n                                        {/* {this.props.masterList ?\r\n\r\n                                    this.props.masterList.map((master, index) =>\r\n                                      \r\n                                    )\r\n                                    : \"\"} */}\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n\r\n                        </ClientList>\r\n                        {this.props.hidePaging ? \"\" :\r\n                            <CustomPager\r\n                                skip={this.props.skip ? this.props.skip : this.state.skip}\r\n                                take={this.props.take ? this.props.take : this.state.take}\r\n                                width={20}\r\n                                pagershowwidth={18}\r\n                                handlePageChange={this.handlePageChange}\r\n                                total={this.props.masterList ? this.props.masterList.length : 0}\r\n                                buttonCount={this.state.buttonCount}\r\n                                info={this.state.info}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                pageSize={this.props.pageSize ? this.props.pageSize : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                            >\r\n                            </CustomPager>\r\n                        }\r\n                    </ListMasterWrapper>\r\n                </Affix>\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if (this.props.masterList !== previousProps.masterList) {\r\n            if (this.props.skip === undefined && this.props.masterList && this.props.masterList.length <= this.state.skip) {\r\n                this.setState({ skip: 0 });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nexport default connect(mapStateToProps, {  })(injectIntl(ListMaster));"]},"metadata":{},"sourceType":"module"}