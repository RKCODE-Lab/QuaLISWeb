{"ast":null,"code":"import React,{useRef}from'react';import'../pages/registration/registration.css';import{Pager}from'@progress/kendo-react-data-tools';import{injectIntl}from'react-intl';// import { withResizeDetector } from 'react-resize-detector';\nimport{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import messages_en from'../assets/translations/en.json';import messages_de from'../assets/translations/de.json';var messages={'en-US':messages_en,'ko-KR':messages_de};var CustomPager=function CustomPager(props){var ref=useRef(null);var handlePageChange=function handlePageChange(e){props.handlePageChange(e);};loadMessages(messages[props.userInfo&&props.userInfo.slanguagetypecode],\"lang\");var AdaptiveComponent=function AdaptiveComponent(){// let divWidth =  JSON.parse(JSON.stringify(width) )\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"pager_wrap \".concat(props.width&&props.width<(props.pagershowwidth?props.pagershowwidth:33)?'show-list':'wrap-class'),ref:ref},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(Pager,{className:\"k-pagerheight\",skip:parseInt(props.skip),take:parseInt(props.take),onPageChange:function onPageChange(e){return handlePageChange(e);},total:props.total,buttonCount:props.buttonCount,info:props.info,pageSizes:props.pageSize// messagesMap={loadMessages(enMessages, \"en\")}\n})));};// const AdaptiveWithDetector = withResizeDetector(AdaptiveComponent);\nreturn/*#__PURE__*/ (// <AdaptiveWithDetector />\nReact.createElement(AdaptiveComponent,null));};export default injectIntl(CustomPager);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/CustomPager.jsx"],"names":["React","useRef","Pager","injectIntl","loadMessages","LocalizationProvider","messages_en","messages_de","messages","CustomPager","props","ref","handlePageChange","e","userInfo","slanguagetypecode","AdaptiveComponent","width","pagershowwidth","parseInt","skip","take","total","buttonCount","info","pageSize"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,MAAO,wCAAP,CACA,OAASC,KAAT,KAAsB,kCAAtB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA;AACA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,4BAAnD,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACf,QAASF,WADM,CAEf,QAASC,WAFM,CAAjB,CAKA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,GAAG,CAAGV,MAAM,CAAC,IAAD,CAAlB,CACA,GAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAO,CAC9BH,KAAK,CAACE,gBAAN,CAAuBC,CAAvB,EACD,CAFD,CAGAT,YAAY,CAACI,QAAQ,CAACE,KAAK,CAACI,QAAN,EAAkBJ,KAAK,CAACI,QAAN,CAAeC,iBAAlC,CAAT,CAA+D,MAA/D,CAAZ,CACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B;AACA,mBAAO,2BAAK,SAAS,sBAAgBN,KAAK,CAACO,KAAN,EAAeP,KAAK,CAACO,KAAN,EAAeP,KAAK,CAACQ,cAAN,CAAuBR,KAAK,CAACQ,cAA7B,CAA4C,EAA3D,CAAf,CAAgF,WAAhF,CAA8F,YAA9G,CAAd,CAA4I,GAAG,CAAEP,GAAjJ,eACL,oBAAC,oBAAD,EAAsB,QAAQ,CAAC,MAA/B,eACE,oBAAC,KAAD,EACE,SAAS,CAAC,eADZ,CAEE,IAAI,CAAEQ,QAAQ,CAACT,KAAK,CAACU,IAAP,CAFhB,CAGE,IAAI,CAAED,QAAQ,CAACT,KAAK,CAACW,IAAP,CAHhB,CAIE,YAAY,CAAE,sBAACR,CAAD,QAAOD,CAAAA,gBAAgB,CAACC,CAAD,CAAvB,EAJhB,CAKE,KAAK,CAAEH,KAAK,CAACY,KALf,CAME,WAAW,CAAEZ,KAAK,CAACa,WANrB,CAOE,IAAI,CAAEb,KAAK,CAACc,IAPd,CAQE,SAAS,CAAEd,KAAK,CAACe,QACnB;AATA,EADF,CADK,CAAP,CAeD,CAjBD,CAkBA;AACA,oBACE;AACA,oBAAC,iBAAD,MAFF,EAID,CA7BD,CA8BA,cAAetB,CAAAA,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import React, { useRef } from 'react';\r\nimport '../pages/registration/registration.css'\r\nimport { Pager } from '@progress/kendo-react-data-tools';\r\nimport { injectIntl } from 'react-intl';\r\n// import { withResizeDetector } from 'react-resize-detector';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport messages_en from '../assets/translations/en.json';\r\nimport messages_de from '../assets/translations/de.json';\r\n\r\nconst messages = {\r\n  'en-US': messages_en,\r\n  'ko-KR': messages_de\r\n}\r\n\r\nconst CustomPager = (props) => {\r\n  const ref = useRef(null);\r\n  const handlePageChange = (e) => {\r\n    props.handlePageChange(e)\r\n  }\r\n  loadMessages(messages[props.userInfo && props.userInfo.slanguagetypecode], \"lang\");\r\n  const AdaptiveComponent = () => {\r\n    // let divWidth =  JSON.parse(JSON.stringify(width) )\r\n    return <div className={`pager_wrap ${props.width && props.width < (props.pagershowwidth ? props.pagershowwidth:33) ? 'show-list' : 'wrap-class'}`} ref={ref}>\r\n      <LocalizationProvider language=\"lang\">\r\n        <Pager\r\n          className=\"k-pagerheight\"\r\n          skip={parseInt(props.skip)}\r\n          take={parseInt(props.take)}\r\n          onPageChange={(e) => handlePageChange(e)}\r\n          total={props.total}\r\n          buttonCount={props.buttonCount}\r\n          info={props.info}\r\n          pageSizes={props.pageSize}\r\n        // messagesMap={loadMessages(enMessages, \"en\")}\r\n        />\r\n      </LocalizationProvider>\r\n    </div>;\r\n  };\r\n  // const AdaptiveWithDetector = withResizeDetector(AdaptiveComponent);\r\n  return (\r\n    // <AdaptiveWithDetector />\r\n    <AdaptiveComponent />\r\n  )\r\n}\r\nexport default injectIntl(CustomPager);\r\n"]},"metadata":{},"sourceType":"module"}