{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\protocol\\\\CopyProtocol.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport { CardBody, CardHeader } from '@progress/kendo-react-layout';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst CopyProtocol = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: \"inline-block\",\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 41\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_PROTOCOLINFO\"\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_SAMPLECATEGORY\",\n    message: \"Sample Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 49\n    }\n  }, \" \", props.productCategoryName))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_SAMPLETYPE\",\n    message: \"Sample Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 49\n    }\n  }, \" \", props.productName))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_PROTOCOLNAME\",\n    message: \"Protocol Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"readonly-text font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 49\n    }\n  }, \" \", props.protocolName))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nproductcatcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLECATEGORY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.productCategory || [],\n    value: props.selectedRecord[\"nproductcatcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nproductcatcode\"],\n    onChange: event => props.onComboChange(event, 'nproductcatcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nproductcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLETYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.selectedRecord[\"nproductcatcode\"] !== undefined ? props.product : [],\n    value: props.selectedRecord[\"nproductcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nproductcode\"],\n    onChange: event => props.onComboChange(event, 'nproductcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sprotocolname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PROTOCOLNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROTOCOLNAME\"\n    }),\n    value: props.selectedRecord[\"sprotocolname\"] || \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default injectIntl(CopyProtocol);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/protocol/CopyProtocol.jsx"],"names":["React","FormattedMessage","injectIntl","Row","Col","Card","FormGroup","FormLabel","CardBody","CardHeader","FormInput","FormSelectSearch","CopyProtocol","props","display","marginTop","intl","formatMessage","id","productCategoryName","productName","protocolName","productCategory","selectedRecord","event","onComboChange","undefined","product","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {FormattedMessage,injectIntl } from 'react-intl';\r\nimport {Row, Col,Card, FormGroup, FormLabel} from 'react-bootstrap';\r\nimport { CardBody, CardHeader } from '@progress/kendo-react-layout';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst CopyProtocol = (props) =>{    \r\n    \r\n       return (\r\n            <>    \r\n                <Row>                                \r\n                    <Col md={12}>\r\n                        <FormGroup>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                        <h4>{props.intl.formatMessage({ id: \"IDS_PROTOCOLINFO\" })}</h4>\r\n                                    </span>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_SAMPLECATEGORY\" message=\"Sample Category\" /></FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.productCategoryName}</span>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_SAMPLETYPE\" message=\"Sample Type\" /></FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.productName}</span>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_PROTOCOLNAME\" message=\"Protocol Name\" /></FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.protocolName}</span>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Card> \r\n                        </FormGroup>         \r\n                    </Col>                   \r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"nproductcatcode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_SAMPLECATEGORY\"})}                                \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                            options={ props.productCategory || []}\r\n                            value = { props.selectedRecord[\"nproductcatcode\"] || \"\"}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}                               \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            defaultValue={props.selectedRecord[\"nproductcatcode\"]}\r\n                            onChange = {(event)=> props.onComboChange(event, 'nproductcatcode')}  \r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                            name={\"nproductcode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_SAMPLETYPE\"})}                                \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                            options={props.selectedRecord[\"nproductcatcode\"]!==undefined? props.product : []}\r\n                            value = { props.selectedRecord[\"nproductcode\"] || \"\"}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}                               \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            defaultValue={props.selectedRecord[\"nproductcode\"]}\r\n                            onChange = {(event)=> props.onComboChange(event, 'nproductcode')}  \r\n                        />\r\n\r\n                        <FormInput\r\n                            name={\"sprotocolname\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_PROTOCOLNAME\"})}                  \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_PROTOCOLNAME\"})}\r\n                            value ={ props.selectedRecord[\"sprotocolname\"] || \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                        />\r\n\r\n                    </Col>\r\n                </Row> \r\n            </>  \r\n       )\r\n   }\r\n   export default injectIntl(CopyProtocol);\r\n"]},"metadata":{},"sourceType":"module"}