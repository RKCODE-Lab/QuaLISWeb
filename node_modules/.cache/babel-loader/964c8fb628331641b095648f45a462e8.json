{"ast":null,"code":"import rsapi from \"../rsapi\";\nimport { toast } from \"react-toastify\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport Axios from \"axios\";\nimport { initRequest, updateStore } from \"./LoginAction\";\nimport { transactionStatus, attachmentType } from \"../components/Enumeration\";\nimport { constructOptionList, showEsign } from \"../components/CommonScript\";\nimport { crudMaster } from './ServiceAction';\nimport { intl } from \"../components/App\";\nexport function getAttachmentCombo(inputParam) {\n  return dispatch => {\n    let valid = false;\n\n    if (inputParam.masterList) {\n      if (Array.isArray(inputParam.masterList)) {\n        if (inputParam.masterList.length > 0) {\n          valid = true;\n        }\n      } else {\n        valid = true;\n      }\n    } //if (inputParam.masterList && inputParam.masterList.length > 0) {\n\n\n    if (valid) {\n      dispatch(initRequest(true));\n      let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n        userinfo: inputParam.userInfo\n      })];\n\n      if (inputParam.operation === \"update\") {\n        urlArray.push(rsapi.post(\"/attachment/getEdit\".concat(inputParam.methodUrl), {\n          userinfo: inputParam.userInfo,\n          selectedrecord: inputParam.selectedRecord\n        }));\n      }\n\n      Axios.all(urlArray).then(response => {\n        let linkmaster = response[0].data.LinkMaster;\n        let selectedRecord = {};\n        const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\n        const linkmasterMap = constructOptionList(linkmaster || [], \"nattachmenttypecode\", \"slinkname\", undefined, undefined, true);\n        linkmaster = linkmasterMap.get(\"OptionList\");\n        let disabled = false;\n        let editObject = {};\n\n        if (inputParam.operation === \"update\") {\n          editObject = response[1].data;\n          let nlinkcode = {};\n          let link = {};\n\n          if (editObject.nattachmenttypecode === attachmentType.LINK) {\n            nlinkcode = {\n              \"label\": editObject.slinkname,\n              \"value\": editObject.nlinkcode\n            };\n            link = {\n              slinkfilename: editObject.sfilename,\n              slinkdescription: editObject.sdescription,\n              sfilesize: '',\n              nfilesize: 0,\n              sfilename: '',\n              sdescription: ''\n            };\n          } else {\n            nlinkcode = defaultLink.length > 0 ? {\n              \"label\": defaultLink[0].slinkname,\n              \"value\": defaultLink[0].nlinkcode\n            } : \"\";\n            link = {\n              slinkfilename: '',\n              slinkdescription: '',\n              sfilesize: editObject.sfilesize,\n              nfilesize: editObject.nfilesize,\n              sfilename: editObject.sfilename,\n              sdescription: editObject.sdescription\n            };\n          }\n\n          selectedRecord = { // ...editObject,\n            ...link,\n            dcreateddate: editObject.dcreateddate,\n            groupingField: editObject.groupingField,\n            nattachmenttypecode: editObject.nattachmenttypecode,\n            nformcode: editObject.nformcode,\n            npreregno: editObject.npreregno,\n            nregattachmentcode: editObject.nregattachmentcode,\n            nuserrolecode: editObject.nuserrolecode,\n            sarno: editObject.sarno,\n            screateddate: editObject.screateddate,\n            sdisplayname: editObject.sdisplayname,\n            ssystemfilename: editObject.ssystemfilename,\n            stypename: editObject.stypename,\n            susername: editObject.susername,\n            suserrolename: editObject.suserrolename,\n            nusercode: editObject.nusercode,\n            ntestattachmentcode: editObject.ntestattachmentcode,\n            ntransactionsamplecode: editObject.ntransactionsamplecode,\n            ntransactiontestcode: editObject.ntransactiontestcode,\n            nbatchfilecode: editObject.nbatchfilecode,\n            nreleasebatchcode: editObject.nreleasebatchcode,\n            nlinkcode // disabled: true\n\n          };\n        } else {\n          selectedRecord = {\n            nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n            nlinkcode: defaultLink.length > 0 ? {\n              \"label\": defaultLink[0].slinkname,\n              \"value\": defaultLink[0].nlinkcode\n            } : \"\",\n            disabled\n          };\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            [inputParam.modalName]: true,\n            operation: inputParam.operation,\n            screenName: inputParam.screenName,\n            ncontrolCode: inputParam.ncontrolCode,\n            selectedRecord,\n            loading: false,\n            linkMaster: linkmaster,\n            modalType: 'attachment',\n            modalName: [inputParam.modalName],\n            editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: inputParam.masterAlertStatus\n      }));\n    }\n  };\n}\nexport function deleteAttachment(deleteParam) {\n  return dispatch => {\n    const methodUrl = deleteParam.methodUrl;\n    const selected = deleteParam.selectedRecord;\n    const data = deleteParam.data;\n    let attachmentskip = deleteParam.skip;\n    let attachmenttake = deleteParam.take;\n\n    if (data.length === 1) {\n      if (attachmentskip > attachmenttake) {\n        attachmentskip = attachmentskip - attachmenttake;\n      } else if (attachmentskip >= attachmenttake) {\n        attachmentskip = 0;\n      }\n    }\n\n    const inputParam = {\n      inputData: {\n        [methodUrl.toLowerCase()]: selected,\n        nreleasebatchcode: deleteParam.nreleasebatchcode,\n        npreregno: deleteParam.npreregno,\n        ntransactiontestcode: deleteParam.ntransactiontestcode,\n        ntransactionsamplecode: deleteParam.ntransactionsamplecode,\n        userinfo: deleteParam.userInfo,\n        attachmentskip,\n        attachmenttake\n      },\n      classUrl: \"attachment\",\n      operation: 'delete',\n      methodUrl: methodUrl,\n      screenName: deleteParam.screenName,\n      attachmentskip,\n      attachmenttake\n    };\n    const masterData = deleteParam.masterData;\n\n    if (showEsign(deleteParam.esignRights, deleteParam.userInfo.nformcode, deleteParam.ncontrolCode)) {\n      // dispatch({\n      //     type: DEFAULT_RETURN,\n      //     payload: {\n      //         loadEsign: true,\n      //         screenData: { inputParam, masterData },\n      //         openAttachmentModal: true,\n      //         screenName: deleteParam.screenName,\n      //         operation: 'delete',\n      //         selectedRecord: {}\n      //     }\n      // });\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          openAttachmentModal: true,\n          screenName: deleteParam.screenName,\n          operation: 'delete',\n          selectedRecord: {}\n        }\n      };\n      dispatch(updateStore(updateInfo));\n    } else {\n      dispatch(crudMaster(inputParam, masterData, \"openAttachmentModal\", {}));\n    }\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/AttachmentsAction.js"],"names":["rsapi","toast","DEFAULT_RETURN","Axios","initRequest","updateStore","transactionStatus","attachmentType","constructOptionList","showEsign","crudMaster","intl","getAttachmentCombo","inputParam","dispatch","valid","masterList","Array","isArray","length","urlArray","post","userinfo","userInfo","operation","push","concat","methodUrl","selectedrecord","selectedRecord","all","then","response","linkmaster","data","LinkMaster","defaultLink","filter","item","ndefaultlink","YES","linkmasterMap","undefined","get","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","sfilesize","nfilesize","dcreateddate","groupingField","nformcode","npreregno","nregattachmentcode","nuserrolecode","sarno","screateddate","sdisplayname","ssystemfilename","stypename","susername","suserrolename","nusercode","ntestattachmentcode","ntransactionsamplecode","ntransactiontestcode","nbatchfilecode","nreleasebatchcode","AttachmentType","FTP","type","payload","modalName","screenName","ncontrolCode","loading","linkMaster","modalType","editFiles","catch","error","status","message","warn","formatMessage","id","masterAlertStatus","deleteAttachment","deleteParam","selected","attachmentskip","skip","attachmenttake","take","inputData","toLowerCase","classUrl","masterData","esignRights","updateInfo","typeName","loadEsign","screenData","openAttachmentModal"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport Axios from \"axios\";\r\nimport { initRequest, updateStore } from \"./LoginAction\";\r\nimport { transactionStatus, attachmentType } from \"../components/Enumeration\";\r\nimport { constructOptionList, showEsign } from \"../components/CommonScript\";\r\nimport { crudMaster } from './ServiceAction'\r\nimport { intl } from \"../components/App\";\r\n\r\nexport function getAttachmentCombo(inputParam) {\r\n    return (dispatch) => {\r\n        let valid = false;\r\n        if (inputParam.masterList){\r\n            if (Array.isArray(inputParam.masterList)){\r\n                if (inputParam.masterList.length > 0){\r\n                    valid = true;\r\n                }\r\n            }\r\n            else{\r\n                valid = true;\r\n            }\r\n        }\r\n        \r\n        //if (inputParam.masterList && inputParam.masterList.length > 0) {\r\n        if (valid){\r\n            dispatch(initRequest(true));\r\n            let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", { userinfo: inputParam.userInfo })];\r\n            if (inputParam.operation === \"update\") {\r\n                urlArray.push(rsapi.post(\"/attachment/getEdit\".concat(inputParam.methodUrl), { userinfo: inputParam.userInfo, selectedrecord: inputParam.selectedRecord }))\r\n            }\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let linkmaster = response[0].data.LinkMaster;\r\n                    let selectedRecord = {};\r\n                    const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\r\n                    const linkmasterMap  = constructOptionList(linkmaster || [], \"nattachmenttypecode\",\"slinkname\" , undefined, undefined, true);\r\n                    linkmaster = linkmasterMap.get(\"OptionList\");\r\n                    let disabled = false;\r\n                    let editObject = {};\r\n                    if (inputParam.operation === \"update\") {\r\n                        editObject = response[1].data;\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = { \"label\": editObject.slinkname,\r\n                             \"value\": editObject.nlinkcode }\r\n                             link = {\r\n                                slinkfilename:editObject.sfilename,\r\n                                slinkdescription:editObject.sdescription,\r\n                                sfilesize:'',\r\n                                nfilesize:0,\r\n                                sfilename:'',\r\n                                sdescription:'',\r\n                            }\r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ?\r\n                             { \"label\": defaultLink[0].slinkname, \r\n                             \"value\": defaultLink[0].nlinkcode } : \"\"\r\n\r\n                             link = {\r\n                                slinkfilename:'',\r\n                                slinkdescription:'',\r\n                                sfilesize:editObject.sfilesize,\r\n                                nfilesize:editObject.nfilesize,\r\n                                sfilename:editObject.sfilename,\r\n                                sdescription:editObject.sdescription,\r\n                            }\r\n                        }\r\n                        selectedRecord = {\r\n                        // ...editObject,\r\n                        ...link,\r\n                           dcreateddate:editObject.dcreateddate,\r\n                           groupingField:editObject.groupingField,\r\n                           nattachmenttypecode:editObject.nattachmenttypecode,\r\n                           nformcode:editObject.nformcode,\r\n                           npreregno:editObject.npreregno,\r\n                           nregattachmentcode:editObject.nregattachmentcode,\r\n                           nuserrolecode:editObject.nuserrolecode,\r\n                           sarno:editObject.sarno,\r\n                           screateddate:editObject.screateddate,\r\n                           sdisplayname:editObject.sdisplayname,\r\n                           ssystemfilename:editObject.ssystemfilename,\r\n                           stypename:editObject.stypename,\r\n                           susername:editObject.susername,\r\n                           suserrolename:editObject.suserrolename,\r\n                           nusercode:editObject.nusercode,\r\n                           ntestattachmentcode:editObject.ntestattachmentcode,\r\n                           ntransactionsamplecode:editObject.ntransactionsamplecode,\r\n                           ntransactiontestcode:editObject.ntransactiontestcode,\r\n                           nbatchfilecode:editObject.nbatchfilecode,\r\n                           nreleasebatchcode:editObject.nreleasebatchcode,\r\n                           nlinkcode,\r\n                             // disabled: true\r\n                        };\r\n                    } else {\r\n                        selectedRecord = {\r\n                            nattachmenttypecode:response[0].data.AttachmentType.length>0?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode:attachmentType.FTP,\r\n                            nlinkcode: defaultLink.length > 0 ? { \"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode } : \"\",\r\n                            disabled\r\n                        };\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            [inputParam.modalName]: true,\r\n                            operation: inputParam.operation,\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolCode: inputParam.ncontrolCode,\r\n                            selectedRecord, loading: false,\r\n                            linkMaster: linkmaster,\r\n                            modalType: 'attachment',\r\n                            modalName: [inputParam.modalName],\r\n                            editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: inputParam.masterAlertStatus }))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteAttachment(deleteParam) {\r\n    return (dispatch) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.selectedRecord;\r\n\r\n         const data=deleteParam.data;\r\n         let attachmentskip=deleteParam.skip;\r\n         let attachmenttake=deleteParam.take;\r\n         if(data.length===1){\r\n              if(attachmentskip>attachmenttake){\r\n                attachmentskip=attachmentskip-attachmenttake;\r\n              }\r\n             else if(attachmentskip>=attachmenttake){\r\n                attachmentskip=0;\r\n              }\r\n         }\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                [methodUrl.toLowerCase()]: selected,\r\n                nreleasebatchcode:deleteParam.nreleasebatchcode,\r\n                npreregno: deleteParam.npreregno,\r\n                ntransactiontestcode: deleteParam.ntransactiontestcode,\r\n                ntransactionsamplecode: deleteParam.ntransactionsamplecode,\r\n                userinfo: deleteParam.userInfo,\r\n                attachmentskip,\r\n                attachmenttake,\r\n    \r\n            },\r\n            classUrl: \"attachment\",\r\n            operation: 'delete',\r\n            methodUrl: methodUrl,\r\n            screenName: deleteParam.screenName,\r\n            attachmentskip,\r\n            attachmenttake,\r\n\r\n        }\r\n        const masterData = deleteParam.masterData;\r\n        if (showEsign(deleteParam.esignRights, deleteParam.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n           \r\n            // dispatch({\r\n            //     type: DEFAULT_RETURN,\r\n            //     payload: {\r\n            //         loadEsign: true,\r\n            //         screenData: { inputParam, masterData },\r\n            //         openAttachmentModal: true,\r\n            //         screenName: deleteParam.screenName,\r\n            //         operation: 'delete',\r\n            //         selectedRecord: {}\r\n            //     }\r\n            // });\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {   loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            openAttachmentModal: true,\r\n                            screenName: deleteParam.screenName,\r\n                            operation: 'delete',\r\n                            selectedRecord: {} }\r\n            }\r\n            dispatch(updateStore(updateInfo));\r\n        } else {\r\n            dispatch(crudMaster(inputParam, masterData, \"openAttachmentModal\", {}));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}