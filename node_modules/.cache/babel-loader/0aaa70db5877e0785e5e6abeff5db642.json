{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Row,Col,Card,FormGroup,FormLabel,Nav,Image}from'react-bootstrap';import{Grid,GridColumn,GridColumnMenuFilter,GridNoRecords}from'@progress/kendo-react-grid';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{//faCalculator, \nfaArchive,faCalculator,faCloudDownloadAlt,faEgg,faEye,faListAlt,faPencilAlt}from'@fortawesome/free-solid-svg-icons';//import { Tooltip } from '@progress/kendo-react-tooltip';\nimport{ReactComponent as EBCCalculation}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/formula calculation.svg\";import ColumnMenu from'../../components/data-grid/ColumnMenu';import{attachmentType,parameterType,transactionStatus}from'../../components/Enumeration';import SimpleGrid from'../../components/data-grid/SimpleGrid';import enforcestatus from\"../../assets/image/enforcestatus.svg\";import{AtTableWrap,FontIconWrap,FormControlStatic}from'../../components/data-grid/data-grid.styles';// import ReactTooltip from 'react-tooltip';\nimport{LocalizationProvider}from'@progress/kendo-react-intl';import{connect}from'react-redux';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ResultGrid=/*#__PURE__*/function(_React$Component){_inherits(ResultGrid,_React$Component);var _super=_createSuper(ResultGrid);function ResultGrid(){var _this;_classCallCheck(this,ResultGrid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleClickDelete=function(deleteParam){_this.props.deleteRecord(deleteParam);};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;if(_this.props.hasChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.props.handleExpandChange(event,_this.props.dataState);}else{event.dataItem.expanded=!isExpanded;_this.setState({isExpanded:isExpanded});}};_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasChild?/*#__PURE__*/React.createElement(SimpleGrid,{childList:_this.props.childList.get(parseInt(props.dataItem[_this.props.childMappingField]))||[],extractedColumnList:_this.props.childColumnList}):/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,_this.props.detailedFieldList.map(function(item,key){var validationtype=true;if(item.istypeValidation){if(props.dataItem['nparametertypecode']!==parameterType.NUMERIC){validationtype=false;}}if(validationtype){return/*#__PURE__*/React.createElement(Col,{md:item.isDecsriptionField?6:4,key:key},/*#__PURE__*/ //props.dataItem['nparametertypecode'] === parameterType.PREDEFINED && item.dataField==='spredefinedcomments'?  \n// <FormGroup>\n//     <FormLabel>\n//         <FormattedMessage id={item.idsName} message={item.idsName} />\n//         {item.needHistoryButton ?\n//             <Nav.Link name={\"enforcestatuscomments\"}\n//                         className=\"btn btn-circle outline-grey mr-2 ml-1\"\n//                         data-tip={this.props.intl.formatMessage({ id: item.buttonTitle })}\n//                      //   data-for=\"tooltip_grid_wrap\"\n//                         onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\n//                         >\n//             <FontAwesomeIcon icon={faEye}   />\n//             </Nav.Link> \n//             // <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\n//             //         style={{ display: \"inline-block\" }} >\n//             //     <FontIconWrap className=\"d-font-icon p-1\" title={this.props.intl.formatMessage({ id: item.buttonTitle })}>\n//             //         <FontAwesomeIcon\n//             //             icon={faEye}\n//             //             onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\n//             //         >\n//             //         </FontAwesomeIcon>\n//             //     </FontIconWrap>\n//             // </Nav.Link>\n//             : \"\"}\n//     </FormLabel>\n//     <FormControlStatic>\n//         {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\n//             item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : props.dataItem[item.dataField]}\n//     </FormControlStatic>\n//     <FontIconWrap className=\"d-font-icon\" \n//       data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITPREFINEDCOMMENTS\" })}\n//       hidden={this.props.userRoleControlRights &&\n//          this.props.userRoleControlRights.indexOf(this.props.controlMap.has(\"EditPredefinedComments\")\n//          && this.props.controlMap.get(\"EditPredefinedComments\").ncontrolcode) === -1}\n//       onClick={() => this.props.editpredefinedcomments(props.dataItem)\n//        }\n//      >\n//    <FontAwesomeIcon icon={faPencilAlt} />\n//     </FontIconWrap>  \n// </FormGroup>:\n//    item.dataField==='spredefinedcomments'? \"\"  :\nReact.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName}),item.needHistoryButton?/*#__PURE__*/React.createElement(Nav.Link,{name:\"enforcestatuscomments\",className:\"btn btn-circle outline-grey mr-2 ml-1\",\"data-tip\":_this.props.intl.formatMessage({id:item.buttonTitle})//   data-for=\"tooltip_grid_wrap\"\n,onClick:function onClick(){return item.onClickButton(props.dataItem,_this.props.masterData,_this.props.userInfo,item.idsName,item.dataField);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}))// <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\n//         style={{ display: \"inline-block\" }} >\n//     <FontIconWrap className=\"d-font-icon p-1\" title={this.props.intl.formatMessage({ id: item.buttonTitle })}>\n//         <FontAwesomeIcon\n//             icon={faEye}\n//             onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\n//         >\n//         </FontAwesomeIcon>\n//     </FontIconWrap>\n// </Nav.Link>\n:\"\"),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):props.dataItem[item.dataField])));}}))))),\" \");};return _this;}_createClass(ResultGrid,[{key:\"columnProps\",value:function columnProps(field){if(!this.props.hideColumnFilter){return{field:field,columnMenu:ColumnMenu//headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\n};}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}},{key:\"render\",value:function render(){var _this2=this;//const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\nvar editId=this.props.controlMap.has(\"AddParameterComments\")&&this.props.controlMap.get(\"AddParameterComments\").ncontrolcode;var enforceStatusID=this.props.controlMap.has(\"EnforceStatus\")&&this.props.controlMap.get(\"EnforceStatus\").ncontrolcode;var checklistID=this.props.controlMap.has(\"EditChecklist\")?this.props.controlMap.get(\"EditChecklist\").ncontrolcode:-1;var selectedId=this.props.selectedId;var pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.userInfo.slanguagetypecode},/*#__PURE__*/React.createElement(Grid,Object.assign({style:{height:this.props.gridHeight},sortable:true,resizable:true,reorderable:false,scrollable:this.props.scrollable,pageable:this.props.pageable?{buttonCount:4,pageSizes:pageSizes,previousNext:false}:\"\",groupable:this.props.groupable?true:false,detail:this.detailBand,expandField:this.props.expandField?this.props.expandField:false,onExpandChange:this.expandChange,data:this.props.dataResult},this.props.dataState,{selectedField:\"selected\",onRowClick:this.props.handleRowClick,onDataStateChange:this.props.dataStateChange}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(GridColumn,Object.assign({key:index// data-tip={this.props.intl.formatMessage({ id: item.idsName })}\n,title:_this2.props.intl.formatMessage({id:item.idsName})},_this2.columnProps(item.dataField),{width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(React.Fragment,null,item.fieldType===\"attachment\"&&row[\"dataItem\"]['nparametertypecode']===parameterType.ATTACHMENT&&row[\"dataItem\"]['nattachmenttypecode']===attachmentType.FTP?row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField],className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt,title:_this2.props.intl.formatMessage({id:\"IDS_DOWNLOADFILE\"}),onClick:function onClick(){return _this2.props.viewFile(_objectSpread(_objectSpread({},_this2.props.attachmentParam),{},{inputData:{selectedRecord:row[\"dataItem\"],userinfo:_this2.props.userInfo}}),row);}}),\" \",row[\"dataItem\"][item.dataField]):item.fieldType===\"attachment\"&&row[\"dataItem\"]['nattachmenttypecode']===attachmentType.LINK?row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"a\",{href:row[\"dataItem\"][item.dataField],style:{cursor:\"pointer\"},onClick:function onClick(){return _this2.props.viewFile(_objectSpread(_objectSpread({},_this2.props.attachmentParam),{},{inputData:{selectedRecord:row[\"dataItem\"],userinfo:_this2.props.userInfo}}),row);}},row[\"dataItem\"][item.dataField])):item.fieldType===\"checklistview\"?row.rowType===\"groupHeader\"?null:row[\"dataItem\"][item.checklistKey]>0?/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]//data-for=\"tooltip_grid_wrap\" \n,className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon\"// data-for=\"tooltip-grid-wrap\" \n// data-for=\"tooltip-grid-wrap\" \n// onClick={() => this.props.viewFile({ ...this.props.attachmentParam, inputData: { selectedRecord: row[\"dataItem\"], userinfo: this.props.userInfo } }, row)}\n,needSaveButton:true,onClick:function onClick(){return _this2.props.checkListRecord(_objectSpread(_objectSpread({},_this2.props.checklistParam),{},{selectedRecord:row[\"dataItem\"],ncontrolcode:checklistID,needSaveButton:!(_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(checklistID)===-1)}),row);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faListAlt})),\" \",row[\"dataItem\"][item.dataField]):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]//  data-for=\"tooltip_grid_wrap\" \n,className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},row[\"dataItem\"][item.dataField])):item.fieldType===\"gradeColumn\"?row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]// data-for=\"tooltip_grid_wrap\"\n,className:\"\".concat(selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''),style:{color:[row[\"dataItem\"]['scolorhexcode']]}},row[\"dataItem\"][item.dataField]):/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]//data-for=\"tooltip_grid_wrap\" \n,className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]));}}));}),this.props.isActionRequired?/*#__PURE__*/React.createElement(GridColumn,{locked:true,headerClassName:\"text-center\",title:this.props.intl.formatMessage({id:'IDS_ACTION'}),sort:false,cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{className:\"k-grid-content-sticky k-command-cell selectedId === row[\\\"dataItem\\\"][this.props.primaryKeyField] ? 'active' : ''\",style:{left:'0',right:'0',borderRightWidth:'1px',textAlign:'center'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,null,/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\"// data-for=\"tooltip_grid_wrap\" \n,\"data-place\":\"left\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_PARAMETERCOMMENTS\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.props.fetchRecord(_objectSpread(_objectSpread({},_this2.props.editParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.editParam.primaryKeyField],selectedRecord:row[\"dataItem\"],controlcode:editId}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\"// data-for=\"tooltip_grid_wrap\" \n,\"data-place\":\"left\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_ENFORCESTATUS\"})},/*#__PURE__*/React.createElement(Image,{src:enforcestatus,alt:\"filer-icon\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(enforceStatusID)===-1,onClick:function onClick(){return _this2.props.fetchRecord(_objectSpread(_objectSpread({},_this2.props.editParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.editParam.primaryKeyField],editRow:row[\"dataItem\"]}));}})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-place\":\"left\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_ENFORCERESULT\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(_this2.props.controlMap.has(\"EnforceResult\")&&_this2.props.controlMap.get(\"EnforceResult\").ncontrolcode)===-1,onClick:function onClick(){return _this2.props.enforceResult(_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{ncontrolcode:_this2.props.controlMap.get(\"EnforceResult\").ncontrolcode&&_this2.props.controlMap.get(\"EnforceResult\").ncontrolcode}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faArchive})),row[\"dataItem\"]&&row[\"dataItem\"].nispredefinedformula===transactionStatus.YES&&/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-place\":\"left\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_EBCFORMULACALCULATION\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(_this2.props.controlMap.has(\"EBCFormulaCalculation\")&&_this2.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode)===-1,onClick:function onClick(){return _this2.props.formulaCalculation(_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{ncontrolcode:_this2.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode&&_this2.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode}));}},/*#__PURE__*/React.createElement(EBCCalculation,{className:\"custom_icons\",width:\"19\",height:\"19\"})))));}}):\"\"))));}}]);return ResultGrid;}(React.Component);export default connect(mapStateToProps,undefined)(injectIntl(ResultGrid));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/resultgrid/ResultGrid.jsx"],"names":["React","FormattedMessage","injectIntl","Row","Col","Card","FormGroup","FormLabel","Nav","Image","Grid","GridColumn","GridColumnMenuFilter","GridNoRecords","FontAwesomeIcon","faArchive","faCalculator","faCloudDownloadAlt","faEgg","faEye","faListAlt","faPencilAlt","ColumnMenu","attachmentType","parameterType","transactionStatus","SimpleGrid","AtTableWrap","FontIconWrap","FormControlStatic","LocalizationProvider","connect","mapStateToProps","state","Login","ResultGrid","handleClickDelete","deleteParam","props","deleteRecord","expandChange","event","isExpanded","dataItem","expanded","undefined","aggregates","hasChild","value","handleExpandChange","dataState","setState","detailBand","childList","get","parseInt","childMappingField","childColumnList","detailedFieldList","map","item","key","validationtype","istypeValidation","NUMERIC","isDecsriptionField","idsName","needHistoryButton","intl","formatMessage","id","buttonTitle","onClickButton","masterData","userInfo","dataField","length","isIdsField","field","hideColumnFilter","columnMenu","active","filter","editId","controlMap","has","ncontrolcode","enforceStatusID","checklistID","selectedId","pageSizes","settings","split","setting","actionColWidth","slanguagetypecode","height","gridHeight","scrollable","pageable","buttonCount","previousNext","groupable","expandField","dataResult","handleRowClick","dataStateChange","extractedColumnList","index","columnProps","width","row","fieldType","ATTACHMENT","FTP","rowType","primaryKeyField","viewFile","attachmentParam","inputData","selectedRecord","userinfo","LINK","cursor","checklistKey","checkListRecord","checklistParam","needSaveButton","userRoleControlRights","indexOf","color","isActionRequired","left","right","borderRightWidth","textAlign","fetchRecord","editParam","primaryKeyValue","controlcode","enforcestatus","editRow","enforceResult","nispredefinedformula","YES","formulaCalculation","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav, Image } from 'react-bootstrap';\r\nimport { Grid, GridColumn, GridColumnMenuFilter, GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { //faCalculator, \r\n    faArchive,\r\n    faCalculator,\r\n    faCloudDownloadAlt, faEgg, faEye, faListAlt, faPencilAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { ReactComponent as EBCCalculation } from '../../assets/image/formula calculation.svg';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport { attachmentType, parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport SimpleGrid from '../../components/data-grid/SimpleGrid';\r\nimport enforcestatus from '../../assets/image/enforcestatus.svg'\r\nimport { AtTableWrap, FontIconWrap, FormControlStatic } from '../../components/data-grid/data-grid.styles';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport {  LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport { connect } from 'react-redux';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass ResultGrid extends React.Component {\r\n    columnProps(field) {\r\n        if (!this.props.hideColumnFilter) {\r\n            return {\r\n                field: field,\r\n                columnMenu: ColumnMenu,\r\n                //headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n            };\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n    handleClickDelete = (deleteParam) => {\r\n        this.props.deleteRecord(deleteParam);\r\n    }\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({ isExpanded });\r\n        }\r\n    }\r\n    detailBand = (props) => {\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    {this.props.hasChild ?\r\n                        <SimpleGrid childList={this.props.childList.get(parseInt(props.dataItem[this.props.childMappingField])) || []}\r\n                            extractedColumnList={this.props.childColumnList} />\r\n                        :\r\n                        <Card>\r\n                            <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {this.props.detailedFieldList.map((item, key) => {\r\n                                        let validationtype = true;\r\n                                        if (item.istypeValidation) {\r\n                                            if (props.dataItem['nparametertypecode'] !== parameterType.NUMERIC) {\r\n                                                validationtype = false;\r\n                                            }\r\n                                        }\r\n\r\n                                        if (validationtype) {\r\n                                            return (\r\n                                                <Col md={item.isDecsriptionField ? 6 : 4} key={key}>\r\n                                                    { //props.dataItem['nparametertypecode'] === parameterType.PREDEFINED && item.dataField==='spredefinedcomments'?  \r\n                                                    // <FormGroup>\r\n                                                    //     <FormLabel>\r\n                                                    //         <FormattedMessage id={item.idsName} message={item.idsName} />\r\n                                                    //         {item.needHistoryButton ?\r\n                                                    //             <Nav.Link name={\"enforcestatuscomments\"}\r\n                                                    //                         className=\"btn btn-circle outline-grey mr-2 ml-1\"\r\n                                                    //                         data-tip={this.props.intl.formatMessage({ id: item.buttonTitle })}\r\n                                                    //                      //   data-for=\"tooltip_grid_wrap\"\r\n                                                    //                         onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\r\n                                                    //                         >\r\n                                                    //             <FontAwesomeIcon icon={faEye}   />\r\n                                                    //             </Nav.Link> \r\n                                                    //             // <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                    //             //         style={{ display: \"inline-block\" }} >\r\n                                                    //             //     <FontIconWrap className=\"d-font-icon p-1\" title={this.props.intl.formatMessage({ id: item.buttonTitle })}>\r\n                                                    //             //         <FontAwesomeIcon\r\n                                                    //             //             icon={faEye}\r\n                                                    //             //             onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\r\n                                                    //             //         >\r\n                                                    //             //         </FontAwesomeIcon>\r\n                                                    //             //     </FontIconWrap>\r\n                                                    //             // </Nav.Link>\r\n                                                    //             : \"\"}\r\n                                                    //     </FormLabel>\r\n                                                    //     <FormControlStatic>\r\n                                                    //         {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                    //             item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : props.dataItem[item.dataField]}\r\n                                                    //     </FormControlStatic>\r\n                                                    //     <FontIconWrap className=\"d-font-icon\" \r\n                                                    //       data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITPREFINEDCOMMENTS\" })}\r\n                                                    //       hidden={this.props.userRoleControlRights &&\r\n                                                    //          this.props.userRoleControlRights.indexOf(this.props.controlMap.has(\"EditPredefinedComments\")\r\n                                                    //          && this.props.controlMap.get(\"EditPredefinedComments\").ncontrolcode) === -1}\r\n                                                    //       onClick={() => this.props.editpredefinedcomments(props.dataItem)\r\n                                                    //        }\r\n                                                    //      >\r\n                                                    //    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                    //     </FontIconWrap>  \r\n\r\n                                                    // </FormGroup>:\r\n                                                    //    item.dataField==='spredefinedcomments'? \"\"  :\r\n                                                       <FormGroup>\r\n                                                       <FormLabel>\r\n                                                           <FormattedMessage id={item.idsName} message={item.idsName} />\r\n                                                           {item.needHistoryButton ?\r\n                                                               <Nav.Link name={\"enforcestatuscomments\"}\r\n                                                                           className=\"btn btn-circle outline-grey mr-2 ml-1\"\r\n                                                                           data-tip={this.props.intl.formatMessage({ id: item.buttonTitle })}\r\n                                                                        //   data-for=\"tooltip_grid_wrap\"\r\n                                                                           onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo \r\n                                                                            ,item.idsName,item.dataField)}\r\n                                                                           >\r\n                                                               <FontAwesomeIcon icon={faEye}   />\r\n                                                               </Nav.Link> \r\n                                                               // <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                               //         style={{ display: \"inline-block\" }} >\r\n                                                               //     <FontIconWrap className=\"d-font-icon p-1\" title={this.props.intl.formatMessage({ id: item.buttonTitle })}>\r\n                                                               //         <FontAwesomeIcon\r\n                                                               //             icon={faEye}\r\n                                                               //             onClick={() => item.onClickButton(props.dataItem, this.props.masterData, this.props.userInfo)}\r\n                                                               //         >\r\n                                                               //         </FontAwesomeIcon>\r\n                                                               //     </FontIconWrap>\r\n                                                               // </Nav.Link>\r\n                                                               : \"\"}\r\n                                                       </FormLabel>\r\n                                                       <FormControlStatic>\r\n                                                           {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                               item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : props.dataItem[item.dataField]}\r\n                                                       </FormControlStatic>  \r\n                                                   </FormGroup>}\r\n                                                </Col>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n    render() {\r\n   \r\n        //const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\r\n\r\n        const editId = this.props.controlMap.has(\"AddParameterComments\")\r\n            && this.props.controlMap.get(\"AddParameterComments\").ncontrolcode;\r\n\r\n        const enforceStatusID = this.props.controlMap.has(\"EnforceStatus\")\r\n            && this.props.controlMap.get(\"EnforceStatus\").ncontrolcode;\r\n\r\n        const checklistID = this.props.controlMap.has(\"EditChecklist\")\r\n            ? this.props.controlMap.get(\"EditChecklist\").ncontrolcode : -1;\r\n\r\n        const selectedId = this.props.selectedId;\r\n\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n\r\n        return (\r\n            <>\r\n                <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                <LocalizationProvider language={this.props.Login.userInfo.slanguagetypecode}>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_grid_wrap\" /> */}\r\n                    {/* <Tooltip openDelay={100} position=\"bottom\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                    <Grid\r\n                        style={{ height: this.props.gridHeight }}\r\n                        sortable\r\n                        resizable\r\n                        reorderable={false}\r\n                        scrollable={this.props.scrollable}\r\n                        pageable={this.props.pageable ? { buttonCount: 4, pageSizes: pageSizes, previousNext: false } : \"\"}\r\n                        groupable={this.props.groupable ? true : false}\r\n                        detail={this.detailBand}\r\n                        expandField={this.props.expandField ? this.props.expandField : false}\r\n                        onExpandChange={this.expandChange}\r\n                        data={this.props.dataResult}\r\n                        {...this.props.dataState}\r\n                        selectedField=\"selected\"\r\n                        onRowClick={this.props.handleRowClick}\r\n                        onDataStateChange={this.props.dataStateChange}>\r\n                        <GridNoRecords>\r\n                         {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                        </GridNoRecords>\r\n                        {this.props.extractedColumnList.map((item, index) =>\r\n\r\n                            <GridColumn key={index}\r\n                                // data-tip={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                {...this.columnProps(item.dataField)}\r\n                                width={item.width}\r\n                                cell={(row) => (\r\n                                    <>\r\n                                        {item.fieldType === \"attachment\" && row[\"dataItem\"]['nparametertypecode'] === parameterType.ATTACHMENT &&\r\n                                            row[\"dataItem\"]['nattachmenttypecode'] === attachmentType.FTP ?\r\n                                            row.rowType === \"groupHeader\" ? null :\r\n                                                <td data-tip={row[\"dataItem\"][item.dataField]} className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>\r\n                                                    {/* <ReactTooltip /> */}\r\n                                                    <FontAwesomeIcon icon={faCloudDownloadAlt} title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\r\n                                                        onClick={() => this.props.viewFile({ ...this.props.attachmentParam, inputData: { selectedRecord: row[\"dataItem\"], userinfo: this.props.userInfo } }, row)}\r\n                                                    />{\" \"}\r\n                                                    {row[\"dataItem\"][item.dataField]}\r\n                                                </td>\r\n\r\n                                            :\r\n                                            item.fieldType === \"attachment\" && row[\"dataItem\"]['nattachmenttypecode'] === attachmentType.LINK ?\r\n                                                row.rowType === \"groupHeader\" ? null :\r\n                                                    <td>\r\n                                                        <a href={row[\"dataItem\"][item.dataField]} style={{ cursor: \"pointer\" }} onClick={() => this.props.viewFile({ ...this.props.attachmentParam, inputData: { selectedRecord: row[\"dataItem\"], userinfo: this.props.userInfo } }, row)}>\r\n                                                            {row[\"dataItem\"][item.dataField]}\r\n                                                        </a>\r\n                                                    </td>\r\n                                                :\r\n                                                item.fieldType === \"checklistview\" ?\r\n                                                    row.rowType === \"groupHeader\" ? null :\r\n                                                        row[\"dataItem\"][item.checklistKey] > 0 ?\r\n                                                            <td data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                             //data-for=\"tooltip_grid_wrap\" \r\n                                                             className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>   \r\n                                                               \r\n                                                               <FontIconWrap className=\"d-font-icon\"  // data-for=\"tooltip-grid-wrap\" \r\n                                                                   // data-for=\"tooltip-grid-wrap\" \r\n                                                                    // onClick={() => this.props.viewFile({ ...this.props.attachmentParam, inputData: { selectedRecord: row[\"dataItem\"], userinfo: this.props.userInfo } }, row)}\r\n                                                                    needSaveButton={true}\r\n                                                                    onClick={() => this.props.checkListRecord({\r\n                                                                        ...this.props.checklistParam, selectedRecord: row[\"dataItem\"], ncontrolcode: checklistID,\r\n                                                                        needSaveButton: !(this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(checklistID) === -1)\r\n                                                                    }, row)} >\r\n                                                                <FontAwesomeIcon\r\n                                                                    icon={faListAlt}\r\n                                                                  \r\n                                                                /></FontIconWrap>{\" \"}\r\n                                                                {row[\"dataItem\"][item.dataField]}\r\n                                                            </td>\r\n                                                            :\r\n                                                            <>\r\n                                                            <td data-tip={row[\"dataItem\"][item.dataField]} \r\n                                                          //  data-for=\"tooltip_grid_wrap\" \r\n                                                            className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>\r\n                                                                {row[\"dataItem\"][item.dataField]}\r\n                                                            </td>\r\n                                                            </>\r\n                                                    :\r\n                                                    item.fieldType === \"gradeColumn\" ?\r\n                                                        row.rowType === \"groupHeader\" ? null :\r\n                                                            <td\r\n                                                                data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                               // data-for=\"tooltip_grid_wrap\"\r\n                                                                className={`${selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}`}\r\n                                                                style={{ color: [row[\"dataItem\"]['scolorhexcode']] }}\r\n                                                            >\r\n                                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_grid_wrap\" /> */}\r\n                                                                {row[\"dataItem\"][item.dataField]}\r\n                                                            </td>\r\n                                                        :\r\n                                                        <td data-tip={row[\"dataItem\"][item.dataField]} \r\n                                                        //data-for=\"tooltip_grid_wrap\" \r\n                                                        className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>\r\n                                                            {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                                : row[\"dataItem\"][item.dataField]}\r\n                                                        </td>\r\n                                        }\r\n                                    </>\r\n\r\n                                )}\r\n                            />\r\n \r\n                        )}\r\n\r\n                        {this.props.isActionRequired ?\r\n                            <GridColumn\r\n                                locked\r\n                                headerClassName=\"text-center\"\r\n                                title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                sort={false}\r\n                                cell={(row) => (\r\n                                    row.rowType === \"groupHeader\" ? null :\r\n                                        <td className={`k-grid-content-sticky k-command-cell selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n\r\n                                            <>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_tgrid_wrap\" /> */}\r\n                                                <Nav.Link >\r\n                                                   \r\n                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                // data-for=\"tooltip_grid_wrap\" \r\n                                                data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_PARAMETERCOMMENTS\" })}\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.fetchRecord({ ...this.props.editParam, primaryKeyValue: row[\"dataItem\"][this.props.editParam.primaryKeyField], selectedRecord: row[\"dataItem\"], controlcode: editId })}\r\n                                                            >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            \r\n                                                            </FontIconWrap>\r\n\r\n\r\n                                                    {/* <FontIconWrap className=\"d-font-icon\" data-for=\"tooltip_grid_wrap\" data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_PARAMETERCOMMENTS\" })}>\r\n                                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            onClick={() => this.props.fetchRecord({ ...this.props.editParam, primaryKeyValue: row[\"dataItem\"][this.props.editParam.primaryKeyField], selectedRecord: row[\"dataItem\"], controlcode: editId })}\r\n                                                        />\r\n                                                    </FontIconWrap> */}\r\n                                                    <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                    // data-for=\"tooltip_grid_wrap\" \r\n                                                    data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ENFORCESTATUS\" })}>\r\n                                                        <Image\r\n                                                            src={enforcestatus} alt=\"filer-icon\" width=\"20\" height=\"20\"\r\n                                                            className=\"ActionIconColor img-normalize\"\r\n                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(enforceStatusID) === -1}\r\n                                                            onClick={() => this.props.fetchRecord({ ...this.props.editParam, primaryKeyValue: row[\"dataItem\"][this.props.editParam.primaryKeyField], editRow: row[\"dataItem\"] })}\r\n                                                        />\r\n                                                    </FontIconWrap>\r\n                                                    <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                          data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ENFORCERESULT\" })}\r\n                                                          hidden={this.props.userRoleControlRights &&\r\n                                                              this.props.userRoleControlRights.indexOf(this.props.controlMap.has(\"EnforceResult\")\r\n                                                              && this.props.controlMap.get(\"EnforceResult\").ncontrolcode) === -1}\r\n                                                          onClick={() => this.props.enforceResult({...row[\"dataItem\"],ncontrolcode:this.props.controlMap.get(\"EnforceResult\").ncontrolcode\r\n                                                        &&this.props.controlMap.get(\"EnforceResult\").ncontrolcode})\r\n                                                           }\r\n                                                         >\r\n                                                       <FontAwesomeIcon icon={faArchive} />\r\n                                                    </FontIconWrap> \r\n                                                    {row[\"dataItem\"] && row[\"dataItem\"].nispredefinedformula===transactionStatus.YES &&\r\n                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                            data-place=\"left\" data-tip={this.props.intl.formatMessage({ id: \"IDS_EBCFORMULACALCULATION\" })}\r\n                                                            hidden={this.props.userRoleControlRights &&\r\n                                                                this.props.userRoleControlRights.indexOf(this.props.controlMap.has(\"EBCFormulaCalculation\")\r\n                                                                    && this.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode) === -1}\r\n                                                            onClick={() => this.props.formulaCalculation({\r\n                                                                ...row[\"dataItem\"], ncontrolcode: this.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode\r\n                                                                    && this.props.controlMap.get(\"EBCFormulaCalculation\").ncontrolcode\r\n                                                            })\r\n                                                            }\r\n                                                        >\r\n                                                            <EBCCalculation className=\"custom_icons\" width=\"19\" height=\"19\" />\r\n                                                        </FontIconWrap>\r\n                                                    }\r\n\r\n                                                    {/* uncomment below lines for mean calculation */}\r\n                                                    {/* {row[\"dataItem\"].nparametertypecode === 1 ?\r\n                                                        <FontIconWrap className=\"d-font-icon\" title={this.props.intl.formatMessage({ id: \"IDS_CALCULATEMEAN\" })}>\r\n                                                            <FontAwesomeIcon icon={faCalculator}\r\n                                                                title={this.props.intl.formatMessage({ id: \"IDS_CALCULATEMEAN\" })}\r\n                                                                //hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getMeanTestParameter({...this.props.meanParam, selectedRecord: row[\"dataItem\"] })} \r\n                                                            />\r\n                                                        </FontIconWrap> :\"\"} */}\r\n                                                </Nav.Link>\r\n\r\n                                            </>\r\n                                        </td>\r\n                                )}\r\n                            />\r\n\r\n                            : \"\"}\r\n\r\n                    </Grid>\r\n                    {/* </Tooltip> */}\r\n                    </LocalizationProvider >\r\n                </AtTableWrap>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, undefined)(injectIntl(ResultGrid));"]},"metadata":{},"sourceType":"module"}