{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { getMark, applyLink } from '@progress/kendo-editor-common';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\n/**\n * @hidden\n */\n\nvar InsertLinkDialog = function (_super) {\n  __extends(InsertLinkDialog, _super);\n\n  function InsertLinkDialog() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.href = null;\n    _this.title = null;\n    _this.target = null;\n\n    _this.onClose = function () {\n      _this.props.view.focus();\n\n      _this.props.onClose();\n    };\n\n    _this.onInsert = function () {\n      var view = _this.props.view;\n      var mark = _this.props.settings.mark;\n      var attrs = {\n        href: _this.href ? _this.href.value : undefined,\n        title: _this.title ? _this.title.value : undefined,\n        target: _this.target && _this.target.checked ? '_blank' : undefined\n      };\n      applyLink({\n        mark: mark,\n        attrs: attrs\n      }, _this.props.settings.commandName)(view.state, view.dispatch);\n\n      _this.onClose();\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  InsertLinkDialog.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        view = _a.view,\n        settings = _a.settings,\n        dir = _a.dir,\n        render = _a.render;\n    var localization = provideLocalizationService(this);\n    var _b = settings.messages,\n        insertHyperlinkDialogTitle = _b.insertHyperlinkDialogTitle,\n        insertHyperlinkAddress = _b.insertHyperlinkAddress,\n        insertHyperlinkTitle = _b.insertHyperlinkTitle,\n        insertHyperlinkNewWindow = _b.insertHyperlinkNewWindow,\n        insertHyperlinkCancel = _b.insertHyperlinkCancel,\n        insertHyperlinkInsert = _b.insertHyperlinkInsert;\n    var linkMark = view ? getMark(view.state, view.state.schema.marks[settings.mark]) : false;\n    var content = React.createElement(\"div\", {\n      className: \"k-edit-form-container\"\n    }, React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-link-url\"\n    }, localization.toLanguageString(insertHyperlinkAddress, messages[insertHyperlinkAddress]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-link-url\",\n      ref: function (e) {\n        return _this.href = e;\n      },\n      defaultValue: linkMark && linkMark.attrs.href || undefined,\n      autoFocus: true\n    })), React.createElement(\"div\", {\n      className: \"k-edit-label k-editor-link-text-row\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"k-editor-link-text\"\n    }, localization.toLanguageString(insertHyperlinkTitle, messages[insertHyperlinkTitle]))), React.createElement(\"div\", {\n      className: \"k-edit-field k-editor-link-text-row\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"k-textbox\",\n      id: \"k-editor-link-text\",\n      ref: function (e) {\n        return _this.title = e;\n      },\n      defaultValue: linkMark && linkMark.attrs.title || undefined\n    })), settings.linkTarget !== false && React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"k-checkbox\",\n      id: \"k-editor-link-target\",\n      ref: function (e) {\n        return _this.target = e;\n      },\n      defaultChecked: linkMark && !!linkMark.attrs.target || undefined\n    }), React.createElement(\"label\", {\n      htmlFor: \"k-editor-link-target\",\n      className: \"k-checkbox-label\"\n    }, localization.toLanguageString(insertHyperlinkNewWindow, messages[insertHyperlinkNewWindow]))));\n    var actionButtons = [React.createElement(Button, {\n      onClick: this.onClose,\n      dir: dir,\n      key: \"cancel\"\n    }, localization.toLanguageString(insertHyperlinkCancel, messages[insertHyperlinkCancel])), React.createElement(Button, {\n      onClick: this.onInsert,\n      primary: true,\n      dir: dir,\n      key: \"insert\"\n    }, localization.toLanguageString(insertHyperlinkInsert, messages[insertHyperlinkInsert]))];\n    var dialog = React.createElement(Dialog, {\n      title: localization.toLanguageString(insertHyperlinkDialogTitle, messages[insertHyperlinkDialogTitle]),\n      onClose: this.onClose,\n      closeIcon: true,\n      dir: dir,\n      style: dir === 'rtl' ? {\n        textAlign: 'right'\n      } : undefined\n    }, content, React.createElement(DialogActionsBar, null, actionButtons));\n    return render ? render(dialog, {\n      content: content,\n      actionButtons: actionButtons\n    }) : createPortal(dialog, document.body);\n  };\n\n  return InsertLinkDialog;\n}(React.Component);\n\nexport { InsertLinkDialog };\nregisterForLocalization(InsertLinkDialog);","map":{"version":3,"sources":["../../../src/dialogs/insertLink.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { getMark, applyLink } from '@progress/kendo-editor-common';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\n/**\n * @hidden\n */\nvar InsertLinkDialog = /** @class */ (function (_super) {\n    __extends(InsertLinkDialog, _super);\n    function InsertLinkDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.href = null;\n        _this.title = null;\n        _this.target = null;\n        _this.onClose = function () {\n            _this.props.view.focus();\n            _this.props.onClose();\n        };\n        _this.onInsert = function () {\n            var view = _this.props.view;\n            var mark = _this.props.settings.mark;\n            var attrs = {\n                href: _this.href ? _this.href.value : undefined,\n                title: _this.title ? _this.title.value : undefined,\n                target: _this.target && _this.target.checked ? '_blank' : undefined\n            };\n            applyLink({ mark: mark, attrs: attrs }, _this.props.settings.commandName)(view.state, view.dispatch);\n            _this.onClose();\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    InsertLinkDialog.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, view = _a.view, settings = _a.settings, dir = _a.dir, render = _a.render;\n        var localization = provideLocalizationService(this);\n        var _b = settings.messages, insertHyperlinkDialogTitle = _b.insertHyperlinkDialogTitle, insertHyperlinkAddress = _b.insertHyperlinkAddress, insertHyperlinkTitle = _b.insertHyperlinkTitle, insertHyperlinkNewWindow = _b.insertHyperlinkNewWindow, insertHyperlinkCancel = _b.insertHyperlinkCancel, insertHyperlinkInsert = _b.insertHyperlinkInsert;\n        var linkMark = view ?\n            getMark(view.state, view.state.schema.marks[settings.mark])\n            : false;\n        var content = (React.createElement(\"div\", { className: \"k-edit-form-container\" },\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-link-url\" }, localization.toLanguageString(insertHyperlinkAddress, messages[insertHyperlinkAddress]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-link-url\", ref: function (e) { return _this.href = e; }, defaultValue: (linkMark && linkMark.attrs.href) || undefined, autoFocus: true })),\n            React.createElement(\"div\", { className: \"k-edit-label k-editor-link-text-row\" },\n                React.createElement(\"label\", { htmlFor: \"k-editor-link-text\" }, localization.toLanguageString(insertHyperlinkTitle, messages[insertHyperlinkTitle]))),\n            React.createElement(\"div\", { className: \"k-edit-field k-editor-link-text-row\" },\n                React.createElement(\"input\", { type: \"text\", className: \"k-textbox\", id: \"k-editor-link-text\", ref: function (e) { return _this.title = e; }, defaultValue: (linkMark && linkMark.attrs.title) || undefined })),\n            settings.linkTarget !== false && React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { type: \"checkbox\", className: \"k-checkbox\", id: \"k-editor-link-target\", ref: function (e) { return _this.target = e; }, defaultChecked: (linkMark && !!linkMark.attrs.target) || undefined }),\n                React.createElement(\"label\", { htmlFor: \"k-editor-link-target\", className: \"k-checkbox-label\" }, localization.toLanguageString(insertHyperlinkNewWindow, messages[insertHyperlinkNewWindow])))));\n        var actionButtons = [(React.createElement(Button, { onClick: this.onClose, dir: dir, key: \"cancel\" }, localization.toLanguageString(insertHyperlinkCancel, messages[insertHyperlinkCancel]))), (React.createElement(Button, { onClick: this.onInsert, primary: true, dir: dir, key: \"insert\" }, localization.toLanguageString(insertHyperlinkInsert, messages[insertHyperlinkInsert])))\n        ];\n        var dialog = (React.createElement(Dialog, { title: localization.toLanguageString(insertHyperlinkDialogTitle, messages[insertHyperlinkDialogTitle]), onClose: this.onClose, closeIcon: true, dir: dir, style: dir === 'rtl' ? { textAlign: 'right' } : undefined },\n            content,\n            React.createElement(DialogActionsBar, null, actionButtons)));\n        return render ? render(dialog, { content: content, actionButtons: actionButtons }) :\n            createPortal(dialog, document.body);\n    };\n    return InsertLinkDialog;\n}(React.Component));\nexport { InsertLinkDialog };\nregisterForLocalization(InsertLinkDialog);\n//# sourceMappingURL=insertLink.js.map"]},"metadata":{},"sourceType":"module"}