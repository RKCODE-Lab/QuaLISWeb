{"ast":null,"code":"import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,ListGroup,Media}from'react-bootstrap';import{HeaderText,ContactHeader}from'../testmanagement/testmaster-styled';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus,faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{ProductList}from'../product/product.styled';import{ClientList}from'../../components/App.styles';import ConfirmDialog from'../../components/confirm-alert/confirm-alert.component';import{SampleType,transactionStatus}from'../../components/Enumeration';//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\n// import ReactTooltip from 'react-tooltip';\nvar NumericParameterTab=function NumericParameterTab(props){var predefinedParameterList=props.predefinedParameterList,selectedParameter=props.selectedParameter,userInfo=props.userInfo,addId=props.addId,editId=props.editId,deleteId=props.deleteId,userRoleControlRights=props.userRoleControlRights,optionalData=props.optionalData,methodUrl=props.methodUrl,primaryKeyName=props.primaryKeyName,selectedSpecification=props.selectedSpecification;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(HeaderText,null,props.intl.formatMessage({id:\"IDS_CLINICALSPEC\"})),/*#__PURE__*/React.createElement(Nav.Item,{className:\"add-txt-btn\",name:\"addclinicalspec\"// hidden={userRoleControlRights.indexOf(addId) === -1}\n,hidden:props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE,onClick:function onClick(){return props.openModal(\"create\",selectedParameter,userInfo,addId,optionalData,props.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADD\",defaultMessage:\"Add\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},predefinedParameterList&&predefinedParameterList.map(function(predefitem,predefindex){return/*#__PURE__*/React.createElement(ListGroup.Item,{key:predefindex,as:\"li\"},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(Media.Body,null,/*#__PURE__*/React.createElement(ContactHeader,{className:\"mt-0\"},predefitem.sgendername),/*#__PURE__*/React.createElement(ProductList,null,predefitem.nfromage),/*#__PURE__*/React.createElement(ProductList,null,predefitem.ntoage),/*#__PURE__*/React.createElement(ProductList,null,predefitem.shigha),/*#__PURE__*/React.createElement(ProductList,null,predefitem.shighb),/*#__PURE__*/React.createElement(ProductList,null,predefitem.slowa),/*#__PURE__*/React.createElement(ProductList,null,predefitem.slowb),/*#__PURE__*/React.createElement(ProductList,null,predefitem.sresultvalue)),/*#__PURE__*/React.createElement(ClientList,{className:\"ml-5\"},/*#__PURE__*/React.createElement(Nav.Item,{as:\"a\",className:\"mr-3\",name:\"editclinicalspec\"//hidden={userRoleControlRights.indexOf(editId) === -1}\n,hidden:props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE,\"data-tip\":props.intl.formatMessage({id:\"IDS_EDIT\"})//  data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return props.openModal(\"update\",predefitem,userInfo,editId,optionalData,props.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Nav.Item,{as:\"a\",className:\"mr-3 action-icons-wrap\",name:\"deleteclinicalspec\"},/*#__PURE__*/React.createElement(ConfirmDialog,{name:\"deleteMessage\",message:props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),doLabel:props.intl.formatMessage({id:\"IDS_OK\"}),doNotLabel:props.intl.formatMessage({id:\"IDS_CANCEL\"}),icon:faTrashAlt,dataforprops:\"tooltip_list_wrap\",title:props.intl.formatMessage({id:\"IDS_DELETE\"})//hidden={userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1}\n,hidden:props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE,handleClickDelete:function handleClickDelete(){return props.deleteAction(predefitem,\"delete\",deleteId,methodUrl,\"openChildModal\");}})))));}))))));};export default injectIntl(NumericParameterTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/testgroup/NumericParameterTab.jsx"],"names":["React","injectIntl","FormattedMessage","Row","Col","Card","Nav","ListGroup","Media","HeaderText","ContactHeader","FontAwesomeIcon","faPlus","faPencilAlt","faTrashAlt","ProductList","ClientList","ConfirmDialog","SampleType","transactionStatus","NumericParameterTab","props","predefinedParameterList","selectedParameter","userInfo","addId","editId","deleteId","userRoleControlRights","optionalData","methodUrl","primaryKeyName","selectedSpecification","intl","formatMessage","id","masterData","selectedNode","nsampletypecode","CLINICALTYPE","openModal","map","predefitem","predefindex","sgendername","nfromage","ntoage","shigha","shighb","slowa","slowb","sresultvalue","deleteAction"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, ListGroup, Media } from 'react-bootstrap';\r\n import { HeaderText, ContactHeader } from '../testmanagement/testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { ClientList } from '../../components/App.styles';\r\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { SampleType, transactionStatus } from '../../components/Enumeration';\r\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst NumericParameterTab = (props) => {\r\n    const { predefinedParameterList, selectedParameter, userInfo, addId, editId, deleteId,\r\n        userRoleControlRights, optionalData, methodUrl, primaryKeyName,selectedSpecification } = props;\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        <HeaderText>{props.intl.formatMessage({ id: \"IDS_CLINICALSPEC\" })}</HeaderText>\r\n                        <Nav.Item className=\"add-txt-btn\" name=\"addclinicalspec\"\r\n                            // hidden={userRoleControlRights.indexOf(addId) === -1}\r\n                            hidden={props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE}\r\n                            onClick={() => props.openModal(\"create\", selectedParameter, userInfo, addId, optionalData,props.masterData)}>\r\n                            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>{\" \"}\r\n                            <FormattedMessage id=\"IDS_ADD\" defaultMessage=\"Add\" />\r\n                        </Nav.Item>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-0\">\r\n                        <ListGroup as=\"ul\">\r\n                            {predefinedParameterList &&\r\n                                predefinedParameterList.map((predefitem, predefindex) => {\r\n                                    return (\r\n                                        <ListGroup.Item key={predefindex} as=\"li\">\r\n                                            <Media>\r\n                                                <Media.Body>\r\n                                                    <ContactHeader className=\"mt-0\">{predefitem.sgendername}</ContactHeader>\r\n                                                    {/* <Row>\r\n                                                    <Col md={6}> */}\r\n                                                    <ProductList>{predefitem.nfromage}</ProductList>\r\n                                                    <ProductList>{predefitem.ntoage}</ProductList>\r\n                                                    {/* </Col>\r\n                                                    </Row> */}\r\n                                                    <ProductList>{predefitem.shigha}</ProductList>\r\n                                                    <ProductList>{predefitem.shighb}</ProductList>\r\n                                                    <ProductList>{predefitem.slowa}</ProductList>\r\n                                                    <ProductList>{predefitem.slowb}</ProductList>\r\n                                                    <ProductList>{predefitem.sresultvalue}</ProductList>\r\n\r\n                                                </Media.Body>\r\n                                                {/* <ClientList className=\"mr-1\">\r\n                                                    <FormLabel>{props.intl.formatMessage({ id: \"IDS_SETASDEFAULT\" })}</FormLabel>\r\n                                                    <CustomSwitch\r\n                                                        name={`predefinedswitch_${predefitem[primaryKeyName]}`}\r\n                                                        checked={predefitem[\"ndefaultstatus\"] === 4 ? false : true}\r\n                                                        onChange={(event) => props.onSwitchChange(predefitem, methodUrl.toLowerCase(), methodUrl,event)}\r\n                                                    />\r\n                                                </ClientList> */}\r\n                                                <ClientList className=\"ml-5\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                    <Nav.Item as=\"a\" className=\"mr-3\" name=\"editclinicalspec\"\r\n                                                        //hidden={userRoleControlRights.indexOf(editId) === -1}\r\n                                                        hidden={props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE}\r\n                                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                      //  data-for=\"tooltip_list_wrap\"\r\n                                                        onClick={() => props.openModal(\"update\", predefitem, userInfo, editId, optionalData,props.masterData)}>\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\"></FontAwesomeIcon>\r\n                                                    </Nav.Item>\r\n\r\n                                                    <Nav.Item as=\"a\" className=\"mr-3 action-icons-wrap\" name=\"deleteclinicalspec\">\r\n                                                        <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            dataforprops=\"tooltip_list_wrap\"\r\n                                                            title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            //hidden={userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            hidden={props.masterData.selectedNode.nsampletypecode !== SampleType.CLINICALTYPE}\r\n                                                            handleClickDelete={() => props.deleteAction(predefitem, \"delete\", deleteId, methodUrl, \"openChildModal\")}\r\n                                                        />\r\n                                                    </Nav.Item>\r\n                                                </ClientList>\r\n                                            </Media>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(NumericParameterTab);"]},"metadata":{},"sourceType":"module"}