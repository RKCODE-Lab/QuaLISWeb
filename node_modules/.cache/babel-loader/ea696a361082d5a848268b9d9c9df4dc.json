{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{intl}from'../../components/App';import{MediaHeader,MediaLabel,MediaSubHeader}from'../../components/App.styles';import FormMultiSelectComponent from'../../components/form-multi-select/form-multi-select.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var ResultEntryEnforceResult=function ResultEntryEnforceResult(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"senforceresult\",label:props.intl.formatMessage({id:\"IDS_RESULTS\"}),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord?props.selectedRecord[\"senforceresult\"]:\"\",rows:\"2\",isMandatory:true,required:false,maxLength:255,onChange:function onChange(event){return props.onInputChange(event,\"senforceresult\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"senforceresultcomment\",label:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),placeholder:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:props.selectedRecord?props.selectedRecord[\"senforceresultcomment\"]:\"\",rows:\"2\",isMandatory:true,required:false,maxLength:255,onChange:function onChange(event){return props.onInputChange(event,\"senforceresultcomment\");}}))));};export default injectIntl(ResultEntryEnforceResult);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryEnforceResult.jsx"],"names":["React","Row","Col","injectIntl","FormTextarea","intl","MediaHeader","MediaLabel","MediaSubHeader","FormMultiSelectComponent","FormSelectSearch","ResultEntryEnforceResult","props","formatMessage","id","selectedRecord","event","onInputChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,IAAT,KAAqB,sBAArB,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,cAAlC,KAAwD,6BAAxD,CACA,MAAOC,CAAAA,wBAAP,KAAqC,gEAArC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,KAAD,CAAW,CACxC,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAC,gBADT,CAEI,KAAK,CAAEA,KAAK,CAACP,IAAN,CAAWQ,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CAFX,CAGI,WAAW,CAAEF,KAAK,CAACP,IAAN,CAAWQ,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CAHjB,CAII,KAAK,CAAEF,KAAK,CAACG,cAAN,CAAuBH,KAAK,CAACG,cAAN,CAAqB,gBAArB,CAAvB,CAAgE,EAJ3E,CAKI,IAAI,CAAC,GALT,CAMI,WAAW,CAAE,IANjB,CAOI,QAAQ,CAAE,KAPd,CAQI,SAAS,CAAE,GARf,CASI,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,aAAN,CAAoBD,KAApB,CAA2B,gBAA3B,CAAX,EATd,EADJ,CADJ,cAcI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAC,uBADT,CAEI,KAAK,CAAEJ,KAAK,CAACP,IAAN,CAAWQ,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CAFX,CAGI,WAAW,CAAEF,KAAK,CAACP,IAAN,CAAWQ,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CAHjB,CAII,KAAK,CAAEF,KAAK,CAACG,cAAN,CAAuBH,KAAK,CAACG,cAAN,CAAqB,uBAArB,CAAvB,CAAuE,EAJlF,CAKI,IAAI,CAAC,GALT,CAMI,WAAW,CAAE,IANjB,CAOI,QAAQ,CAAE,KAPd,CAQI,SAAS,CAAE,GARf,CASI,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,aAAN,CAAoBD,KAApB,CAA2B,uBAA3B,CAAX,EATd,EADJ,CAdJ,CADJ,CADJ,CA+CH,CAhDD,CAiDA,cAAeb,CAAAA,UAAU,CAACQ,wBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { intl } from '../../components/App';\r\nimport { MediaHeader, MediaLabel, MediaSubHeader } from '../../components/App.styles';\r\nimport FormMultiSelectComponent from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst ResultEntryEnforceResult = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        name=\"senforceresult\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"senforceresult\"] : \"\"}\r\n                        rows=\"2\"\r\n                        isMandatory={true}\r\n                        required={false}\r\n                        maxLength={255}\r\n                        onChange={(event) => props.onInputChange(event, \"senforceresult\")}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        name=\"senforceresultcomment\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"senforceresultcomment\"] : \"\"}\r\n                        rows=\"2\"\r\n                        isMandatory={true}\r\n                        required={false}\r\n                        maxLength={255}\r\n                        onChange={(event) => props.onInputChange(event, \"senforceresultcomment\")}\r\n                    />\r\n                </Col>\r\n                {/* <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_PASSFLAG\" })}\r\n                        isSearchable={true}\r\n                        name={\"ngradecode\"}\r\n                        showOption={true}\r\n                        options={props.GradeList || []}\r\n                        optionId='ngradecode'\r\n                        optionValue='sgradename'\r\n                        value={props.selectedRecord[\"ngradecode\"] && props.selectedRecord[\"ngradecode\"] || \"\"}\r\n                        onChange={(event) => props.onComboChange(event, \"ngradecode\")}\r\n                        isMandatory={true}\r\n                        isDisabled={false}\r\n                    ></FormSelectSearch>\r\n                </Col> */}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ResultEntryEnforceResult);\r\n"]},"metadata":{},"sourceType":"module"}