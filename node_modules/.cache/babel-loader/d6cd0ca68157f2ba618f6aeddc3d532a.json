{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\UserMultiRoleTab.js\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DataGrid from '../../components/data-grid/data-grid.component';\n\nconst UserMultiRoleTab = props => {\n  const addUserMultiRoleId = props.controlMap.has(\"AddRole\") && props.controlMap.get(\"AddRole\").ncontrolcode;\n  const editUserMultiRoleId = props.controlMap.has(\"EditRole\") && props.controlMap.get(\"EditRole\").ncontrolcode;\n  const resetPasswordId = props.controlMap.has(\"ResetPassword\") && props.controlMap.get(\"ResetPassword\").ncontrolcode;\n  const roleAddParam = {\n    screenName: \"IDS_ROLE\",\n    operation: \"create\",\n    primaryKeyField: \"nusermultirolecode\",\n    primaryKeyValue: -2,\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    ncontrolCode: addUserMultiRoleId\n  };\n  const roleEditParam = {\n    screenName: \"IDS_ROLE\",\n    operation: \"update\",\n    primaryKeyField: \"nusermultirolecode\",\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    ncontrolCode: editUserMultiRoleId\n  };\n  const roleDeleteParam = {\n    screenName: \"IDS_ROLE\",\n    methodUrl: \"UserMultiRole\",\n    operation: \"delete\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"resetrole\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(resetPasswordId) === -1,\n    onClick: () => props.resetPassword(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_RESETPASSWORD\",\n    defaultMessage: \"Reset Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"addrole\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(addUserMultiRoleId) === -1,\n    onClick: () => props.getUserMultiRoleComboDataService(roleAddParam),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ROLE\",\n    defaultMessage: \"Role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })))), props.userSite.nusersitecode === props.masterData.UsersSite.nusersitecode ? /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    primaryKeyField: \"nusermultirolecode\",\n    data: props.masterData[\"UserMultiRole\"],\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: props.multiRoleColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    inputParam: props.inputParam,\n    userInfo: props.userInfo,\n    methodUrl: \"Role\",\n    fetchRecord: props.getUserMultiRoleComboDataService,\n    editParam: roleEditParam,\n    deleteRecord: props.deleteRecord,\n    deleteParam: roleDeleteParam,\n    pageable: false,\n    scrollable: \"scrollable\",\n    isActionRequired: true,\n    isToolBarRequired: false,\n    selectedId: props.selectedId,\n    hideColumnFilter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }))) : \"\");\n};\n\nexport default injectIntl(UserMultiRoleTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/credentialmanagement/UserMultiRoleTab.js"],"names":["React","FormattedMessage","injectIntl","Row","Col","Nav","FontAwesomeIcon","faPlus","DataGrid","UserMultiRoleTab","props","addUserMultiRoleId","controlMap","has","get","ncontrolcode","editUserMultiRoleId","resetPasswordId","roleAddParam","screenName","operation","primaryKeyField","primaryKeyValue","masterData","userInfo","ncontrolCode","roleEditParam","roleDeleteParam","methodUrl","userRoleControlRights","indexOf","resetPassword","getUserMultiRoleComboDataService","userSite","nusersitecode","UsersSite","dataResult","dataState","dataStateChange","multiRoleColumnList","inputParam","deleteRecord","selectedId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport {Row, Col, Nav} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nconst UserMultiRoleTab = (props) => {    \r\n    \r\n    const addUserMultiRoleId = props.controlMap.has(\"AddRole\") && props.controlMap.get(\"AddRole\").ncontrolcode\r\n    const editUserMultiRoleId = props.controlMap.has(\"EditRole\") && props.controlMap.get(\"EditRole\").ncontrolcode;\r\n       \r\n    const resetPasswordId = props.controlMap.has(\"ResetPassword\") && props.controlMap.get(\"ResetPassword\").ncontrolcode\r\n    \r\n    const roleAddParam = {screenName:\"IDS_ROLE\", operation:\"create\", primaryKeyField:\"nusermultirolecode\", \r\n                          primaryKeyValue:-2, masterData:props.masterData, userInfo:props.userInfo,\r\n                          ncontrolCode:addUserMultiRoleId};\r\n                          \r\n    const roleEditParam = {screenName:\"IDS_ROLE\", operation:\"update\",  primaryKeyField:\"nusermultirolecode\", \r\n                          masterData:props.masterData,   userInfo:props.userInfo,  ncontrolCode:editUserMultiRoleId};\r\n       \r\n    const roleDeleteParam ={screenName:\"IDS_ROLE\", methodUrl:\"UserMultiRole\", operation:\"delete\"};\r\n\r\n    return(<>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"resetrole\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(resetPasswordId) === -1}\r\n                                onClick={()=>props.resetPassword()}>\r\n                        <FormattedMessage id=\"IDS_RESETPASSWORD\" defaultMessage='Reset Password' />\r\n                    </Nav.Link>\r\n                    <Nav.Link name=\"addrole\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addUserMultiRoleId) === -1}\r\n                                onClick={()=>props.getUserMultiRoleComboDataService(roleAddParam)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id='IDS_ROLE' defaultMessage='Role' />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n\r\n            {props.userSite.nusersitecode === props.masterData.UsersSite.nusersitecode ?  \r\n                <Row noGutters={true}>\r\n                    <Col md={12}>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nusermultirolecode\"}\r\n                            data={props.masterData[\"UserMultiRole\"]}\r\n                            dataResult={props.dataResult}\r\n                            dataState={props.dataState}\r\n                            dataStateChange={props.dataStateChange}\r\n                            extractedColumnList={props.multiRoleColumnList}\r\n                            controlMap={props.controlMap}\r\n                            userRoleControlRights={props.userRoleControlRights}\r\n                            inputParam={props.inputParam}\r\n                            userInfo={props.userInfo}\r\n                            methodUrl=\"Role\"\r\n                            fetchRecord={props.getUserMultiRoleComboDataService}\r\n                            editParam={roleEditParam}\r\n                            deleteRecord={props.deleteRecord} \r\n                            deleteParam={roleDeleteParam}                                                                                          \r\n                            pageable={false}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={false}\r\n                            selectedId={props.selectedId}\r\n                            hideColumnFilter={true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            :\"\"}\r\n        </>\r\n    )   \r\n}\r\n                \r\nexport default injectIntl(UserMultiRoleTab);"]},"metadata":{},"sourceType":"module"}