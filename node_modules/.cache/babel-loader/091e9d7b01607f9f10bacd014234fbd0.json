{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\data-grid\\\\SimpleGrid.jsx\";\nimport React from 'react';\nimport { AtTableWrap } from '../client-group.styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Grid, GridColumn, GridNoRecords } from '@progress/kendo-react-grid';\nimport { process } from '@progress/kendo-data-query';\nimport ReactTooltip from 'react-tooltip';\n\nclass SimpleGrid extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(AtTableWrap, {\n      className: \"at-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip-samplegrid-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      sortable: true,\n      resizable: true,\n      reorderable: true,\n      data: process(this.props.childList, {\n        skip: 0,\n        take: this.props.childList.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GridNoRecords, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 27\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    })), this.props.extractedColumnList.map((item, index) => /*#__PURE__*/React.createElement(GridColumn, {\n      key: index,\n      title: this.props.intl.formatMessage({\n        id: item.idsName\n      }),\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        \"data-for\": \"tooltip-samplegrid-wrap\",\n        \"data-tip\": row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }\n      }, item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: row[\"dataItem\"][item.dataField],\n        defaultMessage: row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 56\n        }\n      }) : row[\"dataItem\"][item.dataField]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(SimpleGrid);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/SimpleGrid.jsx"],"names":["React","AtTableWrap","FormattedMessage","injectIntl","Grid","GridColumn","GridNoRecords","process","ReactTooltip","SimpleGrid","Component","render","props","childList","skip","take","length","intl","formatMessage","id","extractedColumnList","map","item","index","idsName","row","dataField","isIdsField"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,QAAgD,4BAAhD;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAErCC,EAAAA,MAAM,GAAG;AACL,wBAEI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,cAAc,EAAC,OAA5C;AAAoD,MAAA,EAAE,EAAC,yBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,IAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,WAAW,MAHf;AAII,MAAA,IAAI,EAAEJ,OAAO,CAAC,KAAKK,KAAL,CAAWC,SAAZ,EAAuB;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqBG;AAAtC,OAAvB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKU,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAA9B,CADA,CALV,EAQS,KAAKP,KAAL,CAAWQ,mBAAX,CAA+BC,GAA/B,CAAmC,CAACC,IAAD,EAAOC,KAAP,kBACpC,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAjB;AACI,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWK,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAEG,IAAI,CAACE;AAAX,OAA9B,CADX;AAEI,MAAA,IAAI,EAAGC,GAAD,iBACF;AAAI,oBAAS,yBAAb;AACI,oBAAUA,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKJ,IAAI,CAACK,UAAL,gBAAkB,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAEF,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAAtB;AAAuD,QAAA,cAAc,EAAED,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GACKD,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAJV,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CART,CAHJ,CAFJ;AA6BH;;AAhCoC;;AAkCzC,eAAevB,UAAU,CAACM,UAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { AtTableWrap } from '../client-group.styles';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Grid, GridColumn, GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nclass SimpleGrid extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <AtTableWrap className=\"at-list-table\">\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-samplegrid-wrap\" />\r\n                {/* <Tooltip openDelay={100} position=\"auto\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                <Grid\r\n                    sortable\r\n                    resizable={true}\r\n                    reorderable\r\n                    data={process(this.props.childList, { skip: 0, take: this.props.childList.length })}>\r\n                          <GridNoRecords>\r\n                         {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                        </GridNoRecords>\r\n                        {this.props.extractedColumnList.map((item, index) =>\r\n                        <GridColumn key={index}\r\n                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                            cell={(row) => (\r\n                                <td data-for=\"tooltip-samplegrid-wrap\"\r\n                                    data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                    {/* title={row[\"dataItem\"][item.dataField]}> */}\r\n                                    {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                        : row[\"dataItem\"][item.dataField]}\r\n                                </td>)}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                {/* </Tooltip>           */}\r\n            </AtTableWrap>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(SimpleGrid);"]},"metadata":{},"sourceType":"module"}