{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";/* eslint-disable no-undef */import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import FormInput from'../form-input/form-input.component';import CustomButtom from'../custom-button/custom-button.component';import{changeLanguage,getLoginDetails,getUserSiteAndRole,updateStore,createPassword,validateADSPassword,changepassword,getUsersiteRole,checkPassword}from'../../actions';import CreatePassword from'../../pages/Login/CreatePassWord';import CreateADSPassword from'../../pages/Login/CreateADSPassWord';import{clickOnLoginButton}from'../../actions';import{toast}from'react-toastify';import FormSelectSearch from'../form-select-search/form-select-search.component';import{validateLoginId}from'../CommonScript';import SlideOutModal from'../slide-out-modal/SlideOutModal';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import ChangePassword from'../../pages/Login/ChangePassWord';import{changePasswordValidation,fnPassMessage,fnValidatePassword}from'../../pages/Login/LoginCommonFunction';import{LOGINTYPE,transactionStatus}from'../Enumeration';import{Form}from'react-bootstrap';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SignIn=/*#__PURE__*/function(_React$Component){_inherits(SignIn,_React$Component);var _super=_createSuper(SignIn);function SignIn(props){var _this;_classCallCheck(this,SignIn);_this=_super.call(this,props);_this.closeModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openCPModal:false}};_this.props.updateStore(updateInfo);};_this.closeADSModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openADSModal:false}};_this.props.updateStore(updateInfo);};_this.onCreatePassWord=function(){var selectedRecord=_this.state.selectedRecord;var createPwdRecord=_this.state.createPwdRecord;var snewpassword=createPwdRecord.snewpassword.trim();var sconfirmpassword=createPwdRecord.sconfirmpassword.trim();if(selectedRecord.sloginid===snewpassword){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PASSWORDSHOULDNOTSAMEASLOGINID\"}));}else if(sconfirmpassword!==snewpassword){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PASSWORDNOTMATCHED\"}));}else{// Added by Ragul.C for Double alert shows for Invaliduser\n//selectedRecord[\"nusermultirolecode\"]=this.props.Login.nusermultirolecode;\nselectedRecord[\"nusermultirolecode\"]=_this.state.selectedRecord.nusermultirolecode!==undefined&&_this.state.selectedRecord.nusermultirolecode!==\"\"?_this.state.selectedRecord.nusermultirolecode:_this.props.Login.nusermultirolecode;selectedRecord[\"nusersitecode\"]=_this.state.selectedRecord.nusersitecode!==undefined&&_this.state.selectedRecord.nusersitecode!==\"\"?_this.state.selectedRecord.nusersitecode:_this.props.Login.nusersitecode;// selectedRecord[\"nusersitecode\"]=this.props.Login.nusersitecode;\nselectedRecord[\"nusercode\"]=_this.props.Login.nusercode;selectedRecord[\"nlogintypecode\"]=_this.props.Login.nlogintypecode;selectedRecord[\"nlanguagecode\"]=_this.props.Login.nlanguagecode;_this.setState({selectedRecord:selectedRecord});// \nvar returnString=fnValidatePassword(_this.props.Login.passwordPolicy,snewpassword);if(returnString===0){var inputParam={spassword:snewpassword,nusersitecode:selectedRecord.nusersitecode.value,nusermultirolecode:selectedRecord.nusermultirolecode.value};_this.props.createPassword(inputParam);}else{toast.info(returnString);}}};_this.onCreateADSPassWord=function(){var selectedRecord=_objectSpread({},_this.state.selectedRecord);var createPwdRecord=_this.state.createPwdRecord;var sadspassword=createPwdRecord.sadspassword&&createPwdRecord.sadspassword.trim();var inputParam={spassword:sadspassword,sloginid:selectedRecord.sloginid,slanguagefilename:_this.props.Login.nlanguagecode&&_this.props.Login.nlanguagecode.item&&_this.props.Login.nlanguagecode.item.sfilename,selectedRecord:selectedRecord,nlogintypecode:_this.props.Login.userInfo&&_this.props.Login.userInfo.nlogintypecode||LOGINTYPE.ADS};_this.props.validateADSPassword(inputParam);};_this.onChangePassword=function(){var selectedRecord=_this.state.selectedRecord;var createPwdRecord=_this.state.createPwdRecord;var returnMsg=changePasswordValidation(createPwdRecord,_this.props.Login.passwordPolicy,_this.state.selectedRecord.sloginid);if(returnMsg===0){var inputParam={spassword:createPwdRecord.snewpassword.trim(),sOldPassword:createPwdRecord.soldpassword.trim(),nusersitecode:selectedRecord.nusersitecode.value,isPasswordExpiry:true,userInfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{slanguagefilename:selectedRecord.nlanguagecode.item.sfilename,sloginid:selectedRecord.sloginid,suserrolename:selectedRecord.nusermultirolecode.label}),slanguagetypecode:selectedRecord.nlanguagecode.item.slanguagetypecode};_this.props.changepassword(inputParam);}else{toast.info(returnMsg);}};_this.onSelectChange=function(ComboVal,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=ComboVal;if(fieldName===\"nlogintypecode\"&&ComboVal.value===LOGINTYPE.INTERNAL&&selectedRecord.sloginid&&selectedRecord.sloginid!==\"\"&&selectedRecord.nusermultirolecode&&selectedRecord.nusermultirolecode!==\"\"&&selectedRecord.nusersitecode&&selectedRecord.nusersitecode!==\"\"){var inputParam={sloginid:_this.state.selectedRecord.sloginid,Language:selectedRecord.nlanguagecode.item,nusermultisitecode:selectedRecord.nusersitecode.value,nusermultirolecode:selectedRecord.nusermultirolecode.value,nuserrolecode:selectedRecord.nusermultirolecode.item.nuserrolecode,nlogintypecode:ComboVal.value};_this.props.checkPassword(inputParam,selectedRecord);}else{_this.setState({selectedRecord:selectedRecord});}};_this.onChangeLanguage=function(ComboVal,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=ComboVal;_this.props.changeLanguage(ComboVal.item.slanguagetypecode,selectedRecord,_this.props.Login.loginTypes);};_this.onLoginEvent=function(event){if(event.keyCode===13){var inputValue=event.target.value;_this.setState({show:_this.props.Login.open});if(inputValue!==\"\"){_this.onLoginSubmit(inputValue);}}};_this.AutoLogin=function(event){if(event.keyCode===118){var nlogintypecode=1;var inputParam={nusermultisitecode:parseInt(-1),nusermultirolecode:parseInt(-1),slanguagetypecode:\"en-US\",spassword:\"123\",nusercode:-1,nlogintypecode:1,nuserrolecode:-1,url:nlogintypecode===1?\"/login/internallogin\":\"/login/adslogin\",navigation:\"home\",languageList:_this.props.Login.languageList};_this.setState({nusermultisitecode:parseInt(-1),nusermultirolecode:parseInt(-1),slanguagetypecode:1,spassword:\"123\",nusercode:-1,nlogintypecode:1,nuserrolecode:-1});_this.props.clickOnLoginButton(inputParam,_this.props.Login.languageList);}};_this.state={PasswordPolicy:{},selectedRecord:{}};_this.loginRef=React.createRef();return _this;}_createClass(SignIn,[{key:\"render\",value:function render(){var _this2=this;var _this$props$Login=this.props.Login,loginTypeList=_this$props$Login.loginTypeList,languageList=_this$props$Login.languageList,loginUserSite=_this$props$Login.loginUserSite,_this$props$Login$cou=_this$props$Login.count,count=_this$props$Login$cou===void 0?0:_this$props$Login$cou,loginUserRole=_this$props$Login.loginUserRole;return/*#__PURE__*/React.createElement(Form,{ref:this.loginRef},/*#__PURE__*/React.createElement(FormInput,{name:\"sloginid\",label:this.props.intl.formatMessage({id:\"IDS_LOGINID\"}),type:\"text\"// placeholder={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\n,required:true,isMandatory:\"*\",onChange:function onChange(event){return _this2.onLoginInputChange(event);},onBlur:function onBlur(event){return _this2.onFocusOutEvent(event);}//ALPD-1926\n// onKeyUp={this.AutoLogin} \n,value:this.state.selectedRecord.sloginid}),/*#__PURE__*/React.createElement(FormInput,{name:\"spassword\",label:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),type:\"password\",required:true,isMandatory:\"*\"// placeholder={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\n,onChange:function onChange(event){return _this2.selectInputOnChange(event);},onKeyUp:this.onLoginEvent,value:this.state.selectedRecord.spassword}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nusersitecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SITE\"}),isSearchable:false,isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:loginUserSite||[],optionId:\"nusersitecode\",optionValue:\"ssitename\",value:this.state.selectedRecord.nusersitecode?this.state.selectedRecord.nusersitecode:\"\",onChange:function onChange(value){return _this2.onUsersiteChange(value,\"nusersitecode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nusermultirolecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_USERROLE\"}),isSearchable:false,isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:loginUserRole||[],optionId:\"nusermultirolecode\",optionValue:\"suserrolename\",value:this.state.selectedRecord.nusermultirolecode?this.state.selectedRecord.nusermultirolecode:\"\",onChange:function onChange(value){return _this2.onSelectChange(value,\"nusermultirolecode\");}}),loginTypeList!==undefined&&loginTypeList.length>1?/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nlogintypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_LOGINTYPE\"}),isSearchable:false,isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:loginTypeList||[],optionId:\"nlogintypecode\",optionValue:\"sdisplayname\",value:this.state.selectedRecord.nlogintypecode?this.state.selectedRecord.nlogintypecode:\"\",onChange:function onChange(value){return _this2.onSelectChange(value,\"nlogintypecode\");}}):\"\",languageList!==undefined&&languageList.length>1?/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nlanguagecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_LANGUAGE\"}),isSearchable:false,isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:languageList||[],optionId:\"nlanguagecode\",optionValue:\"slanguagename\",value:this.state.selectedRecord.nlanguagecode?this.state.selectedRecord.nlanguagecode:\"\",onChange:function onChange(value){return _this2.onChangeLanguage(value,\"nlanguagecode\");}}):\"\",/*#__PURE__*/React.createElement(CustomButtom,{name:\"loginbutton\",label:this.props.intl.formatMessage({id:\"IDS_LOGIN\"}),color:\"primary\",className:\"btn-user btn-primary-blue\",handleClick:function handleClick(){return _this2.onLoginSubmit();}}),this.props.Login.openCPModal&&this.props.Login.userInfo.nlogintypecode===LOGINTYPE.INTERNAL&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openCPModal,closeModal:this.closeModal,loginoperation:true,inputParam:{},screenName:this.props.Login.screenName,onSaveClick:this.props.Login.PassFlag===6?this.onCreatePassWord:this.onChangePassword,selectedRecord:this.state.createPwdRecord||{},mandatoryFields:this.mandatoryFieldFunction(this.props.Login.PassFlag),addComponent:this.props.Login.PassFlag===6?/*#__PURE__*/React.createElement(CreatePassword,{sloginid:this.state.selectedRecord.sloginid,createPwdRecord:this.state.createPwdRecord,msg:fnPassMessage(this.props.Login.passwordPolicy),onInputChange:function onInputChange(event){return _this2.onInputChange(event);}}):this.props.Login.PassFlag===transactionStatus.EXPIRED?/*#__PURE__*/React.createElement(ChangePassword,{sloginid:this.state.selectedRecord.sloginid,createPwdRecord:this.state.createPwdRecord,msg:fnPassMessage(this.props.Login.passwordPolicy),onInputChange:function onInputChange(event){return _this2.onInputChange(event);}}):\"\"}),this.props.Login.openADSModal&&this.props.Login.userInfo.nlogintypecode===LOGINTYPE.ADS&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openADSModal,closeModal:this.closeADSModal,loginoperation:true,inputParam:{},screenName:this.props.Login.screenName,onSaveClick:this.onCreateADSPassWord,selectedRecord:this.state.createPwdRecord||{},mandatoryFields:this.mandatoryFieldFunction(\"ADS\"),addComponent:/*#__PURE__*/React.createElement(CreateADSPassword,{sloginid:this.state.selectedRecord.sloginid,createPwdRecord:this.state.createPwdRecord,onInputChange:function onInputChange(event){return _this2.onInputChange(event);}})}));}},{key:\"onUsersiteChange\",value:function onUsersiteChange(ComboVal,fieldName){var selectedRecord=this.state.selectedRecord||{};selectedRecord[fieldName]=ComboVal;var inputParam={selectedRecord:selectedRecord};this.props.getUsersiteRole(inputParam);}},{key:\"componentDidMount\",value:function componentDidMount(){this.loginRef.current[0].focus();this.props.getLoginDetails();}},{key:\"mandatoryFieldFunction\",value:function mandatoryFieldFunction(passFlag){var mandatoryField=[];if(passFlag===6){mandatoryField=[{\"idsName\":\"IDS_NEWPASSWORD\",\"dataField\":\"snewpassword\",\"mandatory\":false},{\"idsName\":\"IDS_CONFIRMPASSWORD\",\"dataField\":\"sconfirmpassword\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}else if(passFlag===\"ADS\"){mandatoryField=[{\"idsName\":\"IDS_ADSPASSWORD\",\"dataField\":\"sadspassword\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}else{mandatoryField=[{\"idsName\":\"IDS_OLDPASSWORD\",\"dataField\":\"soldpassword\",\"mandatory\":false},{\"idsName\":\"IDS_NEWPASSWORD\",\"dataField\":\"snewpassword\",\"mandatory\":false},{\"idsName\":\"IDS_CONFIRMPASSWORD\",\"dataField\":\"sconfirmpassword\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}return mandatoryField;}},{key:\"onLoginInputChange\",value:function onLoginInputChange(event){var selectedRecord=this.state.selectedRecord||{};var loginid=validateLoginId(event.target.value);if(loginid){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=this.state.selectedRecord[event.target.name]?this.state.selectedRecord[event.target.name]:\"\";}this.setState({selectedRecord:selectedRecord});}},{key:\"selectInputOnChange\",value:function selectInputOnChange(event){var selectedRecord=this.state.selectedRecord||{};selectedRecord[event.target.name]=event.target.value;this.setState({selectedRecord:selectedRecord});}},{key:\"onInputChange\",value:function onInputChange(event){var createPwdRecord=this.state.createPwdRecord||{};createPwdRecord[event.target.name]=event.target.value;this.setState({createPwdRecord:createPwdRecord});}},{key:\"onFocusOutEvent\",value:function onFocusOutEvent(event){// event.stopPropagation();\n//  Added by Ragul.C for Double alert shows for Invaliduser\nif(event.target.name===\"sloginid\"){event.stopPropagation();}var sloginid=event.target.value;if(sloginid!==\"\"){var selectedRecord=this.state.selectedRecord||{};var inputParam={sloginid:sloginid,Language:selectedRecord.nlanguagecode&&selectedRecord.nlanguagecode.item,logintype:this.props.Login.loginTypeList,nlogintypecode:selectedRecord.nlogintypecode&&selectedRecord.nlogintypecode.value||-1};this.props.getUserSiteAndRole(inputParam,selectedRecord);}}},{key:\"onLoginSubmit\",value:function onLoginSubmit(){var _this3=this;var selectedRecord=this.state.selectedRecord;var mandatoryField=[{\"idsName\":\"IDS_LOGINID\",\"dataField\":\"sloginid\",\"mandatory\":false},{\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"spassword\",\"mandatory\":true},//Don't Remove the Commented line commented for NIBSC\n{\"idsName\":\"IDS_SITE\",\"dataField\":\"nusersitecode\",\"mandatory\":true},{\"idsName\":\"IDS_ROLE\",\"dataField\":\"nusermultirolecode\",\"mandatory\":true},{\"idsName\":\"IDS_LOGINTYPE\",\"dataField\":\"nlogintypecode\",\"mandatory\":true},//Don't Remove the Commented line commented for NIBSC\n{\"idsName\":\"IDS_LANGUAGE\",\"dataField\":\"nlanguagecode\",\"mandatory\":true}];var failedControls=[];mandatoryField.map(function(item){if(selectedRecord[item.dataField]===undefined){failedControls.push(_this3.props.intl.formatMessage({id:item.idsName}));}else if(typeof selectedRecord[item.dataField]===\"object\"){//to validate FormSelectSearch component\nif(selectedRecord[item.dataField].length===0){failedControls.push(_this3.props.intl.formatMessage({id:item.idsName}));}}else if(typeof selectedRecord[item.dataField]===\"string\"){//to handle string field -- added trim function\nif(selectedRecord[item.dataField].trim().length===0){failedControls.push(_this3.props.intl.formatMessage({id:item.idsName}));}}return null;});if(failedControls.length===0){var nlogintypecode=selectedRecord.nlogintypecode.value;if(selectedRecord.nusercode===-1){nlogintypecode=LOGINTYPE.INTERNAL;}var inputParam={nusermultisitecode:selectedRecord.nusersitecode.value,nusermultirolecode:selectedRecord.nusermultirolecode.value,slanguagetypecode:selectedRecord.nlanguagecode.item.slanguagetypecode,slanguagefilename:selectedRecord.nlanguagecode.item.sfilename,spassword:selectedRecord.spassword,// nusercode: selectedRecord.nusercode,\nnusercode:selectedRecord.nusercode?selectedRecord.nusercode:this.props.Login.nusercode,nuserrolecode:selectedRecord.nusermultirolecode.item.nuserrolecode,sloginid:selectedRecord.sloginid,nlogintypecode:nlogintypecode,//nlogintypecode: 1,\nurl:nlogintypecode===1?\"/login/internallogin\":\"/login/adsLogin\",// url: \"/login/internallogin\" ,\nnavigation:\"home\",languageList:this.props.Login.languageList,nsitecode:selectedRecord.nusersitecode.item.nsitecode};this.props.clickOnLoginButton(inputParam,this.props.Login.languageList);}else{toast.info(\"\".concat(this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(failedControls[0]));}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.navigation===\"home\"||this.props.Login.navigation===\"dashboard\"||this.props.Login.navigation===\"alert\"){this.props.history.push('/'+this.props.Login.navigation);}var selectedRecord=this.state.selectedRecord||{};var createPwdRecord=this.state.createPwdRecord||{};var isStateChanged=false;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}if(this.props.Login.createPwdRecord!==previousProps.Login.createPwdRecord){createPwdRecord=this.props.Login.createPwdRecord;isStateChanged=true;}//     Added by Ragul.C for Double alert shows for Invaliduser\n//         if (this.props.Login !== previousProps.Login) {\n//           //  selectedRecord[\"nusermultirolecode\"]=this.props.Login.selectedRecord && this.props.Login.selectedRecord.nusermultirolecode;\n//             selectedRecord[\"nusermultirolecode\"]=this.props.Login.selectedRecord && this.props.Login.selectedRecord.nusermultirolecode !== undefined ?this.props.Login.selectedRecord.nusermultirolecode:this.props.Login.nusermultirolecode;\n//             //this.props.Login.nusermultirolecode;\n//             selectedRecord[\"nusersitecode\"]=this.state.selectedRecord.nusersitecode!==undefined?this.state.selectedRecord.nusersitecode:this.props.Login.nusersitecode;\n// //            selectedRecord[\"nusersitecode\"]=this.props.Login.nusersitecode;\n//             selectedRecord[\"nusercode\"]=this.props.Login.nusercode;\n//             selectedRecord[\"nlogintypecode\"]=this.props.Login.nlogintypecode;\n//             // selectedRecord[\"nlanguagecode\"]=this.props.Login.nlanguagecode;\n//             isStateChanged = true;\n//         }\nif(isStateChanged){this.setState({selectedRecord:selectedRecord,createPwdRecord:createPwdRecord});}}}]);return SignIn;}(React.Component);export default connect(mapStateToProps,{clickOnLoginButton:clickOnLoginButton,changeLanguage:changeLanguage,getLoginDetails:getLoginDetails,getUserSiteAndRole:getUserSiteAndRole,updateStore:updateStore,createPassword:createPassword,changepassword:changepassword,getUsersiteRole:getUsersiteRole,checkPassword:checkPassword,validateADSPassword:validateADSPassword})(injectIntl(SignIn));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","injectIntl","FormInput","CustomButtom","changeLanguage","getLoginDetails","getUserSiteAndRole","updateStore","createPassword","validateADSPassword","changepassword","getUsersiteRole","checkPassword","CreatePassword","CreateADSPassword","clickOnLoginButton","toast","FormSelectSearch","validateLoginId","SlideOutModal","DEFAULT_RETURN","ChangePassword","changePasswordValidation","fnPassMessage","fnValidatePassword","LOGINTYPE","transactionStatus","Form","mapStateToProps","state","Login","SignIn","props","closeModal","updateInfo","typeName","data","openCPModal","closeADSModal","openADSModal","onCreatePassWord","selectedRecord","createPwdRecord","snewpassword","trim","sconfirmpassword","sloginid","warn","intl","formatMessage","id","nusermultirolecode","undefined","nusersitecode","nusercode","nlogintypecode","nlanguagecode","setState","returnString","passwordPolicy","inputParam","spassword","value","info","onCreateADSPassWord","sadspassword","slanguagefilename","item","sfilename","userInfo","ADS","onChangePassword","returnMsg","sOldPassword","soldpassword","isPasswordExpiry","suserrolename","label","slanguagetypecode","onSelectChange","ComboVal","fieldName","INTERNAL","Language","nusermultisitecode","nuserrolecode","onChangeLanguage","loginTypes","onLoginEvent","event","keyCode","inputValue","target","show","open","onLoginSubmit","AutoLogin","parseInt","url","navigation","languageList","PasswordPolicy","loginRef","createRef","loginTypeList","loginUserSite","count","loginUserRole","onLoginInputChange","onFocusOutEvent","selectInputOnChange","onUsersiteChange","length","screenName","PassFlag","mandatoryFieldFunction","onInputChange","EXPIRED","current","focus","passFlag","mandatoryField","loginid","name","stopPropagation","logintype","failedControls","map","dataField","push","idsName","nsitecode","previousProps","history","isStateChanged","Component"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButtom from '../custom-button/custom-button.component';\r\nimport { changeLanguage, getLoginDetails, getUserSiteAndRole, updateStore, createPassword,validateADSPassword, changepassword, getUsersiteRole, checkPassword } from '../../actions';\r\nimport CreatePassword from '../../pages/Login/CreatePassWord';\r\nimport CreateADSPassword from '../../pages/Login/CreateADSPassWord';\r\nimport { clickOnLoginButton } from '../../actions'\r\nimport { toast } from 'react-toastify';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport { validateLoginId } from '../CommonScript';\r\nimport SlideOutModal from '../slide-out-modal/SlideOutModal';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport ChangePassword from '../../pages/Login/ChangePassWord';\r\nimport { changePasswordValidation, fnPassMessage, fnValidatePassword } from '../../pages/Login/LoginCommonFunction';\r\nimport { LOGINTYPE, transactionStatus } from '../Enumeration'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            PasswordPolicy: {},\r\n            selectedRecord: {},\r\n           \r\n        }\r\n        this.loginRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const { loginTypeList, languageList, loginUserSite, count=0,\r\n             loginUserRole } = this.props.Login;\r\n             \r\n        return (\r\n            <Form ref={this.loginRef}>\r\n                <FormInput\r\n                    name=\"sloginid\"\r\n                    label={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                    type=\"text\"\r\n                    // placeholder={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                    required={true}\r\n                    isMandatory={\"*\"}\r\n                    onChange={(event) => this.onLoginInputChange(event)}\r\n                    onBlur={(event) => this.onFocusOutEvent(event)}\r\n                    //ALPD-1926\r\n                    // onKeyUp={this.AutoLogin} \r\n                    value={this.state.selectedRecord.sloginid}\r\n                />\r\n                <FormInput\r\n                    name=\"spassword\"\r\n                    label={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                    type=\"password\"\r\n                    required={true}\r\n                    isMandatory={\"*\"}\r\n                    // placeholder={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                    onChange={(event) => this.selectInputOnChange(event)}\r\n                    onKeyUp={this.onLoginEvent}\r\n                    value={this.state.selectedRecord.spassword}\r\n                />\r\n                {/* Don't Remove the Commented line commented for NIBSC */}\r\n                <FormSelectSearch\r\n                    name={\"nusersitecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                    isSearchable={false}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={loginUserSite || []}\r\n                    optionId='nusersitecode'\r\n                    optionValue='ssitename'\r\n                    value={this.state.selectedRecord.nusersitecode ? this.state.selectedRecord.nusersitecode : \"\"}\r\n                    onChange={value => this.onUsersiteChange(value, \"nusersitecode\")}\r\n                >\r\n                </FormSelectSearch>\r\n                <FormSelectSearch\r\n                    name={\"nusermultirolecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_USERROLE\" })}\r\n                    isSearchable={false}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={loginUserRole || []}\r\n                    optionId='nusermultirolecode'\r\n                    optionValue='suserrolename'\r\n                    value={this.state.selectedRecord.nusermultirolecode ? this.state.selectedRecord.nusermultirolecode : \"\"}\r\n                    onChange={value => this.onSelectChange(value, \"nusermultirolecode\")}\r\n                >\r\n                </FormSelectSearch>\r\n               {/* ALPD-3816 */}\r\n               { (loginTypeList !== undefined && loginTypeList.length > 1) ?\r\n                 <FormSelectSearch\r\n                    name={\"nlogintypecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_LOGINTYPE\" })}\r\n                    isSearchable={false}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={loginTypeList || []}\r\n                    optionId='nlogintypecode'\r\n                    optionValue='sdisplayname'\r\n                    value={this.state.selectedRecord.nlogintypecode ? this.state.selectedRecord.nlogintypecode : \"\"}\r\n                    onChange={value => this.onSelectChange(value, \"nlogintypecode\")}\r\n                >\r\n                </FormSelectSearch> \r\n                : \"\"\r\n                } \r\n                {/* Don't Remove the Commented line commented for NIBSC */}\r\n                {/* ALPD-3816 */}\r\n                { (languageList !== undefined && languageList.length > 1) ?\r\n                <FormSelectSearch\r\n                    name={\"nlanguagecode\"}\r\n                    formLabel={this.props.intl.formatMessage({ id: \"IDS_LANGUAGE\" })}\r\n                    isSearchable={false}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={languageList || []}\r\n                    optionId='nlanguagecode'\r\n                    optionValue='slanguagename'\r\n                    value={this.state.selectedRecord.nlanguagecode ? this.state.selectedRecord.nlanguagecode : \"\"}\r\n                    onChange={value => this.onChangeLanguage(value, \"nlanguagecode\")}\r\n                >\r\n                </FormSelectSearch> : \"\"\r\n                }\r\n                <CustomButtom name=\"loginbutton\" label={this.props.intl.formatMessage({id:\"IDS_LOGIN\"})} color=\"primary\" className=\"btn-user btn-primary-blue\"\r\n                    handleClick={() => this.onLoginSubmit()}></CustomButtom>\r\n                { this.props.Login.openCPModal &&\r\n                    this.props.Login.userInfo.nlogintypecode === LOGINTYPE.INTERNAL &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openCPModal}\r\n                        closeModal={this.closeModal}\r\n                        loginoperation={true}\r\n                        inputParam={{}}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.PassFlag === 6 ? this.onCreatePassWord : this.onChangePassword}\r\n                        selectedRecord={this.state.createPwdRecord || {}}\r\n                        mandatoryFields={this.mandatoryFieldFunction(this.props.Login.PassFlag)}\r\n                        addComponent={this.props.Login.PassFlag === 6 ?\r\n                            <CreatePassword\r\n                                sloginid={this.state.selectedRecord.sloginid}\r\n                                createPwdRecord={this.state.createPwdRecord}\r\n                                msg={fnPassMessage(this.props.Login.passwordPolicy)}\r\n                                onInputChange={(event) => this.onInputChange(event)}\r\n                            /> : this.props.Login.PassFlag === transactionStatus.EXPIRED ?\r\n                                <ChangePassword\r\n                                    sloginid={this.state.selectedRecord.sloginid}\r\n                                    createPwdRecord={this.state.createPwdRecord}\r\n                                    msg={fnPassMessage(this.props.Login.passwordPolicy)}\r\n                                    onInputChange={(event) => this.onInputChange(event)}\r\n                                /> : \"\"\r\n                        }\r\n                    />}\r\n                     {/* Start ALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it */}\r\n                    { this.props.Login.openADSModal &&\r\n                    this.props.Login.userInfo.nlogintypecode === LOGINTYPE.ADS &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openADSModal}\r\n                        closeModal={this.closeADSModal}\r\n                        loginoperation={true}\r\n                        inputParam={{}}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onCreateADSPassWord}\r\n                        selectedRecord={this.state.createPwdRecord || {}}\r\n                        mandatoryFields={this.mandatoryFieldFunction(\"ADS\")}\r\n                        addComponent={\r\n                            <CreateADSPassword\r\n                                sloginid={this.state.selectedRecord.sloginid}\r\n                                createPwdRecord={this.state.createPwdRecord}\r\n                                onInputChange={(event) => this.onInputChange(event)}\r\n                            /> \r\n                        }\r\n                    />}\r\n                    {/*End  ALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it */}\r\n            </Form>\r\n        );\r\n    }\r\n\r\n\r\n    onUsersiteChange(ComboVal, fieldName) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = ComboVal;\r\n        const inputParam = {\r\n            selectedRecord\r\n        };\r\n        this.props.getUsersiteRole(inputParam);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loginRef.current[0].focus();\r\n        this.props.getLoginDetails();\r\n    }\r\n\r\n    mandatoryFieldFunction(passFlag) {\r\n        let mandatoryField = [];\r\n        if (passFlag === 6) {\r\n            mandatoryField = [\r\n                { \"idsName\": \"IDS_NEWPASSWORD\", \"dataField\": \"snewpassword\", \"mandatory\": false },\r\n                { \"idsName\": \"IDS_CONFIRMPASSWORD\", \"dataField\": \"sconfirmpassword\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n            ]\r\n        } else if (passFlag === \"ADS\") {\r\n            mandatoryField = [\r\n            { \"idsName\": \"IDS_ADSPASSWORD\", \"dataField\": \"sadspassword\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n        }\r\n        else {\r\n            mandatoryField = [\r\n                { \"idsName\": \"IDS_OLDPASSWORD\", \"dataField\": \"soldpassword\", \"mandatory\": false},\r\n                { \"idsName\": \"IDS_NEWPASSWORD\", \"dataField\": \"snewpassword\", \"mandatory\": false },\r\n                { \"idsName\": \"IDS_CONFIRMPASSWORD\", \"dataField\": \"sconfirmpassword\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n            ]\r\n        }\r\n        return mandatoryField;\r\n    }\r\n\r\n    closeModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openCPModal: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n//Start\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n    closeADSModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openADSModal: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n//End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n\r\n    onCreatePassWord = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const createPwdRecord = this.state.createPwdRecord;\r\n        const snewpassword = createPwdRecord.snewpassword.trim();\r\n        const sconfirmpassword = createPwdRecord.sconfirmpassword.trim();\r\n        if (selectedRecord.sloginid === snewpassword) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PASSWORDSHOULDNOTSAMEASLOGINID\" }));\r\n        } else if (sconfirmpassword !== snewpassword) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PASSWORDNOTMATCHED\" }));\r\n        } else {\r\n\r\n// Added by Ragul.C for Double alert shows for Invaliduser\r\n            //selectedRecord[\"nusermultirolecode\"]=this.props.Login.nusermultirolecode;\r\n            selectedRecord[\"nusermultirolecode\"]=this.state.selectedRecord.nusermultirolecode!==undefined && this.state.selectedRecord.nusermultirolecode!==\"\" ?this.state.selectedRecord.nusermultirolecode:this.props.Login.nusermultirolecode;\r\n            selectedRecord[\"nusersitecode\"]=this.state.selectedRecord.nusersitecode!==undefined && this.state.selectedRecord.nusersitecode!==\"\" ?this.state.selectedRecord.nusersitecode:this.props.Login.nusersitecode;\r\n            // selectedRecord[\"nusersitecode\"]=this.props.Login.nusersitecode;\r\n            selectedRecord[\"nusercode\"]=this.props.Login.nusercode;\r\n            selectedRecord[\"nlogintypecode\"]=this.props.Login.nlogintypecode;\r\n            selectedRecord[\"nlanguagecode\"]=this.props.Login.nlanguagecode;\r\n            this.setState({ selectedRecord });\r\n// \r\n            const returnString = fnValidatePassword(this.props.Login.passwordPolicy, snewpassword)\r\n            if (returnString === 0) {\r\n                const inputParam = {\r\n                    spassword: snewpassword,\r\n                    nusersitecode: selectedRecord.nusersitecode.value,\r\n                    nusermultirolecode: selectedRecord.nusermultirolecode.value\r\n                };\r\n                this.props.createPassword(inputParam);\r\n            } else {\r\n                toast.info(returnString);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Start\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n    onCreateADSPassWord = () => {\r\n        const selectedRecord = {...this.state.selectedRecord};\r\n        const createPwdRecord = this.state.createPwdRecord;\r\n        const sadspassword = createPwdRecord.sadspassword && createPwdRecord.sadspassword.trim();\r\n                const inputParam = {\r\n                    spassword: sadspassword,\r\n                    sloginid: selectedRecord.sloginid,\r\n                    slanguagefilename: this.props.Login.nlanguagecode && this.props.Login.nlanguagecode.item && this.props.Login.nlanguagecode.item.sfilename,\r\n                    selectedRecord: selectedRecord,\r\n                    nlogintypecode: (this.props.Login.userInfo && this.props.Login.userInfo.nlogintypecode) || LOGINTYPE.ADS,\r\n                };\r\n                this.props.validateADSPassword(inputParam);\r\n        \r\n    }\r\n    //End\tALPD-4393 17/06/2024 Abdul Gaffoor.A To validate ads password of login User and to get ads user details and update it\r\n\r\n\r\n    onChangePassword = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const createPwdRecord = this.state.createPwdRecord;\r\n        const returnMsg = changePasswordValidation(createPwdRecord, this.props.Login.passwordPolicy, this.state.selectedRecord.sloginid);\r\n        if (returnMsg === 0) {\r\n            const inputParam = {\r\n                spassword: createPwdRecord.snewpassword.trim(),\r\n                sOldPassword: createPwdRecord.soldpassword.trim(),\r\n                nusersitecode: selectedRecord.nusersitecode.value,\r\n                isPasswordExpiry: true,\r\n                userInfo: { ...this.props.Login.userInfo, slanguagefilename: selectedRecord.nlanguagecode.item.sfilename,\r\n                            sloginid:selectedRecord.sloginid, suserrolename:selectedRecord.nusermultirolecode.label },\r\n                slanguagetypecode: selectedRecord.nlanguagecode.item.slanguagetypecode\r\n            };\r\n\r\n            this.props.changepassword(inputParam);\r\n        } else {\r\n            toast.info(returnMsg);\r\n        }\r\n    }\r\n\r\n    onLoginInputChange(event) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const loginid = validateLoginId(event.target.value);\r\n        if (loginid) {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        } else {\r\n            selectedRecord[event.target.name] = this.state.selectedRecord[event.target.name] ? this.state.selectedRecord[event.target.name] : \"\";\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    selectInputOnChange(event) {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputChange(event) {\r\n        const createPwdRecord = this.state.createPwdRecord || {};\r\n        createPwdRecord[event.target.name] = event.target.value;\r\n        this.setState({ createPwdRecord });\r\n    }\r\n\r\n    onSelectChange = (ComboVal, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = ComboVal;\r\n        if (fieldName === \"nlogintypecode\" && ComboVal.value === LOGINTYPE.INTERNAL\r\n            && selectedRecord.sloginid && selectedRecord.sloginid !== \"\" \r\n            && selectedRecord.nusermultirolecode && selectedRecord.nusermultirolecode !== \"\"\r\n            && selectedRecord.nusersitecode && selectedRecord.nusersitecode !== \"\") {\r\n            const inputParam = {\r\n                sloginid: this.state.selectedRecord.sloginid,\r\n                Language: selectedRecord.nlanguagecode.item,\r\n                nusermultisitecode: selectedRecord.nusersitecode.value,\r\n                nusermultirolecode: selectedRecord.nusermultirolecode.value,\r\n                nuserrolecode: selectedRecord.nusermultirolecode.item.nuserrolecode,\r\n                nlogintypecode: ComboVal.value\r\n            };\r\n            this.props.checkPassword(inputParam, selectedRecord);\r\n        } else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onChangeLanguage = (ComboVal, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = ComboVal;\r\n        this.props.changeLanguage(ComboVal.item.slanguagetypecode, selectedRecord,this.props.Login.loginTypes);\r\n    }\r\n\r\n\r\n    onFocusOutEvent(event) {\r\n\r\n        // event.stopPropagation();\r\n      //  Added by Ragul.C for Double alert shows for Invaliduser\r\n        if(event.target.name === \"sloginid\"){ \r\n            \r\n            event.stopPropagation();\r\n        }\r\n        const sloginid = event.target.value;\r\n        if (sloginid !== \"\") {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            const inputParam = {\r\n                sloginid, Language: selectedRecord.nlanguagecode && selectedRecord.nlanguagecode.item,\r\n                 logintype: this.props.Login.loginTypeList,\r\n                 nlogintypecode: selectedRecord.nlogintypecode && selectedRecord.nlogintypecode.value || -1,\r\n            };            \r\n            this.props.getUserSiteAndRole(inputParam, selectedRecord);\r\n        }       \r\n    }\r\n\r\n    onLoginEvent = (event) => {\r\n        if (event.keyCode === 13) {\r\n            const inputValue = event.target.value;\r\n            this.setState({\r\n                show: this.props.Login.open\r\n            })\r\n            if (inputValue !== \"\") {\r\n                this.onLoginSubmit(inputValue);\r\n            }\r\n        }\r\n    }\r\n    AutoLogin = (event) => {\r\n        if (event.keyCode === 118) {\r\n            let nlogintypecode = 1;\r\n            const inputParam = {\r\n                nusermultisitecode: parseInt(-1),\r\n                nusermultirolecode: parseInt(-1),\r\n                slanguagetypecode: \"en-US\",\r\n                spassword: \"123\",\r\n                nusercode: -1,\r\n                nlogintypecode: 1,\r\n                nuserrolecode: -1,\r\n                url: nlogintypecode === 1 ? \"/login/internallogin\" : \"/login/adslogin\",\r\n                navigation: \"home\",\r\n                languageList: this.props.Login.languageList\r\n            }\r\n            this.setState({\r\n                nusermultisitecode: parseInt(-1),\r\n                nusermultirolecode: parseInt(-1),\r\n                slanguagetypecode: 1,\r\n                spassword: \"123\",\r\n                nusercode: -1,\r\n                nlogintypecode: 1,\r\n                nuserrolecode: -1\r\n            })\r\n            this.props.clickOnLoginButton(inputParam,this.props.Login.languageList);\r\n        }\r\n    }\r\n    onLoginSubmit() {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const mandatoryField = [\r\n            { \"idsName\": \"IDS_LOGINID\", \"dataField\": \"sloginid\", \"mandatory\": false },\r\n            { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"spassword\", \"mandatory\": true },\r\n            //Don't Remove the Commented line commented for NIBSC\r\n            { \"idsName\": \"IDS_SITE\", \"dataField\": \"nusersitecode\", \"mandatory\": true },\r\n            { \"idsName\": \"IDS_ROLE\", \"dataField\": \"nusermultirolecode\", \"mandatory\": true },\r\n            { \"idsName\": \"IDS_LOGINTYPE\", \"dataField\": \"nlogintypecode\", \"mandatory\": true },\r\n            //Don't Remove the Commented line commented for NIBSC\r\n            { \"idsName\": \"IDS_LANGUAGE\", \"dataField\": \"nlanguagecode\", \"mandatory\": true },\r\n        ];\r\n        const failedControls = [];\r\n        mandatoryField.map(item => {\r\n            if (selectedRecord[item.dataField] === undefined) {\r\n                failedControls.push(this.props.intl.formatMessage({ id: item.idsName }));\r\n            } else if (typeof selectedRecord[item.dataField] === \"object\") {\r\n                //to validate FormSelectSearch component\r\n                if (selectedRecord[item.dataField].length === 0) {\r\n                    failedControls.push(this.props.intl.formatMessage({ id: item.idsName }));\r\n                }\r\n            } else if (typeof selectedRecord[item.dataField] === \"string\") {\r\n                //to handle string field -- added trim function\r\n                if (selectedRecord[item.dataField].trim().length === 0) {\r\n                    failedControls.push(this.props.intl.formatMessage({ id: item.idsName }));\r\n                }\r\n            }\r\n            return null;\r\n        });\r\n        if (failedControls.length === 0) {\r\n            let nlogintypecode = selectedRecord.nlogintypecode.value;\r\n            if (selectedRecord.nusercode === -1) {\r\n                nlogintypecode = LOGINTYPE.INTERNAL;\r\n            }\r\n            const inputParam = {\r\n                nusermultisitecode: selectedRecord.nusersitecode.value,\r\n                nusermultirolecode: selectedRecord.nusermultirolecode.value,\r\n                slanguagetypecode: selectedRecord.nlanguagecode.item.slanguagetypecode,\r\n                slanguagefilename: selectedRecord.nlanguagecode.item.sfilename,\r\n                spassword: selectedRecord.spassword,\r\n                // nusercode: selectedRecord.nusercode,\r\n                nusercode: selectedRecord.nusercode ? selectedRecord.nusercode : this.props.Login.nusercode,\r\n                nuserrolecode: selectedRecord.nusermultirolecode.item.nuserrolecode,\r\n                sloginid: selectedRecord.sloginid,\r\n                nlogintypecode: nlogintypecode,\r\n                //nlogintypecode: 1,\r\n                url: nlogintypecode === 1 ? \"/login/internallogin\" : \"/login/adsLogin\",\r\n               // url: \"/login/internallogin\" ,\r\n                navigation: \"home\",\r\n                languageList: this.props.Login.languageList,\r\n                nsitecode:selectedRecord.nusersitecode.item.nsitecode\r\n            }\r\n            this.props.clickOnLoginButton(inputParam,this.props.Login.languageList);\r\n        } else {\r\n            toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${failedControls[0]}`);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.navigation === \"home\"||this.props.Login.navigation === \"dashboard\"\r\n        ||this.props.Login.navigation === \"alert\") {\r\n            this.props.history.push('/'+this.props.Login.navigation);\r\n        }\r\n  \r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let createPwdRecord = this.state.createPwdRecord || {};\r\n        let isStateChanged = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            isStateChanged = true;\r\n        }\r\n\r\n        if (this.props.Login.createPwdRecord !== previousProps.Login.createPwdRecord) {\r\n            createPwdRecord = this.props.Login.createPwdRecord;\r\n            isStateChanged = true;\r\n        }\r\n\r\n   //     Added by Ragul.C for Double alert shows for Invaliduser\r\n   \r\n//         if (this.props.Login !== previousProps.Login) {\r\n//           //  selectedRecord[\"nusermultirolecode\"]=this.props.Login.selectedRecord && this.props.Login.selectedRecord.nusermultirolecode;\r\n//             selectedRecord[\"nusermultirolecode\"]=this.props.Login.selectedRecord && this.props.Login.selectedRecord.nusermultirolecode !== undefined ?this.props.Login.selectedRecord.nusermultirolecode:this.props.Login.nusermultirolecode;\r\n//             //this.props.Login.nusermultirolecode;\r\n//             selectedRecord[\"nusersitecode\"]=this.state.selectedRecord.nusersitecode!==undefined?this.state.selectedRecord.nusersitecode:this.props.Login.nusersitecode;\r\n// //            selectedRecord[\"nusersitecode\"]=this.props.Login.nusersitecode;\r\n//             selectedRecord[\"nusercode\"]=this.props.Login.nusercode;\r\n//             selectedRecord[\"nlogintypecode\"]=this.props.Login.nlogintypecode;\r\n//             // selectedRecord[\"nlanguagecode\"]=this.props.Login.nlanguagecode;\r\n//             isStateChanged = true;\r\n//         }\r\n\r\n\r\n        if (isStateChanged) {\r\n            this.setState({ selectedRecord, createPwdRecord });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    clickOnLoginButton, changeLanguage,\r\n    getLoginDetails, getUserSiteAndRole, updateStore, createPassword, changepassword, getUsersiteRole, checkPassword, validateADSPassword\r\n})(injectIntl(SignIn));\r\n"]},"metadata":{},"sourceType":"module"}