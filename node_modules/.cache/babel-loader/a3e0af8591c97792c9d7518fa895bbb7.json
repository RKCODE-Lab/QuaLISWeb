{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{faPlay,faAddressBook,faCheckCircle,faEye,faPencilRuler,faFileImport,faSync}from'@fortawesome/free-solid-svg-icons';import{Card,Col,Row,Nav,Button}from'react-bootstrap';import{injectIntl}from'react-intl';import{connect}from'react-redux';import{ListWrapper}from'../../components/client-group.styles';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import SplitterLayout from\"react-splitter-layout\";import{ContentPanel}from'../../components/App.styles';import{crudMaster,updateStore,getsubSampleREDetail,getTestREDetail,getTestChildTabREDetail,resultGetModule,fetchMaterialRecord,completeTest,testMethodSourceEdit,addREInstrument,addREMaterial,deleteInstrumentRecord,fetchInstrumentRecord,deleteTaskRecord,fetchTaskRecord,parameterRecord,checkListRecord,onSaveCheckList,defaultTest,getFormula,getRERegistrationType,getRERegistrationSubType,getREApprovalConfigVersion,getResultEntryDetails,calculateFormula,getREFilterStatus,getREFilterTestData,getREJobStatus,viewAttachment,validateEsignCredentialComplete,getAttachmentCombo,deleteAttachment,getCommentsCombo,updateTestMethodSource,resultImportFile,filterTransactionList,validateEsignCredential,getSampleChildTabREDetail,updateParameterComments,getREMaterialCategoryByType,getREMaterialByCategory,getREMaterialInvertoryByMaterial,previewSampleReport,getMeanCalculationTestParameter,getAvailableMaterialQuantity,testStart//,deleteResultUsedMaterial\n}from'../../actions';import{sortData,create_UUID,getControlMap,listDataFromDynamicArray,formatInputDate,validateTwoDigitDate,showEsign,constructOptionList,deleteAttachmentDropZone}from'../../components/CommonScript';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{parameterType,grade,transactionStatus,RegistrationType,RegistrationSubType,FORMULAFIELDTYPE,designProperties}from'../../components/Enumeration';import TransactionListMasterJson from'../../components/TransactionListMasterJson';import{ProductList}from'../product/product.styled';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import ResultEntryResultsTab from'./ResultEntryResultsTab';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import ResultEntryFilter from'./ResultEntryFilter';import ResultEntryInstrumentForm from'./ResultEntryInstrumentForm';import ResultEntryForm from'./ResultEntryForm';import TestEditForm from'./TestEditForm';import SampleInfoView from'../approval/SampleInfoView';import SampleInfoGrid from'../approval/SampleInfoGrid';import ApprovalInstrumentTab from'../approval/ApprovalInstrumentTab';import ResultEntryTaskTab from'./ResultEntryTaskTab';import ResultEntryTaskForm from'./ResultEntryTaskForm';import ResultEntryParamCommetsForm from'./ResultEntryParamCommetsForm';import TemplateForm from'../checklist/checklist/TemplateForm';import{templateChangeHandler}from'../checklist/checklist/checklistMethods';import{numberConversion,numericGrade}from'./ResultEntryValidation';import PerfectScrollbar from'react-perfect-scrollbar';import ResultEntryFormulaForm from'./ResultEntryFormulaForm';import SampleApprovalHistory from'../approval/SampleApprovalHistory';import ResultChangeHistoryTab from'../approval/ResultChangeHistoryTab';import Attachments from'../attachmentscomments/attachments/Attachments';import Comments from'../attachmentscomments/comments/Comments';import{onSaveSampleAttachment,onSaveTestAttachment}from'../attachmentscomments/attachments/AttachmentFunctions';import{onSaveTestComments}from'../attachmentscomments/comments/CommentFunctions';import ResultEntryImport from'./ResultEntryImport';import{getSameRecordFromTwoArrays,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';// import ReactTooltip from 'react-tooltip';\nimport ResultEntryMean from'./ResultEntryMean';import ScrollBar from'react-perfect-scrollbar';import ResultEntryMaterialForm from'./ResultEntryMaterialForm';import UsedMaterial from'./UsedMaterial';var ResultEntry=/*#__PURE__*/function(_Component){_inherits(ResultEntry,_Component);var _super=_createSuper(ResultEntry);function ResultEntry(props){var _this;_classCallCheck(this,ResultEntry);_this=_super.call(this,props);_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.props.Login.masterData.selectedImportFile;selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{selectedImportFile:selectedRecord})}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var openTemplateModal=_this.props.Login.openTemplateModal;var selectedRecord=_this.props.Login.selectedRecord;var screenName=_this.props.Login.screenName;var operation=_this.props.Login.operation;var loadFile=_this.props.Login.loadFile;var updateInfo={};if(screenName===\"IDS_RESULTFORMULA\"){screenName=\"IDS_RESULTENTRY\";operation=\"update\";var showValidate=!_this.props.Login.showValidate;updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,operation:operation,showValidate:showValidate,validateFormulaMandyFields:[]}};}else{if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"complete\"||_this.props.Login.operation===\"default\"||_this.props.Login.operation===\"deleteTask\"||_this.props.Login.operation===\"deleteInstrument\"){loadEsign=false;openModal=false;selectedRecord={};}else if(_this.props.Login.operation===\"updatechecklist\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;openTemplateModal=false;selectedRecord={};loadFile=false;}updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,screenName:screenName,loadEsign:loadEsign,selectedRecord:selectedRecord,openTemplateModal:openTemplateModal,loadFile:loadFile}};}_this.props.updateStore(updateInfo);};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,fromdate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntodate:dateObj.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,fromdate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedRecord&&_this.state.selectedRecord[\"fromDate\"]||_this.props.Login.masterData.fromDate,_this.state.selectedRecord&&_this.state.selectedRecord[\"toDate\"]||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,nsampletypecode:parseInt(event.value),fromdate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntodate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData};_this.props.getRERegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedRecord&&_this.state.selectedRecord[\"fromDate\"]||_this.props.Login.masterData.fromDate,_this.state.selectedRecord&&_this.state.selectedRecord[\"toDate\"]||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:3,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromdate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntodate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userinfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,masterData:_this.props.Login.masterData};_this.props.getRERegistrationSubType(inputData);}else if(fieldname===\"nregsubtypecode\"){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:4,fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:event.value,userinfo:_this.props.Login.userInfo,defaultRegistrationSubType:event.item,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}else if(fieldname===\"version\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:4,fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:event.value,userinfo:_this.props.Login.userInfo,defaultApprovalConfigVersion:event.item,masterData:_this.props.Login.masterData};_this.props.getREJobStatus(inputData);}else if(fieldname===\"jobstatus\"){var _obj4=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,fromdate:_obj4.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj4.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData};_this.props.getREFilterStatus(inputData);}else if(fieldname===\"filter\"){var _obj5=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,fromdate:_obj5.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj5.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:1,// parseInt(this.props.Login.masterData.defaultjobstatus.njobstatuscode),\nntranscode:String(event.value),userinfo:_this.props.Login.userInfo,defaultFilterStatus:event.item,masterData:_this.props.Login.masterData};_this.props.getREFilterTestData(inputData);}else if(fieldname===\"test\"){var defaultTestvalues=event.item;_this.props.Login.masterData.defaultTestvalues=defaultTestvalues;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread({},_this.props.Login.masterData)}};_this.props.updateStore(updateInfo);}else{}}};_this.OnDateConverstion=function(date,fieldname){var month=validateTwoDigitDate(String(date.getMonth()+1));var day=validateTwoDigitDate(String(date.getDate()));if(fieldname===\"fromDate\"){date=date.getFullYear()+'-'+month+'-'+day+\"T00:00:00\";}else{date=date.getFullYear()+'-'+month+'-'+day+\"T23:59:00\";}return date;};_this.onReload=function(){var _this$props$Login$mas=_this.props.Login.masterData,realFromDate=_this$props$Login$mas.realFromDate,realToDate=_this$props$Login$mas.realToDate,realSampleTypeValue=_this$props$Login$mas.realSampleTypeValue,realRegTypeValue=_this$props$Login$mas.realRegTypeValue,realRegSubTypeValue=_this$props$Login$mas.realRegSubTypeValue,realApproveConfigVersion=_this$props$Login$mas.realApproveConfigVersion,realFilterStatusValue=_this$props$Login$mas.realFilterStatusValue,realTestcodeValue=_this$props$Login$mas.realTestcodeValue;//let obj = this.covertDatetoString(realFromDate, realToDate)\nvar obj=convertDateValuetoString(realFromDate,realToDate,_this.props.Login.userInfo);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:obj.fromDate,realToDate:obj.toDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApproveConfigVersion:realApproveConfigVersion,realTestcodeValue:realTestcodeValue});var inputData={nsampletypecode:realSampleTypeValue&&realSampleTypeValue.nsampletypecode||-1,nregtypecode:realRegTypeValue&&realRegTypeValue.nregtypecode||-1,nregsubtypecode:realRegSubTypeValue&&realRegSubTypeValue.nregsubtypecode||-1,napprovalversioncode:realApproveConfigVersion&&realApproveConfigVersion.napprovalconfigversioncode||-1,ntranscode:String(realFilterStatusValue?realFilterStatusValue.ntransactionstatus:-1),ntestcode:realTestcodeValue?realTestcodeValue.ntestcode:-1,ntransactiontestcode:0,njobstatuscode:_this.props.Login.masterData.defaultjobstatus&&_this.props.Login.masterData.defaultjobstatus.njobstatuscode||1,fromdate:obj.fromDate,todate:obj.toDate,userinfo:_this.props.Login.userInfo,activeTestKey:_this.props.Login.activeTestKey||\"IDS_RESULTS\",showTest:true,showSample:false,checkBoxOperation:3,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode};var inpuParamData={inputData:inputData,masterData:masterData,refs:{searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef},resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.napprovalversioncode!==-1&&inputData.ntranscode!==-1&&inputData.njobstatuscode!==-1&&inputData.ntestcode!==-1){_this.props.getResultEntryDetails(inpuParamData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onREFilterSubmit=function(event){// let realFromDate = new Date(this.props.Login.masterData.fromDate)\n// let realToDate = new Date(this.props.Login.masterData.toDate)\nvar realFromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.fromDate);var realToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.toDate);var realSampleTypeValue=_this.props.Login.masterData.defaultSampleType&&_this.props.Login.masterData.defaultSampleType;var realRegTypeValue=_this.props.Login.masterData.defaultRegistrationType&&_this.props.Login.masterData.defaultRegistrationType;var realRegSubTypeValue=_this.props.Login.masterData.defaultRegistrationSubType&&_this.props.Login.masterData.defaultRegistrationSubType;var realApproveConfigVersion=_this.props.Login.masterData.defaultApprovalConfigVersion&&_this.props.Login.masterData.defaultApprovalConfigVersion;var realFilterStatusValue=_this.props.Login.masterData.defaultFilterStatus&&_this.props.Login.masterData.defaultFilterStatus;var realTestcodeValue=_this.props.Login.masterData.defaultTestvalues&&_this.props.Login.masterData.defaultTestvalues;//let obj = this.covertDatetoString(realFromDate, realToDate)\nvar obj=convertDateValuetoString(realFromDate,realToDate,_this.props.Login.userInfo);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:obj.fromDate,realToDate:obj.toDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApproveConfigVersion:realApproveConfigVersion,realTestcodeValue:realTestcodeValue});var inputData={nsampletypecode:_this.props.Login.masterData.defaultSampleType&&_this.props.Login.masterData.defaultSampleType.nsampletypecode||-1,nregtypecode:_this.props.Login.masterData.defaultRegistrationType&&_this.props.Login.masterData.defaultRegistrationType.nregtypecode||-1,nregsubtypecode:_this.props.Login.masterData.defaultRegistrationSubType&&_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode||-1,napprovalversioncode:_this.props.Login.masterData.defaultApprovalConfigVersion&&_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode||-1,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus?_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus:-1),ntestcode:_this.props.Login.masterData.defaultTestvalues?_this.props.Login.masterData.defaultTestvalues.ntestcode:-1,ntransactiontestcode:0,njobstatuscode:_this.props.Login.masterData.defaultjobstatus&&_this.props.Login.masterData.defaultjobstatus.njobstatuscode||1,fromdate:obj.fromDate,todate:obj.toDate,userinfo:_this.props.Login.userInfo,activeTestKey:_this.props.Login.activeTestKey||\"IDS_RESULTS\",showTest:true,showSample:false,nneedsubsample:_this.props.Login.masterData.nneedsubsample||false,checkBoxOperation:3,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode};var inpuParamData={inputData:inputData,masterData:masterData,refs:{searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef},resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.napprovalversioncode!==-1&&inputData.ntranscode!==-1&&inputData.njobstatuscode!==-1&&inputData.ntestcode!==undefined){_this.props.getResultEntryDetails(inpuParamData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onSecondaryPaneSizeChange=function(e,val){// let hGrand = this.state.grandparentheight\n// let check = e - 400;\n// if (check > 1) {\n//     hGrand = this.state.parentHeight + check\n// }\n// this.setState({\n//     paneHeight: e - val,\n//     secondPaneHeight: hGrand - e - 70,\n//     grandparentheight: hGrand\n// })\n// this.setState({\n//     paneHeight: e - val,\n//     secondPaneHeight: this.state.parentHeight - e - 70\n// })\n};_this.onComboCategoryChange=function(event,fieldname){if(event!==null){var uRL=\"\";var inputData=[];uRL='resultentrybysample/getResultUsedInstrumentCombo';if(fieldname===\"ninstrumentcatcode\"){inputData={userinfo:_this.props.Login.userInfo,nflag:2,ninstrumentcatcode:event.value,ncalibrationRequired:event.item.ncalibrationreq};}rsapi.post(uRL,inputData).then(function(response){var _objectSpread2;var TagInstrument=constructOptionList(response.data.Instrument||[],\"ninstrumentcode\",\"sinstrumentid\",undefined,undefined,undefined);var TagListInstrument=TagInstrument.get(\"OptionList\");var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{Instrument:TagListInstrument}),selectedRecord:_objectSpread(_objectSpread({},_this.props.Login.selectedRecord),{},(_objectSpread2={},_defineProperty(_objectSpread2,fieldname,event),_defineProperty(_objectSpread2,\"ninstrumentcode\",TagInstrument.get(\"DefaultValue\")?TagInstrument.get(\"DefaultValue\"):[]),_objectSpread2))}};_this.props.updateStore(updateInfo);// const selectedRecord = this.state.selectedRecord || {};\n// selectedRecord[fieldname] = event;\n// this.setState({ selectedRecord });\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};_this.showRESampleInfo=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         showSample: true, \n//         showTest: false \n//         }\n//     }\n// this.props.updateStore(updateInfo);\n_this.setState({showSample:true,showTest:false});};_this.testRETabDetail=function(){var testTabMap=new Map();//let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\nvar ntransactiontestcode=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";var _this$state=_this.state,testskip=_this$state.testskip,testtake=_this$state.testtake;var testList=_this.props.Login.masterData.RE_TEST||[];testList=testList.slice(testskip,testskip+testtake);var meanControlId=_this.state.controlMap.has(\"CalculateMean\")&&_this.state.controlMap.get(\"CalculateMean\").ncontrolcode;var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");testTabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(ResultEntryResultsTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.dataStateChange,fetchRecord:_this.props.parameterRecord,controlMap:_this.state.controlMap,parameterParam:{primaryKeyField:\"ntransactionresultcode\",masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},checkListRecord:_this.checkListRecord,checklistParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},selectedId:_this.props.Login.selectedId||null,viewFile:_this.props.viewAttachment,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_RESULTS\",getMeanTestParameter:_this.props.getMeanCalculationTestParameter,meanParam:{\"userInfo\":_this.props.Login.userInfo,ncontrolCode:meanControlId}}));testTabMap.set(\"IDS_INSTRUMENT\",/*#__PURE__*/React.createElement(ApprovalInstrumentTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedInstrument\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.instrumentDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteInstrumentRecord,fetchRecord:_this.fetchInstrumentRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_INSTRUMENT\"}));testTabMap.set(\"IDS_MATERIAL\",/*#__PURE__*/React.createElement(UsedMaterial,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedMaterial\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.materialDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteMaterialRecord,fetchRecord:_this.props.fetchMaterialRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_MATERIAL\"}));testTabMap.set(\"IDS_TASK\",/*#__PURE__*/React.createElement(ResultEntryTaskTab,{userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedTask\",addResultEntryTask:_this.addResultEntryTask,controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"DeleteResultUsedTask\")&&_this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"EditResultUsedTask\")&&_this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode},dataState:_this.state.taskDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteTaskRecord,fetchRecord:_this.fetchTaskRecord//fetchRecord={this.fetchInstrumentRecord}\n,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_TASK\"}));testTabMap.set(\"IDS_TESTATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_TESTATTACHMENTS\",selectedMaster:\"RESelectedTest\",onSaveClick:_this.onAttachmentSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDATTACHEMENT\",attachments:_this.props.Login.masterData.RegistrationTestAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,addName:\"AddTestAttachment\",editName:\"EditTestAttachment\",deleteName:\"DeleteTestAttachment\",viewName:\"ViewTestAttachment\",methodUrl:\"TestAttachment\",nsubsampleneed:_this.props.Login.masterData.nneedsubsample,subFields:[_defineProperty({},designProperties.VALUE,\"stestsynonym\"),_defineProperty({},designProperties.VALUE,\"dcreateddate\")],deleteParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\"},editParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\",masterList:_this.props.Login.masterData.RESelectedTest},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));testTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",selectedMaster:\"RESelectedTest\",onSaveClick:_this.onCommentsSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.dataStateChange,isTestComment:true,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",masterList:_this.props.Login.masterData.RESelectedTest,ncontrolCode:_this.state.controlMap.has(\"DeleteTestComment\")&&_this.state.controlMap.get(\"DeleteTestComment\").ncontrolcode},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RESelectedTest,ncontrolCode:_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\",selectedId:_this.props.Login.selectedId||null}));testTabMap.set(\"IDS_RESULTCHANGEHISTORY\",/*#__PURE__*/React.createElement(ResultChangeHistoryTab,{userInfo:_this.props.Login.userInfo,ApprovalResultChangeHistory:_this.props.Login.masterData.ResultChangeHistory||[],inputParam:_this.props.Login.inputParam,dataState:_this.state.resultChangeDataState,dataStateChange:_this.dataStateChange,screenName:\"IDS_RESULTCHANGEHISTORY\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));return testTabMap;};_this.sampleDataStateChange=function(event){switch(_this.props.Login.activeSampleKey){case\"IDS_APPROVALHISTORY\":_this.setState({sampleHistoryDataState:event.dataState});break;default:_this.setState({sampleGridDataState:event.dataState});break;}};_this.sampleGridDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.dataStateChange=function(event){switch(_this.props.Login.activeTestKey){case\"IDS_RESULTS\":_this.setState({resultDataState:event.dataState});break;case\"IDS_INSTRUMENT\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_MATERIAL\":_this.setState({materialDataState:event.dataState});break;case\"IDS_TASK\":_this.setState({taskDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_DOCUMENTS\":_this.setState({documentDataState:event.dataState});break;case\"IDS_RESULTCHANGEHISTORY\":_this.setState({resultChangeDataState:event.dataState});break;default:_this.setState({resultDataState:event.dataState});break;}};_this.sampleTabDetail=function(){var tabMap=new Map();var npreregno=_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";//let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\ntabMap.set(\"IDS_SAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",selectedMaster:\"RESelectedSample\",onSaveClick:_this.onAttachmentSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,masterList:_this.props.Login.masterData.RESelectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHMENT\",addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:_this.props.Login.screenName},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},selectedListName:\"IDS_SAMPLE\",displayName:\"sarno\"}));tabMap.set(\"IDS_APPROVALHISTORY\",/*#__PURE__*/React.createElement(SampleApprovalHistory,{userInfo:_this.props.Login.userInfo,ApprovalHistory:_this.props.Login.masterData.SampleApprovalHistory,inputParam:_this.props.Login.inputParam,dataState:_this.state.sampleHistoryDataState,dataStateChange:_this.sampleDataStateChange,screenName:\"IDS_APPROVALHISTORY\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));// tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <></>)\n// tabMap.set(\"IDS_SAMPLECOMMENTS\", <></>)\n// tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <></>)\n// tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <></>)\nreturn tabMap;};_this.onSampleTabChange=function(tabProps){if(_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.length>0){var activeSampleKey=tabProps.screenName;if(activeSampleKey!==_this.props.Login.activeSampleKey){var inputData={masterData:_this.props.Login.masterData,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(preregno){return preregno.npreregno;}).join(\",\").toString():\"\",ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(subsamplecode){return subsamplecode.ntransactionsamplecode;}).join(\",\").toString():\"\",RESelectedSample:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample:\"\",userinfo:_this.props.Login.userInfo,activeSampleKey:activeSampleKey,screenName:activeSampleKey};_this.props.getSampleChildTabREDetail(inputData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}};_this.onTestTabChange=function(tabProps){var activeTestKey=tabProps.screenName;if(activeTestKey!==_this.props.Login.activeTestKey){if(_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(preregno){return preregno.npreregno;}).join(\",\").toString():\"\",RESelectedTest:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest:\"\",// ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\n//     this.props.Login.masterData.selectedTestCode : this.props.Login.masterData.RESelectedTest ?\n//         String(this.props.Login.masterData.RESelectedTest.ntransactiontestcode) : \"-1\",\nuserinfo:_this.props.Login.userInfo,activeTestKey:activeTestKey,screenName:activeTestKey,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState};_this.props.getTestChildTabREDetail(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}};_this.testMethodSourceEdit=function(test){_this.props.testMethodSourceEdit(test);};_this.addREInstrument=function(test){_this.props.addREInstrument(test);};_this.deleteInstrumentRecord=function(test){var inputParam={inputData:_objectSpread(_objectSpread({},test),{},{'userinfo':_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\noperation:\"deleteInstrument\",screenName:\"deleteInstrumentAction\",displayName:_this.props.Login.inputParam.displayName//, postParam,\n//test: test\n};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteInstrumentAction\",operation:\"deleteInstrument\"}};_this.props.updateStore(updateInfo);}else{_this.props.deleteInstrumentRecord(test);}};_this.fetchInstrumentRecord=function(test){_this.props.fetchInstrumentRecord(test);};_this.fetchMaterialRecord=function(test){_this.props.fetchMaterialRecord(test);};_this.deleteMaterialRecord=function(test){var inputParam={inputData:_objectSpread(_objectSpread({},test.selectedRecord),{},{ntransactiontestcode:test.masterData.RESelectedTest?test.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",userinfo:_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\nclassUrl:'resultentrybysample',methodUrl:\"ResultUsedMaterial\",operation:\"delete\",screenName:\"deleteMaterialAction\",displayName:_this.props.Login.inputParam.displayName,//, postParam,\n//test: test\nnresultusedmaterialcode:test.selectedRecord.nresultusedmaterialcode};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteMaterialAction\",operation:\"deleteMaterial\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");//this.props.deleteResultUsedMaterial(test)\n}};_this.deleteTaskRecord=function(test){var inputParam={inputData:_objectSpread(_objectSpread({},test),{},{'userinfo':_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\noperation:\"deleteTask\",displayName:_this.props.Login.inputParam.displayName//, postParam,\n//test: test\n};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteTaskaction\",operation:\"deleteTask\"}};_this.props.updateStore(updateInfo);}else{_this.props.deleteTaskRecord(test);}};_this.fetchTaskRecord=function(test){_this.props.fetchTaskRecord(test);};_this.addResultEntryTask=function(inputData){var selectedRecord={};selectedRecord={npreregno:inputData.npreregno,ntransactiontestcode:inputData.ntransactiontestcode,stestsynonym:inputData.stestsynonym};var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,operation:\"create\",screenName:\"IDS_TASK\",openModal:true,activeTestKey:\"IDS_TASK\",ncontrolcode:inputData.addResultUsedTaskId,selectedId:null}};_this.props.updateStore(updateInfo);};_this.checkListRecord=function(parameterData){_this.props.checkListRecord(parameterData,_this.props.Login.userInfo);};_this.getFormula=function(parameterData,userInfo,masterData,index,event){_this.setState({modalEvent:event.currentTarget});_this.props.getFormula(parameterData,userInfo,masterData,index,_this.state.selectedRecord);};_this.calculateFormula=function(){var selectedRecord=_this.state.selectedRecord||[];var selectedForumulaInput=selectedRecord.selectedForumulaInput||[];var lstDynamicFields=[];if(selectedForumulaInput){selectedForumulaInput.map(function(dynamicfields){return lstDynamicFields.push(dynamicfields);});var inputData={masterData:_this.props.Login.masterData,lstDynamicFields:lstDynamicFields,userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,selectedResultGrade:_this.state.selectedRecord.selectedResultGrade,ResultParameter:_this.state.selectedRecord.ResultParameter||{}};_this.props.calculateFormula(inputData);}};_this.resultImport=function(){_this.props.Login.masterData.selectedImportFile=[];var updateInfo={typeName:DEFAULT_RETURN,data:{operation:\"create\",screenName:\"IDS_RESULTIMPORTFILE\",openModal:true,loadFile:true,activeTestKey:\"IDS_RESULTS\",masterData:_this.props.Login.masterData}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.handleSubSamplePageChange=function(e){_this.setState({subSampleSkip:e.skip,subSampleTake:e.take});setTimeout(function(){_this._scrollBarRef.updateScroll();});};_this.handleTestPageChange=function(e){_this.setState({testskip:e.skip,testtake:e.take,sampletakeDataState:e.take});};_this.verticalPaneSizeChange=function(val){_this.setState({initialVerticalWidth:val-150});};_this.defaultActions=function(testChildGetREParam,RESelectedTest,RESelectedSample,setDefaultId,testskip,testtake){var nregtypecode=_this.props.Login.masterData.realRegTypeValue.nregtypecode;var nregsubtypecode=_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"completeTest\",inputData:{'userinfo':_this.props.Login.userInfo,'nregtypecode':nregtypecode,'nregsubtypecode':nregsubtypecode,'ncontrolcode':setDefaultId},// formData: formData,\n// isFileupload: true,\noperation:\"default\",displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:_objectSpread(_objectSpread({},testChildGetREParam),{},{ncontrolcode:setDefaultId}),RESelectedTest:acceptTestList,RESelectedSample:RESelectedSample};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,setDefaultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"defaultaction\",operation:\"default\"}};_this.props.updateStore(updateInfo);}else{_this.props.defaultTest(inputParam.testChildGetREParam,acceptTestList,RESelectedSample,nregtypecode,nregsubtypecode);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTTEST\"}));}};_this.completeActions=function(testChildGetREParam,RESelectedTest,userInfo,completeResultId,testskip,testtake){var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"completeTest\",inputData:{'userinfo':_this.props.Login.userInfo,'ncontrolcode':completeResultId},// formData: formData,\n// isFileupload: true,\noperation:\"complete\",postParamList:_this.postParamList,displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:testChildGetREParam,RESelectedTest:acceptTestList,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,testtake:_this.state.testtake};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeResultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"complete\",operation:\"complete\"}};_this.props.updateStore(updateInfo);}else{_this.props.completeTest(inputParam,acceptTestList,userInfo,completeResultId);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCOMPLETE\"}));}};_this.testStartActions=function(testChildGetREParam,RESelectedTest,userInfo,completeResultId,testskip,testtake){var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"completeTest\",inputData:{'userinfo':_this.props.Login.userInfo,'ncontrolcode':completeResultId},// formData: formData,\n// isFileupload: true,\noperation:\"complete\",postParamList:_this.postParamList,displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:testChildGetREParam,RESelectedTest:acceptTestList,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,testtake:_this.state.testtake};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeResultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"complete\",operation:\"complete\"}};_this.props.updateStore(updateInfo);}else{_this.props.testStart(inputParam,acceptTestList,userInfo,completeResultId);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCOMPLETE\"}));}};_this.onSaveCheckList=function(selectedRecord,userInfo,nregtypecode,nregsubtypecode){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var inputParam={\"inputData\":{userinfo:userInfo}};var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{selectedRecord:selectedRecord,userInfo:userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,inputParam:inputParam,operation:\"updatechecklist\"},openModal:true,operation:\"updatechecklist\"}};_this.props.updateStore(updateInfo);}else{_this.props.onSaveCheckList(selectedRecord,userInfo,nregtypecode,nregsubtypecode);}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='complete'||_this.props.Login.operation==='default'||_this.props.Login.operation===\"updatechecklist\"||_this.props.Login.operation==='deleteInstrument'||_this.props.Login.operation==='createMethod'||_this.props.Login.operation==='deleteTask'||_this.props.Login.operation==='updateParameterComments'){_this.props.validateEsignCredentialComplete(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveFileClick=function(saveType,formRef){var selectedImportFile=_this.props.Login.masterData.selectedImportFile;var acceptedFile=selectedImportFile?selectedImportFile.sfilename:[];var formData=new FormData();// if(nattachmenttypecode === attachmentType.FTP) {\nif(acceptedFile&&acceptedFile.length>0){acceptedFile.forEach(function(file,index){formData.append(\"uploadedFile\"+index,file);});formData.append(\"filecount\",acceptedFile.length);}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTANYONEFILETOSUBMIT\"}));}formData.append(\"userinfo\",JSON.stringify(_this.props.Login.userInfo));formData.append(\"nregtypecode\",JSON.stringify(_this.props.Login.masterData.realRegTypeValue.nregtypecode));formData.append(\"nregsubtypecode\",JSON.stringify(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode));formData.append(\"stransactiontestcode\",JSON.stringify(_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"));_this.props.resultImportFile(formData,_this.props.Login.masterData);};_this.onDropFile=function(acceptedFile){// let selectedImportFile = this.props.Login.masterData.selectedImportFile || [];\n// selectedImportFile['sfilename'] = acceptedFile;\n_this.props.Login.masterData.selectedImportFile['sfilename']=acceptedFile;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_this.props.Login.masterData}};_this.props.updateStore(updateInfo);// this.setState({selectedImportFile});\n};_this.onFormulaInputChange=function(event,index,fields){var selectedRecord=_this.state.selectedRecord;var selectedForumulaInput=_this.state.selectedRecord.selectedForumulaInput||[];var selectedMandatory=_this.state.selectedRecord.selectedMandatory||[];var dynamicformulafields={};if(event){if(fields.ndynamicformulafieldcode===FORMULAFIELDTYPE.INTEGER){var value=event.target.value.replace(/[^-^0-9]/g,'');if(/^-?\\d*?$/.test(value)||value===\"\"){if(_this.state.selectedRecord.formulainput){dynamicformulafields.svalues=value;dynamicformulafields.sparameter=fields.sdescription;selectedForumulaInput[index]=dynamicformulafields;selectedMandatory[index]=event.target.value;}}selectedRecord[\"selectedForumulaInput\"]=selectedForumulaInput;selectedRecord[\"selectedMandatory\"]=selectedMandatory;_this.setState({selectedRecord:selectedRecord});}else{var _value=event.target.value.replace(/[^-^0-9.]/g,'');if(/^-?\\d*?\\.?\\d*?$/.test(_value)||_value===\"\"){if(_this.state.selectedRecord.formulainput){dynamicformulafields.svalues=_value;dynamicformulafields.sparameter=fields.sdescription;selectedForumulaInput[index]=dynamicformulafields;selectedMandatory[index]=event.target.value;}}// else {\n//     dynamicformulafields.svalues = selectedForumulaInput.length > 0 ? selectedForumulaInput[index].svalues : \"\";\n//     selectedForumulaInput[index].svalues = selectedForumulaInput.length > 0 ? selectedForumulaInput[index].svalues : \"\";\n// }\nselectedRecord[\"selectedForumulaInput\"]=selectedForumulaInput;selectedRecord[\"selectedMandatory\"]=selectedMandatory;_this.setState({selectedRecord:selectedRecord});}}};_this.onTemplateInputChange=function(event,control){var selectedRecord=templateChangeHandler(1,_this.state.selectedRecord,event,control);_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onTemplateComboChange=function(comboData,control){var selectedRecord=templateChangeHandler(2,_this.state.selectedRecord,comboData,control);_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onTemplateDateChange=function(dateData,control){var selectedRecord=templateChangeHandler(3,_this.state.selectedRecord,dateData,control);//this.setState({selectedRecord});\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onInputChange=function(Data,name){var selectedRecord=_this.state.selectedRecord||[];if(Data){selectedRecord[name]=Data.target.value;//this.setState({selectedRecord});\n}else{selectedRecord[name]=[];//this.setState({selectedRecord});\n}_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onNumericChange=function(numericData,numericName){var selectedRecord=_this.state.selectedRecord||[];if(numericData){if(numericName!==\"scomments\"){selectedRecord[numericName]=numericData;//this.setState({selectedRecord});\n}else{selectedRecord[numericName]=numericData.target.value;//this.setState({selectedRecord});\n}}else{selectedRecord[numericName]=\"\";//this.setState({selectedRecord});\n}_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord||[];selectedRecord[dateName]=dateValue;if(dateName===\"dfromdate\"||dateName===\"dtodate\"){_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n//this.props.updateStore(updateInfo);\n}};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var meanTestParameterList=_this.state.meanTestParameterList||[];var selectedMeanTestParam=_this.state.selectedMeanTestParam||new Map();if(checked){var data=meanTestParameterList.map(function(item){item.selected=checked;selectedMeanTestParam.set(item.ntransactionresultcode,item.sresult);return item;});var selectedTestParam=\"\";var selectedTestParamMean=0;var size=0;if(selectedMeanTestParam.size>0){_toConsumableArray(selectedMeanTestParam.values()).forEach(function(item){return item!==null&&item!==\"\"?(selectedTestParam=selectedTestParam===\"\"?item:selectedTestParam+\"+\"+item,size=size+1,selectedTestParamMean=parseInt(selectedTestParamMean)+parseInt(item)):\"\";});selectedTestParamMean=selectedTestParamMean/size;}_this.setState({meanTestParameterList:data,selectedMeanTestParam:selectedMeanTestParam,selectedTestParam:selectedTestParam,testMean:selectedTestParamMean,selectAll:checked});}else{var _data=meanTestParameterList.map(function(item){item.selected=checked;return item;});_this.setState({meanTestParameterList:_data,selectedMeanTestParam:new Map(),selectedTestParam:\"\",testMean:\"\",selectAll:checked});}};_this.selectionChange=function(event){var meanTestParameterList=_this.state.meanTestParameterList||[];var selectedMeanTestParam=_this.state.selectedMeanTestParam||new Map();meanTestParameterList.map(function(item){if(item.ntransactionresultcode===event.dataItem.ntransactionresultcode){item.selected=!event.dataItem.selected;}return item;});if(event.dataItem.selected){selectedMeanTestParam.set(event.dataItem.ntransactionresultcode,event.dataItem.sresult);}else{if(selectedMeanTestParam.has(event.dataItem.ntransactionresultcode)){selectedMeanTestParam.delete(event.dataItem.ntransactionresultcode);}}var selectedTestParam=\"\";var selectedTestParamMean=0;var size=0;if(selectedMeanTestParam.size>0){_toConsumableArray(selectedMeanTestParam.values()).forEach(function(item){return item!==null&&item!==\"\"?(selectedTestParam=selectedTestParam===\"\"?item:selectedTestParam+\"+\"+item,size=size+1,selectedTestParamMean=parseInt(selectedTestParamMean)+parseInt(item)):\"\";});selectedTestParamMean=selectedTestParamMean/size;}_this.setState({meanTestParameterList:meanTestParameterList,selectedMeanTestParam:selectedMeanTestParam,selectedTestParam:selectedTestParam,testMean:selectedTestParamMean,selectAll:_this.valiateCheckAll(meanTestParameterList)});};_this.onMeanComboChange=function(comboData,comboName){var selectedMeanTestParam=_this.state.selectedMeanTestParam||[];selectedMeanTestParam[comboName]=comboData[0];var data=\"\";if(selectedMeanTestParam[\"parametervalue\"]===undefined){data=comboData[0].value;}else{data=selectedMeanTestParam[\"parametervalue\"]+\"+\"+comboData[0].value;}selectedMeanTestParam[\"parametervalue\"]=data;_this.setState({selectedMeanTestParam:selectedMeanTestParam});};_this.onMaterialComboChange=function(comboData,comboName){var selectedRecord=_this.state.selectedRecord||[];if(comboData){selectedRecord[comboName]=comboData;//this.setState({ selectedRecord });\n}else{selectedRecord[comboName]=[];//this.setState({ selectedRecord });\n}switch(comboName){case'nmaterialtypecode':_this.props.getREMaterialCategoryByType({selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;case'nmaterialcatcode':_this.props.getREMaterialByCategory({selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;case'nmaterialcode':_this.props.getREMaterialInvertoryByMaterial({selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;default:_this.props.getAvailableMaterialQuantity({selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;}};_this.onComboChange=function(comboData,comboName){var selectedRecord=_this.state.selectedRecord||[];if(comboData){selectedRecord[comboName]=comboData;//this.setState({ selectedRecord });\n}else{selectedRecord[comboName]=[];//this.setState({ selectedRecord });\n}_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onGradeEvent=function(ResultParameter,index,parameter){if(ResultParameter.length>0&&ResultParameter[index]!==undefined&&ResultParameter[index].sresult!==null){var selectedRecord=_this.state.selectedRecord||[];var selectedResultGrade=_this.state.selectedRecord.selectedResultGrade||[];if(parameter.nparametertypecode===parameterType.NUMERIC){selectedResultGrade[index]={ngradecode:ResultParameter[index].sresult!==\"\"?numericGrade(parameter,numberConversion(parseFloat(ResultParameter[index].sresult),parseInt(parameter.nroundingdigits))):-1};}if(parameter.nparametertypecode===parameterType.PREDEFINED){if(ResultParameter[index].sresult!==null){selectedResultGrade[index]={ngradecode:ResultParameter[index].ngradecode};}else{selectedResultGrade[index]={ngradecode:0};}}if(parameter.nparametertypecode===parameterType.CHARACTER){if(ResultParameter[index].sresult!==null){selectedResultGrade[index]={ngradecode:ResultParameter[index].ngradecode};}else{selectedResultGrade[index]={ngradecode:4};}}//this.props.Login.masterData[\"selectedResultGrade\"] = selectedResultGrade;\nselectedRecord.selectedResultGrade=selectedResultGrade;_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData: this.props.Login.masterData }\n// }\n// this.props.updateStore(updateInfo);\n}};_this.onCommentsSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var _this$state2=_this.state,testskip=_this$state2.testskip,testtake=_this$state2.testtake;var testList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(_this.props.Login.screenName===\"IDS_TESTCOMMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestComments(saveParam,selectedTestList);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openCommentModal\");}};_this.onAttachmentSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var _this$state3=_this.state,testskip=_this$state3.testskip,testtake=_this$state3.testtake,skip=_this$state3.skip,take=_this$state3.take;var testList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");var sampleList=_toConsumableArray(_this.props.Login.masterData.RE_SAMPLE);sampleList=sampleList.slice(skip,skip+take);var selectedSampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.RESelectedSample,\"npreregno\");if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};inputParam=onSaveSampleAttachment(saveParam,selectedSampleList);}else if(_this.props.Login.screenName===\"IDS_TESTATTACHMENTS\"){var _saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestAttachment(_saveParam,selectedTestList);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openAttachmentModal\");}};_this.onKeyPress=function(event,index,paremterResultcode){if(event.keyCode===13){for(var i=0;i<event.target.form.elements.length;i++){if(parseInt(event.target.form.elements[i].id)===paremterResultcode[index+1]){event.target.form.elements[i].focus();break;}}event.preventDefault();}};_this.onResultInputChange=function(event,index,parameter){//let ResultParameter = this.props.Login.masterData.ResultParameter ? this.props.Login.masterData.ResultParameter : [];\nvar selectedRecord=_this.state.selectedRecord||[];var ResultParameter=_this.state.selectedRecord.ResultParameter?_this.state.selectedRecord.ResultParameter:[];var sresult=\"\";var value=-1;var acceptedFile=[];var ncalculatedresult;if(parameter.nparametertypecode===parameterType.NUMERIC){if(/^-?\\d*?\\.?\\d*?$/.test(event.target.value)||event.target.value===\"\"){sresult=event.target.value;ncalculatedresult=4;}else{sresult=ResultParameter[index]['sresult']===null?\"\":ResultParameter[index]['sresult'];ncalculatedresult=ResultParameter[index]['ncalculatedresult'];}}if(parameter.nparametertypecode===parameterType.PREDEFINED){if(event!=null){sresult=event.item.spredefinedname;value=event.item.ngradecode;ncalculatedresult=4;}else{sresult=\"\";value=-1;ncalculatedresult=4;}}if(parameter.nparametertypecode===parameterType.CHARACTER){sresult=event.target.value;ncalculatedresult=4;}if(parameter.nparametertypecode===parameterType.ATTACHMENT){sresult=event[0].name;acceptedFile=event;ncalculatedresult=4;}ResultParameter[index]['sresult']=sresult;ResultParameter[index]['sfinal']=sresult;ResultParameter[index]['acceptedFile']=acceptedFile;ResultParameter[index]['editable']=true;ResultParameter[index]['ngradecode']=value;ResultParameter[index]['ncalculatedresult']=ncalculatedresult;// this.props.Login.masterData.ResultParameter = ResultParameter;\nselectedRecord.ResultParameter=ResultParameter;_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData: this.props.Login.masterData }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onSaveMean=function(saveType){var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var resultParameter=_this.props.Login.selectedTestParameterMean||{};//let resultParameter = { };\nresultParameter[\"ncalculatedresult\"]=4;resultParameter[\"sresult\"]=_this.state.testMean;resultParameter[\"sfinal\"]=numberConversion(parseFloat(_this.state.testMean),parseInt(resultParameter.nroundingdigit));resultParameter[\"ngradecode\"]=numericGrade(resultParameter,parseInt(_this.state.testMean));resultParameter['nenteredrole']=_this.props.Login.userInfo.nuserrole;resultParameter['nenteredby']=_this.props.Login.userInfo.nusercode;// resultParameter['ntransactionresultcode'] = meanParameter.ntransactionresultcode;\n// resultParameter['ntransactiontestcode'] = meanParameter.ntransactiontestcode;\n// resultParameter['nparametertypecode'] = meanParameter.nparametertypecode;\n//console.log(\"result:\", resultParameter);\nvar formData=new FormData();formData.append(\"filecount\",0);formData.append(\"nregtypecode\",nregtypecode);formData.append(\"nregsubtypecode\",nregsubtypecode);formData.append(\"ncontrolcode\",_this.props.Login.ncontrolcode);formData.append(\"transactiontestcode\",resultParameter.ntransactiontestcode);formData.append(\"resultData\",JSON.stringify([resultParameter]));var inputParam={classUrl:\"resultentrybysample\",methodUrl:\"TestParameterResult\",inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:\"update\",displayName:_this.props.Login.inputParam.displayName,saveType:saveType};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveClick=function(saveType){if(_this.props.Login.screenName===\"IDS_MEANPARAMETER\"){_this.onSaveMean(saveType);}else{var ResultParameter=_this.state.selectedRecord.ResultParameter||[];var selectedRecord=_this.state.selectedRecord||{};var selectedId=_this.props.Login.selectedId||null;var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var classUrl=\"resultentrybysample\";var formData=new FormData();var neditable=0;var resultParameters=[];var inputParam={};var inputData=[];var i=0;//const postParam = {inputListName: \"RESelectedTest\", selectedObject: \"RESelectedTest\", primaryKeyField: \"ntransactionstestcode\" };\nif(_this.props.Login.screenName===\"IDS_RESULTENTRY\"){if(ResultParameter.length>0&&ResultParameter!==undefined){ResultParameter.map(function(resultData,index){var results={};if(resultData.editable===true){neditable=1;switch(resultData.nparametertypecode){case 1:results[\"jsondata\"]={ncalculatedresult:resultData[\"ncalculatedresult\"],sresult:resultData.sresult,sfinal:resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\"};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=resultData[\"ncalculatedresult\"];results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\";results[\"ngradecode\"]=resultData.sresult!==\"\"?numericGrade(resultData,results[\"sfinal\"]):-1;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 2:results[\"jsondata\"]={ncalculatedresult:4,sresult:resultData.sresult,sfinal:resultData.sresult};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.ngradecode;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 3:results[\"jsondata\"]={ncalculatedresult:4,sresult:resultData.sresult,sfinal:resultData.sresult};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=grade.FIO;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 4:if(resultData.acceptedFile!==undefined){var splittedFileName=resultData.acceptedFile?resultData.acceptedFile[0].name.split('.'):\"\";var fileExtension=resultData.acceptedFile?resultData.acceptedFile[0].name.split('.')[splittedFileName.length-1]:\"\";var uniquefilename=create_UUID()+'.'+fileExtension;results[\"jsondata\"]={ssystemfilename:uniquefilename,nfilesize:resultData.acceptedFile[0].size,ncalculatedresult:4,sresult:resultData.sresult,sfinal:resultData.sresult};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=4;results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=grade.FIO;results[\"nenteredrole\"]=_this.props.Login.userInfo.nuserrole;results[\"nenteredby\"]=_this.props.Login.userInfo.nusercode;results[\"ntransactionresultcode\"]=resultData.ntransactionresultcode;results[\"ntransactiontestcode\"]=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;results[\"ssystemfilename\"]=uniquefilename;results[\"nfilesize\"]=resultData.acceptedFile[0].size;formData.append(\"uploadedFile\"+index,resultData.acceptedFile[0]);formData.append(\"uniquefilename\"+index,uniquefilename);formData.append(\"ntransactiontestcode\",resultData.ntransactiontestcode);i++;}break;default:break;}if(Object.values(results).length>0){resultParameters.push(results);}}return null;});if(neditable===0){var updateInfo={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false}};return _this.props.updateStore(updateInfo);}formData.append(\"filecount\",i);formData.append(\"nregtypecode\",nregtypecode);formData.append(\"nregsubtypecode\",nregsubtypecode);formData.append(\"ncontrolcode\",_this.props.Login.ncontrolcode);formData.append(\"resultData\",JSON.stringify(resultParameters));var tests=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"\";formData.append(\"transactiontestcode\",tests);//let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\ninputParam={classUrl:classUrl,methodUrl:\"TestParameterResult\",inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:\"update\",displayName:_this.props.Login.inputParam.displayName,saveType:saveType//, postParam\n};}else{var _updateInfo={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false}};return _this.props.updateStore(_updateInfo);}}if(_this.props.Login.screenName===\"IDS_TESTMETHODSOURCE\"){inputData={ntype:3,nflag:3,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,ntranscode:_this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),ntestcode:_this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample&&_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),nmethodcode:selectedRecord.nmethodcode.value,nsourcecode:selectedRecord.nsourcecode.value,ntransactiontestcode:selectedRecord.ntransactiontestcode,userinfo:_this.props.Login.userInfo,activeTestKey:\"IDS_RESULTS\",ncontrolcode:_this.props.Login.ncontrolcode};// inputParam = {\n//     classUrl: classUrl,\n//     methodUrl: \"TestMethodSource\",\n//     inputData: inputData,\n//     isFileupload: false,\n//     operation: \"update\",\n//     displayName: this.props.Login.inputParam.displayName, saveType//postParam\n// }\n_this.updateTestMethodSource(inputData,_this.props.Login.masterData,_this.props.Login.ncontrolcode);return;}if(_this.props.Login.screenName===\"IDS_INSTRUMENT\"){var _inputData=[];if(_this.props.Login.operation===\"update\"){_inputData={ResultUsedInstrument:{nresultusedinstrumentcode:selectedRecord.nresultusedinstrumentcode,npreregno:selectedRecord.npreregno,ninstrumentcatcode:selectedRecord.ninstrumentcatcode.value,ninstrumentcode:selectedRecord.ninstrumentcode.value,dfromdate:formatInputDate(selectedRecord.dfromdate,false),dtodate:formatInputDate(selectedRecord.dtodate,false),stzfromdate:selectedRecord.ntzfromdate.label,stztodate:selectedRecord.ntztodate.label,ntzfromdate:selectedRecord.ntzfromdate.value,ntztodate:selectedRecord.ntztodate.value,ntransactiontestcode:selectedRecord.ntransactiontestcode},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\"};}else{_inputData={ResultUsedInstrument:{ntransactiontestcode:selectedRecord.ntransactiontestcode,npreregno:selectedRecord.npreregno,ninstrumentcatcode:selectedRecord.ninstrumentcatcode.value,ninstrumentcode:selectedRecord.ninstrumentcode.value,dfromdate:formatInputDate(selectedRecord.dfromdate,false),dtodate:formatInputDate(selectedRecord.dtodate,false),stzfromdate:selectedRecord.ntzfromdate.label,stztodate:selectedRecord.ntztodate.label,ntzfromdate:selectedRecord.ntzfromdate.value,ntztodate:selectedRecord.ntztodate.value},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,transactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\"};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedInstrument\",inputData:_inputData,selectedId:selectedId,isFileupload:false,activeTestKey:\"IDS_INSTRUMENT\",operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}if(_this.props.Login.screenName===\"IDS_MATERIAL\"){var _inputData2=[];if(parseFloat(_this.state.selectedRecord.susedquantity)<=parseFloat(_this.state.selectedRecord.savailablequantity)){if(_this.props.Login.operation===\"update\"){_inputData2={ResultUsedMaterial:{nresultusedmaterialcode:selectedRecord.nresultusedmaterialcode,ntransactiontestcode:selectedRecord.ntransactiontestcode,npreregno:selectedRecord.npreregno,nmaterialtypecode:selectedRecord.nmaterialtypecode.value,nmaterialcategorycode:selectedRecord.nmaterialcategorycode.value,nmaterialcode:selectedRecord.nmaterialcode.value,ninventorycode:selectedRecord.nmaterialinventorycode.value,nsectioncode:selectedRecord.nsectioncode,jsondata:{sarno:selectedRecord.sarno,ssamplearno:selectedRecord.ssamplearno,stestsynonym:selectedRecord.stestsynonym,smaterialcatname:selectedRecord.nmaterialcatcode.label,smaterialname:selectedRecord.nmaterialcode.label,sinventoryid:selectedRecord.nmaterialinventorycode.label,nqtyused:selectedRecord.susedquantity,scarriergas:selectedRecord.scarriergas,smobilephase:selectedRecord.smobilephase,sremarks:selectedRecord.sremarks,susername:_this.props.Login.userInfo.susername}},MaterialInventoryTrans:{nmaterialinventorycode:selectedRecord.nmaterialinventorycode.value,nsectioncode:selectedRecord.nsectioncode,jsondata:{IDS_INVENTORYID:selectedRecord.nmaterialinventorycode.label,nqtyused:selectedRecord.susedquantity}},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,nresultusedmaterialcode:selectedRecord.nresultusedmaterialcode,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\"};}else{_inputData2={ResultUsedMaterial:{ntransactiontestcode:selectedRecord.ntransactiontestcode,npreregno:selectedRecord.npreregno,nmaterialtypecode:selectedRecord.nmaterialtypecode.value,nmaterialcategorycode:selectedRecord.nmaterialcatcode.value,nmaterialcode:selectedRecord.nmaterialcode.value,ninventorycode:selectedRecord.nmaterialinventorycode.value,nsectioncode:selectedRecord.nsectioncode,jsondata:{sarno:selectedRecord.sarno,ssamplearno:selectedRecord.ssamplearno,stestsynonym:selectedRecord.stestsynonym,smaterialcatname:selectedRecord.nmaterialcatcode.label,smaterialname:selectedRecord.nmaterialcode.label,sinventoryid:selectedRecord.nmaterialinventorycode.label,nqtyused:selectedRecord.susedquantity,scarriergas:selectedRecord.scarriergas,smobilephase:selectedRecord.smobilephase,sremarks:selectedRecord.sremarks}},MaterialInventoryTrans:{nmaterialinventorycode:selectedRecord.nmaterialinventorycode.value,nsectioncode:selectedRecord.nsectioncode,jsondata:{nqtyused:selectedRecord.susedquantity,IDS_INVENTORYID:selectedRecord.nmaterialinventorycode.label}},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,transactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\"};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedMaterial\",inputData:_inputData2,selectedId:selectedId,isFileupload:false,activeTestKey:\"IDS_MATERIAL\",operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}else{toast.warn(_this.props.intl.formatMessage({id:\"Quantity Not available\"}));return null;}}if(_this.props.Login.screenName===\"IDS_TASK\"){if(selectedRecord.sanalysistime&&selectedRecord.sanalysistime!==\"\"||selectedRecord.smisctime&&selectedRecord.smisctime!==\"\"||selectedRecord.spreanalysistime&&selectedRecord.spreanalysistime!==\"\"||selectedRecord.spreparationtime&&selectedRecord.spreparationtime!==\"\"||selectedRecord.scomments&&selectedRecord.scomments!==\"\"){if(_this.props.Login.operation===\"update\"){inputData={ResultUsedTasks:{nresultusedtaskcode:selectedRecord.nresultusedtaskcode,jsondata:{//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nsarno:_this.props.Login.masterData.RESelectedTest[0].sarno,ssamplearno:_this.props.Login.masterData.RESelectedTest[0].ssamplearno,stestsynonym:selectedRecord.stestsynonym,sanalysistime:selectedRecord.sanalysistime?selectedRecord.sanalysistime:\"\",sanalyst:_this.props.Login.userInfo.susername,smisctime:selectedRecord.smisctime?selectedRecord.smisctime:\"\",spreanalysistime:selectedRecord.spreanalysistime?selectedRecord.spreanalysistime:\"\",spreparationtime:selectedRecord.spreparationtime?selectedRecord.spreparationtime:\"\",scomments:selectedRecord.scomments?selectedRecord.scomments:\"\"}},userinfo:_this.props.Login.userInfo,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\"),nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode};}else{var taskArry=[];_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(test){return taskArry.push({//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nntransactiontestcode:parseInt(test.ntransactiontestcode),// sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\n// sanalyst: this.props.Login.userInfo.susername,\n// smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\n// spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\n// spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\n// scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\nnpreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(preregno){return preregno.npreregno;}).join(\",\").toString():\"\",jsondata:{//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nsarno:test.sarno,ssamplearno:test.ssamplearno,stestsynonym:test.stestsynonym,sanalysistime:selectedRecord.sanalysistime?selectedRecord.sanalysistime:\"\",sanalyst:_this.props.Login.userInfo.susername,smisctime:selectedRecord.smisctime?selectedRecord.smisctime:\"\",spreanalysistime:selectedRecord.spreanalysistime?selectedRecord.spreanalysistime:\"\",spreparationtime:selectedRecord.spreparationtime?selectedRecord.spreparationtime:\"\",scomments:selectedRecord.scomments?selectedRecord.scomments:\"\"}});});inputData={ResultUsedTasks:taskArry,userinfo:_this.props.Login.userInfo,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\"),nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedTasks\",inputData:inputData,selectedId:selectedId,activeTestKey:\"IDS_TASK\",isFileupload:false,operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERTASKTIME\"}));return;}}if(_this.props.Login.screenName===\"IDS_PARAMETERCOMMENTS\"){inputData={ntransactiontestcode:selectedRecord.ntransactiontestcode,ntransactionresultcode:selectedRecord.ntransactionresultcode,sresultcomment:selectedRecord.sresultcomment,transactiontestcode:selectedRecord.transactiontestcode,userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ncontrolcode:_this.props.Login.ncontrolcode};// inputParam = {\n//     classUrl: classUrl,\n//     methodUrl: \"ParameterComments\",\n//     inputData: inputData, selectedId,\n//     isFileupload: false,\n//     operation: this.props.Login.operation,\n//     displayName: this.props.Login.inputParam.displayName, saveType//postParam\n// }\n_this.updateParameterComments(inputData,_this.props.Login.masterData,selectedRecord.ncontrolcode);return;}if(_this.props.Login.screenName===\"IDS_CHECKLISTRESULT\"){var lstResultCheckList=[];if(selectedRecord&&selectedRecord.editedQB){selectedRecord.editedQB.map(function(qbcode){return lstResultCheckList.push(selectedRecord[qbcode]);});inputData={ntransactiontestcode:selectedRecord.ntransactiontestcode.toString(),ntransactionresultcode:selectedRecord.ntransactionresultcode,transactiontestcode:selectedRecord.transactiontestcode,ResultCheckList:lstResultCheckList,userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode};inputParam={classUrl:classUrl,methodUrl:\"ResultEntryChecklist\",inputData:inputData,selectedId:selectedId,isFileupload:false,operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}}var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var _updateInfo2={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(_updateInfo2);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}}};_this.searchSampleRef=React.createRef();_this.searchSubSampleRef=React.createRef();_this.searchTestRef=React.createRef();_this.state={sampleGridDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},resultDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},instrumentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},materialDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},taskDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},documentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},resultChangeDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},testCommentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},historyDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'stestsynonym'}]},sampleHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sarno'}]},// historyDataState: { skip: 0, take: 5, group: [{ field: 'ArNo' }, { field: 'stestsynonym' }] },\nuserRoleControlRights:[],controlMap:new Map(),masterStatus:\"\",error:\"\",operation:\"\",showSample:false,showTest:true,sampleListColumns:[],subSampleListColumns:[],testListColumns:[],TableExpandableItem:[],SingleItem:[],SampleGridItem:[],SampleGridExpandableItem:[],sampleListMainField:[],subSampleListMainField:[],testListMainField:[],testMoreField:[],selectedRecord:{},validateFormulaMandyFields:[],splitChangeWidthPercentage:22,skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],subSampleSkip:0,subSampleTake:5,testskip:0,testtake:_this.props.Login.settings&&_this.props.Login.settings[12]};_this.formRef=React.createRef();//this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\nreturn _this;}_createClass(ResultEntry,[{key:\"showRETestList\",value:function showRETestList(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         showSample: false, \n//         showTest: true \n//         }\n//     }\n// this.props.updateStore(updateInfo);\nthis.setState({showTest:true,showSample:false});}// getMeanTestParameter =(meanParam)=>{\n//     const inputData = {npreregno:meanParam.selectedRecord.npreregno,\n//                        userinfo:this.props.Login.userInfo}\n//     return rsapi.post(\"resultentrybysample/getMeanCalculationTestParameter\", inputData)\n//         .then(response => {\n//            const list =  response.data || [];\n//            const optionList = [];\n//            list.map(item=>{optionList.push({item:item, label:item.stestsynonym+\"-\"+item.sparametername+\"-\"+item.sresult, value:item.ntransactiontestresultcode})})\n//            this.setState({meanTestParameterList:optionList});                \n//         })\n//         .catch(error => {\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             } else {\n//                 toast.warn(error.response.data);\n//             }\n//         })\n// }\n},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height});}}},{key:\"getActiveTestURL\",value:function getActiveTestURL(){var url=\"resultentrybysample/getTestbasedParameter\";switch(this.props.Login.activeTestKey){case\"IDS_RESULTS\":url=\"resultentrybysample/getTestbasedParameter\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";break;case\"IDS_DOCUMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"resultentrybysample/getResultChangeHistory\";break;case\"IDS_APPROVALHISTORY\":url=\"resultentrybysample/getSampleApprovalHistory\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"resultentrybysample/getTestbasedParameter\";break;}return url;}},{key:\"render\",value:function render(){var _testGetREParam,_this2=this;var sampleListRE=this.props.Login.masterData.RE_SAMPLE?sortData(this.props.Login.masterData.RE_SAMPLE,\"descending\",\"npreregno\"):[];//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\n//let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\n//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ?  this.props.Login.masterData.RE_SUBSAMPLE : []\n//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\n//let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\nvar subSampleListRE=this.props.Login.masterData.RE_SUBSAMPLE?this.props.Login.masterData.RE_SUBSAMPLE:[];//let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST : []\nvar testListRE=this.props.Login.masterData.RE_TEST?this.props.Login.masterData.RE_TEST:[];var startDate=this.props.Login.masterData.realFromDate||this.props.Login.masterData.fromDate||new Date();var endDate=this.props.Login.masterData.realToDate||this.props.Login.masterData.toDate||new Date();// let obj = this.covertDatetoString(startDate, endDate)\nvar obj=convertDateValuetoString(startDate,endDate,this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var subSampleGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),fromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestKey||'IDS_RESULTS',activeSampleKey:this.props.Login.activeSampleKey||'IDS_IDS_SAMPLEINFO',testskip:this.state.testskip,testtake:this.state.testtake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,searchSubSampleRef:this.searchSubSampleRef,searchTestRef:this.searchTestRef,//Aravindh\ncheckBoxOperation:3};var testGetREParam=(_testGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),activeTestKey:this.props.Login.activeTestKey||'IDS_RESULTS',activeSampleKey:this.props.Login.activeSampleKey||'IDS_IDS_SAMPLEINFO',resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,testskip:this.state.testskip,testtake:this.state.testtake},_defineProperty(_testGetREParam,\"resultDataState\",this.state.resultDataState),_defineProperty(_testGetREParam,\"instrumentDataState\",this.state.instrumentDataState),_defineProperty(_testGetREParam,\"materialDataState\",this.state.materialDataState),_defineProperty(_testGetREParam,\"taskDataState\",this.state.taskDataState),_defineProperty(_testGetREParam,\"documentDataState\",this.state.documentDataState),_defineProperty(_testGetREParam,\"resultChangeDataState\",this.state.resultChangeDataState),_defineProperty(_testGetREParam,\"testCommentDataState\",this.state.testCommentDataState),_defineProperty(_testGetREParam,\"historyDataState\",this.state.historyDataState),_defineProperty(_testGetREParam,\"samplePrintHistoryDataState\",this.state.samplePrintHistoryDataState),_defineProperty(_testGetREParam,\"sampleHistoryDataState\",this.state.sampleHistoryDataState),_testGetREParam);var testChildGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:this.props.Login.masterData.RESelectedSubSample&&this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),activeTestKey:this.props.Login.activeTestKey||'IDS_RESULTS',fromdate:fromDate,todate:toDate,testskip:this.state.testskip,testtake:this.state.testtake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode};var sampleSearchField=[\"sarno\",\"sproductname\",\"sproductcatname\",\"seprotocolname\",\"stransdisplaystatus\",\"sstorageconditionname\",\"sdecisionstatus\",\"scomponentname\",\"splasmafilenumber\",\"sversion\",\"sbulkvolume\",\"sregsubtypename\",\"smanuflotno\",\"sregtypename\",\"sspecname\",\"saddress1\",\"sclientname\",\"smanufsitename\",\"sproductcertificatename\",\"smanufname\",\"sstoragelocationname\",\"dregdate\"];if(this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode===RegistrationSubType.ROUTINE){sampleSearchField=[\"sarno\",\"sproductname\",\"sproductcatname\",\"sregsubtypename\",\"sregtypename\",\"sspecname\",\"smanufname\",\"sstorageconditionname\",\"sclientname\",\"scontainertype\",\"sdeadline\",\"sdecisionstatus\",\"sdeviationcomments\",\"sdispositionname\",\"slotno\",\"sbatchno\",\"sourfile\",\"speriodname\",\"spriorityname\",\"sreceiveddate\",\"sremarks\",\"sreportremarks\",\"ssamplecondition\",\"ssuppliername\",\"stotalqty\",\"stransdisplaystatus\"];}var filterSampleParam={inputListName:\"RE_SAMPLE\",selectedObject:\"RESelectedSample\",primaryKeyField:\"npreregno\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],fecthInputObject:{ntype:2,nflag:2,ntransactiontestcode:0,masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntranscode:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString():0:0),ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,//npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\nfromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestKey||'IDS_RESULTS',nneedsubsample:this.props.Login.masterData.nneedsubsample||4,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,checkBoxOperation:3},masterData:this.props.Login.masterData,// searchFieldList: [\"sarno\", \"ssampletypestatus\"],\nsearchFieldList:sampleSearchField,changeList:[\"RE_SUBSAMPLE\",\"RE_TEST\",\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedSample\",\"RESelectedSubSample\",\"RESelectedTest\"]};var filterSubSampleParam={inputListName:\"RE_SUBSAMPLE\",selectedObject:\"RESelectedSubSample\",primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"resultentrybysample/getResultEntrySubSampleDetails\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],fecthInputObject:{ntype:2,nflag:2,ntransactiontestcode:0,masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntranscode:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString():0:0),ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,//npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\nfromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestKey||'IDS_RESULTS',nneedsubsample:this.props.Login.masterData.nneedsubsample||4,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,checkBoxOperation:3},masterData:this.props.Login.masterData,// searchFieldList: [\"sarno\", \"ssampletypestatus\"],\nsearchFieldList:['ssamplearno'],changeList:[\"RE_TEST\",\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedSubSample\",\"RESelectedTest\"]};var filterTestParam={inputListName:\"RE_TEST\",selectedObject:\"RESelectedTest\",primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:{ntransactiontestcode:this.props.Login.masterData.RESelectedTest?this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\",userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"sarno\",\"stestsynonym\",\"dtransactiondate\",\"ssectionname\",\"ssourcename\",\"ntestrepeatno\",\"ntestretestno\",\"stransdisplaystatus\",\"stestsynonym\"],changeList:[\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedTest\"],ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,checkBoxOperation:3};this.postParamList=[{filteredListName:\"searchedSample\",clearFilter:\"no\",searchRef:this.searchSampleRef,primaryKeyField:\"npreregno\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",fecthInputObject:filterSampleParam,selectedObject:\"RESelectedSample\",inputListName:\"RE_SAMPLE\",updatedListname:\"\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedSubSample\",updatedListname:\"updatedSubSample\",clearFilter:\"no\",searchRef:this.searchSubSampleRef,primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",fecthInputObject:testGetREParam,selectedObject:\"RESelectedSubSample\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],inputListName:\"RE_SUBSAMPLE\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedTest\",clearFilter:\"yes\",searchRef:this.searchTestRef,primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchSampleRef,childFilteredListName:\"\"}],fecthInputObject:testChildGetREParam,selectedObject:\"RESelectedTest\",inputListName:\"RE_TEST\",updatedListname:\"updatedTest\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]}];this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},{\"label\":\"IDS_SAMPLETYPE\",\"value\":this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.ssampletypename?this.props.Login.masterData.realSampleTypeValue.ssampletypename:\"Product\"},{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"Batch\"},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"EU\"},{\"label\":\"IDS_CONFIGVERSION\",\"value\":this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.sversionname?this.props.Login.masterData.realApproveConfigVersion.sversionname:\"NA\"},{\"label\":\"IDS_FILTERSTATUS\",\"value\":this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.sfilterstatus:\"NA\"},{\"label\":\"IDS_TEST\",\"value\":this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.stestsynonym?this.props.Login.masterData.realTestcodeValue.stestsynonym:\"NA\"}];var testStartId=this.state.controlMap.has(\"TestStart\")&&this.state.controlMap.get(\"TestStart\").ncontrolcode;var resultEnterId=this.state.controlMap.has(\"ResultEnter\")&&this.state.controlMap.get(\"ResultEnter\").ncontrolcode;var completeResultId=this.state.controlMap.has(\"CompleteResult\")&&this.state.controlMap.get(\"CompleteResult\").ncontrolcode;var setDefaultId=this.state.controlMap.has(\"SetDefaultResult\")&&this.state.controlMap.get(\"SetDefaultResult\").ncontrolcode;var editSourceMethodId=this.state.controlMap.has(\"EditSourceMethod\")&&this.state.controlMap.get(\"EditSourceMethod\").ncontrolcode;var addResultUsedInstrumentId=this.state.controlMap.has(\"AddResultUsedInstrument\")&&this.state.controlMap.get(\"AddResultUsedInstrument\").ncontrolcode;var addResultUsedMaterailId=this.state.controlMap.has(\"AddResultUsedMaterial\")&&this.state.controlMap.get(\"AddResultUsedMaterial\").ncontrolcode;//const addResultUsedTaskId = this.state.controlMap.has(\"AddResultUsedTask\") && this.state.controlMap.get(\"AddResultUsedTask\").ncontrolcode\n//const parameterCommentsId = this.state.controlMap.has(\"AddParameterComments\") && this.state.controlMap.get(\"AddParameterComments\").ncontrolcode\nvar mandatoryFieldsInstrument=[{\"mandatory\":true,\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"ninstrumentcatcode\"},{\"mandatory\":true,\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"ninstrumentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_FORMDATE\",\"dataField\":\"dfromdate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TODATE\",\"dataField\":\"dtodate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntzfromdate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntztodate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsTask=[{\"mandatory\":true,\"idsName\":\"IDS_PREANALYSISTIME\",\"dataField\":\"spreanalysistime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PREPARATIONTIME\",\"dataField\":\"spreparationtime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_ANALYSISTIME\",\"dataField\":\"sanalysistime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_MISCTIME\",\"dataField\":\"smisctime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{ \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\" }\n];var mandatoryFieldsTestMethodSource=[{\"mandatory\":true,\"idsName\":\"IDS_SOURCE\",\"dataField\":\"nsourcecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_METHOD\",\"dataField\":\"nmethodcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];// const mandatoryFieldsCheckList=[{\"mandatory\": true, \"idsName\": \"IDS_SOURCE\", \"dataField\": \"nsourcecode\" },\n//    { \"mandatory\": true, \"idsName\": \"IDS_METHOD\", \"dataField\": \"nmethodcode\"}]\nvar mandatoryFieldsParameter=[{\"mandatory\":true,\"idsName\":\"IDS_PARAMETERCOMMENTS\",\"dataField\":\"sresultcomment\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var validateFormulaMandyFields=this.state.validateFormulaMandyFields;// const mandatoryFieldsTask = [{ \"mandatory\": true, \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\" },\n// { \"mandatory\": true, \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\" },\n// { \"mandatory\": true, \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\" },\n// { \"mandatory\": true, \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\" }]\nvar reportPreviewId=this.state.controlMap.has(\"SamplePreviewReport\")&&this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMasterJson// paneHeight={this.state.parentHeight}\n,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:this.props.Login.masterData.searchedSample||sampleListRE,selectedMaster:this.props.Login.masterData.RESelectedSample,primaryKeyField:\"npreregno\",getMasterDetail:this.props.getsubSampleREDetail,inputParam:subSampleGetREParam,additionalParam:['napprovalversioncode'],mainField:\"sarno\",selectedListName:\"RESelectedSample\",objectName:\"sample\",listName:\"IDS_SAMPLE\",needValidation:false,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",subFields:this.state.DynamicSampleColumns||[],moreField:this.state.sampleMoreField,needFilter:true,needMultiSelect:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onREFilterSubmit,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSample\",searchRef:this.searchSampleRef,handlePageChange:this.handlePageChange,filterParam:filterSampleParam,skip:this.state.skip,take:this.state.take,hidePaging:false,showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",selectionFieldName:\"sfilterstatus\",splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',childTabsKey:[\"RegistrationAttachment\",\"RE_SUBSAMPLE\",\"RE_TEST\",\"SampleApprovalHistory\"],selectionList:this.state.selectedFilter,selectionColorField:\"scolorhexcode\",selectionField:\"ntransactionstatus\",jsonField:'jsondata',jsonDesignFields:true,filterComponent:[{\"Sample Filter\":/*#__PURE__*/React.createElement(ResultEntryFilter,{fromDate:this.props.Login.masterData.fromDate?//new Date(this.props.Login.masterData.fromDate) \nrearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):new Date(),toDate:this.props.Login.masterData.toDate?//new Date(this.props.Login.masterData.toDate) \nrearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):new Date(),SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.props.Login.masterData.defaultRegistrationSubType||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.REFilterStatus||[],FilterStatusValue:this.props.Login.masterData.defaultFilterStatus||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.props.Login.masterData.defaultApprovalConfigVersion||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.defaultTestvalues||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo})}],actionIcons:[this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL?{title:\"Report\",controlname:\"reports\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(reportPreviewId)===-1,onClick:this.props.previewSampleReport,inputData:{userinfo:this.props.Login.userInfo,ncontrolcode:reportPreviewId}}:{}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this2.onReload();},\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}}))))}),this.props.Login.masterData.nneedsubsample?/*#__PURE__*/React.createElement(ScrollBar,{ref:function ref(_ref3){_this2._scrollBarRef=_ref3;}},/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:\"detailed-inner\",vertical:true,borderColor:\"#999\",primaryIndex:1,onSecondaryPaneSizeChange:this.verticalPaneSizeChange,secondaryInitialSize:400},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:30},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_SUBSAMPLE\"})))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0 spliterHeight\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth,masterList:this.props.Login.masterData.searchedSubSample||subSampleListRE,selectedMaster:this.props.Login.masterData.RESelectedSubSample,primaryKeyField:\"ntransactionsamplecode\",getMasterDetail:this.props.getTestREDetail,inputParam:testGetREParam,additionalParam:[],mainField:\"ssamplearno\",selectedListName:\"RESelectedSubSample\",objectName:\"subSample\",listName:\"IDS_SUBSAMPLE\",jsonField:'jsondata',jsonDesignFields:true,subFields:this.state.DynamicSubSampleColumns,moreField:this.state.subSampleMoreField,needValidation:false,needMultiSelect:true,needFilter:false,skip:this.state.subSampleSkip,take:this.state.subSampleTake,handlePageChange:this.handleSubSamplePageChange,showStatusLink:true,showStatusName:true,selectionList:this.state.selectedFilter,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",childTabsKey:[\"RE_TEST\"],filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSubSample\",searchRef:this.searchSubSampleRef,filterParam:filterSubSampleParam}))),/*#__PURE__*/React.createElement(ContentPanel,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary headerBtn\",style:{float:\"right\"},onClick:function onClick(){return _this2.showRESampleInfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:this.state.initialVerticalWidth// paneHeight={`${testListRE && testListRE !== null && testListRE.length > 0 ? testListRE.length * 13 : 5}vh`}\n,masterList:this.props.Login.masterData.searchedTest||testListRE,selectedMaster:this.props.Login.masterData.RESelectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabREDetail,inputParam:testChildGetREParam,subFieldsLabel:true,additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"RESelectedTest\",objectName:\"test\",listName:\"IDS_TEST\",pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:filterTestParam,selectionField:\"ntransactionstatus\",showStatusName:true,selectionFieldName:\"sfilterstatus\",childTabsKey:[\"TestParameters\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"ResultChangeHistory\",\"RegistrationTestComment\",\"ResultChangeHistory\"],selectionList:this.props.Login.masterData.REFilterStatus&&this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.REFilterStatus:[],skip:this.state.testskip,take:this.state.testtake,handlePageChange:this.handleTestPageChange,selectionColorField:\"scolorhexcode\",showMoreResetList:true,showMoreResetListName:\"RE_SAMPLE\",buttonCount:5,jsonField:'jsondata',jsonDesignFields:true,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDITMETHODSSOURCE\"}),controlname:\"faPencilAlt\",dataplace:\"left\",hidden:this.state.userRoleControlRights.indexOf(editSourceMethodId)===-1,onClick:this.testMethodSourceEdit,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editSourceMethodId:editSourceMethodId}},{title:this.props.intl.formatMessage({id:\"IDS_ADDINSTRUMENT\"}),controlname:\"faMicroscope\",hidden:this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId)===-1,onClick:this.addREInstrument,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedInstrumentId:addResultUsedInstrumentId}},{title:this.props.intl.formatMessage({id:\"IDS_ADDMATERIAL\"}),controlname:\"faFlask\",hidden:this.state.userRoleControlRights.indexOf(addResultUsedMaterailId)===-1,onClick:this.props.addREMaterial,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedMaterailId:addResultUsedMaterailId}}// { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\n],commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},testListRE.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_TESTSTART\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.testStartActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,testStartId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENTERRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(resultEnterId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.props.resultGetModule(_this2.props.Login.masterData,_this2.props.Login.userInfo,resultEnterId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_FILLDEFAULTRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(setDefaultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.defaultActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.masterData.RESelectedSample,setDefaultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilRuler})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),hidden:this.state.userRoleControlRights.indexOf(completeResultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.completeActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(completeResultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.resultImport(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))):\"\")// </Tooltip>\n})))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"},onClick:function onClick(){return _this2.showRETestList();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.length>0?this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length-1]:{},SingleItem:this.state.SingleItem,screenName:\"IDS_SAMPLEINFO\",userInfo:this.props.Login.userInfo}):/*#__PURE__*/React.createElement(SampleInfoGrid,{selectedSample:this.props.Login.masterData.RESelectedSample,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleGridDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],userInfo:this.props.Login.userInfo,inputParam:this.props.Login.inputParam,screenName:\"IDS_SAMPLEGRID\",jsonField:\"jsondata\"}))))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:\"calc(110vh - \"+(+this.state.initialVerticalWidth+100)+\"px)\"}},this.state.showTest?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestKey||\"IDS_RESULTS\",tabDetail:this.testRETabDetail(),onTabChange:this.onTestTabChange}):/*#__PURE__*/React.createElement(CustomTabs,{tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange})))))):/*#__PURE__*/React.createElement(PerfectScrollbar,{ref:function ref(_ref4){_this2._scrollBarRef=_ref4;}},/*#__PURE__*/React.createElement(SplitterLayout,{vertical:true,borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:400,customClassName:\"fixed_list_height\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showTest===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"},onClick:function onClick(){return _this2.showRESampleInfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(TransactionListMasterJson,{paneHeight:\"\".concat(testListRE&&testListRE!==null&&testListRE.length>0?testListRE.length*13:5,\"vh\"),masterList:this.props.Login.masterData.searchedTest||testListRE,selectedMaster:this.props.Login.masterData.RESelectedTest,primaryKeyField:\"ntransactiontestcode\",getMasterDetail:this.props.getTestChildTabREDetail,inputParam:testChildGetREParam,additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"RESelectedTest\",objectName:\"test\",listName:\"IDS_TEST\",pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:filterTestParam,selectionField:\"ntransactionstatus\",showStatusName:true,selectionFieldName:\"sfilterstatus\",childTabsKey:[\"TestParameters\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"ResultChangeHistory\",\"RegistrationTestComment\",\"ResultChangeHistory\"],selectionList:this.props.Login.masterData.REFilterStatus&&this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus===transactionStatus.ALL?this.props.Login.masterData.REFilterStatus:[],skip:this.state.testskip,take:this.state.testtake,handlePageChange:this.handleTestPageChange,selectionColorField:\"scolorhexcode\",showMoreResetList:true,showMoreResetListName:\"RE_SAMPLE\",buttonCount:5,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDITMETHODSSOURCE\"}),controlname:\"faPencilAlt\",dataplace:\"left\",hidden:this.state.userRoleControlRights.indexOf(editSourceMethodId)===-1,onClick:this.testMethodSourceEdit,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editSourceMethodId:editSourceMethodId}},{title:this.props.intl.formatMessage({id:\"IDS_ADDINSTRUMENT\"}),controlname:\"faMicroscope\",hidden:this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId)===-1,onClick:this.addREInstrument,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedInstrumentId:addResultUsedInstrumentId}},{title:this.props.intl.formatMessage({id:\"IDS_ADDMATERIAL\"}),controlname:\"faFlask\",hidden:this.state.userRoleControlRights.indexOf(addResultUsedMaterailId)===-1,onClick:this.props.addREMaterial,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedMaterailId:addResultUsedMaterailId}}// { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\n],commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},testListRE.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_TESTSTART\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENTERRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(resultEnterId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.props.resultGetModule(_this2.props.Login.masterData,_this2.props.Login.userInfo,resultEnterId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_FILLDEFAULTRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(setDefaultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.defaultActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.masterData.RESelectedSample,setDefaultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilRuler})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),hidden:this.state.userRoleControlRights.indexOf(completeResultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.completeActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle})),/*#__PURE__*/React.createElement(Nav.Link,{\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(completeResultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.resultImport(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))):\"\")// </Tooltip>\n})))))))),/*#__PURE__*/React.createElement(ContentPanel,{style:this.state.showSample===true?{display:\"block\"}:{display:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card,{className:\"p-0\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\"},onClick:function onClick(){return _this2.showRETestList();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.length>0?this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length-1]:{},SingleItem:this.state.SingleItem,screenName:\"IDS_SAMPLEINFO\"}):/*#__PURE__*/React.createElement(SampleInfoGrid,{selectedSample:this.props.Login.masterData.RESelectedSample,dataState:this.state.sampleGridDataState,dataStateChange:this.sampleGridDataStateChange,extractedColumnList:this.gridfillingColumn(this.state.DynamicGridItem)||[],detailedFieldList:this.gridfillingColumn(this.state.DynamicGridMoreField)||[],userInfo:this.props.Login.userInfo,inputParam:this.props.Login.inputParam,screenName:\"IDS_SAMPLEGRID\",jsonField:\"jsondata\"})))))),this.state.showTest?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:this.props.Login.activeTestKey||\"IDS_RESULTS\",tabDetail:this.testRETabDetail(),onTabChange:this.onTestTabChange}):/*#__PURE__*/React.createElement(CustomTabs,{tabDetail:this.sampleTabDetail(),onTabChange:this.onSampleTabChange}))))))))))),/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:this.props.Login.screenName==='IDS_MEANPARAMETER'?\"xl\":\"lg\",closeModal:this.closeModal,operation:this.props.Login.screenName==='IDS_RESULTENTRY'?\"\":this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,selectedRecord:this.props.Login.screenName==='IDS_RESULTFORMULA'?this.state.selectedRecord.selectedMandatory:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName==='IDS_INSTRUMENT'?mandatoryFieldsInstrument:this.props.Login.screenName==='IDS_TASK'?mandatoryFieldsTask:this.props.Login.screenName==='IDS_TESTMETHODSOURCE'?mandatoryFieldsTestMethodSource:this.props.Login.screenName==='IDS_PARAMETERCOMMENTS'?mandatoryFieldsParameter:this.props.Login.screenName==='IDS_RESULTFORMULA'?validateFormulaMandyFields:[],esign:this.props.Login.loadEsign,innerPopup:this.props.Login.screenName,validateEsign:this.validateEsign,onSaveClick:this.props.Login.showValidate?this.calculateFormula:this.props.Login.screenName==='IDS_RESULTIMPORTFILE'?this.onSaveFileClick:this.onSaveClick,showValidate:this.props.Login.showValidate,modalEvent:this.state.modalEvent,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName==='IDS_RESULTENTRY'?/*#__PURE__*/React.createElement(ResultEntryForm,{predefinedValues:this.props.Login.masterData.PredefinedValues,defaultPredefinedValues:this.props.Login.masterData.PredefinedValues,gradeValues:this.props.Login.masterData.GradeValues||[],selectedNumericData:this.props.Login.masterData.selectedNumericData,selectedResultGrade:this.state.selectedRecord.selectedResultGrade||[],paremterResultcode:this.props.Login.masterData.paremterResultcode||[],parameterResults:this.state.selectedRecord.ResultParameter||[],Login:this.props.Login,handleClose:this.handleClose,onSaveClick:this.onSaveClick,onResultInputChange:this.onResultInputChange,onGradeEvent:this.onGradeEvent,getFormula:this.getFormula,onDropTestFile:this.onDropTestFile,onKeyPress:this.onKeyPress,needSubSample:this.props.Login.masterData.nneedsubsample}):this.props.Login.screenName==='IDS_TESTMETHODSOURCE'?/*#__PURE__*/React.createElement(TestEditForm,{methodValues:this.props.Login.masterData.MethodData,sourceValues:this.props.Login.masterData.SourceData,selecteRecord:this.state.selectedRecord||{},onComboChange:this.onComboChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_INSTRUMENT'?/*#__PURE__*/React.createElement(ResultEntryInstrumentForm,{instrumentcatValue:this.props.Login.masterData.InstrumentCategory,instrumentValue:this.props.Login.masterData.Instrument,selecteRecord:this.state.selectedRecord||{},timeZoneListData:this.props.Login.timeZoneList||[],onComboChange:this.onComboChange,onComboCategoryChange:this.onComboCategoryChange,onDateChange:this.onDateChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick,userInfo:this.props.Login.userInfo,needSubSample:this.props.Login.masterData.nneedsubsample}):this.props.Login.screenName==='IDS_MATERIAL'?/*#__PURE__*/React.createElement(ResultEntryMaterialForm,{materialType:this.props.Login.materialType,materialCategory:this.props.Login.materialCat,material:this.props.Login.material,materialInventory:this.props.Login.materialInventory,selectedRecord:this.state.selectedRecord||{},onMaterialComboChange:this.onMaterialComboChange,onInputOnChange:this.onInputOnChange,onDateChange:this.onDateChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick,userInfo:this.props.Login.userInfo,needSubSample:this.props.Login.masterData.nneedsubsample}):this.props.Login.screenName==='IDS_TASK'?/*#__PURE__*/React.createElement(ResultEntryTaskForm,{selecteRecord:this.state.selectedRecord||{},onNumericChange:this.onNumericChange,onInputChange:this.onInputChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_PARAMETERCOMMENTS'?/*#__PURE__*/React.createElement(ResultEntryParamCommetsForm,{selecteRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_RESULTFORMULA'?/*#__PURE__*/React.createElement(ResultEntryFormulaForm,{DynamicFields:this.props.Login.masterData.DynamicFormulaFields// formRef={this.formRef}\n,handleClose:this.handleClose,screenName:this.props.Login.screenName//selectedForumulaInput={this.state.selectedForumulaInput || []}\n,onFormulaInputChange:this.onFormulaInputChange,Login:this.props.Login,showValidate:this.props.Login.showValidate,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName==='IDS_RESULTIMPORTFILE'?/*#__PURE__*/React.createElement(ResultEntryImport,{handleClose:this.handleClose,screenName:this.props.Login.screenName,onDropFile:this.onDropFile,selectedImportFile:this.props.Login.masterData.selectedImportFile||{},deleteAttachment:this.deleteAttachment}):this.props.Login.screenName==='IDS_MEANPARAMETER'?/*#__PURE__*/React.createElement(ResultEntryMean// onInputOnChange={this.onMeanInputOnChange}\n// onComboChange={this.onMeanComboChange}\n,{screenName:this.props.Login.screenName,headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,selectAll:this.state.selectAll,testMean:this.state.testMean,meanTestParameterList:this.state.meanTestParameterList||[],selectedTestParam:this.state.selectedTestParam}):\"\"}),this.props.Login.masterData.ChecklistData&&this.props.Login.screenName==='IDS_CHECKLISTRESULT'?/*#__PURE__*/React.createElement(TemplateForm,{templateData:this.props.Login.masterData.ChecklistData,nregtypecode:parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode),nregsubtypecode:parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode),needSaveButton:this.props.Login.needSaveButton,formRef:this.formRef,onTemplateInputChange:this.onTemplateInputChange,handleClose:this.closeModal,onTemplateComboChange:this.onTemplateComboChange,screenName:this.props.Login.screenName,onSaveClick:this.onSaveCheckList,Login:this.props.Login,viewScreen:this.props.Login.openTemplateModal,selectedRecord:this.state.selectedRecord||[],onTemplateDateChange:this.onTemplateDateChange,needValidation:true}):\"\");}},{key:\"valiateCheckAll\",value:function valiateCheckAll(data){var selectAll=true;if(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;}});}else{selectAll=false;}return selectAll;}},{key:\"updateTestMethodSource\",value:function updateTestMethodSource(inputData,masterData,ncontrolcode){var inputParam={inputData:_objectSpread(_objectSpread({},inputData),{},{'userinfo':this.props.Login.userInfo,ncontrolcode:ncontrolcode}),// formData: formData,\n// isFileupload: true,\noperation:\"createMethod\",screenName:\"IDS_TESTMETHODSOURCE\",displayName:this.props.Login.inputParam.displayName,//, postParam,\n//inputData1: inputData,\nmasterData:masterData};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,//screenName: \"completeaction\",\noperation:\"createMethod\"}};this.props.updateStore(updateInfo);}else{this.props.updateTestMethodSource(inputData,masterData);}}},{key:\"updateParameterComments\",value:function updateParameterComments(inputData,masterData,ncontrolcode){// let inputData1 = { ...inputData, ncontrolcode }\nvar inputParam={inputData:_objectSpread(_objectSpread({},inputData),{},{ncontrolcode:ncontrolcode,'userinfo':this.props.Login.userInfo}),operation:this.props.Login.operation,screenName:\"IDS_RESULT\",displayName:this.props.Login.inputParam.displayName,//, postParam,\n//inputData: inputData1,\nmasterData:masterData};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,//screenName: \"completeaction\",\noperation:\"updateParameterComments\"}};this.props.updateStore(updateInfo);}else{this.props.updateParameterComments(inputData,masterData);}}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this3=this;//  const tempArray = [];\nvar temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this3.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\"};});return temparray;}},{key:\"constructDesign\",value:function constructDesign(list){var newList=[];if(list.length>0){list.map(function(i){var _newList$push;newList.push((_newList$push={},_defineProperty(_newList$push,designProperties.LABEL,i),_defineProperty(_newList$push,designProperties.VALUE,i),_newList$push));});}return newList;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state4=this.state,showTest=_this$state4.showTest,showSample=_this$state4.showSample,userRoleControlRights=_this$state4.userRoleControlRights,controlMap=_this$state4.controlMap,resultDataState=_this$state4.resultDataState,instrumentDataState=_this$state4.instrumentDataState,materialDataState=_this$state4.materialDataState,taskDataState=_this$state4.taskDataState,documentDataState=_this$state4.documentDataState,resultChangeDataState=_this$state4.resultChangeDataState,testCommentDataState=_this$state4.testCommentDataState,historyDataState=_this$state4.historyDataState,sampleListColumns=_this$state4.sampleListColumns,subSampleListColumns=_this$state4.subSampleListColumns,testListColumns=_this$state4.testListColumns,SingleItem=_this$state4.SingleItem,sampleListMainField=_this$state4.sampleListMainField,subSampleListMainField=_this$state4.subSampleListMainField,testListMainField=_this$state4.testListMainField,SampleGridItem=_this$state4.SampleGridItem,SampleGridExpandableItem=_this$state4.SampleGridExpandableItem,sampleMoreField=_this$state4.sampleMoreField,subSampleMoreField=_this$state4.subSampleMoreField,testMoreField=_this$state4.testMoreField,selectedRecord=_this$state4.selectedRecord,SampleType=_this$state4.SampleType,RegistrationType=_this$state4.RegistrationType,RegistrationSubType=_this$state4.RegistrationSubType,REFilterStatus=_this$state4.REFilterStatus,REJobStatus=_this$state4.REJobStatus,Testvalues=_this$state4.Testvalues,ApprovalConfigVersion=_this$state4.ApprovalConfigVersion,DynamicSampleColumns=_this$state4.DynamicSampleColumns,DynamicSubSampleColumns=_this$state4.DynamicSubSampleColumns,DynamicTestColumns=_this$state4.DynamicTestColumns,DynamicGridItem=_this$state4.DynamicGridItem,DynamicGridMoreField=_this$state4.DynamicGridMoreField,validateFormulaMandyFields=_this$state4.validateFormulaMandyFields,skip=_this$state4.skip,take=_this$state4.take,testskip=_this$state4.testskip,testtake=_this$state4.testtake,selectedFilter=_this$state4.selectedFilter;var bool=false;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){bool=true;this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);DynamicSampleColumns=dynamicColumn.samplelistitem?dynamicColumn.samplelistitem:[];DynamicSubSampleColumns=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];DynamicTestColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];DynamicGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];DynamicGridMoreField=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];SingleItem=dynamicColumn.sampledisplayfields?dynamicColumn.sampledisplayfields:[];testMoreField=dynamicColumn.testlistmoreitem?dynamicColumn.testlistmoreitem:[];testListColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];bool=true;}if(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var dataSate={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5,group:[{field:\"\".concat(this.props.Login.masterData.nneedsubsample?'ssamplearno':'sarno')}]};bool=true;resultDataState=dataSate;instrumentDataState=dataSate;materialDataState=dataSate;taskDataState=dataSate;documentDataState=dataSate;resultChangeDataState=dataSate;historyDataState=dataSate;testCommentDataState=dataSate;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){bool=true;selectedRecord=this.props.Login.selectedRecord;}if(this.props.Login.validateFormulaMandyFields!==previousProps.Login.validateFormulaMandyFields){bool=true;validateFormulaMandyFields=this.props.Login.validateFormulaMandyFields;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);REFilterStatus=constructOptionList(this.props.Login.masterData.REFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",'descending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestsynonym','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;if(this.props.Login.resultDataState&&this.props.Login.resultDataState!==previousProps.Login.resultDataState){resultDataState=this.props.Login.resultDataState;}if(this.props.Login.instrumentDataState&&this.props.Login.instrumentDataState!==previousProps.Login.instrumentDataState){instrumentDataState=this.props.Login.instrumentDataState;}if(this.props.Login.taskDataState&&this.props.Login.taskDataState!==previousProps.Login.taskDataState){taskDataState=this.props.Login.taskDataState;}if(this.props.Login.resultChangeDataState&&this.props.Login.resultChangeDataState!==previousProps.Login.resultChangeDataState){resultChangeDataState=this.props.Login.resultChangeDataState;}if(this.props.Login.historyDataState&&this.props.Login.historyDataState!==previousProps.Login.historyDataState){historyDataState=this.props.Login.historyDataState;}if(this.props.Login.testCommentDataState&&this.props.Login.testCommentDataState!==previousProps.Login.testCommentDataState){testCommentDataState=this.props.Login.testCommentDataState;}// if (this.props.Login.masterData.DynamicColumns && this.props.Login.masterData.DynamicColumns !== previousProps.Login.masterData.DynamicColumns) {\n//     bool = true;\n//     sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 3);\n//     subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 3);\n//     testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 3);\n//     sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 8);\n//     subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 8);\n//     testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 8);\n//     SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 4)\n//     SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 5)\n//     SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 6)\n//     sampleMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 7)\n//     subSampleMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 7)\n//     testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 7)\n// }\nvar selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.REFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {masterData: this.props.Login.masterData,showTest,showSample }\n// }\n// this.props.updateStore(updateInfo);\nSampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");REFilterStatus=REFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");}if(bool){this.setState({showTest:showTest,showSample:showSample,userRoleControlRights:userRoleControlRights,controlMap:controlMap,resultDataState:resultDataState,instrumentDataState:instrumentDataState,materialDataState:materialDataState,taskDataState:taskDataState,documentDataState:documentDataState,resultChangeDataState:resultChangeDataState,testCommentDataState:testCommentDataState,historyDataState:historyDataState,sampleListColumns:sampleListColumns,subSampleListColumns:subSampleListColumns,testListColumns:testListColumns,SingleItem:SingleItem,sampleListMainField:sampleListMainField,subSampleListMainField:subSampleListMainField,testListMainField:testListMainField,SampleGridItem:SampleGridItem,SampleGridExpandableItem:SampleGridExpandableItem,sampleMoreField:sampleMoreField,subSampleMoreField:subSampleMoreField,testMoreField:testMoreField,selectedRecord:selectedRecord,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,REFilterStatus:REFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,validateFormulaMandyFields:validateFormulaMandyFields,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,DynamicSampleColumns:DynamicSampleColumns,DynamicSubSampleColumns:DynamicSubSampleColumns,DynamicTestColumns:DynamicTestColumns,DynamicGridItem:DynamicGridItem,DynamicGridMoreField:DynamicGridMoreField});}if(this.props.Login.meanTestParameterList!==previousProps.Login.meanTestParameterList){this.setState({meanTestParameterList:this.props.Login.meanTestParameterList});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\nreturn null;}}]);return ResultEntry;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{Login:state.Login};};export default connect(mapStatetoProps,{crudMaster:crudMaster,updateStore:updateStore,getsubSampleREDetail:getsubSampleREDetail,getTestREDetail:getTestREDetail,getTestChildTabREDetail:getTestChildTabREDetail,resultGetModule:resultGetModule,completeTest:completeTest,testMethodSourceEdit:testMethodSourceEdit,addREInstrument:addREInstrument,addREMaterial:addREMaterial,deleteInstrumentRecord:deleteInstrumentRecord,fetchInstrumentRecord:fetchInstrumentRecord,deleteTaskRecord:deleteTaskRecord,fetchTaskRecord:fetchTaskRecord,parameterRecord:parameterRecord,checkListRecord:checkListRecord,onSaveCheckList:onSaveCheckList,defaultTest:defaultTest,getFormula:getFormula,getRERegistrationType:getRERegistrationType,getRERegistrationSubType:getRERegistrationSubType,fetchMaterialRecord:fetchMaterialRecord,getREApprovalConfigVersion:getREApprovalConfigVersion,getResultEntryDetails:getResultEntryDetails,calculateFormula:calculateFormula,getREFilterStatus:getREFilterStatus,getREFilterTestData:getREFilterTestData,getREJobStatus:getREJobStatus,getSampleChildTabREDetail:getSampleChildTabREDetail,viewAttachment:viewAttachment,getAttachmentCombo:getAttachmentCombo,deleteAttachment:deleteAttachment,resultImportFile:resultImportFile,validateEsignCredentialComplete:validateEsignCredentialComplete,getCommentsCombo:getCommentsCombo,updateTestMethodSource:updateTestMethodSource,filterTransactionList:filterTransactionList,validateEsignCredential:validateEsignCredential,updateParameterComments:updateParameterComments,previewSampleReport:previewSampleReport,getMeanCalculationTestParameter:getMeanCalculationTestParameter,getREMaterialCategoryByType:getREMaterialCategoryByType,getREMaterialByCategory:getREMaterialByCategory,getREMaterialInvertoryByMaterial:getREMaterialInvertoryByMaterial,getAvailableMaterialQuantity:getAvailableMaterialQuantity,testStart:testStart//,deleteResultUsedMaterial\n})(injectIntl(ResultEntry));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntry.jsx"],"names":["React","Component","faPlay","faAddressBook","faCheckCircle","faEye","faPencilRuler","faFileImport","faSync","Card","Col","Row","Nav","Button","injectIntl","connect","ListWrapper","FontAwesomeIcon","SplitterLayout","ContentPanel","crudMaster","updateStore","getsubSampleREDetail","getTestREDetail","getTestChildTabREDetail","resultGetModule","fetchMaterialRecord","completeTest","testMethodSourceEdit","addREInstrument","addREMaterial","deleteInstrumentRecord","fetchInstrumentRecord","deleteTaskRecord","fetchTaskRecord","parameterRecord","checkListRecord","onSaveCheckList","defaultTest","getFormula","getRERegistrationType","getRERegistrationSubType","getREApprovalConfigVersion","getResultEntryDetails","calculateFormula","getREFilterStatus","getREFilterTestData","getREJobStatus","viewAttachment","validateEsignCredentialComplete","getAttachmentCombo","deleteAttachment","getCommentsCombo","updateTestMethodSource","resultImportFile","filterTransactionList","validateEsignCredential","getSampleChildTabREDetail","updateParameterComments","getREMaterialCategoryByType","getREMaterialByCategory","getREMaterialInvertoryByMaterial","previewSampleReport","getMeanCalculationTestParameter","getAvailableMaterialQuantity","testStart","sortData","create_UUID","getControlMap","listDataFromDynamicArray","formatInputDate","validateTwoDigitDate","showEsign","constructOptionList","deleteAttachmentDropZone","rsapi","toast","parameterType","grade","transactionStatus","RegistrationType","RegistrationSubType","FORMULAFIELDTYPE","designProperties","TransactionListMasterJson","ProductList","CustomTabs","ResultEntryResultsTab","DEFAULT_RETURN","SlideOutModal","Esign","BreadcrumbComponent","ResultEntryFilter","ResultEntryInstrumentForm","ResultEntryForm","TestEditForm","SampleInfoView","SampleInfoGrid","ApprovalInstrumentTab","ResultEntryTaskTab","ResultEntryTaskForm","ResultEntryParamCommetsForm","TemplateForm","templateChangeHandler","numberConversion","numericGrade","PerfectScrollbar","ResultEntryFormulaForm","SampleApprovalHistory","ResultChangeHistoryTab","Attachments","Comments","onSaveSampleAttachment","onSaveTestAttachment","onSaveTestComments","ResultEntryImport","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","ResultEntryMean","ScrollBar","ResultEntryMaterialForm","UsedMaterial","ResultEntry","props","paneSizeChange","d","setState","splitChangeWidthPercentage","event","file","fieldName","selectedRecord","Login","masterData","selectedImportFile","updateInfo","typeName","data","closeModal","loadEsign","openModal","openTemplateModal","screenName","operation","loadFile","showValidate","validateFormulaMandyFields","onFilterComboChange","fieldname","inputData","dateObj","toDate","userInfo","nflag","fromdate","fromDate","todate","nsampletypecode","parseInt","defaultSampleType","nregtypecode","defaultRegistrationType","nregsubtypecode","defaultRegistrationSubType","ntranscode","String","defaultFilterStatus","ntransactionstatus","userinfo","obj","state","value","item","napprovalversioncode","defaultApprovalConfigVersion","napprovalconfigversioncode","njobstatuscode","defaultjobstatus","defaultTestvalues","OnDateConverstion","date","month","getMonth","day","getDate","getFullYear","onReload","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realApproveConfigVersion","realFilterStatusValue","realTestcodeValue","ntestcode","ntransactiontestcode","activeTestKey","showTest","showSample","checkBoxOperation","ndesigntemplatemappingcode","inpuParamData","refs","searchSampleRef","searchSubSampleRef","searchTestRef","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","warn","intl","formatMessage","id","onREFilterSubmit","nneedsubsample","undefined","onSecondaryPaneSizeChange","e","val","onComboCategoryChange","uRL","ninstrumentcatcode","ncalibrationRequired","ncalibrationreq","post","then","response","TagInstrument","Instrument","TagListInstrument","get","catch","error","status","message","showRESampleInfo","testRETabDetail","testTabMap","Map","RESelectedTest","map","test","join","testskip","testtake","testList","RE_TEST","slice","meanControlId","controlMap","has","ncontrolcode","selectedTestList","set","inputParam","dataStateChange","primaryKeyField","selectedId","userRoleControlRights","ncontrolCode","deleteMaterialRecord","addResultEntryTask","onAttachmentSaveClick","RegistrationTestAttachment","VALUE","methodUrl","esignRights","masterList","onCommentsSaveClick","RegistrationTestComment","ResultChangeHistory","sampleDataStateChange","activeSampleKey","sampleHistoryDataState","dataState","sampleGridDataState","sampleGridDataStateChange","sampleTabDetail","tabMap","npreregno","RESelectedSample","sample","RegistrationAttachment","onSampleTabChange","tabProps","length","toString","preregno","ntransactionsamplecode","RESelectedSubSample","subsamplecode","onTestTabChange","displayName","nformcode","screenData","classUrl","nresultusedmaterialcode","stestsynonym","addResultUsedTaskId","parameterData","index","modalEvent","currentTarget","selectedForumulaInput","lstDynamicFields","dynamicfields","push","selectedResultGrade","ResultParameter","resultImport","closeFilter","showFilter","handlePageChange","skip","take","setTimeout","_scrollBarRef","updateScroll","handleSubSamplePageChange","subSampleSkip","subSampleTake","handleTestPageChange","sampletakeDataState","verticalPaneSizeChange","initialVerticalWidth","defaultActions","testChildGetREParam","setDefaultId","TestList","splice","acceptTestList","completeActions","completeResultId","postParamList","testStartActions","validateEsign","sreason","password","onEsignInputOnChange","target","type","name","checked","YES","NO","onInputOnChange","onSaveFileClick","saveType","formRef","acceptedFile","sfilename","formData","FormData","forEach","append","JSON","stringify","x","onDropFile","onFormulaInputChange","fields","selectedMandatory","dynamicformulafields","ndynamicformulafieldcode","INTEGER","replace","formulainput","svalues","sparameter","sdescription","onTemplateInputChange","control","onTemplateComboChange","comboData","onTemplateDateChange","dateData","handleDateChange","dateName","dateValue","Date","onInputChange","Data","onNumericChange","numericData","numericName","onDateChange","headerSelectionChange","syntheticEvent","meanTestParameterList","selectedMeanTestParam","selected","ntransactionresultcode","sresult","selectedTestParam","selectedTestParamMean","size","values","testMean","selectAll","selectionChange","dataItem","delete","valiateCheckAll","onMeanComboChange","comboName","onMaterialComboChange","onComboChange","onGradeEvent","parameter","nparametertypecode","NUMERIC","ngradecode","parseFloat","nroundingdigits","PREDEFINED","CHARACTER","saveParam","isTestComment","sampleList","RE_SAMPLE","selectedSampleList","selectedMaster","onKeyPress","paremterResultcode","keyCode","i","form","elements","focus","preventDefault","onResultInputChange","ncalculatedresult","spredefinedname","ATTACHMENT","onSaveMean","resultParameter","selectedTestParameterMean","nroundingdigit","nuserrole","nusercode","isFileupload","onSaveClick","neditable","resultParameters","resultData","results","editable","sfinal","FIO","splittedFileName","split","fileExtension","uniquefilename","ssystemfilename","nfilesize","Object","loading","tests","ntype","nmethodcode","nsourcecode","ResultUsedInstrument","nresultusedinstrumentcode","ninstrumentcode","dfromdate","dtodate","stzfromdate","ntzfromdate","label","stztodate","ntztodate","transactiontestcode","susedquantity","savailablequantity","ResultUsedMaterial","nmaterialtypecode","nmaterialcategorycode","nmaterialcode","ninventorycode","nmaterialinventorycode","nsectioncode","jsondata","sarno","ssamplearno","smaterialcatname","nmaterialcatcode","smaterialname","sinventoryid","nqtyused","scarriergas","smobilephase","sremarks","susername","MaterialInventoryTrans","IDS_INVENTORYID","sanalysistime","smisctime","spreanalysistime","spreparationtime","scomments","ResultUsedTasks","nresultusedtaskcode","sanalyst","taskArry","info","sresultcomment","lstResultCheckList","editedQB","qbcode","ResultCheckList","createRef","settings","group","field","masterStatus","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SingleItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","parentHeight","height","clientHeight","firstPane","url","sampleListRE","subSampleListRE","RE_SUBSAMPLE","testListRE","startDate","endDate","subSampleGetREParam","testGetREParam","samplePrintHistoryDataState","sampleSearchField","ROUTINE","filterSampleParam","inputListName","selectedObject","fetchUrl","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","breadCrumbData","breadCrumbFrom","breadCrumbto","ssampletypename","sregtypename","sregsubtypename","sversionname","sfilterstatus","testStartId","resultEnterId","editSourceMethodId","addResultUsedInstrumentId","addResultUsedMaterailId","mandatoryFieldsInstrument","mandatoryFieldsTask","mandatoryFieldsTestMethodSource","mandatoryFieldsParameter","reportPreviewId","searchedSample","DynamicSampleColumns","sampleMoreField","openFilter","selectedFilter","SampleType","DesignTemplateMappingValue","REFilterStatus","ApprovalConfigVersion","REJobStatus","Testvalues","PLASMA_POOL","title","controlname","objectName","hidden","indexOf","onClick","display","background","borderBottom","searchedSubSample","DynamicSubSampleColumns","subSampleMoreField","float","searchedTest","setting","ALL","dataplace","marginTop","showRETestList","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","PredefinedValues","GradeValues","selectedNumericData","handleClose","onDropTestFile","MethodData","SourceData","InstrumentCategory","timeZoneList","materialType","materialCat","material","materialInventory","DynamicFormulaFields","ChecklistData","needSaveButton","temparray","option","LABEL","slanguagetypecode","list","newList","previousProps","DynamicTestColumns","bool","DynamicDesign","dynamicColumn","parse","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","sampledisplayfields","testlistmoreitem","dataSate","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","findIndex","errorCode","mapStatetoProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { faPlay, faAddressBook, faCheckCircle, faEye, faPencilRuler, faFileImport, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { Card, Col, Row, Nav, Button } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport {\r\n    crudMaster, updateStore, getsubSampleREDetail, getTestREDetail, getTestChildTabREDetail, resultGetModule, fetchMaterialRecord,\r\n    completeTest, testMethodSourceEdit, addREInstrument, addREMaterial, deleteInstrumentRecord, fetchInstrumentRecord, deleteTaskRecord,\r\n    fetchTaskRecord, parameterRecord, checkListRecord, onSaveCheckList, defaultTest, getFormula, getRERegistrationType, getRERegistrationSubType,\r\n    getREApprovalConfigVersion, getResultEntryDetails, calculateFormula, getREFilterStatus, getREFilterTestData, getREJobStatus,\r\n    viewAttachment, validateEsignCredentialComplete, getAttachmentCombo, deleteAttachment, getCommentsCombo, updateTestMethodSource, resultImportFile,\r\n    filterTransactionList, validateEsignCredential, getSampleChildTabREDetail, updateParameterComments, getREMaterialCategoryByType, getREMaterialByCategory, getREMaterialInvertoryByMaterial,\r\n    previewSampleReport, getMeanCalculationTestParameter, getAvailableMaterialQuantity, testStart//,deleteResultUsedMaterial\r\n} from '../../actions';\r\nimport { sortData, create_UUID, getControlMap, listDataFromDynamicArray, formatInputDate, validateTwoDigitDate, showEsign, constructOptionList, deleteAttachmentDropZone } from '../../components/CommonScript';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { parameterType, grade, transactionStatus, RegistrationType, RegistrationSubType, FORMULAFIELDTYPE, designProperties } from '../../components/Enumeration';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ResultEntryResultsTab from './ResultEntryResultsTab';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ResultEntryFilter from './ResultEntryFilter';\r\nimport ResultEntryInstrumentForm from './ResultEntryInstrumentForm';\r\nimport ResultEntryForm from './ResultEntryForm';\r\nimport TestEditForm from './TestEditForm';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\r\nimport ApprovalInstrumentTab from '../approval/ApprovalInstrumentTab';\r\nimport ResultEntryTaskTab from './ResultEntryTaskTab';\r\nimport ResultEntryTaskForm from './ResultEntryTaskForm';\r\nimport ResultEntryParamCommetsForm from './ResultEntryParamCommetsForm';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport { numberConversion, numericGrade } from './ResultEntryValidation';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport ResultEntryFormulaForm from './ResultEntryFormulaForm';\r\nimport SampleApprovalHistory from '../approval/SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from '../approval/ResultChangeHistoryTab';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\nimport ResultEntryImport from './ResultEntryImport';\r\nimport { getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript'\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ResultEntryMean from './ResultEntryMean';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ResultEntryMaterialForm from './ResultEntryMaterialForm';\r\nimport UsedMaterial from './UsedMaterial';\r\n\r\nclass ResultEntry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            instrumentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            materialDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            taskDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            documentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            resultChangeDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            historyDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'stestsynonym' }] },\r\n            sampleHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] },\r\n            // historyDataState: { skip: 0, take: 5, group: [{ field: 'ArNo' }, { field: 'stestsynonym' }] },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            operation: \"\",\r\n            showSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            selectedRecord: {},\r\n            validateFormulaMandyFields: [],\r\n            splitChangeWidthPercentage: 22,\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            subSampleSkip: 0,\r\n            subSampleTake: 5,\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n        }\r\n        this.formRef = React.createRef();\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.props.Login.masterData.selectedImportFile\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: { ...this.props.Login.masterData, selectedImportFile: selectedRecord } }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let loadFile = this.props.Login.loadFile;\r\n        let updateInfo = {};\r\n        if (screenName === \"IDS_RESULTFORMULA\") {\r\n            screenName = \"IDS_RESULTENTRY\";\r\n            operation = \"update\";\r\n            let showValidate = !this.props.Login.showValidate;\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { screenName, operation, showValidate, validateFormulaMandyFields: [] }\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.loadEsign) {\r\n                if (this.props.Login.operation === \"delete\"\r\n                    || this.props.Login.operation === \"complete\"\r\n                    || this.props.Login.operation === \"default\"\r\n                    || this.props.Login.operation === \"deleteTask\"\r\n                    || this.props.Login.operation === \"deleteInstrument\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                    selectedRecord = {};\r\n                }\r\n                else if (this.props.Login.operation === \"updatechecklist\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                }\r\n                else {\r\n                    loadEsign = false;\r\n                }\r\n            } else {\r\n                openModal = false;\r\n                openTemplateModal = false;\r\n                selectedRecord = {};\r\n                loadFile = false;\r\n            }\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, screenName, loadEsign, selectedRecord, openTemplateModal, loadFile }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    todate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString((this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    (this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromdate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getRERegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString((this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    (this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromdate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getRERegistrationSubType(inputData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 4,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultRegistrationSubType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n            else if (fieldname === \"version\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 4,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultApprovalConfigVersion: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREJobStatus(inputData)\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: 1,// parseInt(this.props.Login.masterData.defaultjobstatus.njobstatuscode),\r\n                    ntranscode: String(event.value),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultFilterStatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREFilterTestData(inputData)\r\n            }\r\n            else if (fieldname === \"test\") {\r\n\r\n                let defaultTestvalues = event.item;\r\n                this.props.Login.masterData.defaultTestvalues = defaultTestvalues;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n    }\r\n    OnDateConverstion = (date, fieldname) => {\r\n        const month = validateTwoDigitDate(String(date.getMonth() + 1));\r\n        const day = validateTwoDigitDate(String(date.getDate()));\r\n        if (fieldname === \"fromDate\") {\r\n            date = date.getFullYear() + '-' + month + '-' + day + \"T00:00:00\";\r\n        }\r\n        else {\r\n            date = date.getFullYear() + '-' + month + '-' + day + \"T23:59:00\";\r\n        }\r\n        return date;\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realApproveConfigVersion,\r\n            realFilterStatusValue, realTestcodeValue } = this.props.Login.masterData\r\n        //let obj = this.covertDatetoString(realFromDate, realToDate)\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\r\n        let masterData = { ...this.props.Login.masterData, realFromDate: obj.fromDate, realToDate: obj.toDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApproveConfigVersion, realTestcodeValue }\r\n        let inputData = {\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            napprovalversioncode: (realApproveConfigVersion && realApproveConfigVersion.napprovalconfigversioncode) || -1,\r\n            ntranscode: String(realFilterStatusValue ? realFilterStatusValue.ntransactionstatus : -1),\r\n            ntestcode: realTestcodeValue ? realTestcodeValue.ntestcode : -1,\r\n            ntransactiontestcode: 0,\r\n            njobstatuscode: (this.props.Login.masterData.defaultjobstatus && this.props.Login.masterData.defaultjobstatus.njobstatuscode) || 1,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestKey || \"IDS_RESULTS\",\r\n            showTest: true,\r\n            showSample: false,\r\n            checkBoxOperation: 3,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode\r\n        }\r\n        const inpuParamData = {\r\n            inputData,\r\n            masterData,\r\n            refs: { searchSampleRef: this.searchSampleRef, searchSubSampleRef: this.searchSubSampleRef, searchTestRef: this.searchTestRef },\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.napprovalversioncode !== -1\r\n            && inputData.ntranscode !== -1 && inputData.njobstatuscode !== -1 && inputData.ntestcode !== -1) {\r\n            this.props.getResultEntryDetails(inpuParamData)\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n    onREFilterSubmit = (event) => {\r\n        // let realFromDate = new Date(this.props.Login.masterData.fromDate)\r\n        // let realToDate = new Date(this.props.Login.masterData.toDate)\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n        let realSampleTypeValue = this.props.Login.masterData.defaultSampleType && this.props.Login.masterData.defaultSampleType\r\n        let realRegTypeValue = this.props.Login.masterData.defaultRegistrationType && this.props.Login.masterData.defaultRegistrationType\r\n        let realRegSubTypeValue = this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType\r\n        let realApproveConfigVersion = this.props.Login.masterData.defaultApprovalConfigVersion && this.props.Login.masterData.defaultApprovalConfigVersion\r\n        let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus\r\n        let realTestcodeValue = this.props.Login.masterData.defaultTestvalues && this.props.Login.masterData.defaultTestvalues\r\n\r\n        //let obj = this.covertDatetoString(realFromDate, realToDate)\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\r\n        let masterData = { ...this.props.Login.masterData, realFromDate: obj.fromDate, realToDate: obj.toDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApproveConfigVersion, realTestcodeValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.defaultSampleType && this.props.Login.masterData.defaultSampleType.nsampletypecode) || -1,\r\n            nregtypecode: (this.props.Login.masterData.defaultRegistrationType && this.props.Login.masterData.defaultRegistrationType.nregtypecode) || -1,\r\n            nregsubtypecode: (this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode) || -1,\r\n            napprovalversioncode: (this.props.Login.masterData.defaultApprovalConfigVersion && this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode) || -1,\r\n            ntranscode: String(this.props.Login.masterData.defaultFilterStatus ? this.props.Login.masterData.defaultFilterStatus.ntransactionstatus : -1),\r\n            ntestcode: this.props.Login.masterData.defaultTestvalues ? this.props.Login.masterData.defaultTestvalues.ntestcode : -1,\r\n            ntransactiontestcode: 0,\r\n            njobstatuscode: (this.props.Login.masterData.defaultjobstatus && this.props.Login.masterData.defaultjobstatus.njobstatuscode) || 1,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestKey || \"IDS_RESULTS\",\r\n            showTest: true,\r\n            showSample: false,\r\n            nneedsubsample: this.props.Login.masterData.nneedsubsample || false,\r\n            checkBoxOperation: 3,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode\r\n        }\r\n        const inpuParamData = {\r\n            inputData,\r\n            masterData,\r\n            refs: { searchSampleRef: this.searchSampleRef, searchSubSampleRef: this.searchSubSampleRef, searchTestRef: this.searchTestRef },\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState\r\n        }\r\n\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.napprovalversioncode !== -1\r\n            && inputData.ntranscode !== -1 && inputData.njobstatuscode !== -1 && inputData.ntestcode !== undefined) {\r\n            this.props.getResultEntryDetails(inpuParamData)\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n\r\n    //     const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay + \"T00:00:00\";\r\n    //     const toDate = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    onSecondaryPaneSizeChange = (e, val) => {\r\n\r\n        // let hGrand = this.state.grandparentheight\r\n        // let check = e - 400;\r\n        // if (check > 1) {\r\n        //     hGrand = this.state.parentHeight + check\r\n        // }\r\n        // this.setState({\r\n        //     paneHeight: e - val,\r\n        //     secondPaneHeight: hGrand - e - 70,\r\n        //     grandparentheight: hGrand\r\n        // })\r\n        // this.setState({\r\n        //     paneHeight: e - val,\r\n        //     secondPaneHeight: this.state.parentHeight - e - 70\r\n        // })\r\n    }\r\n\r\n    onComboCategoryChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'resultentrybysample/getResultUsedInstrumentCombo';\r\n            if (fieldname === \"ninstrumentcatcode\") {\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nflag: 2,\r\n                    ninstrumentcatcode: event.value,\r\n                    ncalibrationRequired: event.item.ncalibrationreq\r\n                }\r\n            }\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n                    const TagInstrument = constructOptionList(response.data.Instrument || [], \"ninstrumentcode\",\r\n                        \"sinstrumentid\", undefined, undefined, undefined);\r\n                    const TagListInstrument = TagInstrument.get(\"OptionList\")\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            masterData: { ...this.props.Login.masterData, Instrument: TagListInstrument },\r\n                            selectedRecord: {\r\n                                ...this.props.Login.selectedRecord,\r\n                                [fieldname]: event,\r\n                                ninstrumentcode: TagInstrument.get(\"DefaultValue\") ? TagInstrument.get(\"DefaultValue\") : [],\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                    // const selectedRecord = this.state.selectedRecord || {};\r\n                    // selectedRecord[fieldname] = event;\r\n                    // this.setState({ selectedRecord });\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    showRESampleInfo = () => {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         showSample: true, \r\n        //         showTest: false \r\n        //         }\r\n        //     }\r\n\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showRETestList() {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         showSample: false, \r\n        //         showTest: true \r\n        //         }\r\n        //     }\r\n\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n\r\n    // getMeanTestParameter =(meanParam)=>{\r\n    //     const inputData = {npreregno:meanParam.selectedRecord.npreregno,\r\n    //                        userinfo:this.props.Login.userInfo}\r\n    //     return rsapi.post(\"resultentrybysample/getMeanCalculationTestParameter\", inputData)\r\n    //         .then(response => {\r\n    //            const list =  response.data || [];\r\n    //            const optionList = [];\r\n    //            list.map(item=>{optionList.push({item:item, label:item.stestsynonym+\"-\"+item.sparametername+\"-\"+item.sresult, value:item.ntransactiontestresultcode})})\r\n    //            this.setState({meanTestParameterList:optionList});                \r\n    //         })\r\n    //         .catch(error => {\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             } else {\r\n    //                 toast.warn(error.response.data);\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    testRETabDetail = () => {\r\n        const testTabMap = new Map();\r\n        //let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.RE_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n\r\n        const meanControlId = this.state.controlMap.has(\"CalculateMean\") && this.state.controlMap.get(\"CalculateMean\").ncontrolcode\r\n\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        testTabMap.set(\"IDS_RESULTS\", <ResultEntryResultsTab\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            fetchRecord={this.props.parameterRecord}\r\n            controlMap={this.state.controlMap}\r\n            parameterParam={{ primaryKeyField: \"ntransactionresultcode\", masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            checkListRecord={this.checkListRecord}\r\n            checklistParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            viewFile={this.props.viewAttachment}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_RESULTS\"\r\n            getMeanTestParameter={this.props.getMeanCalculationTestParameter}\r\n            meanParam={{ \"userInfo\": this.props.Login.userInfo, ncontrolCode: meanControlId }}\r\n        />)\r\n        testTabMap.set(\"IDS_INSTRUMENT\", <ApprovalInstrumentTab\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedInstrument\"}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            dataState={this.state.instrumentDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteInstrumentRecord}\r\n            fetchRecord={this.fetchInstrumentRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_INSTRUMENT\"\r\n        />)\r\n        testTabMap.set(\"IDS_MATERIAL\", <UsedMaterial\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedMaterial\"}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            dataState={this.state.materialDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteMaterialRecord}\r\n            fetchRecord={this.props.fetchMaterialRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_MATERIAL\"\r\n        />)\r\n        testTabMap.set(\"IDS_TASK\", <ResultEntryTaskTab\r\n            userInfo={this.props.Login.userInfo}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedTask\"}\r\n            addResultEntryTask={this.addResultEntryTask}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{\r\n                masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.state.controlMap.has(\"DeleteResultUsedTask\") && this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode\r\n            }}\r\n            editParam={{\r\n                masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.state.controlMap.has(\"EditResultUsedTask\") && this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode\r\n            }}\r\n            dataState={this.state.taskDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteTaskRecord}\r\n            fetchRecord={this.fetchTaskRecord}\r\n            //fetchRecord={this.fetchInstrumentRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_TASK\" />)\r\n        testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"RESelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: this.props.Login.masterData.RESelectedTest\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            selectedMaster=\"RESelectedTest\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            isTestComment={true}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    masterList: this.props.Login.masterData.RESelectedTest,\r\n                    ncontrolCode: this.state.controlMap.has(\"DeleteTestComment\") && this.state.controlMap.get(\"DeleteTestComment\").ncontrolcode\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RESelectedTest,\r\n                ncontrolCode: this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode\r\n\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        testTabMap.set(\"IDS_RESULTCHANGEHISTORY\", <ResultChangeHistoryTab\r\n            userInfo={this.props.Login.userInfo}\r\n            ApprovalResultChangeHistory={this.props.Login.masterData.ResultChangeHistory || []}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultChangeDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            selectedId={null}\r\n\r\n        />)\r\n\r\n        return testTabMap;\r\n    }\r\n\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleKey) {\r\n            case \"IDS_APPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({ sampleGridDataState: event.dataState })\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestKey) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    // sampleTabDetail = () => {\r\n    //     const tabMap = new Map();\r\n\r\n    //     {\r\n    //         this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\r\n    //             tabMap.set(\"IDS_SAMPLEINFO\", <SampleInfoView\r\n    //                 data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0 ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\r\n    //                 SingleItem={this.state.SingleItem}\r\n    //                 screenName=\"IDS_SAMPLEINFO\"\r\n    //             />) :\r\n    //             tabMap.set(\"IDS_SAMPLEGRID\", <SampleInfoGrid\r\n    //                 selectedSample={this.props.Login.masterData.RESelectedSample}\r\n    //                 dataState={this.state.dataState}\r\n    //                 dataStateChange={this.dataStateChange}\r\n    //                 detailedFieldList={this.state.SampleGridExpandableItem}\r\n    //                 extractedColumnList={this.state.SampleGridItem}\r\n    //                 userInfo={this.props.Login.userInfo}\r\n    //                 inputParam={this.props.Login.inputParam}\r\n    //                 screenName=\"IDS_SAMPLEGRID\"\r\n    //             />)\r\n    //         // tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SAMPLECOMMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <></>)\r\n    //         return tabMap;\r\n    //     }\r\n    // }\r\n\r\n    sampleTabDetail = () => {\r\n        const tabMap = new Map();\r\n\r\n        let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        //let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n            selectedMaster=\"RESelectedSample\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            masterList={this.props.Login.masterData.RESelectedSample}\r\n            masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHMENT\"}\r\n            addName={\"AddSampleAttachment\"}\r\n            editName={\"EditSampleAttachment\"}\r\n            deleteName={\"DeleteSampleAttachment\"}\r\n            viewName={\"ViewSampleAttachment\"}\r\n            methodUrl={\"SampleAttachment\"}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: this.props.Login.screenName\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleAttachment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        tabMap.set(\"IDS_APPROVALHISTORY\", <SampleApprovalHistory\r\n            userInfo={this.props.Login.userInfo}\r\n            ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.sampleHistoryDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            screenName=\"IDS_APPROVALHISTORY\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            selectedId={null}\r\n        />)\r\n        // tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <></>)\r\n        // tabMap.set(\"IDS_SAMPLECOMMENTS\", <></>)\r\n        // tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <></>)\r\n        // tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <></>)\r\n        return tabMap;\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        if (this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0) {\r\n            const activeSampleKey = tabProps.screenName;\r\n            if (activeSampleKey !== this.props.Login.activeSampleKey) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(subsamplecode => subsamplecode.ntransactionsamplecode).join(\",\").toString() : \"\",\r\n                    RESelectedSample: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample : \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeSampleKey: activeSampleKey,\r\n                    screenName: activeSampleKey\r\n                }\r\n                this.props.getSampleChildTabREDetail(inputData)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n        const activeTestKey = tabProps.screenName;\r\n        if (activeTestKey !== this.props.Login.activeTestKey) {\r\n            if (this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    RESelectedTest: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest : \"\",\r\n                    // ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                    //     this.props.Login.masterData.selectedTestCode : this.props.Login.masterData.RESelectedTest ?\r\n                    //         String(this.props.Login.masterData.RESelectedTest.ntransactiontestcode) : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: activeTestKey,\r\n                    screenName: activeTestKey,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabREDetail(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    testMethodSourceEdit = (test) => {\r\n        this.props.testMethodSourceEdit(test)\r\n    }\r\n\r\n    addREInstrument = (test) => {\r\n        this.props.addREInstrument(test)\r\n    }\r\n    deleteInstrumentRecord = (test) => {\r\n\r\n        let inputParam = {\r\n            inputData: { ...test, 'userinfo': this.props.Login.userInfo },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"deleteInstrument\",\r\n            screenName: \"deleteInstrumentAction\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteInstrumentAction\",\r\n                    operation: \"deleteInstrument\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.deleteInstrumentRecord(test)\r\n        }\r\n\r\n\r\n    }\r\n    fetchInstrumentRecord = (test) => {\r\n        this.props.fetchInstrumentRecord(test)\r\n    }\r\n    fetchMaterialRecord = (test) => {\r\n        this.props.fetchMaterialRecord(test)\r\n    }\r\n\r\n    //Aravindh\r\n    deleteMaterialRecord = (test) => {\r\n\r\n        let inputParam = {\r\n            inputData: {\r\n                ...test.selectedRecord,\r\n                ntransactiontestcode: test.masterData.RESelectedTest ?\r\n                    test.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n\r\n            classUrl: 'resultentrybysample',\r\n            methodUrl: \"ResultUsedMaterial\",\r\n            operation: \"delete\",\r\n            screenName: \"deleteMaterialAction\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n            nresultusedmaterialcode: test.selectedRecord.nresultusedmaterialcode,\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteMaterialAction\",\r\n                    operation: \"deleteMaterial\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            //this.props.deleteResultUsedMaterial(test)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteTaskRecord = (test) => {\r\n        let inputParam = {\r\n            inputData: { ...test, 'userinfo': this.props.Login.userInfo },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"deleteTask\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteTaskaction\",\r\n                    operation: \"deleteTask\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.deleteTaskRecord(test)\r\n        }\r\n\r\n    }\r\n    fetchTaskRecord = (test) => {\r\n        this.props.fetchTaskRecord(test)\r\n    }\r\n    addResultEntryTask = (inputData) => {\r\n        let selectedRecord = {}\r\n        selectedRecord = {\r\n            npreregno: inputData.npreregno,\r\n            ntransactiontestcode: inputData.ntransactiontestcode,\r\n            stestsynonym: inputData.stestsynonym\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: selectedRecord,\r\n                operation: \"create\",\r\n                screenName: \"IDS_TASK\",\r\n                openModal: true,\r\n                activeTestKey: \"IDS_TASK\",\r\n                ncontrolcode: inputData.addResultUsedTaskId,\r\n                selectedId: null\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    checkListRecord = (parameterData) => {\r\n        this.props.checkListRecord(parameterData, this.props.Login.userInfo)\r\n    }\r\n    getFormula = (parameterData, userInfo, masterData, index, event) => {\r\n        this.setState({\r\n            modalEvent: event.currentTarget\r\n        })\r\n        this.props.getFormula(parameterData, userInfo, masterData, index, this.state.selectedRecord)\r\n    }\r\n    calculateFormula = () => {\r\n        const selectedRecord = this.state.selectedRecord || []\r\n        const selectedForumulaInput = selectedRecord.selectedForumulaInput || []\r\n        let lstDynamicFields = [];\r\n\r\n        if (selectedForumulaInput) {\r\n            selectedForumulaInput.map(dynamicfields =>\r\n                lstDynamicFields.push(dynamicfields)\r\n            );\r\n            const inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                lstDynamicFields: lstDynamicFields,\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: selectedRecord,\r\n                selectedResultGrade: this.state.selectedRecord.selectedResultGrade,\r\n                ResultParameter: this.state.selectedRecord.ResultParameter || {}\r\n            }\r\n            this.props.calculateFormula(inputData)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n    getActiveTestURL() {\r\n        let url = \"resultentrybysample/getTestbasedParameter\"\r\n        switch (this.props.Login.activeTestKey) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"resultentrybysample/getTestbasedParameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                url = \"attachment/getSampleAttachment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"resultentrybysample/getResultChangeHistory\"\r\n                break;\r\n            case \"IDS_APPROVALHISTORY\":\r\n                url = \"resultentrybysample/getSampleApprovalHistory\"\r\n                break;\r\n            case \"IDS_SAMPLEATTACHMENTS\":\r\n                url = \"attachment/getSampleAttachment\"\r\n                break;\r\n            default:\r\n                url = \"resultentrybysample/getTestbasedParameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    resultImport = () => {\r\n        this.props.Login.masterData.selectedImportFile = []\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                operation: \"create\",\r\n                screenName: \"IDS_RESULTIMPORTFILE\",\r\n                openModal: true,\r\n                loadFile: true,\r\n                activeTestKey: \"IDS_RESULTS\",\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subSampleSkip: e.skip,\r\n            subSampleTake: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take,\r\n            sampletakeDataState: e.take\r\n        });\r\n    };\r\n    verticalPaneSizeChange = (val) => {\r\n        this.setState({\r\n            initialVerticalWidth: val - 150\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let sampleListRE = this.props.Login.masterData.RE_SAMPLE ? sortData(this.props.Login.masterData.RE_SAMPLE, \"descending\", \"npreregno\") : [];\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ?  this.props.Login.masterData.RE_SUBSAMPLE : []\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\r\n        let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ?  this.props.Login.masterData.RE_SUBSAMPLE : []\r\n\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST : []\r\n        let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST : []\r\n        const startDate = (this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date());\r\n        const endDate = (this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date());\r\n\r\n        // let obj = this.covertDatetoString(startDate, endDate)\r\n        let obj = convertDateValuetoString(startDate, endDate, this.props.Login.userInfo);\r\n\r\n        const fromDate = obj.fromDate;\r\n        const toDate = obj.toDate;\r\n\r\n\r\n        let subSampleGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            fromdate: fromDate,\r\n            todate: toDate,\r\n            activeTestKey: this.props.Login.activeTestKey || 'IDS_RESULTS',\r\n            activeSampleKey: this.props.Login.activeSampleKey || 'IDS_IDS_SAMPLEINFO',\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            //Aravindh\r\n            checkBoxOperation: 3\r\n        }\r\n        let testGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestKey || 'IDS_RESULTS',\r\n            activeSampleKey: this.props.Login.activeSampleKey || 'IDS_IDS_SAMPLEINFO',\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n\r\n\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState\r\n\r\n        }\r\n        let testChildGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestKey || 'IDS_RESULTS',\r\n            fromdate: fromDate,\r\n            todate: toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode\r\n        }\r\n\r\n        let sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"seprotocolname\", \"stransdisplaystatus\"\r\n            , \"sstorageconditionname\", \"sdecisionstatus\", \"scomponentname\", \"splasmafilenumber\", \"sversion\", \"sbulkvolume\", \"sregsubtypename\", \"smanuflotno\"\r\n            , \"sregtypename\", \"sspecname\", \"saddress1\", \"sclientname\", \"smanufsitename\", \"sproductcertificatename\", \"smanufname\", \"sstoragelocationname\", \"dregdate\"];\r\n        if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n\r\n            sampleSearchField = [\"sarno\", \"sproductname\", \"sproductcatname\", \"sregsubtypename\", \"sregtypename\", \"sspecname\", \"smanufname\", \"sstorageconditionname\",\r\n                \"sclientname\", \"scontainertype\", \"sdeadline\", \"sdecisionstatus\", \"sdeviationcomments\", \"sdispositionname\", \"slotno\", \"sbatchno\", \"sourfile\", \"speriodname\",\r\n                \"spriorityname\", \"sreceiveddate\", \"sremarks\", \"sreportremarks\", \"ssamplecondition\", \"ssuppliername\", \"stotalqty\", \"stransdisplaystatus\"\r\n            ]\r\n        }\r\n        const filterSampleParam = {\r\n            inputListName: \"RE_SAMPLE\",\r\n            selectedObject: \"RESelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                ntransactiontestcode: 0,\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntranscode: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString() : 0 : 0),\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                //npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                fromdate: fromDate,\r\n                todate: toDate,\r\n                activeTestKey: this.props.Login.activeTestKey || 'IDS_RESULTS',\r\n                nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                checkBoxOperation: 3\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"ssampletypestatus\"],\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\"RE_SUBSAMPLE\", \"RE_TEST\", \"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedSample\", \"RESelectedSubSample\", \"RESelectedTest\"]\r\n        };\r\n\r\n        const filterSubSampleParam = {\r\n            inputListName: \"RE_SUBSAMPLE\",\r\n            selectedObject: \"RESelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"resultentrybysample/getResultEntrySubSampleDetails\",\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                ntransactiontestcode: 0,\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntranscode: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString() : 0 : 0),\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                //npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                fromdate: fromDate,\r\n                todate: toDate,\r\n                activeTestKey: this.props.Login.activeTestKey || 'IDS_RESULTS',\r\n                nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                checkBoxOperation: 3\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"ssampletypestatus\"],\r\n            searchFieldList: ['ssamplearno'],\r\n            changeList: [\"RE_TEST\", \"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedSubSample\", \"RESelectedTest\"]\r\n        };\r\n        let filterTestParam = {\r\n            inputListName: \"RE_TEST\",\r\n            selectedObject: \"RESelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"stestsynonym\", \"dtransactiondate\", \"ssectionname\", \"ssourcename\", \"ntestrepeatno\", \"ntestretestno\", \"stransdisplaystatus\", \"stestsynonym\"],\r\n            changeList: [\"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedTest\"],\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: 3\r\n\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n                fecthInputObject: filterSampleParam,\r\n                selectedObject: \"RESelectedSample\",\r\n                inputListName: \"RE_SAMPLE\",\r\n                updatedListname: \"\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n                fecthInputObject: testGetREParam,\r\n                selectedObject: \"RESelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                inputListName: \"RE_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }, {\r\n                filteredListName: \"searchedTest\",\r\n                clearFilter: \"yes\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchSampleRef, childFilteredListName: \"\" }],\r\n                fecthInputObject: testChildGetREParam,\r\n                selectedObject: \"RESelectedTest\",\r\n                inputListName: \"RE_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }];\r\n\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            }, {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"Batch\"\r\n            }, {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"EU\"\r\n            }, {\r\n                \"label\": \"IDS_CONFIGVERSION\",\r\n                \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_FILTERSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_TEST\",\r\n                \"value\": this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.stestsynonym ? this.props.Login.masterData.realTestcodeValue.stestsynonym : \"NA\"\r\n            }\r\n        ]\r\n\r\n\r\n        const testStartId = this.state.controlMap.has(\"TestStart\") && this.state.controlMap.get(\"TestStart\").ncontrolcode\r\n        const resultEnterId = this.state.controlMap.has(\"ResultEnter\") && this.state.controlMap.get(\"ResultEnter\").ncontrolcode\r\n        const completeResultId = this.state.controlMap.has(\"CompleteResult\") && this.state.controlMap.get(\"CompleteResult\").ncontrolcode\r\n        const setDefaultId = this.state.controlMap.has(\"SetDefaultResult\") && this.state.controlMap.get(\"SetDefaultResult\").ncontrolcode\r\n\r\n        const editSourceMethodId = this.state.controlMap.has(\"EditSourceMethod\") && this.state.controlMap.get(\"EditSourceMethod\").ncontrolcode\r\n        const addResultUsedInstrumentId = this.state.controlMap.has(\"AddResultUsedInstrument\") && this.state.controlMap.get(\"AddResultUsedInstrument\").ncontrolcode\r\n        const addResultUsedMaterailId = this.state.controlMap.has(\"AddResultUsedMaterial\") && this.state.controlMap.get(\"AddResultUsedMaterial\").ncontrolcode\r\n        //const addResultUsedTaskId = this.state.controlMap.has(\"AddResultUsedTask\") && this.state.controlMap.get(\"AddResultUsedTask\").ncontrolcode\r\n        //const parameterCommentsId = this.state.controlMap.has(\"AddParameterComments\") && this.state.controlMap.get(\"AddParameterComments\").ncontrolcode\r\n\r\n\r\n        const mandatoryFieldsInstrument = [{ \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"ninstrumentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_FORMDATE\", \"dataField\": \"dfromdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TODATE\", \"dataField\": \"dtodate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzfromdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntztodate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]\r\n\r\n        const mandatoryFieldsTask = [{ \"mandatory\": true, \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //{ \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\" }\r\n        ]\r\n\r\n        const mandatoryFieldsTestMethodSource = [{ \"mandatory\": true, \"idsName\": \"IDS_SOURCE\", \"dataField\": \"nsourcecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_METHOD\", \"dataField\": \"nmethodcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]\r\n\r\n        // const mandatoryFieldsCheckList=[{\"mandatory\": true, \"idsName\": \"IDS_SOURCE\", \"dataField\": \"nsourcecode\" },\r\n        //    { \"mandatory\": true, \"idsName\": \"IDS_METHOD\", \"dataField\": \"nmethodcode\"}]\r\n        const mandatoryFieldsParameter = [{ \"mandatory\": true, \"idsName\": \"IDS_PARAMETERCOMMENTS\", \"dataField\": \"sresultcomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n        const validateFormulaMandyFields = this.state.validateFormulaMandyFields;\r\n\r\n        // const mandatoryFieldsTask = [{ \"mandatory\": true, \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\" },\r\n        // { \"mandatory\": true, \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\" },\r\n        // { \"mandatory\": true, \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\" },\r\n        // { \"mandatory\": true, \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\" }]\r\n\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode\r\n        return (\r\n            <>\r\n                {/* <PerfectScrollbar> */}\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <Row noGutters={true}>\r\n                        {/* sticky_head_parent ref={(parentHeight) => { this.parentHeight = parentHeight }} secondaryInitialSize={40}*/}\r\n                        <Col md={12} className=\"parent-port-height\" >\r\n                            <ListWrapper>\r\n                                <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={this.state.splitChangeWidthPercentage} onSecondaryPaneSizeChange={this.paneSizeChange} primaryMinSize={40} secondaryMinSize={20}>\r\n                                    <TransactionListMasterJson\r\n                                        // paneHeight={this.state.parentHeight}\r\n                                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                        masterList={this.props.Login.masterData.searchedSample || sampleListRE}\r\n                                        selectedMaster={this.props.Login.masterData.RESelectedSample}\r\n                                        primaryKeyField=\"npreregno\"\r\n                                        getMasterDetail={this.props.getsubSampleREDetail}\r\n                                        inputParam={subSampleGetREParam}\r\n                                        additionalParam={['napprovalversioncode']}\r\n                                        mainField=\"sarno\"\r\n                                        selectedListName=\"RESelectedSample\"\r\n                                        objectName=\"sample\"\r\n                                        listName=\"IDS_SAMPLE\"\r\n                                        needValidation={false}\r\n                                        validationKey=\"napprovalversioncode\"\r\n                                        validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                        subFields={this.state.DynamicSampleColumns || []}\r\n                                        moreField={this.state.sampleMoreField}\r\n                                        needFilter={true}\r\n                                        needMultiSelect={true}\r\n                                        showFilter={this.props.Login.showFilter}\r\n                                        openFilter={this.openFilter}\r\n                                        closeFilter={this.closeFilter}\r\n                                        onFilterSubmit={this.onREFilterSubmit}\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        searchListName=\"searchedSample\"\r\n                                        searchRef={this.searchSampleRef}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        filterParam={filterSampleParam}\r\n                                        skip={this.state.skip}\r\n                                        take={this.state.take}\r\n                                        hidePaging={false}\r\n                                        showStatusLink={true}\r\n                                        showStatusName={true}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        selectionFieldName=\"sfilterstatus\"\r\n                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        childTabsKey={[\"RegistrationAttachment\", \"RE_SUBSAMPLE\", \"RE_TEST\", \"SampleApprovalHistory\"]}\r\n                                        selectionList={this.state.selectedFilter}\r\n                                        selectionColorField=\"scolorhexcode\"\r\n                                        selectionField=\"ntransactionstatus\"\r\n                                        jsonField={'jsondata'}\r\n                                        jsonDesignFields={true}\r\n                                        filterComponent={[\r\n                                            {\r\n                                                \"Sample Filter\": <ResultEntryFilter\r\n                                                    fromDate={this.props.Login.masterData.fromDate ? //new Date(this.props.Login.masterData.fromDate) \r\n                                                        rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate)\r\n                                                        : new Date()}\r\n                                                    toDate={this.props.Login.masterData.toDate ? //new Date(this.props.Login.masterData.toDate) \r\n                                                        rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate)\r\n                                                        : new Date()}\r\n                                                    SampleType={this.state.SampleType || []}\r\n                                                    SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                                    RegType={this.state.RegistrationType || []}\r\n                                                    RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                                    RegSubType={this.state.RegistrationSubType || []}\r\n                                                    RegSubTypeValue={this.props.Login.masterData.defaultRegistrationSubType || []}\r\n                                                    DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                                    FilterStatus={this.state.REFilterStatus || []}\r\n                                                    FilterStatusValue={this.props.Login.masterData.defaultFilterStatus || []}\r\n                                                    ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                                    ApprovalVersionValue={this.props.Login.masterData.defaultApprovalConfigVersion || []}\r\n                                                    REJobStatus={this.state.REJobStatus || []}\r\n                                                    JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                                    Test={this.state.Testvalues || []}\r\n                                                    TestValue={this.props.Login.masterData.defaultTestvalues || []}\r\n                                                    onFilterComboChange={this.onFilterComboChange}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                />\r\n                                            }\r\n                                        ]}\r\n                                        actionIcons={\r\n                                            [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                {\r\n                                                    title: \"Report\",\r\n                                                    controlname: \"reports\",\r\n                                                    objectName: \"sample\",\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                    onClick: this.props.previewSampleReport,\r\n                                                    inputData: {\r\n                                                        userinfo: this.props.Login.userInfo,\r\n                                                        ncontrolcode: reportPreviewId\r\n                                                    },\r\n                                                } : {}\r\n                                            ]\r\n                                        }\r\n                                        commonActions={\r\n                                            <>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                        onClick={() => this.onReload()}\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                    {/* </Tooltip> */}\r\n                                                </ProductList>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    {this.props.Login.masterData.nneedsubsample ?\r\n                                        <ScrollBar ref={(ref) => { this._scrollBarRef = ref; }}>\r\n                                            <SplitterLayout\r\n                                                customClassName=\"detailed-inner\"\r\n                                                vertical\r\n                                                borderColor=\"#999\"\r\n                                                primaryIndex={1}\r\n                                                onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n                                                secondaryInitialSize={400}\r\n                                            >\r\n                                                <div>\r\n                                                    <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                        <SplitterLayout borderColor=\"#999\"\r\n                                                            primaryIndex={1} percentage={true}\r\n                                                            secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                                            onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                                            primaryMinSize={40}\r\n                                                            secondaryMinSize={30}\r\n                                                        >\r\n                                                            <Card>\r\n                                                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                    <span style={{ display: \"inline-block\" }}>\r\n                                                                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                                                                    </span>\r\n                                                                </Card.Header>\r\n                                                                <Card.Body className='p-0 spliterHeight'>\r\n                                                                    <TransactionListMasterJson\r\n                                                                        paneHeight={this.state.initialVerticalWidth}\r\n                                                                        masterList={this.props.Login.masterData.searchedSubSample || subSampleListRE}\r\n                                                                        selectedMaster={this.props.Login.masterData.RESelectedSubSample}\r\n                                                                        primaryKeyField=\"ntransactionsamplecode\"\r\n                                                                        getMasterDetail={this.props.getTestREDetail}\r\n                                                                        inputParam={testGetREParam}\r\n                                                                        additionalParam={[]}\r\n                                                                        mainField=\"ssamplearno\"\r\n                                                                        selectedListName=\"RESelectedSubSample\"\r\n                                                                        objectName=\"subSample\"\r\n                                                                        listName=\"IDS_SUBSAMPLE\"\r\n                                                                        jsonField={'jsondata'}\r\n                                                                        jsonDesignFields={true}\r\n                                                                        subFields={this.state.DynamicSubSampleColumns}\r\n                                                                        moreField={this.state.subSampleMoreField}\r\n                                                                        needValidation={false}\r\n                                                                        needMultiSelect={true}\r\n                                                                        needFilter={false}\r\n                                                                        skip={this.state.subSampleSkip}\r\n                                                                        take={this.state.subSampleTake}\r\n                                                                        handlePageChange={this.handleSubSamplePageChange}\r\n                                                                        showStatusLink={true}\r\n                                                                        showStatusName={true}\r\n                                                                        selectionList={this.state.selectedFilter}\r\n                                                                        statusFieldName=\"stransdisplaystatus\"\r\n                                                                        statusField=\"ntransactionstatus\"\r\n                                                                        childTabsKey={[\"RE_TEST\"]}\r\n                                                                        filterColumnData={this.props.filterTransactionList}\r\n                                                                        searchListName=\"searchedSubSample\"\r\n                                                                        searchRef={this.searchSubSampleRef}\r\n                                                                        filterParam={filterSubSampleParam}\r\n                                                                    />\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                            <ContentPanel>\r\n                                                                <Card>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\" }} >\r\n                                                                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <button className=\"btn btn-primary headerBtn\" style={{ float: \"right\" }}\r\n                                                                            onClick={() => this.showRESampleInfo()}>\r\n                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                        </button>\r\n                                                                    </Card.Header>\r\n                                                                    <Card.Body className='p-0'>\r\n                                                                        {/* <PerfectScrollbar> */}\r\n                                                                        <TransactionListMasterJson\r\n                                                                            paneHeight={this.state.initialVerticalWidth}\r\n                                                                            // paneHeight={`${testListRE && testListRE !== null && testListRE.length > 0 ? testListRE.length * 13 : 5}vh`}\r\n                                                                            masterList={this.props.Login.masterData.searchedTest || testListRE}\r\n                                                                            selectedMaster={this.props.Login.masterData.RESelectedTest}\r\n                                                                            primaryKeyField=\"ntransactiontestcode\"\r\n                                                                            getMasterDetail={this.props.getTestChildTabREDetail}\r\n                                                                            inputParam={testChildGetREParam}\r\n                                                                            subFieldsLabel={true}\r\n                                                                            additionalParam={[]}\r\n                                                                            mainField=\"stestsynonym\"\r\n                                                                            selectedListName=\"RESelectedTest\"\r\n                                                                            objectName=\"test\"\r\n                                                                            listName=\"IDS_TEST\"\r\n                                                                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                            showStatusLink={true}\r\n                                                                            statusFieldName=\"stransdisplaystatus\"\r\n                                                                            statusField=\"ntransactionstatus\"\r\n                                                                            needMultiSelect={true}\r\n                                                                            subFields={this.state.testListColumns || []}\r\n                                                                            moreField={this.state.testMoreField}\r\n                                                                            needValidation={false}\r\n                                                                            needFilter={false}\r\n                                                                            filterColumnData={this.props.filterTransactionList}\r\n                                                                            searchListName=\"searchedTest\"\r\n                                                                            searchRef={this.searchTestRef}\r\n                                                                            filterParam={filterTestParam}\r\n                                                                            selectionField=\"ntransactionstatus\"\r\n                                                                            showStatusName={true}\r\n                                                                            selectionFieldName=\"sfilterstatus\"\r\n                                                                            childTabsKey={[\"TestParameters\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\",\r\n                                                                                \"ResultChangeHistory\", \"RegistrationTestComment\", \"ResultChangeHistory\"]}\r\n                                                                            selectionList={this.props.Login.masterData.REFilterStatus && this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.REFilterStatus : []}\r\n                                                                            skip={this.state.testskip}\r\n                                                                            take={this.state.testtake}\r\n                                                                            handlePageChange={this.handleTestPageChange}\r\n                                                                            selectionColorField=\"scolorhexcode\"\r\n                                                                            showMoreResetList={true}\r\n                                                                            showMoreResetListName=\"RE_SAMPLE\"\r\n                                                                            buttonCount={5}\r\n                                                                            jsonField={'jsondata'}\r\n                                                                            jsonDesignFields={true}\r\n                                                                            actionIcons={\r\n                                                                                [{ title: this.props.intl.formatMessage({ id: \"IDS_EDITMETHODSSOURCE\" }), controlname: \"faPencilAlt\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                                                { title: this.props.intl.formatMessage({ id: \"IDS_ADDINSTRUMENT\" }), controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                                                { title: this.props.intl.formatMessage({ id: \"IDS_ADDMATERIAL\" }), controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1, onClick: this.props.addREMaterial, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedMaterailId } }\r\n                                                                                    // { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\r\n                                                                                ]\r\n                                                                            }\r\n                                                                            commonActions={\r\n                                                                                // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                                                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                    {testListRE.length > 0 ?\r\n                                                                                        <>\r\n                                                                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_TESTSTART\" })} hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.testStartActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, testStartId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                <FontAwesomeIcon icon={faPlay} />\r\n                                                                                            </Nav.Link>\r\n                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(resultEnterId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.props.resultGetModule(this.props.Login.masterData, this.props.Login.userInfo, resultEnterId, this.state.testskip, this.state.testtake)} >\r\n                                                                                                <FontAwesomeIcon icon={faAddressBook} />\r\n                                                                                            </Nav.Link>\r\n                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_FILLDEFAULTRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(setDefaultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.defaultActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.masterData.RESelectedSample, setDefaultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                <FontAwesomeIcon icon={faPencilRuler} />\r\n                                                                                            </Nav.Link>\r\n                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })} hidden={this.state.userRoleControlRights.indexOf(completeResultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.completeActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                <FontAwesomeIcon icon={faCheckCircle} />\r\n                                                                                            </Nav.Link>\r\n                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(completeResultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.resultImport(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                <FontAwesomeIcon icon={faFileImport} />\r\n                                                                                            </Nav.Link>\r\n                                                                                        </>\r\n                                                                                        : \"\"}\r\n                                                                                </ProductList>\r\n\r\n                                                                                // </Tooltip>\r\n                                                                            }\r\n                                                                        />\r\n                                                                        {/* </PerfectScrollbar> */}\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </ContentPanel>\r\n                                                        </SplitterLayout>\r\n                                                    </div>\r\n                                                    <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                        <Card className=\"border-0\">\r\n                                                            <Card.Body className='p-0'>\r\n                                                                <Card className='p-0'>\r\n                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                        </span>\r\n                                                                        <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                            onClick={() => this.showRETestList()}>\r\n                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                        </button>\r\n                                                                    </Card.Header>\r\n                                                                    <Card.Body>\r\n                                                                        {this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\r\n                                                                            <SampleInfoView\r\n                                                                                data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0\r\n                                                                                    ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\r\n                                                                                SingleItem={this.state.SingleItem}\r\n\r\n                                                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                userInfo={this.props.Login.userInfo}\r\n                                                                            /> :\r\n                                                                            <SampleInfoGrid\r\n                                                                                selectedSample={this.props.Login.masterData.RESelectedSample}\r\n                                                                                dataState={this.state.sampleGridDataState}\r\n                                                                                dataStateChange={this.sampleGridDataStateChange}\r\n                                                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                userInfo={this.props.Login.userInfo}\r\n                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                screenName=\"IDS_SAMPLEGRID\"\r\n                                                                                jsonField={\"jsondata\"}\r\n                                                                            />\r\n                                                                        }\r\n                                                                        {/* <CustomTabs tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} paneHeight={this.state.paneHeight} /> */}\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </Card.Body>\r\n                                                        </Card>\r\n                                                    </ContentPanel>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <PerfectScrollbar>\r\n                                                        <div style={{ height: \"calc(110vh - \" + (+this.state.initialVerticalWidth + 100) + \"px)\" }}>\r\n                                                            {this.state.showTest ?\r\n                                                                <CustomTabs activeKey={this.props.Login.activeTestKey || \"IDS_RESULTS\"}\r\n                                                                    tabDetail={this.testRETabDetail()} onTabChange={this.onTestTabChange} />\r\n                                                                :\r\n                                                                <CustomTabs tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} />\r\n                                                            }\r\n                                                        </div>\r\n                                                    </PerfectScrollbar>\r\n                                                </div>\r\n                                            </SplitterLayout>\r\n                                        </ScrollBar>\r\n                                        :\r\n                                        <PerfectScrollbar ref={(ref) => { this._scrollBarRef = ref; }}>\r\n\r\n                                            <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={400}\r\n                                                customClassName=\"fixed_list_height\">\r\n                                                <PerfectScrollbar>\r\n                                                    {/* <div> */}\r\n                                                    <>\r\n                                                        {/* <PerfectScrollbar> */}\r\n                                                        <div className=\"card_group\">\r\n                                                            <ContentPanel style={this.state.showTest === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                                <Card className=\"border-0\" >\r\n                                                                    <Card.Body className='p-0'>\r\n                                                                        <Row className='no-gutters'>\r\n                                                                            <Col md={12}>\r\n                                                                                <Card>\r\n                                                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                            <h4 >{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                                                                                        </span>\r\n                                                                                        <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                                            onClick={() => this.showRESampleInfo()}>\r\n                                                                                            <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                                            {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                                                                                        </button>\r\n                                                                                    </Card.Header>\r\n                                                                                    <Card.Body className='p-0'>\r\n                                                                                        {/* <PerfectScrollbar> */}\r\n                                                                                        <TransactionListMasterJson\r\n                                                                                            paneHeight={`${testListRE && testListRE !== null && testListRE.length > 0 ? testListRE.length * 13 : 5}vh`}\r\n                                                                                            masterList={this.props.Login.masterData.searchedTest || testListRE}\r\n                                                                                            selectedMaster={this.props.Login.masterData.RESelectedTest}\r\n                                                                                            primaryKeyField=\"ntransactiontestcode\"\r\n                                                                                            getMasterDetail={this.props.getTestChildTabREDetail}\r\n                                                                                            inputParam={testChildGetREParam}\r\n                                                                                            additionalParam={[]}\r\n                                                                                            mainField=\"stestsynonym\"\r\n                                                                                            selectedListName=\"RESelectedTest\"\r\n                                                                                            objectName=\"test\"\r\n                                                                                            listName=\"IDS_TEST\"\r\n                                                                                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                                                                                            showStatusLink={true}\r\n                                                                                            statusFieldName=\"stransdisplaystatus\"\r\n                                                                                            statusField=\"ntransactionstatus\"\r\n                                                                                            needMultiSelect={true}\r\n                                                                                            subFields={this.state.testListColumns || []}\r\n                                                                                            moreField={this.state.testMoreField}\r\n                                                                                            needValidation={false}\r\n                                                                                            needFilter={false}\r\n                                                                                            filterColumnData={this.props.filterTransactionList}\r\n                                                                                            searchListName=\"searchedTest\"\r\n                                                                                            searchRef={this.searchTestRef}\r\n                                                                                            filterParam={filterTestParam}\r\n                                                                                            selectionField=\"ntransactionstatus\"\r\n                                                                                            showStatusName={true}\r\n                                                                                            selectionFieldName=\"sfilterstatus\"\r\n                                                                                            childTabsKey={[\"TestParameters\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\",\r\n                                                                                                \"ResultChangeHistory\", \"RegistrationTestComment\", \"ResultChangeHistory\"]}\r\n                                                                                            selectionList={this.props.Login.masterData.REFilterStatus && this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.REFilterStatus : []}\r\n                                                                                            skip={this.state.testskip}\r\n                                                                                            take={this.state.testtake}\r\n                                                                                            handlePageChange={this.handleTestPageChange}\r\n                                                                                            selectionColorField=\"scolorhexcode\"\r\n                                                                                            showMoreResetList={true}\r\n                                                                                            showMoreResetListName=\"RE_SAMPLE\"\r\n                                                                                            buttonCount={5}\r\n                                                                                            actionIcons={\r\n                                                                                                [{ title: this.props.intl.formatMessage({ id: \"IDS_EDITMETHODSSOURCE\" }), controlname: \"faPencilAlt\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                                                                                                { title: this.props.intl.formatMessage({ id: \"IDS_ADDINSTRUMENT\" }), controlname: \"faMicroscope\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedInstrumentId) === -1, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                                                                                                { title: this.props.intl.formatMessage({ id: \"IDS_ADDMATERIAL\" }), controlname: \"faFlask\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedMaterailId) === -1, onClick: this.props.addREMaterial, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedMaterailId } }\r\n                                                                                                    // { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\r\n                                                                                                ]\r\n                                                                                            }\r\n                                                                                            commonActions={\r\n                                                                                                // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                                                                                <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                                                                                    {testListRE.length > 0 ?\r\n                                                                                                        <>\r\n                                                                                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_TESTSTART\" })} hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\">\r\n                                                                                                                <FontAwesomeIcon icon={faPlay} />\r\n                                                                                                            </Nav.Link>\r\n                                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(resultEnterId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.props.resultGetModule(this.props.Login.masterData, this.props.Login.userInfo, resultEnterId, this.state.testskip, this.state.testtake)} >\r\n                                                                                                                <FontAwesomeIcon icon={faAddressBook} />\r\n                                                                                                            </Nav.Link>\r\n                                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_FILLDEFAULTRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(setDefaultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.defaultActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.masterData.RESelectedSample, setDefaultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                                <FontAwesomeIcon icon={faPencilRuler} />\r\n                                                                                                            </Nav.Link>\r\n                                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })} hidden={this.state.userRoleControlRights.indexOf(completeResultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.completeActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                                <FontAwesomeIcon icon={faCheckCircle} />\r\n                                                                                                            </Nav.Link>\r\n                                                                                                            <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(completeResultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.resultImport(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                                <FontAwesomeIcon icon={faFileImport} />\r\n                                                                                                            </Nav.Link>\r\n                                                                                                        </>\r\n                                                                                                        : \"\"}\r\n                                                                                                </ProductList>\r\n\r\n                                                                                                // </Tooltip>\r\n                                                                                            }\r\n                                                                                        />\r\n                                                                                        {/* </PerfectScrollbar> */}\r\n                                                                                    </Card.Body>\r\n                                                                                </Card>\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </ContentPanel>\r\n                                                            {/* <div> */}\r\n                                                            <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                                <Card className=\"border-0\">\r\n                                                                    <Card.Body className='p-0'>\r\n                                                                        <Card className='p-0'>\r\n                                                                            <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                    <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                                </span>\r\n                                                                                <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                                                                    onClick={() => this.showRETestList()}>\r\n                                                                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                                                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                                </button>\r\n                                                                            </Card.Header>\r\n                                                                            <Card.Body>\r\n                                                                                {this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\r\n                                                                                    <SampleInfoView\r\n                                                                                        data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0\r\n                                                                                            ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\r\n                                                                                        SingleItem={this.state.SingleItem}\r\n                                                                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                    /> :\r\n                                                                                    <SampleInfoGrid\r\n                                                                                        selectedSample={this.props.Login.masterData.RESelectedSample}\r\n                                                                                        dataState={this.state.sampleGridDataState}\r\n                                                                                        dataStateChange={this.sampleGridDataStateChange}\r\n                                                                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                        detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                                        screenName=\"IDS_SAMPLEGRID\"\r\n                                                                                        jsonField={\"jsondata\"}\r\n                                                                                    />\r\n                                                                                }\r\n                                                                                {/* <CustomTabs tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} paneHeight={this.state.paneHeight} /> */}\r\n                                                                            </Card.Body>\r\n                                                                        </Card>\r\n                                                                    </Card.Body>\r\n                                                                </Card>\r\n                                                            </ContentPanel>\r\n\r\n                                                            {/* </div>\r\n                                            </div> */}\r\n\r\n                                                            {/* </SplitterLayout> */}\r\n                                                            {/* </div> */}\r\n                                                            {/* </SplitterLayout>\r\n                                    </SplitterLayout> */}\r\n                                                            {/* </div > */}\r\n                                                            {/* </SplitterLayout > */}\r\n                                                            {/* </ListWrapper > */}\r\n                                                            {/* <SplitterLayout\r\n                                        vertical\r\n                                        borderColor=\"#999\"\r\n                                        percentage={true}\r\n                                        primaryIndex={0}\r\n                                        secondaryInitialSize={0}>\r\n                                        <SplitterLayout\r\n                                            vertical\r\n                                            borderColor=\"#999\"\r\n                                            percentage={true}\r\n                                            primaryIndex={0}\r\n                                            secondaryInitialSize={20}> */}\r\n\r\n                                                            {/* </SplitterLayout> */}\r\n                                                            {/* <ListWrapper>\r\n                                            <ContentPanel className=\"panel-main-content\">\r\n                                                <Card className=\"border-0\">\r\n                                                    <Card.Body className='p-0'>\r\n                                                        <Row className='no-gutters'>\r\n                                                            <Col md={12}> */}\r\n                                                            {/* <PerfectScrollbar> */}\r\n                                                            {this.state.showTest ?\r\n                                                                <CustomTabs activeKey={this.props.Login.activeTestKey || \"IDS_RESULTS\"}\r\n                                                                    tabDetail={this.testRETabDetail()} onTabChange={this.onTestTabChange} />\r\n                                                                :\r\n                                                                <CustomTabs tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} />}\r\n                                                        </div>\r\n                                                        {/* </PerfectScrollbar> */}\r\n                                                    </>\r\n                                                    {/* </PerfectScrollbar> */}\r\n                                                    {/* </Col>\r\n                                                        </Row>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </ContentPanel>\r\n                                        </ListWrapper> */}\r\n                                                </PerfectScrollbar>\r\n\r\n                                            </SplitterLayout>\r\n                                        </PerfectScrollbar>\r\n                                    }\r\n                                </SplitterLayout >\r\n                            </ListWrapper >\r\n                            {/* </PerfectScrollbar> */}\r\n                        </Col >\r\n                    </Row >\r\n                </ListWrapper >\r\n                {/* </PerfectScrollbar> */}\r\n                <SlideOutModal\r\n                    show={this.props.Login.openModal}\r\n                    size={this.props.Login.screenName === 'IDS_MEANPARAMETER' ? \"xl\" : \"lg\"}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.screenName === 'IDS_RESULTENTRY' ? \"\"\r\n                        : this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    selectedRecord={this.props.Login.screenName === 'IDS_RESULTFORMULA' ?\r\n                        this.state.selectedRecord.selectedMandatory : this.state.selectedRecord || {}}\r\n                    mandatoryFields={this.props.Login.screenName === 'IDS_INSTRUMENT' ? mandatoryFieldsInstrument :\r\n                        this.props.Login.screenName === 'IDS_TASK' ? mandatoryFieldsTask :\r\n                            this.props.Login.screenName === 'IDS_TESTMETHODSOURCE' ? mandatoryFieldsTestMethodSource :\r\n                                this.props.Login.screenName === 'IDS_PARAMETERCOMMENTS' ? mandatoryFieldsParameter :\r\n                                    this.props.Login.screenName === 'IDS_RESULTFORMULA' ? validateFormulaMandyFields : []}\r\n                    esign={this.props.Login.loadEsign}\r\n                    innerPopup={this.props.Login.screenName}\r\n                    validateEsign={this.validateEsign}\r\n                    onSaveClick={this.props.Login.showValidate ? this.calculateFormula\r\n                        : this.props.Login.screenName === 'IDS_RESULTIMPORTFILE' ? this.onSaveFileClick : this.onSaveClick}\r\n                    showValidate={this.props.Login.showValidate}\r\n                    modalEvent={this.state.modalEvent}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign\r\n                            operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onEsignInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        /> :\r\n                        this.props.Login.screenName === 'IDS_RESULTENTRY' ?\r\n                            <ResultEntryForm\r\n                                predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                parameterResults={this.state.selectedRecord.ResultParameter || []}\r\n                                Login={this.props.Login}\r\n                                handleClose={this.handleClose}\r\n                                onSaveClick={this.onSaveClick}\r\n                                onResultInputChange={this.onResultInputChange}\r\n                                onGradeEvent={this.onGradeEvent}\r\n                                getFormula={this.getFormula}\r\n                                onDropTestFile={this.onDropTestFile}\r\n                                onKeyPress={this.onKeyPress}\r\n                                needSubSample={this.props.Login.masterData.nneedsubsample}\r\n                            /> :\r\n                            this.props.Login.screenName === 'IDS_TESTMETHODSOURCE' ?\r\n                                <TestEditForm\r\n                                    methodValues={this.props.Login.masterData.MethodData}\r\n                                    sourceValues={this.props.Login.masterData.SourceData}\r\n                                    selecteRecord={this.state.selectedRecord || {}}\r\n                                    onComboChange={this.onComboChange}\r\n                                    handleClose={this.handleClose}\r\n                                    onSaveClick={this.onSaveClick}\r\n                                /> :\r\n                                this.props.Login.screenName === 'IDS_INSTRUMENT' ?\r\n                                    <ResultEntryInstrumentForm\r\n                                        instrumentcatValue={this.props.Login.masterData.InstrumentCategory}\r\n                                        instrumentValue={this.props.Login.masterData.Instrument}\r\n                                        selecteRecord={this.state.selectedRecord || {}}\r\n                                        timeZoneListData={this.props.Login.timeZoneList || []}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onComboCategoryChange={this.onComboCategoryChange}\r\n                                        onDateChange={this.onDateChange}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        needSubSample={this.props.Login.masterData.nneedsubsample}\r\n                                    /> :\r\n                                    this.props.Login.screenName === 'IDS_MATERIAL' ?\r\n                                        <ResultEntryMaterialForm\r\n                                            materialType={this.props.Login.materialType}\r\n                                            materialCategory={this.props.Login.materialCat}\r\n                                            material={this.props.Login.material}\r\n                                            materialInventory={this.props.Login.materialInventory}\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onMaterialComboChange={this.onMaterialComboChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onDateChange={this.onDateChange}\r\n                                            handleClose={this.handleClose}\r\n                                            onSaveClick={this.onSaveClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            needSubSample={this.props.Login.masterData.nneedsubsample}\r\n                                        /> :\r\n                                        this.props.Login.screenName === 'IDS_TASK' ?\r\n                                            <ResultEntryTaskForm\r\n                                                selecteRecord={this.state.selectedRecord || {}}\r\n                                                onNumericChange={this.onNumericChange}\r\n                                                onInputChange={this.onInputChange}\r\n                                                handleClose={this.handleClose}\r\n                                                onSaveClick={this.onSaveClick}\r\n                                            /> :\r\n                                            this.props.Login.screenName === 'IDS_PARAMETERCOMMENTS' ?\r\n                                                <ResultEntryParamCommetsForm\r\n                                                    selecteRecord={this.state.selectedRecord || {}}\r\n                                                    onInputChange={this.onInputChange}\r\n                                                    handleClose={this.handleClose}\r\n                                                    onSaveClick={this.onSaveClick}\r\n                                                /> : this.props.Login.screenName === 'IDS_RESULTFORMULA' ?\r\n                                                    <ResultEntryFormulaForm\r\n                                                        DynamicFields={this.props.Login.masterData.DynamicFormulaFields}\r\n                                                        // formRef={this.formRef}\r\n                                                        handleClose={this.handleClose}\r\n                                                        screenName={this.props.Login.screenName}\r\n                                                        //selectedForumulaInput={this.state.selectedForumulaInput || []}\r\n                                                        onFormulaInputChange={this.onFormulaInputChange}\r\n                                                        Login={this.props.Login}\r\n                                                        showValidate={this.props.Login.showValidate}\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                    />\r\n                                                    : this.props.Login.screenName === 'IDS_RESULTIMPORTFILE' ?\r\n                                                        <ResultEntryImport\r\n                                                            handleClose={this.handleClose}\r\n                                                            screenName={this.props.Login.screenName}\r\n                                                            onDropFile={this.onDropFile}\r\n                                                            selectedImportFile={this.props.Login.masterData.selectedImportFile || {}}\r\n                                                            deleteAttachment={this.deleteAttachment}\r\n                                                        /> :\r\n                                                        this.props.Login.screenName === 'IDS_MEANPARAMETER' ?\r\n                                                            <ResultEntryMean\r\n                                                                // onInputOnChange={this.onMeanInputOnChange}\r\n                                                                // onComboChange={this.onMeanComboChange}\r\n                                                                screenName={this.props.Login.screenName}\r\n                                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                                selectionChange={this.selectionChange}\r\n                                                                selectAll={this.state.selectAll}\r\n                                                                testMean={this.state.testMean}\r\n                                                                meanTestParameterList={this.state.meanTestParameterList || []}\r\n                                                                selectedTestParam={this.state.selectedTestParam}\r\n                                                            /> : \"\"\r\n                    }\r\n                />\r\n                {\r\n                    this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                        <TemplateForm\r\n                            templateData={this.props.Login.masterData.ChecklistData}\r\n                            nregtypecode={parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode)}\r\n                            nregsubtypecode={parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode)}\r\n                            needSaveButton={this.props.Login.needSaveButton}\r\n                            formRef={this.formRef}\r\n                            onTemplateInputChange={this.onTemplateInputChange}\r\n                            handleClose={this.closeModal}\r\n                            onTemplateComboChange={this.onTemplateComboChange}\r\n                            screenName={this.props.Login.screenName}\r\n                            onSaveClick={this.onSaveCheckList}\r\n                            Login={this.props.Login}\r\n                            viewScreen={this.props.Login.openTemplateModal}\r\n                            selectedRecord={this.state.selectedRecord || []}\r\n                            onTemplateDateChange={this.onTemplateDateChange}\r\n                            needValidation={true}\r\n                        /> : \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    defaultActions = (testChildGetREParam, RESelectedTest, RESelectedSample, setDefaultId, testskip, testtake) => {\r\n        const nregtypecode = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        const nregsubtypecode = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"completeTest\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'nregtypecode': nregtypecode, 'nregsubtypecode': nregsubtypecode, 'ncontrolcode': setDefaultId },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"default\",\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: { ...testChildGetREParam, ncontrolcode: setDefaultId },\r\n                RESelectedTest: acceptTestList,\r\n                RESelectedSample: RESelectedSample\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, setDefaultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"defaultaction\",\r\n                        operation: \"default\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.defaultTest(inputParam.testChildGetREParam, acceptTestList, RESelectedSample, nregtypecode, nregsubtypecode)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTTEST\" }));\r\n        }\r\n\r\n    }\r\n\r\n    completeActions = (testChildGetREParam, RESelectedTest, userInfo, completeResultId, testskip, testtake) => {\r\n\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"completeTest\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'ncontrolcode': completeResultId },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"complete\",\r\n                postParamList: this.postParamList,\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: testChildGetREParam,\r\n                RESelectedTest: acceptTestList,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeResultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"complete\",\r\n                        operation: \"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.completeTest(inputParam, acceptTestList, userInfo, completeResultId)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCOMPLETE\" }));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    testStartActions = (testChildGetREParam, RESelectedTest, userInfo, completeResultId, testskip, testtake) => {\r\n\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"completeTest\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'ncontrolcode': completeResultId },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"complete\",\r\n                postParamList: this.postParamList,\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: testChildGetREParam,\r\n                RESelectedTest: acceptTestList,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeResultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"complete\",\r\n                        operation: \"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.testStart(inputParam, acceptTestList, userInfo, completeResultId)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCOMPLETE\" }));\r\n        }\r\n    }\r\n\r\n    onSaveCheckList = (selectedRecord, userInfo, nregtypecode, nregsubtypecode) => {\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            let inputParam = {\r\n                \"inputData\": { userinfo: userInfo }\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { selectedRecord, userInfo, nregtypecode, nregsubtypecode, inputParam, operation: \"updatechecklist\" },\r\n                    openModal: true,\r\n                    operation: \"updatechecklist\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.onSaveCheckList(selectedRecord, userInfo, nregtypecode, nregsubtypecode)\r\n        }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'complete' || this.props.Login.operation === 'default' || this.props.Login.operation === \"updatechecklist\" ||\r\n            this.props.Login.operation === 'deleteInstrument' || this.props.Login.operation === 'createMethod' || this.props.Login.operation === 'deleteTask' || this.props.Login.operation === 'updateParameterComments') {\r\n            this.props.validateEsignCredentialComplete(inputParam, \"openModal\");\r\n        }\r\n\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    onSaveFileClick = (saveType, formRef) => {\r\n        const selectedImportFile = this.props.Login.masterData.selectedImportFile;\r\n        const acceptedFile = selectedImportFile ? selectedImportFile.sfilename : [];\r\n        const formData = new FormData();\r\n\r\n        // if(nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFile && acceptedFile.length > 0) {\r\n            acceptedFile.forEach((file, index) => {\r\n                formData.append(\"uploadedFile\" + index, file);\r\n            });\r\n            formData.append(\"filecount\", acceptedFile.length);\r\n        } else {\r\n            return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEFILETOSUBMIT\" }))\r\n        }\r\n\r\n        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n        formData.append(\"nregtypecode\", JSON.stringify(this.props.Login.masterData.realRegTypeValue.nregtypecode));\r\n        formData.append(\"nregsubtypecode\", JSON.stringify(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode));\r\n        formData.append(\"stransactiontestcode\", JSON.stringify(this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"));\r\n        this.props.resultImportFile(formData, this.props.Login.masterData);\r\n    }\r\n\r\n    onDropFile = (acceptedFile) => {\r\n        // let selectedImportFile = this.props.Login.masterData.selectedImportFile || [];\r\n        // selectedImportFile['sfilename'] = acceptedFile;\r\n        this.props.Login.masterData.selectedImportFile['sfilename'] = acceptedFile\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: this.props.Login.masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        // this.setState({selectedImportFile});\r\n    }\r\n\r\n    onFormulaInputChange = (event, index, fields) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        let selectedForumulaInput = this.state.selectedRecord.selectedForumulaInput || [];\r\n        let selectedMandatory = this.state.selectedRecord.selectedMandatory || [];\r\n        let dynamicformulafields = {};\r\n\r\n        if (event) {\r\n            if (fields.ndynamicformulafieldcode === FORMULAFIELDTYPE.INTEGER) {\r\n                const value = event.target.value.replace(/[^-^0-9]/g, '');\r\n                if (/^-?\\d*?$/.test(value) || value === \"\") {\r\n                    if (this.state.selectedRecord.formulainput) {\r\n                        dynamicformulafields.svalues = value;\r\n                        dynamicformulafields.sparameter = fields.sdescription;\r\n                        selectedForumulaInput[index] = dynamicformulafields;\r\n                        selectedMandatory[index] = event.target.value;\r\n                    }\r\n                }\r\n                selectedRecord[\"selectedForumulaInput\"] = selectedForumulaInput;\r\n                selectedRecord[\"selectedMandatory\"] = selectedMandatory;\r\n\r\n                this.setState({ selectedRecord: selectedRecord });\r\n            } else {\r\n                const value = event.target.value.replace(/[^-^0-9.]/g, '');\r\n                if (/^-?\\d*?\\.?\\d*?$/.test(value) || value === \"\") {\r\n                    if (this.state.selectedRecord.formulainput) {\r\n                        dynamicformulafields.svalues = value;\r\n                        dynamicformulafields.sparameter = fields.sdescription;\r\n                        selectedForumulaInput[index] = dynamicformulafields;\r\n                        selectedMandatory[index] = event.target.value;\r\n                    }\r\n                }\r\n                // else {\r\n                //     dynamicformulafields.svalues = selectedForumulaInput.length > 0 ? selectedForumulaInput[index].svalues : \"\";\r\n                //     selectedForumulaInput[index].svalues = selectedForumulaInput.length > 0 ? selectedForumulaInput[index].svalues : \"\";\r\n\r\n                // }\r\n                selectedRecord[\"selectedForumulaInput\"] = selectedForumulaInput;\r\n                selectedRecord[\"selectedMandatory\"] = selectedMandatory;\r\n\r\n                this.setState({ selectedRecord: selectedRecord });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        //this.setState({selectedRecord});\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputChange = (Data, name) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        if (Data) {\r\n            selectedRecord[name] = Data.target.value;\r\n            //this.setState({selectedRecord});\r\n        }\r\n        else {\r\n            selectedRecord[name] = [];\r\n            //this.setState({selectedRecord});\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onNumericChange = (numericData, numericName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        if (numericData) {\r\n            if (numericName !== \"scomments\") {\r\n                selectedRecord[numericName] = numericData;\r\n                //this.setState({selectedRecord});\r\n            } else {\r\n                selectedRecord[numericName] = numericData.target.value;\r\n                //this.setState({selectedRecord});\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[numericName] = \"\";\r\n            //this.setState({selectedRecord});\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onDateChange = (dateName, dateValue) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        selectedRecord[dateName] = dateValue;\r\n        if (dateName === \"dfromdate\" || dateName === \"dtodate\") {\r\n            this.setState({ selectedRecord });\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { selectedRecord: selectedRecord }\r\n            // }\r\n            //this.props.updateStore(updateInfo);\r\n        }\r\n\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let meanTestParameterList = this.state.meanTestParameterList || [];\r\n        let selectedMeanTestParam = this.state.selectedMeanTestParam || new Map();\r\n        if (checked) {\r\n            const data = meanTestParameterList.map(item => {\r\n                item.selected = checked;\r\n                selectedMeanTestParam.set(item.ntransactionresultcode, item.sresult);\r\n                return item;\r\n            });\r\n\r\n            let selectedTestParam = \"\";\r\n            let selectedTestParamMean = 0;\r\n            let size = 0;\r\n            if (selectedMeanTestParam.size > 0) {\r\n                [...selectedMeanTestParam.values()].forEach(item => (\r\n                    item !== null && item !== \"\" ?\r\n                        (selectedTestParam = selectedTestParam === \"\" ? item : selectedTestParam + \"+\" + item,\r\n                            size = size + 1,\r\n                            selectedTestParamMean = parseInt(selectedTestParamMean) + parseInt(item)) : \"\"\r\n                ));\r\n                selectedTestParamMean = selectedTestParamMean / size;\r\n            }\r\n\r\n            this.setState({\r\n                meanTestParameterList: data, selectedMeanTestParam, selectedTestParam,\r\n                testMean: selectedTestParamMean,\r\n                selectAll: checked\r\n            });\r\n        }\r\n        else {\r\n            const data = meanTestParameterList.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            this.setState({\r\n                meanTestParameterList: data, selectedMeanTestParam: new Map(),\r\n                selectedTestParam: \"\",\r\n                testMean: \"\",\r\n                selectAll: checked\r\n            });\r\n        }\r\n    }\r\n\r\n    selectionChange = (event) => {\r\n        let meanTestParameterList = this.state.meanTestParameterList || [];\r\n        let selectedMeanTestParam = this.state.selectedMeanTestParam || new Map();\r\n        meanTestParameterList.map(item => {\r\n            if (item.ntransactionresultcode === event.dataItem.ntransactionresultcode) {\r\n                item.selected = !event.dataItem.selected;\r\n            }\r\n            return item;\r\n        });\r\n        if (event.dataItem.selected) {\r\n            selectedMeanTestParam.set(event.dataItem.ntransactionresultcode, event.dataItem.sresult);\r\n        }\r\n        else {\r\n            if (selectedMeanTestParam.has(event.dataItem.ntransactionresultcode)) {\r\n                selectedMeanTestParam.delete(event.dataItem.ntransactionresultcode)\r\n            }\r\n        }\r\n        let selectedTestParam = \"\";\r\n        let selectedTestParamMean = 0;\r\n        let size = 0;\r\n        if (selectedMeanTestParam.size > 0) {\r\n            [...selectedMeanTestParam.values()].forEach(item => (\r\n                item !== null && item !== \"\" ?\r\n                    (selectedTestParam = selectedTestParam === \"\" ? item : selectedTestParam + \"+\" + item,\r\n                        size = size + 1,\r\n                        selectedTestParamMean = parseInt(selectedTestParamMean) + parseInt(item)) : \"\"\r\n            ));\r\n            selectedTestParamMean = selectedTestParamMean / size;\r\n        }\r\n\r\n        this.setState({\r\n            meanTestParameterList, selectedMeanTestParam, selectedTestParam, testMean: selectedTestParamMean,\r\n            selectAll: this.valiateCheckAll(meanTestParameterList)\r\n        });\r\n    }\r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            selectAll = false;\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n    onMeanComboChange = (comboData, comboName) => {\r\n        const selectedMeanTestParam = this.state.selectedMeanTestParam || [];\r\n        selectedMeanTestParam[comboName] = comboData[0];\r\n        let data = \"\";\r\n        if (selectedMeanTestParam[\"parametervalue\"] === undefined) {\r\n            data = comboData[0].value;\r\n        }\r\n        else {\r\n            data = selectedMeanTestParam[\"parametervalue\"] + \"+\" + comboData[0].value;\r\n        }\r\n        selectedMeanTestParam[\"parametervalue\"] = data;\r\n        this.setState({ selectedMeanTestParam });\r\n    }\r\n\r\n    // onMeanInputOnChange = (event) => {\r\n    //     const selectedMeanTestParam = this.state.selectedMeanTestParam || [];\r\n    //     selectedMeanTestParam[event.target.name] = selectedMeanTestParam[event.target.name] + \"+\" + event.target.value;\r\n    //     this.setState({selectedMeanTestParam});\r\n    // }\r\n    onMaterialComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n            //this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n            //this.setState({ selectedRecord });\r\n        }\r\n        switch (comboName) {\r\n            case 'nmaterialtypecode':\r\n                this.props.getREMaterialCategoryByType({ selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            case 'nmaterialcatcode':\r\n                this.props.getREMaterialByCategory({ selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            case 'nmaterialcode':\r\n                this.props.getREMaterialInvertoryByMaterial({ selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            default:\r\n                this.props.getAvailableMaterialQuantity({ selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n\r\n        }\r\n    }\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n            //this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n            //this.setState({ selectedRecord });\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onGradeEvent = (ResultParameter, index, parameter) => {\r\n        if (ResultParameter.length > 0 && ResultParameter[index] !== undefined && ResultParameter[index].sresult !== null) {\r\n            let selectedRecord = this.state.selectedRecord || [];\r\n            let selectedResultGrade = this.state.selectedRecord.selectedResultGrade || [];\r\n            if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n                selectedResultGrade[index] = {\r\n                    ngradecode: ResultParameter[index].sresult !== \"\" ?\r\n                        numericGrade(parameter, numberConversion(parseFloat(ResultParameter[index].sresult), parseInt(parameter.nroundingdigits))) : -1\r\n                };\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n                if (ResultParameter[index].sresult !== null) {\r\n                    selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: 0 };\r\n                }\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n                if (ResultParameter[index].sresult !== null) {\r\n                    selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: 4 };\r\n                }\r\n            }\r\n            //this.props.Login.masterData[\"selectedResultGrade\"] = selectedResultGrade;\r\n            selectedRecord.selectedResultGrade = selectedResultGrade;\r\n\r\n            this.setState({\r\n                selectedRecord\r\n            });\r\n\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { masterData: this.props.Login.masterData }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = [...this.props.Login.masterData.RE_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = [...this.props.Login.masterData.RE_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = [...this.props.Login.masterData.RE_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.RESelectedSample, \"npreregno\");\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    onResultInputChange = (event, index, parameter) => {\r\n        //let ResultParameter = this.props.Login.masterData.ResultParameter ? this.props.Login.masterData.ResultParameter : [];\r\n        let selectedRecord = this.state.selectedRecord || [];\r\n        let ResultParameter = this.state.selectedRecord.ResultParameter ? this.state.selectedRecord.ResultParameter : [];\r\n        let sresult = \"\";\r\n        let value = -1;\r\n        let acceptedFile = [];\r\n        let ncalculatedresult;\r\n\r\n        if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\r\n                sresult = event.target.value;\r\n                ncalculatedresult = 4\r\n            } else {\r\n                sresult = ResultParameter[index]['sresult'] === null ? \"\" : ResultParameter[index]['sresult'];\r\n                ncalculatedresult = ResultParameter[index]['ncalculatedresult'];\r\n            }\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n            if (event != null) {\r\n                sresult = event.item.spredefinedname;\r\n                value = event.item.ngradecode;\r\n                ncalculatedresult = 4\r\n            }\r\n            else {\r\n                sresult = \"\";\r\n                value = -1;\r\n                ncalculatedresult = 4\r\n            }\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n            sresult = event.target.value;\r\n            ncalculatedresult = 4\r\n        }\r\n        if (parameter.nparametertypecode === parameterType.ATTACHMENT) {\r\n            sresult = event[0].name;\r\n            acceptedFile = event;\r\n            ncalculatedresult = 4\r\n        }\r\n        ResultParameter[index]['sresult'] = sresult\r\n        ResultParameter[index]['sfinal'] = sresult\r\n        ResultParameter[index]['acceptedFile'] = acceptedFile\r\n        ResultParameter[index]['editable'] = true\r\n        ResultParameter[index]['ngradecode'] = value\r\n        ResultParameter[index]['ncalculatedresult'] = ncalculatedresult\r\n\r\n        // this.props.Login.masterData.ResultParameter = ResultParameter;\r\n        selectedRecord.ResultParameter = ResultParameter\r\n        this.setState({\r\n            selectedRecord: selectedRecord\r\n        });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { masterData: this.props.Login.masterData }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    updateTestMethodSource(inputData, masterData, ncontrolcode) {\r\n        let inputParam = {\r\n\r\n            inputData: { ...inputData, 'userinfo': this.props.Login.userInfo, ncontrolcode },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"createMethod\",\r\n            screenName: \"IDS_TESTMETHODSOURCE\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //inputData1: inputData,\r\n            masterData: masterData\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    //screenName: \"completeaction\",\r\n                    operation: \"createMethod\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateTestMethodSource(inputData, masterData)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateParameterComments(inputData, masterData, ncontrolcode) {\r\n        // let inputData1 = { ...inputData, ncontrolcode }\r\n        let inputParam = {\r\n            inputData: { ...inputData, ncontrolcode, 'userinfo': this.props.Login.userInfo },\r\n            operation: this.props.Login.operation,\r\n            screenName: \"IDS_RESULT\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //inputData: inputData1,\r\n            masterData: masterData\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    //screenName: \"completeaction\",\r\n                    operation: \"updateParameterComments\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateParameterComments(inputData, masterData)\r\n        }\r\n    }\r\n\r\n    onSaveMean = (saveType) => {\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n\r\n        let resultParameter = this.props.Login.selectedTestParameterMean || {};\r\n        //let resultParameter = { };\r\n\r\n        resultParameter[\"ncalculatedresult\"] = 4;\r\n        resultParameter[\"sresult\"] = this.state.testMean;\r\n        resultParameter[\"sfinal\"] = numberConversion(parseFloat(this.state.testMean), parseInt(resultParameter.nroundingdigit));\r\n\r\n        resultParameter[\"ngradecode\"] = numericGrade(resultParameter, parseInt(this.state.testMean));\r\n        resultParameter['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n        resultParameter['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n        // resultParameter['ntransactionresultcode'] = meanParameter.ntransactionresultcode;\r\n        // resultParameter['ntransactiontestcode'] = meanParameter.ntransactiontestcode;\r\n        // resultParameter['nparametertypecode'] = meanParameter.nparametertypecode;\r\n        //console.log(\"result:\", resultParameter);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"filecount\", 0);\r\n        formData.append(\"nregtypecode\", nregtypecode);\r\n        formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n        formData.append(\"transactiontestcode\", resultParameter.ntransactiontestcode);\r\n        formData.append(\"resultData\", JSON.stringify([resultParameter]));\r\n\r\n        const inputParam = {\r\n            classUrl: \"resultentrybysample\",\r\n            methodUrl: \"TestParameterResult\",\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: \"update\",\r\n            displayName: this.props.Login.inputParam.displayName, saveType\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onSaveClick = (saveType) => {\r\n        if (this.props.Login.screenName === \"IDS_MEANPARAMETER\") {\r\n            this.onSaveMean(saveType);\r\n        }\r\n        else {\r\n            let ResultParameter = this.state.selectedRecord.ResultParameter || [];\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            let selectedId = this.props.Login.selectedId || null;\r\n            const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n            const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n            const classUrl = \"resultentrybysample\";\r\n            const formData = new FormData();\r\n            let neditable = 0;\r\n            let resultParameters = [];\r\n            let inputParam = {};\r\n            let inputData = [];\r\n            let i = 0;\r\n            //const postParam = {inputListName: \"RESelectedTest\", selectedObject: \"RESelectedTest\", primaryKeyField: \"ntransactionstestcode\" };\r\n            if (this.props.Login.screenName === \"IDS_RESULTENTRY\") {\r\n                if (ResultParameter.length > 0 && ResultParameter !== undefined) {\r\n                    ResultParameter.map((resultData, index) => {\r\n                        let results = {};\r\n                        if (resultData.editable === true) {\r\n                            neditable = 1;\r\n                            switch (resultData.nparametertypecode) {\r\n                                case 1:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                        sresult: resultData.sresult,\r\n                                        sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\"\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                        numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                    results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                        numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 2:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: resultData.sresult,\r\n                                        sfinal: resultData.sresult\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.ngradecode;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 3:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: resultData.sresult,\r\n                                        sfinal: resultData.sresult\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = grade.FIO;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 4:\r\n                                    if (resultData.acceptedFile !== undefined) {\r\n                                        const splittedFileName = resultData.acceptedFile ? resultData.acceptedFile[0].name.split('.') : \"\";\r\n                                        const fileExtension = resultData.acceptedFile ? resultData.acceptedFile[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                        const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                        results[\"jsondata\"] = {\r\n                                            ssystemfilename: uniquefilename,\r\n                                            nfilesize: resultData.acceptedFile[0].size,\r\n                                            ncalculatedresult: 4,\r\n                                            sresult: resultData.sresult,\r\n                                            sfinal: resultData.sresult\r\n                                        }\r\n                                        results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                        results[\"ncalculatedresult\"] = 4;\r\n                                        results[\"sresult\"] = resultData.sresult;\r\n                                        results[\"sfinal\"] = resultData.sresult;\r\n                                        results[\"ngradecode\"] = grade.FIO;\r\n                                        results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                        results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                        results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                        results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                        results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                        results[\"ssystemfilename\"] = uniquefilename;\r\n                                        results[\"nfilesize\"] = resultData.acceptedFile[0].size;\r\n                                        formData.append(\"uploadedFile\" + index, resultData.acceptedFile[0]);\r\n                                        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                        formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                        i++;\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            if (Object.values(results).length > 0) {\r\n                                resultParameters.push(results);\r\n                            }\r\n                        }\r\n                        return null;\r\n                    });\r\n\r\n                    if (neditable === 0) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: { loading: false, openModal: false }\r\n                        }\r\n                        return this.props.updateStore(updateInfo);\r\n                    }\r\n\r\n                    formData.append(\"filecount\", i);\r\n                    formData.append(\"nregtypecode\", nregtypecode);\r\n                    formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n                    formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n                    formData.append(\"resultData\", JSON.stringify(resultParameters));\r\n                    const tests = this.props.Login.masterData.RESelectedTest ?\r\n                        this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\"\r\n                    formData.append(\"transactiontestcode\", tests);\r\n                    //let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"TestParameterResult\",\r\n                        inputData: { userinfo: this.props.Login.userInfo },\r\n                        formData: formData,\r\n                        isFileupload: true,\r\n                        operation: \"update\",\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n                    }\r\n                }\r\n                else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { loading: false, openModal: false }\r\n                    }\r\n                    return this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTMETHODSOURCE\") {\r\n                inputData = {\r\n                    ntype: 3,\r\n                    nflag: 3,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    ntranscode: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n                    ntestcode: this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                    npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                    ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                    nmethodcode: selectedRecord.nmethodcode.value,\r\n                    nsourcecode: selectedRecord.nsourcecode.value,\r\n                    ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: \"IDS_RESULTS\",\r\n                    ncontrolcode: this.props.Login.ncontrolcode\r\n                }\r\n                // inputParam = {\r\n                //     classUrl: classUrl,\r\n                //     methodUrl: \"TestMethodSource\",\r\n                //     inputData: inputData,\r\n                //     isFileupload: false,\r\n                //     operation: \"update\",\r\n                //     displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                // }\r\n\r\n                this.updateTestMethodSource(inputData, this.props.Login.masterData, this.props.Login.ncontrolcode);\r\n                return;\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n                let inputData = [];\r\n                if (this.props.Login.operation === \"update\") {\r\n                    inputData = {\r\n                        ResultUsedInstrument: {\r\n                            nresultusedinstrumentcode: selectedRecord.nresultusedinstrumentcode,\r\n                            npreregno: selectedRecord.npreregno,\r\n                            ninstrumentcatcode: selectedRecord.ninstrumentcatcode.value,\r\n                            ninstrumentcode: selectedRecord.ninstrumentcode.value,\r\n                            dfromdate: formatInputDate(selectedRecord.dfromdate, false),\r\n                            dtodate: formatInputDate(selectedRecord.dtodate, false),\r\n                            stzfromdate: selectedRecord.ntzfromdate.label,\r\n                            stztodate: selectedRecord.ntztodate.label,\r\n                            ntzfromdate: selectedRecord.ntzfromdate.value,\r\n                            ntztodate: selectedRecord.ntztodate.value,\r\n                            ntransactiontestcode: selectedRecord.ntransactiontestcode\r\n\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                            this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    }\r\n                }\r\n                else {\r\n                    inputData = {\r\n                        ResultUsedInstrument: {\r\n                            ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                            npreregno: selectedRecord.npreregno,\r\n                            ninstrumentcatcode: selectedRecord.ninstrumentcatcode.value,\r\n                            ninstrumentcode: selectedRecord.ninstrumentcode.value,\r\n                            dfromdate: formatInputDate(selectedRecord.dfromdate, false),\r\n                            dtodate: formatInputDate(selectedRecord.dtodate, false),\r\n                            stzfromdate: selectedRecord.ntzfromdate.label,\r\n                            stztodate: selectedRecord.ntztodate.label,\r\n                            ntzfromdate: selectedRecord.ntzfromdate.value,\r\n                            ntztodate: selectedRecord.ntztodate.value\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode,\r\n                        transactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                            this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                    }\r\n                }\r\n                inputParam = {\r\n                    classUrl: classUrl,\r\n                    methodUrl: \"ResultUsedInstrument\",\r\n                    inputData: inputData, selectedId,\r\n                    isFileupload: false,\r\n                    activeTestKey: \"IDS_INSTRUMENT\",\r\n                    operation: this.props.Login.operation,\r\n                    displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n                let inputData = [];\r\n                if (parseFloat(this.state.selectedRecord.susedquantity) <= parseFloat(this.state.selectedRecord.savailablequantity)) {\r\n                    if (this.props.Login.operation === \"update\") {\r\n                        inputData = {\r\n                            ResultUsedMaterial: {\r\n                                nresultusedmaterialcode: selectedRecord.nresultusedmaterialcode,\r\n                                ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                                npreregno: selectedRecord.npreregno,\r\n                                nmaterialtypecode: selectedRecord.nmaterialtypecode.value,\r\n                                nmaterialcategorycode: selectedRecord.nmaterialcategorycode.value,\r\n                                nmaterialcode: selectedRecord.nmaterialcode.value,\r\n                                ninventorycode: selectedRecord.nmaterialinventorycode.value,\r\n                                nsectioncode: selectedRecord.nsectioncode,\r\n                                jsondata: {\r\n                                    sarno: selectedRecord.sarno,\r\n                                    ssamplearno: selectedRecord.ssamplearno,\r\n                                    stestsynonym: selectedRecord.stestsynonym,\r\n                                    smaterialcatname: selectedRecord.nmaterialcatcode.label,\r\n                                    smaterialname: selectedRecord.nmaterialcode.label,\r\n                                    sinventoryid: selectedRecord.nmaterialinventorycode.label,\r\n                                    nqtyused: selectedRecord.susedquantity,\r\n                                    scarriergas: selectedRecord.scarriergas,\r\n                                    smobilephase: selectedRecord.smobilephase,\r\n                                    sremarks: selectedRecord.sremarks,\r\n                                    susername: this.props.Login.userInfo.susername\r\n                                }\r\n                            },\r\n                            MaterialInventoryTrans: {\r\n                                nmaterialinventorycode: selectedRecord.nmaterialinventorycode.value,\r\n                                nsectioncode: selectedRecord.nsectioncode,\r\n                                jsondata: {\r\n                                    IDS_INVENTORYID: selectedRecord.nmaterialinventorycode.label,\r\n                                    nqtyused: selectedRecord.susedquantity,\r\n                                }\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode,\r\n                            nresultusedmaterialcode: selectedRecord.nresultusedmaterialcode,\r\n                            ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                                this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                        }\r\n                    }\r\n                    else {\r\n                        inputData = {\r\n                            ResultUsedMaterial: {\r\n                                ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                                npreregno: selectedRecord.npreregno,\r\n                                nmaterialtypecode: selectedRecord.nmaterialtypecode.value,\r\n                                nmaterialcategorycode: selectedRecord.nmaterialcatcode.value,\r\n                                nmaterialcode: selectedRecord.nmaterialcode.value,\r\n                                ninventorycode: selectedRecord.nmaterialinventorycode.value,\r\n                                nsectioncode: selectedRecord.nsectioncode,\r\n                                jsondata: {\r\n                                    sarno: selectedRecord.sarno,\r\n                                    ssamplearno: selectedRecord.ssamplearno,\r\n                                    stestsynonym: selectedRecord.stestsynonym,\r\n                                    smaterialcatname: selectedRecord.nmaterialcatcode.label,\r\n                                    smaterialname: selectedRecord.nmaterialcode.label,\r\n                                    sinventoryid: selectedRecord.nmaterialinventorycode.label,\r\n                                    nqtyused: selectedRecord.susedquantity,\r\n                                    scarriergas: selectedRecord.scarriergas,\r\n                                    smobilephase: selectedRecord.smobilephase,\r\n                                    sremarks: selectedRecord.sremarks\r\n                                }\r\n                            },\r\n                            MaterialInventoryTrans: {\r\n                                nmaterialinventorycode: selectedRecord.nmaterialinventorycode.value,\r\n                                nsectioncode: selectedRecord.nsectioncode,\r\n                                jsondata: {\r\n                                    nqtyused: selectedRecord.susedquantity,\r\n                                    IDS_INVENTORYID: selectedRecord.nmaterialinventorycode.label\r\n                                }\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode,\r\n                            transactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                                this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                        }\r\n                    }\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"ResultUsedMaterial\",\r\n                        inputData: inputData, selectedId,\r\n                        isFileupload: false,\r\n                        activeTestKey: \"IDS_MATERIAL\",\r\n                        operation: this.props.Login.operation,\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"Quantity Not available\" }))\r\n                    return null;\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_TASK\") {\r\n                if ((selectedRecord.sanalysistime && selectedRecord.sanalysistime !== \"\")\r\n                    || (selectedRecord.smisctime && selectedRecord.smisctime !== \"\")\r\n                    || (selectedRecord.spreanalysistime && selectedRecord.spreanalysistime !== \"\")\r\n                    || (selectedRecord.spreparationtime && selectedRecord.spreparationtime !== \"\")\r\n                    || (selectedRecord.scomments && selectedRecord.scomments !== \"\")) {\r\n                    if (this.props.Login.operation === \"update\") {\r\n                        inputData = {\r\n                            ResultUsedTasks: {\r\n                                nresultusedtaskcode: selectedRecord.nresultusedtaskcode,\r\n                                jsondata: {\r\n                                    //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                    sarno: this.props.Login.masterData.RESelectedTest[0].sarno,\r\n                                    ssamplearno: this.props.Login.masterData.RESelectedTest[0].ssamplearno,\r\n                                    stestsynonym: selectedRecord.stestsynonym,\r\n                                    sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\r\n                                    sanalyst: this.props.Login.userInfo.susername,\r\n                                    smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\r\n                                    spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\r\n                                    spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\r\n                                    scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\"\r\n                                }\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ntransactiontestcode: this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.map(sample => sample.ntransactiontestcode).join(\",\"),\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode\r\n                        }\r\n                    }\r\n                    else {\r\n                        let taskArry = [];\r\n                        this.props.Login.masterData.RESelectedTest &&\r\n                            this.props.Login.masterData.RESelectedTest.map(test =>\r\n\r\n                                taskArry.push({\r\n                                    //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                    ntransactiontestcode: parseInt(test.ntransactiontestcode),\r\n                                    // sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\r\n                                    // sanalyst: this.props.Login.userInfo.susername,\r\n                                    // smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\r\n                                    // spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\r\n                                    // spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\r\n                                    // scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\r\n                                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                                    jsondata: {\r\n                                        //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                        sarno: test.sarno,\r\n                                        ssamplearno: test.ssamplearno,\r\n                                        stestsynonym: test.stestsynonym,\r\n                                        sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\r\n                                        sanalyst: this.props.Login.userInfo.susername,\r\n                                        smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\r\n                                        spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\r\n                                        spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\r\n                                        scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\"\r\n                                    }\r\n                                })\r\n                            )\r\n                        inputData = {\r\n                            ResultUsedTasks: taskArry,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ntransactiontestcode: this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.map(sample => sample.ntransactiontestcode).join(\",\"),\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode,\r\n                        }\r\n                    }\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"ResultUsedTasks\",\r\n                        inputData: inputData, selectedId,\r\n                        activeTestKey: \"IDS_TASK\",\r\n                        isFileupload: false,\r\n                        operation: this.props.Login.operation,\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                    }\r\n                } else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERTASKTIME\" }));\r\n                    return;\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_PARAMETERCOMMENTS\") {\r\n                inputData = {\r\n                    ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                    ntransactionresultcode: selectedRecord.ntransactionresultcode,\r\n                    sresultcomment: selectedRecord.sresultcomment,\r\n                    transactiontestcode: selectedRecord.transactiontestcode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nregtypecode: nregtypecode,\r\n                    nregsubtypecode: nregsubtypecode,\r\n                    ncontrolcode: this.props.Login.ncontrolcode\r\n\r\n                }\r\n                // inputParam = {\r\n                //     classUrl: classUrl,\r\n                //     methodUrl: \"ParameterComments\",\r\n                //     inputData: inputData, selectedId,\r\n                //     isFileupload: false,\r\n                //     operation: this.props.Login.operation,\r\n                //     displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                // }\r\n                this.updateParameterComments(inputData, this.props.Login.masterData, selectedRecord.ncontrolcode);\r\n                return;\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_CHECKLISTRESULT\") {\r\n                let lstResultCheckList = [];\r\n                if (selectedRecord && selectedRecord.editedQB) {\r\n                    selectedRecord.editedQB.map(qbcode =>\r\n                        lstResultCheckList.push(selectedRecord[qbcode]));\r\n                    inputData = {\r\n                        ntransactiontestcode: selectedRecord.ntransactiontestcode.toString(),\r\n                        ntransactionresultcode: selectedRecord.ntransactionresultcode,\r\n                        transactiontestcode: selectedRecord.transactiontestcode,\r\n                        ResultCheckList: lstResultCheckList,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode\r\n                    }\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"ResultEntryChecklist\",\r\n                        inputData: inputData, selectedId,\r\n                        isFileupload: false,\r\n                        operation: this.props.Login.operation,\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                    }\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { showTest, showSample, userRoleControlRights, controlMap, resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState, documentDataState, resultChangeDataState, testCommentDataState,\r\n            historyDataState, sampleListColumns, subSampleListColumns, testListColumns,\r\n            SingleItem, sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, sampleMoreField, subSampleMoreField,\r\n            testMoreField, selectedRecord, SampleType, RegistrationType, RegistrationSubType,\r\n            REFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion, DynamicSampleColumns,\r\n            DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem, DynamicGridMoreField,\r\n            validateFormulaMandyFields, skip, take, testskip, testtake, selectedFilter } = this.state;\r\n        let bool = false;\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                bool = true;\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n        }\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitem ? dynamicColumn.testlistmoreitem : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataSate = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] }\r\n            bool = true;\r\n            resultDataState = dataSate;\r\n            instrumentDataState = dataSate;\r\n            materialDataState = dataSate;\r\n            taskDataState = dataSate;\r\n            documentDataState = dataSate;\r\n            resultChangeDataState = dataSate;\r\n            historyDataState = dataSate;\r\n            testCommentDataState = dataSate;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n        }\r\n        if (this.props.Login.validateFormulaMandyFields !== previousProps.Login.validateFormulaMandyFields) {\r\n            bool = true;\r\n            validateFormulaMandyFields = this.props.Login.validateFormulaMandyFields;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            REFilterStatus = constructOptionList(this.props.Login.masterData.REFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", 'descending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestsynonym', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n\r\n            // if (this.props.Login.masterData.DynamicColumns && this.props.Login.masterData.DynamicColumns !== previousProps.Login.masterData.DynamicColumns) {\r\n            //     bool = true;\r\n            //     sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 3);\r\n            //     subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 3);\r\n            //     testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 3);\r\n            //     sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 8);\r\n            //     subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 8);\r\n            //     testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 8);\r\n            //     SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 4)\r\n            //     SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 5)\r\n            //     SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 6)\r\n            //     sampleMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], 7)\r\n            //     subSampleMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], 7)\r\n            //     testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], 7)\r\n            // }\r\n\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.REFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {masterData: this.props.Login.masterData,showTest,showSample }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            REFilterStatus = REFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            this.setState({\r\n                showTest, showSample, userRoleControlRights, controlMap, resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState, documentDataState, resultChangeDataState, testCommentDataState,\r\n                historyDataState, sampleListColumns, subSampleListColumns, testListColumns,\r\n                SingleItem, sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, sampleMoreField, subSampleMoreField,\r\n                testMoreField, selectedRecord,\r\n                SampleType,\r\n                RegistrationType,\r\n                RegistrationSubType,\r\n                REFilterStatus,\r\n                REJobStatus,\r\n                Testvalues,\r\n                ApprovalConfigVersion,\r\n                validateFormulaMandyFields,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                DynamicGridItem, DynamicGridMoreField\r\n            })\r\n        }\r\n\r\n        if (this.props.Login.meanTestParameterList !== previousProps.Login.meanTestParameterList) {\r\n            this.setState({ meanTestParameterList: this.props.Login.meanTestParameterList });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n        //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n        // }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n    crudMaster, updateStore, getsubSampleREDetail, getTestREDetail, getTestChildTabREDetail, resultGetModule,\r\n    completeTest, testMethodSourceEdit, addREInstrument, addREMaterial, deleteInstrumentRecord, fetchInstrumentRecord, deleteTaskRecord, fetchTaskRecord,\r\n    parameterRecord, checkListRecord, onSaveCheckList, defaultTest, getFormula, getRERegistrationType, getRERegistrationSubType, fetchMaterialRecord,\r\n    getREApprovalConfigVersion, getResultEntryDetails, calculateFormula, getREFilterStatus, getREFilterTestData, getREJobStatus, getSampleChildTabREDetail,\r\n    viewAttachment, getAttachmentCombo, deleteAttachment, resultImportFile, validateEsignCredentialComplete, getCommentsCombo, updateTestMethodSource,\r\n    filterTransactionList, validateEsignCredential, updateParameterComments, previewSampleReport, getMeanCalculationTestParameter, getREMaterialCategoryByType, getREMaterialByCategory, getREMaterialInvertoryByMaterial, getAvailableMaterialQuantity, testStart//,deleteResultUsedMaterial\r\n\r\n})(injectIntl(ResultEntry));"]},"metadata":{},"sourceType":"module"}