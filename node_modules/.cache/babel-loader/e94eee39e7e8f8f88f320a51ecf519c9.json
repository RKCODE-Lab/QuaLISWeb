{"ast":null,"code":"//import { CommonDragLogic } from '@progress/kendo-react-grid/dist/npm/drag/CommonDragLogic';\nimport { transactionStatus } from './Enumeration'; //added by perumalraj on 07-08-2020\n\nexport function extractFieldHeader(fieldList) {\n  let columnList = [];\n\n  if (fieldList !== undefined && fieldList.length !== 0) {\n    columnList = fieldList.filter(function (value, index, arr) {\n      return value[\"controlType\"] !== \"NA\";\n    });\n  }\n\n  return columnList;\n}\nexport function getCurrentDateTime() {\n  const tempDate = new Date();\n  const date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n  return date;\n}\nexport function sortData(masterData, sortType, columnName) {\n  if (masterData) {\n    if (Array.isArray(masterData)) {\n      sortByField(masterData, sortType, columnName);\n    } else {\n      Object.keys(masterData).map(data => {\n        if (Array.isArray(masterData[data])) {\n          sortByField(masterData[data], sortType, columnName);\n        }\n\n        return null;\n      });\n    }\n  }\n\n  return masterData;\n}\nexport function sortByField(masterData, sortType, columnName) {\n  if (masterData !== undefined && masterData.length > 0) {\n    if (columnName === undefined || columnName === null) {\n      if (masterData[0] !== undefined) {\n        columnName = Object.keys(masterData[0])[0];\n      }\n    }\n\n    if (sortType === \"ascending\") {\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ? typeof obj1[columnName] === 'string' ? obj1[columnName].toLowerCase() > obj2[columnName].toLowerCase() ? 1 : -1 : obj1[columnName] > obj2[columnName] ? 1 : -1 : \"\");\n    } else {\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ? typeof obj1[columnName] === 'string' ? obj1[columnName].toLowerCase() < obj2[columnName].toLowerCase() ? 1 : -1 : obj1[columnName] < obj2[columnName] ? 1 : -1 : \"\");\n    }\n  }\n\n  return masterData;\n}\nexport function searchData(filterValue, originalData, fieldList) {\n  let searchedData = [];\n\n  if (originalData.length > 0) {\n    let temp = originalData.filter(item => {\n      const itemArray = [];\n      fieldList.map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\"); //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\n      //  console.log(filterValue.toLowerCase())\n\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n    });\n    searchedData = temp;\n  }\n\n  return searchedData;\n} //end- search logic\n//For Searching Json Data\n\nexport function searchJsonData(filterValue, originalData, fieldList) {\n  let searchedData = [];\n\n  if (originalData.length > 0) {\n    let temp = originalData.filter(item => {\n      const itemArray = [];\n      fieldList.map(itemKey => itemKey.jsonfeild ? item[itemKey.jsonfeild][itemKey.feild] && item[itemKey.jsonfeild][itemKey.feild] !== null ? itemArray.push(typeof item[itemKey.jsonfeild][itemKey.feild] === \"string\" ? item[itemKey.jsonfeild][itemKey.feild].toLowerCase() : item[itemKey.jsonfeild][itemKey.feild].toString().toLowerCase()) : \"\" : item[itemKey.feild] && item[itemKey.feild] !== null ? itemArray.push(typeof item[itemKey.feild] === \"string\" ? item[itemKey.feild].toLowerCase() : item[itemKey.feild].toString().toLowerCase()) : \"\"); //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\n      //  console.log(filterValue.toLowerCase())\n\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n    });\n    searchedData = temp;\n  }\n\n  return searchedData;\n} //Given by Perumal\n//To get Label Value Pair for a search select combo box\n\nexport function getComboLabelValue(selectedItem, optionList, findKey, labelKey, jsonfeild, slanguagetypecode) {\n  let lblValueList = [];\n  optionList.map(option => {\n    if (option[jsonfeild]) {\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\n        lblValueList.push({\n          \"value\": option[findKey],\n          \"label\": option[jsonfeild][labelKey][slanguagetypecode] ? option[jsonfeild][labelKey][slanguagetypecode] : option[jsonfeild][labelKey]\n        });\n      }\n\n      return null;\n    } else {\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\n        lblValueList.push({\n          \"value\": option[findKey],\n          \"label\": option[labelKey]\n        });\n      }\n\n      return null;\n    }\n  });\n  return selectedItem[findKey] = lblValueList[0];\n} // To provide esign rights\n\nexport function showEsign(itemMap, nformcode, ncontrolcode) {\n  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\n  const index = controlList.findIndex(x => x.ncontrolcode === ncontrolcode);\n  return controlList[index] && controlList[index].nneedesign === 3 ? true : false;\n} // To provide control rights\n\nexport function getControlMap(itemMap, nformcode) {\n  const controlList = itemMap ? itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [] : [];\n  const controlMap = new Map();\n  controlList.map(item => {\n    return controlMap.set(item.scontrolname, { ...item\n    });\n  });\n  return controlMap;\n}\nexport function formatDate(date) {\n  let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = '' + d.getFullYear(),\n      hour = '' + d.getHours(),\n      min = '' + d.getMinutes(),\n      sec = '' + d.getSeconds();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  if (hour.length < 2) hour = '0' + hour;\n  if (min.length < 2) min = '0' + min;\n  if (sec.length < 2) sec = '0' + sec;\n  return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec);\n}\nexport function getStartOfDay(date) {\n  date.setHours(0, 0, 0);\n  return formatDate(date);\n}\nexport function getEndOfDay(date) {\n  date.setHours(23, 59, 59);\n  return formatDate(date);\n}\nexport function getDateByMinutes(date, holdMinutes) {\n  const someDate = new Date(date);\n  const adjustedDate = new Date(someDate);\n  return adjustedDate.setMinutes(someDate.getMinutes() + holdMinutes);\n}\nexport function validateTwoDigitDate(value) {\n  if (value.length === 1) {\n    value = \"0\".concat(value);\n  }\n\n  return value;\n} // To provide esign rights for child Tabs\n\nexport function showEsignForChildTabs(itemMap, ncontrolcode) {\n  //  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\n  const index = itemMap.findIndex(x => x.ncontrolcode === ncontrolcode);\n  return itemMap[index] && itemMap[index].nneedesign === 3 ? true : false;\n}\nexport function addDays(dateValue, daysToAdd) {\n  const copy = new Date(Number(dateValue));\n  copy.setDate(dateValue.getDate() + daysToAdd);\n  return copy;\n}\nexport function validatePhoneNumber(inputValue) {\n  let output = \"\"; // Get the regular expression to test against for this particular object\n\n  let regAllow = /^[0-9,',',\\n,\\s,[,\\], '+',-]+$/; // Check for an allowed character, if not found, cancel the keypress's event bubbling\n\n  if (inputValue.match(regAllow)) {\n    // Do nothing, i.e. allow.\n    output = inputValue;\n  }\n\n  return output;\n}\nexport function validateEmail(inputValue) {\n  let output = false; //let regAllow = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //checks for presence of '@', '.' and 2 characters after '.'\n  //let regAllow = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\n  //A form with an email field that that must be in the following order: characters@characters.domain \n  //(characters followed by an @ sign, followed by more characters, and then a \".\". After the \".\" sign, you can only write 2 to 3 letters from a to z:\n\n  let regAllow = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/; // Check for an allowed character, if not found, cancel the keypress's event bubbling\n\n  if (inputValue.match(regAllow)) {\n    // Do nothing, i.e. allow.\n    output = true; //inputValue;\n  }\n\n  return output;\n}\nexport function formatInputDate(date, includeMilliseconds) {\n  let formattedDate = \"\";\n\n  if (includeMilliseconds) {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + 'T' + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \".\" + (\"000\" + date.getMilliseconds()).slice(-3) + \"Z\";\n  } else {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + 'T' + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \"Z\";\n  }\n\n  return formattedDate;\n}\nexport function formatInputDateWithoutT(date, includeMilliseconds) {\n  let formattedDate = \"\";\n\n  if (includeMilliseconds) {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \".\" + (\"000\" + date.getMilliseconds()).slice(-3);\n  } else {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2);\n  }\n\n  return formattedDate;\n}\nexport function create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : r && 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n} //added by perumalraj on 03/11/2020\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\n\nexport function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n  const filterArray = firstArray.filter(function (x) {\n    return !secondArray.some(function (y) {\n      return x[PrimaryKey] === y[PrimaryKey];\n    });\n  });\n  return filterArray;\n}\nexport function listDataFromDynamicArray(arr, indexvalue) {\n  return arr && arr.filter(x => x[indexvalue]);\n} // export const fileViewURL = 'http://192.168.0.79:8097/';\n//Added by P.Sudharshanan\n\nexport function replaceUpdatedObject(newList, oldList, primaryKey) {\n  newList && newList.length > 0 && newList.map(newlistItem => {\n    let oldIndex = oldList ? oldList.findIndex(x => x[primaryKey] === newlistItem[primaryKey]) : -1;\n    oldList.splice(oldIndex, 1, newlistItem);\n    return null;\n  });\n  return oldList;\n} //added by perumalraj for insert newly added element into an array\n\nexport function updatedObjectWithNewElement(oldList, newList) {\n  oldList = [...newList, ...oldList];\n  return oldList;\n} //added by perumalraj for replace the old values wih new one into an array\n\nexport function replaceObjectWithNewElement(oldList) {\n  oldList = [...oldList];\n  return oldList;\n} //Added by L.Subashini to find the index positions nf the occurence of the specified character\n// export const findIndices = (str, char) =>\n//   str.split('').reduce((indices, letter, index) => {\n//     letter === char && indices.push(index);\n//     return indices;\n//   }, [])\n//added by perumalraj on 23/12/2020\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\n\nexport function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey, colorColName) {\n  // const Peru = Object.keys(Array2).map(function (k) { return Array2[k][PrimaryKey] }).join(\",\");\n  // alert(Peru);\n  //const TestSet = new Set(Peru);\n  // const FinalOutput = [\n  //   ...Array1.filter(({ PrimaryKey }) => !TestSet.has(PrimaryKey))\n  // ];\n  // Array1 = Array1.filter(val => !Array2.includes(val[PrimaryKey]));\n  // alert(Array1)\n  // return Array1;\n  const filterArray = firstArray.filter(function (x) {\n    return secondArray.some(function (y) {\n      if (x[PrimaryKey] === y[PrimaryKey]) {\n        x[colorColName] = y[colorColName];\n      }\n\n      return x[PrimaryKey] === y[PrimaryKey];\n    });\n  });\n  return filterArray;\n}\nexport function constructOptionList(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  const defaultStatus = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\n  const optionList = Object.values(sortField ? sortOrder === \"ascending\" ? options.sort((itemA, itemB) => itemA[sortField] < itemB[sortField] ? -1 : 1) : options.sort((itemA, itemB) => itemA[sortField] > itemB[sortField] ? -1 : 1) : alphabeticalSort ? options.sort((itemA, itemB) => typeof itemA[optionValue] === 'string' ? itemA[optionValue].toLowerCase() < itemB[optionValue].toLowerCase() ? -1 : 1 : itemA[optionValue] < itemB[optionValue] ? -1 : 1) : options).map(item => {\n    if (item[defaultStatus] === transactionStatus.YES) {\n      defaultValue.push({\n        label: item[optionValue],\n        value: item[optionId],\n        item: item\n      });\n    }\n\n    return {\n      label: item[optionValue],\n      value: item[optionId],\n      item: item\n    };\n  });\n  optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function constructjsonOptionList(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName, source, isMultiLingual, languageTypeCode) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\"; // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\n  //   options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  //   :\n  //   options = options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  // ))\n  //   : (alphabeticalSort ?\n  //     options.sort((itemA, itemB) =>\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\n  // )\n  // )\n\n  const optionList = options.map(item => {\n    const jsondata = item[source] ? item[source].value ? JSON.parse(item[source].value) : item.jsondata : item.jsondata;\n    let defaultStatus = jsondata[defaultStatusFieldName] || item[defaultStatusFieldName];\n\n    if (defaultStatus === transactionStatus.YES) {\n      defaultValue.push({\n        label: isMultiLingual ? jsondata[optionValue][languageTypeCode] : jsondata[optionValue],\n        value: jsondata[optionId],\n        item\n      });\n    }\n\n    let label = isMultiLingual ? jsondata[optionValue][languageTypeCode] : jsondata[optionValue];\n    let value = jsondata[optionId] || item[optionId];\n    return {\n      label,\n      value,\n      item\n    };\n  });\n  optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function constructjsonOptionDefault(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName, source, isMultiLingual, languageTypeCode) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\"; // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\n  //   options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  //   :\n  //   options = options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  // ))\n  //   : (alphabeticalSort ?\n  //     options.sort((itemA, itemB) =>\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\n  // )\n  // )\n\n  const optionList = options.map(item => {\n    const jsondata = item[source] ? item[source].value ? JSON.parse(item[source].value) : item.item.jsondata : item.item.jsondata;\n    let defaultStatus = jsondata[defaultStatusFieldName] || item[defaultStatusFieldName];\n\n    if (defaultStatus === transactionStatus.YES) {\n      defaultValue.push({\n        label: isMultiLingual ? jsondata[optionValue][languageTypeCode] : jsondata[optionValue],\n        value: jsondata[optionId],\n        item\n      });\n    }\n  }); //optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function validateLoginId(inputValue) {\n  let output = false; //let regAllow = /^\\w+(\\w+)*$/;\n\n  let regAllow = /^[a-zA-Z0-9-_]*$/; //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\n\n  if (inputValue.match(regAllow)) {\n    output = true;\n  }\n\n  return output;\n} //added by perumalraj on 02-02-2021 for single click java function in list master view and \n\nexport function fillRecordBasedOnCheckBoxSelection(masterData, backEndResponse, mapKeys, CheckBoxOperation, primaryKeyName, removeElementFromArray) {\n  if (CheckBoxOperation === 1) {\n    //check box select\n    mapKeys.forEach(item => {\n      return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 2) {\n    //check box de-select\n    mapKeys.forEach(item => {\n      return masterData[item] = filterRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], removeElementFromArray.length > 0 && removeElementFromArray[0][primaryKeyName] ? removeElementFromArray[0][primaryKeyName] : \"\", primaryKeyName);\n    });\n  } else if (CheckBoxOperation === 3) {\n    //single select\n    mapKeys.forEach(item => {\n      return masterData[item] = replaceObjectWithNewElement(backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 4) {\n    //single de-select\n    mapKeys.forEach(item => {\n      return masterData[item] = getRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], backEndResponse.length > 0 && backEndResponse[0][primaryKeyName] ? backEndResponse[0][primaryKeyName] : \"\", primaryKeyName);\n    }); // return masterData[item] = replaceObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\n  } else if (CheckBoxOperation === 5) {\n    //after multi select and then click single record\n    mapKeys.forEach(item => {\n      let filteredmasterData = filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\n      return masterData[item] = updatedObjectWithNewElement(filteredmasterData, backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 6) {\n    //after multi select and then click single record\n    mapKeys.forEach(item => {\n      filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\n      return masterData[item] = getSameRecordFromTwoArrays(masterData[item] ? masterData[item] : [], backEndResponse ? backEndResponse : [], primaryKeyName);\n    });\n  } else {\n    Object.keys(backEndResponse).forEach(item => {\n      return masterData[item] = backEndResponse[item];\n    });\n  }\n} //added by perumalraj on 02-02-2021\n\nexport function filterRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\n  const finalValueAfterFilter = masterData.filter(function (master) {\n    return master[primaryKeyName] !== value;\n  });\n  return finalValueAfterFilter;\n} //added by perumalraj on 02-02-2021\n\nexport function getRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\n  const finalValueAfterFilter = masterData.filter(function (master) {\n    return master[primaryKeyName] === value;\n  });\n  return finalValueAfterFilter;\n} //added by perumalraj on 06/02/2021\n//compare two arrays of object and filter the record which are not present in the second array and first array data will be \n//returned with the filtered data\n\nexport function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey) {\n  const filterArray = firstArray.filter(function (x) {\n    if (Array.isArray(secondArray)) {\n      return secondArray.some(function (y) {\n        return x[PrimaryKey] === y[PrimaryKey];\n      });\n    }\n  });\n  return filterArray;\n} //added by perumalraj on 16-02-2021\n//compare two arrays and remove the same element and add the newer one into it\n\nexport function getRemovedRecordAndAddNewRecord(firstArray, secondArray, ElementToSearch, PrimaryKey) {\n  ElementToSearch.forEach(item => {\n    let itemAfterfilter = filterRecordBasedOnPrimaryKeyName(firstArray, item, PrimaryKey);\n    firstArray = itemAfterfilter;\n  });\n  return updatedObjectWithNewElement(firstArray, secondArray);\n}\nexport function bytesToSize(bytes) {\n  if (!isNaN(parseInt(bytes))) {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  } else {\n    return bytes;\n  }\n}\nexport function onDropAttachFileList(selectedRecord, attachedFiles, maxSize) {\n  if (selectedRecord) {\n    let listFile = selectedRecord ? selectedRecord : [];\n\n    if (listFile.length + attachedFiles.length <= maxSize || maxSize === 0) {\n      attachedFiles && attachedFiles.length > 0 && attachedFiles.map(newlistItem => {\n        let oldIndex = listFile ? listFile.findIndex(x => x['name'] === newlistItem['name']) : -1;\n\n        if (oldIndex === -1) {\n          listFile.splice(listFile.length, 0, newlistItem);\n        } else {\n          listFile.splice(oldIndex, 1, newlistItem);\n        }\n\n        return null;\n      });\n      return listFile;\n    }\n\n    return attachedFiles;\n  } else {\n    return attachedFiles;\n  }\n}\nexport function deleteAttachmentDropZone(selectedRecord, file) {\n  let remainingList;\n\n  if (typeof selectedRecord === \"string\") {\n    remainingList = \"\";\n  } else {\n    if (selectedRecord.length >= 1) {\n      const fileList = selectedRecord.filter(fileItem => {\n        return fileItem.name !== file.name;\n      });\n      remainingList = fileList;\n    } else {\n      remainingList = \"\";\n    }\n  }\n\n  return remainingList;\n}\nexport function checkCancelAndReject(sample) {\n  return sample.ntransactionstatus === transactionStatus.CANCELLED || sample.ntransactionstatus === transactionStatus.REJECT;\n}\nexport function covertDatetoString(newDate) {\n  const startDate = new Date(newDate);\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\n  return fromDate;\n}\nexport function convertDatetoStringByTimeZone(userInfo, value) {\n  const dateValue = new Date(value);\n  const prevMonth = validateTwoDigitDate(String(dateValue.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(dateValue.getDate()));\n  const dateArray = [];\n  const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n  const secondField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[1];\n\n  if (firstField === \"dd\") {\n    dateArray.push(prevDay);\n    dateArray.push(splitChar);\n\n    if (secondField === \"MM\") {\n      dateArray.push(prevMonth);\n      dateArray.push(splitChar);\n      dateArray.push(dateValue.getFullYear());\n    } else {\n      dateArray.push(dateValue.getFullYear());\n      dateArray.push(splitChar);\n      dateArray.push(prevMonth);\n    }\n  } else if (firstField === \"MM\") {\n    dateArray.push(prevMonth);\n    dateArray.push(splitChar);\n\n    if (secondField === \"dd\") {\n      dateArray.push(prevDay);\n      dateArray.push(splitChar);\n      dateArray.push(dateValue.getFullYear());\n    } else {\n      dateArray.push(dateValue.getFullYear());\n      dateArray.push(splitChar);\n      dateArray.push(prevDay);\n    }\n  } else {\n    dateArray.push(dateValue.getFullYear());\n    dateArray.push(splitChar);\n\n    if (secondField === \"dd\") {\n      dateArray.push(prevDay);\n      dateArray.push(splitChar);\n      dateArray.push(prevMonth);\n    } else {\n      dateArray.push(prevMonth);\n      dateArray.push(splitChar);\n      dateArray.push(prevDay);\n    }\n  }\n\n  return dateArray;\n}\nexport function convertDateValuetoString(startDateValue, endDateValue, userInfo, noBreadCrumb) {\n  const startDate = startDateValue ? rearrangeDateFormat(userInfo, startDateValue) : new Date();\n  const endDate = endDateValue ? rearrangeDateFormat(userInfo, endDateValue) : new Date(); // const startDate = startDateValue ? new Date(startDateValue) : new Date();\n  // const endDate = endDateValue ? new Date(endDateValue) : new Date();\n\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  const currentDay = validateTwoDigitDate(String(endDate.getDate())); //const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n\n  const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\n  const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\n  const fromDate = fromDateOnly + \"T00:00:00\";\n  const toDate = toDateOnly + \"T23:59:59\";\n\n  if (noBreadCrumb) {\n    return {\n      fromDate,\n      toDate\n    };\n  } else {\n    const breadCrumbFrom = convertDatetoStringByTimeZone(userInfo, startDate); //startDate.getFullYear() + splitChar + prevMonth + splitChar + prevDay;\n\n    const breadCrumbto = convertDatetoStringByTimeZone(userInfo, endDate); //endDate.getFullYear() + splitChar + currentMonth + splitChar + currentDay;\n\n    return {\n      fromDate,\n      toDate,\n      breadCrumbFrom,\n      breadCrumbto\n    };\n  }\n}\nexport function rearrangeDateFormat(userInfo, dateValue) {\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\"; //   console.log(\"splitChar:\", splitChar);\n\n  if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0]; // console.log(\"firstField:\", firstField);\n\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \";\n    const datetime = dateValue.split(timeSplitChar);\n    const dateArray = datetime[0].split(splitChar);\n\n    if (firstField === \"dd\") {\n      const day = dateArray[0];\n      const month = dateArray[1];\n      const year = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else if (firstField === \"yyyy\") {\n      const year = dateArray[0];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else {\n      return new Date(dateValue);\n    }\n  } else {\n    return dateValue;\n  }\n}\nexport function convertUTCDateToLocalDate(date) {\n  var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n  var offset = date.getTimezoneOffset() / 60;\n  var hours = date.getHours();\n  newDate.setHours(hours - offset);\n  return newDate;\n}\nexport function convertDateTimetoString(inputDate, userInfo) {\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\n  const year = inputDate.getFullYear();\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\n\n  if (splitChar === \"/\" || splitChar === \"-\") {\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n\n    if (firstField === \"dd\") {\n      return day + splitChar + month + splitChar + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    } else if (firstField === \"yyyy\") {\n      return year + splitChar + month + splitChar + day + \"T\" + hours + \":\" + minutes + \":\" + seconds;\n    } else {\n      return new Date(inputDate);\n    }\n  } else {\n    return inputDate;\n  }\n}\nexport function convertDateTimetoStringDBFormat(inputDate, userInfo) {\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  let dbformat = \"-\";\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\n  const year = inputDate.getFullYear();\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\n\n  if (splitChar === \"/\" || splitChar === \"-\") {\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n\n    if (firstField === \"dd\") {\n      return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    } else if (firstField === \"yyyy\") {\n      return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    } else {\n      return new Date(inputDate);\n    }\n  } else {\n    return inputDate;\n  }\n}\nexport function parentChildComboLoad(columnList, comboData, selectedRecord, childColumnList, withoutCombocomponent, ParentComboValues, languagetypeCode) {\n  let comboValues = {};\n\n  if (columnList.length > 0) {\n    columnList.map(x => {\n      if (x.inputtype === 'combo') {\n        if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \n          {\n            selectedRecord[x.label] = undefined;\n\n            if (comboData[x.label].length > 0) {\n              if (comboData[x.label][0].label === undefined) {\n                const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode);\n                comboData[x.label] = optionList.get(\"OptionList\");\n\n                if (optionList.get(\"DefaultValue\") !== undefined) {\n                  selectedRecord[x.label] = optionList.get(\"DefaultValue\");\n                }\n              } else {\n                comboData[x.label] = comboData[x.label];\n                const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode);\n\n                if (optionList.get(\"DefaultValue\") !== undefined) {\n                  selectedRecord[x.label] = optionList.get(\"DefaultValue\");\n                }\n              }\n            } else {\n              comboData[x.label] = [];\n            }\n\n            comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode);\n          } else {\n          comboValues = {\n            \"comboData\": comboData,\n            \"selectedRecord\": selectedRecord\n          };\n        }\n      } else {\n        comboValues = {\n          comboData: comboData,\n          ...comboValues,\n          selectedRecord: { ...selectedRecord,\n            [x.label]: ParentComboValues.jsondata ? ParentComboValues.jsondata[x.displaymember] : ParentComboValues[x.displaymember] || \"\"\n          }\n        }; // comboValues[\"selectedRecord\"][x.label] = ParentComboValues[x.displaymember] ||\"\"\n      }\n    });\n  } else {\n    comboValues = {\n      \"comboData\": comboData,\n      \"selectedRecord\": selectedRecord\n    };\n  }\n\n  return comboValues;\n}\nexport function childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode) {\n  if (selectedRecord[x.label] !== undefined) {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== -1) {\n          // const childOptionData = comboData[y.label].filter(filterData =>\n          //     JSON.parse(filterData[y.source].value)[x.valuemember] === selectedRecord[x.label].item[x.valuemember])\n          if (comboData[y.label].length > 0) {\n            if (comboData[y.label][0].label === undefined) {\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode);\n              comboData[y.label] = optionChildList.get(\"OptionList\");\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent);\n              } else {\n                selectedRecord[y.label] = undefined;\n              }\n            } else {\n              comboData[y.label] = comboData[y.label];\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source);\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent);\n              } else {\n                selectedRecord[y.label] = undefined;\n              }\n            }\n          } else {\n            comboData[y.label] = [];\n          }\n        } else {\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n\n          if (readonlyfields !== -1) {\n            selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? selectedRecord[x.label].jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]];\n          }\n        }\n      });\n    }\n  } else {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        selectedRecord[y.label] = undefined;\n        comboData[y.label] = undefined;\n      });\n    }\n  }\n\n  const newRecord = {\n    \"comboData\": comboData,\n    \"selectedRecord\": selectedRecord\n  };\n  return newRecord;\n}\nexport function comboChild(data, columnList, childColumnList, slice) {\n  let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n  if (!childColumnList.hasOwnProperty(columnList.label)) {\n    if (childColumnList[columnList.label] === undefined) {\n      if (columnList.hasOwnProperty(\"child\")) {\n        let childList = [];\n        columnList.child.map(childData => {\n          const index = data.findIndex(x => x.label === childData.label);\n\n          if (index !== -1) {\n            childList.push(data[index]);\n\n            if (slice) {\n              data = [...data.slice(0, index), ...data.slice(index + 1)];\n            }\n          }\n        });\n        childColumnList[columnList.label] = childList;\n\n        if (childList.length > 0) {\n          childList.map(y => {\n            if (y.hasOwnProperty(\"child\")) {\n              const val = this.comboChild(data, y, childColumnList, slice);\n              retunObj[\"data\"] = val.data;\n              retunObj[\"childColumnList\"] = val.childColumnList;\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          });\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n    } else {\n      retunObj[\"data\"] = data;\n      retunObj[\"childColumnList\"] = childColumnList;\n    }\n  } else {\n    retunObj[\"data\"] = data;\n    retunObj[\"childColumnList\"] = childColumnList;\n  }\n\n  return retunObj;\n}\nexport function ageCalculate(date) {\n  const now = new Date();\n  const today = new Date(now.getYear(), now.getMonth(), now.getDate());\n  let yearNow = now.getYear();\n  let monthNow = now.getMonth();\n  let dateNow = now.getDate();\n  let dob = new Date(date);\n  let yearDob = dob.getYear();\n  let monthDob = dob.getMonth();\n  let dateDob = dob.getDate();\n  let age = {};\n  let ageString = \"\";\n  let yearString = \"\";\n  let monthString = \"\";\n  let dayString = \"\";\n  let yearAge = yearNow - yearDob;\n  let monthAge = 0;\n  let dateAge = 0;\n  if (monthNow >= monthDob) monthAge = monthNow - monthDob;else {\n    yearAge--;\n    monthAge = 12 + monthNow - monthDob;\n  }\n  if (dateNow >= dateDob) dateAge = dateNow - dateDob;else {\n    monthAge--;\n    dateAge = 31 + dateNow - dateDob;\n\n    if (monthAge < 0) {\n      monthAge = 11;\n      yearAge--;\n    }\n  }\n  age = {\n    years: yearAge,\n    months: monthAge,\n    days: dateAge\n  };\n  if (age.years > 1) yearString = \" years\";else yearString = \" year\";\n  if (age.months > 1) monthString = \" months\";else monthString = \" month\";\n  if (age.days > 1) dayString = \" days\";else dayString = \" day\";\n  if (age.years > 0 && age.months > 0 && age.days > 0) ageString = age.years + yearString + \", \" + age.months + monthString + \" and \" + age.days + dayString + \" \";else if (age.years === 0 && age.months === 0 && age.days > 0) ageString = \" \" + age.days + dayString + \" \";else if (age.years > 0 && age.months === 0 && age.days === 0) ageString = age.years + yearString + \"  \";else if (age.years > 0 && age.months > 0 && age.days === 0) ageString = age.years + yearString + \" and \" + age.months + monthString + \" \";else if (age.years === 0 && age.months > 0 && age.days > 0) ageString = age.months + monthString + \" and \" + age.days + dayString + \"\";else if (age.years > 0 && age.months === 0 && age.days > 0) ageString = age.years + yearString + \" and \" + age.days + dayString + \" \";else if (age.years === 0 && age.months > 0 && age.days === 0) ageString = age.months + monthString + \" \";else ageString = \"0 days\";\n  console.log(ageString);\n  return ageString;\n}\nexport function rearrangeDateFormatDateOnly(userInfo, dateValue) {\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n\n  if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \";\n    const datetime = dateValue.split(timeSplitChar);\n    return datetime[0];\n  } else {\n    return dateValue;\n  }\n}\nexport function getSameRecordFromTwoDifferentArrays(firstArray, secondArray, PrimaryKey) {\n  let filterArray = [];\n\n  for (var i = 0; i < firstArray.length; i++) {\n    for (var j = 0; j < secondArray.length; j++) {\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\n        filterArray.push(secondArray[j]);\n      }\n    }\n  }\n\n  return filterArray;\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/CommonScript.js"],"names":["transactionStatus","extractFieldHeader","fieldList","columnList","undefined","length","filter","value","index","arr","getCurrentDateTime","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sortData","masterData","sortType","columnName","Array","isArray","sortByField","Object","keys","map","data","sort","obj1","obj2","toLowerCase","searchData","filterValue","originalData","searchedData","temp","item","itemArray","itemKey","push","toString","findIndex","element","includes","searchJsonData","jsonfeild","feild","getComboLabelValue","selectedItem","optionList","findKey","labelKey","slanguagetypecode","lblValueList","option","showEsign","itemMap","nformcode","ncontrolcode","controlList","values","x","nneedesign","getControlMap","controlMap","Map","set","scontrolname","formatDate","d","month","day","year","hour","min","sec","join","concat","getStartOfDay","setHours","getEndOfDay","getDateByMinutes","holdMinutes","someDate","adjustedDate","setMinutes","validateTwoDigitDate","showEsignForChildTabs","addDays","dateValue","daysToAdd","copy","Number","setDate","validatePhoneNumber","inputValue","output","regAllow","match","validateEmail","formatInputDate","includeMilliseconds","formattedDate","slice","getMilliseconds","formatInputDateWithoutT","create_UUID","dt","getTime","uuid","replace","c","r","Math","random","floor","filterRecordBasedOnTwoArrays","firstArray","secondArray","PrimaryKey","filterArray","some","y","listDataFromDynamicArray","indexvalue","replaceUpdatedObject","newList","oldList","primaryKey","newlistItem","oldIndex","splice","updatedObjectWithNewElement","replaceObjectWithNewElement","filterStatusBasedOnTwoArrays","colorColName","constructOptionList","options","optionId","optionValue","sortField","sortOrder","alphabeticalSort","defaultStatusFieldName","optionMap","defaultValue","defaultStatus","itemA","itemB","YES","label","constructjsonOptionList","source","isMultiLingual","languageTypeCode","jsondata","JSON","parse","constructjsonOptionDefault","validateLoginId","fillRecordBasedOnCheckBoxSelection","backEndResponse","mapKeys","CheckBoxOperation","primaryKeyName","removeElementFromArray","forEach","filterRecordBasedOnPrimaryKeyName","getRecordBasedOnPrimaryKeyName","filteredmasterData","getSameRecordFromTwoArrays","finalValueAfterFilter","master","getRemovedRecordAndAddNewRecord","ElementToSearch","itemAfterfilter","bytesToSize","bytes","isNaN","parseInt","sizes","i","log","round","pow","onDropAttachFileList","selectedRecord","attachedFiles","maxSize","listFile","deleteAttachmentDropZone","file","remainingList","fileList","fileItem","name","checkCancelAndReject","sample","ntransactionstatus","CANCELLED","REJECT","covertDatetoString","newDate","startDate","prevMonth","String","prevDay","fromDate","convertDatetoStringByTimeZone","userInfo","dateArray","splitChar","ssitedatetime","indexOf","firstField","split","secondField","convertDateValuetoString","startDateValue","endDateValue","noBreadCrumb","rearrangeDateFormat","endDate","currentMonth","currentDay","fromDateOnly","toDateOnly","toDate","breadCrumbFrom","breadCrumbto","timeSplitChar","datetime","time","formatted","convertUTCDateToLocalDate","getTimezoneOffset","offset","hours","convertDateTimetoString","inputDate","minutes","seconds","convertDateTimetoStringDBFormat","dbformat","parentChildComboLoad","comboData","childColumnList","withoutCombocomponent","ParentComboValues","languagetypeCode","comboValues","inputtype","valuemember","displaymember","get","childComboLoad","hasOwnProperty","child","z","optionChildList","readonlyfields","k","newRecord","comboChild","retunObj","childList","childData","val","ageCalculate","now","today","getYear","yearNow","monthNow","dateNow","dob","yearDob","monthDob","dateDob","age","ageString","yearString","monthString","dayString","yearAge","monthAge","dateAge","years","months","days","console","rearrangeDateFormatDateOnly","getSameRecordFromTwoDifferentArrays","j"],"mappings":"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","sourcesContent":["//import { CommonDragLogic } from '@progress/kendo-react-grid/dist/npm/drag/CommonDragLogic';\r\nimport { transactionStatus } from './Enumeration';\r\n\r\n\r\n//added by perumalraj on 07-08-2020\r\nexport function extractFieldHeader(fieldList) {\r\n  let columnList = [];\r\n  if (fieldList !== undefined && fieldList.length !== 0) {\r\n    columnList = fieldList.filter(function (value, index, arr) {\r\n      return (value[\"controlType\"] !== \"NA\");\r\n    });\r\n  }\r\n  return columnList;\r\n}\r\n\r\nexport function getCurrentDateTime() {\r\n  const tempDate = new Date();\r\n  const date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\r\n  return date;\r\n}\r\n\r\nexport function sortData(masterData, sortType, columnName) {\r\n  if (masterData) {\r\n    if (Array.isArray(masterData)) {\r\n      sortByField(masterData, sortType, columnName);\r\n    }\r\n    else {\r\n      Object.keys(masterData).map((data) => {\r\n        if (Array.isArray(masterData[data])) {\r\n          sortByField(masterData[data], sortType, columnName)\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n  return masterData;\r\n}\r\n\r\nexport function sortByField(masterData, sortType, columnName) {\r\n  if (masterData !== undefined && masterData.length > 0) {\r\n    if (columnName === undefined || columnName === null) {\r\n      if (masterData[0] !== undefined) {\r\n        columnName = Object.keys(masterData[0])[0];\r\n      }\r\n    }\r\n    if (sortType === \"ascending\") {\r\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ?\r\n        (typeof (obj1[columnName]) === 'string' ?\r\n          obj1[columnName].toLowerCase() > obj2[columnName].toLowerCase() ? 1 : -1\r\n          : obj1[columnName] > obj2[columnName] ? 1 : -1)\r\n        : \"\"\r\n      );\r\n\r\n    }\r\n    else {\r\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ?\r\n        (typeof (obj1[columnName]) === 'string' ?\r\n          obj1[columnName].toLowerCase() < obj2[columnName].toLowerCase() ? 1 : -1\r\n          : obj1[columnName] < obj2[columnName] ? 1 : -1)\r\n        : \"\"\r\n      );\r\n    }\r\n  }\r\n  return masterData;\r\n}\r\n\r\nexport function searchData(filterValue, originalData, fieldList) {\r\n  let searchedData = [];\r\n\r\n  if (originalData.length > 0) {\r\n    let temp = originalData.filter(item => {\r\n      const itemArray = [];\r\n      fieldList.map(itemKey =>\r\n        item[itemKey] && item[itemKey] !== null ?\r\n          itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n            : item[itemKey].toString().toLowerCase())\r\n          : \"\")\r\n      //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\r\n      //  console.log(filterValue.toLowerCase())\r\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1\r\n    }\r\n    )\r\n    searchedData = temp;\r\n  }\r\n  return searchedData;\r\n}\r\n//end- search logic\r\n\r\n//For Searching Json Data\r\nexport function searchJsonData(filterValue, originalData, fieldList) {\r\n  let searchedData = [];\r\n\r\n  if (originalData.length > 0) {\r\n    let temp = originalData.filter(item => {\r\n      const itemArray = [];\r\n      fieldList.map(itemKey =>\r\n        itemKey.jsonfeild ?\r\n          item[itemKey.jsonfeild][itemKey.feild] && item[itemKey.jsonfeild][itemKey.feild] !== null ?\r\n            itemArray.push(typeof item[itemKey.jsonfeild][itemKey.feild] === \"string\" ? item[itemKey.jsonfeild][itemKey.feild].toLowerCase()\r\n              : item[itemKey.jsonfeild][itemKey.feild].toString().toLowerCase())\r\n            : \"\"\r\n          :\r\n          item[itemKey.feild] && item[itemKey.feild] !== null ?\r\n            itemArray.push(typeof item[itemKey.feild] === \"string\" ?\r\n              item[itemKey.feild].toLowerCase()\r\n              : item[itemKey.feild].toString().toLowerCase())\r\n            : \"\")\r\n      //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\r\n      //  console.log(filterValue.toLowerCase())\r\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1\r\n    }\r\n    )\r\n    searchedData = temp;\r\n  }\r\n  return searchedData;\r\n}\r\n\r\n\r\n\r\n//Given by Perumal\r\n//To get Label Value Pair for a search select combo box\r\nexport function getComboLabelValue(selectedItem, optionList, findKey, labelKey, jsonfeild,slanguagetypecode) {\r\n\r\n  let lblValueList = [];\r\n  optionList.map((option) => {\r\n    if (option[jsonfeild]) {\r\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\r\n        lblValueList.push({ \"value\": option[findKey], \"label\": option[jsonfeild][labelKey][slanguagetypecode] ?\r\n        option[jsonfeild][labelKey][slanguagetypecode]:option[jsonfeild][labelKey]})\r\n      }\r\n      return null;\r\n    }\r\n    else {\r\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\r\n        lblValueList.push({ \"value\": option[findKey], \"label\": option[labelKey] })\r\n      }\r\n      return null;\r\n    }\r\n\r\n  })\r\n  return selectedItem[findKey] = lblValueList[0];\r\n}\r\n\r\n// To provide esign rights\r\nexport function showEsign(itemMap, nformcode, ncontrolcode) {\r\n  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\r\n  const index = controlList.findIndex(x => x.ncontrolcode === ncontrolcode);\r\n  return controlList[index] && controlList[index].nneedesign === 3 ? true : false;\r\n}\r\n\r\n// To provide control rights\r\nexport function getControlMap(itemMap, nformcode) {\r\n  const controlList = itemMap ? itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [] : [];\r\n  const controlMap = new Map();\r\n  controlList.map(item => {\r\n    return controlMap.set(item.scontrolname, { ...item })\r\n  })\r\n  return controlMap;\r\n}\r\n\r\nexport function formatDate(date) {\r\n  let d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = '' + d.getFullYear(),\r\n    hour = '' + d.getHours(),\r\n    min = '' + d.getMinutes(),\r\n    sec = '' + d.getSeconds();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  if (hour.length < 2) hour = '0' + hour;\r\n  if (min.length < 2) min = '0' + min;\r\n  if (sec.length < 2) sec = '0' + sec;\r\n\r\n\r\n  return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec);\r\n}\r\n\r\nexport function getStartOfDay(date) {\r\n  date.setHours(0, 0, 0);\r\n  return formatDate(date);\r\n}\r\n\r\nexport function getEndOfDay(date) {\r\n  date.setHours(23, 59, 59);\r\n  return formatDate(date);\r\n}\r\n\r\nexport function getDateByMinutes(date, holdMinutes) {\r\n  const someDate = new Date(date);\r\n  const adjustedDate = new Date(someDate);\r\n  return adjustedDate.setMinutes(someDate.getMinutes() + holdMinutes);\r\n}\r\n\r\nexport function validateTwoDigitDate(value) {\r\n  if (value.length === 1) {\r\n    value = \"0\".concat(value);\r\n  }\r\n  return value;\r\n}\r\n\r\n// To provide esign rights for child Tabs\r\nexport function showEsignForChildTabs(itemMap, ncontrolcode) {\r\n  //  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\r\n  const index = itemMap.findIndex(x => x.ncontrolcode === ncontrolcode);\r\n  return itemMap[index] && itemMap[index].nneedesign === 3 ? true : false;\r\n}\r\n\r\nexport function addDays(dateValue, daysToAdd) {\r\n  const copy = new Date(Number(dateValue))\r\n  copy.setDate(dateValue.getDate() + daysToAdd);\r\n  return copy;\r\n}\r\n\r\nexport function validatePhoneNumber(inputValue) {\r\n  let output = \"\";\r\n  // Get the regular expression to test against for this particular object\r\n  let regAllow = /^[0-9,',',\\n,\\s,[,\\], '+',-]+$/;\r\n  // Check for an allowed character, if not found, cancel the keypress's event bubbling\r\n  if (inputValue.match(regAllow)) {\r\n    // Do nothing, i.e. allow.\r\n    output = inputValue;\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function validateEmail(inputValue) {\r\n  let output = false;\r\n  //let regAllow = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  //checks for presence of '@', '.' and 2 characters after '.'\r\n  //let regAllow = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\r\n\r\n  //A form with an email field that that must be in the following order: characters@characters.domain \r\n  //(characters followed by an @ sign, followed by more characters, and then a \".\". After the \".\" sign, you can only write 2 to 3 letters from a to z:\r\n  let regAllow = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n\r\n  // Check for an allowed character, if not found, cancel the keypress's event bubbling\r\n  if (inputValue.match(regAllow)) {\r\n\r\n    // Do nothing, i.e. allow.\r\n    output = true;//inputValue;\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function formatInputDate(date, includeMilliseconds) {\r\n  let formattedDate = \"\";\r\n  if (includeMilliseconds) {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) +\r\n      'T' +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2)\r\n      + \".\" +\r\n      (\"000\" + date.getMilliseconds()).slice(-3) + \"Z\";\r\n  }\r\n  else {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) +\r\n      'T' +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2) + \"Z\";\r\n  }\r\n  return formattedDate;\r\n}\r\n\r\nexport function formatInputDateWithoutT(date, includeMilliseconds) {\r\n  let formattedDate = \"\";\r\n  if (includeMilliseconds) {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) + \" \" +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2)\r\n      + \".\" +\r\n      (\"000\" + date.getMilliseconds()).slice(-3);\r\n  }\r\n  else {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) + \" \" +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2);\r\n  }\r\n  return formattedDate;\r\n}\r\n\r\nexport function create_UUID() {\r\n  var dt = new Date().getTime();\r\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = (dt + Math.random() * 16) % 16 | 0;\r\n    dt = Math.floor(dt / 16);\r\n    return (c === 'x' ? r : (r && 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}\r\n\r\n//added by perumalraj on 03/11/2020\r\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\r\nexport function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n  const filterArray = firstArray.filter(function (x) {\r\n    return !secondArray.some(function (y) {\r\n      return x[PrimaryKey] === y[PrimaryKey]\r\n    })\r\n  });\r\n  return filterArray;\r\n}\r\n\r\nexport function listDataFromDynamicArray(arr, indexvalue) {\r\n  return arr && arr.filter(x => x[indexvalue]);\r\n}\r\n\r\n// export const fileViewURL = 'http://192.168.0.79:8097/';\r\n\r\n//Added by P.Sudharshanan\r\nexport function replaceUpdatedObject(newList, oldList, primaryKey) {\r\n  newList && newList.length > 0 && newList.map(newlistItem => {\r\n    let oldIndex = oldList ? oldList.findIndex(x => x[primaryKey] === newlistItem[primaryKey]) : -1\r\n    oldList.splice(oldIndex, 1, newlistItem)\r\n    return null;\r\n  })\r\n  return oldList;\r\n}\r\n//added by perumalraj for insert newly added element into an array\r\nexport function updatedObjectWithNewElement(oldList, newList) {\r\n  oldList = [...newList, ...oldList];\r\n  return oldList;\r\n}\r\n//added by perumalraj for replace the old values wih new one into an array\r\nexport function replaceObjectWithNewElement(oldList) {\r\n  oldList = [...oldList];\r\n  return oldList;\r\n}\r\n\r\n//Added by L.Subashini to find the index positions nf the occurence of the specified character\r\n// export const findIndices = (str, char) =>\r\n//   str.split('').reduce((indices, letter, index) => {\r\n//     letter === char && indices.push(index);\r\n//     return indices;\r\n//   }, [])\r\n\r\n//added by perumalraj on 23/12/2020\r\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\r\nexport function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey, colorColName) {\r\n  // const Peru = Object.keys(Array2).map(function (k) { return Array2[k][PrimaryKey] }).join(\",\");\r\n  // alert(Peru);\r\n  //const TestSet = new Set(Peru);\r\n  // const FinalOutput = [\r\n  //   ...Array1.filter(({ PrimaryKey }) => !TestSet.has(PrimaryKey))\r\n  // ];\r\n  // Array1 = Array1.filter(val => !Array2.includes(val[PrimaryKey]));\r\n  // alert(Array1)\r\n  // return Array1;\r\n  const filterArray = firstArray.filter(function (x) {\r\n    return secondArray.some(function (y) {\r\n      if (x[PrimaryKey] === y[PrimaryKey]) {\r\n        x[colorColName] = y[colorColName];\r\n      }\r\n      return x[PrimaryKey] === y[PrimaryKey]\r\n    })\r\n  });\r\n  return filterArray;\r\n}\r\n\r\nexport function constructOptionList(options, optionId,\r\n  optionValue, sortField, sortOrder, alphabeticalSort,\r\n  defaultStatusFieldName) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  const defaultStatus = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n    options.sort((itemA, itemB) => itemA[sortField] < itemB[sortField] ? -1 : 1)\r\n    : options.sort((itemA, itemB) => itemA[sortField] > itemB[sortField] ? -1 : 1))\r\n  )\r\n    : (alphabeticalSort ?\r\n      options.sort((itemA, itemB) =>\r\n      (typeof (itemA[optionValue]) === 'string' ?\r\n        itemA[optionValue].toLowerCase() < itemB[optionValue].toLowerCase() ?\r\n          -1 : 1 : itemA[optionValue] < itemB[optionValue] ? -1 : 1)) : options)\r\n  )\r\n  ).map(item => {\r\n    if (item[defaultStatus] === transactionStatus.YES) {\r\n      (defaultValue.push(\r\n        {\r\n          label: item[optionValue], value: item[optionId],\r\n          item: item\r\n        }\r\n      ))\r\n    }\r\n    return {\r\n      label: item[optionValue], value: item[optionId],\r\n      item: item\r\n    }\r\n  });\r\n  optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\nexport function constructjsonOptionList(options,\r\n  optionId, optionValue, sortField, sortOrder,\r\n  alphabeticalSort, defaultStatusFieldName,\r\n  source, isMultiLingual, languageTypeCode) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n  //   options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\r\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n\r\n  //   :\r\n  //   options = options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n  // ))\r\n  //   : (alphabeticalSort ?\r\n  //     options.sort((itemA, itemB) =>\r\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\r\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\r\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\r\n  // )\r\n  // )\r\n  const optionList = options.map(item => {\r\n    const jsondata = item[source] ? item[source].value ?\r\n      JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n    let defaultStatus = jsondata[defaultStatusFieldName]\r\n      || item[defaultStatusFieldName]\r\n    if (defaultStatus === transactionStatus.YES) {\r\n      defaultValue.push({\r\n        label: isMultiLingual ?\r\n          jsondata[optionValue][languageTypeCode] :\r\n          jsondata[optionValue],\r\n        value: jsondata[optionId],\r\n        item\r\n      })\r\n    }\r\n    let label = isMultiLingual ?\r\n      jsondata[optionValue]\r\n      [languageTypeCode]\r\n      : jsondata[optionValue];\r\n    let value = jsondata[optionId] || item[optionId]\r\n    return { label, value, item }\r\n  });\r\n  optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\n\r\nexport function constructjsonOptionDefault(options,\r\n  optionId, optionValue, sortField, sortOrder,\r\n  alphabeticalSort, defaultStatusFieldName,\r\n  source, isMultiLingual, languageTypeCode) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n  //   options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\r\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n\r\n  //   :\r\n  //   options = options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n  // ))\r\n  //   : (alphabeticalSort ?\r\n  //     options.sort((itemA, itemB) =>\r\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\r\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\r\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\r\n  // )\r\n  // )\r\n  const optionList = options.map(item => {\r\n    const jsondata = item[source] ? item[source].value ?\r\n      JSON.parse(item[source].value) : item.item.jsondata : item.item.jsondata\r\n    let defaultStatus = jsondata[defaultStatusFieldName]\r\n      || item[defaultStatusFieldName]\r\n    if (defaultStatus === transactionStatus.YES) {\r\n      defaultValue.push({\r\n        label: isMultiLingual ?\r\n          jsondata[optionValue][languageTypeCode] :\r\n          jsondata[optionValue],\r\n        value: jsondata[optionId],\r\n        item\r\n      })\r\n    }\r\n  });\r\n  //optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\n\r\nexport function validateLoginId(inputValue) {\r\n  let output = false;\r\n  //let regAllow = /^\\w+(\\w+)*$/;\r\n  let regAllow = /^[a-zA-Z0-9-_]*$/;\r\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\r\n  if (inputValue.match(regAllow)) {\r\n    output = true;\r\n  }\r\n  return output;\r\n}\r\n\r\n//added by perumalraj on 02-02-2021 for single click java function in list master view and \r\nexport function fillRecordBasedOnCheckBoxSelection(masterData, backEndResponse, mapKeys, CheckBoxOperation, primaryKeyName, removeElementFromArray) {\r\n  if (CheckBoxOperation === 1) {  //check box select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\r\n    });\r\n  } else if (CheckBoxOperation === 2) {  //check box de-select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = filterRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], removeElementFromArray.length > 0 && removeElementFromArray[0][primaryKeyName] ? removeElementFromArray[0][primaryKeyName] : \"\", primaryKeyName);\r\n    });\r\n  } else if (CheckBoxOperation === 3) {  //single select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = replaceObjectWithNewElement(backEndResponse[item] ? backEndResponse[item] : []);\r\n    })\r\n  } else if (CheckBoxOperation === 4) {  //single de-select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = getRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], backEndResponse.length > 0 && backEndResponse[0][primaryKeyName] ? backEndResponse[0][primaryKeyName] : \"\", primaryKeyName);\r\n    });\r\n\r\n    // return masterData[item] = replaceObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\r\n  } else if (CheckBoxOperation === 5) {  //after multi select and then click single record\r\n    mapKeys.forEach((item) => {\r\n      let filteredmasterData = filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\r\n      return masterData[item] = updatedObjectWithNewElement(filteredmasterData, backEndResponse[item] ? backEndResponse[item] : []);\r\n    });\r\n  } else if (CheckBoxOperation === 6) {  //after multi select and then click single record\r\n    mapKeys.forEach((item) => {\r\n      filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\r\n      return masterData[item] = getSameRecordFromTwoArrays(masterData[item] ? masterData[item] : [], backEndResponse ? backEndResponse : [], primaryKeyName);\r\n    });\r\n  } else {\r\n    Object.keys(backEndResponse).forEach((item) => {\r\n      return masterData[item] = backEndResponse[item]\r\n    })\r\n  }\r\n}\r\n//added by perumalraj on 02-02-2021\r\nexport function filterRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\r\n  const finalValueAfterFilter = masterData.filter(function (master) {\r\n    return master[primaryKeyName] !== value;\r\n  });\r\n  return finalValueAfterFilter;\r\n}\r\n\r\n//added by perumalraj on 02-02-2021\r\nexport function getRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\r\n  const finalValueAfterFilter = masterData.filter(function (master) {\r\n    return master[primaryKeyName] === value;\r\n  });\r\n  return finalValueAfterFilter;\r\n}\r\n\r\n//added by perumalraj on 06/02/2021\r\n//compare two arrays of object and filter the record which are not present in the second array and first array data will be \r\n//returned with the filtered data\r\nexport function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n  const filterArray = firstArray.filter(function (x) {\r\n    if (Array.isArray(secondArray)) {\r\n      return secondArray.some(function (y) {\r\n        return x[PrimaryKey] === y[PrimaryKey]\r\n      })\r\n    }\r\n  });\r\n  return filterArray;\r\n\r\n}\r\n\r\n//added by perumalraj on 16-02-2021\r\n//compare two arrays and remove the same element and add the newer one into it\r\nexport function getRemovedRecordAndAddNewRecord(firstArray, secondArray, ElementToSearch, PrimaryKey) {\r\n  ElementToSearch.forEach(item => {\r\n    let itemAfterfilter = filterRecordBasedOnPrimaryKeyName(firstArray, item, PrimaryKey);\r\n    firstArray = itemAfterfilter;\r\n  });\r\n  return updatedObjectWithNewElement(firstArray, secondArray);\r\n}\r\n\r\nexport function bytesToSize(bytes) {\r\n  if (!isNaN(parseInt(bytes))) {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  } else {\r\n    return bytes;\r\n  }\r\n}\r\n\r\nexport function onDropAttachFileList(selectedRecord, attachedFiles, maxSize) {\r\n  if (selectedRecord) {\r\n    let listFile = selectedRecord ? selectedRecord : []\r\n    if (listFile.length + attachedFiles.length <= maxSize || maxSize === 0) {\r\n      attachedFiles && attachedFiles.length > 0 && attachedFiles.map(newlistItem => {\r\n        let oldIndex = listFile ? listFile.findIndex(x => x['name'] === newlistItem['name']) : -1\r\n        if (oldIndex === -1) {\r\n          listFile.splice(listFile.length, 0, newlistItem)\r\n        } else {\r\n          listFile.splice(oldIndex, 1, newlistItem)\r\n        }\r\n        return null;\r\n      })\r\n      return listFile;\r\n    }\r\n    return attachedFiles;\r\n  } else {\r\n    return attachedFiles;\r\n  }\r\n}\r\n\r\nexport function deleteAttachmentDropZone(selectedRecord, file) {\r\n  let remainingList;\r\n  if (typeof selectedRecord === \"string\") {\r\n    remainingList = \"\";\r\n  }\r\n  else {\r\n    if (selectedRecord.length >= 1) {\r\n      const fileList = selectedRecord.filter(fileItem => {\r\n        return fileItem.name !== file.name\r\n      })\r\n      remainingList = fileList;\r\n    }\r\n    else {\r\n      remainingList = \"\";\r\n    }\r\n  }\r\n  return remainingList;\r\n}\r\n\r\nexport function checkCancelAndReject(sample) {\r\n  return (sample.ntransactionstatus === transactionStatus.CANCELLED || sample.ntransactionstatus === transactionStatus.REJECT)\r\n}\r\n\r\nexport function covertDatetoString(newDate) {\r\n  const startDate = new Date(newDate);\r\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n  const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n  return fromDate;\r\n}\r\n\r\nexport function convertDatetoStringByTimeZone(userInfo, value) {\r\n\r\n  const dateValue = new Date(value);\r\n  const prevMonth = validateTwoDigitDate(String(dateValue.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(dateValue.getDate()));\r\n  const dateArray = [];\r\n\r\n  const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n  const secondField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[1];\r\n\r\n  if (firstField === \"dd\") {\r\n    dateArray.push(prevDay);\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"MM\") {\r\n      dateArray.push(prevMonth);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(dateValue.getFullYear());\r\n    }\r\n    else {\r\n      dateArray.push(dateValue.getFullYear());\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevMonth);\r\n    }\r\n  }\r\n  else if (firstField === \"MM\") {\r\n    dateArray.push(prevMonth);\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"dd\") {\r\n      dateArray.push(prevDay);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(dateValue.getFullYear());\r\n    }\r\n    else {\r\n      dateArray.push(dateValue.getFullYear());\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevDay);\r\n    }\r\n  }\r\n  else {\r\n    dateArray.push(dateValue.getFullYear());\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"dd\") {\r\n      dateArray.push(prevDay);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevMonth);\r\n    }\r\n    else {\r\n      dateArray.push(prevMonth);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevDay);\r\n    }\r\n  }\r\n  return dateArray;\r\n}\r\n\r\nexport function convertDateValuetoString(startDateValue, endDateValue, userInfo, noBreadCrumb) {\r\n\r\n  const startDate = startDateValue ? rearrangeDateFormat(userInfo, startDateValue) : new Date();\r\n  const endDate = endDateValue ? rearrangeDateFormat(userInfo, endDateValue) : new Date();\r\n\r\n  // const startDate = startDateValue ? new Date(startDateValue) : new Date();\r\n  // const endDate = endDateValue ? new Date(endDateValue) : new Date();\r\n\r\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n  const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n  const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n  //const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n  const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n  const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n  const fromDate = fromDateOnly + \"T00:00:00\";\r\n  const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n  if (noBreadCrumb) {\r\n    return ({ fromDate, toDate });\r\n  }\r\n  else {\r\n    const breadCrumbFrom = convertDatetoStringByTimeZone(userInfo, startDate);//startDate.getFullYear() + splitChar + prevMonth + splitChar + prevDay;\r\n    const breadCrumbto = convertDatetoStringByTimeZone(userInfo, endDate);//endDate.getFullYear() + splitChar + currentMonth + splitChar + currentDay;\r\n\r\n    return ({ fromDate, toDate, breadCrumbFrom, breadCrumbto });\r\n  }\r\n\r\n}\r\n\r\nexport function rearrangeDateFormat(userInfo, dateValue) {\r\n\r\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n  //   console.log(\"splitChar:\", splitChar);\r\n  if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    // console.log(\"firstField:\", firstField);\r\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n    const datetime = dateValue.split(timeSplitChar);\r\n    const dateArray = datetime[0].split(splitChar);\r\n    if (firstField === \"dd\") {\r\n      const day = dateArray[0];\r\n      const month = dateArray[1];\r\n      const year = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else if (firstField === \"yyyy\") {\r\n      const year = dateArray[0];\r\n      const month = dateArray[1];\r\n      const day = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else {\r\n      return new Date(dateValue);\r\n    }\r\n  }\r\n  else {\r\n    return dateValue;\r\n  }\r\n}\r\n\r\nexport function convertUTCDateToLocalDate(date) {\r\n  var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n  var offset = date.getTimezoneOffset() / 60;\r\n  var hours = date.getHours();\r\n\r\n  newDate.setHours(hours - offset);\r\n\r\n  return newDate;\r\n}\r\n\r\nexport function convertDateTimetoString(inputDate, userInfo) {\r\n\r\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\r\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\r\n  const year = inputDate.getFullYear();\r\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\r\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\r\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\r\n\r\n  if (splitChar === \"/\" || splitChar === \"-\") {\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    if (firstField === \"dd\") {\r\n      return day + splitChar + month + splitChar + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n    } else if (firstField === \"yyyy\") {\r\n      return year + splitChar + month + splitChar + day + \"T\" + hours + \":\" + minutes + \":\" + seconds;\r\n    } else {\r\n      return new Date(inputDate);\r\n    }\r\n  } else {\r\n    return inputDate;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function convertDateTimetoStringDBFormat(inputDate, userInfo) {\r\n\r\n  let splitChar = userInfo.ssitedatetime && \r\n  userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  let dbformat=\"-\"\r\n\r\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\r\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\r\n  const year = inputDate.getFullYear();\r\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\r\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\r\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\r\n\r\n  if (splitChar === \"/\" || splitChar === \"-\") {\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    if (firstField === \"dd\") {\r\n      return  year +dbformat+ month + dbformat   + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n    } else if (firstField === \"yyyy\") {\r\n      return  year +dbformat+ month + dbformat   + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n    } else {\r\n      return new Date(inputDate);\r\n    }\r\n  } else {\r\n    return inputDate;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function parentChildComboLoad(columnList, comboData, selectedRecord, childColumnList, withoutCombocomponent, ParentComboValues, languagetypeCode) {\r\n  let comboValues = {}\r\n  if (columnList.length > 0) {\r\n    columnList.map(x => {\r\n      if (x.inputtype === 'combo') {\r\n        if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n        {\r\n          selectedRecord[x.label] = undefined;\r\n          if (comboData[x.label].length > 0) {\r\n            if (comboData[x.label][0].label === undefined) {\r\n              const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n              comboData[x.label] = optionList.get(\"OptionList\");\r\n              if (optionList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[x.label] = optionList.get(\"DefaultValue\")\r\n              }\r\n            } else {\r\n              comboData[x.label] = comboData[x.label]\r\n              const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n              if (optionList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[x.label] = optionList.get(\"DefaultValue\")\r\n              }\r\n            }\r\n          } else {\r\n            comboData[x.label] = []\r\n          }\r\n          comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode)\r\n        } else {\r\n          comboValues = {\r\n            \"comboData\": comboData,\r\n            \"selectedRecord\": selectedRecord\r\n          }\r\n        }\r\n      } else {\r\n        comboValues = {\r\n          comboData: comboData,\r\n          ...comboValues,\r\n          selectedRecord: {\r\n            ...selectedRecord,\r\n            [x.label]:ParentComboValues.jsondata? \r\n            ParentComboValues.jsondata[x.displaymember]:ParentComboValues[x.displaymember] || \"\"\r\n          }\r\n        }\r\n        // comboValues[\"selectedRecord\"][x.label] = ParentComboValues[x.displaymember] ||\"\"\r\n      }\r\n    })\r\n  }\r\n  else {\r\n    comboValues = {\r\n      \"comboData\": comboData,\r\n      \"selectedRecord\": selectedRecord\r\n    }\r\n  }\r\n\r\n  return comboValues;\r\n}\r\n\r\n\r\nexport function childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode) {\r\n  if (selectedRecord[x.label] !== undefined) {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n        if (index !== -1) {\r\n          // const childOptionData = comboData[y.label].filter(filterData =>\r\n          //     JSON.parse(filterData[y.source].value)[x.valuemember] === selectedRecord[x.label].item[x.valuemember])\r\n          if (comboData[y.label].length > 0) {\r\n            if (comboData[y.label][0].label === undefined) {\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode)\r\n              comboData[y.label] = optionChildList.get(\"OptionList\");\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent)\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n              }\r\n            } else {\r\n              comboData[y.label] = comboData[y.label]\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source)\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent)\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n              }\r\n            }\r\n          } else {\r\n            comboData[y.label] = []\r\n          }\r\n        } else {\r\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n          if (readonlyfields !== -1) {\r\n            selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata?\r\n            selectedRecord[x.label].jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]]:selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]\r\n          }\r\n        }\r\n      })\r\n    }\r\n  } else {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        selectedRecord[y.label] = undefined\r\n        comboData[y.label] = undefined\r\n      })\r\n    }\r\n  }\r\n  const newRecord = {\r\n    \"comboData\": comboData,\r\n    \"selectedRecord\": selectedRecord\r\n  }\r\n  return newRecord;\r\n}\r\n\r\n\r\nexport function comboChild(data, columnList, childColumnList, slice) {\r\n  let retunObj = {}\r\n  // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n  if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n    if (childColumnList[columnList.label] === undefined) {\r\n      if (columnList.hasOwnProperty(\"child\")) {\r\n        let childList = []\r\n        columnList.child.map(childData => {\r\n          const index = data.findIndex(x => x.label === childData.label)\r\n          if (index !== -1) {\r\n            childList.push(data[index])\r\n            if (slice) {\r\n              data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n            }\r\n          }\r\n        })\r\n        childColumnList[columnList.label] = childList;\r\n        if (childList.length > 0) {\r\n          childList.map(y => {\r\n            if (y.hasOwnProperty(\"child\")) {\r\n              const val = this.comboChild(data, y, childColumnList, slice)\r\n              retunObj[\"data\"] = val.data;\r\n              retunObj[\"childColumnList\"] = val.childColumnList;\r\n            } else {\r\n              retunObj[\"data\"] = data;\r\n              retunObj[\"childColumnList\"] = childColumnList;\r\n            }\r\n          })\r\n        } else {\r\n          retunObj[\"data\"] = data;\r\n          retunObj[\"childColumnList\"] = childColumnList;\r\n        }\r\n      } else {\r\n        retunObj[\"data\"] = data;\r\n        retunObj[\"childColumnList\"] = childColumnList;\r\n      }\r\n    } else {\r\n      retunObj[\"data\"] = data;\r\n      retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n    }\r\n  } else {\r\n    retunObj[\"data\"] = data;\r\n    retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n  }\r\n  return retunObj;\r\n}\r\nexport function ageCalculate(date) {\r\n  const now = new Date();\r\n  const today = new Date(now.getYear(), now.getMonth(), now.getDate());\r\n\r\n  let yearNow = now.getYear();\r\n  let monthNow = now.getMonth();\r\n  let dateNow = now.getDate();\r\n\r\n  let dob = new Date(date);\r\n\r\n  let yearDob = dob.getYear();\r\n  let monthDob = dob.getMonth();\r\n  let dateDob = dob.getDate();\r\n  let age = {};\r\n  let ageString = \"\";\r\n  let yearString = \"\";\r\n  let monthString = \"\";\r\n  let dayString = \"\";\r\n\r\n\r\n  let yearAge = yearNow - yearDob;\r\n  let monthAge = 0;\r\n  let dateAge = 0;\r\n\r\n  if (monthNow >= monthDob)\r\n    monthAge = monthNow - monthDob;\r\n  else {\r\n    yearAge--;\r\n    monthAge = 12 + monthNow - monthDob;\r\n  }\r\n\r\n  if (dateNow >= dateDob)\r\n    dateAge = dateNow - dateDob;\r\n  else {\r\n    monthAge--;\r\n    dateAge = 31 + dateNow - dateDob;\r\n\r\n    if (monthAge < 0) {\r\n      monthAge = 11;\r\n      yearAge--;\r\n    }\r\n  }\r\n\r\n  age = {\r\n    years: yearAge,\r\n    months: monthAge,\r\n    days: dateAge\r\n  };\r\n\r\n  if (age.years > 1) yearString = \" years\";\r\n  else yearString = \" year\";\r\n  if (age.months > 1) monthString = \" months\";\r\n  else monthString = \" month\";\r\n  if (age.days > 1) dayString = \" days\";\r\n  else dayString = \" day\";\r\n\r\n\r\n  if ((age.years > 0) && (age.months > 0) && (age.days > 0))\r\n    ageString = age.years + yearString + \", \" + age.months + monthString + \" and \" + age.days + dayString + \" \";\r\n  else if ((age.years === 0) && (age.months === 0) && (age.days > 0))\r\n    ageString = \" \" + age.days + dayString + \" \";\r\n  else if ((age.years > 0) && (age.months === 0) && (age.days === 0))\r\n    ageString = age.years + yearString + \"  \";\r\n  else if ((age.years > 0) && (age.months > 0) && (age.days === 0))\r\n    ageString = age.years + yearString + \" and \" + age.months + monthString + \" \";\r\n  else if ((age.years === 0) && (age.months > 0) && (age.days > 0))\r\n    ageString = age.months + monthString + \" and \" + age.days + dayString + \"\";\r\n  else if ((age.years > 0) && (age.months === 0) && (age.days > 0))\r\n    ageString = age.years + yearString + \" and \" + age.days + dayString + \" \";\r\n  else if ((age.years === 0) && (age.months > 0) && (age.days === 0))\r\n    ageString = age.months + monthString + \" \";\r\n  else ageString = \"0 days\";\r\n  console.log(ageString);\r\n  return ageString;\r\n}\r\n\r\n\r\n\r\nexport function rearrangeDateFormatDateOnly(userInfo, dateValue) {\r\n\r\n  let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n  if ((splitChar === \"/\" || splitChar === \"-\") && typeof dateValue === \"string\") {\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n    const datetime = dateValue.split(timeSplitChar);\r\n    return datetime[0];\r\n  }\r\n  else {\r\n    return dateValue;\r\n  }\r\n}\r\n\r\n\r\nexport function getSameRecordFromTwoDifferentArrays(firstArray, secondArray, PrimaryKey) {\r\n  let filterArray = [];\r\n  for (var i = 0; i < firstArray.length; i++) {\r\n    for (var j = 0; j < secondArray.length; j++) {\r\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\r\n        filterArray.push(secondArray[j]);\r\n      }\r\n    }\r\n  }\r\n  return filterArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}