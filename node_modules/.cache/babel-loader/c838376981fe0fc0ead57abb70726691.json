{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';export function getSelectedSampleStorageLocation(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getSelectedSampleStorageLocation\",{'userinfo':userInfo,\"nsamplestoragelocationcode\":parseInt(inputParam.nsamplestoragelocationcode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageLocation:response.data[\"selectedSampleStorageLocation\"],sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSelectedSampleStorageVersion(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getActiveSampleStorageVersion\",{'userinfo':userInfo,\"nsamplestorageversioncode\":parseInt(inputParam.nsamplestorageversioncode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function editSampleStorageLocation(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));var selectedRecord={};var urlArray=[];var getSampleStorageService=rsapi.post(\"/samplestoragelocation/getSampleStorageVersionByID\",{'userinfo':userInfo,\"nsamplestorageversioncode\":inputParam.nsamplestorageversioncode});var geStorageCategory=rsapi.post(\"/storagecategory/getStorageCategory\",{'userinfo':userInfo});urlArray=[getSampleStorageService,geStorageCategory];Axios.all(urlArray).then(function(response){// masterData = {\n//     ...masterData\n// };\nselectedRecord[\"ssamplestoragelocationname\"]=response[0].data[\"selectedSampleStorageVersion\"][\"ssamplestoragelocationname\"];var storageCategoryMap=constructOptionList(response[1].data||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,true);var storageCategoryList=storageCategoryMap.get(\"OptionList\");storageCategoryList.map(function(item){return item.value===response[0].data[\"selectedSampleStorageVersion\"][\"nstoragecategorycode\"]?selectedRecord[\"nstoragecategorycode\"]={\"label\":item.label,\"value\":item.value,\"item\":item.item}:\"\";});dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,treeData:JSON.parse(response[0].data[\"selectedSampleStorageVersion\"][\"jsondata\"].value).data,selectedRecord:selectedRecord,openModal:true,operation:\"update\",loadTreeProperties:false,storageCategoryList:storageCategoryList}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function approveSampleStorageLocation(userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/ApproveSampleStorageLocation\",{'userinfo':userInfo,\"approvalStatus\":masterData.selectedSampleStorageVersion[\"napprovalstatus\"],\"sampleStorageVersionCode\":masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"],\"sampleStorageLocationCode\":masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"]}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var openPropertyModal=function openPropertyModal(clickedItem){return function(dispatch){var selectedRecord={};selectedRecord[\"locationlastnode\"]=clickedItem.item.locationlastnode===undefined?false:clickedItem.item.locationlastnode;selectedRecord[\"containerfirstnode\"]=clickedItem.item.containerfirstnode===undefined?false:clickedItem.item.containerfirstnode;selectedRecord[\"containerlastnode\"]=clickedItem.item.containerlastnode===undefined?false:clickedItem.item.containerlastnode;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loadTreeProperties:true,openModal:true,clickedItem:clickedItem,operation:\"update\"}});};};export function fetchStorageCategory(param){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/storagecategory/getStorageCategory\",{'userinfo':param.userInfo}).then(function(response){var storageCategoryMap=constructOptionList(response.data||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,true);var storageCategoryList=storageCategoryMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{storageCategoryList:storageCategoryList,openModal:true,selectedRecord:{nstoragecategorycode:param.nfilterStorageCategory},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:param.id}],operation:\"create\",loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var changeStorageCategoryFilter=function changeStorageCategoryFilter(inputParam,filterStorageCategory){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/getSampleStorageLocationByCategory\",inputParam.inputData).then(function(response){var masterData=response.data;// sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{filterStorageCategory:filterStorageCategory,nfilterStorageCategory:inputParam.inputData.nfilterStorageCategory})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function copySampleStorageVersion(inputParam,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/samplestoragelocation/copySampleStorageVersion\",{'userinfo':userInfo,\"sampleStorageVersionCode\":parseInt(inputParam.nsamplestorageversioncode),\"sampleStorageLocationCode\":parseInt(inputParam.nsamplestoragelocationcode)}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSampleStorageLocation:response.data[\"selectedSampleStorageLocation\"],sampleStorageVersion:response.data[\"sampleStorageVersion\"],selectedSampleStorageVersion:response.data[\"selectedSampleStorageVersion\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SampleStorageLocationAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","sortData","constructOptionList","toast","Axios","getSelectedSampleStorageLocation","inputParam","userInfo","masterData","dispatch","post","parseInt","nsamplestoragelocationcode","then","response","selectedSampleStorageLocation","data","sampleStorageVersion","selectedSampleStorageVersion","type","payload","loading","catch","error","status","message","warn","getSelectedSampleStorageVersion","nsamplestorageversioncode","editSampleStorageLocation","selectedRecord","urlArray","getSampleStorageService","geStorageCategory","all","storageCategoryMap","undefined","storageCategoryList","get","map","item","value","label","treeData","JSON","parse","openModal","operation","loadTreeProperties","approveSampleStorageLocation","openPropertyModal","clickedItem","locationlastnode","containerfirstnode","containerlastnode","fetchStorageCategory","param","nstoragecategorycode","nfilterStorageCategory","text","expanded","editable","root","id","changeStorageCategoryFilter","filterStorageCategory","inputData","copySampleStorageVersion"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData, constructOptionList } from '../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\n\r\nexport function getSelectedSampleStorageLocation(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getSelectedSampleStorageLocation\",\r\n            { 'userinfo': userInfo, \"nsamplestoragelocationcode\": parseInt(inputParam.nsamplestoragelocationcode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageLocation: response.data[\"selectedSampleStorageLocation\"],\r\n                    sampleStorageVersion: response.data[\"sampleStorageVersion\"],\r\n                    selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                // sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function getSelectedSampleStorageVersion(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getActiveSampleStorageVersion\",\r\n            { 'userinfo': userInfo, \"nsamplestorageversioncode\": parseInt(inputParam.nsamplestorageversioncode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                // sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function editSampleStorageLocation(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let selectedRecord = {};\r\n        let urlArray = [];\r\n        const getSampleStorageService = rsapi.post(\"/samplestoragelocation/getSampleStorageVersionByID\",\r\n            { 'userinfo': userInfo, \"nsamplestorageversioncode\": inputParam.nsamplestorageversioncode });\r\n\r\n        const geStorageCategory = rsapi.post(\"/storagecategory/getStorageCategory\",\r\n            { 'userinfo': userInfo });\r\n\r\n\r\n        urlArray = [getSampleStorageService, geStorageCategory];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                // masterData = {\r\n                //     ...masterData\r\n                // };\r\n\r\n                selectedRecord[\"ssamplestoragelocationname\"] = response[0].data[\"selectedSampleStorageVersion\"][\"ssamplestoragelocationname\"]\r\n                const storageCategoryMap = constructOptionList(response[1].data || [], \"nstoragecategorycode\",\r\n                    \"sstoragecategoryname\", undefined, undefined, true);\r\n\r\n                const storageCategoryList = storageCategoryMap.get(\"OptionList\");\r\n\r\n                storageCategoryList.map(item => item.value === response[0].data[\"selectedSampleStorageVersion\"][\"nstoragecategorycode\"] ?\r\n                    selectedRecord[\"nstoragecategorycode\"] = {\r\n                        \"label\": item.label,\r\n                        \"value\": item.value,\r\n                        \"item\": item.item\r\n                    }\r\n                    : \"\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        // masterData,\r\n                        loading: false,\r\n                        treeData: JSON.parse(response[0].data[\"selectedSampleStorageVersion\"][\"jsondata\"].value).data,\r\n                        selectedRecord, openModal: true, operation: \"update\", loadTreeProperties: false, storageCategoryList\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function approveSampleStorageLocation(userInfo, masterData) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/ApproveSampleStorageLocation\",\r\n            {\r\n                'userinfo': userInfo, \"approvalStatus\": masterData.selectedSampleStorageVersion[\"napprovalstatus\"], \"sampleStorageVersionCode\": masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"],\r\n                \"sampleStorageLocationCode\": masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"]\r\n            })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, sampleStorageVersion: response.data[\"sampleStorageVersion\"], selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                // sortData(masterData);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const openPropertyModal = (clickedItem) => (dispatch) => {\r\n    let selectedRecord = {};\r\n    selectedRecord[\"locationlastnode\"] = clickedItem.item.locationlastnode === undefined ? false : clickedItem.item.locationlastnode;\r\n    selectedRecord[\"containerfirstnode\"] = clickedItem.item.containerfirstnode === undefined ? false : clickedItem.item.containerfirstnode;\r\n    selectedRecord[\"containerlastnode\"] = clickedItem.item.containerlastnode === undefined ? false : clickedItem.item.containerlastnode;\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: { selectedRecord, loadTreeProperties: true, openModal: true, clickedItem, operation: \"update\" }\r\n    });\r\n};\r\n\r\nexport function fetchStorageCategory(param) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/storagecategory/getStorageCategory\",\r\n            { 'userinfo': param.userInfo })\r\n            .then(response => {\r\n\r\n                const storageCategoryMap = constructOptionList(response.data || [], \"nstoragecategorycode\",\r\n                    \"sstoragecategoryname\", undefined, undefined, true);\r\n\r\n                const storageCategoryList = storageCategoryMap.get(\"OptionList\");\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        storageCategoryList, openModal: true, selectedRecord: {nstoragecategorycode: param.nfilterStorageCategory}, loadTreeProperties: false,\r\n                        treeData: [\r\n                            {\r\n                                text: \"root\",\r\n                                expanded: true,\r\n                                editable: true,\r\n                                root: true,\r\n                                id: param.id,\r\n                            },\r\n                        ], operation: \"create\",\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeStorageCategoryFilter = (inputParam, filterStorageCategory) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/getSampleStorageLocationByCategory\", inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                // sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterStorageCategory,\r\n                            nfilterStorageCategory: inputParam.inputData.nfilterStorageCategory,\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function copySampleStorageVersion(inputParam, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/samplestoragelocation/copySampleStorageVersion\",\r\n            { 'userinfo': userInfo, \"sampleStorageVersionCode\": parseInt(inputParam.nsamplestorageversioncode), \r\n            \"sampleStorageLocationCode\": parseInt(inputParam.nsamplestoragelocationcode) })\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData, selectedSampleStorageLocation: response.data[\"selectedSampleStorageLocation\"],\r\n                    sampleStorageVersion: response.data[\"sampleStorageVersion\"],\r\n                    selectedSampleStorageVersion: response.data[\"selectedSampleStorageVersion\"]\r\n                };\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}