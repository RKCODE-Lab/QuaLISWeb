{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\PatientMaster.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"; //import DataGrid from \"../../components/data-grid/data-grid.component\";\n//import Fields from \"../../components/PatientMasterFields.json\";\n\nimport { // Query,\n// Builder,\n// BasicConfig, BasicFuncs,\nUtils as QbUtils } from \"react-awesome-query-builder\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPatientDetail, getPatientComboService, filterColumnData, getTestParameter, getPatientReport, getPatientDetailsByFilterQuery, getDistrictComboServices, getCityComboServices } from \"../../actions\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport { showEsign, getControlMap, validatePhoneNumber, ageCalculate, formatInputDate, validateEmail, formatDate, constructOptionList, rearrangeDateFormat, formatInputDateWithoutT, convertDateValuetoString } from \"../../components/CommonScript\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport { ReactComponent as Reports } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-Icon.svg\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport AddPatient from \"./AddPatient\";\nimport Esign from \"../audittrail/Esign\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\"; // import ReactTooltip from \"react-tooltip\";\n//import { process } from \"@progress/kendo-data-query\";\n\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\"; //import AddFilteredPatient from \"./AddFilteredPatient\";\n\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PatientMasterFilter from './PatientMasterFilter'; //import Filtercomponent from '../../components/Filtercomponent';\n// import FilterDemo from \"./FilterDemo\";\n// import \"antd/dist/antd.css\";\n// import 'react-awesome-query-builder/css/styles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PatientMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      let obj = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openSolidAdvFilter: true,\n          openModal: true,\n          slideResult: undefined\n        }\n      };\n      this.setState({\n        config: undefined,\n        tree: undefined\n      });\n      this.props.updateStore(obj);\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.handlePageChange = event => {\n      this.setState({\n        kendoSkip: event.skip,\n        kendoTake: event.take\n      });\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"formdate\"] = this.state.selectedRecord['fromdate'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\n      inputData[\"todate\"] = this.state.selectedRecord['ToDay'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate));\n      inputData[\"casetype\"] = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        inputData: inputData,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch,\n        displayname: \"Filter\"\n      };\n      const masterData = this.props.Login.masterData;\n      const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\n      this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deletePatient(\"Patient\", this.props.Login.masterData.SelectedPatient, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openSolidAdvFilter = this.props.Login.openSolidAdvFilter;\n      let slideResult = this.props.Login.slideResult;\n      let tree = this.state.tree;\n      let config = this.state.config;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openSolidAdvFilter = false;\n        openModal = false;\n        selectedRecord = {};\n        slideResult = {};\n        config = undefined;\n        tree = undefined;\n        this.props.Login.districtList = [];\n        this.props.Login.districtListTemp = [];\n        this.props.Login.cityListTemp = [];\n        this.props.Login.cityList = [];\n        this.setState({\n          config: config,\n          tree: tree\n        });\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          openSolidAdvFilter,\n          slideResult,\n          config,\n          tree\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName, optionlistname) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n\n      if (fieldName === \"nregioncode\") {\n        this.props.getDistrictComboServices({\n          inputData: {\n            dispalyname: \"District\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.nregioncode.label,\n            primarykey: selectedRecord.nregioncode.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ndistrictcode\"] = \"\";\n        selectedRecord[\"ncitycode\"] = \"\";\n      } else if (fieldName === \"nregioncodetemp\") {\n        this.props.getDistrictComboServices({\n          inputData: {\n            dispalyname: \"DistrictTemp\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.nregioncodetemp.label,\n            primarykey: selectedRecord.nregioncodetemp.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ndistrictcodetemp\"] = \"\";\n        selectedRecord[\"ncitycodetemp\"] = \"\";\n      } else if (fieldName === \"ndistrictcode\") {\n        this.props.getCityComboServices({\n          inputData: {\n            dispalyname: \"City\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.ndistrictcode.label,\n            primarykey: selectedRecord.ndistrictcode.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ncitycode\"] = \"\";\n      } else if (fieldName === \"ndistrictcodetemp\") {\n        this.props.getCityComboServices({\n          inputData: {\n            dispalyname: \"CityTemp\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.ndistrictcodetemp.label,\n            primarykey: selectedRecord.ndistrictcodetemp.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ncitycodetemp\"] = \"\";\n      } else if (fieldName === \"npatientcasetypecode\") {\n        selectedRecord[fieldName] = comboData;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChange = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {}; // this.setState({ tree: immutableTree, config: config });\n\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config); // const jsonTree = QbUtils.getTree(immutableTree);\n      // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\n\n      this.setState({\n        tree: immutableTree,\n        config: config,\n        selectedRecord: selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n        if (selectedRecord.nneedcurrentaddress === 3) {\n          selectedRecord.sflatnotemp = selectedRecord.sflatno;\n          selectedRecord.shousenotemp = selectedRecord.shouseno;\n          selectedRecord.spostalcodetemp = selectedRecord.spostalcode;\n          selectedRecord.sstreettemp = selectedRecord.sstreet;\n          selectedRecord.ncitycodetemp = selectedRecord.ncitycode;\n          selectedRecord.ndistrictcodetemp = selectedRecord.ndistrictcode;\n          selectedRecord.nregioncodetemp = selectedRecord.nregioncode;\n        } else {\n          selectedRecord.sflatnotemp = \"\";\n          selectedRecord.shousenotemp = \"\";\n          selectedRecord.spostalcodetemp = \"\";\n          selectedRecord.sstreettemp = \"\";\n          selectedRecord.ncitycodetemp = \"\";\n          selectedRecord.ndistrictcodetemp = \"\";\n          selectedRecord.nregioncodetemp = \"\";\n        }\n      } else {\n        if (event.target.name === \"sphoneno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      const age = ageCalculate(dateValue);\n      selectedRecord[\"sage\"] = age; //   if(dateName===\"ToDay\"){\n      //     this.props.getDateChangeServices({\n      //       userinfo: this.props.Login.userInfo,\n      //       date: rearrangeDateFormat(this.props.Login.userInfo,selectedRecord[\"ToDay\"])\n      // })\n      //}\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveGetClick = () => {\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"filterquery\"] = this.state.selectedRecord['filterquery']; //inputData[\"formdate\"] = this.state.selectedRecord['fromdate']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) :formatInputDateWithoutT( rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\n      // inputData[\"todate\"] = this.state.selectedRecord['ToDay']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]):formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate));\n\n      if (this.state.selectedRecord['filterquery'] !== undefined) {\n        this.searchRef.current.value = \"\";\n        let paramFlag = true;\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"ByPatient\",\n          inputData: inputData,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch,\n          displayname: \"AdvanceFilter\"\n        };\n        const masterData = this.props.Login.masterData;\n        const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n\n        this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUES\"\n        }));\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" && this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\n        let patientData = [];\n        patientData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = {\n          inputListName: \"PatientList\",\n          selectedObject: \"SelectedPatient\",\n          primaryKeyField: \"spatientid\"\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedPatient.spatientid;\n          patientData[\"patient\"] = {\n            spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\n            sfirstname: this.state.selectedRecord.sfirstname,\n            slastname: this.state.selectedRecord.slastname,\n            sfathername: this.state.selectedRecord.sfathername,\n            ddob: formatInputDate(this.state.selectedRecord[\"ddob\"], false),\n            sage: this.state.selectedRecord.sage,\n            ngendercode: this.state.selectedRecord.ngendercode.value,\n            ncitycode: this.state.selectedRecord.ncitycode.value,\n            ncountrycode: this.state.selectedRecord.ncountrycode.value,\n            saddress: this.state.selectedRecord.saddress,\n            sdistrict: this.state.selectedRecord.sdistrict,\n            spostalcode: this.state.selectedRecord.spostalcode,\n            sphoneno: this.state.selectedRecord.sphoneno,\n            smobileno: this.state.selectedRecord.smobileno,\n            semail: this.state.selectedRecord.semail,\n            spassportno: this.state.selectedRecord.spassportno,\n            srefid: this.state.selectedRecord.srefid,\n            sexternalid: this.state.selectedRecord.sexternalid,\n            sstreet: this.state.selectedRecord.sstreet,\n            sstreettemp: this.state.selectedRecord.sstreettemp,\n            shouseno: this.state.selectedRecord.shouseno,\n            shousenotemp: this.state.selectedRecord.shousenotemp,\n            sflatno: this.state.selectedRecord.sflatno,\n            sflatnotemp: this.state.selectedRecord.sflatnotemp,\n            nneedcurrentaddress: this.state.selectedRecord.nneedcurrentaddress,\n            nneedmigrant: this.state.selectedRecord.nneedmigrant,\n            spostalcodetemp: this.state.selectedRecord.spostalcodetemp,\n            sgendername: this.state.selectedRecord.ngendercode.label\n          };\n        } else {\n          patientData[\"patient\"] = {\n            nsitecode: this.props.Login.userInfo.nmastersitecode\n          };\n          this.patientFieldList.map(item => {\n            return patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ? undefined : this.state.selectedRecord[item];\n          });\n        }\n\n        patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncitycodetemp\"] = this.state.selectedRecord[\"ncitycodetemp\"] ? this.state.selectedRecord[\"ncitycodetemp\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ndistrictcodetemp\"] = this.state.selectedRecord[\"ndistrictcodetemp\"] ? this.state.selectedRecord[\"ndistrictcodetemp\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"nregioncodetemp\"] = this.state.selectedRecord[\"nregioncodetemp\"] ? this.state.selectedRecord[\"nregioncodetemp\"].value : transactionStatus.NA; // if (patientData[\"patient\"][\"ddob\"] !== undefined\n        //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\n        //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\n        // }\n\n        if (this.state.selectedRecord[\"ddob\"]) {\n          if (this.props.Login.operation === \"create\") {\n            patientData[\"patient\"][\"sdob\"] = formatInputDate(this.state.selectedRecord[\"ddob\"], false);\n          } else {\n            patientData[\"patient\"][\"sdob\"] = this.state.selectedRecord[\"sdob\"];\n          }\n        }\n\n        patientData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true);\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"Patient\",\n          inputData: patientData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\n      let inputData = [];\n      const postParam = {\n        inputListName: \"PatientList\",\n        selectedObject: \"SelectedPatient\",\n        primaryKeyField: \"spatientid\",\n        primaryKeyValue: selectedPatient.spatientid,\n        fetchUrl: \"patient/getPatient\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          currentdate: formatInputDate(new Date(), true)\n        }\n      };\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"patient\"] = selectedPatient;\n      inputData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true);\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData,\n        operation,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PATIENTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getTestParameter({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          currentdate: formatInputDate(new Date(), true)\n        },\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        displayName: \"IDS_PATIENTMASTER\",\n        userInfo: this.props.Login.userInfo,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedPatient: undefined,\n      screenName: undefined,\n      userRoleControlRights: [],\n      patientCaseTypeList: [],\n      controlMap: new Map(),\n      isClearSearch: false,\n      dataState: {\n        skip: 0,\n        take: 5\n      },\n      tree: undefined,\n      config: undefined,\n      kendoSkip: 0,\n      kendoTake: 5,\n      fields: {\n        \"patientmaster.sfirstname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FIRSTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter First Name\"\n          }\n        },\n        \"patientmaster.slastname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_LASTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Last Name\"\n          }\n        },\n        \"patientmaster.sfathername\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FATHERNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Father Name\"\n          }\n        },\n        \"patientmaster.ngendercode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_GENDER\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": [{\n              \"value\": \"1\",\n              \"title\": \"Male\"\n            }, {\n              \"value\": \"2\",\n              \"title\": \"Female\"\n            }, {\n              \"value\": \"3\",\n              \"title\": \"Others\"\n            }]\n          }\n        },\n        // \"patientmaster.ncitycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_CITY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": [\n        //       { \"value\": \"1\", \"title\": \"Male\" },\n        //       { \"value\": \"2\", \"title\": \"Female\" },\n        //       { \"value\": \"3\", \"title\": \"Others\" }\n        //     ]\n        //   }\n        // },\n        // \"patientmaster.ncountrycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_COUNTRY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": [\n        //       { \"value\": \"1\", \"title\": \"Male\" },\n        //       { \"value\": \"2\", \"title\": \"Female\" },\n        //       { \"value\": \"3\", \"title\": \"Others\" }\n        //     ]\n        //   }\n        // },\n        \"patientmaster.ddob\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_DATEOFBIRTH\"\n          }),\n          \"type\": \"date\",\n          \"valueSources\": [\"value\"]\n        },\n        \"patientmaster.sage\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_AGE\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Age\",\n            \"valuePlaceholder\": \"Enter the Age\"\n          }\n        },\n        // \"patientmaster.saddress\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_ADDRESS\",\n        //   }),\n        //   \"type\": \"text\",\n        //   \"valueSources\": [\"value\", \"func\"],\n        //   \"mainWidgetProps\": {\n        //     \"valueLabel\": \"Name\",\n        //     \"valuePlaceholder\": \"Enter Address\"\n        //   }\n        // },\n        // \"patientmaster.sstreet\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_STREET\",\n        //   }),\n        //   \"type\": \"text\",\n        //   \"valueSources\": [\"value\", \"func\"],\n        //   \"mainWidgetProps\": {\n        //     \"valueLabel\": \"Name\",\n        //     \"valuePlaceholder\": \"Enter Street\"\n        //   }\n        // },\n        \"patientmaster.spatientid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PATIENTID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Patient Id\"\n          }\n        },\n        // \"patientmaster.spostalcode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_POSTALCODE\",\n        //   }),\n        //   \"type\": \"text\",\n        //   \"valueSources\": [\"value\", \"func\"],\n        //   \"mainWidgetProps\": {\n        //     \"valueLabel\": \"Name\",\n        //     \"valuePlaceholder\": \"Enter Postal Code\"\n        //   }\n        // },\n        \"patientmaster.sphoneno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PHONENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Phoneno\"\n          }\n        },\n        \"patientmaster.smobileno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_MOBILENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Mobileno\"\n          }\n        },\n        \"patientmaster.semail\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EMAIL\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Email\"\n          }\n        },\n        \"patientmaster.srefid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_REFERENCEID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter ReferenceId\"\n          }\n        },\n        \"patientmaster.spassportno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PASSPORTNO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Passportno\"\n          }\n        },\n        \"patientmaster.sexternalid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EXTERNALID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter ExternalID\"\n          }\n        }\n      }\n    };\n    this.searchRef = React.createRef();\n    this.emailRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.patientFieldList = [\"sfirstname\", \"slastname\", \"sfathername\", \"ddob\", \"sage\", \"saddress\", \"sdistrict\", \"spostalcode\", \"sphoneno\", \"smobileno\", \"semail\", \"srefid\", \"spassportno\", \"sexternalid\", \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"nneedmigrant\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"];\n    this.searchFieldList = [\"saddress\", \"sage\", \"sdob\", \"sgendername\", \"sfathername\", \"spatientname\", \"spatientid\", \"sphoneno\", \"smobileno\", \"semail\", \"scityname\", \"sdistrict\", \"scountryname\", \"spostalcode\", \"srefid\", \"spassportno\", \"sexternalid\", \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"nneedmigrant\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"];\n    this.columnList = [{\n      idsName: \"IDS_ARNO\",\n      dataField: \"sarno\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_PRODUCT\",\n      dataField: \"sproductname\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_SPECIFICATION\",\n      dataField: \"sspecname\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\n      dataField: \"scolleciondate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RECEIVEDDATE\",\n      dataField: \"sreceiveddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.childColumnList = [{\n      idsName: \"IDS_TESTNAME\",\n      dataField: \"stestsynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_PARAMETERNAME\",\n      dataField: \"sparametersynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_RESULT\",\n      dataField: \"sresult\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RESULTFLAG\",\n      dataField: \"sgradename\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_RESULTDATE\",\n      dataField: \"sentereddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.slideList = [{\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTID\"\n      }),\n      filed: \"spatientid\",\n      width: \"250px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FIRSTNAME\"\n      }),\n      filed: \"sfirstname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_LASTNAME\"\n      }),\n      filed: \"slastname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FATHERNAME\"\n      }),\n      filed: \"sfathername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_GENDER\"\n      }),\n      filed: \"sgendername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COUNTRY\"\n      }),\n      filed: \"scountryname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFBIRTH\"\n      }),\n      filed: \"sdob\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DISTRICT\"\n      }),\n      filed: \"sdistrict\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_POSTALCODE\"\n      }),\n      filed: \"spostalcode\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PHONENO\"\n      }),\n      filed: \"sphoneno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_MOBILENO\"\n      }),\n      filed: \"smobileno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EMAIL\"\n      }),\n      filed: \"semail\",\n      width: \"150px\"\n    }, // { title: this.props.intl.formatMessage({ id: \"IDS_ADDRESS\" }), filed: \"saddress\", width: \"150px\" },\n    {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_REFID\"\n      }),\n      filed: \"srefid\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PASSPORTNO\"\n      }),\n      filed: \"spassportno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EXTERNALID\"\n      }),\n      filed: \"sexternalid\",\n      width: \"150px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.state.controlMap.has(\"AddPatient\") && this.state.controlMap.get(\"AddPatient\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPatient\") && this.state.controlMap.get(\"EditPatient\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePatient\") && this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\n    const patientReportId = this.state.controlMap.has(\"PatientReport\") && this.state.controlMap.get(\"PatientReport\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\",\n      primaryKeyField: \"npatientcode\",\n      fetchUrl: \"patient/getPatient\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        currentdate: formatInputDate(new Date(), true)\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const addParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"create\",\n      primaryKeyName: \"npatientcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"update\",\n      primaryKeyName: \"spatientid\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\"\n    };\n    const mandatoryFields = [{\n      mandatory: true,\n      idsName: \"IDS_FIRSTNAME\",\n      dataField: \"sfirstname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_LASTNAME\",\n      dataField: \"slastname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_FATHERGUARDIANNAME\",\n    //   dataField: \"sfathername\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_DATEOFBIRTH\",\n      dataField: \"ddob\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_AGE\",\n    //   dataField: \"sage\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_GENDER\",\n      dataField: \"ngendercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_ADDRESS\",\n    //   dataField: \"saddress\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    // {\n    //   mandatory: true,\n    //   idsName: \"IDS_PHONENO\",\n    //   dataField: \"sphoneno\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_COUNTRY\",\n      dataField: \"ncountrycode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_REGIONNAME\",\n      dataField: \"nregioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_DISTRICTNAME\",\n      dataField: \"ndistrictcode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CITY\",\n      dataField: \"ncitycode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_STREET\",\n      dataField: \"sstreet\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_HOUSENO\",\n      dataField: \"shouseno\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_FLATNO\",\n      dataField: \"sflatno\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURENTREGION\",\n      dataField: \"nregioncodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTDISTRICT\",\n      dataField: \"ndistrictcodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTCITY\",\n      dataField: \"ncitycodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTSTREET\",\n      dataField: \"sstreettemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTHOUSENO\",\n      dataField: \"shousenotemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTFLATNO\",\n      dataField: \"sflatnotemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }];\n    let fromDate = \"\";\n    let toDate = \"\";\n    let breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\n      fromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\n      toDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\n      breadCrumbData.push({\n        \"label\": \"IDS_FROM\",\n        \"value\": this.props.Login.masterData.filterFromdate !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbFrom : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": this.props.Login.masterData.filterToDay !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbto : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbto\n      } // {\n      //   \"label\":\"IDS_PATIENTCASETYPE\",\n      //   \"value\":this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType:'-'\n      // }\n      );\n    }\n\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedPatientCaseType) {\n      breadCrumbData.push({\n        \"label\": \"IDS_PATIENTCASETYPE\",\n        \"value\": this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename : '-'\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PatientList,\n      getMasterDetail: user => this.props.getPatientDetail(user, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedPatient,\n      primaryKeyField: \"spatientid\",\n      mainField: \"spatientname\",\n      firstField: \"sage\",\n      secondField: \"sgendername\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPatientComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      showMicIcon: true,\n      showFilterIcon: true,\n      showSolidFilterIcon: true,\n      handleClick: this.handleClick,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_DATEFILTER\": /*#__PURE__*/React.createElement(PatientMasterFilter, {\n          fromDate: this.props.Login.masterData && this.props.Login.masterData.FromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate) : \"\",\n          toDate: this.props.Login.masterData && this.props.Login.masterData.ToDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate) : \"\",\n          selectedRecord: this.state.selectedRecord || {},\n          userInfo: this.props.Login.userInfo,\n          handleDateChange: this.handleDateChange,\n          onComboChange: this.onComboChange,\n          patientcasetypeList: this.state.patientCaseTypeList || [],\n          selectedProjectcasetype: this.props.Login.masterData.SelectedPatientCaseType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 39\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 17\n      }\n    }, this.props.Login.masterData.PatientList && this.props.Login.masterData.PatientList.length > 0 && this.props.Login.masterData.SelectedPatient ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.SelectedPatient.spatientname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editPatient\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.getPatientComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePatient\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"patientReport\",\n      hidden: this.state.userRoleControlRights.indexOf(patientReportId) === -1,\n      onClick: () => this.props.getPatientReport(this.props.Login.masterData.SelectedPatient, this.props.Login.userInfo, patientReportId) //  data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTREPORT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Reports, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FATHERNAME\",\n      message: \"Father Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sfathername == \"null\" ? \"-\" : this.props.Login.masterData.SelectedPatient.sfathername))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DATEOFBIRTH\",\n      message: \"Date Of Birth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdob === \"null\" || this.props.Login.masterData.SelectedPatient.sdob.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdob))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_AGE\",\n      message: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sage === \"null\" || this.props.Login.masterData.SelectedPatient.sage.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sage))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_GENDER\",\n      message: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sgendername === null || this.props.Login.masterData.SelectedPatient.sgendername.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sgendername))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOBILENO\",\n      message: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.smobileno === \"null\" || this.props.Login.masterData.SelectedPatient.smobileno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PHONENO\",\n      message: \"Phone No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sphoneno == \"null\" || this.props.Login.masterData.SelectedPatient.sphoneno === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAILID\",\n      message: \"Email ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.semail == \"null\" || this.props.Login.masterData.SelectedPatient.semail.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MIGRANT\",\n      message: \"Migrant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdisplaystatus == \"null\" || this.props.Login.masterData.SelectedPatient.sdisplaystatus.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdisplaystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COUNTRY\",\n      message: \"COUNTRY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scountryname == \"null\" || this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scountryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REFERENCEID\",\n      message: \"Reference ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.srefid == \"null\" || this.props.Login.masterData.SelectedPatient.srefid.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.srefid))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PASSPORTNO\",\n      message: \"Passport No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spassportno == \"null\" || this.props.Login.masterData.SelectedPatient.spassportno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.spassportno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXTERNALID\",\n      message: \"External ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sexternalid == \"null\" || this.props.Login.masterData.SelectedPatient.sexternalid.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sexternalid))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PERMANENTADDRESS\",\n      message: \"Permanent Address:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REGIONNAME\",\n      message: \"Region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sregionname === \"null\" || this.props.Login.masterData.SelectedPatient.sregionname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sregionname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISTRICTNAME\",\n      message: \"District\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdistrictname === \"null\" || this.props.Login.masterData.SelectedPatient.sdistrictname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdistrictname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CITY\",\n      message: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scityname === \"null\" || this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scityname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_POSTALCODE\",\n      message: \"PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spostalcode == \"null\" || this.props.Login.masterData.SelectedPatient.spostalcode.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.spostalcode))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_STREET\",\n      message: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sstreet === \"null\" || this.props.Login.masterData.SelectedPatient.sstreet.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sstreet))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_HOUSENO\",\n      message: \"House No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.shouseno === \"null\" || this.props.Login.masterData.SelectedPatient.shouseno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.shouseno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FLATNO\",\n      message: \"Flat No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sflatno === \"null\" || this.props.Login.masterData.SelectedPatient.sflatno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sflatno))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CURRENTADDRESS\",\n      message: \"Current Address:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REGIONNAME\",\n      message: \"Region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sregionnametemp === \"null\" || this.props.Login.masterData.SelectedPatient.sregionnametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sregionnametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISTRICTNAME\",\n      message: \"District\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdistrictnametemp === \"null\" || this.props.Login.masterData.SelectedPatient.sdistrictnametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdistrictnametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CITY\",\n      message: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scitynametemp === \"null\" || this.props.Login.masterData.SelectedPatient.scitynametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scitynametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_POSTALCODE\",\n      message: \"PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spostalcodetemp == \"null\" || this.props.Login.masterData.SelectedPatient.spostalcodetemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.spostalcodetemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_STREET\",\n      message: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sstreettemp === \"null\" || this.props.Login.masterData.SelectedPatient.sstreettemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sstreettemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_HOUSENO\",\n      message: \"HouseNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.shousenotemp === \"null\" || this.props.Login.masterData.SelectedPatient.shousenotemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.shousenotemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FLATNO\",\n      message: \"FlatNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sflatnotemp === \"null\" || this.props.Login.masterData.SelectedPatient.sflatnotemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sflatnotemp)))))) : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      className: this.props.Login.openSolidAdvFilter ? \"wide-popup\" : \"\" // operation={this.props.Login.operation}\n      ,\n      size: this.props.Login.loadEsign ? \"lg\" : this.props.Login.openSolidAdvFilter ? \"xl\" : \"lg\",\n      operation: this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.openSolidAdvFilter ? this.onSaveGetClick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      showSubmit: this.props.Login.openSolidAdvFilter ? true : false,\n      showSaveAs: this.props.Login.openSolidAdvFilter ? true : false,\n      hideSave: this.props.Login.openSolidAdvFilter ? true : false,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 17\n        }\n      }) : this.props.Login.openSolidAdvFilter ? /*#__PURE__*/React.createElement(FilterQueryBuilder //fields={Fields}\n      , {\n        fields: this.state.fields,\n        queryArray: this.state.queryArray,\n        skip: this.state.kendoSkip,\n        take: this.state.kendoTake,\n        onChange: this.onChange,\n        tree: this.state.tree,\n        config: this.state.config,\n        gridColumns: this.slideList,\n        filterData: this.props.Login.slideResult || [],\n        handlePageChange: this.handlePageChange,\n        static: true,\n        userInfo: this.props.Login.userInfo // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddPatient, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        handleDateChange: this.handleDateChange,\n        genderList: this.props.Login.genderList || [],\n        cityList: this.props.Login.cityList || [],\n        countryList: this.props.Login.countryList || [],\n        selectedPatient: this.props.Login.masterData.SelectedPatient || {},\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        regionList: this.props.Login.regionList || [],\n        districtList: this.props.Login.districtList || [],\n        districtListTemp: this.props.Login.districtListTemp || [],\n        cityListTemp: this.props.Login.cityListTemp || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      let fields = this.state.fields;\n      let queryBuilderGender = [];\n      let queryBuilderCity = [];\n      let queryBuilderCountry = [];\n      let queryBuilderRegion = []; // let queryBuilderDistrict=[];\n\n      this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(item => queryBuilderGender.push({\n        \"value\": item.ngendercode,\n        \"title\": item.sgendername\n      }));\n      this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(item => queryBuilderCity.push({\n        \"value\": item.ncitycode,\n        \"title\": item.scityname\n      }));\n      this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(item => queryBuilderCountry.push({\n        \"value\": item.ncountrycode,\n        \"title\": item.scountryname\n      }));\n      this.props.Login.masterData.regionList && this.props.Login.masterData.regionList.map(item => queryBuilderRegion.push({\n        \"value\": item.nregioncode,\n        \"title\": item.sregionname\n      })); // this.props.Login.masterData.districtList && this.props.Login.masterData.districtList.map(\n      //   (item)=>queryBuilderDistrict.push({\"value\":item.ndistrictcode ,\"title\":item.sdistrictname})\n      // )\n      //this.setState({ queryArray: queryArray });\n\n      fields = { ...fields,\n        // \"patientmaster.ngendercode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_GENDER\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderGender\n        //   }\n        // },\n        // \"patientmaster.ncitycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_CITY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderCity\n        //   }\n        // },\n        \"patientmaster.ncountrycode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_COUNTRY\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderCountry\n          }\n        },\n        \"patientmaster.nregioncode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_REGIONNAME\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderRegion\n          }\n        } // \"patientmaster.ndistrictcode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_DISTRICTNAME\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderDistrict\n        //   }\n        // }\n\n      };\n      this.setState({\n        fields: fields\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n      const patcasetypeMap = constructOptionList(this.props.Login.masterData.PatientCaseType || [], \"npatientcasetypecode\", \"spatientcasetypename\", undefined, undefined, false);\n      const patientCaseTypeList = patcasetypeMap.get(\"OptionList\");\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        patientCaseTypeList\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPatientDetail,\n  getPatientComboService,\n  filterColumnData,\n  getTestParameter,\n  getPatientReport,\n  getPatientDetailsByFilterQuery,\n  getDistrictComboServices,\n  getCityComboServices\n})(injectIntl(PatientMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/PatientMaster.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","Utils","QbUtils","callService","crudMaster","validateEsignCredential","updateStore","getPatientDetail","getPatientComboService","filterColumnData","getTestParameter","getPatientReport","getPatientDetailsByFilterQuery","getDistrictComboServices","getCityComboServices","DEFAULT_RETURN","showEsign","getControlMap","validatePhoneNumber","ageCalculate","formatInputDate","validateEmail","formatDate","constructOptionList","rearrangeDateFormat","formatInputDateWithoutT","convertDateValuetoString","transactionStatus","ListMaster","SlideOutModal","ReadOnlyText","ContentPanel","AddPatient","Esign","ConfirmMessage","FilterQueryBuilder","FormSelectSearch","DateTimePicker","BreadcrumbComponent","Affix","PatientMasterFilter","mapStateToProps","state","Login","PatientMaster","Component","constructor","props","handleClick","obj","typeName","data","openSolidAdvFilter","openModal","slideResult","undefined","setState","config","tree","dataStateChange","event","dataState","handlePageChange","kendoSkip","skip","kendoTake","take","openFilter","showFilter","updateInfo","closeFilter","onFilterSubmit","inputData","userInfo","selectedRecord","masterData","FromDate","ToDate","npatientcasetypecode","label","SelectedPatientCaseType","spatientcasetypename","searchRef","current","value","inputParam","classUrl","methodUrl","isClearSearch","displayname","item","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deletePatient","SelectedPatient","closeModal","loadEsign","operation","districtList","districtListTemp","cityListTemp","cityList","selectedId","onComboChange","comboData","fieldName","optionlistname","dispalyname","userinfo","sdisplayname","nregioncode","primarykey","nregioncodetemp","ndistrictcode","ndistrictcodetemp","onNumericInputOnChange","name","onChange","immutableTree","sqlFormat","onInputOnChange","target","type","checked","YES","NO","nneedcurrentaddress","sflatnotemp","sflatno","shousenotemp","shouseno","spostalcodetemp","spostalcode","sstreettemp","sstreet","ncitycodetemp","ncitycode","handleDateChange","dateName","dateValue","age","onSaveGetClick","paramFlag","userRoleControlRights","nformcode","ncontrolCode","screenData","warn","onSaveClick","saveType","formRef","patientData","postParam","inputListName","selectedObject","primaryKeyField","spatientid","sfirstname","slastname","sfathername","ddob","sage","ngendercode","ncountrycode","saddress","sdistrict","sphoneno","smobileno","semail","spassportno","srefid","sexternalid","nneedmigrant","sgendername","nsitecode","nmastersitecode","patientFieldList","map","NA","Date","selectedPatient","primaryKeyValue","fetchUrl","fecthInputObject","currentdate","screenName","validateEsign","sreason","nreasoncode","spredefinedreason","password","handleExpandChange","row","viewParam","viewRow","reloadData","displayName","masterStatus","error","patientCaseTypeList","controlMap","Map","fields","createRef","emailRef","searchFieldList","columnList","idsName","dataField","width","childColumnList","slideList","title","filed","getDerivedStateFromProps","render","addId","has","get","ncontrolcode","editId","patientReportId","filterParam","addParam","primaryKeyName","editParam","mandatoryFields","mandatory","mandatoryLabel","controlType","fromDate","toDate","breadCrumbData","push","filterFromdate","filterToDay","breadCrumbFrom","breadCrumbto","searchedData","PatientList","user","length","spatientname","indexOf","sdob","sdisplaystatus","scountryname","sregionname","sdistrictname","scityname","sregionnametemp","sdistrictnametemp","scitynametemp","queryArray","genderList","countryList","currentTime","regionList","componentDidUpdate","previousProps","queryBuilderGender","queryBuilderCity","queryBuilderCountry","queryBuilderRegion","patcasetypeMap","PatientCaseType","Object","values"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n//import DataGrid from \"../../components/data-grid/data-grid.component\";\r\n//import Fields from \"../../components/PatientMasterFields.json\";\r\nimport {\r\n  // Query,\r\n  // Builder,\r\n  // BasicConfig, BasicFuncs,\r\n  Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery,getDistrictComboServices,getCityComboServices\r\n} from \"../../actions\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  validatePhoneNumber,\r\n  ageCalculate,\r\n  formatInputDate,\r\n  validateEmail,\r\n  formatDate,constructOptionList,rearrangeDateFormat,formatInputDateWithoutT,convertDateValuetoString\r\n} from \"../../components/CommonScript\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport { ReactComponent as Reports } from \"../../assets/image/report-Icon.svg\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport AddPatient from \"./AddPatient\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\n// import ReactTooltip from \"react-tooltip\";\r\n//import { process } from \"@progress/kendo-data-query\";\r\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\r\n//import AddFilteredPatient from \"./AddFilteredPatient\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PatientMasterFilter from'./PatientMasterFilter';\r\n//import Filtercomponent from '../../components/Filtercomponent';\r\n// import FilterDemo from \"./FilterDemo\";\r\n// import \"antd/dist/antd.css\";\r\n// import 'react-awesome-query-builder/css/styles.scss';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass PatientMaster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      masterStatus: \"\",\r\n      error: \"\",\r\n      selectedRecord: {},\r\n      operation: \"\",\r\n      selectedPatient: undefined,\r\n      screenName: undefined,\r\n      userRoleControlRights: [],\r\n      patientCaseTypeList:[],\r\n      controlMap: new Map(),\r\n      isClearSearch: false,\r\n      dataState: { skip: 0, take: 5 },\r\n      tree: undefined,\r\n      config: undefined,\r\n      kendoSkip:0,\r\n      kendoTake:5,\r\n      fields: {\r\n        \"patientmaster.sfirstname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FIRSTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter First Name\"\r\n          }\r\n\r\n        },\r\n        \"patientmaster.slastname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_LASTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Last Name\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sfathername\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FATHERNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Father Name\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.ngendercode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_GENDER\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": [\r\n              { \"value\": \"1\", \"title\": \"Male\" },\r\n              { \"value\": \"2\", \"title\": \"Female\" },\r\n              { \"value\": \"3\", \"title\": \"Others\" }\r\n            ]\r\n          }\r\n        },\r\n\r\n\r\n        // \"patientmaster.ncitycode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_CITY\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": [\r\n        //       { \"value\": \"1\", \"title\": \"Male\" },\r\n        //       { \"value\": \"2\", \"title\": \"Female\" },\r\n        //       { \"value\": \"3\", \"title\": \"Others\" }\r\n        //     ]\r\n        //   }\r\n        // },\r\n\r\n\r\n        // \"patientmaster.ncountrycode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_COUNTRY\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": [\r\n        //       { \"value\": \"1\", \"title\": \"Male\" },\r\n        //       { \"value\": \"2\", \"title\": \"Female\" },\r\n        //       { \"value\": \"3\", \"title\": \"Others\" }\r\n        //     ]\r\n        //   }\r\n        // },\r\n\r\n        \"patientmaster.ddob\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_DATEOFBIRTH\",\r\n          }),\r\n          \"type\": \"date\",\r\n          \"valueSources\": [\"value\"]\r\n        },\r\n\r\n        \"patientmaster.sage\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_AGE\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Age\",\r\n            \"valuePlaceholder\": \"Enter the Age\"\r\n\r\n          }\r\n        },\r\n\r\n        // \"patientmaster.saddress\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_ADDRESS\",\r\n        //   }),\r\n        //   \"type\": \"text\",\r\n        //   \"valueSources\": [\"value\", \"func\"],\r\n        //   \"mainWidgetProps\": {\r\n        //     \"valueLabel\": \"Name\",\r\n        //     \"valuePlaceholder\": \"Enter Address\"\r\n\r\n        //   }\r\n        // },\r\n\r\n        // \"patientmaster.sstreet\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_STREET\",\r\n        //   }),\r\n        //   \"type\": \"text\",\r\n        //   \"valueSources\": [\"value\", \"func\"],\r\n        //   \"mainWidgetProps\": {\r\n        //     \"valueLabel\": \"Name\",\r\n        //     \"valuePlaceholder\": \"Enter Street\"\r\n\r\n        //   }\r\n        // },\r\n\r\n        \"patientmaster.spatientid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PATIENTID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Patient Id\"\r\n\r\n          }\r\n        },\r\n        // \"patientmaster.spostalcode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_POSTALCODE\",\r\n        //   }),\r\n        //   \"type\": \"text\",\r\n        //   \"valueSources\": [\"value\", \"func\"],\r\n        //   \"mainWidgetProps\": {\r\n        //     \"valueLabel\": \"Name\",\r\n        //     \"valuePlaceholder\": \"Enter Postal Code\"\r\n\r\n        //   }\r\n        // },\r\n     \r\n        \r\n        \"patientmaster.sphoneno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PHONENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Phoneno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.smobileno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_MOBILENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Mobileno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.semail\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EMAIL\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Email\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.srefid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_REFERENCEID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter ReferenceId\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.spassportno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PASSPORTNO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Passportno\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sexternalid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EXTERNALID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter ExternalID\"\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n    this.patientFieldList = [\r\n      \"sfirstname\",\r\n      \"slastname\",\r\n      \"sfathername\",\r\n      \"ddob\",\r\n      \"sage\",\r\n      \"saddress\",\r\n      \"sdistrict\",\r\n      \"spostalcode\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\"  ,\r\n      \"sstreet\",\"sstreettemp\",\"shouseno\",\"shousenotemp\",\"sflatno\",\"sflatnotemp\",\"nneedmigrant\",\"nneedcurrentaddress\",\"spostalcodetemp\",\"sregionnametemp\",\"sregionname\",\"scitynametemp\"\r\n    ];\r\n\r\n    this.searchFieldList = [\r\n      \"saddress\",\r\n      \"sage\",\r\n      \"sdob\",\r\n      \"sgendername\",\r\n      \"sfathername\",\r\n\t    \"spatientname\",\r\n      \"spatientid\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"scityname\",\r\n      \"sdistrict\",\r\n      \"scountryname\",\r\n      \"spostalcode\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\",\r\n      \"sstreet\",\"sstreettemp\",\"shouseno\",\"shousenotemp\",\"sflatno\",\"sflatnotemp\",\"nneedmigrant\",\"nneedcurrentaddress\",\"spostalcodetemp\",\"sregionnametemp\",\"sregionname\",\"scitynametemp\"\r\n    ];\r\n\r\n    this.columnList = [\r\n      { idsName: \"IDS_ARNO\", dataField: \"sarno\", width: \"150px\" },\r\n      { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", width: \"250px\" },\r\n      { idsName: \"IDS_SPECIFICATION\", dataField: \"sspecname\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\r\n        dataField: \"scolleciondate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_RECEIVEDDATE\",\r\n        dataField: \"sreceiveddate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n\r\n    this.childColumnList = [\r\n      { idsName: \"IDS_TESTNAME\", dataField: \"stestsynonym\", width: \"250px\" },\r\n      {\r\n        idsName: \"IDS_PARAMETERNAME\",\r\n        dataField: \"sparametersynonym\",\r\n        width: \"250px\",\r\n      },\r\n      { idsName: \"IDS_RESULT\", dataField: \"sresult\", width: \"150px\" },\r\n      { idsName: \"IDS_RESULTFLAG\", dataField: \"sgradename\", width: \"100px\" },\r\n      { idsName: \"IDS_RESULTDATE\", dataField: \"sentereddate\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n    this.slideList = [\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PATIENTID\" }), filed: \"spatientid\", width: \"250px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" }), filed: \"sfirstname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_LASTNAME\" }), filed: \"slastname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FATHERNAME\" }), filed: \"sfathername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_GENDER\" }), filed: \"sgendername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_COUNTRY\" }), filed: \"scountryname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DATEOFBIRTH\" }), filed: \"sdob\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DISTRICT\" }), filed: \"sdistrict\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_POSTALCODE\" }), filed: \"spostalcode\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PHONENO\" }), filed: \"sphoneno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_MOBILENO\" }), filed: \"smobileno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EMAIL\" }), filed: \"semail\", width: \"150px\" },\r\n     // { title: this.props.intl.formatMessage({ id: \"IDS_ADDRESS\" }), filed: \"saddress\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_REFID\" }), filed: \"srefid\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PASSPORTNO\" }), filed: \"spassportno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EXTERNALID\" }), filed: \"sexternalid\", width: \"150px\" },\r\n \r\n \r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.Login.masterStatus !== \"\" &&\r\n      props.Login.masterStatus !== state.masterStatus\r\n    ) {\r\n      toast.warn(props.Login.masterStatus);\r\n      props.Login.masterStatus = \"\";\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n  handleClick = () => {\r\n    let obj = { typeName: DEFAULT_RETURN, data: { openSolidAdvFilter: true, openModal: true, slideResult: undefined } }\r\n    this.setState({ config: undefined, tree: undefined })\r\n    this.props.updateStore(obj);\r\n  }\r\n  dataStateChange = (event) => {\r\n    this.setState({ dataState: event.dataState })\r\n  }\r\n\r\n  handlePageChange = (event) => {\r\n    this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n};\r\n  render() {\r\n    const addId =\r\n      this.state.controlMap.has(\"AddPatient\") &&\r\n      this.state.controlMap.get(\"AddPatient\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditPatient\") &&\r\n      this.state.controlMap.get(\"EditPatient\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeletePatient\") &&\r\n      this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\r\n    const patientReportId =\r\n      this.state.controlMap.has(\"PatientReport\") &&\r\n      this.state.controlMap.get(\"PatientReport\").ncontrolcode;\r\n\r\n    const filterParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo,currentdate:formatInputDate(new Date(), true) },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n\r\n    const addParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"create\",\r\n      primaryKeyName: \"npatientcode\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: addId,\r\n    };\r\n    const editParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"update\",\r\n      primaryKeyName: \"spatientid\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: editId,\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n    };\r\n    const mandatoryFields = [\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FIRSTNAME\",\r\n        dataField: \"sfirstname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_LASTNAME\",\r\n        dataField: \"slastname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_FATHERGUARDIANNAME\",\r\n      //   dataField: \"sfathername\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n\r\n        mandatory: true,\r\n        idsName: \"IDS_DATEOFBIRTH\",\r\n        dataField: \"ddob\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_AGE\",\r\n      //   dataField: \"sage\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_GENDER\",\r\n        dataField: \"ngendercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_ADDRESS\",\r\n      //   dataField: \"saddress\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_PHONENO\",\r\n      //   dataField: \"sphoneno\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_COUNTRY\",\r\n        dataField: \"ncountrycode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_REGIONNAME\",\r\n        dataField: \"nregioncode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_DISTRICTNAME\",\r\n        dataField: \"ndistrictcode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CITY\",\r\n        dataField: \"ncitycode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_STREET\",\r\n        dataField: \"sstreet\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_HOUSENO\",\r\n        dataField: \"shouseno\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FLATNO\",\r\n        dataField: \"sflatno\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURENTREGION\",\r\n        dataField: \"nregioncodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTDISTRICT\",\r\n        dataField: \"ndistrictcodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTCITY\",\r\n        dataField: \"ncitycodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTSTREET\",\r\n        dataField: \"sstreettemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      }, \r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTHOUSENO\",\r\n        dataField: \"shousenotemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTFLATNO\",\r\n        dataField: \"sflatnotemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n    ];\r\n    let fromDate = \"\";\r\n    let toDate = \"\";\r\n    let  breadCrumbData = [];\r\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n        fromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n        toDate =  rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate)\r\n\r\n      breadCrumbData.push(\r\n        {\r\n            \"label\": \"IDS_FROM\",\r\n            \"value\": this.props.Login.masterData.filterFromdate  !==undefined? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbFrom: convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbFrom\r\n        },\r\n        {\r\n            \"label\": \"IDS_TO\",\r\n            \"value\":  this.props.Login.masterData.filterToDay!==undefined?  convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbto : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbto\r\n        },\r\n        // {\r\n        //   \"label\":\"IDS_PATIENTCASETYPE\",\r\n        //   \"value\":this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType:'-'\r\n        // }\r\n    );\r\n    }\r\n    if(this.props.Login.masterData && this.props.Login.masterData.SelectedPatientCaseType){\r\n      breadCrumbData.push(     \r\n        {\r\n          \"label\":\"IDS_PATIENTCASETYPE\",\r\n          \"value\":this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename:'-'\r\n        }\r\n    );\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\">\r\n        <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          <Row noGutters>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({\r\n                  id: \"IDS_PATIENTMASTER\",\r\n                })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.PatientList\r\n                }\r\n                getMasterDetail={(user) =>\r\n                  this.props.getPatientDetail(\r\n                    user,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.SelectedPatient}\r\n                primaryKeyField=\"spatientid\"\r\n                mainField=\"spatientname\"\r\n                firstField=\"sage\"\r\n                secondField=\"sgendername\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                openModal={() => this.props.getPatientComboService(addParam)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n                showMicIcon={true}\r\n                showFilterIcon={true}\r\n                showSolidFilterIcon={true}\r\n                handleClick={this.handleClick}\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    \"IDS_DATEFILTER\": <PatientMasterFilter\r\n                    fromDate = {this.props.Login.masterData && this.props.Login.masterData.FromDate? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate):\"\"}\r\n                    toDate =  {this.props.Login.masterData && this.props.Login.masterData.ToDate? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate):\"\"}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    handleDateChange={this.handleDateChange}\r\n                    onComboChange={this.onComboChange}\r\n                    patientcasetypeList={this.state.patientCaseTypeList || []}\r\n                    selectedProjectcasetype={this.props.Login.masterData.SelectedPatientCaseType}\r\n                    />\r\n                  } \r\n              ]}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <ContentPanel className=\"panel-main-content\">\r\n                <Card className=\"border-0\">\r\n                  {this.props.Login.masterData.PatientList &&\r\n                    this.props.Login.masterData.PatientList.length > 0 &&\r\n                    this.props.Login.masterData.SelectedPatient ? (\r\n                    <>\r\n                      <Card.Header>\r\n                        {/* <ReactTooltip\r\n                          place=\"bottom\"\r\n                          globalEventOff=\"click\"\r\n                          id=\"tooltip_list_wrap\"\r\n                        /> */}\r\n                        <Card.Title className=\"product-title-main\">\r\n                          {\r\n                            this.props.Login.masterData.SelectedPatient.spatientname\r\n                          }\r\n                        </Card.Title>\r\n                        <Card.Subtitle>\r\n                          <div className=\"d-flex product-category\">\r\n                            <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                            <div className=\"d-inline\">\r\n                              <Nav.Link\r\n                                name=\"editPatient\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(editId) === -1                                \r\n                                }\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_EDIT\",\r\n                                })}\r\n                             //   data-for=\"tooltip_list_wrap\"\r\n                                onClick={() =>\r\n                                  this.props.getPatientComboService(editParam)\r\n                                }\r\n                              >\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                name=\"deletePatient\"\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_DELETE\",\r\n                                })}\r\n                             //   data-for=\"tooltip_list_wrap\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(deleteId) === -1                                                                      \r\n                                }\r\n                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                              >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                name=\"patientReport\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    patientReportId\r\n                                  ) === -1\r\n                                }\r\n                                onClick={() =>\r\n                                  this.props.getPatientReport(\r\n                                    this.props.Login.masterData.SelectedPatient,\r\n                                    this.props.Login.userInfo,\r\n                                    patientReportId\r\n                                  )\r\n                                }\r\n                              //  data-for=\"tooltip_list_wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_PATIENTREPORT\",\r\n                                })}\r\n                              >\r\n                                <Reports\r\n                                  className=\"custom_icons\"\r\n                                  width=\"20\"\r\n                                  height=\"20\"\r\n                                />\r\n                              </Nav.Link>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Subtitle>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FATHERNAME\"\r\n                                  message=\"Father Name\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sfathername == \"null\" ? \"-\" :\r\n                                  this.props.Login.masterData.SelectedPatient.sfathername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DATEOFBIRTH\"\r\n                                  message=\"Date Of Birth\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sdob === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdob.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sdob\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_AGE\" message=\"Age\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sage === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sage.length === 0                                                                    \r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sage\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_GENDER\" message=\"Gender\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sgendername === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sgendername.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sgendername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_MOBILENO\"\r\n                                  message=\"Mobile No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.smobileno === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.smobileno.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .smobileno}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PHONENO\"\r\n                                  message=\"Phone No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno == \"null\" \r\n                                  || this.props.Login.masterData.SelectedPatient.sphoneno === 0   ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          {/* <Col md={8}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_ADDRESS\"\r\n                                  message=\"Address\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.saddress  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.saddress.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.saddress \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col> */}\r\n                           <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EMAILID\"\r\n                                  message=\"Email ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.semail == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.semail.length === 0 ?\"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.semail                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_MIGRANT\"\r\n                                  message=\"Migrant\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdisplaystatus == \"null\" || \r\n                                  this.props.Login.masterData.SelectedPatient.sdisplaystatus.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sdisplaystatus                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_COUNTRY\"\r\n                                  message=\"COUNTRY\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scountryname == \"null\" || \r\n                                  this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.scountryname                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                         \r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REFERENCEID\"\r\n                                  message=\"Reference ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.srefid == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.srefid.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.srefid                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PASSPORTNO\"\r\n                                  message=\"Passport No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EXTERNALID\"\r\n                                  message=\"External ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                           <Col md={12}>\r\n                          <div className=\"horizontal-line\"></div>\r\n                           </Col>\r\n                            <Col md={12}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PERMANENTADDRESS\"\r\n                                  message=\"Permanent Address:\"\r\n                                />\r\n                              </FormLabel>\r\n                              </FormGroup>\r\n                             </Col>\r\n                              <Col md={3}>\r\n                              <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REGIONNAME\"\r\n                                  message=\"Region\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sregionname  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sregionname.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sregionname \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                            <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICTNAME\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictname  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictname.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sdistrictname \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n \r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scityname  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.scityname.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.scityname \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_POSTALCODE\"\r\n                                  message=\"PostalCode\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode                                 \r\n                                }\r\n                           </ReadOnlyText>\r\n                               </FormGroup>\r\n                          </Col>\r\n\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_STREET\"\r\n                                  message=\"Street\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sstreet  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sstreet.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sstreet \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_HOUSENO\"\r\n                                  message=\"House No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.shouseno  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.shouseno.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.shouseno \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FLATNO\"\r\n                                  message=\"Flat No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sflatno  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sflatno.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sflatno \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={12}>\r\n                          <div className=\"horizontal-line\"></div>\r\n                           </Col>\r\n                          <Col md={12}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CURRENTADDRESS\"\r\n                                  message=\"Current Address:\"\r\n                                />\r\n                              </FormLabel>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                              <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REGIONNAME\"\r\n                                  message=\"Region\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sregionnametemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sregionnametemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sregionnametemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                            <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICTNAME\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictnametemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictnametemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sdistrictnametemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scitynametemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.scitynametemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.scitynametemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_POSTALCODE\"\r\n                                  message=\"PostalCode\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcodetemp == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcodetemp.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcodetemp                                 \r\n                                }\r\n                           </ReadOnlyText>\r\n                               </FormGroup>\r\n                          </Col>\r\n\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_STREET\"\r\n                                  message=\"Street\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sstreettemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sstreettemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sstreettemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_HOUSENO\"\r\n                                  message=\"HouseNo\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.shousenotemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.shousenotemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.shousenotemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                              </FormGroup>\r\n                          </Col>\r\n                              <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FLATNO\"\r\n                                  message=\"FlatNo\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sflatnotemp  === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sflatnotemp.length  === 0 ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sflatnotemp \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          \r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scityname == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.scityname                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col> */}\r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICT\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict === 0 ?\"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col> */}\r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup> */}\r\n                        </Row>\r\n                        {/* <Row>\r\n                          <Col> */}\r\n                            {/* <DataGrid\r\n                              userRoleControlRights={\r\n                                this.state.userRoleControlRights\r\n                              }\r\n                              controlMap={this.state.controlMap}\r\n                              primaryKeyField={\"npreregno\"}\r\n                              data={\r\n                                this.props.Login.masterData &&\r\n                                this.props.Login.masterData[\"PatientHistory\"]\r\n                              }\r\n                              dataResult={process(\r\n                                this.props.Login.masterData &&\r\n                                (this.props.Login.masterData[\r\n                                  \"PatientHistory\"\r\n                                ] ||\r\n                                  []),\r\n                                this.state.dataState\r\n                              )}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={this.columnList}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              methodUrl={this.props.Login.inputParam.methodUrl}\r\n                              pageable={true}\r\n                              scrollable={\"scrollable\"}\r\n                              isActionRequired={false}\r\n                              isToolBarRequired={false}\r\n                              selectedId={null}\r\n                              hideColumnFilter={false}\r\n                              expandField={\"expanded\"}\r\n                              handleExpandChange={this.handleExpandChange}\r\n                              hasChild={true}\r\n                              childColumnList={this.childColumnList}\r\n                              childMappingField={\"npreregno\"}\r\n                              childList={this.props.Login.testMap || new Map()}\r\n                            />\r\n                          </Col>\r\n                        </Row> */}\r\n                      </Card.Body>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card>\r\n              </ContentPanel>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        {this.props.Login.openModal ? (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            className={this.props.Login.openSolidAdvFilter?\"wide-popup\":\"\"}\r\n           // operation={this.props.Login.operation}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openSolidAdvFilter ? \"xl\" : \"lg\"}\r\n            operation={this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.openSolidAdvFilter ? this.onSaveGetClick : this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            showSubmit={this.props.Login.openSolidAdvFilter ? true : false}\r\n            showSaveAs={this.props.Login.openSolidAdvFilter ? true : false}\r\n            hideSave={this.props.Login.openSolidAdvFilter ? true : false}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\"}\r\n\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.openSolidAdvFilter ? (\r\n                <FilterQueryBuilder\r\n                  //fields={Fields}\r\n                  fields={this.state.fields}\r\n                  queryArray={this.state.queryArray}\r\n                  skip={this.state.kendoSkip}\r\n                  take={this.state.kendoTake}\r\n                  onChange={this.onChange}\r\n                  tree={this.state.tree}\r\n                  config={this.state.config}\r\n                  gridColumns={this.slideList}\r\n                  filterData={this.props.Login.slideResult||[]}\r\n                  handlePageChange={this.handlePageChange}\r\n                  static={true}\r\n                  userInfo={this.props.Login.userInfo}\r\n                // controlMap={this.state.controlMap}\r\n                // dataState={this.state.dataState}\r\n                // dataStateChange={this.dataStateChange}\r\n                />)\r\n                : \r\n                  <AddPatient\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onComboChange={this.onComboChange}\r\n                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                    handleDateChange={this.handleDateChange}\r\n                    genderList={this.props.Login.genderList || []}\r\n                    cityList={this.props.Login.cityList || []}\r\n                    countryList={this.props.Login.countryList || []}\r\n                    selectedPatient={\r\n                      this.props.Login.masterData.SelectedPatient || {}\r\n                    }\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    currentTime={this.props.Login.currentTime}\r\n                    regionList={this.props.Login.regionList || []}\r\n                    districtList={this.props.Login.districtList || []}\r\n                    districtListTemp={this.props.Login.districtListTemp || []}\r\n                    cityListTemp={this.props.Login.cityListTemp || []}\r\n                  />\r\n                \r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { showFilter }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n}\r\n\r\ncloseFilter = () => {\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { showFilter: false }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n}\r\n\r\nonFilterSubmit = () => {\r\n\r\n  let inputData = [];\r\n  inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n  inputData[\"formdate\"] = this.state.selectedRecord['fromdate']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) :formatInputDateWithoutT( rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\r\n  inputData[\"todate\"] = this.state.selectedRecord['ToDay']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]):formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate));\r\n  inputData[\"casetype\"]=this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\r\n  this.searchRef.current.value = \"\";\r\n  const inputParam = {\r\n    classUrl: \"patient\",\r\n    methodUrl: \"Patient\",\r\n    inputData: inputData,\r\n    searchRef: this.searchRef,\r\n    isClearSearch: this.props.Login.isClearSearch,\r\n    displayname:\"Filter\"\r\n  };\r\n  const masterData = this.props.Login.masterData;\r\n  const SelectedPatientCaseType=this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\r\n\r\nthis.props.getPatientDetailsByFilterQuery(inputParam,masterData,SelectedPatientCaseType);\r\n}\r\n\r\n  componentDidUpdate(previousProps) {\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      this.setState({ selectedRecord: this.props.Login.selectedRecord, });\r\n      }\r\n\r\n    if(this.props.Login.masterData!==previousProps.Login.masterData){\r\n        let fields = this.state.fields;\r\n        let queryBuilderGender=[];\r\n        let queryBuilderCity =[];\r\n        let queryBuilderCountry=[];\r\n        let queryBuilderRegion=[];\r\n       // let queryBuilderDistrict=[];\r\n\r\n        this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(\r\n          (item)=>queryBuilderGender.push({\"value\":item.ngendercode ,\"title\":item.sgendername})\r\n        )\r\n\r\n        this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(\r\n          (item)=>queryBuilderCity.push({\"value\":item.ncitycode ,\"title\":item.scityname})\r\n        )\r\n\r\n        this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(\r\n          (item)=>queryBuilderCountry.push({\"value\":item.ncountrycode ,\"title\":item.scountryname})\r\n        )\r\n\r\n        this.props.Login.masterData.regionList && this.props.Login.masterData.regionList.map(\r\n          (item)=>queryBuilderRegion.push({\"value\":item.nregioncode ,\"title\":item.sregionname})\r\n        )\r\n\r\n        // this.props.Login.masterData.districtList && this.props.Login.masterData.districtList.map(\r\n        //   (item)=>queryBuilderDistrict.push({\"value\":item.ndistrictcode ,\"title\":item.sdistrictname})\r\n        // )\r\n\r\n        //this.setState({ queryArray: queryArray });\r\n        fields={\r\n          ...fields,\r\n          // \"patientmaster.ngendercode\": {\r\n          //   \"label\": this.props.intl.formatMessage({\r\n          //     id: \"IDS_GENDER\",\r\n          //   }),\r\n          //   \"type\": \"select\",\r\n          //   \"valueSources\": [\"value\"],\r\n          //   \"fieldSettings\": {\r\n          //     \"listValues\": queryBuilderGender\r\n          //   }\r\n          // },\r\n\r\n          // \"patientmaster.ncitycode\": {\r\n          //   \"label\": this.props.intl.formatMessage({\r\n          //     id: \"IDS_CITY\",\r\n          //   }),\r\n          //   \"type\": \"select\",\r\n          //   \"valueSources\": [\"value\"],\r\n          //   \"fieldSettings\": {\r\n          //     \"listValues\": queryBuilderCity\r\n          //   }\r\n          // },\r\n\r\n          \"patientmaster.ncountrycode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_COUNTRY\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": queryBuilderCountry\r\n          }\r\n        },\r\n        \"patientmaster.nregioncode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_REGIONNAME\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": queryBuilderRegion\r\n          }\r\n        },\r\n        // \"patientmaster.ndistrictcode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_DISTRICTNAME\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": queryBuilderDistrict\r\n        //   }\r\n        // }\r\n      }\r\n        this.setState({ fields: fields });\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      const userRoleControlRights = [];\r\n      const patcasetypeMap = constructOptionList(this.props.Login.masterData.PatientCaseType || [], \"npatientcasetypecode\",\r\n      \"spatientcasetypename\", undefined, undefined, false);               \r\n          const patientCaseTypeList = patcasetypeMap.get(\"OptionList\"); \r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      const controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ userRoleControlRights, controlMap,patientCaseTypeList });\r\n    }\r\n  }\r\n\r\n  ConfirmDelete = (deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.deletePatient(\r\n          \"Patient\",\r\n          this.props.Login.masterData.SelectedPatient,\r\n          \"delete\",\r\n          deleteId\r\n        )\r\n    );\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let openSolidAdvFilter = this.props.Login.openSolidAdvFilter;\r\n    let slideResult = this.props.Login.slideResult;\r\n    let tree = this.state.tree;\r\n\r\n\r\n    let config = this.state.config;\r\n\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n        selectedRecord['esignpassword'] = \"\";\r\n        selectedRecord['esigncomments'] = \"\";\r\n        selectedRecord['esignreason']=\"\";\r\n      }\r\n    } else {\r\n      openSolidAdvFilter = false;\r\n      openModal = false;\r\n      selectedRecord = {};\r\n      slideResult = {};\r\n      config = undefined;\r\n      tree = undefined;\r\n      this.props.Login.districtList=[];\r\n      this.props.Login.districtListTemp=[];\r\n      this.props.Login.cityListTemp=[];\r\n      this.props.Login.cityList=[];\r\n      this.setState({ config: config, tree: tree })\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId: null, openSolidAdvFilter, slideResult, config, tree },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName,optionlistname) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = comboData;\r\n    if (fieldName === \"nregioncode\") {\r\n      this.props.getDistrictComboServices({\r\n          inputData: {\r\n              dispalyname:\"District\",\r\n              userinfo: this.props.Login.userInfo,\r\n              sdisplayname: selectedRecord.nregioncode.label,\r\n              primarykey: selectedRecord.nregioncode.value,\r\n              optionlistname\r\n         }\r\n      });   \r\n  selectedRecord[\"ndistrictcode\"]=\"\"; \r\n  selectedRecord[\"ncitycode\"]=\"\"; \r\n    } \r\n   else  if (fieldName === \"nregioncodetemp\") {\r\n      this.props.getDistrictComboServices({\r\n          inputData: {\r\n              dispalyname:\"DistrictTemp\",\r\n              userinfo: this.props.Login.userInfo,\r\n              sdisplayname: selectedRecord.nregioncodetemp.label,\r\n              primarykey: selectedRecord.nregioncodetemp.value,\r\n              optionlistname\r\n         }\r\n      });   \r\n     selectedRecord[\"ndistrictcodetemp\"]=\"\"; \r\n     selectedRecord[\"ncitycodetemp\"]=\"\"; \r\n    } \r\n else  if (fieldName === \"ndistrictcode\") {\r\n    this.props.getCityComboServices({\r\n        inputData: {\r\n            dispalyname:\"City\",\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.ndistrictcode.label,\r\n            primarykey: selectedRecord.ndistrictcode.value,\r\n            optionlistname\r\n       }\r\n    });\r\n  selectedRecord[\"ncitycode\"]=\"\";  \r\n}\r\nelse if (fieldName === \"ndistrictcodetemp\") {\r\n  this.props.getCityComboServices({\r\n      inputData: {\r\n          dispalyname:\"CityTemp\",\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.ndistrictcodetemp.label,\r\n          primarykey: selectedRecord.ndistrictcodetemp.value,\r\n          optionlistname\r\n     }\r\n  });\r\nselectedRecord[\"ncitycodetemp\"]=\"\";  \r\n}\r\nelse if(fieldName === \"npatientcasetypecode\"){\r\n  selectedRecord[fieldName] = comboData;\r\n}\r\nthis.setState({ selectedRecord });\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n  // onFilterInputChange(immutableTree,){\r\n\r\n  //  let QbUtilss=JSON.stringify(QbUtils.sqlFormat(immutableTree, config));\r\n  //   console.log('QbUtils',QbUtilss)\r\n  // return QbUtilss\r\n\r\n  // };\r\n  onChange = (immutableTree, config) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n\r\n    // this.setState({ tree: immutableTree, config: config });\r\n    selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n    // const jsonTree = QbUtils.getTree(immutableTree);\r\n    // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\r\n\r\n    this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n  };\r\n  onInputOnChange = (event) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] =\r\n        event.target.checked === true\r\n          ? transactionStatus.YES\r\n          : transactionStatus.NO;\r\n          if(selectedRecord.nneedcurrentaddress===3){\r\n            selectedRecord.sflatnotemp=selectedRecord.sflatno;\r\n            selectedRecord.shousenotemp=selectedRecord.shouseno;\r\n            selectedRecord.spostalcodetemp=selectedRecord.spostalcode;\r\n            selectedRecord.sstreettemp=selectedRecord.sstreet;\r\n            selectedRecord.ncitycodetemp=selectedRecord.ncitycode;\r\n            selectedRecord.ndistrictcodetemp=selectedRecord.ndistrictcode;\r\n            selectedRecord.nregioncodetemp=selectedRecord.nregioncode;\r\n          } \r\n          else{\r\n              selectedRecord.sflatnotemp=\"\";\r\n              selectedRecord.shousenotemp=\"\";\r\n              selectedRecord.spostalcodetemp=\"\";\r\n              selectedRecord.sstreettemp=\"\";\r\n              selectedRecord.ncitycodetemp=\"\";\r\n              selectedRecord.ndistrictcodetemp=\"\";\r\n              selectedRecord.nregioncodetemp=\"\";\r\n          }\r\n    } else {\r\n      if (event.target.name === \"sphoneno\") {\r\n        if (event.target.value !== \"\") {\r\n          event.target.value = validatePhoneNumber(event.target.value);\r\n          selectedRecord[event.target.name] =\r\n            event.target.value !== \"\"\r\n              ? event.target.value\r\n              : selectedRecord[event.target.name];\r\n        } else {\r\n          selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n      } else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n      }\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    const age = ageCalculate(dateValue);\r\n    selectedRecord[\"sage\"] = age;\r\n//   if(dateName===\"ToDay\"){\r\n//     this.props.getDateChangeServices({\r\n//       userinfo: this.props.Login.userInfo,\r\n//       date: rearrangeDateFormat(this.props.Login.userInfo,selectedRecord[\"ToDay\"])\r\n// })\r\n//}\r\n   this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveGetClick = () => {\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'];\r\n    //inputData[\"formdate\"] = this.state.selectedRecord['fromdate']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) :formatInputDateWithoutT( rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\r\n   // inputData[\"todate\"] = this.state.selectedRecord['ToDay']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]):formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate));\r\n    if(this.state.selectedRecord['filterquery']!==undefined){\r\n    this.searchRef.current.value = \"\";\r\n    let paramFlag = true;\r\n\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"ByPatient\",\r\n      inputData: inputData,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n      displayname:\"AdvanceFilter\"\r\n        };\r\n    const masterData = this.props.Login.masterData;\r\n    const SelectedPatientCaseType=this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\r\n\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData }\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } \r\n\r\n     this.props.getPatientDetailsByFilterQuery(inputParam, masterData,SelectedPatientCaseType);\r\n   }else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUES\" }));\r\n  }\r\n  };\r\n\r\n onSaveClick = (saveType, formRef) => {\r\n  if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" &&  this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\r\n    let patientData = [];\r\n    patientData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    let postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"spatientid\",\r\n    };\r\n\r\n    if (this.props.Login.operation === \"update\") {\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedPatient.spatientid;\r\n        patientData[\"patient\"] = {\r\n        spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\r\n        sfirstname: this.state.selectedRecord.sfirstname,\r\n        slastname: this.state.selectedRecord.slastname,\r\n        sfathername: this.state.selectedRecord.sfathername,\r\n        ddob: formatInputDate(this.state.selectedRecord[\"ddob\"],false),\r\n        sage: this.state.selectedRecord.sage,\r\n        ngendercode:this.state.selectedRecord.ngendercode.value,\r\n        ncitycode: this.state.selectedRecord.ncitycode.value,\r\n        ncountrycode: this.state.selectedRecord.ncountrycode.value,\r\n        saddress: this.state.selectedRecord.saddress,\r\n        sdistrict: this.state.selectedRecord.sdistrict,\r\n        spostalcode: this.state.selectedRecord.spostalcode,\r\n        sphoneno: this.state.selectedRecord.sphoneno,\r\n        smobileno: this.state.selectedRecord.smobileno,\r\n        semail: this.state.selectedRecord.semail,\r\n        spassportno: this.state.selectedRecord.spassportno,\r\n        srefid: this.state.selectedRecord.srefid,\r\n        sexternalid: this.state.selectedRecord.sexternalid, \r\n        sstreet: this.state.selectedRecord.sstreet, \r\n        sstreettemp: this.state.selectedRecord.sstreettemp,   \r\n        shouseno: this.state.selectedRecord.shouseno,   \r\n        shousenotemp: this.state.selectedRecord.shousenotemp,   \r\n        sflatno: this.state.selectedRecord.sflatno, \r\n        sflatnotemp: this.state.selectedRecord.sflatnotemp,  \r\n        nneedcurrentaddress:this.state.selectedRecord.nneedcurrentaddress,  \r\n        nneedmigrant:this.state.selectedRecord.nneedmigrant,   \r\n        spostalcodetemp: this.state.selectedRecord.spostalcodetemp,\r\n        sgendername: this.state.selectedRecord.ngendercode.label\r\n      };\r\n\r\n    } else {\r\n      patientData[\"patient\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      this.patientFieldList.map((item) => {\r\n        return (patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n        undefined :this.state.selectedRecord[item]);\r\n      });\r\n    }\r\n\r\n    patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value\r\n      : transactionStatus.NA;\r\n\r\n     patientData[\"patient\"][\"ncitycodetemp\"] = this.state.selectedRecord[\"ncitycodetemp\"] ? this.state.selectedRecord[\"ncitycodetemp\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value\r\n      : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"ndistrictcodetemp\"] = this.state.selectedRecord[\"ndistrictcodetemp\"] ? this.state.selectedRecord[\"ndistrictcodetemp\"].value\r\n      : transactionStatus.NA;\r\n\r\n         patientData[\"patient\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    patientData[\"patient\"][\"nregioncodetemp\"] = this.state.selectedRecord[\"nregioncodetemp\"] ? this.state.selectedRecord[\"nregioncodetemp\"].value\r\n      : transactionStatus.NA;\r\n\r\n    // if (patientData[\"patient\"][\"ddob\"] !== undefined\r\n    //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\r\n    //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\r\n\r\n    // }\r\n    if (this.state.selectedRecord[\"ddob\"]) {\r\n      if(this.props.Login.operation === \"create\"){\r\n      patientData[\"patient\"][\"sdob\"] = formatInputDate(this.state.selectedRecord[\"ddob\"],false);\r\n      }\r\n      else{\r\n        patientData[\"patient\"][\"sdob\"] = this.state.selectedRecord[\"sdob\"];\r\n      }\r\n     }\r\n     patientData[\"patient\"][\"currentdate\"]= formatInputDate(new Date(), true);\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      inputData: patientData,\r\n      operation: this.props.Login.operation,\r\n      saveType,\r\n      formRef,\r\n      postParam,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  }else{\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }));\r\n      }\r\n  };\r\n\r\n  deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\r\n   let inputData=[];\r\n    const postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"spatientid\",\r\n      primaryKeyValue: selectedPatient.spatientid,\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo,currentdate:formatInputDate(new Date(), true) },\r\n    };\r\n    inputData[\"userinfo\"]=this.props.Login.userInfo;\r\n    inputData[\"patient\"]=selectedPatient;\r\n    inputData[\"patient\"][\"currentdate\"]=formatInputDate(new Date(), true)\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData,\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PATIENTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n     \r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  };\r\n\r\n  handleExpandChange = (row, dataState) => {\r\n    const viewParam = {\r\n      userInfo: this.props.Login.userInfo,\r\n      primaryKeyField: \"npreregno\",\r\n      masterData: this.props.Login.masterData,\r\n    };\r\n\r\n    this.props.getTestParameter({\r\n      ...viewParam,\r\n      dataState,\r\n      primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\r\n      viewRow: row[\"dataItem\"],\r\n    });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo,   currentdate: formatInputDate(new Date(), true),},\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      displayName: \"IDS_PATIENTMASTER\",\r\n      userInfo: this.props.Login.userInfo,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    this.props.callService(inputParam);\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery,getDistrictComboServices,getCityComboServices\r\n})(injectIntl(PatientMaster));\r\n"]},"metadata":{},"sourceType":"module"}