{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\Login\\\\ChangePassWord.js\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst ChangePassWord = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    name: \"sloginid\",\n    type: \"text\",\n    error: \"*\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOGINID\"\n    }),\n    value: props.sloginid,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"soldpassword\",\n    label: props.intl.formatMessage({\n      id: \"IDS_OLDPASSWORD\"\n    }),\n    type: \"password\",\n    required: true,\n    isMandatory: \"*\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_OLDPASSWORD\"\n    }),\n    onChange: event => props.onInputChange(event),\n    value: props.createPwdRecord.soldpassword ? props.createPwdRecord.soldpassword : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"snewpassword\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NEWPASSWORD\"\n    }),\n    type: \"password\",\n    required: true,\n    isMandatory: \"*\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NEWPASSWORD\"\n    }),\n    onChange: event => props.onInputChange(event),\n    value: props.createPwdRecord.snewpassword ? props.createPwdRecord.snewpassword : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sconfirmpassword\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CONFIRMPASSWORD\"\n    }),\n    type: \"password\",\n    required: true,\n    isMandatory: \"*\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CONFIRMPASSWORD\"\n    }),\n    onChange: event => props.onInputChange(event),\n    value: props.createPwdRecord.sconfirmpassword ? props.createPwdRecord.sconfirmpassword : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"spassworddescription\",\n    rows: \"2\",\n    value: props.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(ChangePassWord);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/Login/ChangePassWord.js"],"names":["React","Col","Row","injectIntl","FormInput","FormTextarea","ChangePassWord","props","intl","formatMessage","id","sloginid","event","onInputChange","createPwdRecord","soldpassword","snewpassword","sconfirmpassword","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAEoB,IAAA,IAAI,EAAC,MAFzB;AAEgC,IAAA,KAAK,EAAC,GAFtC;AAGI,IAAA,WAAW,EAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHlB;AAII,IAAA,KAAK,EAAGH,KAAK,CAACI,QAJlB;AAKI,IAAA,QAAQ,EAAI,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,KAAK,EAAGJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAG,IAJf;AAKI,IAAA,WAAW,EAAE,GALjB;AAMI,IAAA,WAAW,EAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CANlB;AAOI,IAAA,QAAQ,EAAME,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoBD,KAApB,CAP5B;AAQI,IAAA,KAAK,EAAEL,KAAK,CAACO,eAAN,CAAsBC,YAAtB,GAAoCR,KAAK,CAACO,eAAN,CAAsBC,YAA1D,GAAwE,EARnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAkBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,KAAK,EAAGR,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAG,IAJf;AAKI,IAAA,WAAW,EAAE,GALjB;AAMI,IAAA,WAAW,EAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CANlB;AAOI,IAAA,QAAQ,EAAME,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoBD,KAApB,CAP5B;AAQI,IAAA,KAAK,EAAEL,KAAK,CAACO,eAAN,CAAsBE,YAAtB,GAAoCT,KAAK,CAACO,eAAN,CAAsBE,YAA1D,GAAwE,EARnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eA4BI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,kBADT;AAEI,IAAA,KAAK,EAAGT,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAG,IAJf;AAKI,IAAA,WAAW,EAAE,GALjB;AAMI,IAAA,WAAW,EAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CANlB;AAOI,IAAA,QAAQ,EAAME,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoBD,KAApB,CAP5B;AAQI,IAAA,KAAK,EAAEL,KAAK,CAACO,eAAN,CAAsBG,gBAAtB,GAAwCV,KAAK,CAACO,eAAN,CAAsBG,gBAA9D,GAAgF,EAR3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,eAsCI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAC,sBADT;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,KAAK,EAAEV,KAAK,CAACW,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,CADJ,CADJ;AAiDH,CAlDD;;AAoDA,eAAef,UAAU,CAACG,cAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst ChangePassWord = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={ props.intl.formatMessage({ id:\"IDS_LOGINID\"}) }  \r\n                    name=\"sloginid\" type=\"text\" error=\"*\" \r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_LOGINID\"}) } \r\n                    value={ props.sloginid }\r\n                    readOnly = {true} \r\n                />\r\n                <FormInput\r\n                    name=\"soldpassword\" \r\n                    label={ props.intl.formatMessage({ id:\"IDS_OLDPASSWORD\"}) }\r\n                    type=\"password\"\r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_OLDPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.soldpassword? props.createPwdRecord.soldpassword: \"\"}\r\n                />\r\n                <FormInput\r\n                    name=\"snewpassword\" \r\n                    label={ props.intl.formatMessage({ id:\"IDS_NEWPASSWORD\"}) }\r\n                    type=\"password\"\r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_NEWPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.snewpassword? props.createPwdRecord.snewpassword: \"\"}\r\n                />\r\n                <FormInput\r\n                    name=\"sconfirmpassword\"\r\n                    label={ props.intl.formatMessage({ id:\"IDS_CONFIRMPASSWORD\"}) } \r\n                    type=\"password\" \r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_CONFIRMPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.sconfirmpassword? props.createPwdRecord.sconfirmpassword: \"\"}\r\n                />\r\n                <FormTextarea\r\n                    name=\"spassworddescription\" \r\n                    rows=\"2\" \r\n                    value={props.msg}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ChangePassWord);"]},"metadata":{},"sourceType":"module"}