{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\TestTab.jsx\";\nimport React from 'react';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'; // import ReactTooltip from 'react-tooltip';\n\nconst TestTab = props => {\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"no-gutters text-right border-bottom pt-2 pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights ? props.userRoleControlRights.indexOf(props.addId) === -1 : false //  data-tip={props.intl.formatMessage({ id: props.addTitleIDS})}\n    //data-for=\"tooltip_list_wrap\"\n    ,\n    onClick: () => props.comboDataService(props.addParam.screenName, props.addParam.operation, props.addParam.masterData, props.addParam.userInfo, props.addParam.ncontrolCode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: props.addTitleIDS,\n    defaultMessage: props.addTitleDefaultMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    primaryKeyField: \"nquotationtestcode\",\n    dataResult: props.dataResult,\n    dataState: {\n      skip: 0,\n      take: 5\n    },\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: props.columnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    inputParam: props.inputParam,\n    userInfo: props.userInfo // --   fetchRecord={this.props.getPricingEditService}\n    //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\n    ,\n    deleteRecord: props.deleteRecord,\n    deleteParam: props.deleteParam,\n    methodUrl: props.methodUrl // reloadData={this.reloadData}\n    // --      addRecord = {() => this.openModal(addId)}\n    ,\n    pageable: true,\n    scrollable: 'scrollable' // gridHeight = {'600px'}\n    ,\n    isActionRequired: true,\n    isToolBarRequired: false,\n    selectedId: props.selectedId,\n    data: props.masterData[props.primaryList],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default injectIntl(TestTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/TestTab.jsx"],"names":["React","Row","Col","Nav","FormattedMessage","injectIntl","FontAwesomeIcon","DataGrid","faPlus","TestTab","props","console","log","userRoleControlRights","indexOf","addId","comboDataService","addParam","screenName","operation","masterData","userInfo","ncontrolCode","addTitleIDS","addTitleDefaultMsg","dataResult","skip","take","dataStateChange","columnList","controlMap","inputParam","deleteRecord","deleteParam","methodUrl","selectedId","primaryList"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst TestTab = (props) => {\r\n    console.log(props);\r\n    return (<>\r\n        <Row className=\"no-gutters text-right border-bottom pt-2 pb-2\" >\r\n            <Col md={12}>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\"/> */}\r\n                    <Nav.Link className=\"add-txt-btn\" hidden={props.userRoleControlRights ? props.userRoleControlRights.indexOf(props.addId) === -1 : false}\r\n                        //  data-tip={props.intl.formatMessage({ id: props.addTitleIDS})}\r\n\r\n                        //data-for=\"tooltip_list_wrap\"\r\n                        onClick={() => props.comboDataService(props.addParam.screenName, props.addParam.operation, props.addParam.masterData, props.addParam.userInfo, props.addParam.ncontrolCode)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id={props.addTitleIDS} defaultMessage={props.addTitleDefaultMsg} />\r\n                    </Nav.Link>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"no-gutters\">\r\n            <Col md={12}>\r\n                <DataGrid\r\n                    primaryKeyField={\"nquotationtestcode\"}\r\n\r\n                    dataResult={props.dataResult}\r\n                    dataState={{ skip: 0, take: 5 }}\r\n                    dataStateChange={props.dataStateChange}\r\n                    extractedColumnList={props.columnList}\r\n                    controlMap={props.controlMap}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    inputParam={props.inputParam}\r\n                    userInfo={props.userInfo}\r\n                    // --   fetchRecord={this.props.getPricingEditService}\r\n                    //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\r\n                    deleteRecord={props.deleteRecord}\r\n                    deleteParam={props.deleteParam}\r\n                    methodUrl={props.methodUrl}\r\n                    // reloadData={this.reloadData}\r\n                    // --      addRecord = {() => this.openModal(addId)}\r\n                    pageable={true}\r\n                    scrollable={'scrollable'}\r\n                    // gridHeight = {'600px'}\r\n                    isActionRequired={true}\r\n                    isToolBarRequired={false}\r\n                    selectedId={props.selectedId}\r\n                    data={props.masterData[props.primaryList]}\r\n                />\r\n\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    );\r\n}\r\nexport default injectIntl(TestTab);"]},"metadata":{},"sourceType":"module"}