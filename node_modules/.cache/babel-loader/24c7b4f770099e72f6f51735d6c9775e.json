{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN}from'./LoginTypes';import rsapi from'../rsapi';import{toast}from'react-toastify';import{sortData,constructOptionList}from'../components/CommonScript';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import Axios from'axios';export function getSiteDetail(Site,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"site/getSiteScreen\",{nsitecode:Site.nsitecode,userinfo:userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSiteCombo(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolCode){return function(dispatch){var urlArray=[];if(operation===\"create\"){var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray=[timeZoneService];}else{var _rsapi$post;var _timeZoneService=rsapi.post(\"timezone/getTimeZone\");var SiteByID=rsapi.post(\"site/getActiveSiteById\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,masterData.selectedSite[primaryKeyName]),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post));urlArray=[_timeZoneService,SiteByID];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var timezone=[];var selectedRecord={};var timezoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,false);var TimeZoneList=timezoneMap.get(\"OptionList\");if(operation===\"update\"){selectedRecord=response[1].data;timezone.push({\"value\":response[1].data[\"ntimezonecode\"],\"label\":response[1].data[\"stimezoneid\"]});selectedRecord[\"ntimezonecode\"]=timezone[0];// edqmManufacturer.push({\n//     label: response[1].data[\"sofficialmanufname\"],\n//     value: response[1].data[\"nofficialmanufcode\"]\n// });\n}dispatch({type:DEFAULT_RETURN,payload:{TimeZoneList:TimeZoneList,isOpen:true,selectedRecord:operation===\"update\"?selectedRecord:{\"ntransactionstatus\":1},timezone:timezone,operation:operation,screenName:screenName,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/SiteAction.js"],"names":["DEFAULT_RETURN","rsapi","toast","sortData","constructOptionList","initRequest","intl","Axios","getSiteDetail","Site","userInfo","masterData","dispatch","post","nsitecode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","dataState","catch","error","status","message","warn","getSiteCombo","screenName","primaryKeyName","ncontrolCode","urlArray","timeZoneService","SiteByID","selectedSite","all","timezone","selectedRecord","timezoneMap","TimeZoneList","get","push","isOpen","openModal","formatMessage","id"],"mappings":"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","sourcesContent":["import {DEFAULT_RETURN} from './LoginTypes';\r\nimport rsapi from '../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport {sortData,constructOptionList} from '../components/CommonScript';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport function getSiteDetail (Site, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"site/getSiteScreen\", {nsitecode:Site.nsitecode, userinfo:userInfo})\r\n   .then(response=>{      \r\n        masterData = {...masterData, ...response.data};        \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false,dataState:undefined}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getSiteCombo(screenName, operation, primaryKeyName,  masterData, userInfo, ncontrolCode) {\r\n    return function(dispatch){ \r\n       let urlArray = [];\r\n       if (operation === \"create\") {\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n           urlArray = [timeZoneService];\r\n       }\r\n       else {\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n           const SiteByID = rsapi.post(\"site/getActiveSiteById\", { [primaryKeyName] :masterData.selectedSite[primaryKeyName], \"userinfo\": userInfo });\r\n           urlArray = [timeZoneService,SiteByID];\r\n       }\r\n   \r\n       dispatch(initRequest(true));\r\n       Axios.all(urlArray)\r\n           .then(response => {\r\n   \r\n               let timezone = [];\r\n               let selectedRecord = {};\r\n           const timezoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\",\r\n            \"stimezoneid\", undefined, undefined, false);\r\n\r\n            const TimeZoneList = timezoneMap.get(\"OptionList\");\r\n               if (operation === \"update\") {\r\n   \r\n                selectedRecord = response[1].data;\r\n               timezone.push({ \"value\": response[1].data[\"ntimezonecode\"], \"label\": response[1].data[\"stimezoneid\"] });\r\n                \r\n                \r\n                 selectedRecord[\"ntimezonecode\"] = timezone[0];\r\n                \r\n                   // edqmManufacturer.push({\r\n                   //     label: response[1].data[\"sofficialmanufname\"],\r\n                   //     value: response[1].data[\"nofficialmanufcode\"]\r\n                   // });\r\n               }\r\n               dispatch({type: DEFAULT_RETURN, \r\n                   payload:{  \r\n                    TimeZoneList, isOpen: true,  \r\n                   selectedRecord: operation === \"update\" ? selectedRecord : {\"ntransactionstatus\": 1}, \r\n                   timezone: timezone ,\r\n                   operation: operation,\r\n                        screenName: screenName,\r\n                       openModal : true, ncontrolCode: ncontrolCode, loading:false\r\n               }});\r\n           })\r\n           .catch(error => {\r\n               dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n               if (error.response.status === 500) {\r\n                   toast.error(intl.formatMessage({ id: error.message }));\r\n               }\r\n               else {\r\n                   toast.warn(intl.formatMessage({ id: error.response.data }));\r\n               }\r\n           })\r\n       }\r\n   }\r\n"]},"metadata":{},"sourceType":"module"}