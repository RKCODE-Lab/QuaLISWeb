{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\AddReportDetails.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst AddReportDetails = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nmaterialaccountinggroupcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REPORTTYPE\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.masterData.accountingPlantGroup,\n    value: props.selectedRecord[\"nmaterialaccountinggroupcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nmaterialaccountinggroupcode\"],\n    onChange: event => props.onComboChange(event, \"nmaterialaccountinggroupcode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_URANIUMCONTENTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nuraniumcontenttypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.masterData.UraniumContentType,\n    value: props.selectedRecord[\"nuraniumcontenttypecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nuraniumcontenttypecode\"],\n    onChange: event => props.onComboChange(event, \"nuraniumcontenttypecode\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_MONTH\"\n    }),\n    isSearchable: true,\n    name: \"nmonth\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.masterData.listOfMonth,\n    value: props.selectedRecord[\"nmonth\"] || \"\",\n    defaultValue: props.selectedRecord[\"nmonth\"],\n    onChange: event => props.onComboChange(event, \"nmonth\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"syear\",\n    label: props.intl.formatMessage({\n      id: \"IDS_YEAR\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_YEAR\"\n    }),\n    selected: props.selectedRecord.syear // showYearDropdown={true}\n    ,\n    dateFormat: \"yyyy\",\n    isClearable: false,\n    onChange: date => props.handleFilterDateChange(\"syear\", date),\n    value: props.selectedRecord.syear,\n    showYearPicker: true,\n    isMandatory: true //minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\n    ,\n    maxDate: new Date(2999, 12, 30) // scrollableYearDropdown={true}\n    ,\n    yearDropdownItemNumber: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    name: \"scomments\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }\n  })));\n};\n\nexport default injectIntl(AddReportDetails);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/Material/AddReportDetails.jsx"],"names":["React","Col","Row","injectIntl","FormSelectSearch","DateTimePicker","FormTextarea","AddReportDetails","props","intl","formatMessage","id","masterData","accountingPlantGroup","selectedRecord","event","onComboChange","UraniumContentType","listOfMonth","syear","date","handleFilterDateChange","Date","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nconst AddReportDetails = (props) => {\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        \r\n                   \r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nmaterialaccountinggroupcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.masterData.accountingPlantGroup}\r\n                            value={props.selectedRecord[\"nmaterialaccountinggroupcode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nmaterialaccountinggroupcode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nmaterialaccountinggroupcode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_URANIUMCONTENTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nuraniumcontenttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.masterData.UraniumContentType}\r\n                            value={props.selectedRecord[\"nuraniumcontenttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nuraniumcontenttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nuraniumcontenttypecode\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_MONTH\" })}\r\n                            isSearchable={true}\r\n                            name={\"nmonth\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.masterData.listOfMonth}\r\n                            value={props.selectedRecord[\"nmonth\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nmonth\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nmonth\", 1)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                        <DateTimePicker\r\n                    name={\"syear\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    selected={props.selectedRecord.syear}\r\n                    // showYearDropdown={true}\r\n                    dateFormat={\"yyyy\"}\r\n                    isClearable={false}\r\n                    onChange={date => props.handleFilterDateChange(\"syear\", date)}\r\n                    value={props.selectedRecord.syear}\r\n                    showYearPicker\r\n                    isMandatory={true}\r\n                    //minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\r\n                    maxDate={new Date(2999, 12, 30)}\r\n                    // scrollableYearDropdown={true}\r\n                    yearDropdownItemNumber={5}\r\n                />\r\n                 <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            name={\"scomments\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"500\"}\r\n                        >\r\n                        </FormTextarea>\r\n      </Col>\r\n\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default injectIntl(AddReportDetails);"]},"metadata":{},"sourceType":"module"}