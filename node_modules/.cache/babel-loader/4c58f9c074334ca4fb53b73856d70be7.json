{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\ResultChangeHistoryTab.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nclass ResultChangeHistoryTab extends React.Component {\n  //const deputyAddParam = {screenName:\"Deputy\", operation:\"create\", primaryKeyField:\"nusermultideputycode\", \n  // primaryKeyValue:undefined, masterData:props.masterData, userInfo:props.userInfo,\n  // ncontrolCode:addUserMultiDeputyId};\n  render() {\n    const extractedColumnList = [];\n\n    if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"155px\"\n      });\n    } else {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"width\": \"155px\"\n      });\n    }\n\n    extractedColumnList.push( // {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"200px\"},\n    // {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"200px\"},\n    {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_FORMNAME\",\n      \"dataField\": \"sformname\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_RESULTS\",\n      \"dataField\": \"sresult\",\n      \"width\": \"125px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"125px\"\n    }, {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_REMARKS\",\n      \"dataField\": \"sremarks\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_ENTERBY\",\n      \"dataField\": \"username\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_ENTERROLE\",\n      \"dataField\": \"suserrolename\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_ENTERDATE\",\n      \"dataField\": \"sentereddate\",\n      \"width\": \"250px\"\n    }); // {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\n\n    const detailedFieldList = [// { \"idsName\": \"IDS_MINA\", \"dataField\": \"nmina\" },\n    // { \"idsName\": \"IDS_MAXA\", \"dataField\": \"nmaxa\" },\n    {\n      \"idsName\": \"IDS_MINB\",\n      \"dataField\": \"sminb\",\n      \"columnSize\": \"3\"\n    }, {\n      \"idsName\": \"IDS_MAXB\",\n      \"dataField\": \"smaxb\",\n      \"columnSize\": \"3\"\n    } // { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"nminlod\" },\n    // { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"nmaxlod\" },\n    // { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"nminloq\" },\n    // { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"nmaxloq\" },\n    ];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"ntransactionresultcode\",\n      data: this.props.ApprovalResultChangeHistory || [],\n      dataResult: process(this.props.ApprovalResultChangeHistory || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      expandField: \"expanded\",\n      detailedFieldList: detailedFieldList,\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isActionRequired: false,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      methodUrl: \"Status\",\n      gridHeight: \"550px\",\n      hasDynamicColSize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ResultChangeHistoryTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/approval/ResultChangeHistoryTab.jsx"],"names":["React","Row","Col","injectIntl","DataGrid","process","ResultChangeHistoryTab","Component","render","extractedColumnList","props","masterData","nneedsubsample","push","genericLabel","userInfo","slanguagetypecode","detailedFieldList","ApprovalResultChangeHistory","dataState","dataStateChange","controlMap","userRoleControlRights","inputParam"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nclass ResultChangeHistoryTab extends React.Component {\r\n\r\n\r\n    //const deputyAddParam = {screenName:\"Deputy\", operation:\"create\", primaryKeyField:\"nusermultideputycode\", \r\n    // primaryKeyValue:undefined, masterData:props.masterData, userInfo:props.userInfo,\r\n    // ncontrolCode:addUserMultiDeputyId};\r\n    render() {\r\n        const extractedColumnList = [];\r\n        if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n        }\r\n        else{\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n        }\r\n        extractedColumnList.push(\r\n            // {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"200px\"},\r\n            // {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"200px\"},\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_FORMNAME\", \"dataField\": \"sformname\", \"width\": \"155px\"},          \r\n            { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"sresult\", \"width\": \"125px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"125px\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_REMARKS\", \"dataField\": \"sremarks\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_ENTERBY\", \"dataField\": \"username\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_ENTERROLE\", \"dataField\": \"suserrolename\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_ENTERDATE\", \"dataField\": \"sentereddate\", \"width\": \"250px\" }\r\n        );\r\n        \r\n        // {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\r\n        const detailedFieldList = [\r\n            // { \"idsName\": \"IDS_MINA\", \"dataField\": \"nmina\" },\r\n            // { \"idsName\": \"IDS_MAXA\", \"dataField\": \"nmaxa\" },\r\n            { \"idsName\": \"IDS_MINB\", \"dataField\": \"sminb\" , \"columnSize\":\"3\"},\r\n            { \"idsName\": \"IDS_MAXB\", \"dataField\": \"smaxb\" , \"columnSize\":\"3\"},\r\n            // { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"nminlod\" },\r\n            // { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"nmaxlod\" },\r\n            // { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"nminloq\" },\r\n            // { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"nmaxloq\" },\r\n        ]\r\n        return (\r\n            <>\r\n                <Row noGutters={\"true\"}>\r\n                    <Col md={12}>\r\n                        <DataGrid\r\n                            primaryKeyField={\"ntransactionresultcode\"}\r\n                            data={this.props.ApprovalResultChangeHistory || []}\r\n                            dataResult={process(this.props.ApprovalResultChangeHistory || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            expandField=\"expanded\"\r\n                            detailedFieldList={detailedFieldList}\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            isActionRequired={false}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            methodUrl={\"Status\"}\r\n                            gridHeight={\"550px\"}\r\n                            hasDynamicColSize={true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ResultChangeHistoryTab);"]},"metadata":{},"sourceType":"module"}