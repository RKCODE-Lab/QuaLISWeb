{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\PatientMaster.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\nimport Fields from \"../../components/PatientMasterFields.json\";\nimport { Query, Builder, BasicConfig, BasicFuncs, Utils as QbUtils } from \"react-awesome-query-builder\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPatientDetail, getPatientComboService, filterColumnData, getTestParameter, getPatientReport, getPatientDetailsByFilterQuery } from \"../../actions\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport { showEsign, getControlMap, validatePhoneNumber, ageCalculate, formatInputDate } from \"../../components/CommonScript\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport { ReactComponent as Reports } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-Icon.svg\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport AddPatient from \"./AddPatient\";\nimport Esign from \"../audittrail/Esign\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport ReactTooltip from \"react-tooltip\";\nimport { process } from \"@progress/kendo-data-query\";\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\nimport AddFilteredPatient from \"./AddFilteredPatient\"; //import Filtercomponent from '../../components/Filtercomponent';\n// import FilterDemo from \"./FilterDemo\";\n// import \"antd/dist/antd.css\";\n// import 'react-awesome-query-builder/css/styles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PatientMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      let obj = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openAdvFilter: true,\n          openModal: true,\n          slideResult: undefined\n        }\n      };\n      this.setState({\n        config: undefined,\n        tree: undefined\n      });\n      this.props.updateStore(obj);\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.handlePageChange = event => {\n      this.setState({\n        kendoSkip: event.skip,\n        kendoTake: event.take\n      });\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deletePatient(\"Patient\", this.props.Login.masterData.SelectedPatient, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openAdvFilter = this.props.Login.openAdvFilter;\n      let slideResult = this.props.Login.slideResult;\n      let tree = this.state.tree;\n      let config = this.state.config;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openAdvFilter = false;\n        openModal = false;\n        selectedRecord = {};\n        slideResult = {};\n        config = undefined;\n        tree = undefined;\n        this.setState({\n          config: config,\n          tree: tree\n        });\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          openAdvFilter,\n          slideResult,\n          config,\n          tree\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChange = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {}; // this.setState({ tree: immutableTree, config: config });\n\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config); // const jsonTree = QbUtils.getTree(immutableTree);\n      // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\n\n      this.setState({\n        tree: immutableTree,\n        config: config,\n        selectedRecord: selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (event.target.name === \"sphoneno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      const age = ageCalculate(dateValue);\n      selectedRecord[\"sage\"] = age;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveGetClick = () => {\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'];\n      this.searchRef.current.value = \"\";\n      let paramFlag = true;\n      const inputParam = {\n        classUrl: \"patient\",\n        methodUrl: \"ByPatient\",\n        inputData: inputData,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.getPatientDetailsByFilterQuery(inputParam, masterData);\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let patientData = [];\n      patientData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = {\n        inputListName: \"PatientList\",\n        selectedObject: \"SelectedPatient\",\n        primaryKeyField: \"npatientcode\"\n      };\n\n      if (this.props.Login.operation === \"update\") {\n        postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedPatient.npatientcode;\n        patientData[\"patient\"] = {\n          npatientcode: this.props.Login.masterData.SelectedPatient.npatientcode,\n          sfirstname: this.state.selectedRecord.sfirstname,\n          slastname: this.state.selectedRecord.slastname,\n          snationalid: this.state.selectedRecord.snationalid,\n          sage: this.state.selectedRecord.sage,\n          sphoneno: this.state.selectedRecord.sphoneno,\n          saddress: this.state.selectedRecord.saddress,\n          sfathername: this.state.selectedRecord.sfathername //    \"ddob\": formatInputDate(\n          //     this.state.selectedRecord[\"ddob\"],false)\n\n        };\n      } else {\n        patientData[\"patient\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        this.patientFieldList.map(item => {\n          return patientData[\"patient\"][item] = this.state.selectedRecord[item];\n        });\n      }\n\n      patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value : transactionStatus.NA; // if (patientData[\"patient\"][\"ddob\"] !== undefined\n      //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\n      //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\n      // }\n\n      if (this.state.selectedRecord[\"ddob\"]) {\n        patientData[\"patient\"][\"ddob\"] = formatInputDate(this.state.selectedRecord[\"ddob\"], false);\n      }\n\n      const inputParam = {\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        inputData: patientData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\n      const postParam = {\n        inputListName: \"PatientList\",\n        selectedObject: \"SelectedPatient\",\n        primaryKeyField: \"npatientcode\",\n        primaryKeyValue: selectedPatient.npatientcode,\n        fetchUrl: \"patient/getPatient\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          patient: selectedPatient\n        },\n        operation,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PATIENTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getTestParameter({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        displayName: \"IDS_PATIENTMASTER\",\n        userInfo: this.props.Login.userInfo,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedPatient: undefined,\n      screenName: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      isClearSearch: false,\n      dataState: {\n        skip: 0,\n        take: 5\n      },\n      tree: undefined,\n      config: undefined,\n      kendoSkip: 0,\n      kendoTake: 5,\n      fields: {\n        \"patientmaster.sfirstname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FIRSTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter First Name\"\n          }\n        },\n        \"patientmaster.slastname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_LASTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Last Name\"\n          }\n        },\n        \"patientmaster.spatientid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PATIENTID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Patient Id\"\n          }\n        },\n        \"patientmaster.snationalid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_NATIONALID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter National Id\"\n          }\n        },\n        \"patientmaster.sfathername\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FATHERGUARDIANNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Father Name\"\n          }\n        },\n        \"patientmaster.ddob\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_DATEOFBIRTH\"\n          }),\n          \"type\": \"date\",\n          \"valueSources\": [\"value\"]\n        },\n        \"patientmaster.sage\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_AGE\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Age\",\n            \"valuePlaceholder\": \"Enter the Age\"\n          }\n        },\n        \"patientmaster.ngendercode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_SEX\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": [{\n              \"value\": \"1\",\n              \"title\": \"Male\"\n            }, {\n              \"value\": \"2\",\n              \"title\": \"Female\"\n            }, {\n              \"value\": \"3\",\n              \"title\": \"Others\"\n            }]\n          }\n        },\n        \"patientmaster.saddress\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_ADDRESS\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": \"Enter Address\"\n          }\n        },\n        \"patientmaster.sphoneno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PHONENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": \"Enter Phoneno\"\n          }\n        }\n      }\n    };\n    this.searchRef = React.createRef();\n    this.emailRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.patientFieldList = [\"sfirstname\", \"slastname\", \"sfathername\", \"sage\", \"ddob\", \"sphoneno\", \"saddress\", \"snationalid\"];\n    this.searchFieldList = [\"saddress\", \"sage\", \"sdob\", \"sgendername\", \"sfirstname\", \"sfathername\", \"slastname\", \"spatientid\", \"sphoneno\"];\n    this.columnList = [{\n      idsName: \"IDS_ARNO\",\n      dataField: \"sarno\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_PRODUCT\",\n      dataField: \"sproductname\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_SPECIFICATION\",\n      dataField: \"sspecname\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\n      dataField: \"scolleciondate\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_RECEIVEDDATE\",\n      dataField: \"sreceiveddate\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.childColumnList = [{\n      idsName: \"IDS_TESTNAME\",\n      dataField: \"stestsynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_PARAMETERNAME\",\n      dataField: \"sparametersynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_RESULT\",\n      dataField: \"sresult\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RESULTFLAG\",\n      dataField: \"sgradename\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_RESULTDATE\",\n      dataField: \"sentereddate\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.slideList = [{\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTID\"\n      }),\n      filed: \"spatientid\",\n      width: \"250px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FIRSTNAME\"\n      }),\n      filed: \"sfirstname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_LASTNAME\"\n      }),\n      filed: \"slastname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_NATIONALID\"\n      }),\n      filed: \"snationalid\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FATHERGUARDIANNAME\"\n      }),\n      filed: \"sfathername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFBIRTH\"\n      }),\n      filed: \"sdob\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_AGE\"\n      }),\n      filed: \"sage\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_SEX\"\n      }),\n      filed: \"sgendername\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_ADDRESS\"\n      }),\n      filed: \"saddress\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PHONENO\"\n      }),\n      filed: \"sphoneno\",\n      width: \"150px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.state.controlMap.has(\"AddPatient\") && this.state.controlMap.get(\"AddPatient\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPatient\") && this.state.controlMap.get(\"EditPatient\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePatient\") && this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\n    const patientReportId = this.state.controlMap.has(\"PatientReport\") && this.state.controlMap.get(\"PatientReport\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\",\n      primaryKeyField: \"npatientcode\",\n      fetchUrl: \"patient/getPatient\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const addParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"create\",\n      primaryKeyName: \"npatientcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"update\",\n      primaryKeyName: \"npatientcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\"\n    };\n    const mandatoryFields = [{\n      mandatory: true,\n      idsName: \"IDS_FIRSTNAME\",\n      dataField: \"sfirstname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_LASTNAME\",\n      dataField: \"slastname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_FATHERGUARDIANNAME\",\n      dataField: \"sfathername\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_DATEOFBIRTH\",\n      dataField: \"ddob\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_AGE\",\n      dataField: \"sage\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_SEX\",\n      dataField: \"ngendercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_ADDRESS\",\n      dataField: \"saddress\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_PHONENO\",\n      dataField: \"sphoneno\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PatientList,\n      getMasterDetail: user => this.props.getPatientDetail(user, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedPatient,\n      primaryKeyField: \"npatientcode\",\n      mainField: \"spatientname\",\n      firstField: \"sfathername\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPatientComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      showMicIcon: true,\n      showAdvFilterIcon: true,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }\n    }, this.props.Login.masterData.PatientList && this.props.Login.masterData.PatientList.length > 0 && this.props.Login.masterData.SelectedPatient ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.SelectedPatient.spatientname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editPatient\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.props.getPatientComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePatient\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"patientReport\",\n      hidden: this.state.userRoleControlRights.indexOf(patientReportId) === -1,\n      onClick: () => this.props.getPatientReport(this.props.Login.masterData.SelectedPatient, this.props.Login.userInfo, patientReportId),\n      \"data-for\": \"tooltip_list_wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTREPORT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Reports, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PATIENTID\",\n      message: \"Patient ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spatientid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_NATIONALID\",\n      message: \"National ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.snationalid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DATEOFBIRTH\",\n      message: \"Date Of Birth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdob === null || this.props.Login.masterData.SelectedPatient.sdob.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdob))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_AGE\",\n      message: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sage === null || this.props.Login.masterData.SelectedPatient.sage.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sage))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SEX\",\n      message: \"Sex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sgendername === null || this.props.Login.masterData.SelectedPatient.sgendername.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sgendername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FATHERGUARDIANNAME\",\n      message: \"Father/Guardian Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sfathername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PHONENO\",\n      message: \"Phone No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDRESS\",\n      message: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.saddress === null || this.props.Login.masterData.SelectedPatient.saddress.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.saddress)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      userRoleControlRights: this.state.userRoleControlRights,\n      controlMap: this.state.controlMap,\n      primaryKeyField: \"npreregno\",\n      data: this.props.Login.masterData && this.props.Login.masterData[\"PatientHistory\"],\n      dataResult: process(this.props.Login.masterData && (this.props.Login.masterData[\"PatientHistory\"] || []), this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.columnList,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      methodUrl: this.props.Login.inputParam.methodUrl,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: false,\n      isToolBarRequired: false,\n      selectedId: null,\n      hideColumnFilter: false,\n      expandField: \"expanded\",\n      handleExpandChange: this.handleExpandChange,\n      hasChild: true,\n      childColumnList: this.childColumnList,\n      childMappingField: \"npreregno\",\n      childList: this.props.Login.testMap || new Map(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 29\n      }\n    }))))) : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      size: this.props.Login.loadEsign ? \"lg\" : this.props.Login.openAdvFilter ? \"xl\" : \"lg\",\n      operation: this.props.Login.openAdvFilter ? \"\" : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.openAdvFilter ? this.onSaveGetClick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      showSubmit: this.props.Login.openAdvFilter ? true : false,\n      hideSave: this.props.Login.openAdvFilter ? true : false,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.openAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 17\n        }\n      }) : this.props.Login.openAdvFilter ? /*#__PURE__*/React.createElement(FilterQueryBuilder //fields={Fields}\n      , {\n        fields: this.state.fields,\n        skip: this.state.kendoSkip,\n        take: this.state.kendoTake,\n        onChange: this.onChange,\n        tree: this.state.tree,\n        config: this.state.config,\n        gridColumns: this.slideList,\n        filterData: this.props.Login.slideResult || [],\n        handlePageChange: this.handlePageChange,\n        static: true // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddPatient, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        handleDateChange: this.handleDateChange,\n        genderList: this.props.Login.genderList || [],\n        selectedPatient: this.props.Login.masterData.SelectedPatient || {},\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPatientDetail,\n  getPatientComboService,\n  filterColumnData,\n  getTestParameter,\n  getPatientReport,\n  getPatientDetailsByFilterQuery\n})(injectIntl(PatientMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/PatientMaster.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","DataGrid","Fields","Query","Builder","BasicConfig","BasicFuncs","Utils","QbUtils","callService","crudMaster","validateEsignCredential","updateStore","getPatientDetail","getPatientComboService","filterColumnData","getTestParameter","getPatientReport","getPatientDetailsByFilterQuery","DEFAULT_RETURN","showEsign","getControlMap","validatePhoneNumber","ageCalculate","formatInputDate","transactionStatus","ListMaster","SlideOutModal","ReadOnlyText","ContentPanel","AddPatient","Esign","ConfirmMessage","ReactTooltip","process","FilterQueryBuilder","AddFilteredPatient","mapStateToProps","state","Login","PatientMaster","Component","constructor","props","handleClick","obj","typeName","data","openAdvFilter","openModal","slideResult","undefined","setState","config","tree","dataStateChange","event","dataState","handlePageChange","kendoSkip","skip","kendoTake","take","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deletePatient","masterData","SelectedPatient","closeModal","loadEsign","selectedRecord","operation","updateInfo","selectedId","onComboChange","comboData","fieldName","onNumericInputOnChange","value","name","onChange","immutableTree","sqlFormat","onInputOnChange","target","type","checked","YES","NO","handleDateChange","dateName","dateValue","age","onSaveGetClick","inputData","userInfo","searchRef","current","paramFlag","inputParam","classUrl","methodUrl","isClearSearch","userRoleControlRights","nformcode","ncontrolCode","screenData","onSaveClick","saveType","formRef","patientData","postParam","inputListName","selectedObject","primaryKeyField","npatientcode","sfirstname","slastname","snationalid","sage","sphoneno","saddress","sfathername","nsitecode","nmastersitecode","patientFieldList","map","item","NA","selectedPatient","primaryKeyValue","fetchUrl","fecthInputObject","userinfo","patient","screenName","validateEsign","sreason","password","handleExpandChange","row","viewParam","viewRow","reloadData","displayName","masterStatus","error","controlMap","Map","fields","createRef","emailRef","searchFieldList","columnList","idsName","dataField","width","childColumnList","slideList","title","filed","getDerivedStateFromProps","warn","render","addId","has","get","ncontrolcode","editId","patientReportId","filterParam","addParam","primaryKeyName","editParam","mandatoryFields","mandatory","mandatoryLabel","controlType","searchedData","PatientList","user","length","spatientname","indexOf","spatientid","sdob","sgendername","testMap","genderList","currentTime","componentDidUpdate","previousProps","Object","values","push"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataGrid from \"../../components/data-grid/data-grid.component\";\r\nimport Fields from \"../../components/PatientMasterFields.json\";\r\nimport {\r\n  Query,\r\n  Builder,\r\n  BasicConfig, BasicFuncs,\r\n  Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery\r\n} from \"../../actions\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  validatePhoneNumber,\r\n  ageCalculate,\r\n  formatInputDate,\r\n} from \"../../components/CommonScript\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport { ReactComponent as Reports } from \"../../assets/image/report-Icon.svg\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport AddPatient from \"./AddPatient\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\r\nimport AddFilteredPatient from \"./AddFilteredPatient\";\r\n//import Filtercomponent from '../../components/Filtercomponent';\r\n// import FilterDemo from \"./FilterDemo\";\r\n// import \"antd/dist/antd.css\";\r\n// import 'react-awesome-query-builder/css/styles.scss';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass PatientMaster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      masterStatus: \"\",\r\n      error: \"\",\r\n      selectedRecord: {},\r\n      operation: \"\",\r\n      selectedPatient: undefined,\r\n      screenName: undefined,\r\n      userRoleControlRights: [],\r\n      controlMap: new Map(),\r\n      isClearSearch: false,\r\n      dataState: { skip: 0, take: 5 },\r\n      tree: undefined,\r\n      config: undefined,\r\n      kendoSkip:0,\r\n      kendoTake:5,\r\n      fields: {\r\n        \"patientmaster.sfirstname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FIRSTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter First Name\"\r\n          }\r\n\r\n        },\r\n        \"patientmaster.slastname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_LASTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Last Name\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.spatientid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PATIENTID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Patient Id\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.snationalid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_NATIONALID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter National Id\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.sfathername\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FATHERGUARDIANNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Father Name\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.ddob\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_DATEOFBIRTH\",\r\n          }),\r\n          \"type\": \"date\",\r\n          \"valueSources\": [\"value\"]\r\n        },\r\n\r\n        \"patientmaster.sage\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_AGE\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Age\",\r\n            \"valuePlaceholder\": \"Enter the Age\"\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.ngendercode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_SEX\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": [\r\n              { \"value\": \"1\", \"title\": \"Male\" },\r\n              { \"value\": \"2\", \"title\": \"Female\" },\r\n              { \"value\": \"3\", \"title\": \"Others\" }\r\n            ]\r\n          }\r\n        },\r\n        \"patientmaster.saddress\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_ADDRESS\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": \"Enter Address\"\r\n\r\n          }\r\n        },\r\n        \"patientmaster.sphoneno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PHONENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": \"Enter Phoneno\"\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n    this.patientFieldList = [\r\n      \"sfirstname\",\r\n      \"slastname\",\r\n      \"sfathername\",\r\n      \"sage\",\r\n      \"ddob\",\r\n      \"sphoneno\",\r\n      \"saddress\",\r\n      \"snationalid\",\r\n    ];\r\n\r\n    this.searchFieldList = [\r\n      \"saddress\",\r\n      \"sage\",\r\n      \"sdob\",\r\n      \"sgendername\",\r\n      \"sfirstname\",\r\n      \"sfathername\",\r\n      \"slastname\",\r\n      \"spatientid\",\r\n      \"sphoneno\",\r\n    ];\r\n\r\n    this.columnList = [\r\n      { idsName: \"IDS_ARNO\", dataField: \"sarno\", width: \"150px\" },\r\n      { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", width: \"250px\" },\r\n      { idsName: \"IDS_SPECIFICATION\", dataField: \"sspecname\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\r\n        dataField: \"scolleciondate\",\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_RECEIVEDDATE\",\r\n        dataField: \"sreceiveddate\",\r\n        width: \"100px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n\r\n    this.childColumnList = [\r\n      { idsName: \"IDS_TESTNAME\", dataField: \"stestsynonym\", width: \"250px\" },\r\n      {\r\n        idsName: \"IDS_PARAMETERNAME\",\r\n        dataField: \"sparametersynonym\",\r\n        width: \"250px\",\r\n      },\r\n      { idsName: \"IDS_RESULT\", dataField: \"sresult\", width: \"150px\" },\r\n      { idsName: \"IDS_RESULTFLAG\", dataField: \"sgradename\", width: \"100px\" },\r\n      { idsName: \"IDS_RESULTDATE\", dataField: \"sentereddate\", width: \"100px\" },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n    this.slideList = [\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PATIENTID\" }), filed: \"spatientid\", width: \"250px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" }), filed: \"sfirstname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_LASTNAME\" }), filed: \"slastname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_NATIONALID\" }), filed: \"snationalid\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FATHERGUARDIANNAME\" }), filed: \"sfathername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DATEOFBIRTH\" }), filed: \"sdob\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_AGE\" }), filed: \"sage\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_SEX\" }), filed: \"sgendername\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_ADDRESS\" }), filed: \"saddress\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PHONENO\" }), filed: \"sphoneno\", width: \"150px\" },\r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.Login.masterStatus !== \"\" &&\r\n      props.Login.masterStatus !== state.masterStatus\r\n    ) {\r\n      toast.warn(props.Login.masterStatus);\r\n      props.Login.masterStatus = \"\";\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n  handleClick = () => {\r\n    let obj = { typeName: DEFAULT_RETURN, data: { openAdvFilter: true, openModal: true, slideResult: undefined } }\r\n    this.setState({ config: undefined, tree: undefined })\r\n    this.props.updateStore(obj);\r\n  }\r\n  dataStateChange = (event) => {\r\n    this.setState({ dataState: event.dataState })\r\n  }\r\n\r\n  handlePageChange = (event) => {\r\n    this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n};\r\n  render() {\r\n    const addId =\r\n      this.state.controlMap.has(\"AddPatient\") &&\r\n      this.state.controlMap.get(\"AddPatient\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditPatient\") &&\r\n      this.state.controlMap.get(\"EditPatient\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeletePatient\") &&\r\n      this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\r\n    const patientReportId =\r\n      this.state.controlMap.has(\"PatientReport\") &&\r\n      this.state.controlMap.get(\"PatientReport\").ncontrolcode;\r\n\r\n    const filterParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n\r\n    const addParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"create\",\r\n      primaryKeyName: \"npatientcode\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: addId,\r\n    };\r\n    const editParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"update\",\r\n      primaryKeyName: \"npatientcode\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: editId,\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n    };\r\n    const mandatoryFields = [\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FIRSTNAME\",\r\n        dataField: \"sfirstname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_LASTNAME\",\r\n        dataField: \"slastname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FATHERGUARDIANNAME\",\r\n        dataField: \"sfathername\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n\r\n        mandatory: true,\r\n        idsName: \"IDS_DATEOFBIRTH\",\r\n        dataField: \"ddob\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_AGE\",\r\n        dataField: \"sage\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_SEX\",\r\n        dataField: \"ngendercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_ADDRESS\",\r\n        dataField: \"saddress\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_PHONENO\",\r\n        dataField: \"sphoneno\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\">\r\n          <Row noGutters>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({\r\n                  id: \"IDS_PATIENTMASTER\",\r\n                })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.PatientList\r\n                }\r\n                getMasterDetail={(user) =>\r\n                  this.props.getPatientDetail(\r\n                    user,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.SelectedPatient}\r\n                primaryKeyField=\"npatientcode\"\r\n                mainField=\"spatientname\"\r\n                firstField=\"sfathername\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                openModal={() => this.props.getPatientComboService(addParam)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n                showMicIcon={true}\r\n                showAdvFilterIcon={true}\r\n                handleClick={this.handleClick}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <ContentPanel className=\"panel-main-content\">\r\n                <Card className=\"border-0\">\r\n                  {this.props.Login.masterData.PatientList &&\r\n                    this.props.Login.masterData.PatientList.length > 0 &&\r\n                    this.props.Login.masterData.SelectedPatient ? (\r\n                    <>\r\n                      <Card.Header>\r\n                        <ReactTooltip\r\n                          place=\"bottom\"\r\n                          globalEventOff=\"click\"\r\n                          id=\"tooltip_list_wrap\"\r\n                        />\r\n                        <Card.Title className=\"product-title-main\">\r\n                          {\r\n                            this.props.Login.masterData.SelectedPatient\r\n                              .spatientname\r\n                          }\r\n                        </Card.Title>\r\n                        <Card.Subtitle>\r\n                          <div className=\"d-flex product-category\">\r\n                            <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                            <div className=\"d-inline\">\r\n                              <Nav.Link\r\n                                name=\"editPatient\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    editId\r\n                                  ) === -1\r\n                                }\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_EDIT\",\r\n                                })}\r\n                                data-for=\"tooltip_list_wrap\"\r\n                                onClick={() =>\r\n                                  this.props.getPatientComboService(editParam)\r\n                                }\r\n                              >\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                name=\"deletePatient\"\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_DELETE\",\r\n                                })}\r\n                                data-for=\"tooltip_list_wrap\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    deleteId\r\n                                  ) === -1\r\n                                }\r\n                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                              >\r\n                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                name=\"patientReport\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    patientReportId\r\n                                  ) === -1\r\n                                }\r\n                                onClick={() =>\r\n                                  this.props.getPatientReport(\r\n                                    this.props.Login.masterData.SelectedPatient,\r\n                                    this.props.Login.userInfo,\r\n                                    patientReportId\r\n                                  )\r\n                                }\r\n                                data-for=\"tooltip_list_wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_PATIENTREPORT\",\r\n                                })}\r\n                              >\r\n                                <Reports\r\n                                  className=\"custom_icons\"\r\n                                  width=\"20\"\r\n                                  height=\"20\"\r\n                                />\r\n                              </Nav.Link>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Subtitle>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PATIENTID\"\r\n                                  message=\"Patient ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .spatientid\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_NATIONALID\"\r\n                                  message=\"National ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .snationalid\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DATEOFBIRTH\"\r\n                                  message=\"Date Of Birth\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient\r\n                                  .sdob === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdob\r\n                                    .length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .sdob}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_AGE\" message=\"Age\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient\r\n                                  .sage === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sage\r\n                                    .length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .sage}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_SEX\" message=\"Sex\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient\r\n                                  .sgendername === null ||\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .sgendername.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .sgendername}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FATHERGUARDIANNAME\"\r\n                                  message=\"Father/Guardian Name\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .sfathername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PHONENO\"\r\n                                  message=\"Phone No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .sphoneno\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={8}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_ADDRESS\"\r\n                                  message=\"Address\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient\r\n                                  .saddress === null ||\r\n                                  this.props.Login.masterData.SelectedPatient\r\n                                    .saddress.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient\r\n                                    .saddress}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <DataGrid\r\n                              userRoleControlRights={\r\n                                this.state.userRoleControlRights\r\n                              }\r\n                              controlMap={this.state.controlMap}\r\n                              primaryKeyField={\"npreregno\"}\r\n                              data={\r\n                                this.props.Login.masterData &&\r\n                                this.props.Login.masterData[\"PatientHistory\"]\r\n                              }\r\n                              dataResult={process(\r\n                                this.props.Login.masterData &&\r\n                                (this.props.Login.masterData[\r\n                                  \"PatientHistory\"\r\n                                ] ||\r\n                                  []),\r\n                                this.state.dataState\r\n                              )}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={this.columnList}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              methodUrl={this.props.Login.inputParam.methodUrl}\r\n                              pageable={true}\r\n                              scrollable={\"scrollable\"}\r\n                              isActionRequired={false}\r\n                              isToolBarRequired={false}\r\n                              selectedId={null}\r\n                              hideColumnFilter={false}\r\n                              expandField={\"expanded\"}\r\n                              handleExpandChange={this.handleExpandChange}\r\n                              hasChild={true}\r\n                              childColumnList={this.childColumnList}\r\n                              childMappingField={\"npreregno\"}\r\n                              childList={this.props.Login.testMap || new Map()}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card>\r\n              </ContentPanel>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        {this.props.Login.openModal ? (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openAdvFilter ? \"xl\" : \"lg\"}\r\n            operation={this.props.Login.openAdvFilter ? \"\" : this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.openAdvFilter ? this.onSaveGetClick : this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            showSubmit={this.props.Login.openAdvFilter ? true : false}\r\n            hideSave={this.props.Login.openAdvFilter ? true : false}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.props.Login.openAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\"}\r\n\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.openAdvFilter ? (\r\n                <FilterQueryBuilder\r\n                  //fields={Fields}\r\n                  fields={this.state.fields}\r\n                  skip={this.state.kendoSkip}\r\n                  take={this.state.kendoTake}\r\n                  onChange={this.onChange}\r\n                  tree={this.state.tree}\r\n                  config={this.state.config}\r\n                  gridColumns={this.slideList}\r\n                  filterData={this.props.Login.slideResult||[]}\r\n                  handlePageChange={this.handlePageChange}\r\n                  static={true}\r\n                // controlMap={this.state.controlMap}\r\n                // dataState={this.state.dataState}\r\n                // dataStateChange={this.dataStateChange}\r\n                />)\r\n                : (\r\n                  <AddPatient\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onComboChange={this.onComboChange}\r\n                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                    handleDateChange={this.handleDateChange}\r\n                    genderList={this.props.Login.genderList || []}\r\n                    selectedPatient={\r\n                      this.props.Login.masterData.SelectedPatient || {}\r\n                    }\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    currentTime={this.props.Login.currentTime}\r\n                  />\r\n                )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(previousProps) {\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      const userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      const controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ userRoleControlRights, controlMap });\r\n    }\r\n  }\r\n\r\n  ConfirmDelete = (deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.deletePatient(\r\n          \"Patient\",\r\n          this.props.Login.masterData.SelectedPatient,\r\n          \"delete\",\r\n          deleteId\r\n        )\r\n    );\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let openAdvFilter = this.props.Login.openAdvFilter;\r\n    let slideResult = this.props.Login.slideResult;\r\n    let tree = this.state.tree;\r\n\r\n\r\n    let config = this.state.config;\r\n\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n      }\r\n    } else {\r\n      openAdvFilter = false;\r\n      openModal = false;\r\n      selectedRecord = {};\r\n      slideResult = {};\r\n      config = undefined;\r\n      tree = undefined;\r\n      this.setState({ config: config, tree: tree })\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId: null, openAdvFilter, slideResult, config, tree },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = comboData;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n  // onFilterInputChange(immutableTree,){\r\n\r\n  //  let QbUtilss=JSON.stringify(QbUtils.sqlFormat(immutableTree, config));\r\n  //   console.log('QbUtils',QbUtilss)\r\n  // return QbUtilss\r\n\r\n  // };\r\n  onChange = (immutableTree, config) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n\r\n    // this.setState({ tree: immutableTree, config: config });\r\n    selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n    // const jsonTree = QbUtils.getTree(immutableTree);\r\n    // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\r\n\r\n    this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n  };\r\n  onInputOnChange = (event) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] =\r\n        event.target.checked === true\r\n          ? transactionStatus.YES\r\n          : transactionStatus.NO;\r\n    } else {\r\n      if (event.target.name === \"sphoneno\") {\r\n        if (event.target.value !== \"\") {\r\n          event.target.value = validatePhoneNumber(event.target.value);\r\n          selectedRecord[event.target.name] =\r\n            event.target.value !== \"\"\r\n              ? event.target.value\r\n              : selectedRecord[event.target.name];\r\n        } else {\r\n          selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n      } else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n      }\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    const age = ageCalculate(dateValue);\r\n    selectedRecord[\"sage\"] = age;\r\n\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveGetClick = () => {\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'];\r\n    this.searchRef.current.value = \"\";\r\n    let paramFlag = true;\r\n\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"ByPatient\",\r\n      inputData: inputData,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData }\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.getPatientDetailsByFilterQuery(inputParam, masterData);\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let patientData = [];\r\n    patientData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    let postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n    };\r\n\r\n    if (this.props.Login.operation === \"update\") {\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedPatient.npatientcode;\r\n      patientData[\"patient\"] = {\r\n        npatientcode: this.props.Login.masterData.SelectedPatient.npatientcode,\r\n        sfirstname: this.state.selectedRecord.sfirstname,\r\n        slastname: this.state.selectedRecord.slastname,\r\n        snationalid: this.state.selectedRecord.snationalid,\r\n        sage: this.state.selectedRecord.sage,\r\n        sphoneno: this.state.selectedRecord.sphoneno,\r\n        saddress: this.state.selectedRecord.saddress,\r\n        sfathername: this.state.selectedRecord.sfathername,\r\n        //    \"ddob\": formatInputDate(\r\n        //     this.state.selectedRecord[\"ddob\"],false)\r\n      };\r\n\r\n    } else {\r\n      patientData[\"patient\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      this.patientFieldList.map((item) => {\r\n        return (patientData[\"patient\"][item] = this.state.selectedRecord[item]);\r\n      });\r\n    }\r\n\r\n    patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\r\n      \"ngendercode\"\r\n    ]\r\n      ? this.state.selectedRecord[\"ngendercode\"].value\r\n      : transactionStatus.NA;\r\n\r\n    // if (patientData[\"patient\"][\"ddob\"] !== undefined\r\n    //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\r\n    //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\r\n\r\n    // }\r\n    if (this.state.selectedRecord[\"ddob\"]) {\r\n      patientData[\"patient\"][\"ddob\"] = formatInputDate(\r\n        this.state.selectedRecord[\"ddob\"],\r\n        false\r\n      );\r\n    }\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      inputData: patientData,\r\n      operation: this.props.Login.operation,\r\n      saveType,\r\n      formRef,\r\n      postParam,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"npatientcode\",\r\n      primaryKeyValue: selectedPatient.npatientcode,\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        patient: selectedPatient,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PATIENTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  };\r\n\r\n  handleExpandChange = (row, dataState) => {\r\n    const viewParam = {\r\n      userInfo: this.props.Login.userInfo,\r\n      primaryKeyField: \"npreregno\",\r\n      masterData: this.props.Login.masterData,\r\n    };\r\n\r\n    this.props.getTestParameter({\r\n      ...viewParam,\r\n      dataState,\r\n      primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\r\n      viewRow: row[\"dataItem\"],\r\n    });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    const inputParam = {\r\n      inputData: { userinfo: this.props.Login.userInfo },\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      displayName: \"IDS_PATIENTMASTER\",\r\n      userInfo: this.props.Login.userInfo,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    this.props.callService(inputParam);\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery\r\n})(injectIntl(PatientMaster));\r\n"]},"metadata":{},"sourceType":"module"}