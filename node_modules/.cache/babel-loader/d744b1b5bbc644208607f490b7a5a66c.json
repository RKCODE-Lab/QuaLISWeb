{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\InstrumentCalibrationTabAccordion.jsx\";\nimport React from 'react';\nimport { faCalendarMinus, faCalendarPlus, faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport InstrumentCalibrationFile from './InstrumentCalibrationFile';\nimport { rearrangeDateFormatDateOnly } from '../../components/CommonScript';\n\nconst InstrumentCalibrationTabAccordion = props => {\n  let dataFieldName = \"\";\n\n  if (props.instrumentCalibration[\"dopendate\"] === null && props.instrumentCalibration[\"dclosedate\"] === null) {\n    dataFieldName = dataFieldName = [{\n      \"sinstrumentid\": \"IDS_INSTRUMENTID\"\n    }, {\n      \"sinstrumentname\": \"IDS_INSTRUMENTNAME\"\n    }, {\n      \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\"\n    }, {\n      \"sduedate\": \"IDS_DUEDATE\"\n    }, {\n      \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\"\n    }];\n  } else if (props.instrumentCalibration[\"dclosedate\"] !== null) {\n    dataFieldName = [{\n      \"sinstrumentid\": \"IDS_INSTRUMENTID\"\n    }, {\n      \"sinstrumentname\": \"IDS_INSTRUMENTNAME\"\n    }, {\n      \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\"\n    }, {\n      \"sduedate\": \"IDS_DUEDATE\"\n    }, {\n      \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\"\n    }, {\n      \"sclosedate\": \"IDS_CLOSEDATE\"\n    }, {\n      \"scloseusername\": \"IDS_CLOSEUSERNAME\"\n    }, {\n      \"sclosereason\": \"IDS_CLOSEREASON\"\n    }];\n  } else if (props.instrumentCalibration[\"dopendate\"] !== null) {\n    dataFieldName = [{\n      \"sinstrumentid\": \"IDS_INSTRUMENTID\"\n    }, {\n      \"sinstrumentname\": \"IDS_INSTRUMENTNAME\"\n    }, {\n      \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\"\n    }, {\n      \"sduedate\": \"IDS_DUEDATE\"\n    }, {\n      \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\"\n    }, {\n      \"sopendate\": \"IDS_OPENDATE\"\n    }, {\n      \"sopenusername\": \"IDS_OPENUSERNAME\"\n    }, {\n      \"sopenreason\": \"IDS_OPENREASON\"\n    }];\n  } else if (props.instrumentCalibration[\"dopendate\"] !== null && props.instrumentCalibration[\"dclosedate\"] !== null) {\n    dataFieldName = [{\n      \"sinstrumentid\": \"IDS_INSTRUMENTID\"\n    }, {\n      \"sinstrumentname\": \"IDS_INSTRUMENTNAME\"\n    }, {\n      \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\"\n    }, {\n      \"sduedate\": \"IDS_DUEDATE\"\n    }, {\n      \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\"\n    }, {\n      \"sopendate\": \"IDS_OPENDATE\"\n    }, {\n      \"sopenreason\": \"IDS_OPENREASON\"\n    }, {\n      \"sclosedate\": \"IDS_CLOSEDATE\"\n    }, {\n      \"sclosereason\": \"IDS_CLOSEREASON\"\n    }, {\n      \"sopenusername\": \"IDS_OPENUSERNAME\"\n    }, {\n      \"scloseusername\": \"IDS_CLOSEUSERNAME\"\n    }];\n  }\n\n  const editInstrumentCalibrationId = props.controlMap.has(\"EditInstrumentCalibration\") && props.controlMap.get(\"EditInstrumentCalibration\").ncontrolcode;\n  const deleteInstrumentCalibrationId = props.controlMap.has(\"DeleteInstrumentCalibration\") && props.controlMap.get(\"DeleteInstrumentCalibration\").ncontrolcode;\n  const opendateId = props.controlMap.has(\"OpenDate\") && props.controlMap.get(\"OpenDate\").ncontrolcode;\n  const closedateId = props.controlMap.has(\"CloseDate\") && props.controlMap.get(\"CloseDate\").ncontrolcode;\n  const {\n    selectedInstrumentCalibration,\n    userInfo\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_EDIT\"\n    }) //data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(editInstrumentCalibrationId) === -1,\n    onClick: () => props.getDataForAddEditCalibration(\"IDS_INSTRUMENTCALIBRATION\", \"update\", props.userInfo, editInstrumentCalibrationId, props.selectedRecord, props.masterData, \"ninstrumentcalibrationcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPencilAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_OPENDATE\"\n    }) //data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(opendateId) === -1,\n    onClick: () => props.OpenDate(\"IDS_INSTRUMENTCALIBRATION\", props.userInfo, opendateId, props.selectedRecord, props.masterData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCalendarPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_CLOSEDATE\"\n    }) //data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(closedateId) === -1,\n    onClick: () => props.CloseDate(\"IDS_INSTRUMENTCALIBRATION\", props.userInfo, closedateId, props.selectedRecord, props.masterData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCalendarMinus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_DELETE\"\n    }) //data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(deleteInstrumentCalibrationId) === -1,\n    onClick: () => props.ConfirmDelete({\n      operation: 'delete',\n      screenName: 'IDS_INSTRUMENTCALIBRATION',\n      nFlag: 3\n    }, deleteInstrumentCalibrationId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, dataFieldName.map((item, i) => {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, props.intl.formatMessage({\n      id: Object.values(item)[0]\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, Object.keys(item)[0] === \"slastcalibrationdate\" || Object.keys(item)[0] === \"sduedate\" || Object.keys(item)[0] === \"sopendate\" || Object.keys(item)[0] === \"sclosedate\" ? rearrangeDateFormatDateOnly(props.userInfo, selectedInstrumentCalibration[Object.keys(item)[0]]) : selectedInstrumentCalibration[Object.keys(item)[0]])));\n  })), /*#__PURE__*/React.createElement(InstrumentCalibrationFile, {\n    selectedInstrumentCalibration: selectedInstrumentCalibration,\n    userInfo: userInfo,\n    userRoleControlRights: props.userRoleControlRights,\n    openModal: props.addFormula,\n    controlMap: props.controlMap,\n    addfilecllick: props.addfilecllick,\n    addInstrumentFile: props.addInstrumentFile,\n    FileData: props.FileData,\n    deleteTabFileRecord: props.deleteTabFileRecord,\n    viewInstrumentFile: props.viewInstrumentFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default injectIntl(InstrumentCalibrationTabAccordion);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/InstrumentCalibrationTabAccordion.jsx"],"names":["React","faCalendarMinus","faCalendarPlus","faPencilAlt","faTrashAlt","injectIntl","Row","Col","Nav","FormGroup","FormLabel","FontAwesomeIcon","ReadOnlyText","InstrumentCalibrationFile","rearrangeDateFormatDateOnly","InstrumentCalibrationTabAccordion","props","dataFieldName","instrumentCalibration","editInstrumentCalibrationId","controlMap","has","get","ncontrolcode","deleteInstrumentCalibrationId","opendateId","closedateId","selectedInstrumentCalibration","userInfo","intl","formatMessage","id","userRoleControlRights","indexOf","getDataForAddEditCalibration","selectedRecord","masterData","OpenDate","CloseDate","ConfirmDelete","operation","screenName","nFlag","map","item","i","Object","values","keys","addFormula","addfilecllick","addInstrumentFile","FileData","deleteTabFileRecord","viewInstrumentFile"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faCalendarMinus, faCalendarPlus, faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport InstrumentCalibrationFile from './InstrumentCalibrationFile';\r\nimport {rearrangeDateFormatDateOnly} from '../../components/CommonScript';\r\n\r\n\r\nconst InstrumentCalibrationTabAccordion = (props) => {\r\n    let dataFieldName = \"\";\r\n\r\n    if (props.instrumentCalibration[\"dopendate\"]===null&&props.instrumentCalibration[\"dclosedate\"]===null){\r\n        dataFieldName = dataFieldName = [{ \"sinstrumentid\": \"IDS_INSTRUMENTID\" }, {\"sinstrumentname\":\"IDS_INSTRUMENTNAME\"},\r\n        { \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\" }, { \"sduedate\": \"IDS_DUEDATE\" },\r\n        { \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\" }];\r\n        \r\n    }\r\n       else if (props.instrumentCalibration[\"dclosedate\"]!==null){\r\n                dataFieldName = [{ \"sinstrumentid\": \"IDS_INSTRUMENTID\" }, {\"sinstrumentname\":\"IDS_INSTRUMENTNAME\"},\r\n                { \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\" }, { \"sduedate\": \"IDS_DUEDATE\" },\r\n                { \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\" },\r\n                { \"sclosedate\": \"IDS_CLOSEDATE\" },\r\n                {\"scloseusername\":\"IDS_CLOSEUSERNAME\"},\r\n                {\"sclosereason\":\"IDS_CLOSEREASON\"}\r\n            ];\r\n       }  \r\n      \r\n       else if (props.instrumentCalibration[\"dopendate\"]!==null){\r\n        dataFieldName= [{ \"sinstrumentid\": \"IDS_INSTRUMENTID\" },{\"sinstrumentname\":\"IDS_INSTRUMENTNAME\"}, \r\n        { \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\" }, { \"sduedate\": \"IDS_DUEDATE\" },\r\n        { \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\" },\r\n        { \"sopendate\": \"IDS_OPENDATE\" }, \r\n        {\"sopenusername\":\"IDS_OPENUSERNAME\"},\r\n        { \"sopenreason\": \"IDS_OPENREASON\" }];\r\n     }\r\n     else if (props.instrumentCalibration[\"dopendate\"]!==null&&props.instrumentCalibration[\"dclosedate\"]!==null){\r\n        dataFieldName= [{ \"sinstrumentid\": \"IDS_INSTRUMENTID\" },{\"sinstrumentname\":\"IDS_INSTRUMENTNAME\"}, \r\n        { \"slastcalibrationdate\": \"IDS_LASTCALIBRATIONDATE\" }, { \"sduedate\": \"IDS_DUEDATE\" },\r\n        { \"stransdisplaystatus\": \"IDS_CALIBRATIONSTATUS\" },\r\n        { \"sopendate\": \"IDS_OPENDATE\" }, { \"sopenreason\": \"IDS_OPENREASON\" },\r\n        { \"sclosedate\": \"IDS_CLOSEDATE\" },{\"sclosereason\":\"IDS_CLOSEREASON\"},\r\n        {\"sopenusername\":\"IDS_OPENUSERNAME\"},\r\n        {\"scloseusername\":\"IDS_CLOSEUSERNAME\"}];\r\n     }\r\n\r\n    const editInstrumentCalibrationId = props.controlMap.has(\"EditInstrumentCalibration\") && props.controlMap.get(\"EditInstrumentCalibration\").ncontrolcode;\r\n    const deleteInstrumentCalibrationId = props.controlMap.has(\"DeleteInstrumentCalibration\") && props.controlMap.get(\"DeleteInstrumentCalibration\").ncontrolcode;\r\n    const opendateId = props.controlMap.has(\"OpenDate\") && props.controlMap.get(\"OpenDate\").ncontrolcode;\r\n    const closedateId = props.controlMap.has(\"CloseDate\") && props.controlMap.get(\"CloseDate\").ncontrolcode;\r\n\r\n\r\n    const {selectedInstrumentCalibration, userInfo } = props;\r\n    return (\r\n        <>\r\n            <Row>\r\n            <Col md={12} className=\"d-flex justify-content-end\">\r\n                  \r\n                  <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                      data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                      //data-for=\"tooltip_list_wrap\"\r\n                      hidden={props.userRoleControlRights.indexOf(editInstrumentCalibrationId) === -1}\r\n                      onClick={()=>props.getDataForAddEditCalibration(\"IDS_INSTRUMENTCALIBRATION\",\"update\", props.userInfo, editInstrumentCalibrationId,props.selectedRecord,props.masterData,\"ninstrumentcalibrationcode\")}>    \r\n                       <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_OPENDATE\" })}\r\n                        //data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(opendateId) === -1}\r\n\r\n                        onClick={() => props.OpenDate(\"IDS_INSTRUMENTCALIBRATION\", props.userInfo, opendateId,props.selectedRecord,props.masterData)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faCalendarPlus} />\r\n                       \r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_CLOSEDATE\" })}\r\n                        //data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(closedateId) === -1}\r\n                     onClick={() => props.CloseDate(\"IDS_INSTRUMENTCALIBRATION\", props.userInfo, closedateId,props.selectedRecord,props.masterData)}\r\n                     >\r\n                        <FontAwesomeIcon icon={faCalendarMinus} />\r\n                       \r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                        //data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(deleteInstrumentCalibrationId) === -1}\r\n                        onClick={() => props.ConfirmDelete({operation:'delete',screenName:'IDS_INSTRUMENTCALIBRATION',nFlag:3},deleteInstrumentCalibrationId)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                       \r\n                    </Nav.Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n              {dataFieldName.map((item,i) => {\r\n                    return (\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                <ReadOnlyText>{Object.keys(item)[0]===\"slastcalibrationdate\"||Object.keys(item)[0]===\"sduedate\"||Object.keys(item)[0]===\"sopendate\"||Object.keys(item)[0]===\"sclosedate\"?\r\n                                rearrangeDateFormatDateOnly(props.userInfo,\r\n                                    selectedInstrumentCalibration[Object.keys(item)[0]]) :\r\n                                    selectedInstrumentCalibration[Object.keys(item)[0]]\r\n                                 \r\n                                    }</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    )\r\n                })}  \r\n                  \r\n            \r\n            </Row>\r\n             <InstrumentCalibrationFile\r\n                        selectedInstrumentCalibration={selectedInstrumentCalibration}\r\n                        userInfo={userInfo}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        openModal={props.addFormula}\r\n                        controlMap={props.controlMap}\r\n                        addfilecllick={props.addfilecllick}\r\n                        addInstrumentFile={props.addInstrumentFile}\r\n                        FileData={props.FileData}\r\n                        deleteTabFileRecord={props.deleteTabFileRecord}\r\n                        viewInstrumentFile={props.viewInstrumentFile}\r\n\r\n                    /> \r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default injectIntl(InstrumentCalibrationTabAccordion);"]},"metadata":{},"sourceType":"module"}