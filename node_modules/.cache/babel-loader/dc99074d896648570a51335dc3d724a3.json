{"ast":null,"code":"import { intl } from '../../components/App';\nimport { convertDateTimetoStringDBFormat, formatInputDate } from '../../components/CommonScript';\nimport { SampleType, transactionStatus } from '../../components/Enumeration';\nexport function fnCheckBatchComponentMandatory(Components) {\n  // Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].nnoofcontainer && Components[i].nnoofcontainer.length <= 0) {\n      // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERNOOFCONTFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname; // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\n    }\n  }\n\n  return true;\n}\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\n  //Components.map(component => {\n  for (var i = 0; i < Components.length; i++) {\n    if (Components[i].smanuflotno.length <= 0) {\n      // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\n      //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } else if (Components[i].dreceiveddate === null) {\n      // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\n      return intl.formatMessage({\n        id: \"IDS_ENTERMANUFLOTNOFOR\"\n      }) + Components[i].scomponentname;\n    } //return null;\n    //});\n\n  }\n\n  return true;\n}\nexport function checkDuplicateComponentandManufLot(Components) {\n  let copiedArrays = [...Components];\n  let DuplicateComponent = [];\n  let bReturnFlag = true;\n  Components.map(component => {\n    copiedArrays.forEach(componentArray => {\n      component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno && component.scomponentname === componentArray.scomponentname && DuplicateComponent.push(component);\n    });\n    return null;\n  });\n\n  if (DuplicateComponent.length > 0) {\n    let smanuflotno = DuplicateComponent[0].smanuflotno;\n    let scomponentname = DuplicateComponent[0].scomponentname; // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\n\n    bReturnFlag = intl.formatMessage({\n      id: 'IDS_DUPLICATEMANFNO'\n    }) + \" \" + smanuflotno + \" \" + intl.formatMessage({\n      id: 'IDS_FOR'\n    }) + \" \" + scomponentname;\n  }\n\n  return bReturnFlag;\n}\nexport function TestListManipulation(Components, Test) {\n  //console.log(\"Test in component\");\n  let ArrayList = [];\n  Components.map(component => {\n    return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\n  }); //    ArrayList.map(item=>{\n  //        item['jsondata']={}\n  //       // if(item==='nsectioncode'||item==='nmethodcode'){\n  //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\n  //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\n  //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\n  //         item['jsondata']['ntestcode']=item['ntestcode']\n  //         item['jsondata']['ncost']=item['ncost']\n  //       // }\n  //    })\n\n  return ArrayList ? ArrayList : [];\n}\nexport function SubSample(Components, specBasedComponent, nneedsubsample, selectedSpec) {\n  //  let ArrayList = [];\n  if (nneedsubsample) {\n    if (specBasedComponent) {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"]; // }\n      });\n      return Components;\n    } else {\n      Components.map(component => {\n        // if(component===\"ncomponentcode\"){\n        return component[\"ncomponentcode\"] = -1; // }\n      });\n      return Components;\n    }\n  } else {\n    Components.map(component => {\n      // if(component===\"ncomponentcode\"){\n      component[\"ncomponentcode\"] = -1;\n      component[\"nspecsampletypecode\"] = selectedSpec.nallottedspeccode.item.nspecsampletypecode;\n      return component; // }\n    });\n    return Components;\n  }\n}\nexport function getRegistration(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n  } //console.log(\"save registration:\", selectedRecord);\n\n\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n              //  if(componentrow.recordbasedreadonly)\n              if (componentrow.inputtype === \"predefineddropdown\") {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label // pkey: componentrow.valuemember,\n                  // nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  // source: componentrow.source,\n                  // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\n                  // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\n                  // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :\n                  //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \n                  //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :  selectedRecord[componentrow.label].vale\n\n                } : -1;\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label,\n                  pkey: componentrow.valuemember,\n                  nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  source: componentrow.source,\n                  [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].vale\n                } : -1;\n              }\n\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n\n              if (componentrow.name === 'manualorderid') {\n                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n                if (operation === 'update') {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                } else {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                }\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n            if (component.inputtype === \"predefineddropdown\") {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label // pkey: component.valuemember,\n                // nquerybuildertablecode: component.nquerybuildertablecode,\n                // source: component.source,\n                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\n                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\n                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :\n                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \n                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :  selectedRecord[component.label].vale\n\n              } : -1;\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label,\n                pkey: component.valuemember,\n                nquerybuildertablecode: component.nquerybuildertablecode,\n                source: component.source,\n                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].vale\n              } : -1;\n            }\n\n            if (component.name === 'manualorderid') {\n              sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\n              sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n              if (operation === 'update') {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              } else {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\n                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spassportno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              }\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              console.log(typeof selectedRecord[component.label] === \"object\");\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function getRegistrationScheduler(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue ? masterData.RealSampleTypeValue.nsampletypecode : 1;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue ? masterData.RealRegTypeValue.nregtypecode : 1;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypecode : 1;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue ? masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode : masterData.ndesigntemplatemappingcode;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypeversioncode : masterData.nregsubtypeversioncode ? masterData.nregsubtypeversioncode : -1;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample.ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample.nallottedspeccode : selectedSpec.nallottedspeccode.value;\n\n  if (sampleRegistration[\"nsampletypecode\"] === 1) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 2) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === 3) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              //  if(componentrow.recordbasedreadonly)\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n} // export function getComponentListfromUnwantedAttr(Components) {\n//     Components.map(component => {\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\n//         //     component.ncomponentcode = component.ncomponentcode.value;\n//         // }\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\n//         return component;\n//     });\n//     return Components;\n// }\n\nexport function getRegistrationSubSample(selectedRecord, templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\n  let sampleRegistration = {};\n  let dateList = []; // let dataGridList={}\n  // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\n  // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          //  let componentrowlabel = ''\n          // let componentrowvalue = ''\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label,\n                //   pkey: operation && operation==='update'?\n                //         selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.pkey\n                //         :selectedRecord[componentrow.label].pkey\n                //         :selectedRecord[componentrow.label].item.pkey,\n                pkey: componentrow.valuemember,\n                nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                source: componentrow.source,\n                [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].vale // nquerybuildertablecode:operation&&operation==='update'?selectedRecord[componentrow.label].item ?selectedRecord[componentrow.label].item.nquerybuildertablecode :selectedRecord[componentrow.label].nquerybuildertablecode :selectedRecord[componentrow.label].item.nquerybuildertablecode,\n                // source:operation&&operation==='update'?selectedRecord[componentrow.label].item?selectedRecord[componentrow.label].item.source: selectedRecord[componentrow.label].source:selectedRecord[componentrow.label].item.source\n\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"; // if (componentrow.mandatory || selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\n              // }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n\n              if (componentrow.name === 'externalsampleid') {\n                sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label];\n                sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } // if (selectedRecord[componentrow.label]) {\n              //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n              //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\n              // }\n\n            }\n\n            return sampleRegistration;\n          }); //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label,\n              //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\n              //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\n              //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\n              pkey: component.valuemember,\n              nquerybuildertablecode: component.nquerybuildertablecode,\n              source: component.source,\n              [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].vale\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n\n            if (component.name === 'externalsampleid') {\n              sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label];\n              sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label];\n            }\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (preRegPopUp) {\n    sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\n\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n    }\n  } else {\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\n    }\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function checkTestPresent(Test, Samples) {\n  const filterArray = Samples.filter(function (x) {\n    return !Test.some(function (y) {\n      return x[\"npreregno\"] === y[\"npreregno\"] && y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED;\n    });\n  });\n  return filterArray.length > 0 ? false : true;\n} // //added by perumalraj on 23/12/2020\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n//     const filterArray = firstArray.filter(function (x) {\n//         return secondArray.some(function (y) {\n//             return x[PrimaryKey] === y[PrimaryKey]\n//         })\n//     });\n//     return filterArray;\n// }\n\nexport function getRegistrationRoutine(selectedRecord) {\n  let sampleRegistrationRoutine = {};\n  sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\n  sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\n  sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\n  sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\n  sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\n  sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\n  sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\n  sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\n  sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\n  sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\n  sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\n  sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\n  sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\n  sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\n  sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\n  sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\n  sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\n  sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\n  sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\n  sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\n  sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\n  return sampleRegistrationRoutine;\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/RegistrationValidation.jsx"],"names":["intl","convertDateTimetoStringDBFormat","formatInputDate","SampleType","transactionStatus","fnCheckBatchComponentMandatory","Components","i","length","smanuflotno","formatMessage","id","scomponentname","nnoofcontainer","dreceiveddate","fnCheckBatchProtocolComponentMandatory","checkDuplicateComponentandManufLot","copiedArrays","DuplicateComponent","bReturnFlag","map","component","forEach","componentArray","slno","push","TestListManipulation","Test","ArrayList","SubSample","specBasedComponent","nneedsubsample","selectedSpec","nallottedspeccode","item","nspecsampletypecode","getRegistration","masterData","selectedRecord","templateList","userInfo","defaulttimezone","operation","comboComponents","sampleRegistration","dateList","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","RealDesignTemplateMappingValue","ndesigntemplatemappingcode","nregsubtypeversioncode","selectedSample","ntemplatemanipulationcode","value","PRODUCT","findIndex","x","name","INSTRUMENT","MATERIAL","CLINICALTYPE","undefined","PROJECTSAMPLETYPE","row","children","column","hasOwnProperty","componentrow","inputtype","label","pkey","valuemember","nquerybuildertablecode","source","table","jsondata","vale","mandatory","Date","loadcurrentdate","timezone","console","log","param","getRegistrationScheduler","getRegistrationSubSample","preRegPopUp","checkTestPresent","Samples","filterArray","filter","some","y","REJECT","CANCELLED","getRegistrationRoutine","sampleRegistrationRoutine","nclientcode","nmanufcode","nsuppliercode","ssamplecondition","nstorageconditioncode","ntzdreceivedate","stzdreceivedate","ncontainertypecode","sourfile","sbatchno","slotno","ndisposition","stotalqty","ntotalunitcode","npriority","sdeadline","nperiodconfigcode","sremarks","sreportremarks","sdeviationcomments"],"mappings":"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","sourcesContent":["\r\nimport { intl } from '../../components/App';\r\nimport { convertDateTimetoStringDBFormat, formatInputDate } from '../../components/CommonScript';\r\nimport { SampleType, transactionStatus } from '../../components/Enumeration';\r\nexport function fnCheckBatchComponentMandatory(Components) {\r\n    // Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((\r\n            Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n\r\n        } else if (Components[i].nnoofcontainer && (Components[i].nnoofcontainer).length <= 0) {\r\n            // alert('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERNOOFCONTFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERNOOFCONTFOR' + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n            // return ('IDS_ENTERMANUFLOTNOFOR' + Components[i].scomponentname);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function fnCheckBatchProtocolComponentMandatory(Components) {\r\n    //Components.map(component => {\r\n    for (var i = 0; i < Components.length; i++) {\r\n        if ((Components[i].smanuflotno).length <= 0) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR ' + {} + component.scomponentname);\r\n            //return (intl.formatMessage({ id: 'IDS_ENTERMANUFLOTNOFOR ' }) + {} + Components[i].scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        } else if (Components[i].dreceiveddate === null) {\r\n            // alert('IDS_ENTERMANUFLOTNOFOR' + component.scomponentname);\r\n            return (intl.formatMessage({ id: \"IDS_ENTERMANUFLOTNOFOR\" }) + Components[i].scomponentname);\r\n        }\r\n        //return null;\r\n        //});\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkDuplicateComponentandManufLot(Components) {\r\n    let copiedArrays = [...Components];\r\n    let DuplicateComponent = [];\r\n    let bReturnFlag = true;\r\n    Components.map(component => {\r\n        copiedArrays.forEach(componentArray => {\r\n            (component.slno !== componentArray.slno && component.smanuflotno === componentArray.smanuflotno &&\r\n                component.scomponentname === componentArray.scomponentname) && DuplicateComponent.push(component);\r\n        })\r\n        return null;\r\n    });\r\n    if (DuplicateComponent.length > 0) {\r\n        let smanuflotno = DuplicateComponent[0].smanuflotno;\r\n        let scomponentname = DuplicateComponent[0].scomponentname;\r\n        // Alert.show(resourceManager.getString('LocalizedStrings', 'IDS_DUPLICATEMANFNO') + \" \" + smanuflotno + \" for \" + scomponentname, resourceManager.getString('LocalizedStrings', 'IDS_WARNING'));\r\n        bReturnFlag = intl.formatMessage({ id: 'IDS_DUPLICATEMANFNO' }) + \" \" + smanuflotno + \" \" + intl.formatMessage({ id: 'IDS_FOR' }) + \" \" + scomponentname;\r\n    }\r\n    return bReturnFlag;\r\n}\r\nexport function TestListManipulation(Components, Test) {\r\n    //console.log(\"Test in component\");\r\n    let ArrayList = [];\r\n    Components.map(component => {\r\n        return ArrayList = Test && Test[component.slno] ? [...ArrayList, ...Test[component.slno]] : ArrayList;\r\n    });\r\n\r\n    //    ArrayList.map(item=>{\r\n    //        item['jsondata']={}\r\n    //       // if(item==='nsectioncode'||item==='nmethodcode'){\r\n    //         item['jsondata']['nsectioncode']={value:item['nsectioncode'],label:item['ssectionname']}\r\n    //         item['jsondata']['nmethodcode']={value:item['nmethodcode'],label:item['smethodname']}\r\n    //         item['jsondata']['ninstrumentcatcode']={value:item['ninstrumentcatcode'],label:item['sinstrumentcatname']}\r\n    //         item['jsondata']['ntestcode']=item['ntestcode']\r\n    //         item['jsondata']['ncost']=item['ncost']\r\n    //       // }\r\n    //    })\r\n    return ArrayList ? ArrayList : [];\r\n}\r\n\r\nexport function SubSample(Components, specBasedComponent, nneedsubsample, selectedSpec) {\r\n    //  let ArrayList = [];\r\n    if (nneedsubsample) {\r\n        if (specBasedComponent) {\r\n            Components.map(component => {\r\n                // if(component===\"ncomponentcode\"){\r\n                return component[\"ncomponentcode\"]\r\n                // }\r\n            });\r\n            return Components;\r\n        } else {\r\n            Components.map(component => {\r\n                // if(component===\"ncomponentcode\"){\r\n                return component[\"ncomponentcode\"] = -1;\r\n                // }\r\n            });\r\n            return Components;\r\n        }\r\n    } else {\r\n        Components.map(component => {\r\n            // if(component===\"ncomponentcode\"){\r\n            component[\"ncomponentcode\"] = -1\r\n            component[\"nspecsampletypecode\"] = selectedSpec.nallottedspeccode.item.nspecsampletypecode\r\n            return component;\r\n            // }\r\n        });\r\n        return Components;\r\n    }\r\n}\r\n\r\nexport function getRegistration(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\r\n\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n\r\n    }\r\n    //console.log(\"save registration:\", selectedRecord);\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\"||componentrow.inputtype === \"predefineddropdown\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            if(componentrow.inputtype === \"predefineddropdown\"){\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                {\r\n                                    value: selectedRecord[componentrow.label].value,\r\n                                    label: selectedRecord[componentrow.label].label\r\n                                    // pkey: componentrow.valuemember,\r\n                                    // nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                    // source: componentrow.source,\r\n                                    // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                    // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                    // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                    //     :\r\n                                    //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                    //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                    //     :  selectedRecord[componentrow.label].vale\r\n                                  \r\n                                } : -1\r\n                            }else{\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                {\r\n                                    value: selectedRecord[componentrow.label].value,\r\n                                    label: selectedRecord[componentrow.label].label,\r\n                                    pkey: componentrow.valuemember,\r\n                                    nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                    source: componentrow.source,\r\n                                    [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                    selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :\r\n                                        selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                        selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :  selectedRecord[componentrow.label].vale\r\n                                  \r\n                                } : -1\r\n                            }\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n                            if (componentrow.name === 'manualorderid') {\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                    sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\r\n                          \r\n                                        sampleRegistration[\"jsonuidata\"]['spatientid']   = sampleRegistration[\"jsondata\"]['spatientid'] ;\r\n                                        if(operation === 'update')\r\n                                        {\r\n                                            sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ?selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] =  sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n        \r\n        \r\n                                            sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ?  selectedRecord[\"Patient Current Address\"] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Current Address'] =  sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n                \r\n                                            sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['External Id'] =  sampleRegistration[\"jsondata\"]['External Id'];           \r\n                                            \r\n                                            sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Passport No'] =  sampleRegistration[\"jsondata\"]['Patient Passport No'];        \r\n                                \r\n                                            sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Phone No'] =  sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n                \r\n                                            sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Institution Code'] =  sampleRegistration[\"jsondata\"]['Institution Code'];\r\n        \r\n                                            sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['District/City'] =  sampleRegistration[\"jsondata\"]['District/City'];                               \r\n                                                        \r\n                                            sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ?selectedRecord[\"Submitter Phone No\"] : \"\";                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] =  sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                        }          \r\n                                        else{                     \r\n                                    \r\n                                            sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\"\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] =  sampleRegistration[\"jsondata\"]['Patient Permanent Address'];        \r\n        \r\n                                            sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Current Address'] =  sampleRegistration[\"jsondata\"]['Patient Current Address'];        \r\n        \r\n                                            sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['External Id'] =  sampleRegistration[\"jsondata\"]['External Id'];      \r\n        \r\n                                            \r\n                                            sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Passport No'] =  sampleRegistration[\"jsondata\"]['Patient Passport No'];        \r\n                                \r\n                                            sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Patient Phone No'] =  sampleRegistration[\"jsondata\"]['Patient Phone No'];        \r\n        \r\n                                            sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Institution Code'] =  sampleRegistration[\"jsondata\"]['Institution Code'];\r\n        \r\n                                            sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['District/City'] =  sampleRegistration[\"jsondata\"]['District/City'];                           \r\n                            \r\n                                            sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\r\n                                            \r\n                                            sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] =  sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                        }\r\n                                    }\r\n\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label]\r\n                                                : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\"||component.inputtype === \"predefineddropdown\") {\r\n                        if(component.inputtype === \"predefineddropdown\"){\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            {\r\n                                value: selectedRecord[component.label].value,\r\n                                label: selectedRecord[component.label].label,\r\n                                // pkey: component.valuemember,\r\n                                // nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                // source: component.source,\r\n                                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                //         :\r\n                                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                //         :  selectedRecord[component.label].vale\r\n             \r\n                            } : -1\r\n                     \r\n                        }else{\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            {\r\n                                value: selectedRecord[component.label].value,\r\n                                label: selectedRecord[component.label].label,\r\n                                pkey: component.valuemember,\r\n                                nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                source: component.source,\r\n                                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                    selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        :\r\n                                        selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                        selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        :  selectedRecord[component.label].vale\r\n             \r\n                            } : -1\r\n                        }\r\n                        if (component.name === 'manualorderid') {\r\n                            sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['spatientid']   = sampleRegistration[\"jsondata\"]['spatientid'] ;\r\n\r\n                                    if(operation === 'update')\r\n                                    {\r\n                                        sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ?selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] =  sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n    \r\n    \r\n                                        sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ?  selectedRecord[\"Patient Current Address\"] : \"\";\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Current Address'] =  sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n            \r\n                                        sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['External Id'] =  sampleRegistration[\"jsondata\"]['External Id'];           \r\n                                        \r\n                                        sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";                                            \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Passport No'] =  sampleRegistration[\"jsondata\"]['Patient Passport No'];        \r\n                            \r\n                                        sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";                                            \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Phone No'] =  sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n            \r\n                                        sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";                                            \r\n                                        sampleRegistration[\"jsonuidata\"]['Institution Code'] =  sampleRegistration[\"jsondata\"]['Institution Code'];\r\n    \r\n                                        sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";                                            \r\n                                        sampleRegistration[\"jsonuidata\"]['District/City'] =  sampleRegistration[\"jsondata\"]['District/City'];                               \r\n                                                    \r\n                                        sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ?selectedRecord[\"Submitter Phone No\"] : \"\";                                            \r\n                                        sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] =  sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                    }          \r\n                                    else{       \r\n\r\n                                        sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] =  sampleRegistration[\"jsondata\"]['Patient Permanent Address']\r\n\r\n\r\n                                        sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Current Address'] =  sampleRegistration[\"jsondata\"]['Patient Current Address']\r\n\r\n\r\n                                        sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\r\n                                    \r\n                                        sampleRegistration[\"jsonuidata\"]['External Id'] =  sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                        sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\r\n                                    \r\n                                        sampleRegistration[\"jsonuidata\"]['OrderIdData'] =  sampleRegistration[\"jsondata\"]['OrderIdData'];\r\n\r\n\r\n                                        sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\r\n                                    \r\n                                        sampleRegistration[\"jsonuidata\"]['OrderCodeData'] =  sampleRegistration[\"jsondata\"]['OrderCodeData'];\r\n\r\n                                        \r\n                                        sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['spassportno'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Passport No'] =  sampleRegistration[\"jsondata\"]['Patient Passport No']\r\n\r\n                            \r\n                                        sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Patient Phone No'] =  sampleRegistration[\"jsondata\"]['Patient Phone No']\r\n\r\n\r\n                                        sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Institution Code'] =  sampleRegistration[\"jsondata\"]['Institution Code']\r\n\r\n                                        sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['District/City'] =  sampleRegistration[\"jsondata\"]['District/City'];                \r\n                        \r\n                        \r\n                                        sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\"\r\n                                        \r\n                                        sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] =  sampleRegistration[\"jsondata\"]['Submitter Phone No']\r\n                                \r\n                                    }\r\n                                }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            console.log(typeof selectedRecord[component.label] === \"object\")\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                    selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n\r\nexport function getRegistrationScheduler(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue ? masterData.RealSampleTypeValue.nsampletypecode : 1;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue ? masterData.RealRegTypeValue.nregtypecode : 1;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue ? masterData.RealRegSubTypeValue.nregsubtypecode : 1;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue ?\r\n        masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode : masterData.ndesigntemplatemappingcode;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue ?\r\n        masterData.RealRegSubTypeValue.nregsubtypeversioncode : masterData.nregsubtypeversioncode ? masterData.nregsubtypeversioncode : -1;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample.ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample.nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n\r\n\r\n    if (sampleRegistration[\"nsampletypecode\"] === 1) {\r\n\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === 2) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === 3) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n\r\n\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                { value: selectedRecord[componentrow.label].value, label: selectedRecord[componentrow.label].label } : -1\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) : selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            { value: selectedRecord[component.label].value, label: selectedRecord[component.label].label } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n// export function getComponentListfromUnwantedAttr(Components) {\r\n//     Components.map(component => {\r\n//         // if (component.ncomponentcode !== null && typeof component.ncomponentcode === \"object\") {\r\n//         //     component.ncomponentcode = component.ncomponentcode.value;\r\n//         // }\r\n\r\n//         // component['jsondata']['ssubsamplename'] = component['ssubsamplename'] ? component['ssubsamplename'] : \"\"\r\n//         // component['jsondata']['ssampleqty'] = component['ssampleqty'] ? component['ssampleqty'] : \"\"\r\n//         // component['jsondata']['nunitcode'] = { value: component.nunitcode, label: component.sunitname };\r\n//         // component['jsondata']['scomments'] = component['scomments'] ? component['scomments'] : \"\"\r\n\r\n\r\n//         return component;\r\n//     });\r\n//     return Components;\r\n// }\r\n\r\n\r\nexport function getRegistrationSubSample(selectedRecord,\r\n    templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    // let dataGridList={}\r\n    // sampleRegistration[\"ntemplatemanipulationcode\"] = selectedSpec.ntemplatemanipulationcode;\r\n    // sampleRegistration[\"nallottedspeccode\"] = selectedSpec.nallottedspeccode.value;\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    //  let componentrowlabel = ''\r\n                    // let componentrowvalue = ''\r\n                    return component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                {\r\n                                    value: selectedRecord[componentrow.label].value,\r\n                                    label: selectedRecord[componentrow.label].label,\r\n                                    //   pkey: operation && operation==='update'?\r\n                                    //         selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.pkey\r\n                                    //         :selectedRecord[componentrow.label].pkey\r\n                                    //         :selectedRecord[componentrow.label].item.pkey,\r\n                                    pkey: componentrow.valuemember,\r\n                                    nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                    source: componentrow.source,\r\n                                    [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                    selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :\r\n                                        selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                        selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :  selectedRecord[componentrow.label].vale\r\n                                    // nquerybuildertablecode:operation&&operation==='update'?selectedRecord[componentrow.label].item ?selectedRecord[componentrow.label].item.nquerybuildertablecode :selectedRecord[componentrow.label].nquerybuildertablecode :selectedRecord[componentrow.label].item.nquerybuildertablecode,\r\n                                    // source:operation&&operation==='update'?selectedRecord[componentrow.label].item?selectedRecord[componentrow.label].item.source: selectedRecord[componentrow.label].source:selectedRecord[componentrow.label].item.source\r\n                                } : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n                            // if (componentrow.mandatory || selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label].label\r\n                            // }\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                         \r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            if(componentrow.name==='externalsampleid'){\r\n                                sampleRegistration[\"jsondata\"]['sampleorderid']= sampleRegistration[\"jsondata\"][componentrow.label]\r\n                                sampleRegistration[\"jsonuidata\"]['sampleorderid']=sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            // if (selectedRecord[componentrow.label]) {\r\n                            //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n                            //     componentrowvalue = componentrowvalue + ' ' + selectedRecord[componentrow.label]\r\n                            // }\r\n                        }\r\n                        return sampleRegistration;\r\n                    })\r\n\r\n                    //  sampleRegistration[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            {\r\n                                value: selectedRecord[component.label].value,\r\n                                label: selectedRecord[component.label].label,\r\n                                //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\r\n                                //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\r\n                                //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\r\n                                pkey: component.valuemember,\r\n                                nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                source: component.source,\r\n                                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    :\r\n                                    selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                    selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    :  selectedRecord[component.label].vale\r\n                            } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        if(component.name==='externalsampleid'){\r\n                            sampleRegistration[\"jsondata\"]['sampleorderid']= sampleRegistration[\"jsondata\"][component.label]\r\n                            sampleRegistration[\"jsonuidata\"]['sampleorderid']=sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    if (preRegPopUp) {\r\n        sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n        }\r\n    } else {\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\r\n        }\r\n    }\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\nexport function checkTestPresent(Test, Samples) {\r\n\r\n    const filterArray = Samples.filter(function (x) {\r\n        return !Test.some(function (y) {\r\n            return x[\"npreregno\"] === y[\"npreregno\"] && (y[\"ntransactionstatus\"] !== transactionStatus.REJECT && y[\"ntransactionstatus\"] !== transactionStatus.CANCELLED)\r\n        });\r\n    });\r\n    return filterArray.length > 0 ? false : true\r\n}\r\n\r\n// //added by perumalraj on 23/12/2020\r\n// //compare two arrays of object and filter the record which are not present in the second array and vice versa\r\n// export function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n\r\n//     const filterArray = firstArray.filter(function (x) {\r\n//         return secondArray.some(function (y) {\r\n//             return x[PrimaryKey] === y[PrimaryKey]\r\n//         })\r\n//     });\r\n//     return filterArray;\r\n// }\r\n\r\nexport function getRegistrationRoutine(selectedRecord) {\r\n\r\n    let sampleRegistrationRoutine = {};\r\n    sampleRegistrationRoutine[\"nclientcode\"] = selectedRecord.nclientcode ? selectedRecord.nclientcode.value : -1;\r\n    sampleRegistrationRoutine[\"nmanufcode\"] = selectedRecord.nmanufcode ? selectedRecord.nmanufcode.value : -1;\r\n    sampleRegistrationRoutine[\"nsuppliercode\"] = selectedRecord.nsuppliercode ? selectedRecord.nsuppliercode.value : -1;\r\n    sampleRegistrationRoutine[\"ssamplecondition\"] = selectedRecord.ssamplecondition ? selectedRecord.ssamplecondition : '';\r\n    sampleRegistrationRoutine[\"nstorageconditioncode\"] = selectedRecord.nstorageconditioncode ? selectedRecord.nstorageconditioncode.value : -1;\r\n    sampleRegistrationRoutine[\"dreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"sreceiveddate\"] = selectedRecord[\"dreceiveddate\"] ? formatInputDate(selectedRecord[\"dreceiveddate\"], false) : 'null';\r\n    sampleRegistrationRoutine[\"ntzdreceivedate\"] = selectedRecord.ntzdreceivedate ? selectedRecord.ntzdreceivedate.value : -1;\r\n    sampleRegistrationRoutine[\"stzdreceivedate\"] = selectedRecord.stzdreceivedate ? selectedRecord.stzdreceivedate.label : -1;\r\n    sampleRegistrationRoutine[\"ncontainertypecode\"] = selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : -1;\r\n    sampleRegistrationRoutine[\"sourfile\"] = selectedRecord.sourfile ? selectedRecord.sourfile : '';\r\n    sampleRegistrationRoutine[\"sbatchno\"] = selectedRecord.sbatchno ? selectedRecord.sbatchno : '';\r\n    sampleRegistrationRoutine[\"slotno\"] = selectedRecord.slotno ? selectedRecord.slotno : '';\r\n    sampleRegistrationRoutine[\"ndisposition\"] = selectedRecord.ndisposition ? selectedRecord.ndisposition.value : -1;\r\n    sampleRegistrationRoutine[\"stotalqty\"] = selectedRecord.stotalqty ? selectedRecord.stotalqty : '0';\r\n    sampleRegistrationRoutine[\"ntotalunitcode\"] = selectedRecord.ntotalunitcode ? selectedRecord.ntotalunitcode.value : -1;\r\n    sampleRegistrationRoutine[\"npriority\"] = selectedRecord.npriority ? selectedRecord.npriority.value : -1;\r\n    sampleRegistrationRoutine[\"sdeadline\"] = selectedRecord.sdeadline ? selectedRecord.sdeadline : '0';\r\n    sampleRegistrationRoutine[\"nperiodconfigcode\"] = selectedRecord.nperiodconfigcode ? selectedRecord.nperiodconfigcode.value : -1;\r\n    sampleRegistrationRoutine[\"sremarks\"] = selectedRecord.sremarks ? selectedRecord.sremarks : null;\r\n    sampleRegistrationRoutine[\"sreportremarks\"] = selectedRecord.sreportremarks ? selectedRecord.sreportremarks : null;\r\n    sampleRegistrationRoutine[\"sdeviationcomments\"] = selectedRecord.sdeviationcomments ? selectedRecord.sdeviationcomments : null;\r\n\r\n    return sampleRegistrationRoutine;\r\n}"]},"metadata":{},"sourceType":"module"}