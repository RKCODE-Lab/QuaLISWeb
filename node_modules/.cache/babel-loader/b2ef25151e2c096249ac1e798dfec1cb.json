{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export function getSaveInputData(id,operation,Login,availableQBCategory,selectedRecord,selectedVersion,formRef,searchRef,dataState){var inputData=[];var postParam={selectedObject:\"selectedchecklist\",primaryKeyField:\"nchecklistcode\"};inputData[\"userinfo\"]=Login.userInfo;var selectedId=null;if(operation===\"update\"){// edit\nif(id==='checklist'){postParam={inputListName:\"checklist\",selectedObject:\"selectedchecklist\",primaryKeyField:\"nchecklistcode\",primaryKeyValue:Login.masterData.selectedchecklist.nchecklistcode,fetchUrl:\"checklist/getChecklistVersion\",fecthInputObject:{userinfo:Login.userInfo}};inputData[\"checklist\"]={\"nchecklistcode\":selectedRecord.nchecklistcode,\"schecklistname\":selectedRecord.schecklistname,\"sdescription\":selectedRecord.sdescription?selectedRecord.sdescription:\"\",\"nsitecode\":Login.userInfo.nmastersitecode};}else{selectedId=selectedRecord.nchecklistversionqbcode;inputData[\"checklistversionqb\"]={nchecklistversionqbcode:selectedRecord.nchecklistversionqbcode,nchecklistqbcategorycode:selectedRecord.nchecklistqbcategorycode,nchecklistversioncode:selectedVersion.nchecklistversioncode,nmandatoryfield:selectedRecord.nmandatoryfield,nchecklistqbcode:selectedRecord.nchecklistqbcode};}}else{if(id==='checklist'){postParam={inputListName:\"checklist\",selectedObject:\"selectedchecklist\",primaryKeyField:\"nchecklistcode\"};inputData[\"checklist\"]={\"schecklistname\":selectedRecord.schecklistname,\"sdescription\":selectedRecord.sdescription?selectedRecord.sdescription:\"\",\"nsitecode\":Login.userInfo.nmastersitecode};}else{dataState=undefined;var checklistversionqb=[];if(selectedRecord){availableQBCategory.map(function(checklistQBCat){return selectedRecord[checklistQBCat.label]?selectedRecord[checklistQBCat.label].map(function(checklistQB){return checklistversionqb.push({nchecklistqbcategorycode:checklistQBCat.value,nchecklistversioncode:selectedVersion.nchecklistversioncode,nchecklistqbcode:checklistQB.value,nmandatoryfield:checklistQB.item.nmandatory});}):\"\";});}inputData[\"checklistversionqb\"]=checklistversionqb;}}var inputParam={methodUrl:id==='checklist'?\"Checklist\":\"ChecklistVersionQB\",classUrl:Login.inputParam.classUrl,inputData:inputData,operation:operation,postParam:postParam,formRef:formRef,searchRef:searchRef,dataState:dataState,selectedId:selectedId,displayName:id==='checklist'?Login.inputParam.displayName:\"IDS_CHECKLISTVERSIONQB\"};return inputParam;}export function versionCreate(selectedRecord,selectedChecklist,Login){var inputData=[];var postParam={selectedObject:\"selectedchecklist\",primaryKeyField:\"nchecklistcode\"};inputData[\"userinfo\"]=Login.userInfo;//add               \ninputData[\"checklistversion\"]={\"nchecklistversioncode\":selectedRecord.nchecklistversioncode?selectedRecord.nchecklistversioncode:0,\"nchecklistcode\":selectedChecklist.nchecklistcode,\"schecklistversionname\":selectedRecord.schecklistversionname};var inputParam={methodUrl:\"ChecklistVersion\",classUrl:Login.inputParam.classUrl,inputData:inputData,postParam:postParam,operation:Login.operation};return inputParam;}export function templateChangeHandler(flag,selectedStateRecord,event,control){if(flag===1){//for Input Change Handle\nvar selectedRecord=selectedStateRecord||{};//let lstQB=[] ;\nvar lsteditedQB=selectedRecord[\"editedQB\"]||[];var temp=selectedRecord[control.nchecklistversionqbcode]?-1:lsteditedQB.push(control.nchecklistversionqbcode);if(event.target.type==='checkbox'){//for Check box\nvar checkedValues=[];checkedValues=selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]?selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]:control.sdefaultvalue?control.sdefaultvalue.split(\",\"):[];if(event.currentTarget.checked){checkedValues.push(event.target.id);selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]=checkedValues;selectedRecord[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:checkedValues.toString(),jsondata:{nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:checkedValues.toString()}};selectedRecord['jsondata']=_objectSpread(_objectSpread({},selectedRecord['jsondata']),{},_defineProperty({},control.nchecklistversionqbcode,checkedValues.toString()));selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"];}else{checkedValues.splice(checkedValues.indexOf(event.target.id),1);selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]=checkedValues;selectedRecord[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:checkedValues.toString(),jsondata:{nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:checkedValues.toString()}};selectedRecord['jsondata']=_objectSpread(_objectSpread({},selectedRecord['jsondata']),{},_defineProperty({},control.nchecklistversionqbcode,checkedValues.toString()));selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"];}}else if(event.target.type==='radio'){//For Radio\nselectedRecord[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:event.target.id,jsondata:{nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:event.target.id}};selectedRecord['jsondata']=_objectSpread(_objectSpread({},selectedRecord['jsondata']),{},_defineProperty({},control.nchecklistversionqbcode,event.target.id));selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"];}else{//for other inputs\nselectedRecord[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:event.target.value,jsondata:{nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:event.target.value}};selectedRecord['jsondata']=_objectSpread(_objectSpread({},selectedRecord['jsondata']),{},_defineProperty({},control.nchecklistversionqbcode,event.target.value));selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"];}return selectedRecord;}else if(flag===3){var _selectedRecord=selectedStateRecord||{};var _lsteditedQB=_selectedRecord[\"editedQB\"]||[];var _temp=_selectedRecord[control.nchecklistversionqbcode]?-1:_lsteditedQB.push(control.nchecklistversionqbcode);_selectedRecord[\"editedQB\"]=_temp!==-1?_lsteditedQB:_selectedRecord[\"editedQB\"];_selectedRecord[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:event};return _selectedRecord;}else{//for combo change handle\nvar _selectedRecord2=selectedStateRecord||{};var _lsteditedQB2=_selectedRecord2[\"editedQB\"]||[];var _temp2=_selectedRecord2[control.nchecklistversionqbcode]?-1:_lsteditedQB2.push(control.nchecklistversionqbcode);_selectedRecord2[\"editedQB\"]=_temp2!==-1?_lsteditedQB2:_selectedRecord2[\"editedQB\"];if(event){//if combo has value\n_selectedRecord2[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:event.label};}else{//if combo does not have\n_selectedRecord2[control.nchecklistversionqbcode]={nchecklistversioncode:control.nchecklistversioncode,nchecklistversionqbcode:control.nchecklistversionqbcode,nchecklistqbcode:control.nchecklistqbcode,sdefaultvalue:\"\"};}return _selectedRecord2;}}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/checklist/checklist/checklistMethods.js"],"names":["getSaveInputData","id","operation","Login","availableQBCategory","selectedRecord","selectedVersion","formRef","searchRef","dataState","inputData","postParam","selectedObject","primaryKeyField","userInfo","selectedId","inputListName","primaryKeyValue","masterData","selectedchecklist","nchecklistcode","fetchUrl","fecthInputObject","userinfo","schecklistname","sdescription","nmastersitecode","nchecklistversionqbcode","nchecklistqbcategorycode","nchecklistversioncode","nmandatoryfield","nchecklistqbcode","undefined","checklistversionqb","map","checklistQBCat","label","checklistQB","push","value","item","nmandatory","inputParam","methodUrl","classUrl","displayName","versionCreate","selectedChecklist","schecklistversionname","templateChangeHandler","flag","selectedStateRecord","event","control","lsteditedQB","temp","target","type","checkedValues","sdefaultvalue","split","currentTarget","checked","toString","jsondata","splice","indexOf"],"mappings":"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","sourcesContent":["export function getSaveInputData(id,operation,Login,availableQBCategory,selectedRecord,selectedVersion,formRef,searchRef,dataState){\r\n    let inputData = [];\r\n    let postParam={ selectedObject : \"selectedchecklist\", primaryKeyField : \"nchecklistcode\" };\r\n    inputData[\"userinfo\"] = Login.userInfo;\r\n    let selectedId=null;\r\n    if ( operation === \"update\"){\r\n        // edit\r\n        \r\n        if(id==='checklist'){\r\n            postParam = { inputListName : \"checklist\", selectedObject : \"selectedchecklist\",\r\n                        primaryKeyField : \"nchecklistcode\", \r\n                        primaryKeyValue : Login.masterData.selectedchecklist.nchecklistcode,\r\n                        fetchUrl : \"checklist/getChecklistVersion\",\r\n                        fecthInputObject : {userinfo:Login.userInfo}\r\n                    }\r\n            inputData[\"checklist\"] = {\r\n                \"nchecklistcode\":selectedRecord.nchecklistcode,\r\n                \"schecklistname\":selectedRecord.schecklistname,\r\n                \"sdescription\":selectedRecord.sdescription?selectedRecord.sdescription:\"\",\r\n                \"nsitecode\":Login.userInfo.nmastersitecode\r\n            }  \r\n        }else{\r\n            selectedId=selectedRecord.nchecklistversionqbcode\r\n            inputData[\"checklistversionqb\"]={\r\n                nchecklistversionqbcode:selectedRecord.nchecklistversionqbcode,\r\n                nchecklistqbcategorycode: selectedRecord.nchecklistqbcategorycode,\r\n                nchecklistversioncode: selectedVersion.nchecklistversioncode,\r\n                nmandatoryfield:selectedRecord.nmandatoryfield,\r\n                nchecklistqbcode:selectedRecord.nchecklistqbcode,\r\n            }\r\n        }\r\n    } else{\r\n\r\n        if(id==='checklist'){\r\n            postParam = { inputListName:\"checklist\",selectedObject : \"selectedchecklist\", primaryKeyField : \"nchecklistcode\" }\r\n            inputData[\"checklist\"] = {\r\n                \"schecklistname\":selectedRecord.schecklistname,\r\n                \"sdescription\":selectedRecord.sdescription?selectedRecord.sdescription:\"\",\r\n                \"nsitecode\":Login.userInfo.nmastersitecode\r\n            } \r\n        }else{\r\n            dataState=undefined;\r\n            let checklistversionqb=[];\r\n            if(selectedRecord){\r\n                availableQBCategory.map(checklistQBCat=>\r\n                    selectedRecord[checklistQBCat.label]?selectedRecord[checklistQBCat.label].map(checklistQB=>\r\n                        checklistversionqb.push({\r\n                            nchecklistqbcategorycode:checklistQBCat.value,\r\n                            nchecklistversioncode: selectedVersion.nchecklistversioncode,\r\n                            nchecklistqbcode:checklistQB.value,\r\n                            nmandatoryfield:checklistQB.item.nmandatory\r\n                    \r\n                })):\"\")\r\n            }\r\n            inputData[\"checklistversionqb\"]=checklistversionqb\r\n        }\r\n    }           \r\n    const inputParam = {\r\n        methodUrl:id==='checklist'?\"Checklist\":\"ChecklistVersionQB\",\r\n        classUrl: Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: operation ,\r\n        postParam,formRef,searchRef,dataState,selectedId,\r\n        displayName:id==='checklist'?Login.inputParam.displayName:\"IDS_CHECKLISTVERSIONQB\",     \r\n    }\r\n    return inputParam;\r\n}\r\nexport function versionCreate(selectedRecord,selectedChecklist,Login){\r\n    let inputData = [];\r\n    let postParam={ selectedObject : \"selectedchecklist\", primaryKeyField : \"nchecklistcode\" };\r\n    inputData[\"userinfo\"] = Login.userInfo;\r\n        //add               \r\n        inputData[\"checklistversion\"] = {\r\n            \"nchecklistversioncode\":selectedRecord.nchecklistversioncode?selectedRecord.nchecklistversioncode:0,\r\n            \"nchecklistcode\":selectedChecklist.nchecklistcode,\r\n            \"schecklistversionname\":selectedRecord.schecklistversionname\r\n        }                 \r\n    const inputParam = {\r\n        methodUrl: \"ChecklistVersion\",\r\n        classUrl: Login.inputParam.classUrl,\r\n        inputData: inputData,postParam,\r\n        operation: Login.operation       \r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function templateChangeHandler(flag,selectedStateRecord,event,control){\r\n\r\n    if(flag===1){//for Input Change Handle\r\n        const selectedRecord = selectedStateRecord || {};\r\n        //let lstQB=[] ;\r\n        let lsteditedQB=selectedRecord[\"editedQB\"]||[]\r\n        let temp=selectedRecord[control.nchecklistversionqbcode]?-1:lsteditedQB.push(control.nchecklistversionqbcode)\r\n       \r\n        if (event.target.type === 'checkbox')\r\n        {//for Check box\r\n            let checkedValues=[];\r\n            checkedValues=selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]?selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]:\r\n                                control.sdefaultvalue?control.sdefaultvalue.split(\",\"):[];\r\n            if(event.currentTarget.checked){\r\n                checkedValues.push(event.target.id)\r\n                selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]=checkedValues\r\n                selectedRecord[control.nchecklistversionqbcode] = {\r\n                    nchecklistversioncode:control.nchecklistversioncode,\r\n                    nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                    nchecklistqbcode:control.nchecklistqbcode,\r\n                    sdefaultvalue: checkedValues.toString(),\r\n                    jsondata:{ nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:checkedValues.toString()},\r\n                };\r\n                selectedRecord['jsondata']={\r\n                    ...selectedRecord['jsondata'],\r\n                    [control.nchecklistversionqbcode]:checkedValues.toString()\r\n                }\r\n                selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n            }else{\r\n                checkedValues.splice(checkedValues.indexOf(event.target.id),1)\r\n                selectedRecord[\"checkbox_\"+control.nchecklistversionqbcode]=checkedValues\r\n                selectedRecord[control.nchecklistversionqbcode] = {\r\n                    nchecklistversioncode:control.nchecklistversioncode,\r\n                    nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                    nchecklistqbcode:control.nchecklistqbcode,\r\n                    sdefaultvalue: checkedValues.toString(),\r\n                    jsondata:{ nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:checkedValues.toString()},\r\n                };\r\n                selectedRecord['jsondata']={\r\n                    ...selectedRecord['jsondata'],\r\n                    [control.nchecklistversionqbcode]:checkedValues.toString()\r\n                }\r\n                selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n                \r\n            }\r\n            \r\n        }else if(event.target.type === 'radio'){//For Radio\r\n            selectedRecord[control.nchecklistversionqbcode] = {\r\n                nchecklistversioncode:control.nchecklistversioncode,\r\n                nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                nchecklistqbcode:control.nchecklistqbcode,\r\n                sdefaultvalue: event.target.id,\r\n                jsondata:{ nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:event.target.id},\r\n            };\r\n            selectedRecord['jsondata']={\r\n                ...selectedRecord['jsondata'],\r\n                [control.nchecklistversionqbcode]:event.target.id\r\n            }\r\n            selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n        }\r\n        else{\r\n            //for other inputs\r\n            selectedRecord[control.nchecklistversionqbcode] = {\r\n                nchecklistversioncode:control.nchecklistversioncode,\r\n                nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                nchecklistqbcode:control.nchecklistqbcode,\r\n                sdefaultvalue:event.target.value,\r\n                jsondata:{ nchecklistversionqbcode:control.nchecklistversionqbcode,sdefaultvalue:event.target.value},\r\n               \r\n            };\r\n            selectedRecord['jsondata']={\r\n                ...selectedRecord['jsondata'],\r\n                [control.nchecklistversionqbcode]:event.target.value\r\n            }\r\n            selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n        }\r\n        return selectedRecord;\r\n    }else if(flag===3){\r\n        const selectedRecord = selectedStateRecord || {};\r\n        let lsteditedQB=selectedRecord[\"editedQB\"]||[]\r\n        let temp=selectedRecord[control.nchecklistversionqbcode]?-1:lsteditedQB.push(control.nchecklistversionqbcode)\r\n        selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n        selectedRecord[control.nchecklistversionqbcode] = {\r\n            nchecklistversioncode:control.nchecklistversioncode,\r\n            nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n            nchecklistqbcode:control.nchecklistqbcode,\r\n            sdefaultvalue: event\r\n            \r\n        };\r\n        return selectedRecord;\r\n    }else{//for combo change handle\r\n        const selectedRecord = selectedStateRecord || {};\r\n        let lsteditedQB=selectedRecord[\"editedQB\"]||[]\r\n        let temp=selectedRecord[control.nchecklistversionqbcode]?-1:\r\n                                    lsteditedQB.push(control.nchecklistversionqbcode)\r\n        selectedRecord[\"editedQB\"]=temp!==-1?lsteditedQB:selectedRecord[\"editedQB\"]\r\n        if(event){//if combo has value\r\n            selectedRecord[control.nchecklistversionqbcode] = {\r\n                nchecklistversioncode:control.nchecklistversioncode,\r\n                nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                nchecklistqbcode:control.nchecklistqbcode,\r\n                sdefaultvalue: event.label\r\n                \r\n            };\r\n            \r\n        }else{//if combo does not have\r\n            selectedRecord[control.nchecklistversionqbcode] = {\r\n                nchecklistversioncode:control.nchecklistversioncode,\r\n                nchecklistversionqbcode:control.nchecklistversionqbcode,\r\n                nchecklistqbcode:control.nchecklistqbcode,\r\n                sdefaultvalue: \"\"\r\n            };\r\n        }\r\n        return selectedRecord;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}