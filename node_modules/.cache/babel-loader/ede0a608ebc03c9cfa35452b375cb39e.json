{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\attachmentscomments\\\\attachments\\\\AddAttachment.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../../components/dropzone/dropzone.component';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport { attachmentType } from '../../../components/Enumeration';\nimport { MediaHeader } from '../../../components/App.styles';\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\n\nconst AddAttachment = props => {\n  const {\n    nattachmenttypecode,\n    disabled\n  } = props.selectedRecord;\n  let nameString = props.operation === 'update' ? props.selectedRecord && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]) : [];\n  let message = `${nameString.length} ${props.intl.formatMessage({\n    id: props.selectedListName || \"IDS_TESTS\"\n  })} ${props.intl.formatMessage({\n    id: \"IDS_SELECTED\"\n  })}`;\n  const sdescrption = nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\";\n  console.log(\"props in file:\", props, nameString);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, Object.values(props.masterList).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, nameString.length === 1 ? `${props.intl.formatMessage({\n    id: props.selectedListName || \"IDS_TESTS\"\n  })}: ${nameString[0]}` : /*#__PURE__*/React.createElement(TestPopOver, {\n    stringList: nameString,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 41\n    }\n  }))))) : \"\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"nattachmenttypecode\",\n    type: \"radio\",\n    id: \"AddFiles\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FTP\"\n    }),\n    inline: true,\n    onChange: event => props.onInputOnChange(event, 1, attachmentType.FTP),\n    checked: nattachmenttypecode === attachmentType.FTP ? true : false,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"nattachmenttypecode\",\n    type: \"radio\",\n    id: \"AddLink\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LINK\"\n    }),\n    inline: true,\n    onChange: event => props.onInputOnChange(event, 1, attachmentType.LINK),\n    checked: nattachmenttypecode === attachmentType.LINK ? true : false,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }))), props.selectedRecord && nattachmenttypecode === attachmentType.FTP && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"AttachmentFile\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FILE\"\n    }),\n    isMandatory: true,\n    maxFiles: props.maxFiles,\n    minSize: 0,\n    maxSize: props.maxSize,\n    onDrop: event => props.onDrop(event, 'sfilename', props.maxFiles),\n    deleteAttachment: props.deleteAttachment,\n    actionType: props.actionType,\n    fileNameLength: props.fileNameLength,\n    multiple: props.multiple !== undefined ? props.multiple : true,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.editFiles && props.editFiles.nattachmenttypecode,\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\" //disabled={disabled}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), props.selectedRecord && nattachmenttypecode === attachmentType.LINK && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slinkfilename\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"slinkfilename\"] : \"\",\n    isMandatory: \"*\",\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_LINKNAME\"\n    }),\n    isSearchable: true,\n    name: \"nlinkcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.linkMaster || [],\n    optionId: \"nlinkcode\",\n    optionValue: \"slinkname\",\n    value: props.selectedRecord[\"nlinkcode\"],\n    onChange: value => props.onComboChange(value, \"nlinkcode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: sdescrption,\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[sdescrption] ? props.selectedRecord[sdescrption] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default injectIntl(AddAttachment);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/attachmentscomments/attachments/AddAttachment.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormTextarea","FormInput","FormSelectSearch","attachmentType","MediaHeader","TestPopOver","AddAttachment","props","nattachmenttypecode","disabled","selectedRecord","nameString","operation","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","sdescrption","LINK","console","log","Object","values","event","onInputOnChange","FTP","maxFiles","maxSize","onDrop","deleteAttachment","actionType","fileNameLength","multiple","undefined","editFiles","linkMaster","value","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { attachmentType } from '../../../components/Enumeration';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\n\r\nconst AddAttachment = props => {\r\n    const {nattachmenttypecode, disabled} = props.selectedRecord;\r\n    let nameString = props.operation === 'update'?  props.selectedRecord && [props.selectedRecord[props.displayName]] : props.masterList ? props.masterList.map(obj=>obj[props.displayName]||obj[props.jsonField][props.displayName]) : []\r\n    let message= `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName||\"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    const sdescrption=nattachmenttypecode === attachmentType.LINK?\"slinkdescription\":\"sdescription\";\r\n    console.log(\"props in file:\", props, nameString);\r\n     \r\n    return (\r\n        <>\r\n        <Row>\r\n            {Object.values(props.masterList).length > 0 ?\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>\r\n                                {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"})}: ${nameString[0] }`:\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                }\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            : \"\"}\r\n        </Row>\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Form.Group>\r\n                    <Form.Check \r\n                        name=\"nattachmenttypecode\" \r\n                        type=\"radio\"\r\n                        id=\"AddFiles\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1, attachmentType.FTP)}\r\n                        checked={nattachmenttypecode===attachmentType.FTP?true:false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                    <Form.Check\r\n                        name=\"nattachmenttypecode\"\r\n                        type=\"radio\"\r\n                        id=\"AddLink\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1, attachmentType.LINK)}\r\n                        checked={nattachmenttypecode===attachmentType.LINK?true:false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                </Form.Group>\r\n            </Col>\r\n            { props.selectedRecord && nattachmenttypecode === attachmentType.FTP &&\r\n            <Col md={12}>\r\n                <DropZone\r\n                    name = 'AttachmentFile'\r\n                    label = {props.intl.formatMessage({id:\"IDS_FILE\"})}\r\n                    isMandatory = {true}\r\n                    maxFiles={props.maxFiles}\r\n                    minSize={0}\r\n                    maxSize={props.maxSize}\r\n                    onDrop={(event)=>props.onDrop(event,'sfilename',props.maxFiles)}\r\n                    deleteAttachment={props.deleteAttachment}\r\n                    actionType={props.actionType}\r\n                    fileNameLength={props.fileNameLength}\r\n                    multiple={props.multiple!== undefined ? props.multiple:true}\r\n                    editFiles={props.selectedRecord?props.selectedRecord:{}}\r\n                    attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                    fileSizeName=\"nfilesize\"\r\n                    fileName=\"sfilename\"\r\n                    //disabled={disabled}\r\n                />\r\n            </Col>\r\n            }\r\n            { props.selectedRecord && nattachmenttypecode === attachmentType.LINK &&\r\n            <>\r\n                <Col md=\"12\">\r\n                    <FormInput\r\n                        name={\"slinkfilename\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                        value={props.selectedRecord?props.selectedRecord[\"slinkfilename\"]:\"\"}\r\n                        isMandatory=\"*\" \r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                </Col>\r\n                <Col md=\"12\">\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_LINKNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"nlinkcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                        isMandatory={true}\r\n                        showOption={true}\r\n                        options={props.linkMaster || []}\r\n                        optionId='nlinkcode'\r\n                        optionValue='slinkname'\r\n                        value={props.selectedRecord[\"nlinkcode\"]}\r\n                        onChange={value => props.onComboChange(value, \"nlinkcode\", 1)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                </Col>\r\n            </>\r\n            }\r\n            \r\n            <Col md=\"12\" className=\"mt-4\">\r\n                <FormTextarea\r\n                    name={sdescrption}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[sdescrption]?props.selectedRecord[sdescrption]:\"\"}\r\n                    rows=\"2\"\r\n                    required={false}\r\n                    maxLength={255}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddAttachment);"]},"metadata":{},"sourceType":"module"}