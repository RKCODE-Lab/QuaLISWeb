{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddFormula.jsx\";\nimport React, { Component } from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row, Card, Tab, Nav, TabContent, Button } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons';\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { process } from '@progress/kendo-data-query';\nimport { Draggable, Droppable } from 'react-drag-and-drop';\n\nclass AddFormula extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sformulaname\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FORMULANAME\"\n      }),\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event, 1),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_FORMULANAME\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sformulaname\"] : \"\",\n      isMandatory: \"*\",\n      required: true,\n      maxLength: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TESTCATEGORY\"\n      }),\n      isSearchable: true,\n      name: \"ntestcategorycode\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      showOption: true,\n      options: this.props.testCategory,\n      optionId: \"ntestcategorycode\",\n      optionValue: \"stestcategoryname\",\n      value: this.props.selectedRecord[\"ntestcategorycode\"],\n      onChange: value => this.props.onComboChange(value, \"ntestcategorycode\", 3),\n      alphabeticalSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestcode\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      showOption: true,\n      options: this.props.testMaster,\n      optionId: \"ntestcode\",\n      optionValue: \"stestname\",\n      value: this.props.selectedRecord[\"ntestcode\"],\n      onChange: value => this.props.onComboChange(value, \"ntestcode\", 4),\n      alphabeticalSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      defaultActiveKey: \"fieldstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"d-flex tab-card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      as: \"ul\",\n      className: \"nav nav-tabs card-header-tabs flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: \"fieldstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FIELDNAME\"\n    }))), /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: \"operatorstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_OPERATORS\"\n    }))), /*#__PURE__*/React.createElement(Nav.Item, {\n      as: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: \"functionstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FUNCTIONS\"\n    }))))), /*#__PURE__*/React.createElement(TabContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Pane, {\n      eventKey: \"fieldstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      resizable: true,\n      scrollable: \"scrollable\",\n      style: {\n        height: '350px'\n      },\n      data: process(this.props.dynamicFormulaFields, {\n        skip: 0,\n        take: this.props.dynamicFormulaFields.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridColumn, {\n      width: \"36px\",\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Draggable, {\n        type: \"testfields\",\n        data: JSON.stringify(row[\"dataItem\"]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faGripVertical,\n        className: \"dragicon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 65\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"stestname\",\n      title: this.props.intl.formatMessage({\n        id: \"IDS_TEST\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"sparametername\",\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PARAMETER\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(Tab.Pane, {\n      eventKey: \"operatorstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      resizable: true,\n      scrollable: \"scrollable\",\n      style: {\n        height: '350px'\n      },\n      data: process(this.props.operators, {\n        skip: 0,\n        take: this.props.operators.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridColumn, {\n      width: \"36px\",\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Draggable, {\n        type: \"operatorfields\",\n        data: JSON.stringify(row[\"dataItem\"]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faGripVertical,\n        className: \"dragicon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 65\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"soperator\",\n      title: this.props.intl.formatMessage({\n        id: \"IDS_OPERATORS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 48\n      }\n    }))))), /*#__PURE__*/React.createElement(Tab.Pane, {\n      eventKey: \"functionstab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      resizable: true,\n      scrollable: \"scrollable\",\n      style: {\n        height: '350px'\n      },\n      data: process(this.props.functions, {\n        skip: 0,\n        take: this.props.functions.length\n      }),\n      onRowClick: this.props.getSyntax,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridColumn, {\n      width: \"36px\",\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Draggable, {\n        type: \"functionfields\",\n        data: JSON.stringify(row[\"dataItem\"]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faGripVertical,\n        className: \"dragicon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 65\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"sfunctionname\",\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FUNCTIONS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 49\n      }\n    }))))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"userinput\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_INPUT\"\n      }),\n      type: \"text\",\n      value: this.props.selectedRecord[\"userinput\"] ? this.props.selectedRecord[\"userinput\"] : \"\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_INPUT\"\n      }),\n      onChange: event => this.props.onInputOnChange(event, 4),\n      maxLength: 10,\n      onKeyUp: event => this.props.onUserInputs(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"syntax\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_SYNTAX\"\n      }),\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SYNTAX\"\n      }),\n      value: this.props.sfunctionsyntax ? this.props.sfunctionsyntax : \"\",\n      required: false,\n      isDisabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Droppable, {\n      types: ['testfields', 'operatorfields', 'functionfields'],\n      onDrop: event => this.props.onFormulaDrop(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"sformulacalculationdetail\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FORMULA\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_FORMULA\"\n      }),\n      value: this.props.selectedRecord[\"sformulacalculationdetail\"] ? this.props.selectedRecord[\"sformulacalculationdetail\"] : \"\",\n      rows: \"5\",\n      isMandatory: \"*\",\n      required: true,\n      maxLength: 512,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-cancel\",\n      variant: \"\",\n      onClick: () => this.props.clearFormula(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CLEAR\",\n      defaultMessage: \"Clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.props.validateFormula(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VALIDATEFORMULA\",\n      defaultMessage: \"Validate Formula\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"query\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_VALIDATEFORMULA\"\n      }),\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_VALIDATEFORMULA\"\n      }),\n      value: this.props.query,\n      required: false,\n      maxLength: 100,\n      isDisabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"result\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_VALIDATEDRESULT\"\n      }),\n      type: \"text\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_VALIDATEDRESULT\"\n      }),\n      value: this.props.result,\n      required: false,\n      maxLength: 100,\n      isDisabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(AddFormula);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddFormula.jsx"],"names":["React","Component","FormSelectSearch","Col","Row","Card","Tab","Nav","TabContent","Button","FormInput","FormTextarea","FormattedMessage","injectIntl","faGripVertical","Grid","GridColumn","FontAwesomeIcon","process","Draggable","Droppable","AddFormula","render","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","testCategory","value","onComboChange","testMaster","height","dynamicFormulaFields","skip","take","length","row","JSON","stringify","operators","functions","getSyntax","onUserInputs","sfunctionsyntax","onFormulaDrop","clearFormula","validateFormula","query","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row, Card, Tab, Nav, TabContent, Button } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { Draggable, Droppable } from 'react-drag-and-drop';\r\n\r\nclass AddFormula extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormInput\r\n                        name={\"sformulaname\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => this.props.onInputOnChange(event, 1)}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        value={this.props.selectedRecord? this.props.selectedRecord[\"sformulaname\"]:\"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTCATEGORY\" })}\r\n                        isSearchable={true}\r\n                        name={\"ntestcategorycode\"}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        showOption={true}\r\n                        options={this.props.testCategory}\r\n                        optionId='ntestcategorycode'\r\n                        optionValue='stestcategoryname'\r\n                        value={this.props.selectedRecord[\"ntestcategorycode\"]}\r\n                        onChange={value => this.props.onComboChange(value, \"ntestcategorycode\", 3)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"ntestcode\"}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        showOption={true}\r\n                        options={this.props.testMaster}\r\n                        optionId='ntestcode'\r\n                        optionValue='stestname'\r\n                        value={this.props.selectedRecord[\"ntestcode\"]}\r\n                        onChange={value => this.props.onComboChange(value, \"ntestcode\", 4)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                    <Card className=\"at-tabs\">\r\n                        <Tab.Container defaultActiveKey={\"fieldstab\"}>\r\n                            <Card.Header className=\"d-flex tab-card-header\">\r\n                                <Nav as=\"ul\" className=\"nav nav-tabs card-header-tabs flex-grow-1\">\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"fieldstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_FIELDNAME\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"operatorstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_OPERATORS\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"functionstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_FUNCTIONS\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            </Card.Header>\r\n                            <TabContent>\r\n                                <Tab.Pane eventKey=\"fieldstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.dynamicFormulaFields, { skip: 0, take: this.props.dynamicFormulaFields.length })}\r\n                                                >\r\n                                                \r\n                                                <GridColumn width=\"36px\" \r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"testfields\" data={JSON.stringify(row[\"dataItem\"])}>\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                    )}\r\n                                                />\r\n                                                <GridColumn field=\"stestname\" title={this.props.intl.formatMessage({id:\"IDS_TEST\"})} \r\n                                                    \r\n                                                />\r\n                                                <GridColumn field=\"sparametername\" title={this.props.intl.formatMessage({id:\"IDS_PARAMETER\"})} \r\n                                                  \r\n                                                />\r\n                                            </Grid>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"operatorstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.operators, { skip: 0, take: this.props.operators.length })}\r\n                                                >\r\n                                                \r\n                                                <GridColumn width=\"36px\"\r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"operatorfields\" data={JSON.stringify(row[\"dataItem\"])}>\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                    )}\r\n                                                />\r\n                                               <GridColumn field=\"soperator\" title={this.props.intl.formatMessage({id:\"IDS_OPERATORS\"})} \r\n                                                   \r\n                                                />\r\n                                            </Grid>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"functionstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.functions, { skip: 0, take: this.props.functions.length })}\r\n                                                onRowClick={this.props.getSyntax}\r\n                                                >\r\n                                                <GridColumn width=\"36px\" \r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"functionfields\" data={JSON.stringify(row[\"dataItem\"])}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                       \r\n                                                    )}\r\n                                                />\r\n                                                <GridColumn field=\"sfunctionname\" title={this.props.intl.formatMessage({id:\"IDS_FUNCTIONS\"})} \r\n                                                   \r\n                                                />\r\n                                            </Grid>                                         \r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                            </TabContent>\r\n                        </Tab.Container>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormInput\r\n                        name=\"userinput\"\r\n                        label={ this.props.intl.formatMessage({ id:\"IDS_INPUT\"}) } \r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[\"userinput\"]?this.props.selectedRecord[\"userinput\"]:\"\"}\r\n                        placeholder={ this.props.intl.formatMessage({ id:\"IDS_INPUT\"}) } \r\n                        onChange = { (event) => this.props.onInputOnChange(event, 4) }\r\n                        maxLength={10}\r\n                        onKeyUp={ (event)=>this.props.onUserInputs(event) }\r\n                    />\r\n                    <FormInput\r\n                        name={\"syntax\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_SYNTAX\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SYNTAX\" })}\r\n                        value={this.props.sfunctionsyntax?this.props.sfunctionsyntax:\"\"}\r\n                        required={false}\r\n                        isDisabled={true}\r\n                    /> \r\n                    <Droppable\r\n                        types={['testfields', 'operatorfields', 'functionfields']}\r\n                        onDrop={(event)=>this.props.onFormulaDrop(event)}\r\n                    >\r\n                        <FormTextarea\r\n                            name={\"sformulacalculationdetail\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FORMULA\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FORMULA\" })}\r\n                            value={this.props.selectedRecord[\"sformulacalculationdetail\"]? this.props.selectedRecord[\"sformulacalculationdetail\"]:\"\"}\r\n                            rows=\"5\"\r\n                            isMandatory=\"*\"\r\n                            required={true}\r\n                            maxLength={512}\r\n                            readOnly={true}\r\n                        >\r\n                        </FormTextarea>                              \r\n                    </Droppable>\r\n                    <div className=\"d-flex justify-content-end mb-3\">\r\n                        <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={()=>this.props.clearFormula()}>\r\n                            <FormattedMessage id='IDS_CLEAR' defaultMessage='Clear' />\r\n                        </Button>\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={()=>this.props.validateFormula()}>\r\n                            <FormattedMessage id='IDS_VALIDATEFORMULA' defaultMessage='Validate Formula' />                     \r\n                        </Button>\r\n                    </div>\r\n                    <FormInput\r\n                        name={\"query\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_VALIDATEFORMULA\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALIDATEFORMULA\" })}\r\n                        value={this.props.query}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        isDisabled={true}\r\n                    />\r\n                    <FormInput\r\n                        name={\"result\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_VALIDATEDRESULT\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALIDATEDRESULT\" })}\r\n                        value={this.props.result}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        isDisabled={true}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default injectIntl(AddFormula);"]},"metadata":{},"sourceType":"module"}