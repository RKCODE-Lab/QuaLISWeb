{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryBuilderFormat = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _defaultUtils = require(\"../utils/defaultUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nvar _funcUtils = require(\"../utils/funcUtils\");\n\nvar _immutable = require(\"immutable\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nvar queryBuilderFormat = function queryBuilderFormat(item, config) {\n  //meta is mutable\n  var meta = {\n    usedFields: []\n  };\n  var res = formatItem(item, config, meta);\n  if (!res) return undefined;\n  return _objectSpread(_objectSpread({}, res), meta);\n};\n\nexports.queryBuilderFormat = queryBuilderFormat;\n\nvar formatItem = function formatItem(item, config, meta) {\n  if (!item) return undefined;\n  var type = item.get(\"type\");\n  var children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\nvar formatGroup = function formatGroup(item, config, meta) {\n  var properties = item.get(\"properties\") || new _immutable.Map();\n  var children = item.get(\"children1\");\n  var id = item.get(\"id\");\n  var list = children.map(function (currentChild) {\n    return formatItem(currentChild, config, meta);\n  }).filter(function (currentChild) {\n    return typeof currentChild !== \"undefined\";\n  });\n  if (!list.size) return undefined;\n  var conjunction = properties.get(\"conjunction\");\n  if (!conjunction) conjunction = (0, _defaultUtils.defaultConjunction)(config);\n  var not = properties.get(\"not\");\n  var resultQuery = {\n    id: id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not: not\n  };\n  return resultQuery;\n};\n\nvar formatRule = function formatRule(item, config, meta) {\n  var properties = item.get(\"properties\") || new _immutable.Map();\n  var id = item.get(\"id\");\n  var operator = properties.get(\"operator\");\n  var options = properties.get(\"operatorOptions\");\n  var field = properties.get(\"field\");\n  var value = properties.get(\"value\");\n  var valueSrc = properties.get(\"valueSrc\");\n  var valueType = properties.get(\"valueType\");\n  var hasUndefinedValues = value.filter(function (v) {\n    return v === undefined;\n  }).size > 0;\n  if (field == null || operator == null || hasUndefinedValues) return undefined;\n  var fieldDefinition = (0, _configUtils.getFieldConfig)(config, field) || {};\n  var operatorDefinition = (0, _configUtils.getOperatorConfig)(config, operator, field) || {};\n  var fieldType = fieldDefinition.type || \"undefined\";\n  var cardinality = (0, _stuff.defaultValue)(operatorDefinition.cardinality, 1);\n  var typeConfig = config.types[fieldDefinition.type] || {};\n  var fieldName = (0, _ruleUtils.formatFieldName)(field, config, meta);\n  if (value.size < cardinality) return undefined;\n  if (meta.usedFields.indexOf(field) == -1) meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  var values = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var val = {\n      type: valueType[i],\n      value: value[i]\n    };\n    values.push(val);\n\n    if (valueSrc[i] == \"field\") {\n      var secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1) meta.usedFields.push(secondField);\n    }\n  }\n\n  var operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length) operatorOptions = null;\n  var ruleQuery = {\n    id: id,\n    fieldName: fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator: operator\n  };\n  if (operatorOptions) ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/react-awesome-query-builder/lib/export/queryBuilder.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","queryBuilderFormat","_defineProperty2","_stuff","_configUtils","_defaultUtils","_ruleUtils","_funcUtils","_immutable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","item","config","meta","usedFields","res","formatItem","undefined","type","get","children","size","formatGroup","formatRule","properties","Map","id","list","map","currentChild","conjunction","defaultConjunction","not","resultQuery","rules","toList","condition","toUpperCase","operator","options","field","valueSrc","valueType","hasUndefinedValues","v","fieldDefinition","getFieldConfig","operatorDefinition","getOperatorConfig","fieldType","cardinality","defaultValue","typeConfig","types","fieldName","formatFieldName","indexOf","toArray","values","val","secondField","operatorOptions","toJS","ruleQuery","input","mainWidget"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryBuilderFormat = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _configUtils = require(\"../utils/configUtils\");\n\nvar _defaultUtils = require(\"../utils/defaultUtils\");\n\nvar _ruleUtils = require(\"../utils/ruleUtils\");\n\nvar _funcUtils = require(\"../utils/funcUtils\");\n\nvar _immutable = require(\"immutable\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\nvar queryBuilderFormat = function queryBuilderFormat(item, config) {\n  //meta is mutable\n  var meta = {\n    usedFields: []\n  };\n  var res = formatItem(item, config, meta);\n  if (!res) return undefined;\n  return _objectSpread(_objectSpread({}, res), meta);\n};\n\nexports.queryBuilderFormat = queryBuilderFormat;\n\nvar formatItem = function formatItem(item, config, meta) {\n  if (!item) return undefined;\n  var type = item.get(\"type\");\n  var children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\nvar formatGroup = function formatGroup(item, config, meta) {\n  var properties = item.get(\"properties\") || new _immutable.Map();\n  var children = item.get(\"children1\");\n  var id = item.get(\"id\");\n  var list = children.map(function (currentChild) {\n    return formatItem(currentChild, config, meta);\n  }).filter(function (currentChild) {\n    return typeof currentChild !== \"undefined\";\n  });\n  if (!list.size) return undefined;\n  var conjunction = properties.get(\"conjunction\");\n  if (!conjunction) conjunction = (0, _defaultUtils.defaultConjunction)(config);\n  var not = properties.get(\"not\");\n  var resultQuery = {\n    id: id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not: not\n  };\n  return resultQuery;\n};\n\nvar formatRule = function formatRule(item, config, meta) {\n  var properties = item.get(\"properties\") || new _immutable.Map();\n  var id = item.get(\"id\");\n  var operator = properties.get(\"operator\");\n  var options = properties.get(\"operatorOptions\");\n  var field = properties.get(\"field\");\n  var value = properties.get(\"value\");\n  var valueSrc = properties.get(\"valueSrc\");\n  var valueType = properties.get(\"valueType\");\n  var hasUndefinedValues = value.filter(function (v) {\n    return v === undefined;\n  }).size > 0;\n  if (field == null || operator == null || hasUndefinedValues) return undefined;\n  var fieldDefinition = (0, _configUtils.getFieldConfig)(config, field) || {};\n  var operatorDefinition = (0, _configUtils.getOperatorConfig)(config, operator, field) || {};\n  var fieldType = fieldDefinition.type || \"undefined\";\n  var cardinality = (0, _stuff.defaultValue)(operatorDefinition.cardinality, 1);\n  var typeConfig = config.types[fieldDefinition.type] || {};\n  var fieldName = (0, _ruleUtils.formatFieldName)(field, config, meta);\n  if (value.size < cardinality) return undefined;\n  if (meta.usedFields.indexOf(field) == -1) meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  var values = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var val = {\n      type: valueType[i],\n      value: value[i]\n    };\n    values.push(val);\n\n    if (valueSrc[i] == \"field\") {\n      var secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1) meta.usedFields.push(secondField);\n    }\n  }\n\n  var operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length) operatorOptions = null;\n  var ruleQuery = {\n    id: id,\n    fieldName: fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator: operator\n  };\n  if (operatorOptions) ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};"]},"metadata":{},"sourceType":"script"}