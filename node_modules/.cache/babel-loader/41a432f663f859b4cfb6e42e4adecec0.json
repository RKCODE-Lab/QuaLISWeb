{"ast":null,"code":"import { addRowBefore, addRowAfter, addColumnBefore, addColumnAfter, deleteRow, deleteColumn, deleteTable, mergeCells, splitCell, selectionCell } from '@progress/kendo-editor-common';\nimport { createProseMirrorTool } from './proseMirrorTool';\n/**\n * @hidden\n */\n\nvar deleteColumnCmd = function (state, dispatch) {\n  var result = deleteColumn(state, dispatch);\n\n  if (result && !dispatch) {\n    var pos = selectionCell(state);\n    var row = pos && pos.node(pos.depth);\n\n    if (row && row.content.childCount === 1) {\n      return false;\n    }\n  }\n\n  return result;\n};\n/**\n * @hidden\n */\n\n\nvar deleteRowCmd = function (state, dispatch) {\n  var result = deleteRow(state, dispatch);\n\n  if (result && !dispatch) {\n    var pos = selectionCell(state);\n    var rowParent = pos && pos.node(pos.depth - 1);\n\n    if (rowParent && rowParent.content.childCount === 1) {\n      return false;\n    }\n  }\n\n  return result;\n};\n/**\n * @hidden\n */\n\n\nexport var TableEditNS;\n\n(function (TableEditNS) {\n  /**\n   * @hidden\n   */\n  TableEditNS.createAddRowBeforeTool = function (settings) {\n    return createProseMirrorTool(settings, addRowBefore);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createAddRowAfterTool = function (settings) {\n    return createProseMirrorTool(settings, addRowAfter);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createAddColumnBeforeTool = function (settings) {\n    return createProseMirrorTool(settings, addColumnBefore);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createAddColumnAfterTool = function (settings) {\n    return createProseMirrorTool(settings, addColumnAfter);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createDeleteRowTool = function (settings) {\n    return createProseMirrorTool(settings, deleteRowCmd);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createDeleteColumnTool = function (settings) {\n    return createProseMirrorTool(settings, deleteColumnCmd);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createDeleteTableTool = function (settings) {\n    return createProseMirrorTool(settings, deleteTable);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createMergeCellsTool = function (settings) {\n    return createProseMirrorTool(settings, mergeCells);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TableEditNS.createSplitCellTool = function (settings) {\n    return createProseMirrorTool(settings, splitCell);\n  };\n})(TableEditNS || (TableEditNS = {}));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/@progress/kendo-react-editor/dist/es/tools/tableEdit.js"],"names":["addRowBefore","addRowAfter","addColumnBefore","addColumnAfter","deleteRow","deleteColumn","deleteTable","mergeCells","splitCell","selectionCell","createProseMirrorTool","deleteColumnCmd","state","dispatch","result","pos","row","node","depth","content","childCount","deleteRowCmd","rowParent","TableEditNS","createAddRowBeforeTool","settings","createAddRowAfterTool","createAddColumnBeforeTool","createAddColumnAfterTool","createDeleteRowTool","createDeleteColumnTool","createDeleteTableTool","createMergeCellsTool","createSplitCellTool"],"mappings":"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","sourcesContent":["import { addRowBefore, addRowAfter, addColumnBefore, addColumnAfter, deleteRow, deleteColumn, deleteTable, mergeCells, splitCell, selectionCell } from '@progress/kendo-editor-common';\nimport { createProseMirrorTool } from './proseMirrorTool';\n/**\n * @hidden\n */\nvar deleteColumnCmd = function (state, dispatch) {\n    var result = deleteColumn(state, dispatch);\n    if (result && !dispatch) {\n        var pos = selectionCell(state);\n        var row = pos && pos.node(pos.depth);\n        if (row && row.content.childCount === 1) {\n            return false;\n        }\n    }\n    return result;\n};\n/**\n * @hidden\n */\nvar deleteRowCmd = function (state, dispatch) {\n    var result = deleteRow(state, dispatch);\n    if (result && !dispatch) {\n        var pos = selectionCell(state);\n        var rowParent = pos && pos.node(pos.depth - 1);\n        if (rowParent && rowParent.content.childCount === 1) {\n            return false;\n        }\n    }\n    return result;\n};\n/**\n * @hidden\n */\nexport var TableEditNS;\n(function (TableEditNS) {\n    /**\n     * @hidden\n     */\n    TableEditNS.createAddRowBeforeTool = function (settings) {\n        return createProseMirrorTool(settings, addRowBefore);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createAddRowAfterTool = function (settings) {\n        return createProseMirrorTool(settings, addRowAfter);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createAddColumnBeforeTool = function (settings) {\n        return createProseMirrorTool(settings, addColumnBefore);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createAddColumnAfterTool = function (settings) {\n        return createProseMirrorTool(settings, addColumnAfter);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createDeleteRowTool = function (settings) {\n        return createProseMirrorTool(settings, deleteRowCmd);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createDeleteColumnTool = function (settings) {\n        return createProseMirrorTool(settings, deleteColumnCmd);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createDeleteTableTool = function (settings) {\n        return createProseMirrorTool(settings, deleteTable);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createMergeCellsTool = function (settings) {\n        return createProseMirrorTool(settings, mergeCells);\n    };\n    /**\n     * @hidden\n     */\n    TableEditNS.createSplitCellTool = function (settings) {\n        return createProseMirrorTool(settings, splitCell);\n    };\n})(TableEditNS || (TableEditNS = {}));\n"]},"metadata":{},"sourceType":"module"}