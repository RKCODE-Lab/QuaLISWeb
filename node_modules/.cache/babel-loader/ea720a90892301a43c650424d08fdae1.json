{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\BarcodeTemplate\\\\BarcodeTemplate.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getBarcodeTemplateComboService, getBarcodeTemplateControl, getReactInputFields, getReactQuerybuilderTableRecord, getBarcodeTemplateDetail, getEditBarcodeTemplateComboService, filterColumnData } from '../../actions';\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { SampleType, transactionStatus } from '../../components/Enumeration';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport AddBarcodeTemplate from './AddBarcodeTemplate';\nimport BarcodePreRegDesign from './BarcodePreRegDesign';\nimport PortalModal from '../../PortalModal';\nimport { faPenAlt, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\nimport FormInput from '../../components/form-input/form-input.component';\nimport rsapi from '../../rsapi';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass BarcodeTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.onApproveClick = approveId => {\n      if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.DRAFT) {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"barcodetemplate\"] = {\n          \"nbarcodetemplatecode\": this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"] ? this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"].Value : \"\"\n        };\n        inputData[\"barcodetemplate\"] = this.props.Login.masterData.SelectedBarcodeTemplate;\n        postParam = {\n          inputListName: \"BarcodeTemplate\",\n          selectedObject: \"SelectedBarcodeTemplate\",\n          primaryKeyField: \"nbarcodetemplatecode\"\n        };\n        const inputParam = {\n          classUrl: 'barcodetemplate',\n          methodUrl: \"BarcodeTemplate\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"approve\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORD\"\n        }));\n      }\n    };\n\n    this.onRetireClick = approveId => {\n      if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.APPROVED) {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"barcodetemplate\"] = {\n          \"nbarcodetemplatecode\": this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"] ? this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"].Value : \"\"\n        };\n        inputData[\"barcodetemplate\"] = this.props.Login.masterData.SelectedBarcodeTemplate;\n        postParam = {\n          inputListName: \"BarcodeTemplate\",\n          selectedObject: \"SelectedBarcodeTemplate\",\n          primaryKeyField: \"nbarcodetemplatecode\"\n        };\n        const inputParam = {\n          classUrl: 'barcodetemplate',\n          methodUrl: \"BarcodeTemplate\",\n          inputData: inputData,\n          operation: \"retire\",\n          postParam,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"retire\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTAPPROVERECORD\"\n        }));\n      }\n    };\n\n    this.onEditClick = editId => {\n      const addParam = {\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_BARCODETEMPLATE\"\n        }),\n        operation: \"update\",\n        userInfo: this.props.Login.userInfo,\n        controlId: editId,\n        selectedRecord: this.state.selectedRecord,\n        nbarcodetemplatecode: this.props.Login.masterData.SelectedBarcodeTemplate.nbarcodetemplatecode,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getEditBarcodeTemplateComboService(addParam);\n    };\n\n    this.saveScreenFilter = (inputData, modal) => {\n      const lstFilterlevel = [];\n      let totalLevel = 0;\n      const layout = JSON.parse(inputData.registrationtemplate.jsonString);\n      layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\") {\n                  totalLevel = totalLevel++;\n                  lstFilterlevel.push({\n                    slabelname: componentrow.label\n                  });\n                }\n              });\n            } else {\n              if (component.inputtype === \"combo\") {\n                lstFilterlevel.push({\n                  slabelname: component.label\n                });\n                totalLevel = totalLevel++;\n              }\n            }\n          });\n        });\n      });\n      const selectedRecord = { ...this.state.selectedRecord\n      };\n      selectedRecord['reactTemplate'] = inputData.registrationtemplate;\n      selectedRecord['lstFilterlevel'] = lstFilterlevel;\n      selectedRecord['totalLevel'] = totalLevel;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          // reactTemplate: inputData.registrationtemplate,\n          // lstFilterlevel, totalLevel,\n          selectedRecord,\n          openPortal: false,\n          openModal: true\n        }\n      };\n      this.props.updateStore(updateInfo); //        this.setState({ reactTemplate: inputData.registrationtemplate, lstFilterlevel,totalLevel })\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"barcodetemplate\",\n        methodUrl: \"BarcodeTemplate\",\n        displayName: this.props.Login.displayName,\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.AddFilterDesign = () => {\n      if (this.state.selectedRecord['nformcode']) {\n        if (this.state.selectedRecord['ncontrolcode']) {\n          let design = [];\n\n          if (this.state.selectedRecord.reactTemplate && this.state.selectedRecord.reactTemplate.jsonString) {\n            design = JSON.parse(this.state.selectedRecord.reactTemplate.jsonString);\n          } else {\n            design = [{\n              \"id\": \"pv1OWbsMYq\",\n              \"type\": \"row\",\n              \"children\": [{\n                \"id\": \"2zMtRhjb2t\",\n                \"type\": \"column\",\n                \"children\": []\n              }]\n            }];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openPortal: true,\n              openModal: false,\n              design\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTEDTHECONTROL\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTEDTHEFORM\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteTemplate(deleteId));\n    };\n\n    this.deleteTemplate = ncontrolCode => {\n      if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus !== transactionStatus.DRAFT) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTODELETE\"\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"BarcodeTemplate\",\n          selectedObject: \"SelectedBarcodeTemplate\",\n          primaryKeyField: \"nbarcodetemplatecode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedBarcodeTemplate.nbarcodetemplatecode,\n          fetchUrl: \"barcodetemplate/getBarcodeTemplate\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const operation = \"delete\";\n        const inputParam = {\n          classUrl: \"barcodetemplate\",\n          //this.props.Login.inputParam.classUrl,\n          methodUrl: \"BarcodeTemplate\",\n          postParam,\n          inputData: {\n            // \"barcodetemplate\": selectedRecord,\n            \"userinfo\": this.props.Login.userInfo,\n            \"barcodetemplate\": this.props.Login.masterData.SelectedBarcodeTemplate\n          },\n          operation,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: this.props.Login.screenName,\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.openPortal) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openPortal: false,\n            openModal: true\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        if (this.props.Login.loadEsign) {\n          if (this.props.Login.operation === \"approve\" || this.props.Login.operation === \"delete\") {\n            loadEsign = false;\n            openModal = false;\n            selectedRecord = {};\n          } else {\n            loadEsign = false;\n          }\n        } else {\n          openModal = false;\n          selectedRecord = {};\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal,\n            loadEsign,\n            selectedRecord,\n            selectedId: null,\n            dataList: [],\n            dataListCount: [],\n            dataListSubSample: [],\n            dataListCountSubSample: []\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = { ...this.state.selectedRecord\n      } || {};\n      selectedRecord[fieldName] = comboData;\n\n      if (fieldName === 'nformcode') {\n        selectedRecord['reactTemplate'] = undefined;\n        selectedRecord['lstFilterlevel'] = [];\n        selectedRecord['totalLevel'] = 0;\n        selectedRecord['ncontrolcode'] = undefined;\n        const map = {\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getBarcodeTemplateControl(map, selectedRecord); //     // const updateInfo = {\n        //     //     typeName: DEFAULT_RETURN,\n        //     //     data: {\n        //     //         loading: true,\n        //     //     }\n        //     // }\n        //   //  this.props.updateStore(updateInfo);\n        //     rsapi.post(\"barcodetemplate/getBarcodeTemplateControl\", { 'userinfo': this.props.Login.userInfo, nformcode: selectedRecord.nformcode.value })\n        //         .then(response => {\n        //             const qualisMap = constructOptionList(response.data[\"controlList\"] || [], \"ncontrolcode\",\n        //                 \"sdisplayname\", undefined, undefined, true);\n        //             const qualisList = qualisMap.get(\"OptionList\");\n        //             const updateInfo = {\n        //                 typeName: DEFAULT_RETURN,\n        //                 data: {\n        //                     loading: false,\n        //                     controlList: qualisList,\n        //                     selectedRecord,\n        //                 }\n        //             }\n        //             this.props.updateStore(updateInfo);\n        //             this.setState({selectedRecord})\n        //         })\n      } else if (fieldName === 'ncontrolcode') {\n        selectedRecord['reactTemplate'] = undefined;\n        selectedRecord['lstFilterlevel'] = [];\n        selectedRecord['totalLevel'] = 0;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            // reactTemplate: undefined,\n            // lstFilterlevel: [], totalLevel: 0,\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (event.target.name === \"nsqlqueryneed\") {\n          if (event.target.value === false) {\n            delete selectedRecord['nsqlquerycode'];\n            selectedRecord['nfiltersqlqueryneed'] = 4;\n          }\n\n          selectedRecord[event.target.name] = event.target.value;\n        } else if (event.target.name === \"nfiltersqlqueryneed\") {\n          if (event.target.value === true) {\n            delete selectedRecord['nsqlquerycode'];\n          }\n\n          selectedRecord[event.target.name] = event.target.value;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      if (event.target.name === 'nneedconfiguration') {\n        if (selectedRecord[event.target.name] === 4) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              reactTemplate: undefined,\n              lstFilterlevel: [],\n              totalLevel: 0\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = saveType => {\n      let check = true;\n\n      if (this.state.selectedRecord.nneedconfiguration === 3) {\n        if (this.state.selectedRecord.reactTemplate === undefined) {\n          check = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_CREATEFILTERCONFIGURATION\"\n          }));\n        }\n      }\n\n      if (check !== false) {\n        if (this.state.selectedRecord.nsqlqueryneed === 3) {\n          if (this.state.selectedRecord.nfiltersqlqueryneed === 3) {\n            if (this.state.selectedRecord.nneedconfiguration !== 3) {\n              check = false;\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_CHOOSEFILTERCONFIGURATION\"\n              }));\n            }\n          } else if (this.state.selectedRecord.nsqlquerycode === undefined) {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_SELQCTSQLQUERY\"\n            }));\n            check = false;\n          }\n        }\n      }\n\n      if (check) {\n        let inputData = [];\n        const selectedRecord = { ...this.state.selectedRecord\n        };\n        const reactTemplate = selectedRecord.reactTemplate && selectedRecord.reactTemplate;\n        const masterData = this.props.Login.masterData;\n        const barcodeTemplate = {};\n        let postParam = undefined;\n\n        if (this.props.Login.operation === 'update') {\n          postParam = {\n            inputListName: \"BarcodeTemplate\",\n            selectedObject: \"SelectedBarcodeTemplate\",\n            primaryKeyField: \"nbarcodetemplatecode\"\n          };\n          barcodeTemplate['nbarcodetemplatecode'] = masterData.SelectedBarcodeTemplate.nbarcodetemplatecode;\n        }\n\n        barcodeTemplate['nformcode'] = selectedRecord.nformcode.value;\n        barcodeTemplate['ncontrolcode'] = selectedRecord.ncontrolcode.value;\n        barcodeTemplate['stableprimarykeyname'] = selectedRecord.ncontrolcode.item.stableprimarykeyname;\n        barcodeTemplate['nquerybuildertablecode'] = selectedRecord.ncontrolcode.item.nquerybuildertablecode;\n        barcodeTemplate['stablename'] = selectedRecord.ncontrolcode.item.stablename;\n        barcodeTemplate['jsondata'] = {\n          ['screenfilter']: reactTemplate ? JSON.parse(reactTemplate.jsonString) : [],\n          ['nneedconfiguration']: selectedRecord.nneedconfiguration === 3 ? true : false,\n          ['nbarcodeprint']: selectedRecord.nbarcodeprint === 3 ? true : false,\n          ['valuemember']: reactTemplate ? reactTemplate.valuemember : \"\",\n          ['nsqlqueryneed']: selectedRecord.nsqlqueryneed === 3 ? true : false,\n          ['nfiltersqlqueryneed']: selectedRecord.nfiltersqlqueryneed === 3 ? true : false,\n          ['nsqlquerycode']: selectedRecord.nsqlqueryneed === 3 ? selectedRecord.nfiltersqlqueryneed === 4 || selectedRecord.nfiltersqlqueryneed === undefined ? selectedRecord.nsqlquerycode.value : -1 : -1\n        };\n        barcodeTemplate['jsondata'] = barcodeTemplate['jsondata'];\n        barcodeTemplate['jsonstring'] = JSON.stringify(barcodeTemplate['jsondata']);\n        inputData['barcodetemplate'] = barcodeTemplate;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: this.props.Login.inputParam.methodUrl,\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          postParam,\n          searchRef: this.searchRef\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.state = {\n      isOpen: false,\n      designtemplatemappingData: [],\n      masterStatus: \"\",\n      error: \"\",\n      operation: \"\",\n      screenName: undefined,\n      userLogged: true,\n      selectedDesignTemplateMapping: undefined,\n      sidebarview: false,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showAccordian: true,\n      selectedInput: \"\",\n      selectedRecord: {\n        \"nneedconfiguration\": 4\n      },\n      totalLevel: 0\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchFieldList = [\"sformname\", \"scontrolname\", \"sdisplayname\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    } // if (props.Login.selectedRecord === undefined) {\n    //     return { selectedRecord: {} }\n    // }\n\n\n    return null;\n  }\n\n  render() {\n    const data = [];\n    this.props.Login.masterData.SelectedBarcodeTemplate && this.props.Login.masterData.SelectedBarcodeTemplate.jsondata && this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.screenfilter !== undefined && this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.screenfilter.map(row => {\n      row.children.map(column => {\n        column.children.map(component => {\n          if (component.hasOwnProperty(\"children\")) {\n            component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push({\n                  slabelname: componentrow.label\n                });\n              }\n            });\n          } else {\n            if (component.inputtype === \"combo\") {\n              data.push({\n                slabelname: component.label\n              });\n            }\n          }\n        });\n      });\n    });\n    const addId = this.state.controlMap.has(\"AddBarcodeTemplate\") && this.state.controlMap.get(\"AddBarcodeTemplate\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteBarcodeTemplate\") && this.state.controlMap.get(\"DeleteBarcodeTemplate\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveBarcodeTemplate\") && this.state.controlMap.get(\"ApproveBarcodeTemplate\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditBarcodeTemplate\") && this.state.controlMap.get(\"EditBarcodeTemplate\").ncontrolcode;\n    const retireId = this.state.controlMap.has(\"RetireBarcodeTemplate\") && this.state.controlMap.get(\"RetireBarcodeTemplate\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"BarcodeTemplate\",\n      selectedObject: \"SelectedBarcodeTemplate\",\n      primaryKeyField: \"nbarcodetemplatecode\",\n      fetchUrl: \"barcodetemplate/getBarcodeTemplate\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const addParam = {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_BARCODETEMPLATE\"\n      }),\n      operation: \"create\",\n      userInfo: this.props.Login.userInfo,\n      controlId: addId\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_DESIGNTEMPLATEMAPPING\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.BarcodeTemplate,\n      getMasterDetail: barcodeTemplate => this.props.getBarcodeTemplateDetail(barcodeTemplate, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedBarcodeTemplate,\n      primaryKeyField: \"nbarcodetemplatecode\",\n      mainField: \"sformname\",\n      firstField: \"scontrolname\",\n      secondField: \"sdisplayname\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getBarcodeTemplateComboService(addParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.BarcodeTemplate && this.props.Login.masterData.BarcodeTemplate.length > 0 && this.props.Login.masterData.SelectedBarcodeTemplate ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.scontrolname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.sdisplayname))), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      onClick: () => this.onEditClick(editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \" btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1 // onClick={() => this.ConfirmDelete(this.state.approveId)}>\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      onClick: () => this.onApproveClick(approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(retireId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }),\n      onClick: () => this.onRetireClick(retireId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 69\n      }\n    }))))))), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SELECTSCREENCONTROL\",\n      message: \"Screen Control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 84\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.scontrolname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\",\n      message: \"Number Of Barcode Needed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 84\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.sbarcodeprint))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SQLQUERYNEED\",\n      message: \"Need Screen Filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 84\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.ssqlqueryneed))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FILTERBASEDSQLQUERYNEED\",\n      message: \"Need Screen Filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 84\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.sfiltersqlqueryneed))), this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.nsqlqueryneed && this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.nsfilterqlqueryneed !== false && /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 240\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SQLQUERYNAME\",\n      message: \"Need Screen Filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 88\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 77\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.ssqlqueryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_NEEDSCREENFILTER\",\n      message: \"Need Screen Filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 84\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.SelectedBarcodeTemplate.sneedconfiguration))))))), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"tree-view1 border-left tree-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 57\n      }\n    }, data.length > 0 && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 77\n      }\n    }, \"Filter Template\"), data.length > 0 ? data.map((input, i) => /*#__PURE__*/React.createElement(ListWrapper, {\n      key: i,\n      className: \"form-label-group tree-level list_get\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(NavHeader, {\n      className: \"line\",\n      style: {\n        width: (i + 1) * 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 73\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(ListWrapper, {\n      style: {\n        marginLeft: (i + 8) * 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      className: \"input_custom\",\n      value: input.slabelname,\n      id: \"levelname\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 77\n      }\n    })))) : \"\"))))) : \"\"))))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BarcodePreRegDesign, {\n      closeModal: this.closeModal,\n      saveScreenFilter: this.saveScreenFilter,\n      selectedRecord: { ...this.state.selectedRecord\n      } // nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\n      // sampleType={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item : undefined}\n      // defaultTemplate={this.state.breadCrumbData.length ? this.state.breadCrumbData[1].label === \"IDS_TEMPLATETYPE\" ? this.state.breadCrumbData[1].item : this.state.breadCrumbData[2].item : undefined}\n      //  ncategorybasedflowrequired={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.item.ncategorybasedflowrequired : 4}\n      //searchRef={this.searchRef}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: [{\n        \"idsName\": \"IDS_SCREEN\",\n        \"dataField\": \"nformcode\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"combo\"\n      }, {\n        \"idsName\": \"IDS_CONTROL\",\n        \"dataField\": \"ncontrolcode\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"combo\"\n      }],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddBarcodeTemplate, {\n        qualisList: this.props.Login.qualisList,\n        selectedRecord: { ...this.state.selectedRecord\n        },\n        onComboChange: this.onComboChange,\n        controlList: this.props.Login.controlList,\n        onInputOnChange: this.onInputOnChange,\n        AddFilterDesign: this.AddFilterDesign // lstFilterlevel={this.props.Login.lstFilterlevel}\n        // totalLevel={this.props.Login.totalLevel}\n        ,\n        SqlQuery: this.props.Login.SqlQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        updateState = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = { ...this.props.Login.selectedRecord\n      };\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        controlMap,\n        userRoleControlRights\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getBarcodeTemplateComboService,\n  getBarcodeTemplateControl,\n  getReactInputFields,\n  getReactQuerybuilderTableRecord,\n  getBarcodeTemplateDetail,\n  getEditBarcodeTemplateComboService,\n  filterColumnData\n})(injectIntl(BarcodeTemplate));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/BarcodeTemplate/BarcodeTemplate.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getBarcodeTemplateComboService","getBarcodeTemplateControl","getReactInputFields","getReactQuerybuilderTableRecord","getBarcodeTemplateDetail","getEditBarcodeTemplateComboService","filterColumnData","ReadOnlyText","ContentPanel","constructOptionList","getControlMap","showEsign","ListMaster","SlideOutModal","Esign","DEFAULT_RETURN","ListWrapper","SampleType","transactionStatus","ConfirmMessage","AddBarcodeTemplate","BarcodePreRegDesign","PortalModal","faPenAlt","faPencilAlt","faThumbsUp","faTrashAlt","FontAwesomeIcon","NavHeader","FormInput","rsapi","mapStateToProps","state","Login","BarcodeTemplate","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","onApproveClick","approveId","masterData","SelectedBarcodeTemplate","ntransactionstatus","DRAFT","inputData","userInfo","postParam","undefined","Value","inputListName","selectedObject","primaryKeyField","inputParam","classUrl","methodUrl","operation","selectedRecord","saveType","esignNeeded","userRoleControlRights","nformcode","updateInfo","typeName","data","loadEsign","screenData","openModal","warn","intl","formatMessage","id","onRetireClick","APPROVED","onEditClick","editId","addParam","screenName","controlId","nbarcodetemplatecode","userinfo","saveScreenFilter","modal","lstFilterlevel","totalLevel","layout","JSON","parse","registrationtemplate","jsonString","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","slabelname","label","openPortal","reloadData","searchRef","current","value","displayName","AddFilterDesign","design","reactTemplate","ConfirmDelete","deleteId","confirmMessage","confirm","deleteTemplate","ncontrolCode","primaryKeyValue","fetchUrl","fecthInputObject","validateEsign","sreason","nreasoncode","spredefinedreason","password","closeModal","selectedId","dataList","dataListCount","dataListSubSample","dataListCountSubSample","onComboChange","comboData","fieldName","onInputOnChange","event","target","type","name","checked","YES","NO","onSaveClick","check","nneedconfiguration","nsqlqueryneed","nfiltersqlqueryneed","nsqlquerycode","barcodeTemplate","ncontrolcode","item","stableprimarykeyname","nquerybuildertablecode","stablename","nbarcodeprint","valuemember","stringify","isOpen","designtemplatemappingData","masterStatus","error","userLogged","selectedDesignTemplateMapping","controlMap","Map","showAccordian","selectedInput","createRef","searchFieldList","getDerivedStateFromProps","render","jsondata","screenfilter","addId","has","get","retireId","filterParam","searchedData","parentFunction","length","scontrolname","sdisplayname","indexOf","sbarcodeprint","ssqlqueryneed","sfiltersqlqueryneed","nsfilterqlqueryneed","ssqlqueryname","sneedconfiguration","input","i","width","marginLeft","qualisList","controlList","SqlQuery","componentDidUpdate","previousProps","updateState","Object","values","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getBarcodeTemplateComboService,\r\n    getBarcodeTemplateControl, getReactInputFields, getReactQuerybuilderTableRecord, getBarcodeTemplateDetail,\r\n    getEditBarcodeTemplateComboService, filterColumnData\r\n} from '../../actions';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport {\r\n    SampleType, transactionStatus\r\n} from '../../components/Enumeration';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddBarcodeTemplate from './AddBarcodeTemplate'\r\nimport BarcodePreRegDesign from './BarcodePreRegDesign';\r\nimport PortalModal from '../../PortalModal';\r\nimport { faPenAlt, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport rsapi from '../../rsapi';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BarcodeTemplate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            designtemplatemappingData: [],\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedDesignTemplateMapping: undefined,\r\n            sidebarview: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            selectedInput: \"\",\r\n            selectedRecord: { \"nneedconfiguration\": 4 },\r\n            totalLevel: 0\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"sformname\", \"scontrolname\", \"sdisplayname\"];\r\n\r\n    }\r\n\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord === undefined) {\r\n        //     return { selectedRecord: {} }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        const data = []\r\n\r\n        this.props.Login.masterData.SelectedBarcodeTemplate &&\r\n            this.props.Login.masterData.SelectedBarcodeTemplate.jsondata &&\r\n            this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.screenfilter !== undefined &&\r\n\r\n            this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.screenfilter.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    data.push({ slabelname: componentrow.label });\r\n                                }\r\n                            })\r\n                        } else {\r\n                            if (component.inputtype === \"combo\") {\r\n                                data.push({ slabelname: component.label });\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n\r\n        const addId = this.state.controlMap.has(\"AddBarcodeTemplate\") && this.state.controlMap.get(\"AddBarcodeTemplate\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBarcodeTemplate\") && this.state.controlMap.get(\"DeleteBarcodeTemplate\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveBarcodeTemplate\") && this.state.controlMap.get(\"ApproveBarcodeTemplate\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBarcodeTemplate\") && this.state.controlMap.get(\"EditBarcodeTemplate\").ncontrolcode;\r\n        const retireId = this.state.controlMap.has(\"RetireBarcodeTemplate\") && this.state.controlMap.get(\"RetireBarcodeTemplate\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"BarcodeTemplate\", selectedObject: \"SelectedBarcodeTemplate\", primaryKeyField: \"nbarcodetemplatecode\",\r\n            fetchUrl: \"barcodetemplate/getBarcodeTemplate\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        const addParam = {\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_BARCODETEMPLATE\" }),\r\n            operation: \"create\",\r\n            userInfo: this.props.Login.userInfo,\r\n            controlId: addId,\r\n        }\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_DESIGNTEMPLATEMAPPING\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.BarcodeTemplate}\r\n                                getMasterDetail={(barcodeTemplate) => this.props.getBarcodeTemplateDetail(barcodeTemplate, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBarcodeTemplate}\r\n                                primaryKeyField=\"nbarcodetemplatecode\"\r\n                                mainField=\"sformname\"\r\n                                firstField=\"scontrolname\"\r\n                                secondField=\"sdisplayname\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() => this.props.getBarcodeTemplateComboService(addParam)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div> \r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.BarcodeTemplate && this.props.Login.masterData.BarcodeTemplate.length > 0 && this.props.Login.masterData.SelectedBarcodeTemplate ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedBarcodeTemplate.scontrolname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={10} className=\"d-flex\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                {/* {`${this.props.intl.formatMessage({ id: \"IDS_VERSION\" })} : ${this.props.Login.masterData.SelectedBarcodeTemplate.sversionno}`} */}\r\n                                                                <span className={`btn btn-outlined ${this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`}>\r\n                                                                    {this.props.Login.masterData.SelectedBarcodeTemplate.sdisplayname}\r\n                                                                </span>\r\n\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={2}>\r\n                                                            <div className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                    onClick={() => this.onEditClick(editId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\" btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    // onClick={() => this.ConfirmDelete(this.state.approveId)}>\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                    onClick={() => this.onApproveClick(approveId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faThumbsUp} title={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(retireId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                                                    onClick={() => this.onRetireClick(retireId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n\r\n                                            {\r\n                                                <ContentPanel className=\"panel-main-content\">\r\n                                                    <Card className=\"border-0\">\r\n                                                        <Card.Body className=\"form-static-wrap\">\r\n\r\n                                                            <Row>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_SELECTSCREENCONTROL\" message=\"Screen Control\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.scontrolname}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\" message=\"Number Of Barcode Needed\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.sbarcodeprint}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_SQLQUERYNEED\" message=\"Need Screen Filter\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.ssqlqueryneed}\r\n                                                                        </ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_FILTERBASEDSQLQUERYNEED\" message=\"Need Screen Filter\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.sfiltersqlqueryneed}\r\n                                                                        </ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                                {\r\n                                                                    this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.nsqlqueryneed && this.props.Login.masterData.SelectedBarcodeTemplate.jsondata.nsfilterqlqueryneed !==false && <Col md={4}>\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id=\"IDS_SQLQUERYNAME\" message=\"Need Screen Filter\" /></FormLabel>\r\n                                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.ssqlqueryname}\r\n                                                                            </ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                }\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_NEEDSCREENFILTER\" message=\"Need Screen Filter\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedBarcodeTemplate.sneedconfiguration}\r\n                                                                        </ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                            </Row>\r\n\r\n\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </ContentPanel>\r\n\r\n                                            }\r\n                                           \r\n                                            {<ContentPanel className=\"panel-main-content\">\r\n\r\n                                                <ListWrapper className=\"card-body\">\r\n                                                    <React.Fragment>\r\n                                                        <ListWrapper className=\"tree-view1 border-left tree-left \">\r\n                                                       { data.length > 0 && <h4>{\"Filter Template\"}</h4>}\r\n                                                            {data.length > 0 ?\r\n                                                                data.map((input, i) =>\r\n                                                                    <ListWrapper key={i} className=\"form-label-group tree-level list_get\">\r\n                                                                        <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                                                        {/* <NavHeader id={i} \r\n                                                                        //value={totalLevel}\r\n                                                                            className=\"add_field_button\">+</NavHeader> */}\r\n                                                                        {/* <NavHeader className=\"levelcolour\" md={1}>Level {i + 1}</NavHeader>  */}\r\n                                                                        {/* <NavHeader className=\"levelcolour\" md={1}>{this.props.intl.formatMessage({ id: \"IDS_LEVEL\" })} {i + 1}</NavHeader> */}\r\n                                                                        <ListWrapper style={{ marginLeft: (i + 8) * 10 }}>\r\n                                                                            <FormInput className=\"input_custom\" value={input.slabelname} id=\"levelname\" type=\"text\" />\r\n                                                                        </ListWrapper>\r\n                                                                    </ListWrapper>\r\n                                                                ) : \"\"\r\n                                                            }\r\n                                                        </ListWrapper>\r\n                                                    </React.Fragment>\r\n                                                </ListWrapper>\r\n                                            </ContentPanel>}\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <BarcodePreRegDesign\r\n                            closeModal={this.closeModal}\r\n                            saveScreenFilter={this.saveScreenFilter}\r\n                            selectedRecord={{ ...this.state.selectedRecord }}\r\n                        // nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\r\n                        // sampleType={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item : undefined}\r\n                        // defaultTemplate={this.state.breadCrumbData.length ? this.state.breadCrumbData[1].label === \"IDS_TEMPLATETYPE\" ? this.state.breadCrumbData[1].item : this.state.breadCrumbData[2].item : undefined}\r\n                        //  ncategorybasedflowrequired={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.item.ncategorybasedflowrequired : 4}\r\n                        //searchRef={this.searchRef}\r\n                        />\r\n                    </PortalModal> : \"\"}\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={[\r\n                            { \"idsName\": \"IDS_SCREEN\", \"dataField\": \"nformcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n                            { \"idsName\": \"IDS_CONTROL\", \"dataField\": \"ncontrolcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }\r\n                        ]}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddBarcodeTemplate\r\n                                qualisList={this.props.Login.qualisList}\r\n                                selectedRecord={{ ...this.state.selectedRecord }}\r\n                                onComboChange={this.onComboChange}\r\n                                controlList={this.props.Login.controlList}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                AddFilterDesign={this.AddFilterDesign}\r\n                                // lstFilterlevel={this.props.Login.lstFilterlevel}\r\n                                // totalLevel={this.props.Login.totalLevel}\r\n                                SqlQuery={this.props.Login.SqlQuery}\r\n                            ></AddBarcodeTemplate>}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    onApproveClick = (approveId) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.DRAFT) {\r\n\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"barcodetemplate\"] = { \"nbarcodetemplatecode\": this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"] ? this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"].Value : \"\" };\r\n            inputData[\"barcodetemplate\"] = this.props.Login.masterData.SelectedBarcodeTemplate;\r\n            postParam = { inputListName: \"BarcodeTemplate\", selectedObject: \"SelectedBarcodeTemplate\", primaryKeyField: \"nbarcodetemplatecode\" };\r\n            const inputParam = {\r\n                classUrl: 'barcodetemplate',\r\n                methodUrl: \"BarcodeTemplate\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam,\r\n                selectedRecord: { ...this.state.selectedRecord }\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"approve\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onRetireClick = (approveId) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus === transactionStatus.APPROVED) {\r\n\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"barcodetemplate\"] = { \"nbarcodetemplatecode\": this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"] ? this.props.Login.masterData.SelectedBarcodeTemplate[\"nbarcodetemplatecode\"].Value : \"\" };\r\n            inputData[\"barcodetemplate\"] = this.props.Login.masterData.SelectedBarcodeTemplate;\r\n            postParam = { inputListName: \"BarcodeTemplate\", selectedObject: \"SelectedBarcodeTemplate\", primaryKeyField: \"nbarcodetemplatecode\" };\r\n            const inputParam = {\r\n                classUrl: 'barcodetemplate',\r\n                methodUrl: \"BarcodeTemplate\",\r\n                inputData: inputData,\r\n                operation: \"retire\", postParam,\r\n                selectedRecord: { ...this.state.selectedRecord }\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"retire\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAPPROVERECORD\" }))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onEditClick = (editId) => {\r\n\r\n        const addParam = {\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_BARCODETEMPLATE\" }),\r\n            operation: \"update\",\r\n            userInfo: this.props.Login.userInfo,\r\n            controlId: editId,\r\n            selectedRecord: this.state.selectedRecord,\r\n            nbarcodetemplatecode: this.props.Login.masterData.SelectedBarcodeTemplate.nbarcodetemplatecode,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getEditBarcodeTemplateComboService(addParam)\r\n    }\r\n\r\n\r\n    saveScreenFilter = (inputData, modal) => {\r\n        const lstFilterlevel = [];\r\n        let totalLevel = 0\r\n        const layout = JSON.parse(inputData.registrationtemplate.jsonString);\r\n\r\n        layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    if (component.hasOwnProperty(\"children\")) {\r\n                        component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"combo\") {\r\n                                totalLevel = totalLevel++;\r\n                                lstFilterlevel.push({ slabelname: componentrow.label })\r\n                            }\r\n                        })\r\n                    } else {\r\n                        if (component.inputtype === \"combo\") {\r\n                            lstFilterlevel.push({ slabelname: component.label })\r\n                            totalLevel = totalLevel++\r\n                        }\r\n\r\n                    }\r\n\r\n                })\r\n            })\r\n        })\r\n\r\n\r\n        const selectedRecord = { ...this.state.selectedRecord }\r\n        selectedRecord['reactTemplate'] = inputData.registrationtemplate\r\n        selectedRecord['lstFilterlevel'] = lstFilterlevel\r\n        selectedRecord['totalLevel'] = totalLevel\r\n\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                // reactTemplate: inputData.registrationtemplate,\r\n                // lstFilterlevel, totalLevel,\r\n                selectedRecord,\r\n                openPortal: false, openModal: true\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n        //        this.setState({ reactTemplate: inputData.registrationtemplate, lstFilterlevel,totalLevel })\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"barcodetemplate\",\r\n            methodUrl: \"BarcodeTemplate\",\r\n            displayName: this.props.Login.displayName,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    AddFilterDesign = () => {\r\n        if (this.state.selectedRecord['nformcode']) {\r\n            if (this.state.selectedRecord['ncontrolcode']) {\r\n\r\n                let design = []\r\n                if (this.state.selectedRecord.reactTemplate && this.state.selectedRecord.reactTemplate.jsonString) {\r\n                    design = JSON.parse(this.state.selectedRecord.reactTemplate.jsonString);\r\n                } else {\r\n                    design = [\r\n                        {\r\n                            \"id\": \"pv1OWbsMYq\",\r\n                            \"type\": \"row\",\r\n                            \"children\": [\r\n                                {\r\n                                    \"id\": \"2zMtRhjb2t\",\r\n                                    \"type\": \"column\",\r\n                                    \"children\": []\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openPortal: true, openModal: false, design\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTHECONTROL\" }));\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTHEFORM\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n\r\n        let { selectedRecord, userRoleControlRights, controlMap } = this.state;\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]\r\n                    && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                updateState = true;\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = { ...this.props.Login.selectedRecord }\r\n        }\r\n\r\n\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, controlMap, userRoleControlRights\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteTemplate(deleteId));\r\n    }\r\n\r\n    deleteTemplate = (ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedBarcodeTemplate.ntransactionstatus !== transactionStatus.DRAFT) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"BarcodeTemplate\", selectedObject: \"SelectedBarcodeTemplate\",\r\n                primaryKeyField: \"nbarcodetemplatecode\",\r\n                primaryKeyValue: this.props.Login.masterData.SelectedBarcodeTemplate.nbarcodetemplatecode,\r\n                fetchUrl: \"barcodetemplate/getBarcodeTemplate\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const operation = \"delete\"\r\n\r\n            const inputParam = {\r\n                classUrl: \"barcodetemplate\", //this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"BarcodeTemplate\", postParam,\r\n                inputData: {\r\n                    // \"barcodetemplate\": selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"barcodetemplate\": this.props.Login.masterData.SelectedBarcodeTemplate\r\n                },\r\n                operation,\r\n                selectedRecord: { ...this.state.selectedRecord }\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.Login.screenName, operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.openPortal) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openPortal: false, openModal: true }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            if (this.props.Login.loadEsign) {\r\n                if (this.props.Login.operation === \"approve\"\r\n                    || this.props.Login.operation === \"delete\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                    selectedRecord = {};\r\n                }\r\n                else {\r\n                    loadEsign = false;\r\n                }\r\n            }\r\n            else {\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, loadEsign, selectedRecord, selectedId: null, dataList: [], dataListCount: [], dataListSubSample: [], dataListCountSubSample: [] }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = { ...this.state.selectedRecord } || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        if (fieldName === 'nformcode') {\r\n            selectedRecord['reactTemplate'] = undefined\r\n            selectedRecord['lstFilterlevel'] = []\r\n            selectedRecord['totalLevel'] = 0\r\n            selectedRecord['ncontrolcode'] = undefined\r\n            const map = {\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n\r\n            }\r\n            this.props.getBarcodeTemplateControl(map, selectedRecord);\r\n\r\n            //     // const updateInfo = {\r\n            //     //     typeName: DEFAULT_RETURN,\r\n            //     //     data: {\r\n            //     //         loading: true,\r\n            //     //     }\r\n            //     // }\r\n            //   //  this.props.updateStore(updateInfo);\r\n\r\n            //     rsapi.post(\"barcodetemplate/getBarcodeTemplateControl\", { 'userinfo': this.props.Login.userInfo, nformcode: selectedRecord.nformcode.value })\r\n            //         .then(response => {\r\n            //             const qualisMap = constructOptionList(response.data[\"controlList\"] || [], \"ncontrolcode\",\r\n            //                 \"sdisplayname\", undefined, undefined, true);\r\n            //             const qualisList = qualisMap.get(\"OptionList\");\r\n\r\n            //             const updateInfo = {\r\n            //                 typeName: DEFAULT_RETURN,\r\n            //                 data: {\r\n            //                     loading: false,\r\n            //                     controlList: qualisList,\r\n            //                     selectedRecord,\r\n            //                 }\r\n            //             }\r\n            //             this.props.updateStore(updateInfo);\r\n            //             this.setState({selectedRecord})\r\n            //         })\r\n\r\n\r\n        } else if (fieldName === 'ncontrolcode') {\r\n\r\n            selectedRecord['reactTemplate'] = undefined\r\n            selectedRecord['lstFilterlevel'] = []\r\n            selectedRecord['totalLevel'] = 0\r\n\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    // reactTemplate: undefined,\r\n                    // lstFilterlevel: [], totalLevel: 0,\r\n                    selectedRecord\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            if (event.target.name === \"nsqlqueryneed\") {\r\n                if (event.target.value === false) {\r\n                    delete selectedRecord['nsqlquerycode']\r\n                     selectedRecord['nfiltersqlqueryneed']=4\r\n                }\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            } \r\n            else if(event.target.name === \"nfiltersqlqueryneed\"){\r\n                if (event.target.value === true) {\r\n                    delete selectedRecord['nsqlquerycode']\r\n                }\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n        }\r\n        if (event.target.name === 'nneedconfiguration') {\r\n            if (selectedRecord[event.target.name] === 4) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        reactTemplate: undefined,\r\n                        lstFilterlevel: [], totalLevel: 0,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveClick = (saveType) => {\r\n        let check = true;\r\n        if (this.state.selectedRecord.nneedconfiguration === 3) {\r\n            if (this.state.selectedRecord.reactTemplate === undefined) {\r\n                check = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CREATEFILTERCONFIGURATION\" }))\r\n            }\r\n\r\n        }\r\n        if(check!==false){\r\n            if (this.state.selectedRecord.nsqlqueryneed === 3) {\r\n                if(this.state.selectedRecord.nfiltersqlqueryneed===3){\r\n                    if (this.state.selectedRecord.nneedconfiguration !== 3) {\r\n                        check = false\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_CHOOSEFILTERCONFIGURATION\" }))\r\n                }\r\n            }\r\n                else if (this.state.selectedRecord.nsqlquerycode === undefined) {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELQCTSQLQUERY\" }))\r\n                    check = false\r\n                }\r\n    \r\n            }\r\n        }\r\n       \r\n        if (check) {\r\n            let inputData = [];\r\n            const selectedRecord = { ...this.state.selectedRecord }\r\n            const reactTemplate = selectedRecord.reactTemplate && selectedRecord.reactTemplate\r\n            const masterData = this.props.Login.masterData;\r\n            const barcodeTemplate = {}\r\n            let postParam = undefined;\r\n            if (this.props.Login.operation === 'update') {\r\n                postParam = { inputListName: \"BarcodeTemplate\", selectedObject: \"SelectedBarcodeTemplate\", primaryKeyField: \"nbarcodetemplatecode\" };\r\n                barcodeTemplate['nbarcodetemplatecode'] = masterData.SelectedBarcodeTemplate.nbarcodetemplatecode\r\n            }\r\n\r\n            barcodeTemplate['nformcode'] = selectedRecord.nformcode.value\r\n            barcodeTemplate['ncontrolcode'] = selectedRecord.ncontrolcode.value\r\n            barcodeTemplate['stableprimarykeyname'] = selectedRecord.ncontrolcode.item.stableprimarykeyname\r\n            barcodeTemplate['nquerybuildertablecode'] = selectedRecord.ncontrolcode.item.nquerybuildertablecode\r\n            barcodeTemplate['stablename'] = selectedRecord.ncontrolcode.item.stablename\r\n            barcodeTemplate['jsondata'] = {\r\n                ['screenfilter']: reactTemplate ? JSON.parse(reactTemplate.jsonString) : [],\r\n                ['nneedconfiguration']: selectedRecord.nneedconfiguration === 3 ? true : false,\r\n                ['nbarcodeprint']: selectedRecord.nbarcodeprint === 3 ? true : false,\r\n                ['valuemember']: reactTemplate ? reactTemplate.valuemember : \"\",\r\n                ['nsqlqueryneed']: selectedRecord.nsqlqueryneed === 3 ? true : false,\r\n                ['nfiltersqlqueryneed']: selectedRecord.nfiltersqlqueryneed === 3 ? true : false,\r\n                ['nsqlquerycode']: selectedRecord.nsqlqueryneed === 3 ?(selectedRecord.nfiltersqlqueryneed===4||selectedRecord.nfiltersqlqueryneed===undefined)?  selectedRecord.nsqlquerycode.value:-1 : -1,\r\n            }\r\n\r\n            barcodeTemplate['jsondata'] = barcodeTemplate['jsondata'];\r\n            barcodeTemplate['jsonstring'] = JSON.stringify(barcodeTemplate['jsondata']);\r\n\r\n            inputData['barcodetemplate'] = barcodeTemplate;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: this.props.Login.inputParam.methodUrl,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: this.props.Login.operation, postParam, searchRef: this.searchRef,\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        saveType,\r\n\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getBarcodeTemplateComboService, getBarcodeTemplateControl,\r\n    getReactInputFields, getReactQuerybuilderTableRecord, getBarcodeTemplateDetail,\r\n    getEditBarcodeTemplateComboService, filterColumnData\r\n})(injectIntl(BarcodeTemplate));\r\n\r\n"]},"metadata":{},"sourceType":"module"}