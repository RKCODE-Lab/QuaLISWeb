{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\JobAllocation.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { toast } from 'react-toastify';\nimport { convertDateValuetoString, rearrangeDateFormat, constructOptionList, getControlMap, sortData, getSameRecordFromTwoArrays, showEsign, convertDateTimetoStringDBFormat, validatePhoneNumber } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\nimport { updateStore, callService, crudMaster, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation, getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation, getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getInstrumentName, getInstrumentId, getUsers, ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo, filterTransactionList, AllotJobActionCalendar, getSectionTest, updateSectionJobAllocation, getUsersSection } from '../../actions';\nimport JobAllocationFilter from './JobAllocationFilter';\nimport SplitterLayout from \"react-splitter-layout\";\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { transactionStatus, SideBarSeqno, SideBarTabIndex, designProperties } from '../../components/Enumeration';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync, faEye, faLink, faChevronRight, faComments, faClock, faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { ContentPanel } from '../../components/App.styles';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { ReactComponent as ReceivedInLab } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/receivedlab.svg\";\nimport { ReactComponent as Allotted } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotted.svg\";\nimport { ReactComponent as AnotherUser } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotanotheruser.svg\";\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { ReactComponent as SectionChange } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/section-change.svg\";\nimport { ReactComponent as AllotJob } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotjob.svg\";\nimport fullviewExpand from \"../../assets/image/fullview-expand.svg\";\nimport fullviewCollapse from \"../../assets/image/fullview-collapse.svg\"; // import { ReactComponent as Analystcalendar } from '../../assets/image/Analystcalendar.svg';\n// import { ReactComponent as Instrumentcalendar } from '../../assets/image/instrumentcalendar.svg';\n\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport AddJobAllocation from './AddJobAllocation';\nimport AllotAnotherUser from './AllotAnotherUser';\nimport ScheduleSection from './ScheduleSection';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions'; // import AnalystCalenderBasedOnUser from './AnalystCalenderBasedOnUser'\n\nimport NewJobAlloct from '../joballocation/calender/NewJobAlloct';\nimport { checkBoxOperation } from '../../components/Enumeration';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass JobAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parentScheduleState = data => {\n      this.setState({\n        data: data\n      }); // this.state.\n    };\n\n    this.parentSelectRecord = (data, analyst) => {\n      this.setState({\n        calenderSelectedRecord: data,\n        data: analyst\n      });\n    };\n\n    this.closeFilter = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let inputValues = {\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        // ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        ApprovalConfigVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        //FromDate:this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date(),\n        // ToDate:this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date(),\n        UserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\n        JobStatus: this.props.Login.masterData.JobStatus || {},\n        TestValue: this.props.Login.masterData.realTestValue || {},\n        defaultRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        defaultRegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        defaultApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        defaultDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        defaultFilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        defaultSampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        defaultTestValue: this.props.Login.masterData.realTestValue || {},\n        defaultUserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        RegistrationType: this.props.Login.masterData.realRegistrationTypeList || [],\n        RegistrationSubType: this.props.Login.masterData.realRegistrationSubTypeList || [],\n        ApprovalConfigVersion: this.props.Login.masterData.realApprovalConfigVersionList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList1 || [],\n        UserSection: this.props.Login.masterData.realUserSectionList || [],\n        Test: this.props.Login.masterData.realTestList || [],\n        DynamicDesignMapping: this.props.Login.masterData.realDynamicDesignMappingList || [],\n        defaultSampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handleSamplePageChange = e => {\n      this.setState({\n        sampleskip: e.skip,\n        sampletake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subsampleskip: e.skip,\n        subsampletake: e.take\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n          if (activeTestTab === \"IDS_TESTVIEW\") {\n            let arr = [];\n            JASelectedTest && JASelectedTest.map(item => {\n              if (!arr.includes(item.ntransactionstatus)) {\n                arr.push(item.ntransactionstatus);\n              }\n            });\n            let transstatus = arr.map(nsectioncode => nsectioncode).join(\",\");\n\n            if (transstatus.includes(\"20\")) {\n              let inputData = {\n                masterData: this.props.Login.masterData,\n                JASelectedTest: JASelectedTest,\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n                userinfo: this.props.Login.userInfo,\n                activeTestTab: activeTestTab,\n                screenName: activeTestTab,\n                testCommentDataState: this.state.testCommentDataState,\n                testAttachmentDataState: this.state.testAttachmentDataState,\n                testViewDataState: this.state.testViewDataState,\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n                activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n              };\n              this.props.getTestChildTabDetailJobAllocation(inputData, true);\n            } else {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTALLOTTEST\"\n              }));\n            }\n          } else {\n            let inputData = {\n              masterData: this.props.Login.masterData,\n              JASelectedTest: JASelectedTest,\n              ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n              npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n              userinfo: this.props.Login.userInfo,\n              activeTestTab: activeTestTab,\n              screenName: activeTestTab,\n              testCommentDataState: this.state.testCommentDataState,\n              testAttachmentDataState: this.state.testAttachmentDataState,\n              testViewDataState: this.state.testViewDataState,\n              activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n              activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n            };\n            this.props.getTestChildTabDetailJobAllocation(inputData, true);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subsampleCommentDataState: this.state.subsampleCommentDataState,\n            subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.JASelectedSample,\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      }\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      }\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status != \"click\") {\n        if (index === SideBarTabIndex.ATTACHMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.COMMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTCOMMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.TESTVIEW) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTVIEW\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.ANALYSTCALENDAR) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_ANALYSTCALENDAR\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else {\n          if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n                activeTabId: id\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName === \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 17\n        }\n      }) : screenName === \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 21\n        }\n      }) : screenName === \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0 ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {},\n        SingleItem: this.state.SingleItem,\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.JASelectedSample,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_SAMPLEGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 29\n        }\n      }) : screenName === \"IDS_ALLOTTEDTEST\" ? this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0 ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {},\n        SingleItem: this.state.testItem,\n        screenName: \"IDS_TESTVIEW\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        primaryKeyField: \"ntransactiontestcode\",\n        selectedSample: this.props.Login.masterData.TestView,\n        dataState: this.state.testGridDataState,\n        dataStateChange: this.testGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicTestGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_TESTGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 33\n        }\n      }) // : screenName === \"IDS_ANALYSTCALENDAR\" ?\n      //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //         <DayView numberOfDays={3} />\n      //         <WeekView />\n      //         <MonthView />   \n      //     </Scheduler>        \n      : \"\";\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.JA_TEST || [];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\"); //let sampleList = this.props.Login.masterData.JA_SAMPLE || [];\n\n      let sampleskip = this.state.sampleskip;\n      let sampletake = this.state.sampletake;\n      let sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake); //sampleList = sampleList.slice(skip, skip + take);\n\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.TEST,\n        screenName: \"IDS_TESTATTACHMENTS\",\n        selectedMaster: \"JASelectedTest\",\n        onSaveClick: this.onAttachmentSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"dcreateddate\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1853,\n          columnNumber: 62\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JASelectedSample\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        isneedHeader: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake,\n        sampleskip,\n        sampletake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n      let sampleList = this.props.Login.masterData.JA_SAMPLE || [];\n      sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1962,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        masterData: this.props.Login.masterData,\n        isTestComment: false,\n        masterList: selectedSubSampleList,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subsampleCommentDataState,\n        dataStateChange: this.subsampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2009,\n          columnNumber: 56\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false,\n        masterList: selectedSampleList,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.sampleCommentDataState,\n        dataStateChange: this.sampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JASelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2055,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTVIEW\":\n          this.setState({\n            testViewDataState: event.testViewDataState\n          });\n          break;\n\n        default:\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.subsampleDataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subsampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLECOMMENTS\":\n          this.setState({\n            sampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEATTACHMENTS\":\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.testGridDataStateChange = event => {\n      this.setState({\n        testGridDataState: event.dataState\n      });\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onSampleTabChange = tabProps => {\n      const activeSampleTab = tabProps.screenName;\n\n      if (activeSampleTab !== this.props.Login.activeSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSample: this.props.Login.masterData.JASelectedSample,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSampleTab,\n          activeSampleTab,\n          activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n        };\n        this.props.getSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onSubSampleTabChange = tabProps => {\n      const activeSubSampleTab = tabProps.screenName;\n\n      if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSubSampleTab,\n          activeSubSampleTab,\n          subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\n          subSampleCommentDataState: this.state.subsampleCommentDataState,\n          activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\n        };\n        this.props.getSubSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onTestTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n\n      if (activeTestTab !== this.props.Login.activeTestTab) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\n            JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab: activeTestTab,\n            screenName: activeTestTab,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getTestChildTabDetailJobAllocation(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake,\n        sampleskip,\n        sampletake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\n      sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n      }\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n      if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestComments(saveParam, selectedTestList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleComments(saveParam, acceptList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleComments(saveParam, acceptList);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultSampleTypeValue: comboData.item,\n              realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\n              realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\n            };\n            this.props.getRegTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultRegTypeValue: comboData.item,\n              realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\n              realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\n            };\n            this.props.getRegSubTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\n              realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                defaultRegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getAppConfigVersionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'napprovalconfigversioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\n            inputParamData = {\n              nflag: 5,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString(),\n              realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\n              realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\n            };\n            this.props.getDesignTemplateJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\n            inputParamData = {\n              nflag: 6,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\n              nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultUserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString()\n            };\n            this.props.getSectionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntransactionstatus') {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              nflag: 7,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultFilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\n            };\n            this.props.getFilterStatusJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultTestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultDesignTemplateMappingValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode\n            };\n            this.props.getTestStatusJobAllocation(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.handleFilterDateChange = (dateName, dateValue) => {\n      let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n          nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow,\n          fromdate: String(fromdate),\n          todate: String(todate),\n          userinfo: this.props.Login.userInfo,\n          realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\n          realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getAppConfigVersionJobAllocation(inputParam);\n    };\n\n    this.onReload = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue;\n      let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue;\n      let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue;\n      let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue;\n      let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue;\n      let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue;\n      let defaultTestValue = this.props.Login.masterData.realTestValue;\n      let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        defaultSampleTypeValue,\n        defaultRegTypeValue,\n        defaultRegSubTypeValue,\n        defaultFilterStatusValue,\n        defaultApprovalVersionValue,\n        defaultUserSectionValue,\n        defaultTestValue,\n        defaultDesignTemplateMappingValue\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue !== undefined ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\" : \"-1\" : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue !== undefined ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode : -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue != undefined ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : -1 : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue !== undefined ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        //ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT //ntype: 2\n\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\") {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          sampleskip: this.state.sampleskip,\n          sampletake: this.state.sampletake,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue;\n      let realTestValue = this.props.Login.masterData.defaultTestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType;\n      let realRegistrationTypeList = this.props.Login.masterData.RegistrationType;\n      let realRegistrationSubTypeList = this.props.Login.masterData.RegistrationSubType;\n      let realApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion;\n      let realFilterStatusList1 = this.props.Login.masterData.FilterStatus;\n      let realUserSectionList = this.props.Login.masterData.UserSection;\n      let realTestList = this.props.Login.masterData.Test;\n      let realDynamicDesignMappingList = this.props.Login.masterData.DynamicDesignMapping;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue,\n        realSampleTypeList,\n        realRegistrationTypeList,\n        realRegistrationSubTypeList,\n        realApprovalConfigVersionList,\n        realFilterStatusList1,\n        realUserSectionList,\n        realTestList,\n        realDynamicDesignMappingList\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.defaultTestValue.ntestcode) : null,\n        //ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT //ntype: 2\n\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== \"undefined\") {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchSampleRef: this.searchSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.CancelStatus = cancelId => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n      if (JASelectedTest && JASelectedTest.length > 0) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let inputParam = {};\n        let arr = []; // START ALPD-3570 VISHAKH\n\n        let testList = [];\n\n        if (this.props.Login.masterData.searchedTest !== undefined) {\n          testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n        } else {\n          testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n        }\n\n        let cancelList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\"); // JASelectedTest && JASelectedTest.map((item) => {\n        //     if (!arr.includes(item.nsectioncode)) {\n        //         arr.push(item.nsectioncode)\n        //     }\n        // }\n        // )\n        // END ALPD-3570 VISHAKH\n\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          // ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\n          ntransactionstatus: \"0\",\n          // nsectioncode: arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\",\n          nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\n          ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n          // npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          // ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          // ntransactiontestcode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\n          npreregno: cancelList ? cancelList.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: cancelList ? cancelList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          ntransactiontestcode: cancelList ? cancelList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: cancelId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          //checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n          activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n          activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n        };\n        inputParam = {\n          inputData: Map,\n          postParamList: this.postParamList,\n          classUrl: \"joballocation\",\n          operation: 'cancel',\n          methodUrl: \"Test\",\n          action: \"canceltest\"\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'cancel'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.CancelTestWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onJobAllocationTestWise = action => {\n      if (action.scontrolname === \"Analyst Calendar\") {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let inputParam = {};\n        let Map = {\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: action.ncontrolcode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          operation: \"ViewAnalystCalendar\",\n          openModal: true\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.ViewAnalystCalendar(inputParam);\n      } else if (action.scontrolname === \"Instrument Calendar\") {}\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.operation === \"AllotJob\") {\n        //inputParam = this.onSaveAllotJobInSchedule(saveType, formRef);\n        this.onSaveAllotJob(saveType, formRef);\n      } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n        this.onSaveAllotAnotherUser(saveType, formRef);\n      } else if (this.props.Login.operation === \"Reschedule\") {\n        this.onSaveReschedule(saveType, formRef);\n      } else if (this.props.Login.operation === \"AllotJobCalendar\") {\n        this.onSaveAllotJobInSchedule(saveType);\n      } else if (this.props.Login.operation === \"updateSection\") {\n        this.onSaveSection(saveType, formRef);\n      }\n    };\n\n    this.onSaveAllotJobInSchedule = saveType => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let allotjob = this.state.calenderSelectedRecord; //  if (allotjob['ntechniquecode']) {\n\n      if (allotjob['nusercode']) {\n        const data = this.state.data.filter(x => x.insertRecord);\n\n        if (data.length > 0) {\n          const josnArray = [];\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest; // START ALPD-3570 VISHAKH\n          // let arr = [];\n          // this.props.Login.masterData.JASelectedSample &&\n          //     this.props.Login.masterData.JASelectedSample.map((item) => {\n          //         if (!arr.includes(item.nsectioncode)) {\n          //             arr.push(item.nsectioncode)\n          //         }\n          //     }\n          //     )\n          // END ALPD-3570 VISHAKH\n\n          JASelectedTest && JASelectedTest.map(item => {\n            const sleectedData = data.filter(x => x.ntransactiontestcode === item.ntransactiontestcode);\n\n            if (sleectedData.length > 0) {\n              const val = {\n                \"Technique\": {\n                  label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n                  value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n                },\n                \"Users\": {\n                  label: allotjob.nusercode.label,\n                  value: allotjob.nusercode.value\n                },\n                \"UserStartDate\": convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo),\n                \"UserEndDate\": convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo),\n                \"UserHoldDuration\": -1,\n                \"UserPeriod\": {\n                  label: \"Hour(s)\",\n                  value: -1\n                },\n                \"InstrumentCategory\": {\n                  label: \"\",\n                  value: sleectedData[0].InstrumentCategory || -1\n                },\n                \"InstrumentName\": {\n                  label: \"\",\n                  value: sleectedData[0].InstrumentName || -1\n                },\n                \"Instrument\": {\n                  label: \"\",\n                  value: sleectedData[0].Instrument || -1\n                },\n                \"InstrumentStartDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo) : \"\",\n                \"InstrumentEndDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo) : \"\",\n                \"InstrumentHoldDuration\": -1,\n                \"InstrumentPeriod\": {\n                  label: 'Hour(s)',\n                  value: -1\n                },\n                \"Comments\": sleectedData[0].description || \"\"\n              };\n              const valJsonUi = {\n                \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n                \"Users\": allotjob.nusercode.label,\n                \"UserStartDate\": val.UserStartDate,\n                \"UserEndDate\": val.UserEndDate,\n                \"InstrumentStartDate\": val.InstrumentStartDate || \"\",\n                \"InstrumentEndDate\": val.InstrumentEndDate || \"\",\n                \"Comments\": val.description || \"\"\n              };\n              const objJobAllocation = {};\n              objJobAllocation['jsondata'] = JSON.stringify(val);\n              objJobAllocation['jsonuidata'] = JSON.stringify(valJsonUi);\n              objJobAllocation[\"ninstrumentcatcode\"] = val.InstrumentCategory.value || -1;\n              objJobAllocation[\"ninstrumentcode\"] = val.Instrument.value || -1;\n              objJobAllocation[\"ninstrumentnamecode\"] = val.InstrumentName.value || -1;\n              josnArray.push(objJobAllocation);\n            }\n          });\n          JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n          JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n          JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\"; // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n\n          JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\n          JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n          JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n          JobAllocationData = { ...JobAllocationData,\n            ...josnArray[0]\n          };\n          JobAllocationData[\"nuserperiodcode\"] = -1;\n          JobAllocationData[\"ninstrumentperiodcode\"] = -1;\n          JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n          JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n          JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n          JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n          JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n          JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n          JobAllocationData[\"activeSampleTab\"] = \"IDS_SAMPLEATTACHMENTS\";\n          JobAllocationData[\"activeSubSampleTab\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\n          JobAllocationData[\"activeTestTab\"] = \"IDS_TESTATTACHMENTS\";\n          inputParam = {\n            classUrl: \"joballocation\",\n            methodUrl: \"Create\",\n            displayName: this.props.Login.inputParam.displayName,\n            inputData: JobAllocationData,\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n            operation: this.props.Login.operation,\n            saveType,\n            searchRef: this.searchRef,\n            postParamList: this.postParamList,\n            action: \"AllotJobCalendar\"\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                screenName: this.props.intl.formatMessage({\n                  id: \"Job Allocation\"\n                }),\n                operation: this.props.Login.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n            this.setState({\n              data: [],\n              calenderSelectedRecord: {}\n            });\n          } else {\n            this.props.AllotJobActionCalendar(inputParam);\n            this.setState({\n              data: [],\n              calenderSelectedRecord: {}\n            });\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ADDANYONETESTTOADD\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSER\"\n        }));\n      } //} else {\n      //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTECHNIQUE\" }))\n      // }\n\n    };\n\n    this.onSaveAllotJob = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"allotjobdata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"InstrumentName\": {\n          label: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\n          value: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1\n        },\n        \"InstrumentId\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"allotjobuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"InstrumentName\": allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\n        \"InstrumentId\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest; // START ALPD-3570 VISHAKH\n      // let arr = [];\n      // JASelectedTest && JASelectedTest.map((item) => {\n      //     if (!arr.includes(item.nsectioncode)) {\n      //         arr.push(item.nsectioncode)\n      //     }\n      // }\n      // )\n      // END ALPD-3570 VISHAKH\n\n      let testList = [];\n      let {\n        testskip,\n        testtake\n      } = this.state;\n\n      if (this.props.Login.masterData.searchedTest !== undefined) {\n        // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n        testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n      } else {\n        testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n      }\n\n      let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]); // JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      // JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      // JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n\n      JobAllocationData[\"npreregno\"] = allotList ? allotList.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = allotList ? allotList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = allotList ? allotList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\"; // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentnamecode\"] = allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = 1;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"allotjob\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.AllotJobAction(inputParam);\n      }\n    };\n\n    this.onSaveAllotAnotherUser = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"anotheruserdata\"] = {\n        \"Technique\": {\n          label: this.props.Login.Technique,\n          value: this.props.Login.TechniqueCode\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"anotheruseruidata\"] = {\n        \"Technique\": this.props.Login.Technique,\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"Comments\": allotjob.scomments\n      }; // let arr = [];\n\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest; // START ALPD-3570 VISHAKH\n      // JASelectedTest && JASelectedTest.map((item) => {\n      //     if (!arr.includes(item.nsectioncode)) {\n      //         arr.push(item.nsectioncode)\n      //     }\n      // }\n      // )\n      // END ALPD-3570 VISHAKH\n\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"anotheruserdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"anotheruseruidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"ntransstatus\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionstatus).join(\",\") : \"\"; //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\n      JobAllocationData[\"ntechniquecode\"] = this.props.Login.TechniqueCode;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = -1;\n      JobAllocationData[\"ninstrumentnamecode\"] = -1;\n      JobAllocationData[\"ninstrumentcode\"] = -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = 1;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"allotanotheruser\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.AllotAnotherUserAction(inputParam);\n      }\n    };\n\n    this.onSaveReschedule = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"rescheduledata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"InstrumentName\": {\n          label: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\n          value: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1\n        },\n        \"InstrumentId\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments,\n        \"Section\": {\n          label: allotjob.nsectioncode && allotjob.nsectioncode.label || 'NA',\n          value: allotjob.nsectioncode && allotjob.nsectioncode.value || -1\n        }\n      };\n      obj[\"reschdeuleuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"InstrumentName\": allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\n        \"InstrumentId\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments,\n        \"Section\": allotjob.nsectioncode.label\n      }; // START ALPD-3570 VISHAKH\n      // let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      // let arr = [];\n      // JASelectedTest && JASelectedTest.map((item) => {\n      //     if (!arr.includes(item.nsectioncode)) {\n      //         arr.push(item.nsectioncode)\n      //     }\n      // }\n      // )\n\n      let testList = [];\n      let {\n        testskip,\n        testtake\n      } = this.state;\n\n      if (this.props.Login.masterData.searchedTest !== undefined) {\n        // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n        testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n      } else {\n        testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n      }\n\n      let rescheduleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\"); // END ALPD-3570 VISHAKH\n\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"rescheduledata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"reschdeuleuidata\"]);\n      JobAllocationData[\"npreregno\"] = rescheduleList ? rescheduleList.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"ntransstatus\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactionstatus).join(\",\") : \"\"; // JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      // JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      // JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n\n      JobAllocationData[\"nsectioncode\"] = allotjob.nsectioncode && allotjob.nsectioncode.value.toString() || -1;\n      JobAllocationData[\"nfiltersectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\n      JobAllocationData[\"nselectedtestcode\"] = rescheduleList ? rescheduleList.map(sample => sample.ntestcode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentnamecode\"] = allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = allotjob.nsectioncode && allotjob.nsectioncode.value === this.props.Login.masterData.realUserSectionValue.nsectioncode ? 1 : 2;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      JobAllocationData[\"napprovalversioncode\"] = this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"reschedule\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.RescheduleJobAction(inputParam);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isOpen = this.props.Login.isOpen;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let screenName = this.props.Login.screenName;\n      let InstrumentCategory = this.props.Login.InstrumentCategory;\n      let InstrumentName = this.props.Login.InstrumentName;\n      let InstrumentId = this.props.Login.InstrumentId; // if (this.state.openAnalystCalendar) {\n      //     this.setState({ openAnalystCalendar: false })\n      // }\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"AllotAnotherUser\" || this.props.Login.operation === \"Reschedule\" || this.props.Login.operation === \"updateSection\") {\n          loadEsign = false;\n          openModal = true;\n          isOpen = false; //selectedRecord[\"agree\"] = 4;\n\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          if (!this.props.Login.operation === \"updateSection\") screenName = \"\";\n        } else {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n          selectedRecord['esignreason'] = \"\";\n          InstrumentName = [];\n          InstrumentId = [];\n          InstrumentCategory = [];\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        InstrumentName = [];\n        InstrumentId = [];\n        InstrumentCategory = [];\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          isOpen,\n          screenName,\n          InstrumentCategory,\n          InstrumentName,\n          InstrumentId,\n          masterData: { ...this.props.Login.masterData,\n            analystCalenderData: []\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforJobAllocation(inputParam, \"openModal\");\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === \"ntechniquecode\") {\n        selectedRecord[\"ntechniquecode\"] = comboData;\n\n        if (comboData != null) {\n          this.props.getUsers(this.state.selectedRecord.ntechniquecode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\n        } else {\n          if (this.props.Login.operation === \"Reschedule\") {\n            let inputParam = {\n              nsectioncode: this.state.selectedRecord ? this.state.selectedRecord[\"nsectioncode\"].value : -1,\n              userInfo: this.props.Login.userInfo,\n              selectedRecord: this.state.selectedRecord,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              masterData: this.props.Login.masterData\n            };\n            this.props.getUsersSection(inputParam);\n          } else {\n            delete selectedRecord[\"ntechniquecode\"];\n            delete selectedRecord[\"nusercode\"];\n            this.setState({\n              selectedRecord\n            });\n          }\n        }\n      } else if (fieldName === \"nusercode\") {\n        selectedRecord[\"nusercode\"] = comboData; //   this.props.getAnalystCalenderBasedOnUser(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord)\n\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ninstrumentcatcode\") {\n        selectedRecord[\"ninstrumentcatcode\"] = comboData;\n        this.props.getInstrumentName(this.state.selectedRecord.ninstrumentcatcode.value, selectedRecord.ninstrumentcatcode.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n      } else if (fieldName === \"ninstrumentnamecode\") {\n        selectedRecord[\"ninstrumentnamecode\"] = comboData;\n        this.props.getInstrumentId(this.state.selectedRecord.ninstrumentcatcode.value, this.state.selectedRecord.ninstrumentnamecode.value, comboData.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n      } else if (fieldName === \"ninstrumentcode\") {\n        selectedRecord[\"ninstrumentcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"nuserperiodcode\") {\n        selectedRecord[\"nuserperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ninstrumentperiodcode\") {\n        selectedRecord[\"ninstrumentperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"nsectionuser\") {\n        selectedRecord[\"nsectioncode\"] = comboData;\n        let inputParam = {\n          nsectioncode: comboData.value,\n          userInfo: this.props.Login.userInfo,\n          selectedRecord: this.state.selectedRecord,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getUsersSection(inputParam);\n      } else if (fieldName === \"nsectioncode\") {\n        selectedRecord[\"nsectioncode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\") {\n        if (event.target.value !== \"\") {\n          event.target.value = validatePhoneNumber(event.target.value);\n          selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (event, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let constantsValue = event.target.value.replace(/[^0-9]/g, ''); //if (!isNaN(constantsValue.substring(constantsValue.length, constantsValue.length - 1))) {\n      //if (!isNaN(constantsValue)) {\n\n      selectedRecord[name] = constantsValue;\n      this.setState({\n        selectedRecord\n      }); // }\n    };\n\n    this.getCommentsCombo = event => {\n      if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\n        this.props.getCommentsCombo(...event);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTESTTOADDCOMMENTS\"\n        }));\n      }\n    };\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleteted\n    }) => {\n      let scheduleData = {};\n      let postParam = undefined;\n      let formRef = {};\n\n      if (created.length > 0) {\n        const aa = created.concat(created.map(item => Object.assign({}, item, {})));\n        scheduleData[\"allotjob\"] = {\n          \"jsondata\": aa[0]\n        };\n        formRef = {\n          \"current\": \"form\"\n        };\n        let saveType = 1;\n        const inputParam = {\n          classUrl: \"joballocation\",\n          methodUrl: \"AssignJob\",\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          operation: \"create\",\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      } else if (updated.length > 0) {} else if (deleteted.length > 0) {}\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      sampleAttachmentDataState: {},\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      subsampleAttachmentDataState: {},\n      subsampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testAttachmentDataState: {},\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testViewDataState: {},\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      filterSampleParam: {},\n      filterSubSampleParam: {},\n      filterTestParam: {},\n      operation: \"\",\n      showTest: true,\n      showSample: false,\n      showSubSample: false,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      testItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      TestList: [],\n      DynamicDesignMappingList: [],\n      sampleskip: 0,\n      sampletake: this.props.Login.settings && this.props.Login.settings[3],\n      subsampleskip: 0,\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 28.6,\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      DynamicSampleColumns: [],\n      DynamicSubSampleColumns: [],\n      DynamicTestColumns: [],\n      enableAutoClick: false,\n      enablePropertyPopup: false,\n      propertyPopupWidth: \"60\",\n      data: [],\n      subSampleGetParam: {},\n      openAnalystCalendar: false,\n      data: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Rendering the component only if \n    // passed props value is changed\n    if (nextState.data !== this.state.data) {\n      return false;\n    } else if (nextState.calenderSelectedRecord !== this.state.calenderSelectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  } // openAnalystCalendar = () => {\n  //     this.setState({ openAnalystCalendar: true })\n  // }\n\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\n    let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\n    let JA_TestList = this.props.Login.masterData.JA_TEST ? sortData(this.props.Login.masterData.JA_TEST, 'descending', 'ntransactiontestcode') : [];\n    const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\n    const allotId = this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\n    const anotherUserId = this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\n    const rescheduleId = this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\n    const cancelId = this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\n    const allotCalenderId = this.state.controlMap.has(\"AllotCalender\") ? this.state.controlMap.get(\"AllotCalender\").ncontrolcode : -1;\n    const testSectionChangeID = this.state.controlMap.has(\"ChangeTestSection\") ? this.state.controlMap.get(\"ChangeTestSection\").ncontrolcode : -1;\n    let subSampleGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      // ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n      activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      sampleskip: this.state.sampleskip,\n      sampletake: this.state.sampletake,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subsampleskip: this.state.subsampleskip,\n      subsampletake: this.state.subsampleskip,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n      //checkBoxOperation: 3,\n      checkBoxOperation: checkBoxOperation.SINGLESELECT,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      //ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.nsectioncode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      activeSampleTab: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\n      activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testChildGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"nregistrationsectioncode\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      fecthInputObject: { ...this.state.subSampleGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSample\",\n      inputListName: \"JA_SAMPLE\",\n      updatedListname: \"JASelectedSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSubSample\",\n      inputListName: \"JA_SUBSAMPLE\",\n      updatedListname: \"JASelectedSubSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedTest\",\n      updatedListname: \"JA_TEST\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        searchTestRef: this.searchTestRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        testGridDataState: this.state.testGridDataState\n      },\n      selectedObject: \"JASelectedTest\",\n      inputListName: \"JASelectedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }];\n\n    if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\") {\n      if (this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA) {\n        this.validationColumnList = [this.props.Login.operation === \"Reschedule\" ? {\n          \"idsName\": \"IDS_SECTION\",\n          \"dataField\": \"nsectioncode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        } : \"\", {\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else {\n        this.validationColumnList = [this.props.Login.operation === \"Reschedule\" ? {\n          \"idsName\": \"IDS_SECTION\",\n          \"dataField\": \"nsectioncode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        } : \"\", {\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n          \"dataField\": \"ninstrumentcatcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, //  { \"idsName\": \"IDS_INSTRUMENTNAME\", \"dataField\": \"ninstrumentnamecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\n        {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"dinstblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"sinstrumentholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"ninstrumentperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      }\n    } else if (this.props.Login.operation === \"AllotJobCalendar\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_USERS\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_USERS\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_STARTDATETIME\",\n        \"dataField\": \"duserblockfromdatetime\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_HOLDDURATION\",\n        \"dataField\": \"suserholdduration\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PERIOD\",\n        \"dataField\": \"nuserperiodcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    } else if (this.props.Login.operation === \"updateSection\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_SECTION\",\n        \"dataField\": \"nsectioncode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    }\n\n    const mandatoryFields = [];\n\n    if (this.validationColumnList && this.validationColumnList.length > 0) {\n      this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    }\n\n    let breadCrumbData = [];\n    breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_SECTION\",\n      \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_TEST\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      masterList: this.props.Login.masterData.searchedTest || JA_TestList,\n      selectedMaster: this.props.Login.masterData.JASelectedTest,\n      primaryKeyField: \"ntransactiontestcode\",\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetailJobAllocation(event, status);\n        this.changePropertyView(2, event, \"click\");\n      },\n      inputParam: testChildGetJAParam,\n      additionalParam: [],\n      mainField: \"stestsynonym\",\n      selectedListName: \"JASelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      subFieldsLabel: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      needMultiSelect: true,\n      subFields: this.state.testListColumns || [],\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      showStatusName: true,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTest\",\n      searchRef: this.searchTestRef,\n      filterParam: this.state.filterTestParam,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      childTabsKey: [\"TestView\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"],\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"JA_SAMPLE\",\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CHANGESECTION\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(testSectionChangeID) === -1,\n        onClick: () => this.updateSection(testSectionChangeID, this.state.testskip, this.state.testtake, 'updateSection'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SectionChange, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 42\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTJOB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(allotId) === -1,\n        onClick: () => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake, 'AllotJob', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AllotJob, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTJOBINCALENDER\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(allotCalenderId) === -1,\n        onClick: () => this.AllotJobStatus(allotCalenderId, this.state.testskip, this.state.testtake, 'AllotJobCalendar', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCalendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTANOTHERUSER\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(anotherUserId) === -1,\n        onClick: () => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AnotherUser, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RESCHEDULE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(rescheduleId) === -1,\n        onClick: () => this.AllotJobStatus(rescheduleId, this.state.testskip, this.state.testtake, 'Reschedule', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faClock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(cancelId) === -1,\n        onClick: () => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Reject, {\n        className: \"custom_icons\",\n        width: \"15\",\n        height: \"15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 41\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0 sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n        cardHead: 94,\n        masterList: this.props.Login.masterData.searchedSubSample || JA_SubSampleList,\n        selectedMaster: this.props.Login.masterData.JASelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\" //secondaryKeyField = \"nsectioncode\"\n        ,\n        getMasterDetail: (event, status) => {\n          this.props.getJobAllocationTestDetail(event, status);\n          this.state.enableAutoClick && this.changePropertyView(2, event, \"click\");\n        },\n        inputParam: testGetJAParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        secondarySelection: this.props.Login.secondarySelection || \"\",\n        searchRef: this.searchSubSampleRef,\n        filterParam: { ...this.state.filterSubSampleParam,\n          childRefs: [{\n            ref: this.searchTestRef,\n            childFilteredListName: \"searchedTest\"\n          }]\n        },\n        additionalParam: ['napprovalversioncode'],\n        showStatusLink: true,\n        showStatusName: false,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        mainField: \"ssamplearno\",\n        selectedListName: \"JASelectedSubSample\",\n        objectName: \"subsample\",\n        listName: \"IDS_SUBSAMPLE\",\n        needValidation: true,\n        validationKey: \"napprovalversioncode\",\n        validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n        subFields: this.state.DynamicSubSampleColumns,\n        skip: this.state.subsampleskip,\n        take: this.state.subsampletake,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)) //selectionField=\"ntransactionstatus\"\n        //selectionFieldName=\"stransdisplaystatus\"\n        ,\n        needMultiSelect: true //selectionColorField=\"scolorhexcode\"\n        ,\n        subFieldsLabel: false,\n        subFieldsFile: true,\n        handlePageChange: this.handleSubSamplePageChange,\n        selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n        childTabsKey: [// \"RegistrationAttachment\", \n        \"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"],\n        needFilter: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedSample || JA_SampleList,\n      selectedMaster: this.props.Login.masterData.JASelectedSample,\n      primaryKeyField: \"nregistrationsectioncode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (event, status) => {\n        this.props.getJobAllocationSubSampleDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(4, event, \"click\");\n      },\n      inputParam: subSampleGetJAParam,\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sarno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"JASelectedSample\",\n      searchListName: \"searchedSample\",\n      searchRef: this.searchSampleRef,\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      needMultiSelect: true,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: { ...this.state.filterSampleParam,\n        childRefs: [{\n          ref: this.searchSubSampleRef,\n          childFilteredListName: \"searchedSubSample\"\n        }, {\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      subFieldsLabel: false,\n      handlePageChange: this.handleSamplePageChange,\n      skip: this.state.sampleskip,\n      take: this.state.sampletake,\n      childTabsKey: [\"RegistrationAttachment\", \"RegistrationComment\", \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RECEIVEINLAB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(receiveId) === -1,\n        onClick: () => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(ReceivedInLab, {\n        className: \"custom_icons\",\n        width: \"25\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) // data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => this.onReload(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 60\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(JobAllocationFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.defaultSampleTypeValue || {},\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.defaultRegTypeValue || {},\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue || {},\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.defaultApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.defaultUserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.defaultTestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.defaultFilterStatusValue || [],\n          DynamicDesignMapping: this.state.DynamicDesignMappingList || [],\n          DesignTemplateMappingValue: this.props.Login.masterData.defaultDesignTemplateMappingValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleFilterDateChange: this.handleFilterDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true || this.state.showSubSample === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"tab-expand-collapse-btn p-0\",\n      onClick: () => this.setState({\n        enablePropertyPopup: !this.state.enablePropertyPopup\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 45\n      }\n    }, !this.state.enablePropertyPopup ? /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewExpand,\n      alt: \"Fullview\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: fullviewCollapse,\n      alt: \"Collapse\",\n      width: \"24\",\n      height: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 53\n      }\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 45\n      }\n    })))))))), console.log(this.props.Login.operation), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign // hideSave={this.props.Login.operation === \"AllotJobCalendar\" ? true : false}\n      ,\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      size: this.props.Login.operation === \"AllotJobCalendar\" ? \"xl\" : \"lg\",\n      selectedRecord: this.props.Login.operation === \"AllotJobCalendar\" ? this.state.calenderSelectedRecord || {} : this.state.selectedRecord || {},\n      showSaveContinue: this.state.showSaveContinue,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 33\n        }\n      }) : //  this.state.openAnalystCalendar ?\n      //     <AnalystCalenderBasedOnUser userData={this.props.Login.masterData.analystCalenderData} /> :\n      this.props.Login.operation === \"AllotJobCalendar\" ? /*#__PURE__*/React.createElement(NewJobAlloct, {\n        selectedRecord: this.state.selectedRecord || {} // onComboChange={this.onComboChange}\n        //handleDateChange={this.handleDateChange}\n        ,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users //userData={this.props.Login.masterData.analystCalenderData}\n        ,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Instrument: this.props.Login.Instrument,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        selectedTest: this.props.Login.masterData.JASelectedTest,\n        parentScheduleState: this.parentScheduleState //updateCalender={this.props.updateCalender}\n        ,\n        masterData: this.props.Login.masterData,\n        parentSelectRecord: this.parentSelectRecord,\n        calenderProperties: this.props.Login.calenderProperties,\n        calenderColor: this.props.Login.calenderColor,\n        calenderPublicHolidays: this.props.Login.calenderPublicHolidays,\n        personalLeaveRestrict: this.props.Login.personalLeaveRestrict,\n        updateStore: this.props.updateStore,\n        calenderCommonHolidays1: this.props.Login.calenderCommonHolidays1,\n        calenderUserHolidays: this.props.Login.calenderUserHolidays,\n        holidaydateRestrict: this.props.Login.holidaydateRestrict,\n        commonHolidaydateRestrict: this.props.Login.commonHolidaydateRestrict,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 37\n        }\n      }) : this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\" ? /*#__PURE__*/React.createElement(AddJobAllocation, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        InstrumentName: this.props.Login.InstrumentName,\n        InstrumentId: this.props.Login.InstrumentId,\n        InstrumentPeriod: this.props.Login.InstrumentPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        openAnalystCalendar: this.openAnalystCalendar,\n        RescheduleSection: this.props.Login.RescheduleSection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 37\n        }\n      }) : this.props.Login.operation === \"AllotAnotherUser\" ? /*#__PURE__*/React.createElement(AllotAnotherUser, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        TechniqueCode: this.props.Login.TechniqueCode,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 41\n        }\n      }) //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\n      //         <>\n      //             <Row>\n      //                 <Col md={12}>\n      //                 <FormSelectSearch\n      //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\n      //                     isSearchable={true}\n      //                     name={\"nusercode\"}\n      //                     isDisabled={false}\n      //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //                     isMandatory={true}\n      //                     isClearable={false}\n      //                     options={this.props.Login.Users}\n      //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\n      //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\n      //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\n      //                     closeMenuOnSelect={true}\n      //                 />\n      //                 </Col>\n      //             </Row>\n      //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\n      //                 <WeekView />\n      //                 <MonthView />\n      //             </Scheduler>\n      //             {/* <AnalystCalendar\n      //                 UserData={this.props.Login.masterData.UserData}\n      //                 operation={this.props.Login.operation}\n      //                 inputParam={this.props.inputParam}\n      //                 userInfo={this.props.Login.userInfo}\n      //             /> */}\n      //         </>                             \n      //    ): (\n      : this.props.Login.operation === \"updateSection\" ? /*#__PURE__*/React.createElement(ScheduleSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        onComboChange: this.onComboChange,\n        section: this.props.Login.Section,\n        SectionUsers: this.props.Login.SectionUsers,\n        nneduserfilter: this.props.Login.nneduserfilter,\n        operation: this.props.Login.operation,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 41\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  ReceiveinLabStatus(receiveId, sampleskip, sampletake) {\n    let sampleList = [];\n\n    if (this.props.Login.masterData.searchedSample !== undefined) {\n      // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\n      sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.searchedSample.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\n    } else {\n      sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\n    }\n\n    let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n    if (receiveList && receiveList.length > 0) {\n      // START ALPD-3570 VISHAKH\n      // let tempsection = 0;\n      // let sectionvalue = 0;\n      // let bflag = true;\n      // let sampleList = this.props.Login.masterData.JASelectedSample;\n      // sampleList.forEach((item) => {\n      //     sectionvalue = item.nsectioncode;\n      //     if (tempsection !== sectionvalue && tempsection !== 0) {\n      //         bflag = false;\n      //     } else {\n      //         tempsection = sectionvalue\n      //     }\n      // });\n      // if (bflag) {\n      // END ALPD-3570 VISHAKH\n      let JASelectedSample = this.props.Login.masterData.JASelectedSample;\n\n      if (this.props.Login.masterData.JASelectedSubSample.length !== 0) {\n        let JASelectedSubSample = this.props.Login.masterData.JASelectedSubSample;\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // START ALPD-3570 VISHAKH\n        // let arr = [];\n        // JASelectedSample && JASelectedSample.map((item) => {\n        //     if (!arr.includes(item.nsectioncode)) {\n        //         arr.push(item.nsectioncode)\n        //     }\n        // }\n        // )\n        // END ALPD-3570 VISHAKH\n\n        let inputParam = {};\n        let Map = {\n          nflag: 3,\n          ncheck: 1,\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          ntransactionstatus: \"0\",\n          ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n          // npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\n          npreregno: receiveList ? receiveList.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedSubSample ? JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          // nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n          nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\n          ncontrolcode: receiveId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          //checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          ntype: 2,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          // activeSampleTab: \"IDS_SAMPLEATTACHMENTS\",\n          // activeSubSampleTab: \"IDS_SUBSAMPLEATTACHMENTS\",\n          // activeTestTab: \"IDS_TESTATTACHMENTS\",\n          activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n          activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n          nneedmyjob: this.props.Login.masterData && this.props.Login.masterData.nneedmyjob\n        };\n        inputParam = {\n          inputData: Map,\n          postParamList: this.postParamList,\n          classUrl: \"joballocation\",\n          operation: 'Create',\n          methodUrl: \"ReceiveinLab\",\n          action: \"receiveinlab\"\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'Create'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.ReceiveinLabStatusWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSUBSAMPLESTORECEIVE\"\n        }));\n      } // START ALPD-3570 VISHAKH\n      // } else {\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONSAMPLES\" }));\n      // }\n      // END ALPD-3570 VISHAKH\n\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTSAMPLES\"\n      }));\n    }\n  }\n\n  checkRegisterSamples(sample) {\n    return sample.ntransactionstatus === transactionStatus.REGISTER;\n  }\n\n  componentDidUpdate(previousProps) {\n    console.log(\"enter render\");\n    let {\n      userRoleControlRights,\n      controlMap,\n      testListColumns,\n      testSearchField,\n      subsampleSearchField,\n      sampleSearchField,\n      SingleItem,\n      testItem,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      testAttachmentDataState,\n      testCommentDataState,\n      testViewDataState,\n      activeTabIndex,\n      activeTabId,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      DynamicDesignMappingList,\n      sampleskip,\n      sampletake,\n      subsampleskip,\n      subsampletake,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicTestGridMoreField,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridMoreField,\n      data\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n          group: [{\n            field: 'sarno'\n          }]\n        };\n        testAttachmentDataState = dataState;\n        testCommentDataState = dataState;\n        testViewDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\n      const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\n      bool = true;\n      sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip;\n      sampletake = this.props.Login.sampletake || sampletake;\n      subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip;\n      subsampletake = this.props.Login.subsampletake || subsampletake;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        stransdisplaystatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\n        testAttachmentDataState = this.props.Login.testAttachmentDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\n        testViewDataState = this.props.Login.testViewDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem : [];\n      DynamicTestGridMoreField = dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.UserData !== undefined) {\n      if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\n        for (let i = 0; i < this.props.Login.masterData.UserData.length; i++) {\n          data.push(this.props.Login.masterData.UserData[i].jsonuidata);\n        }\n\n        data = data.map(dataItem => ({\n          start: parseAdjust(dataItem.UserStartDate),\n          end: parseAdjust(dataItem.UserEndDate),\n          title: dataItem.Comments\n        }));\n        bool = true; //this.setState({data:data});\n      }\n    }\n\n    const filterSampleParam = {\n      inputListName: \"JA_SAMPLE\",\n      selectedObject: \"JASelectedSample\",\n      primaryKeyField: \"nregistrationsectioncode\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      isMultiSort: true,\n      multiSortData: [{\n        pkey: 'ntransactionsamplecode',\n        list: 'JA_SUBSAMPLE'\n      }, {\n        pkey: 'ntransactiontestcode',\n        list: 'JA_TEST'\n      }],\n      sampleskip: 0,\n      subsampleskip: 0,\n      testskip: 0,\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        //nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\n        //npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        samplesearch: 1,\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: sampleSearchField,\n      changeList: [\"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSample\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"JA_SUBSAMPLE\",\n      selectedObject: \"JASelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/getJobAllocationTestDetails\",\n      isMultiSort: true,\n      multiSortData: [{\n        pkey: 'ntransactiontestcode',\n        list: 'JA_TEST'\n      }],\n      sampleskip: this.state.sampleskip,\n      //sampleskip: 0,\n      subsampleskip: 0,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        //nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(x => x.nsectioncode).join(\",\"),\n        //ALPD-3190 fix\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue && this.props.Login.masterData.realUserSectionValue.nsectioncode === 0 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        //ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n        //ALPD-2549 fix\n        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: subsampleSearchField,\n      changeList: [\"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterTestParam = {\n      inputListName: \"JA_TEST\",\n      selectedObject: \"JASelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      sampleskip: this.state.sampleskip,\n      //sampleskip: 0,\n      subsampleskip: this.state.subsampleskip,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        //checkBoxOperation: 3,\n        checkBoxOperation: checkBoxOperation.SINGLESELECT,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: testSearchField,\n      changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\n    };\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        testListColumns,\n        testSearchField,\n        subsampleSearchField,\n        sampleSearchField,\n        SingleItem,\n        testItem,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        testAttachmentDataState,\n        testCommentDataState,\n        testViewDataState,\n        activeTabIndex,\n        activeTabId,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        DynamicDesignMappingList,\n        sampleskip,\n        sampletake,\n        subsampleskip,\n        subsampletake,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicTestGridMoreField,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridMoreField,\n        data,\n        filterTestParam,\n        filterSubSampleParam,\n        filterSampleParam\n      });\n    }\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\",\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\",\n        \"dataType\": [option[designProperties.LISTITEM]]\n      };\n    });\n    return temparray;\n  }\n\n  //ALPD-3781\n  updateSection(controlcode, testskip, testtake, operation) {\n    if (this.props.Login.masterData.JASelectedTest.length > 0) {\n      let testList = [];\n\n      if (this.props.Login.masterData.searchedTest !== undefined) {\n        testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n      } else {\n        testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n      }\n\n      let selectedTestList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let sectionflag = true;\n      selectedTestList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          sectionflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (sectionflag) {\n        let inputParam = {};\n        let Map = {\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n          nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\n          npreregno: selectedTestList ? selectedTestList.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: selectedTestList ? selectedTestList.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n          ntransactiontestcode: selectedTestList ? selectedTestList.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          nselectedtestcode: selectedTestList ? selectedTestList.map(sample => sample.ntestcode).join(\",\") : \"\",\n          ncontrolcode: controlcode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          operation: operation,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_SECTION\"\n          })\n        };\n        inputParam = {\n          inputData: Map,\n          selectedRecord: this.state.selectedRecord\n        };\n        this.props.getSectionTest(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  AllotJobStatus(controlcode, testskip, testtake, operation, type) {\n    //ALPD-3758\n    // if(this.props.Login.settings&&parseInt(this.props.Login.settings[43])===transactionStatus.NO){\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (type !== 1 && allotList && allotList.length !== 1) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTONETEST\"\n      }));\n    } else {\n      if (allotList && allotList.length > 0) {\n        let testList = this.props.Login.masterData.JASelectedTest;\n        let tempsection = 0;\n        let sectionvalue = 0;\n        let sectionflag = true;\n        allotList.forEach(item => {\n          sectionvalue = item.nsectioncode;\n\n          if (sectionvalue !== tempsection && tempsection !== 0) {\n            sectionflag = false;\n          } else {\n            tempsection = sectionvalue;\n          }\n        });\n        let tempinstrument = 0;\n        let instrumentvalue = 0;\n        let instrumentcategoryflag = true;\n        allotList.forEach(item => {\n          instrumentvalue = item.ninstrumentcatcode;\n\n          if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\n            instrumentcategoryflag = false;\n          } else {\n            tempinstrument = instrumentvalue;\n          }\n        });\n\n        if (sectionflag) {\n          if (instrumentcategoryflag) {\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n            let inputParam = {};\n            let Map = {\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n              nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\n              ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n              npreregno: allotList ? allotList.map(sample => sample.npreregno).join(\",\") : \"\",\n              ntransactionsamplecode: allotList ? allotList.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n              transactiontestcode: allotList ? allotList.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n              ntransactiontestcode: 0,\n              ncontrolcode: controlcode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n              checkBoxOperation: checkBoxOperation.SINGLESELECT,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              operation: operation,\n              nselecttype: operation === \"Reschedule\" && allotList && allotList.length === 1 ? 1 : 2,\n              nselectedtestcode: allotList ? allotList.map(ntestcodeList => ntestcodeList.ntestcode).join(\",\") : \"\"\n            };\n            inputParam = {\n              inputData: Map\n            };\n            this.props.getAllottedTestWise(inputParam, type);\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\"\n            }));\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMESECTIONTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    } // }else{\n    //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SCHEDULENOTVAILABLE\" }));\n    // }\n\n  }\n\n  AllotAnotherUserStatus(anotherUserId, testskip, testtake) {\n    //ALPD-3758\n    //if(this.props.Login.settings&&parseInt(this.props.Login.settings[43])===transactionStatus.NO){\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (anotherUserList && anotherUserList.length === 1) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let bflag = true;\n      let testList = this.props.Login.masterData.JASelectedTest;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          bflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (bflag) {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // START ALPD-3570 VISHAKH\n        // let arr = [];\n        // JASelectedTest && JASelectedTest.map((item) => {\n        //     if (!arr.includes(item.nsectioncode)) {\n        //         arr.push(item.nsectioncode)\n        //     }\n        // }\n        // )\n        // END ALPD-3570 VISHAKH\n\n        let inputParam = {};\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n          //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n          // nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n          nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\n          ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\n          npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ntransactiontestcode: 0,\n          ncontrolcode: anotherUserId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          //checkBoxOperation: 3,\n          checkBoxOperation: checkBoxOperation.SINGLESELECT,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          operation: 'AllotAnotherUser'\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.getAllotAnotherUserTestWise(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else if (anotherUserList && anotherUserList.length > 1) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTSINGLETEST\"\n      }));\n    } else if (anotherUserList && anotherUserList.length === 0) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    } // }\n    // else{\n    //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SCHEDULENOTVAILABLE\" }));\n    // }\n\n  }\n\n  getActiveTestURL() {\n    let url = \"attachment/getTestAttachment\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      default:\n        url = \"comments/getTestComment\";\n        break;\n    }\n\n    return url;\n  }\n\n  //ALPD-3781\n  onSaveSection(saveType, formRef) {\n    let inputParam = {};\n    let joballocationData = {};\n    let testList = [];\n    let {\n      testskip,\n      testtake,\n      sampleskip,\n      sampletake\n    } = this.state;\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let subSampleList = [];\n\n    if (this.props.Login.masterData.searchedSubSample !== undefined) {\n      subSampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.searchedSubSample.slice(testskip, testskip + testtake), \"ntransactionsamplecode\");\n    } else {\n      subSampleList = this.props.Login.masterData.JA_SUBSAMPLE && this.props.Login.masterData.JA_SUBSAMPLE.slice(testskip, testskip + testtake);\n    }\n\n    let sampleList = [];\n\n    if (this.props.Login.masterData.searchedSample !== undefined) {\n      sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.searchedSample.slice(sampleskip, sampleskip + sampletake), \"npreregno\");\n    } else {\n      sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\n    } //\n\n\n    let sectionList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n    let sampleListCount = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"npreregno\");\n    joballocationData[\"npreregno\"] = sampleListCount ? sampleListCount.map(sample => sample.npreregno).join(\",\") : \"\";\n    joballocationData[\"ntransactionsamplecode\"] = sectionList ? sectionList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n    joballocationData[\"ntransactiontestcode\"] = sectionList ? sectionList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n    joballocationData[\"nsectioncode\"] = this.state.selectedRecord && this.state.selectedRecord[\"nsectioncode\"].value;\n    joballocationData[\"nneedsubsample\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false;\n\n    if (!(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample)) {\n      joballocationData[\"ntansactionSubSamplecode\"] = subSampleList ? subSampleList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n    }\n\n    joballocationData[\"userinfo\"] = this.props.Login.userInfo;\n    joballocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n    joballocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n    joballocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n    joballocationData[\"ntestcode\"] = this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null;\n    joballocationData[\"masterData\"] = this.props.Login.masterData;\n    joballocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n    joballocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n    joballocationData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode;\n    joballocationData[\"napprovalversioncode\"] = this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\n    joballocationData[\"sfilterSection\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    joballocationData[\"fromdate\"] = obj.fromDate;\n    joballocationData[\"todate\"] = obj.toDate;\n    joballocationData[\"activeSampleTab\"] = this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\";\n    joballocationData[\"nregistrationsectioncode\"] = this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(item1 => item1.nregistrationsectioncode).join(\",\");\n    joballocationData[\"ncontrolcode\"] = this.props.Login.ncontrolcode;\n    inputParam = {\n      classUrl: \"joballocation\",\n      methodUrl: \"JobAllocation\",\n      displayName: this.props.Login.inputParam.displayName,\n      inputData: joballocationData,\n      selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n      operation: \"updateSection\",\n      saveType,\n      formRef,\n      searchRef: this.searchRef,\n      postParamList: this.postParamList,\n      action: \"updateSection\",\n      selectedRecord: this.state.selectedRecord\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData: this.props.Login.masterData\n          },\n          openModal: true,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_SECTION\"\n          }),\n          operation: this.props.Login.operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.updateSectionJobAllocation(inputParam);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignforJobAllocation,\n  ReceiveinLabStatusWise,\n  getRegTypeJobAllocation,\n  getRegSubTypeJobAllocation,\n  getAppConfigVersionJobAllocation,\n  getFilterStatusJobAllocation,\n  getSectionJobAllocation,\n  getTestStatusJobAllocation,\n  getFilterStatusSectionJobAllocation,\n  getDesignTemplateJobAllocation,\n  getJobAllcationFilterSubmit,\n  getJobAllocationSubSampleDetail,\n  getJobAllocationTestDetail,\n  getTestChildTabDetailJobAllocation,\n  getAllottedTestWise,\n  getAllotAnotherUserTestWise,\n  getInstrumentName,\n  getInstrumentId,\n  getUsers,\n  ViewAnalystCalendar,\n  CancelTestWise,\n  AllotJobAction,\n  AllotAnotherUserAction,\n  RescheduleJobAction,\n  getSubSampleChildTabDetail,\n  getSampleChildTabDetail,\n  getCommentsCombo,\n  getAttachmentCombo,\n  filterTransactionList,\n  AllotJobActionCalendar,\n  getSectionTest,\n  updateSectionJobAllocation,\n  getUsersSection\n})(injectIntl(JobAllocation));\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/joballocation/JobAllocation.jsx"],"names":["React","connect","injectIntl","BreadcrumbComponent","toast","convertDateValuetoString","rearrangeDateFormat","constructOptionList","getControlMap","sortData","getSameRecordFromTwoArrays","showEsign","convertDateTimetoStringDBFormat","validatePhoneNumber","ListWrapper","Button","Col","Row","Card","Nav","updateStore","callService","crudMaster","validateEsignforJobAllocation","ReceiveinLabStatusWise","getRegTypeJobAllocation","getRegSubTypeJobAllocation","getAppConfigVersionJobAllocation","getFilterStatusJobAllocation","getSectionJobAllocation","getTestStatusJobAllocation","getFilterStatusSectionJobAllocation","getDesignTemplateJobAllocation","getJobAllcationFilterSubmit","getJobAllocationSubSampleDetail","getJobAllocationTestDetail","getTestChildTabDetailJobAllocation","getAllottedTestWise","getAllotAnotherUserTestWise","getInstrumentName","getInstrumentId","getUsers","ViewAnalystCalendar","CancelTestWise","AllotJobAction","AllotAnotherUserAction","RescheduleJobAction","getSubSampleChildTabDetail","getSampleChildTabDetail","getCommentsCombo","getAttachmentCombo","filterTransactionList","AllotJobActionCalendar","getSectionTest","updateSectionJobAllocation","getUsersSection","JobAllocationFilter","SplitterLayout","TransactionListMasterJsonView","transactionStatus","SideBarSeqno","SideBarTabIndex","designProperties","DEFAULT_RETURN","ProductList","FontAwesomeIcon","faSync","faEye","faLink","faChevronRight","faComments","faClock","faCalendar","ContentPanel","CustomSwitch","SlideOutModal","Esign","AddJobAllocation","AllotAnotherUser","ScheduleSection","SampleInfoView","SampleInfoGrid","CustomTabs","Attachments","Comments","onSaveSampleAttachment","onSaveTestAttachment","onSaveSubSampleAttachment","onSaveSampleComments","onSaveTestComments","onSaveSubSampleComments","NewJobAlloct","checkBoxOperation","mapStateToProps","state","Login","JobAllocation","Component","constructor","props","parentScheduleState","data","setState","parentSelectRecord","analyst","calenderSelectedRecord","closeFilter","obj","masterData","fromDate","toDate","userInfo","inputValues","realFromDate","Date","realToDate","RegTypeValue","realRegTypeValue","RegSubTypeValue","realRegSubTypeValue","FilterStatusValue","realFilterStatusValue","ApprovalConfigVersionValue","realApprovalVersionValue","DesignTemplateMappingValue","realDesignTemplateMappingValue","UserSectionValue","realUserSectionValue","JobStatus","TestValue","realTestValue","defaultRegSubTypeValue","defaultRegTypeValue","defaultApprovalVersionValue","defaultDesignTemplateMappingValue","defaultFilterStatusValue","defaultSampleTypeValue","realSampleTypeValue","defaultTestValue","defaultUserSectionValue","napprovalconfigcode","napprovalversioncode","napprovalconfigversioncode","String","nsectioncode","UserSection","map","section","join","ntestcode","Test","test","SampleType","realSampleTypeList","RegistrationType","realRegistrationTypeList","RegistrationSubType","realRegistrationSubTypeList","ApprovalConfigVersion","realApprovalConfigVersionList","FilterStatus","realFilterStatusList1","realUserSectionList","realTestList","DynamicDesignMapping","realDynamicDesignMappingList","SampleTypeValue","ndesigntemplatemappingcode","updateInfo","typeName","showFilter","handleSamplePageChange","e","sampleskip","skip","sampletake","take","handleSubSamplePageChange","subsampleskip","subsampletake","handleTestPageChange","testskip","testtake","paneSizeChange","d","splitChangeWidthPercentage","onTabChange","tabProps","activeTestTab","screenName","tabseqno","tabSequence","TEST","JASelectedTest","length","arr","item","includes","ntransactionstatus","push","transstatus","inputData","ntransactiontestcode","npreregno","JASelectedSample","userinfo","testCommentDataState","testAttachmentDataState","testViewDataState","activeTabIndex","activeTabId","warn","intl","formatMessage","id","SUBSAMPLE","selectedSubSample","JASelectedSubSample","ntransactionsamplecode","activeSubSampleTab","subsampleCommentDataState","subsampleAttachmentDataState","selectedSample","activeSampleTab","changePropertyViewClose","undefined","changePropertyView","index","event","status","window","innerWidth","enableAutoClick","ATTACHMENTS","COMMENTS","TESTVIEW","ANALYSTCALENDAR","sideNavDetail","testList","searchedTests","JA_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","attachmentTabDetail","commentTabDetail","SingleItem","sampleGridDataState","sampleGridDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","inputParam","TestView","testItem","testGridDataState","testGridDataStateChange","DynamicTestGridItem","DynamicTestGridMoreField","attachmentTabMap","Map","sample","subsampleList","JA_SUBSAMPLE","selectedSubSampleList","sampleList","JA_SAMPLE","selectedSampleList","set","onAttachmentSaveClick","userRoleControlRights","RegistrationTestAttachment","deleteAttachment","nneedsubsample","VALUE","methodUrl","esignRights","masterList","RegistrationSampleAttachment","viewAttachment","attachmentskip","attachmenttake","settings","parseInt","SAMPLE","RegistrationAttachment","commentTabMap","onCommentsSaveClick","RegistrationTestComment","testDataStateChange","operation","ncontrolCode","selectedId","RegistrationSampleComment","subsampleDataStateChange","RegistrationComment","sampleCommentDataState","sampleDataStateChange","dataState","sampleAttachmentDataState","onInputSwitchOnChange","target","name","enablePropertyPopup","onSampleTabChange","onSubSampleTabChange","subSampleCommentDataState","onTestTabChange","toString","preregno","saveType","formRef","selectedRecord","saveParam","selectedMaster","x","nformcode","loadEsign","screenData","isTestComment","searchedSubSample","acceptList","searchedSample","onFilterComboChange","comboData","fieldName","inputParamData","value","nsampletypecode","nflag","fromdate","todate","nregtypecode","nregsubtypecode","nneedtemplatebasedflow","dfrom","dto","stransactionstatus","handleFilterDateChange","dateName","dateValue","onReload","SINGLESELECT","stransdisplaystatus","searchSampleRef","searchSubSampleRef","searchTestRef","onFilterSubmit","CancelStatus","cancelId","searchedTest","cancelList","ntype","postParamList","classUrl","action","openModal","parentPopUpSize","onJobAllocationTestWise","scontrolname","transactiontestcode","onSaveClick","onSaveAllotJob","onSaveAllotAnotherUser","onSaveReschedule","onSaveAllotJobInSchedule","onSaveSection","JobAllocationData","allotjob","filter","insertRecord","josnArray","sleectedData","val","label","ntechniquecode","nusercode","start","end","InstrumentCategory","InstrumentName","Instrument","description","valJsonUi","UserStartDate","UserEndDate","InstrumentStartDate","InstrumentEndDate","objJobAllocation","JSON","stringify","displayName","searchRef","duserblockfromdatetime","suserholdduration","nuserperiodcode","ninstrumentcatcode","ninstrumentnamecode","ninstrumentcode","dinstblockfromdatetime","sinstrumentholdduration","ninstrumentperiodcode","scomments","allotList","Technique","TechniqueCode","rescheduleList","closeModal","isOpen","InstrumentId","analystCalenderData","validateEsign","sreason","nreasoncode","spredefinedreason","password","handleDateChange","onComboChange","ncalibrationreq","onInputOnChange","onNumericInputOnChange","constantsValue","replace","handleDataChange","created","updated","deleteted","scheduleData","postParam","aa","concat","Object","assign","isClearSearch","createRef","masterStatus","error","oldComboData","filterSampleParam","filterSubSampleParam","filterTestParam","showTest","showSample","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","TestList","DynamicDesignMappingList","sampleSearchField","subsampleSearchField","testSearchField","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","propertyPopupWidth","subSampleGetParam","openAnalystCalendar","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","shouldComponentUpdate","nextProps","nextState","render","JA_SampleList","JA_SubSampleList","JA_TestList","receiveId","allotId","anotherUserId","rescheduleId","allotCalenderId","testSectionChangeID","subSampleGetJAParam","testGetJAParam","testChildGetJAParam","filteredListName","clearFilter","primaryKeyField","fetchUrl","fecthInputObject","childRefs","ref","childFilteredListName","selectedObject","inputListName","updatedListname","unchangeList","NA","validationColumnList","mandatoryFields","forEach","mandatory","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","ssectionname","stestsynonym","testDesign","borderBottom","display","split","setting","ALL","indexOf","updateSection","AllotJobStatus","AllotAnotherUserStatus","mainDesign","marginTop","secondarySelection","openFilter","ReceiveinLabStatus","width","fullviewExpand","fullviewCollapse","console","log","showSaveContinue","Users","currentTime","calenderProperties","calenderColor","calenderPublicHolidays","personalLeaveRestrict","calenderCommonHolidays1","calenderUserHolidays","holidaydateRestrict","commonHolidaydateRestrict","UsersPeriod","InstrumentPeriod","RescheduleSection","Section","SectionUsers","nneduserfilter","receiveList","ncheck","nneedmyjob","checkRegisterSamples","REGISTER","componentDidUpdate","previousProps","selectedFilter","bool","values","nsubsampleneed","NO","group","field","SampletypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","UserSectionListMap","TestListMap","DynamicDesignMappingListMap","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","parse","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplesearchfields","subsamplesearchfields","testListFields","testsearchfields","samplegriditem","samplegridmoreitem","testgriditem","testgridmoreitem","sampledisplayfields","testdisplayfields","testlistmoreitems","UserData","i","jsonuidata","dataItem","parseAdjust","title","isMultiSort","multiSortData","pkey","list","samplesearch","searchFieldList","changeList","getActiveTestURL","temparray","option","LABEL","slanguagetypecode","LISTITEM","controlcode","tempsection","sectionvalue","sectionflag","subsample","nselectedtestcode","type","tempinstrument","instrumentvalue","instrumentcategoryflag","nselecttype","ntestcodeList","anotherUserList","bflag","url","joballocationData","subSampleList","sectionList","sampleListCount","item1","nregistrationsectioncode","currentYear","getFullYear","eventDate","date","setFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { toast } from 'react-toastify';\r\nimport { convertDateValuetoString, rearrangeDateFormat, constructOptionList, getControlMap, sortData, getSameRecordFromTwoArrays, showEsign, convertDateTimetoStringDBFormat, validatePhoneNumber } from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\r\nimport {\r\n    updateStore, callService, crudMaster, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation,\r\n    getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation,\r\n    getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getInstrumentName, getInstrumentId, getUsers,\r\n    ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction,\r\n    RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo,\r\n    getAttachmentCombo, filterTransactionList, AllotJobActionCalendar,getSectionTest,\r\n    updateSectionJobAllocation,getUsersSection\r\n} from '../../actions';\r\nimport JobAllocationFilter from './JobAllocationFilter';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { transactionStatus, SideBarSeqno, SideBarTabIndex, designProperties } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSync, faEye, faLink, faChevronRight, faComments, faClock, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ReactComponent as ReceivedInLab } from '../../assets/image/receivedlab.svg';\r\nimport { ReactComponent as Allotted } from '../../assets/image/allotted.svg';\r\nimport { ReactComponent as AnotherUser } from '../../assets/image/allotanotheruser.svg';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg';\r\nimport { ReactComponent as SectionChange } from '../../assets/image/section-change.svg';\r\nimport { ReactComponent as AllotJob } from '../../assets/image/allotjob.svg';\r\n\r\nimport fullviewExpand from '../../assets/image/fullview-expand.svg';\r\nimport fullviewCollapse from '../../assets/image/fullview-collapse.svg';\r\n// import { ReactComponent as Analystcalendar } from '../../assets/image/Analystcalendar.svg';\r\n// import { ReactComponent as Instrumentcalendar } from '../../assets/image/instrumentcalendar.svg';\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport AddJobAllocation from './AddJobAllocation';\r\nimport AllotAnotherUser from './AllotAnotherUser';\r\nimport ScheduleSection  from './ScheduleSection';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions';\r\n// import AnalystCalenderBasedOnUser from './AnalystCalenderBasedOnUser'\r\nimport NewJobAlloct from '../joballocation/calender/NewJobAlloct';\r\nimport { checkBoxOperation } from '../../components/Enumeration';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass JobAllocation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sampleAttachmentDataState: {},\r\n            sampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            subsampleAttachmentDataState: {},\r\n            subsampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testAttachmentDataState: {},\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testViewDataState: {},\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            filterSampleParam: {},\r\n            filterSubSampleParam: {},\r\n            filterTestParam: {},\r\n            operation: \"\",\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            testItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            TestList: [],\r\n            DynamicDesignMappingList: [],\r\n            sampleskip: 0,\r\n            sampletake: this.props.Login.settings && this.props.Login.settings[3],\r\n            subsampleskip: 0,\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 28.6,\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            DynamicSampleColumns: [],\r\n            DynamicSubSampleColumns: [],\r\n            DynamicTestColumns: [],\r\n            enableAutoClick: false,\r\n            enablePropertyPopup: false,\r\n            propertyPopupWidth: \"60\",\r\n            data: [],\r\n            subSampleGetParam: {},\r\n            openAnalystCalendar: false,\r\n            data: []\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    parentScheduleState = (data) => {\r\n        this.setState({ data: data })\r\n        // this.state.\r\n    }\r\n\r\n\r\n    parentSelectRecord = (data, analyst) => {\r\n        this.setState({ calenderSelectedRecord: data, data: analyst })\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Rendering the component only if \r\n        // passed props value is changed\r\n        if (nextState.data !== this.state.data) {\r\n            return false;\r\n        } else if (nextState.calenderSelectedRecord !== this.state.calenderSelectedRecord) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    // openAnalystCalendar = () => {\r\n    //     this.setState({ openAnalystCalendar: true })\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\r\n        let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\r\n        let JA_TestList = this.props.Login.masterData.JA_TEST ? sortData(this.props.Login.masterData.JA_TEST, 'descending', 'ntransactiontestcode') : [];\r\n\r\n        const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\r\n        const allotId = this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\r\n        const anotherUserId = this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\r\n        const rescheduleId = this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\r\n        const cancelId = this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\r\n        const allotCalenderId = this.state.controlMap.has(\"AllotCalender\") ? this.state.controlMap.get(\"AllotCalender\").ncontrolcode : -1;\r\n        const testSectionChangeID = this.state.controlMap.has(\"ChangeTestSection\") ? this.state.controlMap.get(\"ChangeTestSection\").ncontrolcode : -1;\r\n\r\n\r\n        let subSampleGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            // ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            sampleskip: this.state.sampleskip,\r\n            sampletake: this.state.sampletake,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subsampleskip: this.state.subsampleskip,\r\n            subsampletake: this.state.subsampleskip,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            //checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        }\r\n\r\n        let testGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            //ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.nsectioncode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            activeSampleTab: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n\r\n        }\r\n\r\n        let testChildGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n            activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"nregistrationsectioncode\",\r\n                fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSample\",\r\n                inputListName: \"JA_SAMPLE\",\r\n                updatedListname: \"JASelectedSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"joballocation/\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSubSample\",\r\n                inputListName: \"JA_SUBSAMPLE\",\r\n                updatedListname: \"JASelectedSubSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"JA_TEST\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                selectedObject: \"JASelectedTest\",\r\n                inputListName: \"JASelectedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n\r\n\r\n            }\r\n        ];\r\n\r\n\r\n\r\n        if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\") {\r\n            \r\n               \r\n            if (this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA) {\r\n                \r\n                this.validationColumnList = [\r\n\r\n                    this.props.Login.operation === \"Reschedule\"?{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                  :\"\",\r\n\r\n\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                ]\r\n              \r\n            } else {\r\n                this.validationColumnList = [\r\n                    this.props.Login.operation === \"Reschedule\"?{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                    :\"\",\r\n\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                  //  { \"idsName\": \"IDS_INSTRUMENTNAME\", \"dataField\": \"ninstrumentnamecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"dinstblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"sinstrumentholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"ninstrumentperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                ]\r\n            \r\n            }\r\n        } else if (this.props.Login.operation === \"AllotJobCalendar\") {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            ]\r\n        }\r\n\r\n        else if (this.props.Login.operation === \"AllotAnotherUser\") {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]\r\n        }else if(this.props.Login.operation === \"updateSection\"){\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]  \r\n        }\r\n\r\n        const mandatoryFields = [];\r\n        if (this.validationColumnList && this.validationColumnList.length > 0) {\r\n            this.validationColumnList.forEach(item => item.mandatory === true ?\r\n                mandatoryFields.push(item) : \"\"\r\n            );\r\n        }\r\n\r\n        let breadCrumbData = [];\r\n        breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_SECTION\",\r\n                \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                    this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TEST\",\r\n                \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            }\r\n\r\n        ];\r\n\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n\r\n\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager' >\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        masterList={this.props.Login.masterData.searchedTest || JA_TestList}\r\n                        selectedMaster={this.props.Login.masterData.JASelectedTest}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetailJobAllocation(event, status); this.changePropertyView(2, event, \"click\") }}\r\n                        inputParam={testChildGetJAParam}\r\n                        additionalParam={[]}\r\n                        mainField=\"stestsynonym\"\r\n                        selectedListName=\"JASelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        subFieldsLabel={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        needMultiSelect={true}\r\n                        subFields={this.state.testListColumns || []}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        showStatusName={true}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTest\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={this.state.filterTestParam}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"stransdisplaystatus\"\r\n                        childTabsKey={[\"TestView\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"]}\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"JA_SAMPLE\"\r\n                        selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                            && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n                            === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right\">\r\n                                <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CHANGESECTION\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(testSectionChangeID) === -1}\r\n                                        onClick={() => this.updateSection(testSectionChangeID, this.state.testskip, this.state.testtake,'updateSection')} >\r\n                                         <SectionChange className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n\r\n                                    </Nav.Link>\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTJOB\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(allotId) === -1}\r\n                                        onClick={() => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake,'AllotJob', 1)} >\r\n                                        {/* <Allotted className=\"custom_icons\" width=\"20\" height=\"30\" /> */}\r\n                                        <AllotJob className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTJOBINCALENDER\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(allotCalenderId) === -1}\r\n                                        onClick={() => this.AllotJobStatus(allotCalenderId, this.state.testskip, this.state.testtake,'AllotJobCalendar', 2)} >\r\n                                        <FontAwesomeIcon icon={faCalendar} />\r\n                                    </Nav.Link>\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTANOTHERUSER\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(anotherUserId) === -1}\r\n                                        onClick={() => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake)} >\r\n                                        <AnotherUser className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                    </Nav.Link>\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(rescheduleId) === -1}\r\n                                        onClick={() => this.AllotJobStatus(rescheduleId, this.state.testskip, this.state.testtake,'Reschedule',1)} >\r\n                                        <FontAwesomeIcon icon={faClock} />\r\n                                    </Nav.Link>\r\n\r\n\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                        onClick={() => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake)} >\r\n                                        <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                    </Nav.Link>\r\n\r\n                                 \r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card >\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0 sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            cardHead={94}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || JA_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.JASelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            //secondaryKeyField = \"nsectioncode\"\r\n                            getMasterDetail={(event, status) => { this.props.getJobAllocationTestDetail(event, status); this.state.enableAutoClick && this.changePropertyView(2, event, \"click\") }}\r\n                            inputParam={testGetJAParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            secondarySelection={this.props.Login.secondarySelection || \"\"}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={{\r\n                                ...this.state.filterSubSampleParam,\r\n                                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                            }}\r\n                            additionalParam={['napprovalversioncode']}\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"JASelectedSubSample\"\r\n                            objectName=\"subsample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            needValidation={true}\r\n                            validationKey=\"napprovalversioncode\"\r\n                            validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            skip={this.state.subsampleskip}\r\n                            take={this.state.subsampletake}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            //selectionField=\"ntransactionstatus\"\r\n                            //selectionFieldName=\"stransdisplaystatus\"\r\n                            needMultiSelect={true}\r\n                            //selectionColorField=\"scolorhexcode\"\r\n                            subFieldsLabel={false}\r\n                            subFieldsFile={true}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                            childTabsKey={[\r\n                                // \"RegistrationAttachment\", \r\n                                \"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                            needFilter={false}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        } else {\r\n            mainDesign = testDesign\r\n        }\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}>\r\n\r\n                                    <SplitterLayout borderColor=\"#999\"\r\n                                        primaryIndex={1} percentage={true}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        primaryMinSize={30}\r\n                                        secondaryMinSize={20}\r\n                                    >\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                listMasterShowIcon={1}\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedSample || JA_SampleList}\r\n                                                selectedMaster={this.props.Login.masterData.JASelectedSample}\r\n                                                primaryKeyField=\"nregistrationsectioncode\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                getMasterDetail={(event, status) => { this.props.getJobAllocationSubSampleDetail(event, status); this.state.enableAutoClick && this.changePropertyView(4, event, \"click\") }}\r\n                                                inputParam={subSampleGetJAParam}\r\n                                                selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                                    && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                mainField={\"sarno\"}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                selectedListName=\"JASelectedSample\"\r\n                                                searchListName=\"searchedSample\"\r\n                                                searchRef={this.searchSampleRef}\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"stransdisplaystatus\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                needMultiSelect={true}\r\n                                                showStatusBlink={true}\r\n                                                callCloseFunction={true}\r\n                                                filterParam={{\r\n                                                    ...this.state.filterSampleParam,\r\n                                                    childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                    { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                                }}\r\n                                                subFieldsLabel={false}\r\n                                                handlePageChange={this.handleSamplePageChange}\r\n                                                skip={this.state.sampleskip}\r\n                                                take={this.state.sampletake}\r\n                                                childTabsKey={[\"RegistrationAttachment\", \"RegistrationComment\", \"JA_SUBSAMPLE\",\r\n                                                    \"JA_TEST\", \"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"]}\r\n                                                needFilter={true}\r\n                                                commonActions={\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RECEIVEINLAB\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(receiveId) === -1}\r\n                                                            onClick={() => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake)} >\r\n                                                            <ReceivedInLab className=\"custom_icons\" width=\"25\" height=\"30\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                            // data-for=\"tooltip-common-wrap\"\r\n                                                            onClick={() => this.onReload()} >\r\n                                                           <RefreshIcon className='custom_icons'/>\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <JobAllocationFilter\r\n                                                            SampleType={this.state.SampletypeList || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.defaultSampleTypeValue || {}}\r\n                                                            RegType={this.state.RegistrationTypeList || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.defaultRegTypeValue || {}}\r\n                                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.defaultRegSubTypeValue || {}}\r\n                                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.defaultApprovalVersionValue || []}\r\n                                                            UserSection={this.state.UserSectionList || []}\r\n                                                            UserSectionValue={this.props.Login.masterData.defaultUserSectionValue || []}\r\n                                                            JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                            Test={this.state.TestList || []}\r\n                                                            TestValue={this.props.Login.masterData.defaultTestValue || []}\r\n                                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.defaultFilterStatusValue || []}\r\n                                                            DynamicDesignMapping={this.state.DynamicDesignMappingList || []}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.defaultDesignTemplateMappingValue || []}\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleFilterDateChange={this.handleFilterDateChange}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true || this.state.showSubSample === true ?\r\n                                                { display: \"block\" } : { display: \"none\"}} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"}\r\n                                        </div>\r\n\r\n                                        <div className={` vertical-tab-content-attachment position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick={() => this.setState({ enablePropertyPopup: !this.state.enablePropertyPopup })}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 9 ? this.sideNavDetail(\"IDS_ANALYSTCALENDAR\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 10 ? this.sideNavDetail(\"IDS_INSTRUMENTCALENDAR\") : \"\"}\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2)}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3)}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(9)}>\r\n                                                <Analystcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ANALYSTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(10)}>\r\n                                                <Instrumentcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {console.log(this.props.Login.operation)}\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        // hideSave={this.props.Login.operation === \"AllotJobCalendar\" ? true : false}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        size={this.props.Login.operation === \"AllotJobCalendar\" ? \"xl\" : \"lg\"}\r\n                        selectedRecord={this.props.Login.operation === \"AllotJobCalendar\" ? this.state.calenderSelectedRecord||{} : this.state.selectedRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ? (\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) :\r\n                                //  this.state.openAnalystCalendar ?\r\n                                //     <AnalystCalenderBasedOnUser userData={this.props.Login.masterData.analystCalenderData} /> :\r\n                                this.props.Login.operation === \"AllotJobCalendar\" ? (\r\n                                    <NewJobAlloct\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                       // onComboChange={this.onComboChange}\r\n                                        //handleDateChange={this.handleDateChange}\r\n                                        Technique={this.props.Login.Technique}\r\n                                        Users={this.props.Login.Users}\r\n                                        //userData={this.props.Login.masterData.analystCalenderData}\r\n                                        InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                                        Instrument={this.props.Login.Instrument}\r\n                                        currentTime={this.props.Login.currentTime || []}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        selectedTest={this.props.Login.masterData.JASelectedTest}\r\n                                        parentScheduleState={this.parentScheduleState}\r\n                                        //updateCalender={this.props.updateCalender}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        parentSelectRecord={this.parentSelectRecord}\r\n                                        calenderProperties={this.props.Login.calenderProperties}\r\n                                        calenderColor={this.props.Login.calenderColor}\r\n                                        calenderPublicHolidays={this.props.Login.calenderPublicHolidays}\r\n                                        personalLeaveRestrict={this.props.Login.personalLeaveRestrict}\r\n                                        updateStore={this.props.updateStore}\r\n                                        calenderCommonHolidays1={this.props.Login.calenderCommonHolidays1}\r\n                                        calenderUserHolidays={ this.props.Login.calenderUserHolidays}\r\n                                        holidaydateRestrict={this.props.Login.holidaydateRestrict}\r\n                                        commonHolidaydateRestrict={this.props.Login.commonHolidaydateRestrict}\r\n                                    />\r\n\r\n                                ) : this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\" ?\r\n                                    <AddJobAllocation\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        Technique={this.props.Login.Technique}\r\n                                        Users={this.props.Login.Users}\r\n                                        UsersPeriod={this.props.Login.UsersPeriod}\r\n                                        InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                                        InstrumentName={this.props.Login.InstrumentName}\r\n                                        InstrumentId={this.props.Login.InstrumentId}\r\n                                        InstrumentPeriod={this.props.Login.InstrumentPeriod}\r\n                                        currentTime={this.props.Login.currentTime || []}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        openAnalystCalendar={this.openAnalystCalendar}\r\n                                        RescheduleSection={this.props.Login.RescheduleSection}\r\n                                    /> : this.props.Login.operation === \"AllotAnotherUser\" ? (\r\n                                        <AllotAnotherUser\r\n                                            onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            Technique={this.props.Login.Technique}\r\n                                            TechniqueCode ={this.props.Login.TechniqueCode}\r\n                                            Users={this.props.Login.Users}\r\n                                            UsersPeriod={this.props.Login.UsersPeriod}\r\n                                            currentTime={this.props.Login.currentTime || []}\r\n                                            operation={this.props.Login.operation}\r\n                                            inputParam={this.props.inputParam}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        />\r\n                                        //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\r\n                                        //         <>\r\n                                        //             <Row>\r\n                                        //                 <Col md={12}>\r\n                                        //                 <FormSelectSearch\r\n                                        //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                                        //                     isSearchable={true}\r\n                                        //                     name={\"nusercode\"}\r\n                                        //                     isDisabled={false}\r\n                                        //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        //                     isMandatory={true}\r\n                                        //                     isClearable={false}\r\n                                        //                     options={this.props.Login.Users}\r\n                                        //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\r\n                                        //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\r\n                                        //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\r\n                                        //                     closeMenuOnSelect={true}\r\n                                        //                 />\r\n                                        //                 </Col>\r\n                                        //             </Row>\r\n\r\n                                        //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                                        //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\r\n                                        //                 <WeekView />\r\n                                        //                 <MonthView />\r\n\r\n                                        //             </Scheduler>\r\n\r\n                                        //             {/* <AnalystCalendar\r\n                                        //                 UserData={this.props.Login.masterData.UserData}\r\n                                        //                 operation={this.props.Login.operation}\r\n                                        //                 inputParam={this.props.inputParam}\r\n                                        //                 userInfo={this.props.Login.userInfo}\r\n\r\n                                        //             /> */}\r\n                                        //         </>                             \r\n                                        //    ): (\r\n                                    ) : \r\n                                    this.props.Login.operation === \"updateSection\" ? (\r\n                                        <ScheduleSection\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onComboChange={this.onComboChange}\r\n                                            section={this.props.Login.Section}\r\n                                            SectionUsers={this.props.Login.SectionUsers}\r\n                                            nneduserfilter={this.props.Login.nneduserfilter}\r\n                                            operation={this.props.Login.operation}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        />\r\n                                    )\r\n                                        :\r\n                                    \r\n                                    (\r\n                                        \"\"\r\n                                    )\r\n                        }\r\n                    /> : \"\"}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    closeFilter = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let inputValues = {\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(),// ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\r\n            toDate: this.props.Login.masterData.realToDate || new Date(), //? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            ApprovalConfigVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            //FromDate:this.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.fromDate) : new Date(),\r\n            // ToDate:this.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.toDate) : new Date(),\r\n            UserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\r\n            JobStatus: this.props.Login.masterData.JobStatus || {},\r\n            TestValue: this.props.Login.masterData.realTestValue || {},\r\n            defaultRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            defaultRegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            defaultApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            defaultDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            defaultFilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            defaultSampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            defaultTestValue: this.props.Login.masterData.realTestValue || {},\r\n            defaultUserSectionValue: this.props.Login.masterData.realUserSectionValue || {},\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            RegistrationType: this.props.Login.masterData.realRegistrationTypeList || [],\r\n            RegistrationSubType: this.props.Login.masterData.realRegistrationSubTypeList || [],\r\n            ApprovalConfigVersion: this.props.Login.masterData.realApprovalConfigVersionList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList1 || [],\r\n            UserSection: this.props.Login.masterData.realUserSectionList || [],\r\n            Test: this.props.Login.masterData.realTestList || [],\r\n            DynamicDesignMapping: this.props.Login.masterData.realDynamicDesignMappingList || [],\r\n            defaultSampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    ReceiveinLabStatus(receiveId, sampleskip, sampletake) {\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            // sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.searchedSample.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\r\n        }\r\n        let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if (receiveList && receiveList.length > 0) {\r\n            // START ALPD-3570 VISHAKH\r\n            // let tempsection = 0;\r\n            // let sectionvalue = 0;\r\n            // let bflag = true;\r\n            // let sampleList = this.props.Login.masterData.JASelectedSample;\r\n            // sampleList.forEach((item) => {\r\n            //     sectionvalue = item.nsectioncode;\r\n            //     if (tempsection !== sectionvalue && tempsection !== 0) {\r\n            //         bflag = false;\r\n            //     } else {\r\n            //         tempsection = sectionvalue\r\n            //     }\r\n            // });\r\n\r\n            // if (bflag) {\r\n                // END ALPD-3570 VISHAKH\r\n                let JASelectedSample = this.props.Login.masterData.JASelectedSample;\r\n                if (this.props.Login.masterData.JASelectedSubSample.length !== 0) {\r\n                    let JASelectedSubSample = this.props.Login.masterData.JASelectedSubSample;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    // START ALPD-3570 VISHAKH\r\n                    // let arr = [];\r\n                    // JASelectedSample && JASelectedSample.map((item) => {\r\n                    //     if (!arr.includes(item.nsectioncode)) {\r\n                    //         arr.push(item.nsectioncode)\r\n                    //     }\r\n                    // }\r\n                    // )\r\n                    // END ALPD-3570 VISHAKH\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        nflag: 3,\r\n                        ncheck: 1,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: \"0\",\r\n                        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n                        // npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        npreregno: receiveList ? receiveList.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedSubSample ? JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        // nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\r\n                        ncontrolcode: receiveId,\r\n                        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                        //checkBoxOperation: 3,\r\n                        checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                        ntype: 2,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        screenName: this.props.Login.screenName,\r\n                        // activeSampleTab: \"IDS_SAMPLEATTACHMENTS\",\r\n                        // activeSubSampleTab: \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                        // activeTestTab: \"IDS_TESTATTACHMENTS\",\r\n                        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n                        nneedmyjob:this.props.Login.masterData && this.props.Login.masterData.nneedmyjob\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                        postParamList: this.postParamList,\r\n                        classUrl: \"joballocation\",\r\n                        operation: 'Create',\r\n                        methodUrl: \"ReceiveinLab\",\r\n                        action: \"receiveinlab\",\r\n\r\n                    }\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                                openModal: true,\r\n                                parentPopUpSize: 'lg',\r\n                                screenName: this.props.Login.screenName,\r\n                                operation: 'Create'\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        this.props.ReceiveinLabStatusWise(inputParam);\r\n                    }\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLESTORECEIVE\" }));\r\n                }\r\n            // START ALPD-3570 VISHAKH\r\n            // } else {\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONSAMPLES\" }));\r\n            // }\r\n            // END ALPD-3570 VISHAKH\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    checkRegisterSamples(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.REGISTER)\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        console.log(\"enter render\")\r\n        let { userRoleControlRights, controlMap,\r\n            testListColumns, testSearchField, subsampleSearchField, sampleSearchField,\r\n            SingleItem, testItem, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            testAttachmentDataState, testCommentDataState, testViewDataState, activeTabIndex, activeTabId,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, DynamicDesignMappingList, sampleskip, sampletake, subsampleskip, subsampletake, testskip, testtake, selectedFilter,\r\n            DynamicGridItem, DynamicTestGridItem, DynamicTestGridMoreField, DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n            DynamicGridMoreField, data } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] }\r\n\r\n                testAttachmentDataState = dataState\r\n                testCommentDataState = dataState\r\n                testViewDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\r\n            const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\r\n\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\r\n\r\n            bool = true;\r\n            sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip\r\n            sampletake = this.props.Login.sampletake || sampletake\r\n\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, stransdisplaystatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n\r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\r\n                testViewDataState = this.props.Login.testViewDataState;\r\n            }\r\n\r\n        }\r\n\r\n       \r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem : [];\r\n            DynamicTestGridMoreField = dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields : [];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.UserData !== undefined) {\r\n            if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\r\n                for (let i = 0; i < this.props.Login.masterData.UserData.length; i++) {\r\n                    data.push(this.props.Login.masterData.UserData[i].jsonuidata);\r\n                }\r\n                data = data.map(dataItem => ({\r\n                    start: parseAdjust(dataItem.UserStartDate),\r\n                    end: parseAdjust(dataItem.UserEndDate),\r\n                    title: dataItem.Comments\r\n\r\n                }))\r\n                bool = true;\r\n                //this.setState({data:data});\r\n            }\r\n        }\r\n\r\n        const filterSampleParam = {\r\n            inputListName: \"JA_SAMPLE\",\r\n            selectedObject: \"JASelectedSample\",\r\n            primaryKeyField: \"nregistrationsectioncode\",\r\n            fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n            isMultiSort: true,\r\n            multiSortData: [{ pkey: 'ntransactionsamplecode', list: 'JA_SUBSAMPLE' }, { pkey: 'ntransactiontestcode', list: 'JA_TEST' }],\r\n            sampleskip: 0,\r\n            subsampleskip: 0,\r\n            testskip: 0,\r\n            skip:0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                //nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\r\n                //npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                samplesearch: 1,\r\n                //checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\r\n                \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                \"JASelectedSample\", \"JASelectedSubSample\", \"JASelectedTest\"]\r\n        };\r\n\r\n        const filterSubSampleParam = {\r\n            inputListName: \"JA_SUBSAMPLE\",\r\n            selectedObject: \"JASelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"joballocation/getJobAllocationTestDetails\",\r\n            isMultiSort: true,\r\n            multiSortData: [{ pkey: 'ntransactiontestcode', list: 'JA_TEST' }],\r\n            sampleskip: this.state.sampleskip,\r\n            //sampleskip: 0,\r\n            subsampleskip: 0,\r\n            testskip: 0,\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                //checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                //nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(x => x.nsectioncode).join(\",\"),\r\n                //ALPD-3190 fix\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue && this.props.Login.masterData.realUserSectionValue.nsectioncode === 0 ? this.props.Login.masterData.UserSection && this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                //ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                //ALPD-2549 fix\r\n                ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: subsampleSearchField,\r\n            changeList: [\"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                \"JASelectedSubSample\", \"JASelectedTest\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"JA_TEST\",\r\n            selectedObject: \"JASelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            sampleskip: this.state.sampleskip,\r\n            //sampleskip: 0,\r\n            subsampleskip: this.state.subsampleskip,\r\n            testskip: 0,\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                //checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: testSearchField,\r\n            changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\r\n\r\n        }\r\n\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                testListColumns, testSearchField, subsampleSearchField, sampleSearchField,\r\n                SingleItem, testItem, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                testAttachmentDataState, testCommentDataState, testViewDataState, activeTabIndex, activeTabId,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList, DynamicDesignMappingList,\r\n                sampleskip, sampletake, subsampleskip, subsampletake, testskip, testtake, selectedFilter,\r\n                DynamicGridItem, DynamicTestGridItem, DynamicTestGridMoreField, DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                DynamicGridMoreField, data, filterTestParam, filterSubSampleParam, filterSampleParam\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSamplePageChange = e => {\r\n        this.setState({\r\n            sampleskip: e.skip,\r\n            sampletake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n\r\n\r\n                if (activeTestTab === \"IDS_TESTVIEW\") {\r\n                    let arr = [];\r\n                    JASelectedTest && JASelectedTest.map((item) => {\r\n                        if (!arr.includes(item.ntransactionstatus)) {\r\n                            arr.push(item.ntransactionstatus)\r\n                        }\r\n                    });\r\n                    let transstatus = arr.map(nsectioncode => nsectioncode).join(\",\");\r\n                    if (transstatus.includes(\"20\")) {\r\n                        let inputData = {\r\n                            masterData: this.props.Login.masterData,\r\n                            JASelectedTest: JASelectedTest,\r\n                            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                                String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                            npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                                this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                            userinfo: this.props.Login.userInfo,\r\n                            activeTestTab: activeTestTab,\r\n                            screenName: activeTestTab,\r\n                            testCommentDataState: this.state.testCommentDataState,\r\n                            testAttachmentDataState: this.state.testAttachmentDataState,\r\n                            testViewDataState: this.state.testViewDataState,\r\n                            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                            activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                        }\r\n                        this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLOTTEST\" }))\r\n                    }\r\n                } else {\r\n                    let inputData = {\r\n                        masterData: this.props.Login.masterData,\r\n                        JASelectedTest: JASelectedTest,\r\n                        ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                            String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                        npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                            this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                        userinfo: this.props.Login.userInfo,\r\n                        activeTestTab: activeTestTab,\r\n                        screenName: activeTestTab,\r\n                        testCommentDataState: this.state.testCommentDataState,\r\n                        testAttachmentDataState: this.state.testAttachmentDataState,\r\n                        testViewDataState: this.state.testViewDataState,\r\n                        activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                        activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                    }\r\n                    this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subsampleCommentDataState: this.state.subsampleCommentDataState,\r\n                    subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.JASelectedSample,\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n    }\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status != \"click\") {\r\n            if (index === SideBarTabIndex.ATTACHMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.COMMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.TESTVIEW) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTVIEW\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            } else if (index === SideBarTabIndex.ANALYSTCALENDAR) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_ANALYSTCALENDAR\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName === \"IDS_ATTACHMENTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                : screenName === \"IDS_COMMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName === \"IDS_SAMPLEDETAILS\" ?\r\n                        this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ?\r\n                            <SampleInfoView\r\n                                data={this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0\r\n                                    ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {}}\r\n                                SingleItem={this.state.SingleItem}\r\n                                screenName=\"IDS_SAMPLEINFO\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                            /> :\r\n                            <SampleInfoGrid\r\n                                selectedSample={this.props.Login.masterData.JASelectedSample}\r\n                                dataState={this.state.sampleGridDataState}\r\n                                dataStateChange={this.sampleGridDataStateChange}\r\n                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                screenName=\"IDS_SAMPLEGRID\"\r\n                                expandField=\"expanded\"\r\n                                jsonField={\"jsondata\"}\r\n                            />\r\n                        : screenName === \"IDS_ALLOTTEDTEST\" ?\r\n\r\n                            this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ?\r\n                                <SampleInfoView\r\n                                    data={this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0\r\n                                        ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {}}\r\n                                    SingleItem={this.state.testItem}\r\n                                    screenName=\"IDS_TESTVIEW\"\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                /> :\r\n                                <SampleInfoGrid\r\n                                    primaryKeyField={\"ntransactiontestcode\"}\r\n                                    selectedSample={this.props.Login.masterData.TestView}\r\n                                    dataState={this.state.testGridDataState}\r\n                                    dataStateChange={this.testGridDataStateChange}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                    detailedFieldList={this.gridfillingColumn(this.state.DynamicTestGridMoreField) || []}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    screenName=\"IDS_TESTGRID\"\r\n                                    expandField=\"expanded\"\r\n                                    jsonField={\"jsondata\"}\r\n                                />\r\n                            // : screenName === \"IDS_ANALYSTCALENDAR\" ?\r\n                            //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                            //         <DayView numberOfDays={3} />\r\n                            //         <WeekView />\r\n                            //         <MonthView />   \r\n                            //     </Scheduler>        \r\n                            : \"\"\r\n        )\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake, subsampleskip, subsampletake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.JA_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ?\r\n            this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n        //let sampleList = this.props.Login.masterData.JA_SAMPLE || [];\r\n        let sampleskip=this.state.sampleskip;\r\n        let sampletake=this.state.sampletake\r\n        let sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\r\n        //sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            tabSequence={SideBarSeqno.TEST}\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"JASelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            isneedHeader={true}\r\n        />)\r\n\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                masterList={selectedSubSampleList}\r\n                masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                viewFile={this.props.viewAttachment}\r\n                addName={\"AddSubSampleAttachment\"}\r\n                editName={\"EditSubSampleAttachment\"}\r\n                deleteName={\"DeleteSubSampleAttachment\"}\r\n                viewName={\"ViewSubSampleAttachment\"}\r\n                methodUrl={\"SubSampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n                take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleAttachment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\r\n\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n                isneedHeader={true}\r\n            />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster=\"JASelectedSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={selectedSampleList}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JASelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLE\"\r\n                displayName=\"sarno\"\r\n                isneedHeader={true}\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subsampleskip, subsampletake, sampleskip, sampletake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n        let sampleList = this.props.Login.masterData.JA_SAMPLE || [];\r\n        sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n                screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                addName={\"AddSubSampleComment\"}\r\n                editName={\"EditSubSampleComment\"}\r\n                deleteName={\"DeleteSubSampleComment\"}\r\n                methodUrl={\"SubSampleComment\"}\r\n                masterData={this.props.Login.masterData}\r\n                isTestComment={false}\r\n                masterList={selectedSubSampleList}\r\n                masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n                primaryKeyField={\"nsamplecommentcode\"}\r\n                dataState={this.state.subsampleCommentDataState}\r\n                dataStateChange={this.subsampleDataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleComment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\r\n                    ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n                selectedId={this.props.Login.selectedId || null}\r\n            />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"JASelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={selectedSampleList}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.sampleCommentDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.JASelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTVIEW\":\r\n                this.setState({\r\n                    testViewDataState: event.testViewDataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    subsampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subsampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n\r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    testGridDataStateChange = (event) => {\r\n        this.setState({\r\n            testGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\", \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\", \"dataType\": [option[designProperties.LISTITEM]] };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSample: this.props.Login.masterData.JASelectedSample,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSubSampleTab = tabProps.screenName;\r\n        if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSubSampleTab,\r\n                activeSubSampleTab,\r\n                subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                subSampleCommentDataState: this.state.subsampleCommentDataState,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab: activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetailJobAllocation(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake, sampleskip, sampletake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\r\n        sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n        }\r\n\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleComments(saveParam, acceptList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultSampleTypeValue: comboData.item,\r\n                        realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\r\n                        realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\r\n                    };\r\n                    this.props.getRegTypeJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultRegTypeValue: comboData.item,\r\n                        realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\r\n                        realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\r\n\r\n                    }\r\n                    this.props.getRegSubTypeJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\r\n                        realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            defaultRegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getAppConfigVersionJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'napprovalconfigversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 5,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString(),\r\n                        realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\r\n                        realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\r\n                    }\r\n                    this.props.getDesignTemplateJobAllocation(inputParamData)\r\n\r\n                }\r\n            } else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\r\n                    inputParamData = {\r\n                        nflag: 6,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultUserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString(),\r\n                    }\r\n\r\n                    this.props.getSectionJobAllocation(inputParamData);\r\n                }\r\n            } else if (fieldName === 'ntransactionstatus') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 7,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultFilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\r\n\r\n                    }\r\n\r\n                    this.props.getFilterStatusJobAllocation(inputParamData);\r\n                }\r\n            } else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultTestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultDesignTemplateMappingValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getTestStatusJobAllocation(inputParamData);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n\r\n\r\n        let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow,\r\n                fromdate: String(fromdate),\r\n                todate: String(todate),\r\n                userinfo: this.props.Login.userInfo,\r\n                realDesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue,\r\n                realDynamicDesignMappingList: this.props.Login.masterData.realDynamicDesignMappingList\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getAppConfigVersionJobAllocation(inputParam)\r\n    }\r\n\r\n    onReload = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue\r\n        let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue\r\n        let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue\r\n        let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue\r\n        let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue\r\n        let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue\r\n        let defaultTestValue = this.props.Login.masterData.realTestValue\r\n        let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, defaultSampleTypeValue, defaultRegTypeValue, defaultRegSubTypeValue, defaultFilterStatusValue, defaultApprovalVersionValue, defaultUserSectionValue, defaultTestValue, defaultDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue!==undefined? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\":\"-1\":\"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue!==undefined ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode  : -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue !=undefined? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) :-1 :null,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue!==undefined ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            //ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            //checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            \r\n            //ntype: 2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\") {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                sampleskip: this.state.sampleskip,\r\n                sampletake: this.state.sampletake,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState: this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue\r\n        let realTestValue = this.props.Login.masterData.defaultTestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue\r\n        let realSampleTypeList = this.props.Login.masterData.SampleType\r\n        let realRegistrationTypeList = this.props.Login.masterData.RegistrationType\r\n        let realRegistrationSubTypeList = this.props.Login.masterData.RegistrationSubType\r\n        let realApprovalConfigVersionList = this.props.Login.masterData.ApprovalConfigVersion\r\n        let realFilterStatusList1 = this.props.Login.masterData.FilterStatus\r\n        let realUserSectionList = this.props.Login.masterData.UserSection\r\n        let realTestList = this.props.Login.masterData.Test\r\n        let realDynamicDesignMappingList = this.props.Login.masterData.DynamicDesignMapping\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue,\r\n            realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realSampleTypeList,\r\n            realRegistrationTypeList, realRegistrationSubTypeList, realApprovalConfigVersionList, realFilterStatusList1,\r\n            realUserSectionList, realTestList, realDynamicDesignMappingList\r\n        }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode === 0 ? this.props.Login.masterData.Test && this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.defaultTestValue.ntestcode) : null,\r\n            //ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            //checkBoxOperation: 3,\r\n            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n            //ntype: 2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== \"undefined\") {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState: this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //ALPD-3781\r\n    updateSection(controlcode,testskip,testtake,operation){\r\n        if(this.props.Login.masterData.JASelectedTest.length>0){\r\n            let testList=[];\r\n            if(this.props.Login.masterData.searchedTest!==undefined){\r\n                testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n\r\n            }else{\r\n                testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n\r\n            }\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        \r\n       \r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let sectionflag = true;               \r\n            selectedTestList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n                if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                    sectionflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue;\r\n                }\r\n            });\r\n    \r\n         if(sectionflag){\r\n            let inputParam = {};\r\n            let Map={\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\r\n                npreregno: selectedTestList ? selectedTestList.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                ntransactionsamplecode: selectedTestList ? selectedTestList.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                ntransactiontestcode: selectedTestList ? selectedTestList.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                nselectedtestcode: selectedTestList ? selectedTestList.map(sample => sample.ntestcode).join(\",\") : \"\",\r\n                ncontrolcode: controlcode,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                operation: operation,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_SECTION\" }),\r\n        };\r\n        inputParam={\r\n            inputData:Map,selectedRecord:this.state.selectedRecord\r\n        }\r\n        this.props.getSectionTest(inputParam); \r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n\r\n    }                                       \r\n    }\r\n    \r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n\r\n    }\r\n}\r\n\r\n    AllotJobStatus (controlcode,testskip, testtake,operation,type) {\r\n//ALPD-3758\r\n       // if(this.props.Login.settings&&parseInt(this.props.Login.settings[43])===transactionStatus.NO){\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if(type !==1 && allotList && allotList.length !==1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETEST\" }));\r\n        }else {\r\n            if (allotList && allotList.length > 0) {\r\n                let testList = this.props.Login.masterData.JASelectedTest;\r\n                let tempsection = 0;\r\n                let sectionvalue = 0;\r\n                let sectionflag = true;               \r\n                allotList.forEach((item) => {\r\n                    sectionvalue = item.nsectioncode;\r\n                    if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                        sectionflag = false;\r\n                    } else {\r\n                        tempsection = sectionvalue;\r\n                    }\r\n                });\r\n\r\n                let tempinstrument = 0;\r\n                let instrumentvalue = 0;\r\n                let instrumentcategoryflag = true;                \r\n                allotList.forEach((item) => {\r\n                    instrumentvalue = item.ninstrumentcatcode;\r\n                    if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\r\n                        instrumentcategoryflag = false;\r\n                    } else {\r\n                        tempinstrument = instrumentvalue;\r\n                    }\r\n                });\r\n\r\n                if (sectionflag) {\r\n                    if (instrumentcategoryflag) {\r\n                        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                                    \r\n                        let inputParam = {};\r\n                        let Map = {\r\n                            fromdate: obj.fromDate,\r\n                            todate: obj.toDate,\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\r\n                            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n                            npreregno: allotList ? allotList.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                            ntransactionsamplecode: allotList ? allotList.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                            transactiontestcode: allotList ? allotList.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                            ntransactiontestcode: 0,\r\n                            ncontrolcode: controlcode,\r\n                            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                            checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            masterData: this.props.Login.masterData,\r\n                            operation: operation,\r\n                            nselecttype : operation ===\"Reschedule\" && allotList && allotList.length ===1 ? 1 :2,\r\n                            nselectedtestcode:allotList ? allotList.map(ntestcodeList => ntestcodeList.ntestcode).join(\",\") : \"\",\r\n                         \r\n                        }\r\n                        inputParam = {\r\n                            inputData: Map,\r\n                        }          \r\n                        this.props.getAllottedTestWise(inputParam,type);                                        \r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\" }));\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            } \r\n        }\r\n   // }else{\r\n     //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SCHEDULENOTVAILABLE\" }));\r\n\r\n   // }\r\n    }\r\n\r\n    AllotAnotherUserStatus(anotherUserId, testskip, testtake) {\r\n//ALPD-3758\r\n        //if(this.props.Login.settings&&parseInt(this.props.Login.settings[43])===transactionStatus.NO){\r\n\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (anotherUserList && anotherUserList.length === 1) {\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let bflag = true;\r\n\r\n            let testList = this.props.Login.masterData.JASelectedTest;\r\n            testList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n\r\n                if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                    bflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue;\r\n                }\r\n            });\r\n\r\n\r\n\r\n            if (bflag) {\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                // START ALPD-3570 VISHAKH\r\n                // let arr = [];\r\n                // JASelectedTest && JASelectedTest.map((item) => {\r\n                //     if (!arr.includes(item.nsectioncode)) {\r\n                //         arr.push(item.nsectioncode)\r\n                //     }\r\n                // }\r\n                // )\r\n                // END ALPD-3570 VISHAKH\r\n                let inputParam = {};\r\n                let Map = {\r\n                    fromdate: obj.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                    //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                    // nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                    nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\r\n                    ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n                    npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                    ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                    transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                    ntransactiontestcode: 0,\r\n                    ncontrolcode: anotherUserId,\r\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                    //checkBoxOperation: 3,\r\n                    checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    operation: 'AllotAnotherUser'\r\n                }\r\n                inputParam = {\r\n                    inputData: Map,\r\n                }\r\n                this.props.getAllotAnotherUserTestWise(inputParam);\r\n\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }\r\n        } else if (anotherUserList && anotherUserList.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSINGLETEST\" }));\r\n        } else if (anotherUserList && anotherUserList.length === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n   // }\r\n   // else{\r\n     //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SCHEDULENOTVAILABLE\" }));\r\n\r\n   // }\r\n    }\r\n\r\n    CancelStatus = (cancelId) => {\r\n        let { testskip, testtake } = this.state\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        if (JASelectedTest && JASelectedTest.length > 0) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let inputParam = {};\r\n            let arr = [];\r\n            // START ALPD-3570 VISHAKH\r\n            let testList = [];\r\n            if (this.props.Login.masterData.searchedTest !== undefined) {\r\n                testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n            } else {\r\n                testList = this.props.Login.masterData.JA_TEST\r\n                    && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n            }\r\n            let cancelList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n\r\n\r\n            // JASelectedTest && JASelectedTest.map((item) => {\r\n            //     if (!arr.includes(item.nsectioncode)) {\r\n            //         arr.push(item.nsectioncode)\r\n            //     }\r\n            // }\r\n            // )\r\n            // END ALPD-3570 VISHAKH\r\n            let Map = {\r\n                fromdate: obj.fromDate,\r\n                todate: obj.toDate,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                // ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n                ntransactionstatus: \"0\",\r\n                // nsectioncode: arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\",\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\",\r\n                ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null,\r\n                // npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                // ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n                // ntransactiontestcode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\r\n                npreregno: cancelList ? cancelList.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                ntransactionsamplecode: cancelList ? cancelList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n                ntransactiontestcode: cancelList ? cancelList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\r\n                ncontrolcode: cancelId,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                //checkBoxOperation: 3,\r\n                checkBoxOperation: checkBoxOperation.SINGLESELECT,\r\n                ntype: 1,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.Login.screenName,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n                activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n\r\n            }\r\n            inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.postParamList,\r\n                classUrl: \"joballocation\",\r\n                operation: 'cancel',\r\n                methodUrl: \"Test\",\r\n                action: \"canceltest\",\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'cancel'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.CancelTestWise(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    onJobAllocationTestWise = (action) => {\r\n        if (action.scontrolname === \"Analyst Calendar\") {\r\n            let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n            let inputParam = {};\r\n            let Map = {\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                ncontrolcode: action.ncontrolcode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.Login.screenName,\r\n                operation: \"ViewAnalystCalendar\",\r\n                openModal: true,\r\n\r\n            }\r\n            inputParam = {\r\n                inputData: Map,\r\n            }\r\n            this.props.ViewAnalystCalendar(inputParam);\r\n\r\n        } else if (action.scontrolname === \"Instrument Calendar\") {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        if (this.props.Login.operation === \"AllotJob\") {\r\n            //inputParam = this.onSaveAllotJobInSchedule(saveType, formRef);\r\n            this.onSaveAllotJob(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"AllotAnotherUser\") {\r\n            this.onSaveAllotAnotherUser(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"Reschedule\") {\r\n            this.onSaveReschedule(saveType, formRef);\r\n        }else if (this.props.Login.operation === \"AllotJobCalendar\") {\r\n            this.onSaveAllotJobInSchedule(saveType)\r\n        }\r\n        else if(this.props.Login.operation === \"updateSection\"){\r\n            this.onSaveSection(saveType, formRef)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onSaveAllotJobInSchedule = (saveType) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let allotjob = this.state.calenderSelectedRecord;\r\n      //  if (allotjob['ntechniquecode']) {\r\n        if (allotjob['nusercode']) {\r\n            const data = this.state.data.filter(x => x.insertRecord)\r\n\r\n            if (data.length > 0) {\r\n                const josnArray = [];\r\n\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                // START ALPD-3570 VISHAKH\r\n                // let arr = [];\r\n                // this.props.Login.masterData.JASelectedSample &&\r\n                //     this.props.Login.masterData.JASelectedSample.map((item) => {\r\n                //         if (!arr.includes(item.nsectioncode)) {\r\n                //             arr.push(item.nsectioncode)\r\n                //         }\r\n                //     }\r\n                //     )\r\n                // END ALPD-3570 VISHAKH\r\n                JASelectedTest && JASelectedTest.map((item) => {\r\n                    const sleectedData = data.filter(x => x.ntransactiontestcode === item.ntransactiontestcode)\r\n                    if (sleectedData.length > 0) {\r\n                        const val = {\r\n                            \"Technique\": {\r\n                                label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                                value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n                            },\r\n                            \"Users\": {\r\n                                label: allotjob.nusercode.label,\r\n                                value: allotjob.nusercode.value\r\n                            },\r\n                            \"UserStartDate\": convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo),\r\n                            \"UserEndDate\": convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo),\r\n\r\n                            \"UserHoldDuration\": -1,\r\n                            \"UserPeriod\": {\r\n                                label: \"Hour(s)\",\r\n                                value: -1,\r\n                            },\r\n                            \"InstrumentCategory\": {\r\n                                label: \"\",\r\n                                value: sleectedData[0].InstrumentCategory || -1\r\n                            },\r\n                            \"InstrumentName\": {\r\n                                label: \"\",\r\n                                value: sleectedData[0].InstrumentName || -1\r\n                            },\r\n                            \"Instrument\": {\r\n                                label: \"\",\r\n                                value: sleectedData[0].Instrument || -1\r\n                            },\r\n                            \"InstrumentStartDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo) : \"\",\r\n                            \"InstrumentEndDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo) : \"\",\r\n                            \"InstrumentHoldDuration\": -1,\r\n                            \"InstrumentPeriod\": {\r\n                                label: 'Hour(s)',\r\n                                value: -1\r\n                            },\r\n                            \"Comments\": sleectedData[0].description || \"\"\r\n                        }\r\n\r\n                        const valJsonUi = {\r\n                            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                            \"Users\": allotjob.nusercode.label,\r\n                            \"UserStartDate\": val.UserStartDate,\r\n                            \"UserEndDate\": val.UserEndDate,\r\n                            \"InstrumentStartDate\": val.InstrumentStartDate || \"\",\r\n                            \"InstrumentEndDate\": val.InstrumentEndDate || \"\",\r\n                            \"Comments\": val.description || \"\"\r\n                        }\r\n                        const objJobAllocation = {}\r\n                        objJobAllocation['jsondata'] = JSON.stringify(val)\r\n                        objJobAllocation['jsonuidata'] = JSON.stringify(valJsonUi)\r\n                        objJobAllocation[\"ninstrumentcatcode\"] = val.InstrumentCategory.value || -1\r\n                        objJobAllocation[\"ninstrumentcode\"] = val.Instrument.value || -1\r\n                        objJobAllocation[\"ninstrumentnamecode\"] = val.InstrumentName.value || -1\r\n                        josnArray.push(objJobAllocation)\r\n                    }\r\n                }\r\n                )\r\n                JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n                JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n                JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n                // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n                JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\r\n                JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n                JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n\r\n                JobAllocationData = { ...JobAllocationData, ...josnArray[0] }\r\n\r\n                JobAllocationData[\"nuserperiodcode\"] = -1;\r\n                JobAllocationData[\"ninstrumentperiodcode\"] = -1;\r\n\r\n                JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n                JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n                JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n                JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n                JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n                JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n                JobAllocationData[\"activeSampleTab\"] = \"IDS_SAMPLEATTACHMENTS\";\r\n                JobAllocationData[\"activeSubSampleTab\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\r\n                JobAllocationData[\"activeTestTab\"] = \"IDS_TESTATTACHMENTS\";\r\n\r\n                inputParam = {\r\n                    classUrl: \"joballocation\",\r\n                    methodUrl: \"Create\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: JobAllocationData,\r\n                    selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n                    operation: this.props.Login.operation,\r\n                    saveType,\r\n                    searchRef: this.searchRef,\r\n                    postParamList: this.postParamList,\r\n                    action: \"AllotJobCalendar\"\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                            operation: this.props.Login.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                    this.setState({ data: [], calenderSelectedRecord: {} })\r\n                } else {\r\n                    this.props.AllotJobActionCalendar(inputParam);\r\n                    this.setState({ data: [], calenderSelectedRecord: {} })\r\n                }\r\n\r\n            }\r\n        \r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDANYONETESTTOADD\" }))\r\n            }\r\n        }\r\n        else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSER\" }))\r\n            }\r\n\r\n        //} else {\r\n         //   toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTECHNIQUE\" }))\r\n       // }\r\n\r\n\r\n    }\r\n\r\n\r\n    onSaveAllotJob = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"allotjobdata\"] = {\r\n            \"Technique\": {\r\n                label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n            },\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n            \"InstrumentCategory\": {\r\n                label: allotjob.ninstrumentcatcode.label,\r\n                value: allotjob.ninstrumentcatcode.value\r\n            },\r\n            \"InstrumentName\": {\r\n                label: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\r\n                value: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1\r\n            },\r\n            \"InstrumentId\": {\r\n                label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n            },            \r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": {\r\n                label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n            },\r\n\r\n            \"Comments\": allotjob.scomments\r\n\r\n\r\n        }\r\n\r\n        obj[\"allotjobuidata\"] = {\r\n            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\r\n            \"InstrumentName\": allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\r\n            \"InstrumentId\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        // START ALPD-3570 VISHAKH\r\n        // let arr = [];\r\n        // JASelectedTest && JASelectedTest.map((item) => {\r\n        //     if (!arr.includes(item.nsectioncode)) {\r\n        //         arr.push(item.nsectioncode)\r\n        //     }\r\n        // }\r\n        // )\r\n        // END ALPD-3570 VISHAKH\r\n        let testList = [];\r\n        let { testskip, testtake } = this.state\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\r\n        // JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        // JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        // JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"npreregno\"] = allotList ? allotList.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = allotList ? allotList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = allotList ? allotList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\r\n\r\n        JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\r\n        JobAllocationData[\"ninstrumentnamecode\"] = allotjob.ninstrumentnamecode &&  allotjob.ninstrumentnamecode.value || -1;\r\n        JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = 1;\r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n\r\n\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"allotjob\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.AllotJobAction(inputParam);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSaveAllotAnotherUser = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"anotheruserdata\"] = {\r\n            \"Technique\" : {\r\n                label:this.props.Login.Technique,\r\n                value:this.props.Login.TechniqueCode\r\n            },\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        obj[\"anotheruseruidata\"] = {\r\n            \"Technique\":this.props.Login.Technique,\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        // let arr = [];\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        // START ALPD-3570 VISHAKH\r\n        // JASelectedTest && JASelectedTest.map((item) => {\r\n        //     if (!arr.includes(item.nsectioncode)) {\r\n        //         arr.push(item.nsectioncode)\r\n        //     }\r\n        // }\r\n        // )\r\n        // END ALPD-3570 VISHAKH\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"anotheruserdata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"anotheruseruidata\"]);\r\n        JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransstatus\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionstatus).join(\",\") : \"\";\r\n\r\n        //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\r\n        JobAllocationData[\"ntechniquecode\"] = this.props.Login.TechniqueCode;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = -1;\r\n        JobAllocationData[\"ninstrumentnamecode\"] = -1;\r\n        JobAllocationData[\"ninstrumentcode\"] = -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = 1;\r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation, saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"allotanotheruser\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.AllotAnotherUserAction(inputParam);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onSaveReschedule = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"rescheduledata\"] = {\r\n            \"Technique\": {\r\n                label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n            },\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n\r\n            \"InstrumentCategory\": {\r\n                label: allotjob.ninstrumentcatcode.label,\r\n                value: allotjob.ninstrumentcatcode.value\r\n            },\r\n            \"InstrumentName\": {\r\n                label: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\r\n                value: allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1\r\n            },\r\n            \"InstrumentId\": {\r\n                label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n            },            \r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": {\r\n                label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n            },\r\n\r\n            \"Comments\": allotjob.scomments,\r\n            \"Section\": {    \r\n                label: allotjob.nsectioncode && allotjob.nsectioncode.label || 'NA',\r\n                value: allotjob.nsectioncode && allotjob.nsectioncode.value || -1\r\n            }\r\n\r\n\r\n\r\n        }\r\n        obj[\"reschdeuleuidata\"] = {\r\n            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\r\n            \"InstrumentName\": allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.label || 'NA',\r\n            \"InstrumentId\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n            \"Comments\": allotjob.scomments,\r\n            \"Section\": allotjob.nsectioncode.label\r\n\r\n\r\n        }\r\n        // START ALPD-3570 VISHAKH\r\n        // let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        // let arr = [];\r\n        // JASelectedTest && JASelectedTest.map((item) => {\r\n        //     if (!arr.includes(item.nsectioncode)) {\r\n        //         arr.push(item.nsectioncode)\r\n        //     }\r\n        // }\r\n        // )\r\n\r\n        let testList = [];\r\n        let { testskip, testtake } = this.state\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            // testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let rescheduleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        // END ALPD-3570 VISHAKH\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"rescheduledata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"reschdeuleuidata\"]);\r\n        JobAllocationData[\"npreregno\"] = rescheduleList ? rescheduleList.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransstatus\"] = rescheduleList ? rescheduleList.map(sample => sample.ntransactionstatus).join(\",\") : \"\";\r\n\r\n        // JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        // JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        // JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        // JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"] = allotjob.nsectioncode&&allotjob.nsectioncode.value.toString() || -1;\r\n        JobAllocationData[\"nfiltersectioncode\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\r\n        JobAllocationData[\"nselectedtestcode\"]= rescheduleList ? rescheduleList.map(sample => sample.ntestcode).join(\",\") : \"\";\r\n\r\n        JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\r\n        JobAllocationData[\"ninstrumentnamecode\"] = allotjob.ninstrumentnamecode && allotjob.ninstrumentnamecode.value || -1;\r\n        JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = allotjob.nsectioncode&&allotjob.nsectioncode.value===this.props.Login.masterData.realUserSectionValue.nsectioncode ?  1:2;\r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n        JobAllocationData[\"napprovalversioncode\"]  =this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation, saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"reschedule\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.RescheduleJobAction(inputParam);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getActiveTestURL() {\r\n        let url = \"attachment/getTestAttachment\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            default:\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isOpen = this.props.Login.isOpen;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let screenName = this.props.Login.screenName;\r\n        let InstrumentCategory = this.props.Login.InstrumentCategory;\r\n        let InstrumentName = this.props.Login.InstrumentName;\r\n        let InstrumentId = this.props.Login.InstrumentId;\r\n\r\n\r\n        // if (this.state.openAnalystCalendar) {\r\n        //     this.setState({ openAnalystCalendar: false })\r\n        // }\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"AllotAnotherUser\" || this.props.Login.operation === \"Reschedule\" || this.props.Login.operation===\"updateSection\")  {\r\n                loadEsign = false;\r\n                openModal = true;\r\n                isOpen = false;\r\n                //selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n                if(!this.props.Login.operation===\"updateSection\")\r\n                screenName=\"\";\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                selectedRecord['esignreason'] = \"\";\r\n                InstrumentName = [];\r\n                InstrumentId = [];\r\n                InstrumentCategory = [];\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            InstrumentName = [];\r\n            InstrumentId = [];\r\n            InstrumentCategory = [];\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: null, isOpen,screenName,\r\n                InstrumentCategory, InstrumentName,InstrumentId, masterData: { ...this.props.Login.masterData, analystCalenderData: [] }\r\n            },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforJobAllocation(inputParam, \"openModal\");\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === \"ntechniquecode\") {\r\n            selectedRecord[\"ntechniquecode\"] = comboData;\r\n            if (comboData != null) {\r\n                this.props.getUsers(this.state.selectedRecord.ntechniquecode.value,\r\n                    this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\r\n            } else {\r\n                \r\n              if(this.props.Login.operation===\"Reschedule\"){\r\n                    let inputParam={\r\n                       \r\n                            nsectioncode:this.state.selectedRecord?this.state.selectedRecord[\"nsectioncode\"].value:-1,\r\n                            userInfo:this.props.Login.userInfo,\r\n                            selectedRecord:this.state.selectedRecord,\r\n                            nregtypecode:this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            masterData:this.props.Login.masterData\r\n                        \r\n                    }\r\n                    this.props.getUsersSection(inputParam);\r\n\r\n                }\r\n                else{\r\n                    delete selectedRecord[\"ntechniquecode\"];\r\n                    delete selectedRecord[\"nusercode\"];\r\n                    this.setState({ selectedRecord });\r\n\r\n                }\r\n            }\r\n        } else if (fieldName === \"nusercode\") {\r\n            selectedRecord[\"nusercode\"] = comboData;\r\n         //   this.props.getAnalystCalenderBasedOnUser(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord)\r\n            this.setState({ selectedRecord });     \r\n        } else if (fieldName === \"ninstrumentcatcode\") {\r\n            selectedRecord[\"ninstrumentcatcode\"] = comboData;\r\n            this.props.getInstrumentName(this.state.selectedRecord.ninstrumentcatcode.value, selectedRecord.ninstrumentcatcode.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\r\n        } else if (fieldName === \"ninstrumentnamecode\") {\r\n            selectedRecord[\"ninstrumentnamecode\"] = comboData;\r\n            this.props.getInstrumentId(this.state.selectedRecord.ninstrumentcatcode.value,this.state.selectedRecord.ninstrumentnamecode.value, comboData.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\r\n        } else if (fieldName === \"ninstrumentcode\") {\r\n            selectedRecord[\"ninstrumentcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"nuserperiodcode\") {\r\n            selectedRecord[\"nuserperiodcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"ninstrumentperiodcode\") {\r\n            selectedRecord[\"ninstrumentperiodcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else if(fieldName===\"nsectionuser\"){\r\n            selectedRecord[\"nsectioncode\"] = comboData;\r\n            let inputParam={\r\n                nsectioncode:comboData.value,\r\n                userInfo:this.props.Login.userInfo,\r\n                selectedRecord:this.state.selectedRecord,\r\n                nregtypecode:this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                masterData:this.props.Login.masterData\r\n            }\r\n          this.props.getUsersSection(inputParam);\r\n        }\r\n        else if(fieldName===\"nsectioncode\"){\r\n            selectedRecord[\"nsectioncode\"] = comboData;\r\n            \r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\") {\r\n            if (event.target.value !== \"\") {\r\n                event.target.value = validatePhoneNumber(event.target.value);\r\n                selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n\r\n    onNumericInputOnChange = (event, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let constantsValue = event.target.value.replace(/[^0-9]/g, '');\r\n        //if (!isNaN(constantsValue.substring(constantsValue.length, constantsValue.length - 1))) {\r\n            //if (!isNaN(constantsValue)) {\r\n            selectedRecord[name] = constantsValue;\r\n            this.setState({ selectedRecord });\r\n       // }\r\n    };\r\n\r\n\r\n    getCommentsCombo = (event) => {\r\n\r\n        if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\r\n            this.props.getCommentsCombo(...event);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOADDCOMMENTS\" }))\r\n        }\r\n    }\r\n\r\n    handleDataChange = ({ created, updated, deleteted }) => {\r\n        let scheduleData = {};\r\n        let postParam = undefined;\r\n        let formRef = {};\r\n        if (created.length > 0) {\r\n\r\n            const aa = created.concat(created.map(item => Object.assign({}, item, {})));\r\n            scheduleData[\"allotjob\"] = { \"jsondata\": aa[0] };\r\n            formRef = { \"current\": \"form\" };\r\n\r\n            let saveType = 1;\r\n            const inputParam = {\r\n                classUrl: \"joballocation\",\r\n                methodUrl: \"AssignJob\",\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                operation: \"create\",\r\n                saveType, formRef, postParam, searchRef: this.searchRef,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n\r\n\r\n\r\n        } else if (updated.length > 0) {\r\n\r\n        } else if (deleteted.length > 0) {\r\n\r\n        }\r\n\r\n    }\r\n//ALPD-3781\r\n    onSaveSection(saveType, formRef){\r\n        let inputParam = {};\r\n        let joballocationData = {};\r\n        let testList = [];\r\n       \r\n        let { testskip, testtake,sampleskip, sampletake} = this.state\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.searchedTest.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let subSampleList=[];\r\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n            subSampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.searchedSubSample.slice(testskip, testskip + testtake), \"ntransactionsamplecode\");\r\n        } else {\r\n            subSampleList = this.props.Login.masterData.JA_SUBSAMPLE\r\n                && this.props.Login.masterData.JA_SUBSAMPLE.slice(testskip, testskip + testtake);\r\n        }\r\n        let sampleList=[];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.searchedSample.slice(sampleskip, sampleskip + sampletake), \"npreregno\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.JA_SAMPLE\r\n                && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\r\n        }\r\n        //\r\n        let sectionList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let sampleListCount = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"npreregno\");\r\n\r\n        joballocationData[\"npreregno\"] = sampleListCount ? sampleListCount.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        joballocationData[\"ntransactionsamplecode\"] = sectionList ? sectionList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        joballocationData[\"ntransactiontestcode\"] = sectionList ? sectionList.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n       \r\n        joballocationData[\"nsectioncode\"] = this.state.selectedRecord&&this.state.selectedRecord[\"nsectioncode\"].value;\r\n        joballocationData[\"nneedsubsample\"] = (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false;\r\n    if(!(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample)){\r\n        joballocationData[\"ntansactionSubSamplecode\"]=subSampleList?subSampleList.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n    }\r\n        joballocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        joballocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        joballocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        joballocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        joballocationData[\"ntestcode\"]=this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode === 0 ? this.props.Login.masterData.Test.map(test => test.ntestcode).join(',') : String(this.props.Login.masterData.realTestValue.ntestcode) : null;\r\n        joballocationData[\"masterData\"] = this.props.Login.masterData;\r\n        joballocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        joballocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n        joballocationData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode;\r\n        joballocationData[\"napprovalversioncode\"]  =this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode;\r\n\r\n        joballocationData[\"sfilterSection\"] = this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode.toString() : \"-1\";\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        joballocationData[\"fromdate\"] = obj.fromDate;\r\n        joballocationData[\"todate\"] = obj.toDate;\r\n        joballocationData[\"activeSampleTab\"] = this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        joballocationData[\"nregistrationsectioncode\"]= this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(item1=>item1.nregistrationsectioncode).join(\",\");\r\n        joballocationData[\"ncontrolcode\"] = this.props.Login.ncontrolcode;\r\n        \r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"JobAllocation\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: joballocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: \"updateSection\",\r\n            saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"updateSection\",\r\n            selectedRecord:this.state.selectedRecord\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_SECTION\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else{\r\n            this.props.updateSectionJobAllocation(inputParam);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation,\r\n    getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation,\r\n    getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise,getInstrumentName, getInstrumentId, getUsers,\r\n    ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction,\r\n    getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo,\r\n    filterTransactionList, AllotJobActionCalendar,getSectionTest,\r\n    updateSectionJobAllocation,getUsersSection\r\n})(injectIntl(JobAllocation))\r\n\r\nexport const currentYear = new Date().getFullYear();\r\n\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};"]},"metadata":{},"sourceType":"module"}