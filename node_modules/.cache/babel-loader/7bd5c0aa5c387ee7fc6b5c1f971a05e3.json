{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\Scheduler\\\\SiteScheduler.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst SiteScheduler = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SITE\"\n    }),\n    isSearchable: true,\n    name: \"nsitecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.siteList,\n    value: props.selectedRecord[\"nsitecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nsitecode\"],\n    onChange: event => props.onComboChange(event, \"nsitecode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(SiteScheduler);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/Scheduler/SiteScheduler.jsx"],"names":["React","injectIntl","Row","Col","FormSelectSearch","SiteScheduler","props","intl","formatMessage","id","siteList","selectedRecord","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI,uDACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,WAHV;AAII,IAAA,UAAU,EAAG,KAJjB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACI,QARnB;AASI,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAqC,EAThD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,WAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,WAA3B,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADA,CAFJ,CADJ,CADJ;AAgCH,CAjCD;;AAkCA,eAAeX,UAAU,CAACI,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\n\r\nconst SiteScheduler = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                \r\n                <Col md={6}>\r\n                <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nsitecode\"}\r\n                            isDisabled={ false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.siteList}\r\n                            value={props.selectedRecord[\"nsitecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nsitecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nsitecode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                  \r\n                   \r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default injectIntl(SiteScheduler);\r\n"]},"metadata":{},"sourceType":"module"}