{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{rearrangeDateFormat}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';export function getComboTemporaryStorage(addParam){return function(dispatch){var urlArray=[];var service1=rsapi.post(\"unit/getUnit\",{userinfo:addParam.userInfo});var userInfo=addParam.userInfo;var service2=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userInfo});urlArray=[service1,service2];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedId=null;var date=rearrangeDateFormat(userInfo,response[1].data);var selectedRecord=_objectSpread(_objectSpread({},addParam.selectedRecord),{},{\"dstoragedatetime\":date});var masterData=_objectSpread(_objectSpread({},addParam.masterData),{},{\"jsondataBarcodeData\":undefined});selectedId=addParam.primaryKeyField;dispatch({type:DEFAULT_RETURN,payload:{//  unit,\nmasterData:masterData,operation:addParam.operation,screenName:addParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolcode:addParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeDataTemporaryStorage(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"temporarystorage/getBarcodeConfigData\",{userinfo:inputParam.userinfo,nprojecttypecode:inputParam.nprojecttypecode,spositionvalue:inputParam.spositionvalue,nbarcodeLength:inputParam.nbarcodeLength,jsondata:inputParam.jsondata}).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{\"jsondataBarcodeData\":response.data.jsondataBarcodeData,\"jsondataBarcodeFields\":response.data.jsondataBarcodeFields});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData},inputParam.selectedRecord),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});// }\n};}export function saveTemporaryStorage(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var service1=rsapi.post(\"temporarystorage/\"+inputParam.operation+\"TemporaryStorage\",inputParam.inputData);var service2=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:inputParam.inputData.userinfo});var urlArray=[];urlArray=[service1,service2];Axios.all(urlArray).then(function(response){var openModal=false;if(inputParam.saveType===2){openModal=true;}var date=rearrangeDateFormat(inputParam.inputData.userinfo,response[1].data);masterData=_objectSpread(_objectSpread({},masterData),{},{\"TemporaryStorage\":response[0].data.TemporaryStorage,\"jsondataBarcodeData\":\"\"});var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"sbarcodeid\":\"\",\"nsampleqty\":\"\",\"nunitcode\":\"\",\"scomments\":\"\",\"dstoragedatetime\":date});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,openModal:openModal,loading:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveTemporaryStorageById(editParam){return function(dispatch){var _rsapi$post;var selectedId=null;rsapi.post(\"temporarystorage/getActiveTemporaryStorageById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"nprojecttypecode\",editParam.editRow.nprojecttypecode),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post)).then(function(response){selectedId=editParam.primaryKeyValue;/*let instname = [];\r\n            instname.push({\r\n                \"value\": response.data.activeSampleColletionByID[\"nunitcode\"],\r\n                \"label\": response.data.activeSampleColletionByID[\"sunitname\"]\r\n            });*/var date=rearrangeDateFormat(editParam.userInfo,response.data.activeTemporaryStorageByID['sstoragedatetime']);var jsondataBarcodeFields=response.data.jsondataBarcodeFields;var barcodedata=response.data&&response.data.activeTemporaryStorageByID.jsondata;var masterData=_objectSpread(_objectSpread({},editParam.masterData),{},{\"jsondataBarcodeData\":barcodedata,\"jsondataBarcodeFields\":jsondataBarcodeFields});var selectedRecord=_objectSpread(_objectSpread({},editParam.selectedRecord),{},{\"sbarcodeid\":response.data.activeTemporaryStorageByID['sbarcodeid'],// \"nsampleqty\": response.data.activeSampleColletionByID['nsampleqty'],\n\"dstoragedatetime\":date,\"scomments\":response.data.activeTemporaryStorageByID['scomments']});//selectedRecord[\"nunitcode\"] = instname[0];\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,operation:editParam.operation,ncontrolcode:editParam.ncontrolCode,openModal:true,loading:false,selectedId:selectedId,screenName:editParam.screenName,dataState:editParam.dataState}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTemporaryStorage(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"temporarystorage/getTemporaryStorage\",inputParam.inputData).then(function(response){var selectedId=null;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{selectedId:selectedId,masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignCredentialTemporaryStorage(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;// if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\n//     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\n// }\ndispatch(saveTemporaryStorage(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/TemporaryStorageAction.js"],"names":["rsapi","Axios","toast","rearrangeDateFormat","DEFAULT_RETURN","initRequest","getComboTemporaryStorage","addParam","dispatch","urlArray","service1","post","userinfo","userInfo","service2","all","then","response","selectedId","date","data","selectedRecord","masterData","undefined","primaryKeyField","type","payload","operation","screenName","openModal","ncontrolcode","ncontrolCode","loading","catch","error","status","message","warn","getBarcodeDataTemporaryStorage","inputParam","nprojecttypecode","spositionvalue","nbarcodeLength","jsondata","jsondataBarcodeData","jsondataBarcodeFields","saveTemporaryStorage","inputData","saveType","TemporaryStorage","loadEsign","getActiveTemporaryStorageById","editParam","primaryKeyValue","editRow","activeTemporaryStorageByID","barcodedata","dataState","getTemporaryStorage","validateEsignCredentialTemporaryStorage"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    rearrangeDateFormat\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\nexport function getComboTemporaryStorage(addParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const service1 = rsapi.post(\"unit/getUnit\", { userinfo: addParam.userInfo });\r\n        let userInfo = addParam.userInfo;\r\n        const service2 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo: userInfo\r\n        });\r\n\r\n\r\n\r\n        urlArray = [service1, service2]\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n\r\n            let selectedId = null;\r\n         \r\n\r\n            let date = rearrangeDateFormat(userInfo, response[1].data);\r\n\r\n            let selectedRecord = { ...addParam.selectedRecord, \"dstoragedatetime\": date }\r\n\r\n            let masterData = { ...addParam.masterData, \"jsondataBarcodeData\": undefined }\r\n\r\n\r\n            selectedId = addParam.primaryKeyField;\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    //  unit,\r\n                 masterData,\r\n                    operation: addParam.operation, screenName: addParam.screenName,\r\n                    selectedRecord: selectedRecord,\r\n                    openModal: true,\r\n                    ncontrolcode: addParam.ncontrolCode,\r\n                    loading: false, selectedId\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeDataTemporaryStorage(inputParam) {\r\n    return function (dispatch) {\r\n      \r\n            dispatch(initRequest(true));\r\n\r\n            rsapi.post(\"temporarystorage/getBarcodeConfigData\", { userinfo: inputParam.userinfo, nprojecttypecode: inputParam.nprojecttypecode, spositionvalue: inputParam.spositionvalue, nbarcodeLength: inputParam.nbarcodeLength, jsondata: inputParam.jsondata }).then(response => {\r\n\r\n                let masterData = { ...inputParam.masterData, \"jsondataBarcodeData\": response.data.jsondataBarcodeData, \"jsondataBarcodeFields\": response.data.jsondataBarcodeFields }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        ...inputParam.selectedRecord,\r\n                        loading: false\r\n                    }\r\n                });\r\n            }\r\n            )\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n       // }\r\n    }\r\n}\r\n\r\nexport function saveTemporaryStorage(inputParam, masterData) {\r\n    return function (dispatch) {\r\n\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        const service1 = rsapi.post(\"temporarystorage/\" + inputParam.operation + \"TemporaryStorage\", inputParam.inputData);\r\n\r\n        const service2 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo:inputParam.inputData.userinfo\r\n        });\r\n        let urlArray=[];\r\n        urlArray = [service1, service2];\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n            let openModal=false;\r\n            if(inputParam.saveType===2){\r\n             openModal=true;\r\n            }\r\n\r\n            let date = rearrangeDateFormat(inputParam.inputData.userinfo, response[1].data);\r\n\r\n            masterData = { ...masterData, \"TemporaryStorage\": response[0].data.TemporaryStorage, \"jsondataBarcodeData\": \"\" }\r\n            let selectedRecord = { ...inputParam.selectedRecord, \"sbarcodeid\": \"\", \"nsampleqty\": \"\", \"nunitcode\": \"\", \"scomments\": \"\" ,\"dstoragedatetime\":date}\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    openModal: openModal,\r\n                    loading: false,\r\n                    loadEsign: false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getActiveTemporaryStorageById(editParam) {\r\n    return function (dispatch) {\r\n\r\n        let selectedId = null;\r\n        rsapi.post(\"temporarystorage/getActiveTemporaryStorageById\", { [editParam.primaryKeyField]: editParam.primaryKeyValue,\"nprojecttypecode\":editParam.editRow.nprojecttypecode, \"userinfo\": editParam.userInfo }).then(response => {\r\n            selectedId = editParam.primaryKeyValue;\r\n            /*let instname = [];\r\n            instname.push({\r\n                \"value\": response.data.activeSampleColletionByID[\"nunitcode\"],\r\n                \"label\": response.data.activeSampleColletionByID[\"sunitname\"]\r\n            });*/\r\n            let date = rearrangeDateFormat(editParam.userInfo, response.data.activeTemporaryStorageByID['sstoragedatetime']);\r\n            let jsondataBarcodeFields = response.data.jsondataBarcodeFields;\r\n            let barcodedata = response.data && response.data.activeTemporaryStorageByID.jsondata;\r\n            let masterData = { ...editParam.masterData, \"jsondataBarcodeData\": barcodedata ,\"jsondataBarcodeFields\":jsondataBarcodeFields}\r\n            let selectedRecord = {\r\n                ...editParam.selectedRecord, \"sbarcodeid\": response.data.activeTemporaryStorageByID['sbarcodeid'],// \"nsampleqty\": response.data.activeSampleColletionByID['nsampleqty'],\r\n\r\n                \"dstoragedatetime\": date, \"scomments\": response.data.activeTemporaryStorageByID['scomments']\r\n            }\r\n            //selectedRecord[\"nunitcode\"] = instname[0];\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    operation: editParam.operation,\r\n                    ncontrolcode: editParam.ncontrolCode,\r\n                    openModal: true,\r\n                    loading: false,\r\n                    selectedId,\r\n                    screenName: editParam.screenName,\r\n                    dataState:editParam.dataState\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getTemporaryStorage(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"temporarystorage/getTemporaryStorage\", inputParam.inputData)\r\n            .then(response => {\r\n                let selectedId=null;\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedId,\r\n                        masterData, loading: false,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function validateEsignCredentialTemporaryStorage(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    // if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                    //     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    // }\r\n\r\n\r\n                    dispatch(saveTemporaryStorage(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}