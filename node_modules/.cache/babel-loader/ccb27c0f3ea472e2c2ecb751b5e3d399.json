{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{toast}from'react-toastify';import{FormattedMessage}from'react-intl';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{ReadOnlyText}from'../../components/App.styles';import{ContentPanel}from'../../pages/product/product.styled';import{connect}from'react-redux';import{injectIntl}from'react-intl';import ListMaster from'../../components/list-master/list-master.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap}from'../../components/CommonScript';import Esign from'../audittrail/Esign';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus}from'../../components/Enumeration';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{callService,crudMaster,validateEsignCredential,updateStore,getManfacturerCombo,selectCheckBoxManufacturer,getContactInfo,getSiteManufacturerLoadEdit,getContactManufacturerLoadEdit,filterColumnData}from'../../actions';import ManufacturerSiteTab from'../../pages/contactmaster/ManufacturerSiteTab';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport AddManufacturer from'../../pages/contactmaster/AddManufacturer';import ReactTooltip from'react-tooltip';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Manufacturer=/*#__PURE__*/function(_Component){_inherits(Manufacturer,_Component);var _super=_createSuper(Manufacturer);function Manufacturer(props){var _this;_classCallCheck(this,Manufacturer);_this=_super.call(this,props);_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}// data: {openModal, loadEsign, selectedRecord}\n};_this.props.updateStore(updateInfo);};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteManufacturer(\"delete\",deleteId);});};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;var fieldList=[\"nmanufcode\",\"smanufname\",\"sdescription\",\"ntransactionstatus\"];if(_this.props.Login.operation===\"update\"){postParam={inputListName:\"Manufacturer\",selectedObject:\"selectedManufacturer\",primaryKeyField:\"nmanufcode\"};inputData[\"manufacturer\"]=JSON.parse(JSON.stringify(_this.state.selectedRecord));fieldList.map(function(item){if(item===\"nofficialmanufcode\"){return inputData[\"manufacturer\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item].value:\"\";}else{return inputData[\"manufacturer\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";}});if(inputData[\"manufacturer\"].hasOwnProperty('nofficialmanufcode')){delete inputData[\"manufacturer\"]['nofficialmanufcode'];}}else{inputData[\"manufacturer\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};fieldList.map(function(item){if(item===\"nofficialmanufcode\"){return inputData[\"manufacturer\"][item]=_this.state.selectedRecord[item].value;}else{return inputData[\"manufacturer\"][item]=_this.state.selectedRecord[item];}});}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Manufacturer\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}// this.props.crudMaster(inputParam);\n};_this.DeleteManufacturer=function(operation,ncontrolCode){var inputData=[];inputData[\"manufacturer\"]=_this.props.Login.masterData.selectedManufacturer;inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam={inputListName:\"Manufacturer\",selectedObject:\"selectedManufacturer\",primaryKeyField:\"nmanufcode\",primaryKeyValue:_this.props.Login.masterData.selectedManufacturer.nmanufcode,fetchUrl:\"manufacturer/getManufacturerWithSiteAndContactDetails\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={methodUrl:\"Manufacturer\",postParam:postParam,classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:\"delete\"};var masterData=_this.props.Login.masterData;// this.props.crudMaster(inputParam, this.props.Login.masterData);\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"Manufacturer\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){if(comboData!==null){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;//comboData.value;\n_this.setState({selectedRecord:selectedRecord});}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"manufacturer\",methodUrl:\"Manufacturer\",userInfo:_this.props.Login.userInfo,displayName:\"Manufacturer\"};_this.props.callService(inputParam);};var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={selectedRecord:{},dataResult:[],dataState:dataState,masterStatus:\"\",error:\"\",Manufacturer:[],operation:\"\",selectedManufacturer:undefined,screenName:\"Manufacturer\",EDQMManufacturer:[],SiteCode:0,userRoleControlRights:[],controlMap:new Map()};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(Manufacturer,[{key:\"render\",value:function render(){var _this2=this;var userStatusCSS=\"\";var activeIconCSS=\"fa fa-check\";this.extractedColumnList=[{\"idsName\":\"IDS_MANUFACTURERNAME\",\"mandatory\":true,\"dataField\":\"smanufname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}// { \"idsName\": \"IDS_EDQMOFFICIALNAME\", \"mandatory\": true, \"dataField\": \"nofficialmanufcode\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\n];if(this.props.Login.masterData.selectedManufacturer&&this.props.Login.masterData.selectedManufacturer.ntransactionstatus===transactionStatus.DEACTIVE){userStatusCSS=\"outline-secondary\";activeIconCSS=\"\";}else if(this.props.Login.masterData.selectedManufacturer&&this.props.Login.masterData.selectedManufacturer.ntransactionstatus===transactionStatus.ACTIVE){userStatusCSS=\"outline-success\";}else{userStatusCSS=\"outline-Final\";}var addId=this.state.controlMap.has(\"AddManufacturer\")&&this.state.controlMap.get(\"AddManufacturer\").ncontrolcode;var editId=this.state.controlMap.has(\"EditManufacturer\")&&this.state.controlMap.get(\"EditManufacturer\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteManufacturer\")&&this.state.controlMap.get(\"DeleteManufacturer\").ncontrolcode;var filterParam={inputListName:\"Manufacturer\",selectedObject:\"selectedManufacturer\",primaryKeyField:\"nmanufcode\",fetchUrl:\"manufacturer/getManufacturerWithSiteAndContactDetails\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"smanufname\",\"sdescription\",\"stransdisplaystatus\"]};var mandatoryFields=[];this.extractedColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster//filterColumnData ={(e)=>this.filterColumnData(e)}\n,{formatMessage:this.props.intl.formatMessage,screenName:\"Manufacturer\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Manufacturer,getMasterDetail:function getMasterDetail(_Manufacturer){return _this2.props.selectCheckBoxManufacturer(_Manufacturer,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.selectedManufacturer,primaryKeyField:\"nmanufcode\",mainField:\"smanufname\",firstField:\"stransdisplaystatus\"//secondField=\"stransdisplaystatus\"\n,isIDSField:\"Yes\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:false,openModal:function openModal(){return _this2.props.getManfacturerCombo(\"IDS_MANUFACTURER\",\"create\",\"nmanufcode\",_this2.props.Login.masterData,_this2.props.Login.userInfo,75);}})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},this.props.Login.masterData.Manufacturer&&this.props.Login.masterData.Manufacturer.length>0&&this.props.Login.masterData.selectedManufacturer?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedManufacturer.smanufname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(userStatusCSS,\" btn-sm ml-3\")},/*#__PURE__*/React.createElement(\"i\",{className:activeIconCSS}),this.props.Login.masterData.selectedManufacturer.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline \"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip_list_wrap\"}),\"  \",/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",href:\"#\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),\"data-for\":\"tooltip_list_wrap\",onClick:function onClick(e){return _this2.props.getManfacturerCombo(\"Manufacturer\",\"update\",\"nmanufcode\",_this2.props.Login.masterData,_this2.props.Login.userInfo,editId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,title:this.props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",href:\"\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-for\":\"tooltip_list_wrap\",onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:'IDS_DESCRIPTION',message:\"Description\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,\" \",this.props.Login.masterData.selectedManufacturer.sdescription===null||this.props.Login.masterData.selectedManufacturer.sdescription.length===0?'-':this.props.Login.masterData.selectedManufacturer.sdescription)))),/*#__PURE__*/React.createElement(ManufacturerSiteTab,{operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,masterStatus:this.props.Login.masterStatus,openChildModal:this.props.Login.openChildModal,updateStore:this.props.updateStore,selectedRecord:this.props.Login.selectedRecord,getContactInfo:this.props.getContactInfo,getSiteManufacturerLoadEdit:this.props.getSiteManufacturerLoadEdit,getContactManufacturerLoadEdit:this.props.getContactManufacturerLoadEdit,ncontrolCode:this.props.Login.ncontrolCode,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,controlMap:this.state.controlMap,Country:this.props.Login.Country,countryCode:this.props.Login.countryCode,SiteCode:this.props.Login.SiteCode,selectedId:this.props.Login.selectedId,dataState:this.props.Login.dataState,settings:this.props.Login.settings// masterData={{\n//     \"selectedManufacturer\": this.state.selectedManufacturer,\n//     \"ManufacturerSiteAddress\": this.state.ManufacturerSiteAddress,\n//     \"ManufacturerContactInfo\": this.state.ManufacturerContactInfo || [],\n//     \"SiteCode\": this.state.SiteCode\n// }}\n}))):\"\")))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation// formatMessage={this.props.intl.formatMessage}\n,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddManufacturer,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange// formatMessage={this.props.intl.formatMessage}\n,edqmManufacturerList:this.props.Login.edqmManufacturerList||[],operation:this.props.operation,inputParam:this.props.inputParam// defaultValue={this.props.Login.edqmManufacturer}\n})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){// if (this.props.Login.masterData !== previousProps.Login.masterData) {\n//     this.setState(\n//         {\n//             Manufacturer: this.props.Login.masterData.Manufacturer ?\n//                 this.props.Login.masterData.Manufacturer : this.state.Manufacturer,\n//             selectedManufacturer: this.props.Login.masterData.selectedManufacturer ?\n//                 this.props.Login.masterData.selectedManufacturer : this.state.selectedManufacturer,\n//             ManufacturerSiteAddress: this.props.Login.masterData.ManufacturerSiteAddress ?\n//                 this.props.Login.masterData.ManufacturerSiteAddress : {},\n//             ManufacturerContactInfo: this.props.Login.masterData.ManufacturerContactInfo ?\n//                 this.props.Login.masterData.ManufacturerContactInfo : {},\n//             SiteCode: this.props.Login.masterData.SiteCode ? this.props.Login.masterData.SiteCode : 0,\n//             isOpen: false\n//         });\n// }\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return Manufacturer;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getManfacturerCombo:getManfacturerCombo,selectCheckBoxManufacturer:selectCheckBoxManufacturer,getContactInfo:getContactInfo,getSiteManufacturerLoadEdit:getSiteManufacturerLoadEdit,getContactManufacturerLoadEdit:getContactManufacturerLoadEdit,filterColumnData:filterColumnData})(injectIntl(Manufacturer));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/Manufacturer.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","ReadOnlyText","ContentPanel","connect","injectIntl","ListMaster","SlideOutModal","showEsign","getControlMap","Esign","DEFAULT_RETURN","transactionStatus","ConfirmMessage","callService","crudMaster","validateEsignCredential","updateStore","getManfacturerCombo","selectCheckBoxManufacturer","getContactInfo","getSiteManufacturerLoadEdit","getContactManufacturerLoadEdit","filterColumnData","ManufacturerSiteTab","AddManufacturer","ReactTooltip","mapStateToProps","state","Login","Manufacturer","props","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","DeleteManufacturer","onSaveClick","saveType","formRef","inputData","userInfo","postParam","undefined","fieldList","inputListName","selectedObject","primaryKeyField","JSON","parse","stringify","map","item","value","hasOwnProperty","nmastersitecode","inputParam","classUrl","methodUrl","searchRef","masterData","userRoleControlRights","nformcode","ncontrolCode","screenData","selectedManufacturer","primaryKeyValue","nmanufcode","fetchUrl","fecthInputObject","userinfo","screenName","onInputOnChange","event","target","type","name","checked","YES","NO","ACTIVE","DEACTIVE","setState","onComboChange","comboData","fieldName","validateEsign","sreason","password","reloadData","current","displayName","dataState","skip","take","settings","parseInt","dataResult","masterStatus","error","EDQMManufacturer","SiteCode","controlMap","Map","createRef","userStatusCSS","activeIconCSS","extractedColumnList","ntransactionstatus","addId","has","get","ncontrolcode","editId","filterParam","searchFieldList","mandatoryFields","forEach","mandatory","push","searchedData","length","smanufname","stransdisplaystatus","indexOf","e","sdescription","errorCode","openChildModal","Country","countryCode","edqmManufacturerList","previousProps","Object","values","modalName","warn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ContentPanel } from '../../pages/product/product.styled';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getManfacturerCombo, selectCheckBoxManufacturer,\r\n    getContactInfo,\r\n    getSiteManufacturerLoadEdit, getContactManufacturerLoadEdit, filterColumnData\r\n} from '../../actions';\r\nimport ManufacturerSiteTab from '../../pages/contactmaster/ManufacturerSiteTab';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport AddManufacturer from '../../pages/contactmaster/AddManufacturer';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass Manufacturer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            selectedRecord: {}, dataResult: [],\r\n            dataState: dataState,\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            Manufacturer: [],\r\n            operation: \"\",\r\n            selectedManufacturer: undefined,\r\n            screenName: \"Manufacturer\",\r\n            EDQMManufacturer: [],\r\n            SiteCode: 0,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_MANUFACTURERNAME\", \"mandatory\": true, \"dataField\": \"smanufname\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            // { \"idsName\": \"IDS_EDQMOFFICIALNAME\", \"mandatory\": true, \"dataField\": \"nofficialmanufcode\", \"width\": \"200px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n\r\n        if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.DEACTIVE) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedManufacturer && this.props.Login.masterData.selectedManufacturer.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        const addId = this.state.controlMap.has(\"AddManufacturer\") && this.state.controlMap.get(\"AddManufacturer\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditManufacturer\") && this.state.controlMap.get(\"EditManufacturer\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteManufacturer\") && this.state.controlMap.get(\"DeleteManufacturer\").ncontrolcode\r\n\r\n        const filterParam = {\r\n            inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\", primaryKeyField: \"nmanufcode\",\r\n            fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"smanufname\", \"sdescription\", \"stransdisplaystatus\"]\r\n        };\r\n        const mandatoryFields = [];\r\n        this.extractedColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster //filterColumnData ={(e)=>this.filterColumnData(e)}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Manufacturer\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Manufacturer}\r\n                                getMasterDetail={(Manufacturer) => this.props.selectCheckBoxManufacturer(Manufacturer, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedManufacturer}\r\n                                primaryKeyField=\"nmanufcode\"\r\n                                mainField=\"smanufname\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                //secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getManfacturerCombo(\"IDS_MANUFACTURER\", \"create\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, 75)}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            <Row><Col md={12}>\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    {this.props.Login.masterData.Manufacturer && this.props.Login.masterData.Manufacturer.length > 0 && this.props.Login.masterData.selectedManufacturer ?\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedManufacturer.smanufname}</Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                <i className={activeIconCSS}></i>\r\n                                                                {this.props.Login.masterData.selectedManufacturer.stransdisplaystatus}\r\n                                                            </span>\r\n                                                        </h2>\r\n                                                        <div className=\"d-inline \">\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n\r\n                                                            <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />  {/* <ProductList className=\"d-inline dropdown badget_menu\"> */}\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                data-for=\"tooltip_list_wrap\"\r\n                                                                onClick={(e) => this.props.getManfacturerCombo(\"Manufacturer\", \"update\", \"nmanufcode\", this.props.Login.masterData, this.props.Login.userInfo, editId)} >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                data-for=\"tooltip_list_wrap\"\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <FontAwesomeIcon icon={faTrashAlt} className=\"ActionIconColor\" onClick={(e) => this.DeleteManufacturer(\"delete\", deleteId)} /> */}\r\n                                                                {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        handleClickDelete={() => this.DeleteManufacturer(\"delete\", deleteId)}\r\n                                                                    /> */}\r\n                                                            </Nav.Link>\r\n                                                            {/* </Tooltip> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row>\r\n                                                    {/* <Col md='4'>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id={'IDS_EDQMOFFICIALNAME'} message=\"EDQM Official Name\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.selectedManufacturer.sofficialmanufname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> */}\r\n                                                    <Col md='4'>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id={'IDS_DESCRIPTION'} message=\"Description\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.selectedManufacturer.sdescription === null || this.props.Login.masterData.selectedManufacturer.sdescription.length === 0 ? '-' :\r\n                                                               this.props.Login.masterData.selectedManufacturer.sdescription}</ReadOnlyText>\r\n                                                           \r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* </Card.Body>\r\n                                            <Card.Body> */}\r\n                                                <ManufacturerSiteTab\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getContactInfo={this.props.getContactInfo}\r\n                                                    getSiteManufacturerLoadEdit={this.props.getSiteManufacturerLoadEdit}\r\n                                                    getContactManufacturerLoadEdit={this.props.getContactManufacturerLoadEdit}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    Country={this.props.Login.Country}\r\n                                                    countryCode={this.props.Login.countryCode}\r\n                                                    SiteCode={this.props.Login.SiteCode}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    settings = {this.props.Login.settings}\r\n                                                // masterData={{\r\n                                                //     \"selectedManufacturer\": this.state.selectedManufacturer,\r\n                                                //     \"ManufacturerSiteAddress\": this.state.ManufacturerSiteAddress,\r\n                                                //     \"ManufacturerContactInfo\": this.state.ManufacturerContactInfo || [],\r\n                                                //     \"SiteCode\": this.state.SiteCode\r\n                                                // }}\r\n\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </Card> : \"\"}\r\n                                </ContentPanel>\r\n                            </Col></Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddManufacturer\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                edqmManufacturerList={this.props.Login.edqmManufacturerList || []}\r\n                                operation={this.props.operation}\r\n                                inputParam={this.props.inputParam}\r\n                            // defaultValue={this.props.Login.edqmManufacturer}\r\n                            />}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n            // data: {openModal, loadEsign, selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteManufacturer(\"delete\", deleteId));\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        let postParam = undefined;\r\n\r\n        let fieldList = [\"nmanufcode\", \"smanufname\", \"sdescription\",\r\n            \"ntransactionstatus\"];\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n\r\n            postParam = { inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\", primaryKeyField: \"nmanufcode\" };\r\n           \r\n            inputData[\"manufacturer\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            \r\n            fieldList.map(item => {\r\n                if (item === \"nofficialmanufcode\") {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item].value : \"\";\r\n                }\r\n                else {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n                }\r\n\r\n            })\r\n            if (inputData[\"manufacturer\"].hasOwnProperty('nofficialmanufcode')) {\r\n                    delete inputData[\"manufacturer\"]['nofficialmanufcode']\r\n            }\r\n        }\r\n        else {\r\n            inputData[\"manufacturer\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            fieldList.map(item => {\r\n                if (item === \"nofficialmanufcode\") {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item].value\r\n                }\r\n                else {\r\n                    return inputData[\"manufacturer\"][item] = this.state.selectedRecord[item]\r\n                }\r\n            })\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Manufacturer\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation, saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n        // this.props.crudMaster(inputParam);\r\n    }\r\n    DeleteManufacturer = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"manufacturer\"] = this.props.Login.masterData.selectedManufacturer;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        const postParam = {\r\n            inputListName: \"Manufacturer\", selectedObject: \"selectedManufacturer\",\r\n            primaryKeyField: \"nmanufcode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedManufacturer.nmanufcode,\r\n            fetchUrl: \"manufacturer/getManufacturerWithSiteAndContactDetails\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: \"Manufacturer\", postParam,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\"\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        // this.props.crudMaster(inputParam, this.props.Login.masterData);\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Manufacturer\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;//comboData.value;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n        //     this.setState(\r\n        //         {\r\n        //             Manufacturer: this.props.Login.masterData.Manufacturer ?\r\n        //                 this.props.Login.masterData.Manufacturer : this.state.Manufacturer,\r\n        //             selectedManufacturer: this.props.Login.masterData.selectedManufacturer ?\r\n        //                 this.props.Login.masterData.selectedManufacturer : this.state.selectedManufacturer,\r\n        //             ManufacturerSiteAddress: this.props.Login.masterData.ManufacturerSiteAddress ?\r\n        //                 this.props.Login.masterData.ManufacturerSiteAddress : {},\r\n        //             ManufacturerContactInfo: this.props.Login.masterData.ManufacturerContactInfo ?\r\n        //                 this.props.Login.masterData.ManufacturerContactInfo : {},\r\n        //             SiteCode: this.props.Login.masterData.SiteCode ? this.props.Login.masterData.SiteCode : 0,\r\n        //             isOpen: false\r\n        //         });\r\n\r\n\r\n        // }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"manufacturer\",\r\n            methodUrl: \"Manufacturer\",\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: \"Manufacturer\"\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, validateEsignCredential, updateStore,\r\n        getManfacturerCombo, selectCheckBoxManufacturer, getContactInfo,\r\n        getSiteManufacturerLoadEdit, getContactManufacturerLoadEdit, filterColumnData\r\n    })(injectIntl(Manufacturer));"]},"metadata":{},"sourceType":"module"}