{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{intl}from'../../components/App';import{injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{MediaHeader}from'../../components/App.styles';import rsapi from'../../rsapi';import{constructOptionList}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{toast}from'react-toastify';import Preloader from'../../components/preloader/preloader.component';import{updateStore}from'../../actions';import{connect}from'react-redux';//const ResultEntryInstrumentForm = (this.props) => {\nvar ResultEntryInstrumentForm=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryInstrumentForm,_React$Component);var _super=_createSuper(ResultEntryInstrumentForm);function ResultEntryInstrumentForm(props){var _this;_classCallCheck(this,ResultEntryInstrumentForm);_this=_super.call(this,props);_this.onComboChange=function(comboData,comboName){var selectedRecordInstrumentForm=_this.state.selectedRecordInstrumentForm||{};if(comboData){selectedRecordInstrumentForm['ninstrumentcode']=comboData;}else{selectedRecordInstrumentForm['ninstrumentcode']=[];}//Sync Child Component data with Parent Component     \n_this.props.onChildDataChange(selectedRecordInstrumentForm);_this.setState({selectedRecordInstrumentForm:selectedRecordInstrumentForm});};_this.onDateChange=function(dateName,dateValue){var selectedRecordInstrumentForm=_this.state.selectedRecordInstrumentForm||{};selectedRecordInstrumentForm[dateName]=dateValue;if(dateName===\"dfromdate\"||dateName===\"dtodate\"){//Sync Child Component data with Parent Component     \n_this.props.onChildDataChange(selectedRecordInstrumentForm);_this.setState({selectedRecordInstrumentForm:selectedRecordInstrumentForm});}};_this.onComboCategoryChange=function(event,fieldname){if(event!==null){var uRL=\"\";var inputData=[];if(fieldname===\"ninstrumentcatcode\"){inputData={userinfo:_this.props.userInfo,nflag:2,ninstrumentcatcode:event.value,ncalibrationRequired:event.item.ncalibrationreq};}_this.setState({loading:true});rsapi.post(\"resultentrybysample/getResultUsedInstrumentCombo\",{userinfo:_this.props.userInfo,nflag:2,ninstrumentcatcode:event.value,ncalibrationRequired:event.item.ncalibrationreq}).then(function(response){var TagInstrument=constructOptionList(response.data.Instrument||[],\"ninstrumentcode\",\"sinstrumentid\",undefined,undefined,undefined);var TagListInstrument=TagInstrument.get(\"OptionList\");// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: \n//Sync Child Component data with Parent Component     \nvar selectedRecordInstrumentForm=_this.state.selectedRecordInstrumentForm||{};selectedRecordInstrumentForm['ninstrumentcatcode']=event;selectedRecordInstrumentForm['ninstrumentcode']=TagInstrument.has('DefaultValue')&&TagInstrument.get(\"DefaultValue\")?TagInstrument.get(\"DefaultValue\"):[];_this.props.onChildDataChange(selectedRecordInstrumentForm);_this.setState({// masterData: { ...this.props.Login.masterData, \nInstrument:TagListInstrument// }\n,loading:false,selectedRecordInstrumentForm:_objectSpread(_objectSpread({},_this.state.selectedRecordInstrumentForm),{},{ninstrumentcatcode:event,ninstrumentcode:TagInstrument.has('DefaultValue')&&TagInstrument.get(\"DefaultValue\")?TagInstrument.get(\"DefaultValue\"):[]})});//}\n// this.props.updateStore(updateInfo); \n});// .catch(error => {\n//     if (error.response.status === 500) {\n//         toast.error(error.message);\n//     }\n//     else {\n//         toast.warn(error.response.data);\n//     }\n// })\n}};_this.state={selectedRecordInstrumentForm:_this.props.selectedRecordInstrumentForm,instrumentcatValue:_this.props.instrumentcatValue,Instrument:_this.props.instrumentValue,loading:false};return _this;}_createClass(ResultEntryInstrumentForm,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{isInstrumentInitialRender:false}};this.props.updateStore(updateInfo);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.selectedRecordInstrumentForm!==previousProps.selectedRecordInstrumentForm){this.setState({selectedRecordInstrumentForm:this.props.selectedRecordInstrumentForm});}if(this.props.instrumentValue!==previousProps.instrumentValue){this.setState({Instrument:this.props.instrumentValue});}if(this.props.instrumentcatValue!==previousProps.instrumentcatValue){this.setState({instrumentcatValue:this.props.instrumentcatValue});}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),Object.values(this.state.selectedRecordInstrumentForm).length>0?/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},this.props.needSubSample?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},intl.formatMessage({id:\"IDS_SAMPLEARNO\"}),\": \",\" \"+this.state.selectedRecordInstrumentForm.ssamplearno)):/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},intl.formatMessage({id:\"IDS_ARNO\"}),\": \",\" \"+this.state.selectedRecordInstrumentForm.sarno)),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},intl.formatMessage({id:\"IDS_TEST\"}),\": \",\" \"+this.state.selectedRecordInstrumentForm.stestsynonym))):\"\",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORY\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"ninstrumentcatcode\",isDisabled:false,isMandatory:true,options:this.state.instrumentcatValue||[],optionId:\"ninstrumentcatcode\",optionValue:\"sinstrumentcatname\",value:this.state.selectedRecordInstrumentForm?this.state.selectedRecordInstrumentForm.ninstrumentcatcode:\"\",showOption:true,required:true,onChange:function onChange(event){return _this2.onComboCategoryChange(event,'ninstrumentcatcode');},isMulti:false,closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:intl.formatMessage({id:\"IDS_INSTRUMENTID\"}),placeholder:intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isSearchable:false,name:\"ninstrumentcode\",isDisabled:false,isMandatory:true,options:this.state.Instrument||[],optionId:\"ninstrumentcode\",optionValue:\"sinstrumentid\",value:this.state.selectedRecordInstrumentForm?this.state.selectedRecordInstrumentForm.ninstrumentcode:\"\",showOption:true,required:true,onChange:function onChange(event){return _this2.onComboChange(event,'ninstrumentcode');},isMulti:false,closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dfromdate\",label:intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecordInstrumentForm[\"dfromdate\"],value:this.state.selectedRecordInstrumentForm[\"dfromdate\"]//dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\n,dateFormat:this.props.userInfo.ssitedatetime,timeInputLabel:this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:true,isClearable:false,isMandatory:true,required:true,onChange:function onChange(date){return _this2.onDateChange(\"dfromdate\",date);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dtodate\",label:intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecordInstrumentForm[\"dtodate\"],value:this.state.selectedRecordInstrumentForm[\"dtodate\"]//  dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\n,dateFormat:this.props.userInfo.ssitedatetime,timeInputLabel:this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:true,isClearable:false,isMandatory:true,required:true,onChange:function onChange(date){return _this2.onDateChange(\"dtodate\",date);}}))));}}]);return ResultEntryInstrumentForm;}(React.Component);// export default injectIntl(ResultEntryInstrumentForm);\nexport default connect(null,{updateStore:updateStore})(injectIntl(ResultEntryInstrumentForm));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryInstrumentForm.jsx"],"names":["React","Row","Col","FormSelectSearch","intl","injectIntl","DateTimePicker","MediaHeader","rsapi","constructOptionList","DEFAULT_RETURN","toast","Preloader","updateStore","connect","ResultEntryInstrumentForm","props","onComboChange","comboData","comboName","selectedRecordInstrumentForm","state","onChildDataChange","setState","onDateChange","dateName","dateValue","onComboCategoryChange","event","fieldname","uRL","inputData","userinfo","userInfo","nflag","ninstrumentcatcode","value","ncalibrationRequired","item","ncalibrationreq","loading","post","then","response","TagInstrument","data","Instrument","undefined","TagListInstrument","get","has","ninstrumentcode","instrumentcatValue","instrumentValue","updateInfo","typeName","isInstrumentInitialRender","previousProps","Object","values","length","needSubSample","formatMessage","id","ssamplearno","sarno","stestsynonym","ssitedatetime","date","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { intl } from '../../components/App';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { MediaHeader } from '../../components/App.styles';\r\nimport rsapi from '../../rsapi';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport {\r\n    updateStore\r\n} from '../../actions';\r\nimport { connect } from 'react-redux';\r\n//const ResultEntryInstrumentForm = (this.props) => {\r\nclass ResultEntryInstrumentForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecordInstrumentForm: this.props.selectedRecordInstrumentForm,\r\n            instrumentcatValue: this.props.instrumentcatValue,\r\n            Instrument: this.props.instrumentValue,\r\n            loading: false\r\n        }\r\n\r\n    }\r\n    onComboChange = (comboData, comboName) => {\r\n        let selectedRecordInstrumentForm = this.state.selectedRecordInstrumentForm || {};\r\n        if (comboData) {\r\n            selectedRecordInstrumentForm['ninstrumentcode'] = comboData;\r\n        } else {\r\n            selectedRecordInstrumentForm['ninstrumentcode'] = []\r\n        }\r\n        //Sync Child Component data with Parent Component     \r\n        this.props.onChildDataChange(selectedRecordInstrumentForm);\r\n        this.setState({ selectedRecordInstrumentForm });\r\n    }\r\n    onDateChange = (dateName, dateValue) => {\r\n        let selectedRecordInstrumentForm = this.state.selectedRecordInstrumentForm || {};\r\n        selectedRecordInstrumentForm[dateName] = dateValue;\r\n        if (dateName === \"dfromdate\" || dateName === \"dtodate\") {\r\n\r\n              //Sync Child Component data with Parent Component     \r\n              this.props.onChildDataChange(selectedRecordInstrumentForm);\r\n            this.setState({ selectedRecordInstrumentForm });\r\n        }\r\n\r\n    }\r\n\r\n    onComboCategoryChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let uRL = \"\";\r\n            let inputData = []; \r\n            if (fieldname === \"ninstrumentcatcode\") {\r\n                inputData = {\r\n                    userinfo: this.props.userInfo,\r\n                    nflag: 2,\r\n                    ninstrumentcatcode: event.value,\r\n                    ncalibrationRequired: event.item.ncalibrationreq\r\n                }\r\n            }\r\n            this.setState({ loading: true })\r\n            rsapi.post(\"resultentrybysample/getResultUsedInstrumentCombo\", {\r\n                userinfo: this.props.userInfo,\r\n                nflag: 2,\r\n                ninstrumentcatcode: event.value,\r\n                ncalibrationRequired: event.item.ncalibrationreq\r\n            }).then(response => {\r\n                    let TagInstrument = constructOptionList(response.data.Instrument || [], \"ninstrumentcode\",\r\n                        \"sinstrumentid\", undefined, undefined, undefined);\r\n                        let TagListInstrument = TagInstrument.get(\"OptionList\")\r\n\r\n                    // const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //     data: \r\n\r\n                    //Sync Child Component data with Parent Component     \r\n                    const selectedRecordInstrumentForm = this.state.selectedRecordInstrumentForm || {};\r\n                    selectedRecordInstrumentForm['ninstrumentcatcode']=event\r\n                    selectedRecordInstrumentForm['ninstrumentcode']=TagInstrument.has('DefaultValue')&&TagInstrument.get(\"DefaultValue\") ? TagInstrument.get(\"DefaultValue\") : []\r\n                    this.props.onChildDataChange(selectedRecordInstrumentForm);\r\n\r\n                    this.setState({\r\n                        // masterData: { ...this.props.Login.masterData, \r\n                        Instrument: TagListInstrument\r\n                        // }\r\n                        ,\r\n                        loading: false,\r\n                        selectedRecordInstrumentForm: {\r\n                            ...this.state.selectedRecordInstrumentForm,\r\n                            ninstrumentcatcode: event,\r\n                            ninstrumentcode: TagInstrument.has('DefaultValue')&&TagInstrument.get(\"DefaultValue\") ? TagInstrument.get(\"DefaultValue\") : [],\r\n                        }\r\n                    })\r\n                    //}\r\n                    // this.props.updateStore(updateInfo); \r\n                })\r\n                // .catch(error => {\r\n                //     if (error.response.status === 500) {\r\n                //         toast.error(error.message);\r\n                //     }\r\n                //     else {\r\n                //         toast.warn(error.response.data);\r\n                //     }\r\n                // })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isInstrumentInitialRender: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.selectedRecordInstrumentForm !== previousProps.selectedRecordInstrumentForm) {\r\n            this.setState({ selectedRecordInstrumentForm: this.props.selectedRecordInstrumentForm });\r\n        }\r\n        if (this.props.instrumentValue !== previousProps.instrumentValue) {\r\n            this.setState({ Instrument: this.props.instrumentValue });\r\n        }\r\n        if (this.props.instrumentcatValue !== previousProps.instrumentcatValue) {\r\n            this.setState({ instrumentcatValue: this.props.instrumentcatValue });\r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Preloader loading={this.state.loading} />\r\n                {Object.values(this.state.selectedRecordInstrumentForm).length > 0 ?\r\n                    <Row className=\"mb-4\">\r\n                        {this.props.needSubSample ?\r\n\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_SAMPLEARNO\" })}: {\" \" + this.state.selectedRecordInstrumentForm.ssamplearno}</MediaHeader>\r\n                            </Col>\r\n                            :\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_ARNO\" })}: {\" \" + this.state.selectedRecordInstrumentForm.sarno}</MediaHeader>\r\n                            </Col>\r\n                        }\r\n                        <Col md={12}>\r\n                            <MediaHeader className={`labelfont`}>{intl.formatMessage({ id: \"IDS_TEST\" })}: {\" \" + this.state.selectedRecordInstrumentForm.stestsynonym}</MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                    : \"\"}\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isSearchable={false}\r\n                            name={\"ninstrumentcatcode\"}\r\n                            isDisabled={false}\r\n                            isMandatory={true}\r\n                            options={this.state.instrumentcatValue || []}\r\n                            optionId='ninstrumentcatcode'\r\n                            optionValue='sinstrumentcatname'\r\n                            value={this.state.selectedRecordInstrumentForm ? this.state.selectedRecordInstrumentForm.ninstrumentcatcode : \"\"}\r\n                            showOption={true}\r\n                            required={true}\r\n                            onChange={(event) => this.onComboCategoryChange(event, 'ninstrumentcatcode')}\r\n                            isMulti={false}\r\n                            closeMenuOnSelect={true}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isSearchable={false}\r\n                            name={\"ninstrumentcode\"}\r\n                            isDisabled={false}\r\n                            isMandatory={true}\r\n                            options={this.state.Instrument || []}\r\n                            optionId='ninstrumentcode'\r\n                            optionValue='sinstrumentid'\r\n                            value={this.state.selectedRecordInstrumentForm ? this.state.selectedRecordInstrumentForm.ninstrumentcode : \"\"}\r\n                            showOption={true}\r\n                            required={true}\r\n                            onChange={(event) => this.onComboChange(event, 'ninstrumentcode')}\r\n                            isMulti={false}\r\n                            closeMenuOnSelect={true}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"dfromdate\"}\r\n                            label={intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText=\"Select date..\"\r\n                            selected={this.state.selectedRecordInstrumentForm[\"dfromdate\"]}\r\n                            value={this.state.selectedRecordInstrumentForm[\"dfromdate\"]}\r\n                            //dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\r\n                            dateFormat={this.props.userInfo.ssitedatetime}\r\n                            timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={true}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            onChange={date => this.onDateChange(\"dfromdate\", date)}\r\n\r\n                        />\r\n                    </Col>\r\n                    {/* <Col md={6}>\r\n                        <FormSelectSearch\r\n                            name={\"ntzfromdate\"}\r\n                            formLabel={intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.timeZoneListData}\r\n                            optionId=\"ntimezonecode\"\r\n                            optionValue=\"stimezoneid\"\r\n                            value={this.props.selectedRecordInstrumentForm.ntzfromdate}\r\n                            defaultValue={this.props.selectedRecordInstrumentForm.ntzfromdate}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isClearable={false}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange={(event) => this.props.onComboChange(event, 'ntzfromdate')}\r\n                        />\r\n                    </Col> */}\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"dtodate\"}\r\n                            label={intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText=\"Select date..\"\r\n                            selected={this.state.selectedRecordInstrumentForm[\"dtodate\"]}\r\n                            value={this.state.selectedRecordInstrumentForm[\"dtodate\"]}\r\n                            //  dateFormat={\"dd/MM/yyyy HH:mm:ss\"}\r\n                            dateFormat={this.props.userInfo.ssitedatetime}\r\n                            timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={true}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            onChange={date => this.onDateChange(\"dtodate\", date)}\r\n\r\n                        />\r\n                    </Col>\r\n                    {/* <Col md={6}>\r\n                        <FormSelectSearch\r\n                            name={\"ntztodate\"}\r\n                            formLabel={intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                            placeholder={intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.timeZoneListData}\r\n                            optionId=\"ntimezonecode\"\r\n                            optionValue=\"stimezoneid\"\r\n                            value={this.props.selectedRecordInstrumentForm.ntztodate}\r\n                            defaultValue={this.props.selectedRecordInstrumentForm.ntztodate}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isClearable={false}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange={(event) => this.props.onComboChange(event, 'ntztodate')}\r\n                        />\r\n                    </Col> */}\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n// export default injectIntl(ResultEntryInstrumentForm);\r\nexport default connect(null, {\r\n    updateStore\r\n\r\n})(injectIntl(ResultEntryInstrumentForm));\r\n"]},"metadata":{},"sourceType":"module"}