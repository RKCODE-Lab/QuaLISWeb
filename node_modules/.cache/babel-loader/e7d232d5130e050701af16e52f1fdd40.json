{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\audittrail\\\\Esign.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { TagLine } from \"../../components/login/login.styles\";\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { updateStore } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Esign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.props.selectedRecord || {};\n      selectedRecord[fieldName] = comboData; // this.setState({ selectedRecord });  \n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.toggleChange = event => {\n      let agree = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      this.setState({\n        agree\n      });\n      this.props.onInputOnChange(event);\n    };\n\n    this.state = {\n      agree: transactionStatus.YES\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    state.agree = props.selectedRecord.agree === transactionStatus.NO ? false : true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sloginid\",\n      type: \"text\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_LOGINID\"\n      }),\n      defaultValue: this.props.inputParam && this.props.inputParam.inputData && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\"),\n      isMandatory: false,\n      required: false,\n      maxLength: 20,\n      readOnly: true,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"esignpassword\",\n      type: \"password\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_PASSWORD\"\n      }),\n      isMandatory: true,\n      required: true,\n      maxLength: 50,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"esignreason\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REASON\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.Login.esignReasonList || [] // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\n      ,\n      isMandatory: true,\n      isMulti: false,\n      isClearable: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.onComboChange(event, \"esignreason\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"esigncomments\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      rows: \"2\",\n      isMandatory: true,\n      required: true,\n      maxLength: 255,\n      onChange: event => this.props.onInputOnChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"esigndate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ESIGNDATE\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.Login.serverTime,\n      dateFormat: this.props.Login.userInfo.ssitedatetime,\n      isClearable: false,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TagLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ELECTRONICSIGN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGNTEXT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(CustomSwitch, {\n      name: \"agree\",\n      type: \"switch\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_AGREE\"\n      }) // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\n      ,\n      isMandatory: true,\n      required: true,\n      checked: this.state.agree,\n      onChange: event => this.toggleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} //export default injectIntl(Esign);\n\n\nexport default connect(mapStateToProps, {\n  updateStore\n})(injectIntl(Esign));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/audittrail/Esign.js"],"names":["React","connect","Row","Col","FormInput","FormTextarea","CustomSwitch","FormattedMessage","injectIntl","DateTimePicker","TagLine","transactionStatus","FormSelectSearch","updateStore","DEFAULT_RETURN","mapStateToProps","state","Login","Esign","Component","constructor","props","onComboChange","comboData","fieldName","selectedRecord","updateInfo","typeName","data","toggleChange","event","agree","target","checked","YES","NO","setState","onInputOnChange","getDerivedStateFromProps","render","intl","formatMessage","id","inputParam","inputData","userinfo","esignReasonList","serverTime","userInfo","ssitedatetime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,SAASC,OAAT,QAAuB,qCAAvB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAIA,MAAMC,KAAN,SAAoBlB,KAAK,CAACmB,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiGfC,aAjGe,GAiGC,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACtC,YAAMC,cAAc,GAAG,KAAKJ,KAAL,CAAWI,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACD,SAAD,CAAd,GAA4BD,SAA5B,CAFsC,CAGvC;;AACA,YAAMG,UAAU,GAAG;AACdC,QAAAA,QAAQ,EAAEb,cADI;AAEdc,QAAAA,IAAI,EAAE;AAAEH,UAAAA;AAAF;AAFQ,OAAnB;AAIC,WAAKJ,KAAL,CAAWR,WAAX,CAAuBa,UAAvB;AACH,KA1Gc;;AAAA,SA4GfG,YA5Ge,GA4GAC,KAAD,IAAS;AACnB,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,KAAyB,IAAzB,GAAgCtB,iBAAiB,CAACuB,GAAlD,GAAwDvB,iBAAiB,CAACwB,EAAtF;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACA,WAAKV,KAAL,CAAWgB,eAAX,CAA2BP,KAA3B;AACH,KAhHc;;AAEf,SAAKd,KAAL,GAAa;AACTe,MAAAA,KAAK,EAAGpB,iBAAiB,CAACuB;AADjB,KAAb;AAGH;;AAC8B,SAAxBI,wBAAwB,CAACjB,KAAD,EAAQL,KAAR,EAAe;AAC1CA,IAAAA,KAAK,CAACe,KAAN,GAAcV,KAAK,CAACI,cAAN,CAAqBM,KAArB,KAA+BpB,iBAAiB,CAACwB,EAAjD,GAAsD,KAAtD,GAA8D,IAA5E;AACH;;AACEI,EAAAA,MAAM,GAAG;AAEL,wBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAE,UADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAG,KAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAHZ;AAII,MAAA,WAAW,EAAG,KAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAJlB;AAKI,MAAA,YAAY,EAAG,KAAKrB,KAAL,CAAWsB,UAAX,IAAyB,KAAKtB,KAAL,CAAWsB,UAAX,CAAsBC,SAA/C,KACK,KAAKvB,KAAL,CAAWsB,UAAX,CAAsBC,SAAtB,CAAgCC,QAAhC,CAAyC,WAAzC,KAAyD,EAD9D,CALnB;AAOI,MAAA,WAAW,EAAE,KAPjB;AAQI,MAAA,QAAQ,EAAE,KARd;AASI,MAAA,SAAS,EAAE,EATf;AAUI,MAAA,QAAQ,EAAI,IAVhB;AAWI,MAAA,QAAQ,EAAGf,KAAD,IAAU,KAAKT,KAAL,CAAWgB,eAAX,CAA2BP,KAA3B,CAXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAeI,oBAAC,SAAD;AACQ,MAAA,IAAI,EAAE,eADd;AAEQ,MAAA,IAAI,EAAC,UAFb;AAGQ,MAAA,KAAK,EAAG,KAAKT,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAHhB;AAIQ,MAAA,WAAW,EAAG,KAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAJtB;AAKQ,MAAA,WAAW,EAAE,IALrB;AAMQ,MAAA,QAAQ,EAAE,IANlB;AAOQ,MAAA,SAAS,EAAE,EAPnB;AAQQ,MAAA,QAAQ,EAAGZ,KAAD,IAAU,KAAKT,KAAL,CAAWgB,eAAX,CAA2BP,KAA3B,CAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eA0BI,oBAAC,gBAAD;AACQ,MAAA,IAAI,EAAE,aADd;AAEQ,MAAA,SAAS,EAAG,KAAKT,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAFpB;AAGQ,MAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHrB;AAIQ,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiB6B,eAAjB,IAAoC,EAJrD,CAKO;AALP;AAMQ,MAAA,WAAW,EAAE,IANrB;AAOQ,MAAA,OAAO,EAAE,KAPjB;AAQQ,MAAA,WAAW,EAAE,KARrB;AASQ,MAAA,YAAY,EAAE,IATtB;AAUQ,MAAA,UAAU,EAAE,KAVpB;AAWQ,MAAA,iBAAiB,EAAE,IAX3B;AAYQ,MAAA,QAAQ,EAAKhB,KAAD,IAAU,KAAKR,aAAL,CAAmBQ,KAAnB,EAA0B,aAA1B,CAZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,eAyCI,oBAAC,YAAD;AACQ,MAAA,IAAI,EAAE,eADd;AAEQ,MAAA,KAAK,EAAG,KAAKT,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAFhB;AAGQ,MAAA,WAAW,EAAG,KAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAHtB;AAIQ,MAAA,IAAI,EAAC,GAJb;AAKQ,MAAA,WAAW,EAAE,IALrB;AAMQ,MAAA,QAAQ,EAAE,IANlB;AAOQ,MAAA,SAAS,EAAE,GAPnB;AAQQ,MAAA,QAAQ,EAAGZ,KAAD,IAAU,KAAKT,KAAL,CAAWgB,eAAX,CAA2BP,KAA3B,CAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCJ,eAoDI,oBAAC,cAAD;AACgB,MAAA,IAAI,EAAE,WADtB;AAEgB,MAAA,KAAK,EAAG,KAAKT,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAFxB;AAGgB,MAAA,SAAS,EAAC,cAH1B;AAIgB,MAAA,eAAe,EAAC,eAJhC;AAKgB,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiB8B,UAL3C;AAMgB,MAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiB+B,QAAjB,CAA0BC,aANtD;AAOgB,MAAA,WAAW,EAAE,KAP7B;AAQgB,MAAA,QAAQ,EAAE,IAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDJ,eA+DI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eACqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrE,eAEQ,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CA/DJ,eAoEI,oBAAC,YAAD;AACQ,MAAA,IAAI,EAAE,OADd;AAEQ,MAAA,IAAI,EAAC,QAFb;AAGQ,MAAA,KAAK,EAAG,KAAK5B,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAHhB;AAIQ,MAAA,WAAW,EAAG,KAAKrB,KAAL,CAAWmB,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAJtB,CAKQ;AALR;AAMQ,MAAA,WAAW,EAAE,IANrB;AAOQ,MAAA,QAAQ,EAAE,IAPlB;AAQQ,MAAA,OAAO,EAAG,KAAK1B,KAAL,CAAWe,KAR7B;AASQ,MAAA,QAAQ,EAAGD,KAAD,IAAU,KAAKD,YAAL,CAAkBC,KAAlB,CAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEJ,CADL,CADA;AAoFF;;AAhG0B,C,CAmHhC;;;AACA,eAAe7B,OAAO,CAACc,eAAD,EAAkB;AAACF,EAAAA;AAAD,CAAlB,CAAP,CAAwCL,UAAU,CAACU,KAAD,CAAlD,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { TagLine} from \"../../components/login/login.styles\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { updateStore } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Esign extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            agree : transactionStatus.YES\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        state.agree = props.selectedRecord.agree === transactionStatus.NO ? false : true\r\n    }\r\n       render (){\r\n      \r\n           return(\r\n           <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                  \r\n                        placeholder={ this.props.intl.formatMessage({ id:\"IDS_LOGINID\"})}\r\n                        defaultValue ={this.props.inputParam && this.props.inputParam.inputData \r\n                                        && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\")}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly = {true}\r\n                        onChange={(event)=> this.props.onInputOnChange(event)}\r\n                    />     \r\n\r\n                    <FormInput\r\n                            name={\"esignpassword\"}\r\n                            type=\"password\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}                            \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}                            \r\n                    />\r\n\r\n                    <FormSelectSearch\r\n                            name={\"esignreason\"}\r\n                            formLabel={ this.props.intl.formatMessage({ id:\"IDS_REASON\"})}                              \r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                           \r\n                            options={this.props.Login.esignReasonList || []}\r\n                           // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isClearable={false}\r\n                            isSearchable={true}                                \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {(event)=> this.onComboChange(event, \"esignreason\")}                               \r\n                        />  \r\n                       \r\n                    <FormTextarea\r\n                            name={\"esigncomments\"}\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}                    \r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}\r\n                            rows=\"2\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={255}\r\n                            onChange={(event)=> this.props.onInputOnChange(event)}\r\n                    />\r\n                                     \r\n                    <DateTimePicker\r\n                                    name={\"esigndate\"} \r\n                                    label={ this.props.intl.formatMessage({ id:\"IDS_ESIGNDATE\"})}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={this.props.Login.serverTime}\r\n                                    dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                                    isClearable={false}\r\n                                    readOnly={true}                                                                                                  \r\n                            />\r\n                   \r\n                    <TagLine>\r\n                            <FormattedMessage id=\"IDS_ELECTRONICSIGN\"></FormattedMessage><br/>                    \r\n                            <FormattedMessage id=\"IDS_ESIGNTEXT\"></FormattedMessage>\r\n                    </TagLine>\r\n                   \r\n                    <CustomSwitch\r\n                            name={\"agree\"}\r\n                            type=\"switch\"\r\n                            label={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}\r\n                            placeholder={ this.props.intl.formatMessage({ id:\"IDS_AGREE\"})}                            \r\n                            // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            checked={ this.state.agree}\r\n                            onChange={(event)=> this.toggleChange(event)}\r\n                         />\r\n                   </Col>                          \r\n               </Row>   \r\n            )\r\n        }\r\n\r\n        onComboChange = (comboData, fieldName) => {\r\n            const selectedRecord = this.props.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n           // this.setState({ selectedRecord });  \r\n           const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n\r\n        toggleChange =(event)=>{\r\n            let agree = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            this.setState({agree})\r\n            this.props.onInputOnChange(event);\r\n        }\r\n   }\r\n   //export default injectIntl(Esign);\r\n   export default connect(mapStateToProps, {updateStore})(injectIntl(Esign));"]},"metadata":{},"sourceType":"module"}