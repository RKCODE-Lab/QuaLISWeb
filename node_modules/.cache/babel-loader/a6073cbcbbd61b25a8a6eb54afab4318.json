{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel,Form,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PerfectScrollbar from'react-perfect-scrollbar';import{faTrashAlt,faCopy,faPencilAlt,faSync,faPlus,faThumbsUp}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService,crudMaster,validateEsignCredential,updateStore,getSelectedSampleStorageLocation,openPropertyModal,editSampleStorageLocation}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import ReactTooltip from'react-tooltip';import{uuid}from\"uuidv4\";import TreeEditable from\"../../components/form-tree-editable/TreeEditable\";import TreeViewEditable from\"../../components/form-tree-editable/form-tree-editable.component\";import{mapTree,removeItems}from\"@progress/kendo-react-treelist\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import AddTreeview from'./AddTreeview';import AddTreeProperties from'./AddTreeProperties';import{Splitter}from'@progress/kendo-react-layout';import TransactionListMaster from'../../components/TransactionListMaster';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import SplitterLayout from'react-splitter-layout';var SampleStorageLocation=/*#__PURE__*/function(_Component){_inherits(SampleStorageLocation,_Component);var _super=_createSuper(SampleStorageLocation);function SampleStorageLocation(_props){var _this;_classCallCheck(this,SampleStorageLocation);_this=_super.call(this,_props);_this.onChange=function(event){_this.setState({panes:event.newState});};_this.addChildNode=function(e,clickedItem){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===clickedItem.id){item.items=item.items||[];item.items.push({id:uuid(),text:uuid(),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});}return item;});_this.setState({treeData:newData});};_this.equalNode=function(e,clickedItem){var parentItem={};var parentFound=false;var newData=_toConsumableArray(_this.state.treeData);mapTree(_this.state.treeData,\"items\",function(item){if(item.items){if(parentFound){parentItem=item;parentFound=false;}}if(item.id===clickedItem.id){parentFound=true;}return item;});if(parentItem.text===undefined){newData.push({id:uuid(),text:uuid(),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});_this.setState({treeData:newData});}else{newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===parentItem.id){item.items.push({id:uuid(),text:uuid(),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});}return item;});_this.setState({treeData:newData});}};_this.deleteNode=function(clickedItem){var newData=removeItems(_this.state.treeData,\"items\",function(item){return item.id===clickedItem.id;});_this.setState({treeData:newData});};_this.editRecord=function(e,clickedItem){_this.setState({toggleAction:!_this.state.toggleAction});};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:false,selectedRecord:{}}};_this.props.updateStore(updateInfo);};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.itemRender=function(props){if(_this.state.toggleAction){return/*#__PURE__*/React.createElement(React.Fragment,null,props.item.editable?/*#__PURE__*/React.createElement(Form.Group,{className:\"k-editable-text-wrap\"},/*#__PURE__*/React.createElement(Form.Control,{id:\"nodename\",name:\"nodename\",type:\"text\",onKeyDown:function onKeyDown(e){return e.stopPropagation();},value:props.item.text,autoFocus:true,autoComplete:\"off\",onChange:function onChange(e){return _this.handleChange(e,props.item);},onBlur:function onBlur(e){return _this.handleBlur(e,props.item);}})):/*#__PURE__*/React.createElement(\"span\",null,props.item.text));}else{return/*#__PURE__*/React.createElement(React.Fragment,null,props.item?/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline mb-0\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item mr-3\"},props.item.text),props.item.editable?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-level1\",onClick:function onClick(e){e.stopPropagation();_this.equalNode(e,props.item);}})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-level2\",onClick:function onClick(e){e.stopPropagation();_this.addChildNode(e,props.item);}})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"k-icon k-i-edit k-i-pencil\",onClick:function onClick(e){e.stopPropagation();_this.editRecord(e,props.item);}})),!props.item.isRoot?/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"k-icon k-i-delete\",onClick:function onClick(e){e.stopPropagation();_this.deleteNode(props.item);}})):null):null):\"\");}};_this.onItemClick=function(event){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.editable===true){item.editable=false;}else if(item.id===event.item.id){item.editable=true;}return item;});_this.setState({treeData:newData});};_this.onExpandChange=function(event){event.item.expanded=!event.item.expanded;_this.forceUpdate();};_this.itemRenderView=function(clickedItem){if(!_this.state.toggleActionView){return/*#__PURE__*/React.createElement(React.Fragment,null,clickedItem.item?/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline mb-0\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item mr-3\"},clickedItem.item.text),clickedItem.item.editable?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-toggle\",onClick:function onClick(e){return _this.setProperties(e,clickedItem);}}))):null):\"\");}};_this.onItemClickView=function(event){var newData=mapTree(_this.state.treeDataView,\"items\",function(item){if(item.editable===true){item.editable=false;}else if(item.id===event.item.id){item.editable=true;}return item;});_this.setState({treeDataView:newData});};_this.onExpandChangeView=function(event){event.item.expanded=!event.item.expanded;_this.forceUpdate();};_this.setProperties=function(event,clickedItem){_this.props.openPropertyModal(clickedItem);};_this.handleChange=function(e,clickedItem){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===clickedItem.id){item.text=e.target.value;}return item;});_this.setState({treeData:newData});};_this.handleBlur=function(e,item){item.editable=false;_this.setState({toggleAction:!_this.state.toggleAction});};_this.onSaveClick=function(){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties();}else{_this.onSaveSampleStorageLocation();}};_this.onSaveProperties=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.clickedItem&&_this.props.Login.clickedItem!==undefined){var inputData=[];var jsondata={};var postParam=undefined;var newData=mapTree(_this.state.treeDataView,\"items\",function(item){if(item.id===_this.props.Login.clickedItem.item.id){item.locationlastnode=selectedRecord[\"locationlastnode\"]!==undefined?selectedRecord[\"locationlastnode\"]:false;item.containerfirstnode=selectedRecord[\"containerfirstnode\"]!==undefined?selectedRecord[\"containerfirstnode\"]:false;item.containerlastnode=selectedRecord[\"containerlastnode\"]!==undefined?selectedRecord[\"containerlastnode\"]:false;}return item;});postParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\"};jsondata[\"data\"]=newData;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sampleStorageLocation\"]={\"nstatus\":1};inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"];inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"ssamplestoragelocationname\"];inputData[\"sampleStorageLocation\"][\"jsondata\"]=jsondata;var inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"update\",saveType:saveType,formRef:formRef,postParam:postParam};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveSampleStorageLocation=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"ssamplestoragelocationname\"]&&selectedRecord[\"ssamplestoragelocationname\"].length>0){var inputData=[];var jsondata={};var postParam=undefined;var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.editable===true){item.editable=false;}return item;});// postParam = { inputListName: \"SampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\njsondata[\"data\"]=newData;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sampleStorageLocation\"]={\"nstatus\":1};inputData[\"sampleStorageVersion\"]={\"nstatus\":1};inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"]=selectedRecord[\"ssamplestoragelocationname\"];inputData[\"sampleStorageVersion\"][\"jsondata\"]=jsondata;if(_this.props.Login.operation===\"create\"){var inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"create\",saveType:saveType,formRef:formRef};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}else{inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"];var _inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"update\",saveType:saveType,formRef:formRef};_this.props.crudMaster(_inputParam,_this.props.Login.masterData,\"openModal\");}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_INVALIDSAMPLESTORAGELOCATIONNAME\"}));}};_this.deleteSampleStorageLocation=function(){var inputData=[];inputData[\"sampleStorageLocation\"]=_this.props.Login.masterData.selectedSampleStorageLocation;inputData[\"userinfo\"]=_this.props.Login.userInfo;var inputParam={methodUrl:\"SampleStorageLocation\",classUrl:\"samplestoragelocation\",inputData:inputData,operation:\"delete\",searchRef:_this.searchRef};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.confirmDelete=function(ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteSampleStorageLocation(\"delete\",ncontrolCode);});};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.state={toggleAction:false,treeDataView:undefined,toggleActionView:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],panes:[{size:'50%',scrollable:false}],selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),skip:0,detailSkip:0,detailTake:10,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,splitChangeWidthPercentage:22};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageLocation,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var filterData=this.state.filterData;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({controlMap:controlMap,userRoleControlRights:userRoleControlRights});}if(this.props.Login.treeData!==previousProps.Login.treeData){this.setState({treeData:this.props.Login.treeData});}if(this.props.Login.masterData.selectedSampleStorageVersion!==previousProps.Login.masterData.selectedSampleStorageVersion){this.setState({treeDataView:JSON.parse(this.props.Login.masterData.selectedSampleStorageVersion[\"jsondata\"].value).data});}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"render\",value:function render(){var _this2=this;var addId=this.state.controlMap.has(\"Add SampleStorageLocation\")&&this.state.controlMap.get(\"Add SampleStorageLocation\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit SampleStorageLocation\")&&this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete SampleStorageLocation\")&&this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;var breadCrumbData=[];var confirmMessage=new ConfirmMessage();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData}):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,onSecondaryPaneSizeChange:this.paneSizeChange,secondaryInitialSize:25,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster,{paneHeight:this.state.parentHeight,needMultiSelect:false,masterList:this.props.Login.masterData.sampleStorageLocation||[],selectedMaster:[this.props.Login.masterData.selectedSampleStorageLocation],primaryKeyField:\"nsamplestoragelocationcode\",getMasterDetail:function getMasterDetail(selectedItem){return _this2.props.getSelectedSampleStorageLocation(selectedItem,_this2.props.Login.userInfo,_this2.props.Login.masterData);},inputParam:{userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData},mainField:\"ssamplestoragelocationname\",selectedListName:\"selectedSampleStorageLocation\",objectName:\"LocationMaster\",listName:\"IDS_SAMPLESTORAGELOCATION\"// filterColumnData={this.props.filterTransactionList}\n,searchListName:\"searchedData\",searchRef:this.searchRef// filterParam={filterParam}\n// showFilter={this.props.Login.showFilter}\n// openFilter={this.openFilter}\n// closeFilter={this.closeFilter}\n// onFilterSubmit={this.onFilterSubmit}                                       \n,needFilter:false//skip={this.state.masterSkip}\n//take={this.state.masterTake}\n,hidePaging:false,handlePageChange:this.handlePageChange,skip:this.state.skip,take:this.state.take,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.openModal();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:this.props.intl.formatMessage({id:\"IDS_ADD\"})})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this2.reloadData();},\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))}),/*#__PURE__*/React.createElement(SplitterLayout,{vertical:true,borderColor:\"#999\",percentage:true,primaryIndex:1//secondaryInitialSize={400}\n,customClassName:\"fixed_list_height\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3,style:{paddingRight:'0'}},/*#__PURE__*/React.createElement(TransactionListMaster,{masterList:this.props.Login.masterData.sampleStorageVersion||[],needMultiSelect:false,selectedMaster:[this.props.Login.masterData.selectedSampleStorageVersion],primaryKeyField:\"nsamplestorageversioncode\",getMasterDetail:function getMasterDetail(selectedItem){return _this2.props.getSelectedSampleStorageVersion(selectedItem,_this2.props.Login.userInfo,_this2.props.Login.masterData);},inputParam:{userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData},mainField:\"nversionno\",mainFieldLabel:this.props.intl.formatMessage({id:\"IDS_VERSION\"}),selectedListName:\"selectedSampleStorageVersion\",objectName:\"Version\",listName:\"IDS_SAMPLESTORAGEVersion\",hideSearch:true,needValidation:false,needFilter:false,moreField:[],skip:this.state.detailSkip,take:this.state.detailTake,hidePaging:true,handlePageChange:this.handleDetailPageChange,splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"detailtoedit\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(e){return _this2.props.editSampleStorageLocation(_this2.props.Login.masterData.selectedSampleStorageVersion,_this2.props.Login.userInfo,_this2.props.Login.masterData);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"mastertodelete\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.confirmDelete(deleteId);}}]})),/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.length>0&&this.props.Login.masterData.selectedSampleStorageLocation?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedSampleStorageLocation.ssamplestoragelocationname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"action-icons-wrap mr-2\"},this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus===8?/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined  outline-secondary btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DRAFT\",defaultMessage:\"Draft\"})):this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus===7?/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-secondary btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RETIRED\",defaultMessage:\"Retired\"})):/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-success btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_APPROVED\",defaultMessage:\"Approved\"}))))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip_list_wrap\"}),/*#__PURE__*/React.createElement(ProductList,{className:\"d-inline dropdown badget_menu\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\"// hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\n,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(e){return _this2.props.editSampleStorageLocation(_this2.props.Login.masterData.selectedSampleStorageVersion,_this2.props.Login.userInfo,_this2.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QB\",className:\"btn btn-circle outline-grey mr-2\"// hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\n,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this2.confirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QB\",className:\"btn btn-circle outline-grey mr-2\"// hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\n,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})// onClick={() => this.confirmDelete(deleteId)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp}))))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(TreeViewEditable,{id:\"samplestoragelocation\",name:\"samplestoragelocation\"// label=\"Sample Storage Location\"\n,data:this.state.treeDataView,expandIcons:true,item:this.itemRenderView,onExpandChange:this.onExpandChangeView,onItemClick:this.onItemClickView}))):\"\")))))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.intl.formatMessage({id:\"IDS_SAMPLESTORAGELOCATION\"}),onSaveClick:this.onSaveClick,selectedRecord:this.state.selectedRecord||{},addComponent:this.props.Login.loadTreeProperties?/*#__PURE__*/React.createElement(AddTreeProperties,{onInputChange:function onInputChange(e){return _this2.onInputChange(e);},selectedRecord:this.state.selectedRecord||{}}):this.state.treeData?/*#__PURE__*/React.createElement(AddTreeview,{treeData:this.state.treeData,onInputChange:function onInputChange(e){return _this2.onInputChange(e);},selectedRecord:this.state.selectedRecord||{},itemRender:this.itemRender,onExpandChange:this.onExpandChange,onItemClick:this.onItemClick}):/*#__PURE__*/React.createElement(React.Fragment,null)}));}}]);return SampleStorageLocation;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getSelectedSampleStorageLocation:getSelectedSampleStorageLocation,openPropertyModal:openPropertyModal,editSampleStorageLocation:editSampleStorageLocation})(injectIntl(SampleStorageLocation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/SampleStorageLocation.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Form","Button","FontAwesomeIcon","PerfectScrollbar","faTrashAlt","faCopy","faPencilAlt","faSync","faPlus","faThumbsUp","toast","ListMaster","constructOptionList","getControlMap","showEsign","ReadOnlyText","ContentPanel","SlideOutModal","callService","crudMaster","validateEsignCredential","updateStore","getSelectedSampleStorageLocation","openPropertyModal","editSampleStorageLocation","DEFAULT_RETURN","ListWrapper","ProductList","ReactTooltip","uuid","TreeEditable","TreeViewEditable","mapTree","removeItems","ConfirmMessage","AddTreeview","AddTreeProperties","Splitter","TransactionListMaster","BreadcrumbComponent","SplitterLayout","SampleStorageLocation","props","onChange","event","setState","panes","newState","addChildNode","e","clickedItem","newData","state","treeData","item","id","items","push","text","expanded","editable","locationlastnode","containerfirstnode","containerlastnode","equalNode","parentItem","parentFound","undefined","deleteNode","editRecord","toggleAction","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","root","operation","closeModal","onInputChange","target","type","name","checked","value","itemRender","stopPropagation","handleChange","handleBlur","isRoot","onItemClick","onExpandChange","forceUpdate","itemRenderView","toggleActionView","setProperties","onItemClickView","treeDataView","onExpandChangeView","onSaveClick","Login","onSaveProperties","onSaveSampleStorageLocation","saveType","formRef","inputData","jsondata","postParam","inputListName","selectedObject","primaryKeyField","userInfo","masterData","selectedSampleStorageLocation","inputParam","classUrl","methodUrl","displayName","length","info","intl","formatMessage","deleteSampleStorageLocation","searchRef","confirmDelete","ncontrolCode","confirmMessage","confirm","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","skip","take","handleDetailPageChange","size","scrollable","userRoleControlRights","controlMap","Map","detailSkip","detailTake","settings","createRef","previousProps","filterData","nformcode","Object","values","map","ncontrolcode","selectedSampleStorageVersion","JSON","parse","parentHeight","height","clientHeight","firstPane","addId","has","get","editId","deleteId","breadCrumbData","sampleStorageLocation","selectedItem","indexOf","reloadData","paddingRight","sampleStorageVersion","getSelectedSampleStorageVersion","title","controlname","objectName","hidden","onClick","ssamplestoragelocationname","napprovalstatus","float","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Form, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { faTrashAlt, faCopy, faPencilAlt, faSync, faPlus,faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSelectedSampleStorageLocation,\r\n    openPropertyModal, editSampleStorageLocation\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport TreeEditable from \"../../components/form-tree-editable/TreeEditable\";\r\nimport TreeViewEditable from \"../../components/form-tree-editable/form-tree-editable.component\";\r\nimport { mapTree, removeItems } from \"@progress/kendo-react-treelist\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddTreeview from './AddTreeview';\r\nimport AddTreeProperties from './AddTreeProperties';\r\nimport { Splitter } from '@progress/kendo-react-layout';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\n\r\nclass SampleStorageLocation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    text: \"root\",\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    onChange = (event) => {\r\n\r\n        this.setState({ panes: event.newState })\r\n\r\n    };\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let { filterData } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ controlMap, userRoleControlRights });\r\n        }\r\n\r\n        if (this.props.Login.treeData !== previousProps.Login.treeData) {\r\n            this.setState({\r\n                treeData: this.props.Login.treeData\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.selectedSampleStorageVersion !== previousProps.Login.masterData.selectedSampleStorageVersion) {\r\n            this.setState({\r\n                treeDataView:\r\n                    JSON.parse(this.props.Login.masterData.selectedSampleStorageVersion[\"jsondata\"].value).data\r\n            });\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({\r\n                selectedRecord: this.props.Login.selectedRecord\r\n            });\r\n        }\r\n    }\r\n    addChildNode = (e, clickedItem) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.id === clickedItem.id) {\r\n                item.items = item.items || [];\r\n                item.items.push({\r\n                    id: uuid(),\r\n                    text: uuid(),\r\n                    expanded: true,\r\n                    editable: false,\r\n                    locationlastnode: false,\r\n                    containerfirstnode: false,\r\n                    containerlastnode: false\r\n                });\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    equalNode = (e, clickedItem) => {\r\n        let parentItem = {};\r\n        let parentFound = false;\r\n        let newData = [...this.state.treeData];\r\n        mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.items) {\r\n                if (parentFound) {\r\n                    parentItem = item;\r\n                    parentFound = false;\r\n                }\r\n            }\r\n\r\n            if (item.id === clickedItem.id) {\r\n                parentFound = true;\r\n            }\r\n\r\n            return item;\r\n        });\r\n        if (parentItem.text === undefined) {\r\n            newData.push({\r\n                id: uuid(),\r\n                text: uuid(),\r\n                expanded: true,\r\n                editable: false,\r\n                locationlastnode: false,\r\n                containerfirstnode: false,\r\n                containerlastnode: false\r\n            });\r\n            this.setState({ treeData: newData });\r\n        } else {\r\n            newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n                if (item.id === parentItem.id) {\r\n                    item.items.push({\r\n                        id: uuid(),\r\n                        text: uuid(),\r\n                        expanded: true,\r\n                        editable: false,\r\n                        locationlastnode: false,\r\n                        containerfirstnode: false,\r\n                        containerlastnode: false\r\n                    });\r\n                }\r\n                return item;\r\n            });\r\n            this.setState({ treeData: newData });\r\n        }\r\n    };\r\n    deleteNode = (clickedItem) => {\r\n        const newData = removeItems(this.state.treeData, \"items\", (item) => {\r\n            return item.id === clickedItem.id;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n    editRecord = (e, clickedItem) => {\r\n        this.setState({ toggleAction: !this.state.toggleAction });\r\n    };\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: false, selectedRecord: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    itemRender = (props) => {\r\n        if (this.state.toggleAction) {\r\n            return (\r\n                <>\r\n                    {props.item.editable ? (\r\n                        <Form.Group className=\"k-editable-text-wrap\">\r\n                            <Form.Control\r\n                                id={\"nodename\"}\r\n                                name={\"nodename\"}\r\n                                type=\"text\"\r\n                                onKeyDown={(e) => e.stopPropagation()}\r\n                                value={props.item.text}\r\n                                autoFocus\r\n                                autoComplete=\"off\"\r\n                                onChange={(e) => this.handleChange(e, props.item)}\r\n                                onBlur={(e) => this.handleBlur(e, props.item)}\r\n                            />\r\n                        </Form.Group>\r\n                    ) : (\r\n                        <span>{props.item.text}</span>\r\n                    )}\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {props.item ? (\r\n                        <ul className=\"list-inline mb-0\">\r\n                            <li className=\"list-inline-item mr-3\">{props.item.text}</li>\r\n                            {props.item.editable ? (\r\n                                <>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"action-icon tree-level1\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.equalNode(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"action-icon tree-level2\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.addChildNode(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"k-icon k-i-edit k-i-pencil\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.editRecord(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n\r\n                                    {!props.item.isRoot ? (\r\n                                        <li className=\"list-inline-item\">\r\n                                            <span\r\n                                                className=\"k-icon k-i-delete\"\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    this.deleteNode(props.item);\r\n                                                }}\r\n                                            ></span>\r\n                                        </li>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n                        </ul>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    onItemClick = (event) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.editable === true) {\r\n                item.editable = false;\r\n            } else if (item.id === event.item.id) {\r\n                item.editable = true;\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    onExpandChange = (event) => {\r\n        event.item.expanded = !event.item.expanded;\r\n        this.forceUpdate();\r\n    };\r\n    itemRenderView = (clickedItem) => {\r\n        if (!this.state.toggleActionView) {\r\n            return (\r\n                <>\r\n                    {clickedItem.item ? (\r\n                        <ul className=\"list-inline mb-0\">\r\n                            <li className=\"list-inline-item mr-3\">{clickedItem.item.text}</li>\r\n                            {clickedItem.item.editable ? (\r\n                                <>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"action-icon tree-toggle\"\r\n                                            onClick={(e) => this.setProperties(e, clickedItem)}\r\n                                        ></span>\r\n                                    </li>\r\n                                </>\r\n                            ) : null}\r\n                        </ul>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n    onItemClickView = (event) => {\r\n        let newData = mapTree(this.state.treeDataView, \"items\", (item) => {\r\n            if (item.editable === true) {\r\n                item.editable = false;\r\n            } else if (item.id === event.item.id) {\r\n                item.editable = true;\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeDataView: newData });\r\n    };\r\n\r\n    onExpandChangeView = (event) => {\r\n        event.item.expanded = !event.item.expanded;\r\n        this.forceUpdate();\r\n    };\r\n    setProperties = (event, clickedItem) => {\r\n        this.props.openPropertyModal(clickedItem);\r\n    };\r\n\r\n    handleChange = (e, clickedItem) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.id === clickedItem.id) {\r\n                item.text = e.target.value;\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    handleBlur = (e, item) => {\r\n        item.editable = false;\r\n        this.setState({ toggleAction: !this.state.toggleAction });\r\n    };\r\n\r\n    onSaveClick = () => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties();\r\n        } else {\r\n            this.onSaveSampleStorageLocation();\r\n        }\r\n    };\r\n    onSaveProperties = (saveType, formRef) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n\r\n        if (this.props.Login.clickedItem && this.props.Login.clickedItem !== undefined) {\r\n            let inputData = [];\r\n            let jsondata = {}\r\n            let postParam = undefined;\r\n\r\n            let newData = mapTree(this.state.treeDataView, \"items\", (item) => {\r\n                if (item.id === this.props.Login.clickedItem.item.id) {\r\n                    item.locationlastnode = selectedRecord[\"locationlastnode\"] !== undefined ? selectedRecord[\"locationlastnode\"] : false;\r\n                    item.containerfirstnode = selectedRecord[\"containerfirstnode\"] !== undefined ? selectedRecord[\"containerfirstnode\"] : false;\r\n                    item.containerlastnode = selectedRecord[\"containerlastnode\"] !== undefined ? selectedRecord[\"containerlastnode\"] : false;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            postParam = { inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\r\n\r\n            jsondata[\"data\"] = newData;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sampleStorageLocation\"] = { \"nstatus\": 1 };\r\n            inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"]\r\n            inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"ssamplestoragelocationname\"];\r\n            inputData[\"sampleStorageLocation\"][\"jsondata\"] = jsondata;\r\n\r\n            const inputParam = {\r\n                classUrl: \"samplestoragelocation\",\r\n                methodUrl: \"SampleStorageLocation\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: \"update\", saveType, formRef, postParam\r\n            }\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveSampleStorageLocation = (saveType, formRef) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n\r\n        if (selectedRecord[\"ssamplestoragelocationname\"] && selectedRecord[\"ssamplestoragelocationname\"].length > 0) {\r\n\r\n            let inputData = [];\r\n            let jsondata = {}\r\n            let postParam = undefined;\r\n\r\n            let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n                if (item.editable === true) {\r\n                    item.editable = false;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            // postParam = { inputListName: \"SampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\r\n\r\n            jsondata[\"data\"] = newData;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sampleStorageLocation\"] = { \"nstatus\": 1 };\r\n            inputData[\"sampleStorageVersion\"] = { \"nstatus\": 1 };\r\n\r\n\r\n            inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"] = selectedRecord[\"ssamplestoragelocationname\"];\r\n            inputData[\"sampleStorageVersion\"][\"jsondata\"] = jsondata;\r\n\r\n            if (this.props.Login.operation === \"create\") {\r\n                const inputParam = {\r\n                    classUrl: \"samplestoragelocation\",\r\n                    methodUrl: \"SampleStorageLocation\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: inputData,\r\n                    operation: \"create\", saveType, formRef\r\n                }\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            } else {\r\n                inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"]\r\n                const inputParam = {\r\n                    classUrl: \"samplestoragelocation\",\r\n                    methodUrl: \"SampleStorageLocation\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: inputData,\r\n                    operation: \"update\", saveType, formRef\r\n                }\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_INVALIDSAMPLESTORAGELOCATIONNAME\" }));\r\n        }\r\n    }\r\n\r\n    deleteSampleStorageLocation = () => {\r\n        let inputData = [];\r\n        inputData[\"sampleStorageLocation\"] = this.props.Login.masterData.selectedSampleStorageLocation;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        const inputParam = {\r\n            methodUrl: \"SampleStorageLocation\",\r\n            classUrl: \"samplestoragelocation\",\r\n            inputData: inputData,\r\n            operation: \"delete\", searchRef: this.searchRef\r\n        }\r\n\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n\r\n    }\r\n    confirmDelete = (ncontrolCode) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteSampleStorageLocation(\"delete\", ncontrolCode));\r\n    };\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const addId = this.state.controlMap.has(\"Add SampleStorageLocation\") && this.state.controlMap.get(\"Add SampleStorageLocation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        const breadCrumbData = [];\r\n\r\n        const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        : \"\"}\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            {/* <Col md={12} className='parent-port-height-nobreadcrumb sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <ListWrapper> */}\r\n                            <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} onSecondaryPaneSizeChange={this.paneSizeChange} secondaryInitialSize={25} primaryMinSize={40} secondaryMinSize={20}>\r\n                                {/* First column */}\r\n                                <TransactionListMaster\r\n                                    paneHeight={this.state.parentHeight}\r\n                                    needMultiSelect={false}\r\n                                    masterList={this.props.Login.masterData.sampleStorageLocation || []}\r\n                                    selectedMaster={[this.props.Login.masterData.selectedSampleStorageLocation]}\r\n                                    primaryKeyField=\"nsamplestoragelocationcode\"\r\n                                    getMasterDetail={(selectedItem) =>\r\n                                        this.props.getSelectedSampleStorageLocation(\r\n                                            selectedItem,\r\n                                            this.props.Login.userInfo, this.props.Login.masterData\r\n                                        )}\r\n                                    inputParam={{\r\n                                        userInfo: this.props.Login.userInfo,\r\n                                        masterData: this.props.Login.masterData\r\n                                    }}\r\n                                    mainField={\"ssamplestoragelocationname\"}\r\n                                    selectedListName=\"selectedSampleStorageLocation\"\r\n                                    objectName=\"LocationMaster\"\r\n                                    listName=\"IDS_SAMPLESTORAGELOCATION\"\r\n                                    // filterColumnData={this.props.filterTransactionList}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    // filterParam={filterParam}\r\n\r\n                                    // showFilter={this.props.Login.showFilter}\r\n                                    // openFilter={this.openFilter}\r\n                                    // closeFilter={this.closeFilter}\r\n                                    // onFilterSubmit={this.onFilterSubmit}                                       \r\n                                    needFilter={false}\r\n                                    //skip={this.state.masterSkip}\r\n                                    //take={this.state.masterTake}\r\n                                    hidePaging={false}\r\n                                    handlePageChange={this.handlePageChange}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n                                    commonActions={\r\n                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                data-for=\"tooltip-common-wrap\"\r\n                                                hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.openModal()}>\r\n                                                <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} />\r\n                                            </Button>\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                onClick={() => this.reloadData()}\r\n                                                data-for=\"tooltip-common-wrap\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                    }\r\n\r\n                                />\r\n\r\n                                {/* End of first column */}\r\n                                <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} //secondaryInitialSize={400}\r\n                                    customClassName=\"fixed_list_height\">\r\n                                    <PerfectScrollbar>\r\n                                        {/* Start of second column */}\r\n                                        <div className=\"card_group\">\r\n                                            <Row>\r\n                                                <Col md={3} style={{ paddingRight: '0' }}>\r\n                                                    {/* Start of version column */}\r\n                                                    <TransactionListMaster\r\n                                                        masterList={this.props.Login.masterData.sampleStorageVersion || []}\r\n                                                        needMultiSelect={false}\r\n                                                        selectedMaster={[this.props.Login.masterData.selectedSampleStorageVersion]}\r\n                                                        primaryKeyField=\"nsamplestorageversioncode\"\r\n                                                        getMasterDetail={(selectedItem) =>\r\n                                                            this.props.getSelectedSampleStorageVersion(\r\n                                                                selectedItem, this.props.Login.userInfo,\r\n                                                                this.props.Login.masterData\r\n                                                            )}\r\n                                                        inputParam={{\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            masterData: this.props.Login.masterData\r\n                                                        }}\r\n                                                        mainField={\"nversionno\"}\r\n                                                        mainFieldLabel={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                                        selectedListName=\"selectedSampleStorageVersion\"\r\n                                                        objectName=\"Version\"\r\n                                                        listName=\"IDS_SAMPLESTORAGEVersion\"\r\n                                                        hideSearch={true}\r\n                                                        needValidation={false}\r\n                                                        needFilter={false}\r\n                                                        moreField={[]}\r\n                                                        skip={this.state.detailSkip}\r\n                                                        take={this.state.detailTake}\r\n                                                        hidePaging={true}\r\n                                                        handlePageChange={this.handleDetailPageChange}\r\n                                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                        actionIcons={\r\n                                                            [\r\n                                                                {\r\n                                                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                                    controlname: \"faPencilAlt\",\r\n                                                                    objectName: \"detailtoedit\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\r\n                                                                    onClick: (e) => this.props.editSampleStorageLocation(this.props.Login.masterData.selectedSampleStorageVersion, this.props.Login.userInfo, this.props.Login.masterData),\r\n                                                                },\r\n                                                                {\r\n                                                                    title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                    controlname: \"faTrashAlt\",\r\n                                                                    objectName: \"mastertodelete\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\r\n                                                                    onClick: () => this.confirmDelete(deleteId)\r\n                                                                }\r\n                                                            ]\r\n                                                        }\r\n                                                    />\r\n                                                    {/* End of version column */}\r\n                                                </Col>\r\n                                                <Col md={9}>\r\n                                                    {/* Start of detailed content */}\r\n                                                    <ProductList className=\"panel-main-content\">\r\n                                                        {this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.length > 0 && this.props.Login.masterData.selectedSampleStorageLocation ?\r\n                                                            <Card className=\"border-0\">\r\n                                                                <Card.Header>\r\n                                                                    <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedSampleStorageLocation.ssamplestoragelocationname}</Card.Title>\r\n                                                                    <Card.Subtitle>\r\n                                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                            <Nav.Link className=\"action-icons-wrap mr-2\">\r\n                                                                                {this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus === 8 ?\r\n\r\n                                                                                    <span className={`btn btn-outlined  outline-secondary btn-sm ml-3`}>\r\n                                                                                        <FormattedMessage id={\"IDS_DRAFT\"} defaultMessage=\"Draft\" />\r\n                                                                                    </span>\r\n                                                                                    :\r\n                                                                                    this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus === 7 ?\r\n\r\n                                                                                        <span className={`btn btn-outlined outline-secondary btn-sm ml-3`}>\r\n                                                                                            <FormattedMessage id={\"IDS_RETIRED\"} defaultMessage=\"Retired\" />\r\n                                                                                        </span>\r\n                                                                                        :\r\n                                                                                        <span className={`btn btn-outlined outline-success btn-sm ml-3`}>\r\n                                                                                            <FormattedMessage id={\"IDS_APPROVED\"} defaultMessage=\"Approved\" />\r\n                                                                                        </span>\r\n                                                                                }\r\n                                                                            </Nav.Link>\r\n                                                                        </h2>\r\n                                                                    </Card.Subtitle>\r\n                                                                    <ContentPanel className=\"d-flex product-category\">\r\n                                                                        <Col md='6'>\r\n                                                                            <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                                                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                                                                                <ProductList className=\"d-inline dropdown badget_menu\">\r\n                                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                                        // hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                        onClick={(e) => this.props.editSampleStorageLocation(this.props.Login.masterData.selectedSampleStorageVersion, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\" />\r\n\r\n                                                                                    </Nav.Link>\r\n                                                                                    <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                        // hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                        onClick={() => this.confirmDelete(deleteId)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                                    </Nav.Link>\r\n                                                                                    <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                        // hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                                        // onClick={() => this.confirmDelete(deleteId)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                                    </Nav.Link>\r\n                                                                                </ProductList>\r\n                                                                            </div>\r\n                                                                        </Col>\r\n                                                                    </ContentPanel>\r\n                                                                </Card.Header>\r\n                                                                <Card.Body>\r\n                                                                    <TreeViewEditable\r\n                                                                        id=\"samplestoragelocation\"\r\n                                                                        name=\"samplestoragelocation\"\r\n                                                                        // label=\"Sample Storage Location\"\r\n                                                                        data={this.state.treeDataView}\r\n                                                                        expandIcons={true}\r\n                                                                        item={this.itemRenderView}\r\n                                                                        onExpandChange={this.onExpandChangeView}\r\n                                                                        onItemClick={this.onItemClickView}\r\n                                                                    />\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                            : \"\"}\r\n\r\n                                                    </ProductList>\r\n                                                    {/* End of detailed content */}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </div>\r\n                                        {/* End of second column */}\r\n                                    </PerfectScrollbar>\r\n\r\n                                </SplitterLayout>\r\n\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {/* <ListWrapper className=\"client-listing-wrap mtop-4 \"> */}\r\n                {/* <Row noGutters={true}>\r\n                        <Col md=\"6\" className=\"parent-port-height\">\r\n                            <Splitter panes={this.state.panes} onChange={this.onChange}>\r\n                                <div>                                    \r\n                                    <TransactionListMaster\r\n                                        // paneHeight={this.state.parentHeight}\r\n                                        needMultiSelect={false}\r\n                                        masterList={this.props.Login.masterData &&\r\n                                            this.props.Login.masterData.sampleStorageLocation || []}\r\n                                        selectedMaster={[(this.props.Login.masterData &&\r\n                                            this.props.Login.masterData.selectedSampleStorageLocation) || []]}\r\n                                        primaryKeyField=\"nsamplestoragelocationcode\"\r\n                                        getMasterDetail={(selectedItem) =>\r\n                                            this.props.getSelectedSampleStorageLocation(\r\n                                                selectedItem,\r\n                                                this.props.Login.userInfo, this.props.Login.masterData\r\n                                            )\r\n                                        }\r\n                                        // inputParam={{\r\n                                        //   userInfo: this.props.Login.userInfo,\r\n                                        //   masterData: this.props.Login.masterData\r\n                                        // }}\r\n                                        mainField={\"ssamplestoragelocationname\"}\r\n                                        selectedListName=\"selectedSampleStorageLocation\"\r\n                                        objectName=\"LocationMaster\"\r\n                                        listName=\"IDS_SAMPLESTORAGELOCATION\"\r\n                                        // filterColumnData={this.props.filterTransactionList}\r\n                                        // searchListName=\"searchedData\"\r\n                                        searchRef={this.searchRef}\r\n                                        // filterParam={filterParam}\r\n\r\n                                        // showFilter={this.props.Login.showFilter}\r\n                                        // openFilter={this.openFilter}\r\n                                        // closeFilter={this.closeFilter}\r\n                                        // onFilterSubmit={this.onFilterSubmit}              \r\n                                        // needFilter={true}              \r\n                                        hidePaging={false}\r\n                                        pageSize={[10, 20, 30]}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        skip={0}\r\n                                        take={10}\r\n                                        commonActions={\r\n                                            <ProductList className=\"d-flex product-category float-right\">\r\n                                                <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                    data-for=\"tooltip_list_wrap\"\r\n                                                    hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                    onClick={() => this.openModal()}\r\n                                                >\r\n                                                    <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} />\r\n                                                </Button>\r\n                                                <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                    onClick={() => this.reloadData()}\r\n                                                    data-for=\"tooltip_list_wrap\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                    <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                </Button>\r\n                                            </ProductList>\r\n                                        }\r\n\r\n                                    />\r\n                                </div>\r\n                                <div>                                    \r\n                                    <TransactionListMaster\r\n                                        // paneHeight={this.state.parentHeight}\r\n                                        needMultiSelect={false}\r\n                                        masterList={this.props.Login.masterData &&\r\n                                            this.props.Login.masterData.sampleStorageVersion || []}\r\n                                        selectedMaster={[(this.props.Login.masterData &&\r\n                                            this.props.Login.masterData.selectedSampleStorageVersion) || []]}\r\n                                        primaryKeyField=\"nsamplestorageversioncode\"                                     \r\n                                        getMasterDetail={(selectedItem) =>\r\n                                            this.props.getSelectedSampleStorageVersion(\r\n                                                selectedItem, this.props.Login.userInfo,\r\n                                                this.props.Login.masterData\r\n                                            )\r\n                                        }\r\n                                        // inputParam={{\r\n                                        //   userInfo: this.props.Login.userInfo,\r\n                                        //   masterData: this.props.Login.masterData\r\n                                        // }}\r\n                                        mainField={\"nversionno\"}\r\n                                        mainFieldLabel={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                        selectedListName=\"selectedSampleStorageVersion\"\r\n                                        objectName=\"Version\"\r\n                                        listName=\"IDS_SAMPLESTORAGEVersion\"\r\n                                        // filterColumnData={this.props.filterTransactionList}\r\n                                        // searchListName=\"searchedData\"\r\n                                        searchRef={this.searchRef}\r\n                                        // filterParam={filterParam}\r\n\r\n                                        // showFilter={this.props.Login.showFilter}\r\n                                        // openFilter={this.openFilter}\r\n                                        // closeFilter={this.closeFilter}\r\n                                        // onFilterSubmit={this.onFilterSubmit}              \r\n                                        // needFilter={true}  \r\n                                        // hideSearch={true}            \r\n                                        hidePaging={false}\r\n                                        pageSize={[10, 20, 30]}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        skip={0}\r\n                                        take={10}\r\n                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        actionIcons={\r\n                                            [\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                    controlname: \"faPencilAlt\",\r\n                                                    objectName: \"mastertoedit\",\r\n                                                    hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\r\n                                                    onClick: this.editSampleStorageLocation,\r\n                                                    inputData: {\r\n                                                        primaryKeyName: \"nreportcode\",\r\n                                                        operation: \"update\",\r\n                                                        // masterData: this.props.Login.masterData,\r\n                                                        // userInfo: this.props.Login.userInfo,\r\n                                                        screenName: \"IDS_REPORTMASTER\",\r\n                                                        // ncontrolcode: editMasterId,\r\n                                                        // filterReportType:this.props.Login.masterData.SelectedFilterReportType\r\n                                                    },\r\n\r\n                                                },\r\n                                                {\r\n                                                    title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                    controlname: \"faTrashAlt\",\r\n                                                    objectName: \"mastertodelete\",\r\n                                                    hidden: false, // this.state.userRoleControlRights.indexOf(deleteMasterId) === -1,\r\n                                                    onClick: () => ConfirmMessage.confirm(\r\n                                                        \"deleteMessage\",\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DELETECONFIRMMSG\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                        () => this.onDeleteSampleStorageLocation()\r\n                                                    ),\r\n                                                    inputData: {\r\n                                                        // primaryKeyName: \"nreportcode\",\r\n                                                        // operation: \"delete\",\r\n                                                        // masterData: this.props.Login.masterData,\r\n                                                        // userInfo: this.props.Login.userInfo,\r\n                                                        // screenName: \"IDS_REPORTMASTER\",\r\n                                                        // listName: \"reportmaster\",\r\n                                                        // ncontrolCode: deleteMasterId, methodUrl: \"ReportMaster\"\r\n                                                    }\r\n                                                },\r\n\r\n                                            ]\r\n                                        }\r\n\r\n                                    />\r\n                                </div>\r\n                            </Splitter>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.length > 0 && this.props.Login.masterData.selectedSampleStorageLocation ?\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedSampleStorageLocation.ssamplestoragelocationname}</Card.Title>\r\n                                            <ContentPanel className=\"d-flex product-category\">\r\n                                                <Col md='6'>\r\n                                                    <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                        <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                                                        <ProductList className=\"d-inline dropdown badget_menu\">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                // hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                onClick={(e) => this.props.editSampleStorageLocation(this.props.Login.masterData.selectedSampleStorageLocation, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} className=\"ActionIconColor\" />\r\n\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                // hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.confirmDelete(deleteId)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Nav.Link>\r\n\r\n                                                        </ProductList>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </ContentPanel>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <TreeViewEditable\r\n                                                id=\"samplestoragelocation\"\r\n                                                name=\"samplestoragelocation\"\r\n                                                // label=\"Sample Storage Location\"\r\n                                                data={this.state.treeDataView}\r\n                                                expandIcons={true}\r\n                                                item={this.itemRenderView}\r\n                                                onExpandChange={this.onExpandChangeView}\r\n                                                onItemClick={this.onItemClickView}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                    : \"\"}\r\n\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row> */}\r\n                {/* </ListWrapper> */}\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATION\" })}\r\n                        onSaveClick={this.onSaveClick}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            this.props.Login.loadTreeProperties ? (\r\n                                <AddTreeProperties\r\n                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) : this.state.treeData ? (\r\n                                <AddTreeview\r\n                                    treeData={this.state.treeData}\r\n                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    itemRender={this.itemRender}\r\n                                    onExpandChange={this.onExpandChange}\r\n                                    onItemClick={this.onItemClick}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getSelectedSampleStorageLocation, openPropertyModal, editSampleStorageLocation\r\n})(injectIntl(SampleStorageLocation));"]},"metadata":{},"sourceType":"module"}