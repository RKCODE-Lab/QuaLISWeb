{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\confirm-alert\\\\IdleTimeOutModal.jsx\";\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { AtHeader, ProfileImage } from '../header/header.styles';\nimport { Modal, Button, Row, Col, Image } from \"react-bootstrap\";\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { intl } from '../../components/App';\nimport { ModalInner } from '../App.styles';\nimport FormInput from '../form-input/form-input.component';\nimport { Media } from 'react-bootstrap';\nimport Countdown from 'react-countdown';\nimport { createImageFromInitials } from '../header/headerutils';\nimport { Form } from 'react-bootstrap';\n\nconst IdleTimeOutModal = props => {\n  const {\n    settings,\n    userImagePath,\n    profileColor\n  } = props.Login;\n  const {\n    susername,\n    suserrolename\n  } = props.Login.userInfo; // const Completionist = () => <span>You are good to go!</span>;\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.showIdleModal,\n    dialogClassName: \"freakerstop\",\n    backdropClassName: \"idle-timer-backdrop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImage, {\n    style: {\n      position: 'absolute',\n      left: '70px',\n      top: '19px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, settings && settings[5] && userImagePath && userImagePath !== \"\" ? /*#__PURE__*/React.createElement(Image, {\n    src: settings[5] + userImagePath,\n    alt: \"avatar\",\n    className: \"rounded-circle mr-2\",\n    width: \"40\",\n    height: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Image, {\n    className: \"rounded-circle mr-2\",\n    src: createImageFromInitials(70, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 114\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    bsPrefix: \"idleprofile col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AtHeader, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    bsPrefix: \"product-title-sub flex-grow-1\",\n    style: {\n      marginLeft: \"9rem\",\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Media.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-name1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 41\n    }\n  }, susername), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-role1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  }, suserrolename)))), /*#__PURE__*/React.createElement(Form, {\n    ref: props.passwordref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginLeft: \"8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    label: intl.formatMessage({\n      id: \"IDS_PASSWORD\"\n    }),\n    type: \"password\",\n    required: true,\n    isMandatory: \"*\",\n    placeholder: intl.formatMessage({\n      id: \"IDS_PASSWORD\"\n    }),\n    onChange: props.selectInputOnChange,\n    onKeyUp: props.enterKeyLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"moveanimation\",\n    style: {\n      'margin-left': \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_YOURSESSIONWILLTIMEOUT\"\n  }), /*#__PURE__*/React.createElement(Countdown, {\n    date: props.sessionExpired,\n    onComplete: event => props.renderer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-user btn-cancel\",\n    variant: \"\",\n    onClick: event => props.handleLogout(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSignOutAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"logout\",\n    defaultMessage: intl.formatMessage({\n      id: \"IDS_LOGOUT\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-user btn-primary-blue\",\n    variant: \"\",\n    onClick: event => props.handleLogin(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"login\",\n    defaultMessage: intl.formatMessage({\n      id: \"IDS_LOGIN\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(IdleTimeOutModal);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/components/confirm-alert/IdleTimeOutModal.jsx"],"names":["faSignOutAlt","FontAwesomeIcon","React","AtHeader","ProfileImage","Modal","Button","Row","Col","Image","FormattedMessage","injectIntl","intl","ModalInner","FormInput","Media","Countdown","createImageFromInitials","Form","IdleTimeOutModal","props","settings","userImagePath","profileColor","Login","susername","suserrolename","userInfo","showIdleModal","position","left","top","charAt","toUpperCase","marginLeft","marginTop","passwordref","formatMessage","id","selectInputOnChange","enterKeyLogin","sessionExpired","event","renderer","handleLogout","handleLogin"],"mappings":"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","sourcesContent":["import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { AtHeader, ProfileImage } from '../header/header.styles';\r\nimport { Modal, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { intl } from '../../components/App';\r\nimport { ModalInner } from '../App.styles';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { Media } from 'react-bootstrap';\r\nimport Countdown from 'react-countdown';\r\nimport { createImageFromInitials } from '../header/headerutils';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst IdleTimeOutModal = (props) => {\r\n\r\n    const { settings, userImagePath, profileColor } = props.Login\r\n    const { susername, suserrolename } = props.Login.userInfo;\r\n\r\n    // const Completionist = () => <span>You are good to go!</span>;\r\n\r\n    return (\r\n        <Modal show={props.showIdleModal} dialogClassName=\"freakerstop\" backdropClassName=\"idle-timer-backdrop\">\r\n            <Modal.Body>\r\n                <ModalInner>\r\n                    <Row>\r\n                        <Col md=\"6\" style={{ position: 'relative' }}>\r\n                            <ProfileImage style={{ position: 'absolute', left: '70px', top: '19px' }}>\r\n                                {settings && settings[5] && userImagePath && userImagePath !== \"\" ?\r\n                                    <Image src={settings[5] + userImagePath}\r\n                                        alt=\"avatar\" className=\"rounded-circle mr-2\" width=\"40\" height=\"40\" /> : <Image className=\"rounded-circle mr-2\"\r\n                                            src={createImageFromInitials(70, susername ? susername.charAt(0).toUpperCase() : \"\", profileColor)}\r\n                                    />}\r\n                            </ProfileImage>\r\n                        </Col>\r\n                        <Col bsPrefix=\"idleprofile col-md-8\">\r\n                            <AtHeader className=\"mb-3\">\r\n                                <Media bsPrefix=\"product-title-sub flex-grow-1\" style={{ marginLeft: \"9rem\", marginTop: \"2rem\" }}>\r\n                                    <Media.Body>\r\n                                        <span className=\"user-name1\">{susername}</span>\r\n                                        <span className=\"user-role1\">{suserrolename}</span>\r\n                                    </Media.Body>\r\n                                </Media>\r\n                            </AtHeader>\r\n                            <Form ref={props.passwordref}>\r\n                                <Row style={{ marginLeft: \"8rem\" }}>\r\n                                    <Col md=\"12\">\r\n                                        <FormInput\r\n                                            name=\"password\"\r\n                                            label={intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                                            type=\"password\"\r\n                                            required={true}\r\n                                            isMandatory={\"*\"}\r\n                                            placeholder={intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                                            onChange={props.selectInputOnChange}\r\n                                            onKeyUp={props.enterKeyLogin}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <React.Fragment>\r\n                        <div className=\"moveanimation\" style={{ 'margin-left': \"2rem\" }}>\r\n                            <React.Fragment>\r\n                                {props.intl.formatMessage({ id: \"IDS_YOURSESSIONWILLTIMEOUT\" })}\r\n                                <Countdown date={props.sessionExpired}\r\n                                    onComplete={(event) => props.renderer(event)} />\r\n                            </React.Fragment>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                </ModalInner>\r\n                <div className=\"d-flex justify-content-end mt-2\">\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={(event) => props.handleLogout(event)}>\r\n                        <FontAwesomeIcon icon={faSignOutAlt} /> { }\r\n                        <FormattedMessage id='logout' defaultMessage={intl.formatMessage({ id: \"IDS_LOGOUT\" })} />\r\n                    </Button>\r\n                    <Button className=\"btn-user btn-primary-blue\" variant=\"\" onClick={(event) => props.handleLogin(event)}>\r\n                        {/* <FormattedMessage id='login' defaultMessage='Login' /> */}\r\n                        <FormattedMessage id='login' defaultMessage={intl.formatMessage({ id: \"IDS_LOGIN\" })} />\r\n                    </Button>\r\n                </div>\r\n\r\n            </Modal.Body>\r\n            {/* </Form> */}\r\n        </Modal >\r\n    )\r\n}\r\nexport default injectIntl(IdleTimeOutModal);"]},"metadata":{},"sourceType":"module"}