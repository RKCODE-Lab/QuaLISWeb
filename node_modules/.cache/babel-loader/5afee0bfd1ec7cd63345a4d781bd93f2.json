{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormInput from'../../components/form-input/form-input.component';import{callService,crudMaster,openFTPConfigModal,fetchFTPConfigByID,updateStore,validateEsignCredential}from'../../actions';import{toast}from'react-toastify';import{Row,Col}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import{ListWrapper}from'../../components/client-group.styles';import{showEsign,getControlMap}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';import{transactionStatus}from'../../components/Enumeration';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var FTPConfig=/*#__PURE__*/function(_React$Component){_inherits(FTPConfig,_React$Component);var _super=_createSuper(FTPConfig);function FTPConfig(props){var _this;_classCallCheck(this,FTPConfig);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',classUrl:_this.props.Login.inputParam.classUrl,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,optionsChecklistComponent:[],optionsQBCategory:[]}};_this.props.updateStore(updateInfo);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nftpno;dataState=_this.state.dataState;inputData[\"ftpconfig\"]={\"nftpno\":_this.state.selectedRecord.nftpno,\"susername\":_this.state.selectedRecord.susername,\"spassword\":_this.state.selectedRecord.spassword,\"nsitecode\":_this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\n\"shost\":_this.state.selectedRecord.shost,\"nportno\":_this.state.selectedRecord.nportno,\"nsslrequired\":_this.state.selectedRecord.nsslrequired,\"nchecksumrequired\":_this.state.selectedRecord.nchecksumrequired,\"ndefaultstatus\":_this.state.selectedRecord.ndefaultstatus,\"sphysicalpath\":_this.state.selectedRecord.sphysicalpath};}else{//add               \ninputData[\"ftpconfig\"]={\"susername\":_this.state.selectedRecord.susername,\"spassword\":_this.state.selectedRecord.spassword,\"nsitecode\":_this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\n\"shost\":_this.state.selectedRecord.shost,\"nportno\":_this.state.selectedRecord.nportno,\"nsslrequired\":_this.state.selectedRecord.nsslrequired,\"nchecksumrequired\":_this.state.selectedRecord.nchecksumrequired,\"ndefaultstatus\":_this.state.selectedRecord.ndefaultstatus,\"sphysicalpath\":_this.state.selectedRecord.sphysicalpath};}//   inputData[\"ftpconfig\"][\"sphysicalpath\"] =this.state.selectedRecord.sphysicalpath+\"\\\\\";\nvar inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:\"\",inputData:inputData,operation:_this.props.Login.operation,formRef:formRef,saveType:saveType,dataState:dataState,selectedId:selectedId};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:\"\",inputData:{\"ftpconfig\":deleteParam.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation,dataState:_this.state.dataState};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName,optionsQBCategory:_this.props.Login.optionsQBCategory,optionsChecklistComponent:_this.props.Login.optionsChecklistComponent}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(comboData){selectedRecord['siteValue']=comboData;selectedRecord[fieldName]=comboData.value;}else{selectedRecord['siteValue']=[];selectedRecord[fieldName]=\"\";}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(FTPConfig,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";this.extractedColumnList=[{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},//{\"idsName\":\"IDS_SITE\",\"dataField\":\"ssitename\",\"width\":\"15%\"},\n{\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\",\"width\":\"200px\"},{\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"width\":\"200px\"},{\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"sdefaultstatus\",\"width\":\"200px\"}];primaryKeyField=\"nftpno\";var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddFTPConfig\")&&this.state.controlMap.get('AddFTPConfig').ncontrolcode;var editID=this.props.Login.inputParam&&this.state.controlMap.has(\"EditFTPConfig\")&&this.state.controlMap.get('EditFTPConfig').ncontrolcode;var editParam={screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'',operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editID,inputparam:this.props.Login.inputparam};var deleteParam={screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'',methodUrl:\"UserMultiRole\",operation:\"delete\"};var mandatoryFields=[{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"spassword\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.fetchFTPConfigByID,deleteRecord:this.deleteRecord,reloadData:this.reloadData,pageable:{buttonCount:4,pageSizes:true},controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,isActionRequired:true,isToolBarRequired:true,editParam:editParam,deleteParam:deleteParam,scrollable:\"scrollable\",gridHeight:\"600px\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.openFTPConfigModal(_this2.props.userInfo,addID);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:\"IDS_FTPCONFIG\",closeModal:this.closeModal,show:this.props.Login.openModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_USERNAME\"}),name:\"susername\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_USERNAME\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"susername\"]:\"\",isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),name:\"spassword\",type:\"password\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),isMandatory:true,required:true,value:this.state.selectedRecord?this.state.selectedRecord[\"spassword\"]:\"\",maxLength:100}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_HOST\"}),name:\"shost\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_HOST\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"shost\"]:\"\",isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormNumericInput,{label:this.props.intl.formatMessage({id:\"IDS_PORTNO\"}),name:\"nportno\",type:\"number\",onChange:function onChange(event){return _this2.onNumericInputOnChange(event,\"nportno\");},placeholder:this.props.intl.formatMessage({id:\"IDS_PORTNO\"}),isMandatory:true,required:true,noStyle:true,strict:true,className:\"form-control\"// max={10000000}\n,errors:\"Please provide a valid number.\"// min={0}\n,maxLength:10//maxLength={100}\n,value:this.state.selectedRecord[\"nportno\"]}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_PHYSICALPATH\"}),name:\"sphysicalpath\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_PHYSICALPATH\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"sphysicalpath\"]:\"\",isMandatory:true,required:false,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ndefaultstatus\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nsslrequired\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_SSL\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SSL\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"nsslrequired\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"nsslrequired\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nchecksumrequired\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_CHECKSUM\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_CHECKSUM\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"nchecksumrequired\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"nchecksumrequired\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return FTPConfig;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,openFTPConfigModal:openFTPConfigModal,fetchFTPConfigByID:fetchFTPConfigByID,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(FTPConfig));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/FTPConfig.jsx"],"names":["React","connect","injectIntl","DataGrid","SlideOutModal","CustomSwitch","FormInput","callService","crudMaster","openFTPConfigModal","fetchFTPConfigByID","updateStore","validateEsignCredential","toast","Row","Col","process","ListWrapper","showEsign","getControlMap","DEFAULT_RETURN","Esign","transactionStatus","FormNumericInput","mapStateToProps","state","Login","FTPConfig","props","dataStateChange","event","setState","dataResult","data","dataState","reloadData","inputParam","inputData","userinfo","userInfo","methodUrl","displayName","classUrl","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","optionsChecklistComponent","optionsQBCategory","onSaveClick","saveType","formRef","undefined","selectedId","nftpno","susername","spassword","nmastersitecode","shost","nportno","nsslrequired","nchecksumrequired","ndefaultstatus","sphysicalpath","masterData","userRoleControlRights","nformcode","ncontrolcode","screenData","deleteRecord","deleteParam","ncontrolCode","screenName","validateEsign","sreason","password","onNumericInputOnChange","value","name","onInputOnChange","target","type","checked","YES","NO","onComboChange","comboData","fieldName","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","primaryKeyField","addID","has","get","editID","editParam","inputparam","mandatoryFields","buttonCount","pageSizes","intl","formatMessage","id","previousProps","Object","values","map","item","push","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { callService, crudMaster,openFTPConfigModal,fetchFTPConfigByID ,updateStore,validateEsignCredential} from '../../actions';\r\nimport { toast } from 'react-toastify';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { ListWrapper } from '../../components/client-group.styles'\r\nimport {showEsign, getControlMap} from '../../components/CommonScript';\r\nimport {DEFAULT_RETURN} from '../../actions/LoginTypes'\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass FTPConfig extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights:[],\r\n            controlMap:new Map()\r\n        }\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    reloadData = () =>{\r\n        const inputParam = {\r\n            inputData : {userinfo: this.props.Login.userInfo},\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            userInfo: this.props.Login.userInfo\r\n            };\r\n                            \r\n        this.props.callService(inputParam);\r\n    }\r\n    \r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign){          \r\n            if (this.props.Login.operation === \"delete\"){\r\n                loadEsign = false;\r\n                openModal =  false;\r\n                selectedRecord = {};\r\n            }\r\n            else{\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else{\r\n            openModal =  false;\r\n            selectedRecord ={};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {openModal, loadEsign, selectedRecord,optionsChecklistComponent:[],optionsQBCategory:[]}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState=undefined;\r\n        let selectedId=null;\r\n        if ( this.props.Login.operation === \"update\"){\r\n            // edit\r\n            selectedId=this.state.selectedRecord.nftpno\r\n            dataState=this.state.dataState\r\n            inputData[\"ftpconfig\"] = {\r\n                \"nftpno\":this.state.selectedRecord.nftpno,\r\n                \"susername\":this.state.selectedRecord.susername,\r\n                \"spassword\":this.state.selectedRecord.spassword,\r\n                \"nsitecode\":this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\r\n                \"shost\":this.state.selectedRecord.shost,\r\n                \"nportno\":this.state.selectedRecord.nportno,\r\n                \"nsslrequired\":this.state.selectedRecord.nsslrequired,\r\n                \"nchecksumrequired\":this.state.selectedRecord.nchecksumrequired,\r\n                \"ndefaultstatus\":this.state.selectedRecord.ndefaultstatus,\r\n                \"sphysicalpath\":this.state.selectedRecord.sphysicalpath,\r\n            }   \r\n        }\r\n        else{\r\n            //add               \r\n            inputData[\"ftpconfig\"] =\r\n                {\r\n                    \"susername\":this.state.selectedRecord.susername,\r\n                    \"spassword\":this.state.selectedRecord.spassword,\r\n                    \"nsitecode\":this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\r\n                    \"shost\":this.state.selectedRecord.shost,\r\n                    \"nportno\":this.state.selectedRecord.nportno,\r\n                    \"nsslrequired\":this.state.selectedRecord.nsslrequired,\r\n                    \"nchecksumrequired\":this.state.selectedRecord.nchecksumrequired,\r\n                    \"ndefaultstatus\":this.state.selectedRecord.ndefaultstatus,\r\n                    \"sphysicalpath\":this.state.selectedRecord.sphysicalpath,\r\n            };         \r\n        }  \r\n\r\n     //   inputData[\"ftpconfig\"][\"sphysicalpath\"] =this.state.selectedRecord.sphysicalpath+\"\\\\\";\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl:this.props.Login.inputParam.classUrl,\r\n            displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:\"\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation ,\r\n            formRef,saveType,dataState,selectedId\r\n        }\r\n        const masterData = this.props.Login.masterData;  \r\n      \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData}, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n       }\r\n    }\r\n    \r\n    deleteRecord = (deleteParam) =>{\r\n        \r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:\"\",\r\n            inputData: {\"ftpconfig\" :deleteParam.selectedRecord,\"userinfo\": this.props.Login.userInfo},\r\n            operation:deleteParam.operation,\r\n            dataState:this.state.dataState    \r\n            }       \r\n            const masterData = this.props.Login.masterData;\r\n            if (\r\n                showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign:true, \r\n                            screenData:{inputParam, masterData},\r\n                            operation:deleteParam.operation,\r\n                            openModal:true,\r\n                            screenName:this.props.Login.inputParam.displayName,\r\n                            optionsQBCategory:this.props.Login.optionsQBCategory,\r\n                            optionsChecklistComponent:this.props.Login.optionsChecklistComponent\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else{\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n    }\r\n    static getDerivedStateFromProps(props, state){\r\n        \r\n        if (props.Login.masterStatus !== \"\"  && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";           \r\n        } \r\n         \r\n        if (props.Login.error !== state.error){\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }   \r\n        return null;\r\n     }\r\n     validateEsign = () =>{\r\n        const inputParam = {\r\n                                inputData: {\"userinfo\": {...this.props.Login.userInfo, \r\n                                                        sreason: this.state.selectedRecord[\"esigncomments\"] },\r\n                                             password : this.state.selectedRecord[\"esignpassword\"]\r\n                                            },\r\n                                screenData : this.props.Login.screenData\r\n                            }        \r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    render(){\r\n        let primaryKeyField = \"\";\r\n        this.extractedColumnList=[\r\n            {\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},\r\n            //{\"idsName\":\"IDS_SITE\",\"dataField\":\"ssitename\",\"width\":\"15%\"},\r\n            {\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\",\"width\":\"200px\"},\r\n            {\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"width\":\"200px\"},\r\n            {\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"sdefaultstatus\",\"width\":\"200px\"}\r\n        ];\r\n        primaryKeyField = \"nftpno\";\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddFTPConfig\")\r\n                        && this.state.controlMap.get('AddFTPConfig').ncontrolcode;\r\n        const editID = this.props.Login.inputParam && this.state.controlMap.has(\"EditFTPConfig\")\r\n                        && this.state.controlMap.get('EditFTPConfig').ncontrolcode;\r\n        const editParam={\r\n                        screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'', \r\n                        operation:\"update\", \r\n                        primaryKeyField,\r\n                        masterData:this.props.Login.masterData,\r\n                        userInfo:this.props.Login.userInfo,\r\n                        ncontrolCode:editID,\r\n                        inputparam:this.props.Login.inputparam,\r\n                    };\r\n        const deleteParam ={\r\n                            screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'',\r\n                            methodUrl:\"UserMultiRole\", \r\n                            operation:\"delete\"\r\n                        };\r\n        const mandatoryFields=[\r\n                                {\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                {\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"spassword\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                {\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                                {\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n                            ]\r\n        \r\n        return (\r\n            <>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n                        {/* <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                            <HeaderName className=\"header-primary-md\">\r\n                                {this.props.Login.inputParam&&this.props.Login.inputParam.displayName ?\r\n                                    <FormattedMessage id={this.props.Login.inputParam.displayName} /> : \"\"}\r\n                            </HeaderName>\r\n                            <Button className=\"btn btn-user btn-primary-blue\" \r\n                             hidden={this.state.userRoleControlRights.indexOf(addID) === -1}\r\n                            onClick={()=>this.props.openFTPConfigModal(this.props.userInfo,addID)} \r\n                            role=\"button\">\r\n                                <FontAwesomeIcon icon={faPlus} /> { }                          \r\n                                <FormattedMessage id=\"IDS_ADD\" defaultMessage='Add'/> \r\n                            </Button>\r\n                        </PrimaryHeader> */}\r\n                    \r\n                        {this.state.data ? \r\n                            <DataGrid\r\n                                primaryKeyField = {primaryKeyField}\r\n                                data = {this.state.data}\r\n                                dataResult = {this.state.dataResult}\r\n                                dataState = {this.state.dataState}\r\n                                dataStateChange = {this.dataStateChange}\r\n                                extractedColumnList = {this.extractedColumnList}\r\n                                fetchRecord = {this.props.fetchFTPConfigByID}\r\n                                deleteRecord = {this.deleteRecord}\r\n                                reloadData = {this.reloadData}\r\n                                pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                controlMap = {this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                isActionRequired={true}\r\n                                isToolBarRequired={true}\r\n                                editParam={editParam}\r\n                                deleteParam={deleteParam}\r\n                                scrollable={\"scrollable\"}\r\n                                gridHeight={\"600px\"}\r\n                                selectedId={this.props.Login.selectedId}\r\n                                addRecord={()=>this.props.openFTPConfigModal(this.props.userInfo,addID)}\r\n\r\n                            />\r\n                        :\"\"} \r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n            {this.props.Login.openModal?\r\n            <SlideOutModal\r\n                onSaveClick={this.onSaveClick}\r\n                operation={this.props.Login.operation}\r\n                screenName=\"IDS_FTPCONFIG\"\r\n                closeModal={this.closeModal}\r\n                show={this.props.Login.openModal}\r\n                inputParam={this.props.Login.inputParam}\r\n                esign={this.props.Login.loadEsign}\r\n                validateEsign={this.validateEsign}\r\n                selectedRecord={this.state.selectedRecord || {}}\r\n                mandatoryFields={mandatoryFields}\r\n                addComponent={this.props.Login.loadEsign ? \r\n                    <Esign  operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}                                               \r\n                            selectedRecord={this.state.selectedRecord ||{}}\r\n                            />\r\n                  :\r\n                    <Row>                                \r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id:\"IDS_USERNAME\"})}\r\n                                name={\"susername\"}\r\n                                type=\"text\"\r\n                                onChange={(event)=>this.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_USERNAME\"})}\r\n                                value ={this.state.selectedRecord ? this.state.selectedRecord[\"susername\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={ true}\r\n                                maxLength={100}\r\n                            />\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}\r\n                                name={\"spassword\"}\r\n                                type=\"password\"\r\n                                onChange={(event)=>this.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_PASSWORD\"})}\r\n                                isMandatory={true}\r\n                                required={ true}\r\n                                value ={this.state.selectedRecord ? this.state.selectedRecord[\"spassword\"] : \"\"}\r\n                                maxLength={100}\r\n                            />\r\n                        {/* <Col md={12}>/site commented/\r\n                            <FormSelectSearch\r\n                                name={\"nsitecode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id:\"IDS_SITE\"})}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_SITE\"})}\r\n                                value={this.state.selectedRecord?this.state.selectedRecord.siteValue:[]}\r\n                                options={this.props.Login.siteOptions?this.props.Login.siteOptions:[]}\r\n                                optionId=\"nsitecode\"\r\n                                optionValue=\"ssitename\"\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={false}\r\n                                isClearable={false}\r\n                                as={\"select\"}\r\n                                onChange={(event)=>this.onComboChange(event,\"nsitecode\")}\r\n                            />\r\n                        </Col> */}\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id:\"IDS_HOST\"})}\r\n                                name={\"shost\"}\r\n                                type=\"text\"\r\n                                onChange={(event)=>this.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_HOST\"})}\r\n                                value ={this.state.selectedRecord ? this.state.selectedRecord[\"shost\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={ true}\r\n                                maxLength={100}\r\n                            />\r\n                            <FormNumericInput\r\n                                label={this.props.intl.formatMessage({ id:\"IDS_PORTNO\"})}\r\n                                name={\"nportno\"}\r\n                                type=\"number\"\r\n                                onChange={(event)=>this.onNumericInputOnChange(event,\"nportno\")}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_PORTNO\"})}\r\n                                isMandatory={true}\r\n                                required={ true}\r\n                                noStyle={true}\r\n                                strict={true}\r\n                                className=\"form-control\"\r\n                               // max={10000000}\r\n                                errors=\"Please provide a valid number.\"\r\n                               // min={0}\r\n                                maxLength={10}\r\n                                //maxLength={100}\r\n                                value ={ this.state.selectedRecord[\"nportno\"] }\r\n                            />\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id:\"IDS_PHYSICALPATH\"})}\r\n                                name={\"sphysicalpath\"}\r\n                                type=\"text\"\r\n                                onChange={(event)=>this.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_PHYSICALPATH\"})}\r\n                                value ={this.state.selectedRecord ? this.state.selectedRecord[\"sphysicalpath\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={ false}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <CustomSwitch\r\n                                name={\"ndefaultstatus\"}\r\n                                type=\"switch\"\r\n                                label={ this.props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}\r\n                                placeholder={  this.props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}                            \r\n                                defaultValue ={this.state.selectedRecord ? this.state.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true :false:false }  \r\n                                isMandatory={false}                       \r\n                                required={false}\r\n                                checked={ this.state.selectedRecord ? this.state.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true :false:false}\r\n                                onChange={(event)=> this.onInputOnChange(event)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <CustomSwitch\r\n                                name={\"nsslrequired\"}\r\n                                type=\"switch\"\r\n                                label={  this.props.intl.formatMessage({ id:\"IDS_SSL\"})}\r\n                                placeholder={  this.props.intl.formatMessage({ id:\"IDS_SSL\"})}                            \r\n                                defaultValue ={ this.state.selectedRecord ? this.state.selectedRecord[\"nsslrequired\"] === transactionStatus.YES ? true :false:false }  \r\n                                isMandatory={false}                       \r\n                                required={false}\r\n                                checked={  this.state.selectedRecord ?this.state.selectedRecord[\"nsslrequired\"] === transactionStatus.YES ? true :false:false}\r\n                                onChange={(event)=> this.onInputOnChange(event)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <CustomSwitch\r\n                                name={\"nchecksumrequired\"}\r\n                                type=\"switch\"\r\n                                label={  this.props.intl.formatMessage({ id:\"IDS_CHECKSUM\"})}\r\n                                placeholder={  this.props.intl.formatMessage({ id:\"IDS_CHECKSUM\"})}                            \r\n                                defaultValue ={  this.state.selectedRecord ?this.state.selectedRecord[\"nchecksumrequired\"] === transactionStatus.YES ? true :false:false }  \r\n                                isMandatory={false}                       \r\n                                required={false}\r\n                                checked={  this.state.selectedRecord ? this.state.selectedRecord[\"nchecksumrequired\"] === transactionStatus.YES ? true :false:false}\r\n                                onChange={(event)=> this.onInputOnChange(event)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                }/>:\"\"}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    componentDidUpdate(previousProps){\r\n                  \r\n        if (this.props.Login.masterData !== previousProps.Login.masterData){            \r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode){\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights){\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item=>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({userRoleControlRights, controlMap, data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),});\r\n            }\r\n            else{\r\n                let {dataState}=this.state;\r\n                if(this.props.Login.dataState===undefined){\r\n                    dataState={skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                }  \r\n                this.setState({data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n         }\r\n         if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord ){    \r\n            this.setState({selectedRecord:this.props.Login.selectedRecord});\r\n         }       \r\n    }\r\n    componentWillUnmount(){\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                 masterData :[], inputParam:undefined, operation:null,modalName:undefined\r\n                }\r\n            }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onInputOnChange=(event)=>  {\r\n        \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox')\r\n        {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else{\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({selectedRecord});\r\n        \r\n    }\r\n    onComboChange=(comboData,fieldName)=>  {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if(comboData){        \r\n            selectedRecord['siteValue']=comboData\r\n            selectedRecord[fieldName] = comboData.value;\r\n        }else{\r\n            selectedRecord['siteValue']=[]\r\n            selectedRecord[fieldName] = \"\";\r\n        }\r\n        this.setState({selectedRecord});    \r\n    }\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster,openFTPConfigModal,fetchFTPConfigByID ,updateStore,validateEsignCredential })(injectIntl(FTPConfig));"]},"metadata":{},"sourceType":"module"}