{"ast":null,"code":"import { cleanTextBlockFormatting } from './blockNode';\nimport { cleanMarks } from './mark';\n/**\n * A command which removes the inline formatting, class and style attributes of paragraph and heading elements in the selection.\n */\n\nexport var cleanFormatting = function (options) {\n  if (options === void 0) {\n    options = {\n      blocksInSelection: true\n    };\n  }\n\n  return function (state, dispatch) {\n    var tr = state.tr;\n    var blocksInSelection = options.blocksInSelection,\n        blockNodeType = options.blockNodeType,\n        exceptMarks = options.exceptMarks;\n    var except = (exceptMarks || [state.schema.marks.link]).filter(Boolean);\n    cleanMarks(tr, {\n      except: except\n    });\n    cleanTextBlockFormatting(tr, {\n      blocksInSelection: blocksInSelection,\n      blockNodeType: blockNodeType\n    });\n    var result = tr.docChanged;\n\n    if (result && dispatch) {\n      dispatch(tr);\n    }\n\n    return result;\n  };\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/cleanFormatting.js"],"names":["cleanTextBlockFormatting","cleanMarks","cleanFormatting","options","blocksInSelection","state","dispatch","tr","blockNodeType","exceptMarks","except","schema","marks","link","filter","Boolean","result","docChanged"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA;AACA;AACA;;AACA,OAAO,IAAIC,eAAe,GAAG,UAAUC,OAAV,EAAmB;AAC5C,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,KAAV;AAAwC;;AAClE,SAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAC9B,QAAIC,EAAE,GAAGF,KAAK,CAACE,EAAf;AACA,QAAIH,iBAAiB,GAAGD,OAAO,CAACC,iBAAhC;AAAA,QAAmDI,aAAa,GAAGL,OAAO,CAACK,aAA3E;AAAA,QAA0FC,WAAW,GAAGN,OAAO,CAACM,WAAhH;AACA,QAAIC,MAAM,GAAG,CAACD,WAAW,IAAI,CAACJ,KAAK,CAACM,MAAN,CAAaC,KAAb,CAAmBC,IAApB,CAAhB,EAA2CC,MAA3C,CAAkDC,OAAlD,CAAb;AACAd,IAAAA,UAAU,CAACM,EAAD,EAAK;AAAEG,MAAAA,MAAM,EAAEA;AAAV,KAAL,CAAV;AACAV,IAAAA,wBAAwB,CAACO,EAAD,EAAK;AAAEH,MAAAA,iBAAiB,EAAEA,iBAArB;AAAwCI,MAAAA,aAAa,EAAEA;AAAvD,KAAL,CAAxB;AACA,QAAIQ,MAAM,GAAGT,EAAE,CAACU,UAAhB;;AACA,QAAID,MAAM,IAAIV,QAAd,EAAwB;AACpBA,MAAAA,QAAQ,CAACC,EAAD,CAAR;AACH;;AACD,WAAOS,MAAP;AACH,GAXD;AAYH,CAdM","sourcesContent":["import { cleanTextBlockFormatting } from './blockNode';\nimport { cleanMarks } from './mark';\n/**\n * A command which removes the inline formatting, class and style attributes of paragraph and heading elements in the selection.\n */\nexport var cleanFormatting = function (options) {\n    if (options === void 0) { options = { blocksInSelection: true }; }\n    return function (state, dispatch) {\n        var tr = state.tr;\n        var blocksInSelection = options.blocksInSelection, blockNodeType = options.blockNodeType, exceptMarks = options.exceptMarks;\n        var except = (exceptMarks || [state.schema.marks.link]).filter(Boolean);\n        cleanMarks(tr, { except: except });\n        cleanTextBlockFormatting(tr, { blocksInSelection: blocksInSelection, blockNodeType: blockNodeType });\n        var result = tr.docChanged;\n        if (result && dispatch) {\n            dispatch(tr);\n        }\n        return result;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}