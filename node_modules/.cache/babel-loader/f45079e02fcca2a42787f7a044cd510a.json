{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{faPlay,faAddressBook,faCheckCircle,faEye,faPencilRuler,faFileImport,faSync,faBorderAll,faLink,faComment,faComments,faPaperclip,faCommentDots,faChevronRight,faMicroscope,faFlask,faHistory,faBookMedical,faNotesMedical}from'@fortawesome/free-solid-svg-icons';import{Card,Col,Row,Nav,Button,Modal}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{connect}from'react-redux';import Axios from\"axios\";import{ListWrapper}from'../../components/client-group.styles';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faFileInvoice}from'@fortawesome/free-solid-svg-icons';import SplitterLayout from\"react-splitter-layout\";import{ContentPanel}from'../../components/App.styles';import PortalModal from'../../PortalModal';import Iframe from'react-iframe';import ReactTooltip from'react-tooltip';import{crudMaster,updateStore,getsubSampleREDetail,getTestREDetail,getTestChildTabREDetail,resultGetModule,fetchMaterialRecord,completeTest,testMethodSourceEdit,addREInstrument,addREMaterial,deleteInstrumentRecord,fetchInstrumentRecord,deleteTaskRecord,fetchTaskRecord,parameterRecord,checkListRecord,onSaveCheckList,defaultTest,getFormula,getRERegistrationType,getRERegistrationSubType,getREApprovalConfigVersion,getResultEntryDetails,calculateFormula,getREFilterStatus,getREFilterTestData,getREJobStatus,viewAttachment,validateEsignCredentialComplete,getAttachmentCombo,deleteAttachment,getCommentsCombo,updateTestMethodSource,resultImportFile,filterTransactionList,validateEsignCredential,getSampleChildTabREDetail,updateParameterComments,getREMaterialCategoryByType,getREMaterialByCategory,getREMaterialInvertoryByMaterial,previewSampleReport,getMeanCalculationTestParameter,getAvailableMaterialQuantity,testStart,getSubSampleChildTabDetail,getSampleChildTabDetail,getREFilterTemplate,getAverageResult,getREMaterialComboGet,getPredefinedData,getELNTestValidation//,deleteResultUsedMaterial\n,getConfigurationFilter,getTestBasedBatchWorklist,addREAdhocParamter,createAdhocParamter// ,getPredefinedData,getConfigurationFilter,getTestBasedBatchWorklist//,deleteResultUsedMaterial\n,enforceResult//,deleteResultUsedMaterial\n,ResultEntryViewPatientDetails,resultEntryGetParameter,resultEntryGetSpec,resultEntryGetComponent}from'../../actions';//import { sortData, create_UUID, getControlMap, listDataFromDynamicArray, formatInputDate, validateTwoDigitDate, showEsign, constructOptionList, deleteAttachmentDropZone,CF_encryptionData } from '../../components/CommonScript';\nimport{sortData,create_UUID,getControlMap,listDataFromDynamicArray,formatInputDate,validateTwoDigitDate,showEsign,constructOptionList,deleteAttachmentDropZone,Lims_JSON_stringify,CF_encryptionData,onSaveMandatoryValidation}from'../../components/CommonScript';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{SampleType,parameterType,grade,transactionStatus,RegistrationType,RegistrationSubType,FORMULAFIELDTYPE,designProperties,SideBarSeqno,SideBarTabIndex}from'../../components/Enumeration';import{ProductList}from'../product/product.styled';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import ResultEntryResultsTab from'./ResultEntryResultsTab';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import ResultEntryFilter from'./ResultEntryFilter';import ResultEntryInstrumentForm from'./ResultEntryInstrumentForm';import ResultEntryForm from'./ResultEntryForm';import ResultEntryParameterForm from'./ResultEntryParameterForm';import TestEditForm from'./TestEditForm';import SampleInfoView from'../approval/SampleInfoView';import SampleInfoGrid from'../approval/SampleInfoGrid';import ApprovalInstrumentTab from'../approval/ApprovalInstrumentTab';import ResultEntryTaskTab from'./ResultEntryTaskTab';import ResultEntryTaskForm from'./ResultEntryTaskForm';import ResultEntryParamCommetsForm from'./ResultEntryParamCommetsForm';import TemplateForm from'../checklist/checklist/TemplateForm';import{templateChangeHandler}from'../checklist/checklist/checklistMethods';import{numberConversion,numericGrade}from'./ResultEntryValidation';import PerfectScrollbar from'react-perfect-scrollbar';import ResultEntryFormulaForm from'./ResultEntryFormulaForm';import SampleApprovalHistory from'../approval/SampleApprovalHistory';import ResultChangeHistoryTab from'../approval/ResultChangeHistoryTab';import Attachments from'../attachmentscomments/attachments/Attachments';import Comments from'../attachmentscomments/comments/Comments';import{onSaveSampleAttachment,onSaveTestAttachment,onSaveSubSampleAttachment}from'../attachmentscomments/attachments/AttachmentFunctions';import{onSaveSampleComments,onSaveTestComments,onSaveSubSampleComments}from'../attachmentscomments/comments/CommentFunctions';import ResultEntryImport from'./ResultEntryImport';import{getSameRecordFromTwoArrays,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';// import ReactTooltip from 'react-tooltip';\nimport ResultEntryMean from'./ResultEntryMean';import ScrollBar from'react-perfect-scrollbar';import ResultEntryMaterialForm from'./ResultEntryMaterialForm';import AddAdhocParameter from'./AddAdhocParameter';import ResultUsedMaterial from'./UsedMaterial';import{FontIconWrap}from'../../components/data-grid/data-grid.styles';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';import ModalShow from'../../components/ModalShow';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';import ResultEntryPredefinedComments from'./ResultEntryPredefinedComments';import ResultEntryEnforceResult from'./ResultEntryEnforceResult';import SpecificationInfo from'../testgroup/SpecificationInfo';import fullviewExpand from\"../../assets/image/fullview-expand.svg\";import fullviewCollapse from\"../../assets/image/fullview-collapse.svg\";import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var ResultEntry=/*#__PURE__*/function(_Component){_inherits(ResultEntry,_Component);var _super=_createSuper(ResultEntry);function ResultEntry(props){var _this;_classCallCheck(this,ResultEntry);_this=_super.call(this,props);_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.props.Login.masterData.selectedImportFile;selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{selectedImportFile:selectedRecord})}};_this.props.updateStore(updateInfo);};_this.deleteAttachmentParameterFile=function(event,file,fieldName,index){var selectedRecordParameter=_this.state.selectedRecord.ResultParameter[index];selectedRecordParameter[fieldName]=deleteAttachmentDropZone(selectedRecordParameter[fieldName],file);var selectedRecord=_this.state.selectedRecord;selectedRecord['ResultParameter'][index]['editable']=true;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData: { ...this.props.Login.masterData, ResultParameter.editable\n//         //selectedImportFile: selectedRecord \n//     } }\n// }\n// this.props.updateStore(updateInfo);\n_this.setState({selectedRecord:selectedRecord//fileToDelete:file.name \n});};_this.closeModalShow=function(){var showAlertGrid=_this.props.Login.showAlertGrid;var selectedRecord=_this.props.Login.selectedRecord;var masterData=_this.props.Login.masterData&&_this.props.Login.masterData;masterData['RESelectedTest'].forEach(function(object){object['expanded']&&delete object['expanded'];});selectedRecord['ntestgrouptestpredefsubcode']&&delete selectedRecord['ntestgrouptestpredefsubcode'];showAlertGrid=false;var updateInfo={typeName:DEFAULT_RETURN,data:{showAlertGrid:showAlertGrid,masterData:masterData,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onTabChangeRulesEngine=function(tabProps){var masterData=_this.props.Login.masterData&&_this.props.Login.masterData;masterData['RESelectedTest'].forEach(function(object){object['expanded']&&delete object['expanded'];});masterData['activeTabName']=tabProps.activeTabName;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.handleExpandChange=function(mapobject){var childListMap=new Map();var keylst=Object.keys(mapobject);keylst.map(function(key){childListMap.set(parseInt(key),Object.values(mapobject[key]));});_this.setState({childListMap:childListMap});};_this.availableTestFilter=function(data){var lstntransactionsamplecode=[];if(_this.props.Login.RegistrationTestAlert){var keylst=Object.keys(_this.props.Login.RegistrationTestAlert);// keylst.map(x=>{ \n//    this.props.Login.RegistrationTestAlert[x].map(y=> lstntransactionsamplecode.push(y['ntransactionsamplecode'])) \n// }); \n// let boolean1 = keylst.includes(data.ntestgrouptestcode.toString())\nvar boolean1=keylst.includes(data.ntransactiontestcode.toString());//  let boolean2 = lstntransactionsamplecode.includes(data.ntransactionsamplecode)\nif(boolean1//&&boolean2\n){return data;}}};_this.unavailableTestFilter=function(data){var lstntransactionsamplecode=[];if(_this.props.Login.NewTestGroupTestAlert){var keylst=Object.keys(_this.props.Login.NewTestGroupTestAlert);// keylst.map(x=>{ \n//     this.props.Login.NewTestGroupTestAlert[x].map(y=> lstntransactionsamplecode.push(y['ntransactionsamplecode'])) \n// });\n// let boolean1 = keylst.includes(data.ntestgrouptestcode.toString())\nvar boolean1=keylst.includes(data.ntransactiontestcode.toString());//  let boolean2 = lstntransactionsamplecode.includes(data.ntransactionsamplecode)\nif(boolean1//&&boolean2\n){return data;}}};_this.dataStateAvailabletestAlert=function(event){_this.setState({dataStateavailabletest:event.dataState});};_this.dataStateUnAvailabletestAlert=function(event){_this.setState({dataStateunavailabletest:event.dataState});};_this.tabAlertRulesEngine=function(){var tabMap=new Map();{_this.props.Login.RegistrationTestAlert&&_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.filter(_this.availableTestFilter).length>0&&//this.props.Login.RegistrationTestAlert.length>0 &&\ntabMap.set(\"IDS_AVAILABLETESTUNDERSAMPLE\",/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntransactiontestcode\",dataResult:process(sortData(_this.props.Login.masterData.RESelectedTest.filter(_this.availableTestFilter),'descending','ntransactiontestcode')||[],_this.state.dataStateavailabletest?_this.state.dataStateavailabletest:{skip:0,take:10}),dataState:_this.state.dataStateavailabletest?_this.state.dataStateavailabletest:{skip:0,take:10},dataStateChange:_this.dataStateAvailabletestAlert,extractedColumnList:[{\"idsName\":\"IDS_RULEAPPLIEDTESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"}],controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,gridHeight:'350px',gridWidth:'700px',expandField:\"expanded\",handleExpandChange:function handleExpandChange(){_this.handleExpandChange(_this.props.Login.RegistrationTestAlert);},hasChild:true,childMappingField:'ntransactiontestcode',childColumnList:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample?[{\"idsName\":\"IDS_RULEDEPENDENTTESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"samplearno\",\"width\":\"200px\"},{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"}]:[{\"idsName\":\"IDS_RULEDEPENDENTTESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"}],childList:_this.state.childListMap,activeTabName:\"IDS_AVAILABLETESTUNDERSAMPLE\"}));_this.props.Login.NewTestGroupTestAlert&&_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.filter(_this.unavailableTestFilter).length>0&&//this.props.Login.NewTestGroupTestAlert.length>0  &&\ntabMap.set(\"IDS_TESTSNOTAVAILABLEUNDERSAMPLE\",/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntransactiontestcode\",dataResult:process(sortData(_this.props.Login.masterData.RESelectedTest.filter(_this.unavailableTestFilter),'descending','ntransactiontestcode')||[],_this.state.dataStateunavailabletest?_this.state.dataStateunavailabletest:{skip:0,take:10}),dataState:_this.state.dataStateunavailabletest?_this.state.dataStateunavailabletest:{skip:0,take:10},dataStateChange:_this.dataStateUnAvailabletestAlert,extractedColumnList:[{\"idsName\":\"IDS_RULEAPPLIEDTESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"}],controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,expandField:\"expanded\",handleExpandChange:function handleExpandChange(){_this.handleExpandChange(_this.props.Login.NewTestGroupTestAlert);},gridHeight:'350px',gridWidth:'700px',hasChild:true,childMappingField:'ntransactiontestcode',childColumnList:[{\"idsName\":\"IDS_RULEDEPENDENTTESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"}],childList:_this.state.childListMap,activeTabName:\"IDS_TESTSNOTAVAILABLEUNDERSAMPLE\"}));}return tabMap;};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var openTemplateModal=_this.props.Login.openTemplateModal;var selectedRecord=_this.props.Login.selectedRecord;//let additionInfo=this.props.Login.additionInfo ||{};\nvar screenName=_this.props.Login.screenName;var operation=_this.props.Login.operation;var loadFile=_this.props.Login.loadFile;var selectedId=_this.props.Login.selectedId;var updateInfo={};//additionInfo={...selectedRecord};\nif(screenName===\"IDS_RESULTFORMULA\"){screenName=\"IDS_RESULTENTRY\";operation=\"update\";var showValidate=!_this.props.Login.showValidate;updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,operation:operation,showValidate:showValidate,validateFormulaMandyFields:[]}};}else{if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"complete\"||_this.props.Login.operation===\"default\"||_this.props.Login.operation===\"deleteTask\"||_this.props.Login.operation===\"deleteInstrument\"||_this.props.Login.operation===\"deleteMaterial\"){loadEsign=false;openModal=false;selectedRecord={};}else if(_this.props.Login.operation===\"updatechecklist\"){loadEsign=false;openModal=false;}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;openTemplateModal=false;selectedRecord={};loadFile=false;selectedId=null;}updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,openTemplateModal:openTemplateModal,screenName:screenName,selectedRecord:selectedRecord,loadFile:loadFile,selectedId:selectedId}};}_this.props.updateStore(updateInfo);};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={realDesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMapping,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realDesignTemplateMappingList:_this.props.Login.masterData.realDesignTemplateMappingList,realFilterStatusList:_this.props.Login.masterData.realFilterStatusList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realTestvaluesList:_this.props.Login.masterData.realTestvaluesList,nflag:2,fromdate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntodate:dateObj.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),//ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\ntranscode:_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={realDesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMapping,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realDesignTemplateMappingList:_this.props.Login.masterData.realDesignTemplateMappingList,realFilterStatusList:_this.props.Login.masterData.realFilterStatusList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realTestvaluesList:_this.props.Login.masterData.realTestvaluesList,nflag:2,fromdate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),//ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\ntranscode:_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedRecord&&_this.state.selectedRecord[\"fromDate\"]||_this.props.Login.masterData.fromDate,_this.state.selectedRecord&&_this.state.selectedRecord[\"toDate\"]||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={realDesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMapping,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realDesignTemplateMappingList:_this.props.Login.masterData.realDesignTemplateMappingList,realFilterStatusList:_this.props.Login.masterData.realFilterStatusList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realTestvaluesList:_this.props.Login.masterData.realTestvaluesList,nflag:2,nsampletypecode:parseInt(event.value),fromdate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntodate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData};_this.props.getRERegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedRecord&&_this.state.selectedRecord[\"fromDate\"]||_this.props.Login.masterData.fromDate,_this.state.selectedRecord&&_this.state.selectedRecord[\"toDate\"]||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realDesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMapping,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realDesignTemplateMappingList:_this.props.Login.masterData.realDesignTemplateMappingList,realFilterStatusList:_this.props.Login.masterData.realFilterStatusList,realRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realTestvaluesList:_this.props.Login.masterData.realTestvaluesList,nflag:3,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromdate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntodate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userinfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,masterData:_this.props.Login.masterData};_this.props.getRERegistrationSubType(inputData);}else if(fieldname===\"nregsubtypecode\"){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realDesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMapping,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realDesignTemplateMappingList:_this.props.Login.masterData.realDesignTemplateMappingList,realFilterStatusList:_this.props.Login.masterData.realFilterStatusList,realRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realTestvaluesList:_this.props.Login.masterData.realTestvaluesList,nflag:4,fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:event.value,userinfo:_this.props.Login.userInfo,defaultRegistrationSubType:event.item,masterData:_this.props.Login.masterData};_this.props.getREApprovalConfigVersion(inputData);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData=_defineProperty({nflag:3,fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,//ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\nntranscode:_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample||false,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item},\"defaultRegistrationSubType\",_this.props.Login.masterData.defaultRegistrationSubType);//this.props.getREFilterTestData(inputParamData)\n_this.props.getREFilterTemplate(inputParamData);}else if(fieldname===\"version\"){var _obj4=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:4,fromdate:_obj4.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj4.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:event.value,userinfo:_this.props.Login.userInfo,defaultApprovalConfigVersion:event.item,masterData:_this.props.Login.masterData,//ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\nntranscode:_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:-1,defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType};_this.props.getREJobStatus(inputData);}else if(fieldname===\"jobstatus\"){var _obj5=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,fromdate:_obj5.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj5.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData};_this.props.getREFilterStatus(inputData);}else if(fieldname===\"filter\"){var _obj6=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,fromdate:_obj6.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj6.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:1,// parseInt(this.props.Login.masterData.defaultjobstatus.njobstatuscode),\nntranscode:event.value===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(event.value),userinfo:_this.props.Login.userInfo,defaultFilterStatus:event.item,masterData:_this.props.Login.masterData,DesignTemplateMappingValue:_this.props.Login.masterData.DesignTemplateMappingValue,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:-1,defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType&&_this.props.Login.masterData.defaultRegistrationSubType};_this.props.getREFilterTestData(inputData);}else if(fieldname===\"test\"){var defaultTestvalues=event.item;_this.props.Login.masterData.defaultTestvalues=defaultTestvalues;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData: { ...this.props.Login.masterData } }\n// }\n// this.props.updateStore(updateInfo);\ninputData={defaultTestvalues:defaultTestvalues,ntestcode:_this.props.Login.masterData.defaultTestvalues.ntestcode,masterData:_this.props.Login.masterData,defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),userinfo:_this.props.Login.userInfo,napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode)};_this.props.getConfigurationFilter(inputData);}else if(fieldname===\"nconfigfiltercode\"){var defaultConfigurationFilterValue=event.item;_this.props.Login.masterData.defaultConfigurationFilterValue=defaultConfigurationFilterValue;_this.props.Login.masterData.realdefaultConfigurationFilterValue=defaultConfigurationFilterValue;inputData={defaultConfigurationFilterValue:defaultConfigurationFilterValue,nconfigfiltercode:parseInt(_this.props.Login.masterData.defaultConfigurationFilterValue.nconfigfiltercode),ntestcode:_this.props.Login.masterData.defaultTestvalues.ntestcode,masterData:_this.props.Login.masterData,defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,//ntranscode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\nntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode)};_this.props.getTestBasedBatchWorklist(inputData);}else if(fieldname===\"nworklistcode\"){var defaultWorklistvalue=event.item;_this.props.Login.masterData.defaultWorklistvalue=defaultWorklistvalue;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread({},_this.props.Login.masterData)}};_this.props.updateStore(updateInfo);}else{if(fieldname===\"nbatchmastercode\"){var defaultBatchvalue=event.item;_this.props.Login.masterData.defaultBatchvalue=defaultBatchvalue;var _updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread({},_this.props.Login.masterData)}};_this.props.updateStore(_updateInfo);}}}else{if(fieldname===\"nconfigfiltercode\"){_this.props.Login.masterData.defaultConfigurationFilterValue=[];_this.props.Login.masterData.defaultWorklistvalue=[];_this.props.Login.masterData.defaultBatchvalue=[];var _updateInfo2={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread({},_this.props.Login.masterData)}};_this.props.updateStore(_updateInfo2);}}};_this.OnDateConverstion=function(date,fieldname){var month=validateTwoDigitDate(String(date.getMonth()+1));var day=validateTwoDigitDate(String(date.getDate()));if(fieldname===\"fromDate\"){date=date.getFullYear()+'-'+month+'-'+day+\"T00:00:00\";}else{date=date.getFullYear()+'-'+month+'-'+day+\"T23:59:00\";}return date;};_this.onReload=function(){var _this$props$Login$mas=_this.props.Login.masterData,realFromDate=_this$props$Login$mas.realFromDate,realToDate=_this$props$Login$mas.realToDate,realSampleTypeValue=_this$props$Login$mas.realSampleTypeValue,realRegTypeValue=_this$props$Login$mas.realRegTypeValue,realRegSubTypeValue=_this$props$Login$mas.realRegSubTypeValue,realApproveConfigVersion=_this$props$Login$mas.realApproveConfigVersion,realFilterStatusValue=_this$props$Login$mas.realFilterStatusValue,realTestcodeValue=_this$props$Login$mas.realTestcodeValue,realWorklistCodeValue=_this$props$Login$mas.realWorklistCodeValue;//let obj = this.covertDatetoString(realFromDate, realToDate)\nvar obj=convertDateValuetoString(realFromDate,realToDate,_this.props.Login.userInfo);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:obj.fromDate,realToDate:obj.toDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApproveConfigVersion:realApproveConfigVersion,realTestcodeValue:realTestcodeValue});var inputData={nsampletypecode:realSampleTypeValue&&realSampleTypeValue.nsampletypecode||-1,nregtypecode:realRegTypeValue&&realRegTypeValue.nregtypecode||-1,nregsubtypecode:realRegSubTypeValue&&realRegSubTypeValue.nregsubtypecode||-1,napprovalversioncode:realApproveConfigVersion&&realApproveConfigVersion.napprovalconfigversioncode||-1,ntranscode:String(realFilterStatusValue?realFilterStatusValue.ntransactionstatus:-1),ntestcode:realTestcodeValue?realTestcodeValue.ntestcode:-1,ntransactiontestcode:0,njobstatuscode:_this.props.Login.masterData.defaultjobstatus&&_this.props.Login.masterData.defaultjobstatus.njobstatuscode||1,fromdate:obj.fromDate,todate:obj.toDate,userinfo:_this.props.Login.userInfo,activeTestKey:_this.props.Login.activeTestKey||\"IDS_RESULTS\",showTest:true,showSample:false,checkBoxOperation:3,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,nworlistcode:realWorklistCodeValue&&realWorklistCodeValue.nworklistcode||-1};var inpuParamData={inputData:inputData,masterData:masterData,refs:{searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef},resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.napprovalversioncode!==-1&&inputData.ntranscode!==-1&&inputData.njobstatuscode!==-1&&inputData.ntestcode!==-1){_this.props.getResultEntryDetails(inpuParamData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onDesignTemplateChange=function(event,fieldName,labelname){var masterData=_this.props.Login.masterData;masterData=_objectSpread(_objectSpread({},masterData),{},_defineProperty({},labelname,_objectSpread({},event.item)));var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.onREFilterSubmit=function(event){// let realFromDate = new Date(this.props.Login.masterData.fromDate)\n// let realToDate = new Date(this.props.Login.masterData.toDate)\nvar realFromDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.fromDate);var realToDate=rearrangeDateFormat(_this.props.Login.userInfo,_this.props.Login.masterData.toDate);var realSampleTypeValue=_this.props.Login.masterData.defaultSampleType&&_this.props.Login.masterData.defaultSampleType;var realRegTypeValue=_this.props.Login.masterData.defaultRegistrationType&&_this.props.Login.masterData.defaultRegistrationType;var realRegSubTypeValue=_this.props.Login.masterData.defaultRegistrationSubType&&_this.props.Login.masterData.defaultRegistrationSubType;var realApproveConfigVersion=_this.props.Login.masterData.defaultApprovalConfigVersion&&_this.props.Login.masterData.defaultApprovalConfigVersion;var realFilterStatusValue=_this.props.Login.masterData.defaultFilterStatus&&_this.props.Login.masterData.defaultFilterStatus;var realTestcodeValue=_this.props.Login.masterData.defaultTestvalues&&_this.props.Login.masterData.defaultTestvalues;var realWorklistCodeValue=_this.props.Login.masterData.defaultWorklistvalue&&_this.props.Login.masterData.defaultWorklistvalue;var realBatchCodeValue=_this.props.Login.masterData.defaultBatchvalue&&_this.props.Login.masterData.defaultBatchvalue;var realDesignTemplateMapping=_this.props.Login.masterData.DesignTemplateMappingValue&&_this.props.Login.masterData.DesignTemplateMappingValue;var realDesignTemplateMappingList=_this.props.Login.masterData.DesignTemplateMapping&&_this.props.Login.masterData.DesignTemplateMapping;var realApprovalConfigVersionList=_this.props.Login.masterData.ApprovalConfigVersion&&_this.props.Login.masterData.ApprovalConfigVersion;var realFilterStatusList=_this.props.Login.masterData.REFilterStatus&&_this.props.Login.masterData.REFilterStatus;var realRegistrationTypeList=_this.props.Login.masterData.RegistrationType&&_this.props.Login.masterData.RegistrationType;var realRegistrationSubTypeList=_this.props.Login.masterData.RegistrationSubType&&_this.props.Login.masterData.RegistrationSubType;// let realBatchvaluesList=this.props.Login.masterData.RegistrationType\n// let  RealWorklistvaluesList=this.props.Login.masterData.RegistrationType\nvar realConfigurationFilterValuesList=_this.props.Login.masterData.ConfigurationFilterValues&&_this.props.Login.masterData.ConfigurationFilterValues;//let obj = this.covertDatetoString(realFromDate, realToDate)\nvar obj=convertDateValuetoString(realFromDate,realToDate,_this.props.Login.userInfo);var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realFromDate:obj.fromDate,realToDate:obj.toDate,realSampleTypeValue:realSampleTypeValue,realRegTypeValue:realRegTypeValue,realRegSubTypeValue:realRegSubTypeValue,realFilterStatusValue:realFilterStatusValue,realApproveConfigVersion:realApproveConfigVersion,realTestcodeValue:realTestcodeValue,realWorklistCodeValue:realWorklistCodeValue,realBatchCodeValue:realBatchCodeValue,realDesignTemplateMapping:realDesignTemplateMapping,realDesignTemplateMappingList:realDesignTemplateMappingList,realApprovalConfigVersionList:realApprovalConfigVersionList,realFilterStatusList:realFilterStatusList,realRegistrationTypeList:realRegistrationTypeList,realRegistrationSubTypeList:realRegistrationSubTypeList,realConfigurationFilterValuesList:realConfigurationFilterValuesList});var inputData={nsampletypecode:_this.props.Login.masterData.defaultSampleType&&_this.props.Login.masterData.defaultSampleType.nsampletypecode||-1,nregtypecode:_this.props.Login.masterData.defaultRegistrationType&&_this.props.Login.masterData.defaultRegistrationType.nregtypecode||-1,nregsubtypecode:_this.props.Login.masterData.defaultRegistrationSubType&&_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode||-1,napprovalversioncode:_this.props.Login.masterData.defaultApprovalConfigVersion&&_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode||-1,ntranscode:_this.props.Login.masterData.defaultFilterStatus&&_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus===0?_this.props.Login.masterData.REFilterStatus.map(function(item){return item.ntransactionstatus;}).join(\",\"):String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),//ntranscode: String(this.props.Login.masterData.defaultFilterStatus ? this.props.Login.masterData.defaultFilterStatus.ntransactionstatus : -1),\nntestcode:_this.props.Login.masterData.defaultTestvalues?_this.props.Login.masterData.defaultTestvalues.ntestcode:-1,ntransactiontestcode:0,njobstatuscode:_this.props.Login.masterData.defaultjobstatus&&_this.props.Login.masterData.defaultjobstatus.njobstatuscode||1,fromdate:obj.fromDate,todate:obj.toDate,userinfo:_this.props.Login.userInfo,activeTestKey:_this.props.Login.activeTestKey||\"IDS_RESULTS\",showTest:true,showSample:false,nneedsubsample:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample||false,checkBoxOperation:3,ndesigntemplatemappingcode:_this.props.Login.masterData.DesignTemplateMappingValue&&_this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode||-1,nneedtemplatebasedflow:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow||false,nworlistcode:_this.props.Login.masterData.defaultWorklistvalue&&_this.props.Login.masterData.defaultWorklistvalue.nworklistcode||-1,nbatchmastercode:_this.props.Login.masterData.defaultBatchvalue&&_this.props.Login.masterData.defaultBatchvalue.nbatchmastercode||-1};var inpuParamData={inputData:inputData,masterData:masterData,refs:{searchSampleRef:_this.searchSampleRef,searchSubSampleRef:_this.searchSubSampleRef,searchTestRef:_this.searchTestRef},resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,historyDataState:_this.state.historyDataState};if(inputData.nsampletypecode!==-1&&inputData.nregtypecode!==-1&&inputData.nregsubtypecode!==-1&&inputData.napprovalversioncode!==-1&&inputData.ntranscode!==-1&&inputData.njobstatuscode!==-1&&inputData.ntestcode!==undefined){_this.props.getResultEntryDetails(inpuParamData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.onSecondaryPaneSizeChange=function(e,val){// let hGrand = this.state.grandparentheight\n// let check = e - 400;\n// if (check > 1) {\n//     hGrand = this.state.parentHeight + check\n// }\n// this.setState({\n//     paneHeight: e - val,\n//     secondPaneHeight: hGrand - e - 70,\n//     grandparentheight: hGrand\n// })\n// this.setState({\n//     paneHeight: e - val,\n//     secondPaneHeight: this.state.parentHeight - e - 70\n// })\n};_this.onComboCategoryChange=function(event,fieldname){if(event!==null){var uRL=\"\";var inputData=[];uRL='resultentrybysample/getResultUsedInstrumentCombo';if(fieldname===\"ninstrumentcatcode\"){inputData={userinfo:_this.props.Login.userInfo,nflag:2,ninstrumentcatcode:event.value,ncalibrationRequired:event.item.ncalibrationreq};}rsapi.post(uRL,inputData).then(function(response){var _objectSpread3;var TagInstrument=constructOptionList(response.data.Instrument||[],\"ninstrumentcode\",\"sinstrumentid\",undefined,undefined,undefined);var TagListInstrument=TagInstrument.get(\"OptionList\");var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{Instrument:TagListInstrument}),selectedRecord:_objectSpread(_objectSpread({},_this.props.Login.selectedRecord),{},(_objectSpread3={},_defineProperty(_objectSpread3,fieldname,event),_defineProperty(_objectSpread3,\"ninstrumentcode\",TagInstrument.get(\"DefaultValue\")?TagInstrument.get(\"DefaultValue\"):[]),_objectSpread3))}};_this.props.updateStore(updateInfo);// const selectedRecord = this.state.selectedRecord || {};\n// selectedRecord[fieldname] = event;\n// this.setState({ selectedRecord });\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};_this.testRETabDetail=function(){var testTabMap=new Map();//let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\nvar ntransactiontestcode=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";var _this$state=_this.state,testskip=_this$state.testskip,testtake=_this$state.testtake;var testList=_this.props.Login.masterData.RE_TEST||[];testList=testList.slice(testskip,testskip+testtake);var meanControlId=_this.state.controlMap.has(\"CalculateMean\")&&_this.state.controlMap.get(\"CalculateMean\").ncontrolcode;var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");testTabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(ResultEntryResultsTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.dataStateChange,fetchRecord:_this.props.parameterRecord,editpredefinedcomments:_this.editpredefinedcomments,enforceResult:_this.enforceResult,controlMap:_this.state.controlMap,parameterParam:{primaryKeyField:\"ntransactionresultcode\",masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},checkListRecord:_this.checkListRecord,checklistParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},selectedId:_this.props.Login.selectedId||null,viewFile:_this.props.viewAttachment,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_RESULTS\",getMeanTestParameter:_this.props.getMeanCalculationTestParameter,meanParam:{\"userInfo\":_this.props.Login.userInfo,ncontrolCode:meanControlId}}));testTabMap.set(\"IDS_INSTRUMENT\",/*#__PURE__*/React.createElement(ApprovalInstrumentTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedInstrument\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.instrumentDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteInstrumentRecord,fetchRecord:_this.fetchInstrumentRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_INSTRUMENT\"}));testTabMap.set(\"IDS_MATERIAL\",/*#__PURE__*/React.createElement(ResultUsedMaterial,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedMaterial\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.materialDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteMaterialRecord,fetchRecord:_this.props.fetchMaterialRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_MATERIAL\"}));testTabMap.set(\"IDS_TASK\",/*#__PURE__*/React.createElement(ResultEntryTaskTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedTask\",addResultEntryTask:_this.addResultEntryTask,controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"DeleteResultUsedTask\")&&_this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"EditResultUsedTask\")&&_this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode},dataState:_this.state.taskDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteTaskRecord,fetchRecord:_this.fetchTaskRecord//fetchRecord={this.fetchInstrumentRecord}\n,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_TASK\"}));testTabMap.set(\"IDS_TESTATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_TESTATTACHMENTS\",selectedMaster:\"RESelectedTest\",onSaveClick:_this.onAttachmentSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDATTACHEMENT\",attachments:_this.props.Login.masterData.RegistrationTestAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,addName:\"AddTestAttachment\",editName:\"EditTestAttachment\",deleteName:\"DeleteTestAttachment\",viewName:\"ViewTestAttachment\",methodUrl:\"TestAttachment\",nsubsampleneed:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,subFields:[_defineProperty({},designProperties.VALUE,\"stestsynonym\"),_defineProperty({},designProperties.VALUE,\"dcreateddate\")],userInfo:_this.props.Login.userInfo,isneedReport:false,deleteParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\"},editParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\",masterList:selectedTestList//this.props.Login.masterData.RESelectedTest\n},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));testTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",isSampleTestComment:true,selectedMaster:\"RESelectedTest\",onSaveClick:_this.onCommentsSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.dataStateChange,masterData:_this.props.Login.masterData,isTestComment:true,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",masterList:_this.props.Login.masterData.RESelectedTest,ncontrolCode:_this.state.controlMap.has(\"DeleteTestComment\")&&_this.state.controlMap.get(\"DeleteTestComment\").ncontrolcode},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RESelectedTest,ncontrolCode:_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\",selectedId:_this.props.Login.selectedId||null}));testTabMap.set(\"IDS_RESULTCHANGEHISTORY\",/*#__PURE__*/React.createElement(ResultChangeHistoryTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,ApprovalResultChangeHistory:_this.props.Login.masterData.ResultChangeHistory||[],inputParam:_this.props.Login.inputParam,dataState:_this.state.resultChangeDataState,dataStateChange:_this.dataStateChange,screenName:\"IDS_RESULTCHANGEHISTORY\",controlMap:_this.state.controlMap,masterData:_this.props.Login.masterData,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));return testTabMap;};_this.sampleDataStateChange=function(event){switch(_this.props.Login.activeSampleKey){case\"IDS_APPROVALHISTORY\":_this.setState({sampleHistoryDataState:event.dataState});break;default:_this.setState({sampleGridDataState:event.dataState});break;}};_this.sampleGridDataStateChange=function(event){_this.setState({sampleGridDataState:event.dataState});};_this.dataStateChange=function(event){switch(_this.props.Login.activeTestKey){case\"IDS_RESULTS\":_this.setState({resultDataState:event.dataState});break;case\"IDS_INSTRUMENT\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_MATERIAL\":_this.setState({materialDataState:event.dataState});break;case\"IDS_TASK\":_this.setState({taskDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({instrumentDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_DOCUMENTS\":_this.setState({documentDataState:event.dataState});break;case\"IDS_RESULTCHANGEHISTORY\":_this.setState({resultChangeDataState:event.dataState});break;case\"IDS_SAMPLECOMMENTS\":_this.setState({sampleChangeDataState:event.dataState});break;default:_this.setState({resultDataState:event.dataState});break;}};_this.dataResultStateChange=function(event){_this.setState({dataState:event.dataState});};_this.subsampleTabDetail=function(){var ntransactionsamplecode=_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"):\"-1\";var tabMap=new Map();var subsampleList=_this.props.Login.masterData.RE_SUBSAMPLE||[];var _this$state2=_this.state,subsampleskip=_this$state2.subsampleskip,subsampletake=_this$state2.subsampletake;subsampleList=subsampleList.slice(subsampleskip,subsampleskip+subsampletake);var selectedSubSampleList=getSameRecordFromTwoArrays(subsampleList,_this.props.Login.masterData.RESelectedSubSample,\"ntransactionsamplecode\");tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SUBSAMPLEATTACHMENTS\",onSaveClick:_this.onAttachmentSaveClick,selectedMaster:\"selectedSubSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationSampleAttachment||[],deleteRecord:_this.props.deleteAttachment,masterList:_this.props.Login.masterData.RESelectedSubSample,masterAlertStatus:\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",fetchRecord:_this.props.getAttachmentCombo,viewFile:_this.props.viewAttachment,addName:\"AddSubSampleAttachment\",editName:\"EditSubSampleAttachment\",deleteName:\"DeleteSubSampleAttachment\",viewName:\"ViewSubSampleAttachment\",methodUrl:\"SubSampleAttachment\",nsubsampleneed:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,skip:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmentskip||0:0,take:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmenttake||10:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,userInfo:_this.props.Login.userInfo,deleteParam:{methodUrl:\"SubSampleAttachment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},editParam:{methodUrl:\"SubSampleAttachment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RE_SUBSAMPLE||[]},selectedListName:\"IDS_SAMPLEARNO\",displayName:\"ssamplearno\"}));tabMap.set(\"IDS_SUBSAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SUBSAMPLECOMMENTS\",onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"RESelectedSubSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationSampleComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddSubSampleComment\",editName:\"EditSubSampleComment\",deleteName:\"DeleteSubSampleComment\",methodUrl:\"SubSampleComment\",masterData:_this.props.Login.masterData,isTestComment:false,masterList:_this.props.Login.masterData.RESelectedSubSample,masterAlertStatus:\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",primaryKeyField:\"nsamplecommentcode\",dataState:_this.state.subSampleCommentDataState,dataStateChange:_this.subSampledataStateChange,deleteParam:{methodUrl:\"SubSampleComment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SUBSAMPLECOMMENTS\"},editParam:{methodUrl:\"SubSampleComment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SUBSAMPLECOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RE_SUBSAMPLE||[],ncontrolCode:_this.state.controlMap.has(\"EditSubSampleComment\")&&_this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode},selectedListName:\"IDS_SAMPLEARNO\",displayName:\"ssamplearno\",selectedId:_this.props.Login.selectedId||null}));return tabMap;};_this.onSampleTabChange=function(tabProps){var activeSampleTab=tabProps.screenName;if(activeSampleTab!==_this.props.Login.activeSampleTab){var inputData={masterData:_this.props.Login.masterData,RESelectedSample:_this.props.Login.masterData.RESelectedSample,npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSampleTab,activeSampleTab:activeSampleTab,activeTabIndex:tabProps.activeTabIndex?tabProps.activeTabIndex:_this.state.activeTabIndex};_this.props.getSampleChildTabDetail(inputData);}};_this.onTestTabChange=function(tabProps){var activeTestKey=tabProps.screenName;if(activeTestKey!==_this.props.Login.activeTestKey){if(_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(preregno){return preregno.npreregno;}).join(\",\").toString():\"\",RESelectedTest:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest:\"\",// ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\n//     this.props.Login.masterData.selectedTestCode : this.props.Login.masterData.RESelectedTest ?\n//         String(this.props.Login.masterData.RESelectedTest.ntransactiontestcode) : \"-1\",\nuserinfo:_this.props.Login.userInfo,activeTestKey:activeTestKey,screenName:activeTestKey,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,sampleChangeDataState:_this.state.sampleChangeDataState};_this.props.getTestChildTabREDetail(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}};_this.openClosePortal=function(test){if(_this.props.Login.openELNSheet===undefined||!_this.props.Login.openELNSheet){_this.props.Login.masterData.enlLink=\"\";// if(test.RESelectedTest.length === 1)\n// {           \n_this.props.getELNTestValidation(test,_this.props.Login.integrationSettings);// }\n// else{\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONLYONETEST\" }));\n// }\n}else{//this.props.Login.masterData.enlLink=undefined;\nvar updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:false,masterData:_objectSpread(_objectSpread({openELNSheet:false},_this.props.Login.masterData),{},{enlLink:\"\"})}};_this.props.updateStore(updateInfo);}/*openClosePortal = (test) => {\r\n        if(this.state.openELNSheet === false )\r\n        {\r\n            this.props.Login.masterData.enlLink=\"\";\r\n        // if(test.RESelectedTest.length === 1)\r\n        // {           \r\n                this.props.getELNTestValidation(test,this.props.Login.integrationSettings);            \r\n        // }\r\n        // else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONLYONETEST\" }));\r\n        // }\r\n    }\r\n        else{\r\n           //this.props.Login.masterData.enlLink=undefined;\r\n\r\n            // const updateInfo = {\r\n            //    typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         openELNSheet: false,\r\n            //         masterData: {\r\n            //             openELNSheet: false,\r\n            //             ...this.props.Login.masterData,  \r\n            //             enlLink:\"\"\r\n            //         },\r\n            //         enlLink:\"\"                 \r\n            //     }\r\n                \r\n            // }\r\n            //this.props.updateStore(updateInfo);\r\n            this.setState({ openELNSheet: false,  enlLink:\"\" })\r\n        }\r\n        // if (this.state.openELNSheet === false) {\r\n            // if (test.test.selensheetname !== null) {\r\n                /*let enlLink = \"\";\r\n                   const elnuser= {\r\n                     usercode: test.elnUserInfo.nelncode,\r\n                     username: test.elnUserInfo.selnusername,\r\n                     userfullname: test.elnUserInfo.selnusername,\r\n                    lsusergroup: {\r\n                     usergroupcode: test.elnUserInfo.nelnusergroupcode,\r\n                     usergroupname: test.elnUserInfo.nelnusergroupcode,\r\n                     },\r\n                    //  lssitemaster:{ sitecode:sitecode }\r\n                    }\r\n\r\n                    const user = CF_encryptionData(elnuser).EncryptData;\r\n                const enlcredential = {\r\n                    ElnUser: CF_encryptionData(this.props.Login.settings[20]).EncryptData,\r\n                    Elntenant: CF_encryptionData(\"-1\").EncryptData,\r\n                    Elnloginfrom: CF_encryptionData(\"-1\").EncryptData,\r\n                    //Elntoken: CF_encryptionData(\"\").EncryptData,\r\n                    Elnpassword: CF_encryptionData(this.props.Login.settings[21]).EncryptData,\r\n                    Elnsitecode: CF_encryptionData(this.props.Login.settings[22]).EncryptData,\r\n                    Elnsitename: CF_encryptionData(this.props.Login.settings[23]).EncryptData,\r\n                    Elnusergroupname: CF_encryptionData(this.props.Login.settings[24]).EncryptData,\r\n                    Elnusergroupcode: CF_encryptionData(this.props.Login.settings[25]).EncryptData,\r\n                }\r\n\r\n                //Axios.post(\"http://5.189.171.17:8095/ELN-0.0.1-SNAPSHOT/authenticate\",inputou)\r\n                //Axios.post(this.props.Login.settings[27], inputou)\r\n                // Axios.post(\"https://logilabelntesting.azurewebsites.net/\", user)\r\n                //     .then(response => {\r\n                        const testname = test.test.stestname.substring(0, test.test.stestname.indexOf(\"[\")).trim();\r\n\r\n                        //const batchId = test.test.sarno+'-'+test.test.stestname;\r\n                        const batchId = test.test.sarno + '-' + testname;\r\n                        const ntransactiontestcode = CF_encryptionData(batchId//test.RESelectedTest[0].ntransactiontestcode\r\n                        ).EncryptData;\r\n                        // const Elntoken = CF_encryptionData(\"Bearer \" + response.data.token).EncryptData;\r\n\r\n\r\n                        // const link =\r\n                        //     //window.location.href.toString() \r\n                        //     \"\" +\r\n                        //     '#{\"orderid\":\"' +\r\n                        //     ntransactiontestcode +\r\n                        //     '\",\"u\":\"' +\r\n                        //     enlcredential.ElnUser +\r\n                        //     '\",\"t\":\"' +\r\n                        //     enlcredential.Elntenant +\r\n                        //     '\",\"l\":\"' +\r\n                        //     enlcredential.Elnloginfrom +\r\n                        //     '\",\"k\":\"' +\r\n                        //     Elntoken +\r\n                        //     //response.data.token+\r\n                        //     '\",\"uc\":\"' +\r\n                        //     enlcredential.Elnusergroupcode +\r\n                        //     '\",\"ug\":\"' +\r\n                        //     enlcredential.Elnusergroupname +\r\n                        //     '\",\"sc\":\"' +\r\n                        //     enlcredential.Elnsitecode +\r\n                        //     '\",\"sn\":\"' +\r\n                        //     enlcredential.Elnsitename +\r\n                        //     '\",\"LO\":\"' +\r\n                        //     ntransactiontestcode +\r\n                        //     '\"}';\r\n\r\n                        const link =\r\n                            //window.location.href.toString() \r\n                            \"\" +\r\n                            '#{\"orderid\":\"' +\r\n                            ntransactiontestcode +\r\n                            '\",\"user\":\"' +\r\n                            user +\r\n                            '\",\"batchid\":\"' +\r\n                            ntransactiontestcode +\r\n                            '\"}';\r\n                        \r\n                        //enlLink = \"https://logilabelntest.azurewebsites.net/vieworder\".concat(link);\r\n                        enlLink=\"https://logilabelntesting.azurewebsites.net/\";\r\n                        console.log(\"eln link:\", enlLink);\r\n                        //}\r\n                        // this.setState({ openELNSheet: !this.state.openELNSheet, nflag: 1, enlLink })\r\n                        this.setState({ openELNSheet: true, nflag: 1, enlLink })\r\n                        //this.props.encryptionData(test);\r\n                    // })\r\n                    //this.getActiveTestURL() \r\n                    // .catch(response => { })\r\n            // }\r\n            // else {\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOSHEETFORTHISTEST\" }));\r\n\r\n            // }\r\n/*}\r\nelse {\r\n            this.setState({ openELNSheet: !this.state.openELNSheet, nflag: 1 })\r\n\r\n            let testChildGetREParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                activeTestKey: 'IDS_RESULTS',\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                RESelectedTest: this.props.Login.masterData.RESelectedTest\r\n            }\r\n\r\n            this.props.getTestChildTabREDetail(testChildGetREParam, true)\r\n\r\n\r\n\r\n            //this.filterTestParam\r\n        }*/};_this.onSubSampleTabChange=function(tabProps){var activeSubSampleTab=tabProps.screenName;if(activeSubSampleTab!==_this.props.Login.activeSubSampleTab){var inputData={masterData:_this.props.Login.masterData,selectedSubSample:_this.props.Login.masterData.RESelectedSubSample,ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(item){return item.ntransactionsamplecode;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeSubSampleTab,activeSubSampleTab:activeSubSampleTab,subSampleCommentDataState:_this.state.subSampleCommentDataState,subSampleAttachmentDataState:_this.state.subSampleAttachmentDataState,activeTabIndex:tabProps.activeTabIndex?tabProps.activeTabIndex:_this.state.activeTabIndex};_this.props.getSubSampleChildTabDetail(inputData);}};_this.viewSample=function(viewdetails){_this.props.ResultEntryViewPatientDetails(_this.props.Login.masterData,\"IDS_PREVIOUSRESULTVIEW\",_this.props.Login.userInfo,viewdetails);};_this.subSampledataStateChange=function(event){switch(_this.props.Login.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":_this.setState({subSampleCommentDataState:event.dataState});break;case\"IDS_SUBSAMPLEATTACHMENTS\":_this.setState({subSampleAttachmentDataState:event.dataState});break;default:_this.setState({popUptestDataState:event.dataState});break;}};_this.testMethodSourceEdit=function(test){_this.props.testMethodSourceEdit(test);};_this.addREInstrument=function(test){_this.props.addREInstrument(test);};_this.adhocTestParameter=function(test){var inputData={ntestcode:test.test.ntestcode,ntestgrouptestcode:test.test.ntestgrouptestcode,ntransactiontestcode:test.test.ntransactiontestcode,npreregno:test.test.npreregno,masterData:_this.props.Login.masterData,userinfo:test.userInfo,adhocId:test.adhocId};_this.props.addREAdhocParamter(inputData);};_this.deleteInstrumentRecord=function(test){var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);test=_objectSpread(_objectSpread({},test),{},{'ndesigntemplatemappingcode':ndesigntemplatemappingcode});var inputParam={inputData:_objectSpread(_objectSpread({},test),{},{'ndesigntemplatemappingcode':ndesigntemplatemappingcode,'userinfo':_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\noperation:\"deleteInstrument\",screenName:\"deleteInstrumentAction\",displayName:_this.props.Login.inputParam.displayName//, postParam,\n//test: test\n};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteInstrumentAction\",operation:\"deleteInstrument\"}};_this.props.updateStore(updateInfo);}else{_this.props.deleteInstrumentRecord(test);}};_this.fetchInstrumentRecord=function(test){_this.props.fetchInstrumentRecord(test);};_this.fetchMaterialRecord=function(test){_this.props.fetchMaterialRecord(test);};_this.deleteMaterialRecord=function(test){var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);test=_objectSpread(_objectSpread({},test),{},{nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode});var inputParam={inputData:_objectSpread(_objectSpread({},test.selectedRecord),{},{nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,ntransactiontestcode:test.masterData.RESelectedTest?test.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",userinfo:_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\nclassUrl:'resultentrybysample',methodUrl:\"ResultUsedMaterial\",operation:\"delete\",//screenName: \"deleteMaterialAction\",\ndisplayName:_this.props.Login.inputParam.displayName,//, postParam,\n//test: test\nnresultusedmaterialcode:test.selectedRecord.nresultusedmaterialcode};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteMaterialAction\",operation:\"deleteMaterial\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");//this.props.deleteResultUsedMaterial(test)\n}};_this.deleteTaskRecord=function(test){var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);test=_objectSpread(_objectSpread({},test),{},{ndesigntemplatemappingcode:ndesigntemplatemappingcode});var inputParam={inputData:_objectSpread(_objectSpread({},test),{},{'userinfo':_this.props.Login.userInfo}),// formData: formData,\n// isFileupload: true,\noperation:\"deleteTask\",displayName:_this.props.Login.inputParam.displayName//, postParam,\n//test: test\n};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,test.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"deleteTaskaction\",operation:\"deleteTask\"}};_this.props.updateStore(updateInfo);}else{_this.props.deleteTaskRecord(test);}};_this.fetchTaskRecord=function(test){_this.props.fetchTaskRecord(test);};_this.addResultEntryTask=function(inputData){var selectedRecord={};var selectedRecordTaskForm={};selectedRecord={npreregno:inputData.npreregno,ntransactiontestcode:inputData.ntransactiontestcode,stestsynonym:inputData.stestsynonym};selectedRecordTaskForm={npreregno:inputData.npreregno,ntransactiontestcode:inputData.ntransactiontestcode,stestsynonym:inputData.stestsynonym};var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,selectedRecordTaskForm:selectedRecordTaskForm,operation:\"create\",screenName:\"IDS_TASK\",openModal:true,activeTestKey:\"IDS_TASK\",isTaskInitialRender:true,ncontrolcode:inputData.addResultUsedTaskId,selectedId:null}};_this.props.updateStore(updateInfo);};_this.checkListRecord=function(parameterData){_this.props.checkListRecord(parameterData,_this.props.Login.userInfo);};_this.getFormula=function(parameterData,userInfo,masterData,index,event){_this.setState({modalEvent:event.currentTarget});_this.props.getFormula(parameterData,userInfo,masterData,index,_this.state.selectedRecord);};_this.getAverageResult=function(event,parameterData,index,selectedForumulaInput,masterData,selectedRecord){if(!selectedRecord.selectedForumulaInput[index].senableAverage){_this.props.getAverageResult(parameterData,index,selectedForumulaInput,_this.props.Login.userInfo,masterData,selectedRecord);}else{selectedForumulaInput[index].senableAverage=!selectedRecord.selectedForumulaInput[index].senableAverage;selectedForumulaInput[index].svalues=selectedForumulaInput[index].soldvalue;_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{selectedForumulaInput:selectedForumulaInput})});}};_this.calculateFormula=function(){var selectedRecord=_this.state.selectedRecord||[];var selectedForumulaInput=selectedRecord.selectedForumulaInput||[];var lstDynamicFields=[];if(selectedForumulaInput){selectedForumulaInput.map(function(dynamicfields){return lstDynamicFields.push(dynamicfields);});var inputData={masterData:_this.props.Login.masterData,lstDynamicFields:lstDynamicFields,userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,selectedResultGrade:_this.state.selectedRecord.selectedResultGrade,ResultParameter:_this.state.selectedRecord.ResultParameter||{}};_this.props.calculateFormula(inputData);}};_this.resultImport=function(){_this.props.Login.masterData.selectedImportFile=[];var updateInfo={typeName:DEFAULT_RETURN,data:{operation:\"create\",screenName:\"IDS_RESULTIMPORTFILE\",openModal:true,loadFile:true,activeTestKey:\"IDS_RESULTS\",masterData:_this.props.Login.masterData}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var inputValues={SampleType:_this.props.Login.masterData.realSampleTypeList||[],SampleTypeValue:_this.props.Login.masterData.realSampleTypeValue||{},RegistrationType:_this.props.Login.masterData.realRegistrationTypeList||[],RegTypeValue:_this.props.Login.masterData.realRegTypeValue||{},RegistrationSubType:_this.props.Login.masterData.realRegistrationSubTypeList||[],RegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue||{},DesignTemplateMappingValue:_this.props.Login.masterData.realDesignTemplateMapping||{},DesignTemplateMapping:_this.props.Login.masterData.realDesignTemplateMappingList||[],REFilterStatus:_this.props.Login.masterData.realFilterStatusList||[],FilterStatusValue:_this.props.Login.masterData.realFilterStatusValue||{},ApprovalConfigVersion:_this.props.Login.masterData.realApprovalConfigVersionList||[],ApprovalVersionValue:_this.props.Login.masterData.realApproveConfigVersion||{},// REJobStatus:this.state.REJobStatus || [],\nJobStatusValue:_this.props.Login.masterData.defaultjobstatus||{},Testvalues:_this.props.Login.masterData.realTestvaluesList||[],Batchvalues:_this.props.Login.masterData.realBatchvaluesList||[],BatchValue:_this.props.Login.masterData.realBatchvalue||{},Worklistvalues:_this.props.Login.masterData.RealWorklistvaluesList||[],WorklistValue:_this.props.Login.masterData.realWorklistvalue||{},TestValue:_this.props.Login.masterData.realTestcodeValue||{},ConfigurationFilterValues:_this.props.Login.masterData.realConfigurationFilterValuesList||[],ConfigurationFilterValue:_this.props.Login.masterData.realdefaultConfigurationFilterValue||{},defaultSampleType:_this.props.Login.masterData.realSampleTypeValue||{},defaultRegistrationType:_this.props.Login.masterData.realRegTypeValue||{},defaultRegistrationSubType:_this.props.Login.masterData.realRegSubTypeValue||{},defaultFilterStatus:_this.props.Login.masterData.realFilterStatusValue||{},defaultApprovalConfigVersion:_this.props.Login.masterData.realApproveConfigVersion||{},defaultBatchvalue:_this.props.Login.masterData.realBatchvalue||{},defaultWorklistvalue:_this.props.Login.masterData.realWorklistvalue||{},defaultTestvalues:_this.props.Login.masterData.realTestcodeValue||{},defaultConfigurationFilterValue:_this.props.Login.masterData.realdefaultConfigurationFilterValue||{},fromDate:_this.props.Login.masterData.realFromDate||new Date(),toDate:_this.props.Login.masterData.realToDate||new Date()// DynamicDesignMapping:this.state.stateDynamicDesign || []\n};var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),inputValues)}};_this.props.updateStore(updateInfo);};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});//setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.handleSubSamplePageChange=function(e){_this.setState({subSampleSkip:e.skip,subSampleTake:e.take});//setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.handleTestPageChange=function(e){_this.setState({testskip:e.skip,testtake:e.take,sampletakeDataState:e.take});};_this.verticalPaneSizeChange=function(val){if(_this.state.enableAutoHeight){_this.setState({initialVerticalWidth:val-150});}};_this.changeSplitterOption=function(){_this.setState({enableAutoHeight:!_this.state.enableAutoHeight,initialVerticalWidth:\"57vh\"});};_this.sideNavDetail=function(screenName){var _this$state3=_this.state,testskip=_this$state3.testskip,testtake=_this$state3.testtake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_this.props.Login.masterData.RE_TEST||[];var editTestCommentsId=_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode;testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");// let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\nvar ntransactiontestcode=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";return screenName==\"IDS_RESULTS\"?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:_this.props.Login.activeTestTab||\"IDS_RESULTS\",tabDetail:_this.resultTabDetail(),onTabChange:_this.onTabChange}):screenName==\"IDS_ATTACHMENTS\"?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:_this.props.Login.activeTestTab||\"IDS_TESTATTACHMENTS\",tabDetail:_this.attachmentTabDetail(),destroyInactiveTabPane:true,onTabChange:_this.onTabChange}):screenName==\"IDS_COMMENTS\"?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:_this.props.Login.activeTestTab||\"IDS_TESTCOMMENTS\",tabDetail:_this.commentTabDetail(),destroyInactiveTabPane:true,onTabChange:_this.onTabChange}):screenName==\"IDS_INSTRUMENT\"?/*#__PURE__*/React.createElement(ApprovalInstrumentTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedInstrument\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.instrumentDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteInstrumentRecord,fetchRecord:_this.fetchInstrumentRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_INSTRUMENT\"}):screenName==\"IDS_MATERIAL\"?/*#__PURE__*/React.createElement(ResultUsedMaterial,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedMaterial\",controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},dataState:_this.state.materialDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteMaterialRecord,fetchRecord:_this.props.fetchMaterialRecord,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_MATERIAL\"}):screenName==\"IDS_TASK\"?/*#__PURE__*/React.createElement(ResultEntryTaskTab,{userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,methodUrl:\"ResultUsedTask\",addResultEntryTask:_this.addResultEntryTask,controlMap:_this.state.controlMap,deleteParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"DeleteResultUsedTask\")&&_this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode},editParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,ncontrolcode:_this.state.controlMap.has(\"EditResultUsedTask\")&&_this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode},dataState:_this.state.taskDataState,selectedId:_this.props.Login.selectedId||null,isActionRequired:true,dataStateChange:_this.dataStateChange,deleteRecord:_this.deleteTaskRecord,fetchRecord:_this.fetchTaskRecord//fetchRecord={this.fetchInstrumentRecord}\n,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_TASK\"}):screenName==\"IDS_SAMPLEDETAILS\"?_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.length===1?/*#__PURE__*/React.createElement(SampleInfoView,{data:_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.length>0?_this.props.Login.masterData.RESelectedSample[_this.props.Login.masterData.RESelectedSample.length-1]:{},SingleItem:_this.state.SingleItem,screenName:\"IDS_SAMPLEINFO\",userInfo:_this.props.Login.userInfo}):/*#__PURE__*/React.createElement(SampleInfoGrid,{selectedSample:_this.props.Login.masterData.RESelectedSample,dataState:_this.state.sampleGridDataState,dataStateChange:_this.sampleGridDataStateChange,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumn(_this.state.DynamicGridMoreField)||[],userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_SAMPLEGRID\",jsonField:\"jsondata\",expandField:\"expanded\"}):\"\";};_this.resultTabDetail=function(){var resultTabMap=new Map();//let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n// let { testskip, testtake } = this.state\n// let testList = this.props.Login.masterData.RE_TEST || [];\n// testList = testList.slice(testskip, testskip + testtake);\nvar meanControlId=_this.state.controlMap.has(\"CalculateMean\")&&_this.state.controlMap.get(\"CalculateMean\").ncontrolcode;//let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\nresultTabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(ResultEntryResultsTab,{tabSequence:SideBarSeqno.TEST,userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,masterData:_this.props.Login.masterData,inputParam:_this.props.Login.inputParam,dataState:_this.state.resultDataState,dataStateChange:_this.dataStateChange,fetchRecord:_this.props.parameterRecord,controlMap:_this.state.controlMap,parameterParam:{primaryKeyField:\"ntransactionresultcode\",masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},checkListRecord:_this.checkListRecord,editpredefinedcomments:_this.editpredefinedcomments,enforceResult:_this.enforceResult,checklistParam:{masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo},selectedId:_this.props.Login.selectedId||null,viewFile:_this.props.viewAttachment,userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_RESULTS\",getMeanTestParameter:_this.props.getMeanCalculationTestParameter,meanParam:{\"userInfo\":_this.props.Login.userInfo,ncontrolCode:meanControlId}}));resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\",/*#__PURE__*/React.createElement(ResultChangeHistoryTab,{tabSequence:SideBarSeqno.TEST,userInfo:_this.props.Login.userInfo,genericLabel:_this.props.Login.genericLabel,ApprovalResultChangeHistory:_this.props.Login.masterData.ResultChangeHistory||[],inputParam:_this.props.Login.inputParam,dataState:_this.state.resultChangeDataState,dataStateChange:_this.dataStateChange,screenName:\"IDS_RESULTCHANGEHISTORY\",controlMap:_this.state.controlMap,masterData:_this.props.Login.masterData,userRoleControlRights:_this.state.userRoleControlRights,selectedId:null}));return resultTabMap;};_this.attachmentTabDetail=function(){var attachmentTabMap=new Map();var ntransactiontestcode=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";var _this$state4=_this.state,testskip=_this$state4.testskip,testtake=_this$state4.testtake,subsampleskip=_this$state4.subsampleskip,subsampletake=_this$state4.subsampletake;var testList=_this.props.Login.masterData.RE_TEST||[];testList=testList.slice(testskip,testskip+testtake);var meanControlId=_this.state.controlMap.has(\"CalculateMean\")&&_this.state.controlMap.get(\"CalculateMean\").ncontrolcode;var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");var npreregno=_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";var ntransactionsamplecode=_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"):\"-1\";var subsampleList=_this.props.Login.masterData.RE_SUBSAMPLE||[];subsampleList=subsampleList.slice(subsampleskip,subsampleskip+subsampletake);var selectedSubSampleList=getSameRecordFromTwoArrays(subsampleList,_this.props.Login.masterData.RESelectedSubSample,\"ntransactionsamplecode\");attachmentTabMap.set(\"IDS_TESTATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{tabSequence:SideBarSeqno.TEST,screenName:\"IDS_TESTATTACHMENTS\",selectedMaster:\"RESelectedTest\",onSaveClick:_this.onAttachmentSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDATTACHEMENT\",attachments:_this.props.Login.masterData.RegistrationTestAttachment||[],deleteRecord:_this.props.deleteAttachment,fetchRecord:_this.props.getAttachmentCombo,addName:\"AddTestAttachment\",editName:\"EditTestAttachment\",deleteName:\"DeleteTestAttachment\",viewName:\"ViewTestAttachment\",methodUrl:\"TestAttachment\",nsubsampleneed:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,subFields:[_defineProperty({},designProperties.VALUE,\"stestsynonym\"),_defineProperty({},designProperties.VALUE,\"screateddate\")],userInfo:_this.props.Login.userInfo,isneedReport:false,deleteParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\"},editParam:{methodUrl:\"TestAttachment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTATTACHMENTS\",masterList:selectedTestList//this.props.Login.masterData.RESelectedTest\n},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\"}));_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample&&attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{tabSequence:SideBarSeqno.SUBSAMPLE,screenName:\"IDS_SUBSAMPLEATTACHMENTS\",onSaveClick:_this.onAttachmentSaveClick,selectedMaster:\"selectedSubSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationSampleAttachment||[],deleteRecord:_this.props.deleteAttachment,masterList:_this.props.Login.masterData.RESelectedSubSample,masterAlertStatus:\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",fetchRecord:_this.props.getAttachmentCombo,viewFile:_this.props.viewAttachment,addName:\"AddSubSampleAttachment\",editName:\"EditSubSampleAttachment\",deleteName:\"DeleteSubSampleAttachment\",viewName:\"ViewSubSampleAttachment\",methodUrl:\"SubSampleAttachment\",nsubsampleneed:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,skip:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmentskip||0:0,take:_this.props.Login.inputParam?_this.props.Login.inputParam.attachmenttake||10:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,userInfo:_this.props.Login.userInfo,deleteParam:{methodUrl:\"SubSampleAttachment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights},editParam:{methodUrl:\"SubSampleAttachment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RE_SUBSAMPLE||[]},selectedListName:\"IDS_SAMPLEARNO\",displayName:\"ssamplearno\"}));attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",tabSequence:SideBarSeqno.SAMPLE,selectedMaster:_this.props.Login.masterData.RESelectedSample,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,attachments:_this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:_this.props.deleteAttachment,onSaveClick:_this.onAttachmentSaveClick,masterList:_this.props.Login.masterData.RESelectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHEMENT\",fetchRecord:_this.props.getAttachmentCombo,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",nsubsampleneed:_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,userInfo:_this.props.Login.userInfo,deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:_this.props.Login.screenName},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,masterList:_this.props.Login.masterData.RESelectedSample},selectedListName:\"IDS_ARNUMBER\",displayName:\"sarno\"}));return attachmentTabMap;};_this.testDataStateChange=function(event){switch(_this.props.Login.activeTestTab){case\"IDS_TEST\":_this.setState({popUptestDataState:event.dataState});break;case\"IDS_TESTCOMMENTS\":_this.setState({testCommentDataState:event.dataState});break;case\"IDS_TESTATTACHMENTS\":_this.setState({testAttachmentDataState:event.dataState});break;default:_this.setState({popUptestDataState:event.dataState});break;}};_this.commentTabDetail=function(){var commentTabMap=new Map();var _this$state5=_this.state,testskip=_this$state5.testskip,testtake=_this$state5.testtake,subSampleSkip=_this$state5.subSampleSkip,subSampleTake=_this$state5.subSampleTake;var testList=_this.props.Login.masterData.searchedTests?_toConsumableArray(_this.props.Login.masterData.searchedTests):_this.props.Login.masterData.RE_TEST||[];var editTestCommentsId=_this.state.controlMap.has(\"EditTestComment\")&&_this.state.controlMap.get(\"EditTestComment\").ncontrolcode;testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");var ntransactiontestcode=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\";var npreregno=_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";var ntransactionsamplecode=_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"):\"-1\";var subsampleList=_this.props.Login.masterData.RE_SUBSAMPLE||[];subsampleList=subsampleList.slice(subSampleSkip,subSampleSkip+subSampleTake);var selectedSubSampleList=getSameRecordFromTwoArrays(subsampleList,_this.props.Login.masterData.RESelectedSubSample,\"ntransactionsamplecode\");commentTabMap.set(\"IDS_TESTCOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_TESTCOMMENTS\",isSampleTestComment:true,tabSequence:SideBarSeqno.TEST,selectedMaster:selectedTestList,onSaveClick:_this.onCommentsSaveClick,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationTestComment||[],fetchRecord:_this.props.getCommentsCombo,masterList:selectedTestList,masterAlertStatus:\"IDS_SELECTTESTTOADDCOMMENTS\",addName:\"AddTestComment\",editName:\"EditTestComment\",deleteName:\"DeleteTestComment\",methodUrl:\"TestComment\",isTestComment:false,primaryKeyField:\"ntestcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.testDataStateChange,masterData:_this.props.Login.masterData,isneedReport:false,deleteParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\"},editParam:{methodUrl:\"TestComment\",ntransactiontestcode:ntransactiontestcode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_TESTCOMMENTS\",operation:\"update\",masterList:selectedTestList,ncontrolCode:editTestCommentsId},selectedListName:\"IDS_TESTS\",displayName:\"stestsynonym\",selectedId:_this.props.Login.selectedId||null}));_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nneedsubsample&&commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SUBSAMPLECOMMENTS\",tabSequence:SideBarSeqno.SUBSAMPLE,onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"selectedSubSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationSampleComment||[],fetchRecord:_this.props.getCommentsCombo,addName:\"AddSubSampleComment\",editName:\"EditSubSampleComment\",deleteName:\"DeleteSubSampleComment\",methodUrl:\"SubSampleComment\",masterData:_this.props.Login.masterData,isTestComment:false,masterList:_this.props.Login.masterData.RESelectedSubSample,masterAlertStatus:\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",primaryKeyField:\"nsamplecommentcode\",dataState:_this.state.subSampleCommentDataState,dataStateChange:_this.subSampledataStateChange,deleteParam:{methodUrl:\"SubSampleComment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SUBSAMPLECOMMENTS\"},editParam:{methodUrl:\"SubSampleComment\",ntransactionsamplecode:ntransactionsamplecode,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SUBSAMPLECOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RE_SUBSAMPLE||[],ncontrolCode:_this.state.controlMap.has(\"EditSubSampleComment\")&&_this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode},selectedListName:\"IDS_SAMPLEARNO\",displayName:\"ssamplearno\",selectedId:_this.props.Login.selectedId||null}));commentTabMap.set(\"IDS_SAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SAMPLECOMMENTS\",tabSequence:SideBarSeqno.SAMPLE,onSaveClick:_this.onCommentsSaveClick,selectedMaster:\"RESelectedSample\",controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,Comments:_this.props.Login.masterData.RegistrationComment||[],fetchRecord:_this.props.getCommentsCombo,masterData:_this.props.Login.masterData,addName:\"AddSampleComment\",editName:\"EditSampleComment\",deleteName:\"DeleteSampleComment\",methodUrl:\"SampleComment\",isTestComment:false,masterList:_this.props.Login.masterData.RESelectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDCOMMENTS\",primaryKeyField:\"nregcommentcode\",dataState:_this.state.testCommentDataState,dataStateChange:_this.dataStateChange,deleteParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\"},editParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,esignRights:_this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\",operation:\"update\",masterList:_this.props.Login.masterData.RESelectedSample||[],ncontrolCode:_this.state.controlMap.has(\"EditSampleComment\")&&_this.state.controlMap.get(\"EditSampleComment\").ncontrolcode},selectedListName:\"IDS_ARNUMBER\",displayName:\"sarno\",selectedId:_this.props.Login.selectedId||null}));return commentTabMap;};_this.onInputSwitchOnChange=function(event){if(event.target.name==\"PopupNav\"){_this.setState({enablePropertyPopup:!_this.state.enablePropertyPopup});}else{_this.setState({enableAutoClick:!_this.state.enableAutoClick});}};_this.changePropertyViewClose=function(id){var updateInfo={typeName:DEFAULT_RETURN,data:{activeTabIndex:undefined,activeTestTab:undefined,activeTabId:id}};_this.props.updateStore(updateInfo);};_this.changePropertyView=function(index,screenName,event,status){var id=false;if(event&&event.ntransactiontestcode){id=event.ntransactiontestcode;}else if(event&&event.ntransactionsamplecode){id=event.ntransactionsamplecode;}else if(event&&event.npreregno){id=event.npreregno;}//console.log(this.state.activeTabId, id , \"=======>\")\nvar activeTabIndex;var activeTabId;if(window.innerWidth>992&&event&&_this.state.enableAutoClick||!event){activeTabIndex=_this.state.activeTabIndex!==index?index:id?index:false;//activeTabId = this.state.activeTabIndex !== index ? true:false;\n}if(status!=\"click\"){if(index){var tabProps={tabSequence:SideBarSeqno.TEST,screenName:screenName==\"IDS_COMMENTS\"?\"IDS_TESTCOMMENTS\":screenName===\"IDS_ATTACHMENTS\"?\"IDS_TESTATTACHMENTS\":screenName,activeTabIndex:activeTabIndex//activeTabId\n};_this.onTabChange(tabProps);}// if (index == SideBarTabIndex.RESULT) {\n//     const tabProps = {\n//         tabSequence: SideBarSeqno.TEST,\n//         screenName: \"IDS_RESULTS\",\n//         activeTabIndex,\n//         //activeTabId\n//     }\n//     this.onTabChange(tabProps);\n// }\n// else if (index == SideBarTabIndex.ATTACHMENTS) {\n//     const tabProps = {\n//         tabSequence: SideBarSeqno.TEST,\n//         screenName: \"IDS_TESTATTACHMENTS\",\n//         activeTabIndex,\n//        // activeTabId\n//     }\n//     this.onTabChange(tabProps);\n// }\n// else if (index == SideBarTabIndex.COMMENTS) {\n//     const tabProps = {\n//         tabSequence: SideBarSeqno.TEST,\n//         screenName: \"IDS_TESTCOMMENTS\",\n//         activeTabIndex,\n//         //activeTabId\n//     }\n//     this.onTabChange(tabProps);\n// }\n// else {\n//     if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: {\n//                 activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n//                 activeTabId: id\n//             }\n//         }\n//         this.props.updateStore(updateInfo);\n//     }\n// }\n}};_this.onTabChange=function(tabProps){var activeTestTab=tabProps.screenName;var tabseqno=tabProps.tabSequence;// if (activeTestTab !== this.props.Login.activeTestTab) {\nif(tabseqno==SideBarSeqno.TEST){if(_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.length>0){var inputData={masterData:_this.props.Login.masterData,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\",npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(preregno){return preregno.npreregno;}).join(\",\").toString():\"\",RESelectedTest:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest:\"\",userinfo:_this.props.Login.userInfo,activeTestKey:activeTestTab,screenName:activeTestTab,//activeTestTab,\nresultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,activeTabIndex:tabProps.activeTabIndex?tabProps.activeTabIndex:_this.state.activeTabIndex,activeTabId:tabProps.activeTabId?tabProps.activeTabId:_this.state.activeTabId};_this.props.getTestChildTabREDetail(inputData,true);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTEST\"}));}}else if(tabseqno==SideBarSeqno.SUBSAMPLE){if(activeTestTab!==_this.props.Login.activeTestTab){var _inputData={masterData:_this.props.Login.masterData,selectedSubSample:_this.props.Login.masterData.RESelectedSubSample,ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(item){return item.ntransactionsamplecode;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeTestTab,activeTestTab:activeTestTab,activeSubSampleTab:activeTestTab,subSampleCommentDataState:_this.state.subSampleCommentDataState,subSampleAttachmentDataState:_this.state.subSampleAttachmentDataState,activeTabIndex:tabProps.activeTabIndex?tabProps.activeTabIndex:_this.state.activeTabIndex};_this.props.getSubSampleChildTabDetail(_inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{if(activeTestTab!==_this.props.Login.activeTestTab){var _inputData2={masterData:_this.props.Login.masterData,RESelectedSample:_this.props.Login.masterData.RESelectedSample,npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(item){return item.npreregno;}).join(\",\"):\"-1\",userinfo:_this.props.Login.userInfo,screenName:activeTestTab,activeSampleTab:activeTestTab,activeTestTab:activeTestTab,sampleChangeDataState:_this.state.sampleChangeDataState,activeTabIndex:tabProps.activeTabIndex?tabProps.activeTabIndex:_this.state.activeTabIndex};_this.props.getSampleChildTabDetail(_inputData2);}}//}\n};_this.mandatoryFieldsForAdditionalInfo=function(){var mandatoryFieldsAdditionalInfo=[];if(_this.props.Login.showMultiSelectCombo){mandatoryFieldsAdditionalInfo.push({\"idsName\":_this.props.Login.masterData['salertmessage'],\"dataField\":\"ntestgrouptestpredefsubcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"file\"});}else{mandatoryFieldsAdditionalInfo.push({\"idsName\":_this.props.Login.masterData['salertmessage'],\"dataField\":\"ntestgrouptestpredefsubcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"file\"});}return mandatoryFieldsAdditionalInfo;};_this.defaultActions=function(testChildGetREParam,RESelectedTest,RESelectedSample,setDefaultId,testskip,testtake){var nregtypecode=_this.props.Login.masterData.realRegTypeValue.nregtypecode;var nregsubtypecode=_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"completeTest\",inputData:{'userinfo':_this.props.Login.userInfo,'nregtypecode':nregtypecode,'nregsubtypecode':nregsubtypecode,'ncontrolcode':setDefaultId},// formData: formData,\n// isFileupload: true,\noperation:\"default\",displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:_objectSpread(_objectSpread({},testChildGetREParam),{},{ncontrolcode:setDefaultId}),RESelectedTest:acceptTestList,RESelectedSample:RESelectedSample,ndesigntemplatemappingcode:parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode)};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,setDefaultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"defaultaction\",operation:\"default\"}};_this.props.updateStore(updateInfo);}else{_this.props.defaultTest(inputParam.testChildGetREParam,acceptTestList,RESelectedSample,nregtypecode,nregsubtypecode,ndesigntemplatemappingcode);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTTEST\"}));}};_this.completeActions=function(testChildGetREParam,RESelectedTest,userInfo,completeResultId,testskip,testtake,validation){var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"completeTest\",inputData:{'userinfo':_this.props.Login.userInfo,'ncontrolcode':completeResultId},// formData: formData,\n// isFileupload: true,\noperation:\"complete\",postParamList:_this.postParamList,displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:testChildGetREParam,RESelectedTest:acceptTestList,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,testtake:_this.state.testtake,subSampleSkip:_this.state.subSampleSkip,subSampleTake:_this.state.subSampleTake,basedrulesengine:validation};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeResultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"complete\",operation:\"complete\"}};_this.props.updateStore(updateInfo);}else{_this.props.completeTest(inputParam,acceptTestList,userInfo,completeResultId,false,{basedrulesengine:validation});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOCOMPLETE\"}));}};_this.testStartActions=function(testChildGetREParam,RESelectedTest,userInfo,completeResultId,testskip,testtake){var TestList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);TestList=TestList.splice(testskip,testskip+testtake);var acceptTestList=getSameRecordFromTwoArrays(TestList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(acceptTestList&&acceptTestList.length>0){var inputParam={classUrl:'resultentrybysample',methodUrl:\"testInitiated\",inputData:{'userinfo':_this.props.Login.userInfo,'ncontrolcode':completeResultId,'subSampleNeeded':_this.props.Login.masterData.defaultRegistrationSubType.nneedsubsample},// formData: formData,\n// isFileupload: true,\noperation:\"testinitiate\",postParamList:_this.postParamList,displayName:_this.props.Login.inputParam.displayName,//, postParam,\ntestChildGetREParam:testChildGetREParam,RESelectedTest:acceptTestList,skip:_this.state.skip,take:_this.state.take,testskip:_this.state.testskip,progressTimerStart:true,testtake:_this.state.testtake};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeResultId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"complete\",operation:\"complete\"}};_this.props.updateStore(updateInfo);}else{_this.props.testStart(inputParam,acceptTestList,userInfo,completeResultId);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTESTTOINITIATE\"}));}};_this.onSaveCheckList=function(selectedRecord,userInfo,nregtypecode,nregsubtypecode){var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var inputParam={\"inputData\":{userinfo:userInfo}};var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{selectedRecord:selectedRecord,userInfo:userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,operation:\"updatechecklist\",inputParam:inputParam},openModal:true,operation:\"updatechecklist\"}};_this.props.updateStore(updateInfo);}else{_this.props.onSaveCheckList(selectedRecord,userInfo,nregtypecode,nregsubtypecode,ndesigntemplatemappingcode);}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='testinitiate'||_this.props.Login.operation==='complete'||_this.props.Login.operation==='default'||_this.props.Login.operation===\"updatechecklist\"||_this.props.Login.operation==='deleteInstrument'||_this.props.Login.operation==='createMethod'||_this.props.Login.operation==='deleteTask'||_this.props.Login.operation==='updateParameterComments'){_this.props.validateEsignCredentialComplete(inputParam,\"openModal\");}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onChildDataChange=function(childData){if(_this.props.Login.screenName==='IDS_MATERIAL'){_this.setState({selectedRecordMaterialForm:_objectSpread({},childData),isMaterialInitialRender:false});}else{_this.setState({selectedRecordInstrumentForm:_objectSpread({},childData),isInstrumentInitialRender:false});}};_this.onInputOnChange=function(event,name){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}switch(name){case'ntestgroupmaterial':var ntestgrouptestcode=selectedRecord.ntestgroupmaterial==transactionStatus.YES?_this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode:-1;_this.props.getREMaterialComboGet({ntestgroupmaterial:selectedRecord.ntestgroupmaterial,ntestgrouptestcode:ntestgrouptestcode,RESelectedTest:_this.props.Login.masterData.RESelectedTest,test:_this.props.Login.masterData.RESelectedTest[0],userInfo:_this.props.Login.userInfo});break;default:_this.setState({selectedRecord:selectedRecord});}};_this.onSaveFileClick=function(saveType,formRef){var selectedImportFile=_this.props.Login.masterData.selectedImportFile;var acceptedFile=selectedImportFile?selectedImportFile.sfilename:[];var formData=new FormData();if(acceptedFile&&acceptedFile.length>0){acceptedFile.forEach(function(file,index){formData.append(\"uploadedFile\"+index,file);});formData.append(\"filecount\",acceptedFile.length);}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTANYONEFILETOSUBMIT\"}));}formData.append(\"userinfo\",JSON.stringify(_this.props.Login.userInfo));formData.append(\"nregtypecode\",JSON.stringify(_this.props.Login.masterData.realRegTypeValue.nregtypecode));formData.append(\"nregsubtypecode\",JSON.stringify(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode));formData.append(\"stransactiontestcode\",JSON.stringify(_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"));_this.props.resultImportFile(formData,_this.props.Login.masterData);};_this.onSaveClickAdhocParam=function(saveType){if(Object.keys(_this.state.selectedRecord).length>0){var _Map={};var testParameter=[];_this.state.selectedRecord&&_this.state.selectedRecord.nparamtercode.forEach(function(data,index){return testParameter.push(data.item);});_Map[\"ntestparametercode\"]=testParameter.map(function(ntestgroupparamtercode){return ntestgroupparamtercode.item.ntestparametercode;}).join(\",\");_Map[\"ntestgrouptestcode\"]=testParameter.map(function(ntestgrouptestcode){return ntestgrouptestcode.item.ntestgrouptestcode;}).join(\",\");_Map[\"ntestcode\"]=testParameter.map(function(ntestgrouptestcode){return ntestgrouptestcode.item.ntestcode;}).join(\",\");_Map[\"userinfo\"]=_this.props.Login.userInfo;_Map[\"npreregno\"]=_this.props.Login.adhocpreregno;_Map[\"ntransactiontestcode\"]=_this.props.Login.adhoctransactiontestcode;_Map[\"masterData\"]=_this.props.Login.masterData;_Map[\"multiselecttransactiontestcode\"]=_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\");_Map[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue.nregtypecode;_Map[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;_Map[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode;_Map[\"nneedsubsample\"]=_this.props.Login.masterData.nneedsubsample;var inputParam={inputData:_Map,action:'createAdhocParameter',operation:\"create\",methodUrl:\"AdhocParamter\",classUrl:\"resultentrybysample\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.adhocId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"Resultentry\",operation:\"adhocTestParameter\"}};_this.props.updateStore(updateInfo);}else{_this.props.createAdhocParamter(inputParam);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}));}};_this.onDropFile=function(acceptedFile){_this.props.Login.masterData.selectedImportFile['sfilename']=acceptedFile;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_this.props.Login.masterData}};_this.props.updateStore(updateInfo);};_this.onFormulaInputChange=function(event,index,fields){var selectedRecord=_this.state.selectedRecord;var selectedForumulaInput=_this.state.selectedRecord.selectedForumulaInput||[];var selectedMandatory=_this.state.selectedRecord.selectedMandatory||[];var dynamicformulafields={};if(event){if(fields.ndynamicformulafieldcode===FORMULAFIELDTYPE.INTEGER){var value=event.target.value.replace(/[^-^0-9]/g,'');if(/^-?\\d*?$/.test(value)||value===\"\"){if(_this.state.selectedRecord.formulainput){dynamicformulafields.svalues=value;dynamicformulafields.sparameter=fields.sdescription;selectedForumulaInput[index]=dynamicformulafields;selectedMandatory[index]=event.target.value;}}selectedRecord[\"selectedForumulaInput\"]=selectedForumulaInput;selectedRecord[\"selectedMandatory\"]=selectedMandatory;_this.setState({selectedRecord:selectedRecord});}else{var _value=event.target.value.replace(/[^-^0-9.]/g,'');if(/^-?\\d*?\\.?\\d*?$/.test(_value)||_value===\"\"){if(_this.state.selectedRecord.formulainput){dynamicformulafields.svalues=_value;dynamicformulafields.sparameter=fields.sdescription;selectedForumulaInput[index]=dynamicformulafields;selectedMandatory[index]=event.target.value;}}selectedRecord[\"selectedForumulaInput\"]=selectedForumulaInput;selectedRecord[\"selectedMandatory\"]=selectedMandatory;_this.setState({selectedRecord:selectedRecord});}}};_this.onTemplateInputChange=function(event,control){var selectedRecord=templateChangeHandler(1,_this.state.selectedRecord,event,control);_this.setState({selectedRecord:selectedRecord});};_this.onTemplateComboChange=function(comboData,control){var selectedRecord=templateChangeHandler(2,_this.state.selectedRecord,comboData,control);_this.setState({selectedRecord:selectedRecord});};_this.onTemplateDateChange=function(dateData,control){var selectedRecord=templateChangeHandler(3,_this.state.selectedRecord,dateData,control);_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.viewAdditionalInfo=function(currentAlertResultCode){var selectedRecord=_this.state.selectedRecord||[];var additionalInfo=selectedRecord['additionalInfo'];var showAlertGrid=_this.props.Login.showAlertGrid;var additionalInfoView=_this.props.Login.additionalInfoView;if(additionalInfo[currentAlertResultCode]){showAlertGrid=true;additionalInfoView=true;selectedRecord['additionalResultData']=additionalInfo[currentAlertResultCode];}// this.setState({selectedRecord,additionalInfoView});\nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,showAlertGrid:showAlertGrid,additionalInfoView:additionalInfoView}};_this.props.updateStore(updateInfo);};_this.onModalSave=function(){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;var currentntestgrouptestpredefcode=_this.state.currentntestgrouptestpredefcode||0;var bool=_this.state.selectedRecord.ResultParameter.some(function(x){return x['ntransactionresultcode']===currentAlertResultCode;});if(bool){_this.state.selectedRecord.ResultParameter.map(function(Parameter){if(Parameter['ntransactionresultcode']===currentAlertResultCode){Parameter['additionalInfoUidata']={ntestgrouptestpredefsubcode:selectedRecord['ntestgrouptestpredefsubcode']};if(selectedRecord['ntestgrouptestpredefsubcode']){if(typeof selectedRecord['ntestgrouptestpredefsubcode']==='string'){Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'];}else{Parameter['additionalInfo']=\"\";// selectedRecord['ntestgrouptestpredefsubcode'].map(x=>{ \n//     Parameter['additionalInfo']+= x.label+\",\"  \n// }).join('\\n')\nParameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'].map(function(x){return x.label+\",\";}).join('\\n');Parameter['additionalInfo']=Parameter['additionalInfo'].substring(0,Parameter['additionalInfo'].length-1);}}else{Parameter['additionalInfo']=\"\";Parameter['additionalInfoUidata']&&delete Parameter['additionalInfoUidata'];}Parameter['ntestgrouptestpredefcode']=currentntestgrouptestpredefcode;}});}var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,showAlertGrid:false}};_this.props.updateStore(updateInfo);};_this.onskiprule=function(){var startDate=_this.props.Login.masterData.realFromDate||_this.props.Login.masterData.fromDate||new Date();var endDate=_this.props.Login.masterData.realToDate||_this.props.Login.masterData.toDate||new Date();// let obj = this.covertDatetoString(startDate, endDate)\nvar obj=convertDateValuetoString(startDate,endDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var completeResultId=_this.state.controlMap.has(\"CompleteResult\")&&_this.state.controlMap.get(\"CompleteResult\").ncontrolcode;var testChildGetREParam={masterData:_this.props.Login.masterData,userinfo:_this.props.Login.userInfo,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:_this.props.Login.masterData.realFilterStatusValue&&_this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:_this.props.Login.masterData.realTestcodeValue&&_this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample&&sample.npreregno;}).join(\",\"),ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample&&_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample&&sample.ntransactionsamplecode;}).join(\",\"),activeTestKey:_this.props.Login.activeTestTab||'IDS_RESULTS',fromdate:fromDate,todate:toDate,testskip:_this.state.testskip,testtake:_this.state.testtake,resultDataState:_this.state.resultDataState,instrumentDataState:_this.state.instrumentDataState,materialDataState:_this.state.materialDataState,taskDataState:_this.state.taskDataState,documentDataState:_this.state.documentDataState,resultChangeDataState:_this.state.resultChangeDataState,testCommentDataState:_this.state.testCommentDataState,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,activeTabIndex:_this.state.enableAutoClick&&_this.state.activeTabIndex==undefined?1:_this.state.enableAutoClick&&_this.state.activeTabIndex==0?1:_this.state.enableAutoClick?_this.state.activeTabIndex:0,//activeTabIndex: this.state.enableAutoClick ? this.state.activeTabIndex : this.state.activeTabIndex ? this.state.activeTabIndex : 1,\nnworlistcode:_this.props.Login.masterData.realWorklistCodeValue&&_this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1,nbatchmastercode:_this.props.Login.masterData.realBatchCodeValue&&_this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1};_this.completeActions(testChildGetREParam,_this.props.Login.masterData.RESelectedTest,_this.props.Login.userInfo,completeResultId,_this.state.testskip,_this.state.testtake,4);};_this.ontaskInputChange=function(Data,name){var selectedRecordTaskForm=_this.state.selectedRecordTaskForm||[];selectedRecordTaskForm[name]=Data.target.value;_this.setState({selectedRecordTaskForm:_objectSpread({},selectedRecordTaskForm),isTaskInitialRender:false});};_this.ontaskNumericChange=function(numericData,numericName){var selectedRecordTaskForm=_this.state.selectedRecordTaskForm||[];if(numericData){if(numericName!==\"scomments\"){selectedRecordTaskForm[numericName]=numericData;}else{selectedRecordTaskForm[numericName]=numericData.target.value;}}else{selectedRecordTaskForm[numericName]=\"\";}_this.setState({selectedRecordTaskForm:_objectSpread({},selectedRecordTaskForm),isTaskInitialRender:false});};_this.onInputChange=function(Data,name){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;if(Data){if(name==='ntestgrouptestpredefsubcode'){// if(!selectedRecord['additionalInfo']){\n//     selectedRecord['additionalInfo']=[] \n// } \n// if(selectedRecord['additionalInfo']){\n//     selectedRecord['additionalInfo'][currentAlertResultCode]= Data.target.value\n// } \n// let bool=this.state.selectedRecord.ResultParameter.some(x=>x['ntransactionresultcode']===currentAlertResultCode) \n// if(bool){\n//   this.state.selectedRecord.ResultParameter.map(Parameter=>\n//       {\n//           if(Parameter['ntransactionresultcode']===currentAlertResultCode){\n//               Parameter[\"jsondata\"]={};\n//               Parameter['additionalInfo']=selectedRecord['additionalInfo'][currentAlertResultCode]\n//             //   Parameter[\"jsondata\"] = { \n//             //       ...Parameter[\"jsondata\"],\n//             //       additionalInfo:selectedRecord['additionalInfo'][currentAlertResultCode]\n//             //   }\n//           }\n//       }\n//       );  \n// }\n//  selectedRecord[name] = Data.target.value;\n}//else{\nselectedRecord[name]=Data.target.value;//  } \n}else{selectedRecord[name]=[];}_this.setState({selectedRecord:selectedRecord});};_this.onNumericChange=function(numericData,numericName){var selectedRecord=_this.state.selectedRecord||[];if(numericData){if(numericName!==\"scomments\"){selectedRecord[numericName]=numericData;}else{selectedRecord[numericName]=numericData.target.value;}}else{selectedRecord[numericName]=\"\";}_this.setState({selectedRecord:selectedRecord});};_this.onDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord||[];selectedRecord[dateName]=dateValue;if(dateName===\"dfromdate\"||dateName===\"dtodate\"){_this.setState({selectedRecord:selectedRecord});}};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var meanTestParameterList=_this.state.meanTestParameterList||[];var selectedMeanTestParam=_this.state.selectedMeanTestParam||new Map();if(checked){var data=meanTestParameterList.map(function(item){item.selected=checked;selectedMeanTestParam.set(item.ntransactionresultcode,item.sresult);return item;});var selectedTestParam=\"\";var selectedTestParamMean=0;var size=0;if(selectedMeanTestParam.size>0){_toConsumableArray(selectedMeanTestParam.values()).forEach(function(item){return item!==null&&item!==\"\"?(selectedTestParam=selectedTestParam===\"\"?item:selectedTestParam+\"+\"+item,size=size+1,selectedTestParamMean=parseInt(selectedTestParamMean)+parseInt(item)):\"\";});selectedTestParamMean=selectedTestParamMean/size;}_this.setState({meanTestParameterList:data,selectedMeanTestParam:selectedMeanTestParam,selectedTestParam:selectedTestParam,testMean:selectedTestParamMean,selectAll:checked});}else{var _data=meanTestParameterList.map(function(item){item.selected=checked;return item;});_this.setState({meanTestParameterList:_data,selectedMeanTestParam:new Map(),selectedTestParam:\"\",testMean:\"\",selectAll:checked});}};_this.selectionChange=function(event){var meanTestParameterList=_this.state.meanTestParameterList||[];var selectedMeanTestParam=_this.state.selectedMeanTestParam||new Map();meanTestParameterList.map(function(item){if(item.ntransactionresultcode===event.dataItem.ntransactionresultcode){item.selected=!event.dataItem.selected;}return item;});if(event.dataItem.selected){selectedMeanTestParam.set(event.dataItem.ntransactionresultcode,event.dataItem.sresult);}else{if(selectedMeanTestParam.has(event.dataItem.ntransactionresultcode)){selectedMeanTestParam.delete(event.dataItem.ntransactionresultcode);}}var selectedTestParam=\"\";var selectedTestParamMean=0;var size=0;if(selectedMeanTestParam.size>0){_toConsumableArray(selectedMeanTestParam.values()).forEach(function(item){return item!==null&&item!==\"\"?(selectedTestParam=selectedTestParam===\"\"?item:selectedTestParam+\"+\"+item,size=size+1,selectedTestParamMean=parseInt(selectedTestParamMean)+parseInt(item)):\"\";});selectedTestParamMean=selectedTestParamMean/size;}_this.setState({meanTestParameterList:meanTestParameterList,selectedMeanTestParam:selectedMeanTestParam,selectedTestParam:selectedTestParam,testMean:selectedTestParamMean,selectAll:_this.valiateCheckAll(meanTestParameterList)});};_this.onMeanComboChange=function(comboData,comboName){var selectedMeanTestParam=_this.state.selectedMeanTestParam||[];selectedMeanTestParam[comboName]=comboData[0];var data=\"\";if(selectedMeanTestParam[\"parametervalue\"]===undefined){data=comboData[0].value;}else{data=selectedMeanTestParam[\"parametervalue\"]+\"+\"+comboData[0].value;}selectedMeanTestParam[\"parametervalue\"]=data;_this.setState({selectedMeanTestParam:selectedMeanTestParam});};_this.onMaterialComboChange=function(comboData,comboName){var selectedRecord=_this.state.selectedRecord||[];var ntestgrouptestcode=selectedRecord.ntestgroupmaterial==transactionStatus.YES?_this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode:-1;if(comboData){selectedRecord[comboName]=comboData;//this.setState({ selectedRecord });\n}else{selectedRecord[comboName]=[];//this.setState({ selectedRecord });\n}switch(comboName){case'nmaterialtypecode':_this.props.getREMaterialCategoryByType({ntestgrouptestcode:ntestgrouptestcode,selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;case'nmaterialcatcode':selectedRecord['nsectioncode']=selectedRecord.nmaterialcatcode.item.needSectionwise==transactionStatus.YES?_this.props.Login.masterData.RESelectedTest[0].nsectioncode:-1;_this.props.getREMaterialByCategory({ntestgrouptestcode:ntestgrouptestcode,selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;case'nmaterialcode':_this.props.getREMaterialInvertoryByMaterial({ntestgrouptestcode:ntestgrouptestcode,selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;default:_this.props.getAvailableMaterialQuantity({ntestgrouptestcode:ntestgrouptestcode,selectedRecord:selectedRecord,userInfo:_this.props.Login.userInfo});break;}};_this.onComboChange=function(comboData,comboName){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;if(comboData){// if(comboName==='ntestgrouptestpredefsubcode'){\n//     if(!selectedRecord['additionalInfo']){\n//         selectedRecord['additionalInfo']=[] \n//     }  \n//         selectedRecord['additionalInfo'][currentAlertResultCode]=\"\"\n//         comboData.map(x=>{ \n//             selectedRecord['additionalInfo'][currentAlertResultCode]+= x.label+\",\"//+<br/> \n//         })\n//         selectedRecord['additionalInfo'][currentAlertResultCode]=selectedRecord['additionalInfo'][currentAlertResultCode].substring(0,\n//             selectedRecord['additionalInfo'][currentAlertResultCode].length-1) \n// } \nselectedRecord[comboName]=comboData;}else{selectedRecord[comboName]=[];}_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord: selectedRecord }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onChange=function(comboData,fieldName,caseNo){var selectedRecord=_this.state.selectedRecord||{};var selectedsubcode=[];if(comboData!==null){switch(caseNo){case 1:selectedRecord[fieldName]=comboData;delete selectedRecord[\"ResultParameter\"];_this.setState({selectedsubcode:selectedsubcode});_this.props.resultEntryGetComponent(selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo,_this.props.Login.ncontrolcode,_this.state.testskip,_this.state.testtake);break;case 2:selectedRecord[fieldName]=comboData;delete selectedRecord[\"ResultParameter\"];_this.setState({selectedsubcode:selectedsubcode});_this.props.resultEntryGetParameter(selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo,_this.props.Login.ncontrolcode,_this.state.testskip,_this.state.testtake);break;default:break;}}// else {\n//   if (selectedRecord[\"nsectioncode\"]) {\n//     delete selectedRecord[\"nsectioncode\"];\n//     delete selectedRecord[\"nusercode\"];\n//   }\n//   const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedRecord,selectedsubcode:undefined }\n//   }\n//   this.props.updateStore(updateInfo);\n// }\n};_this.onGradeEvent=function(ResultParameter,index,parameter){if(ResultParameter.length>0&&ResultParameter[index]!==undefined&&ResultParameter[index].sresult!==null){var selectedRecord=_this.state.selectedRecord||[];var selectedResultGrade=_this.state.selectedRecord.selectedResultGrade||[];if(parameter.nparametertypecode===parameterType.NUMERIC){selectedResultGrade[index]={ngradecode:ResultParameter[index].sresult!==\"\"?numericGrade(parameter,numberConversion(parseFloat(ResultParameter[index].sresult),parseInt(parameter.nroundingdigits))):-1};}if(parameter.nparametertypecode===parameterType.PREDEFINED){if(ResultParameter[index].sresult!==null){selectedResultGrade[index]={ngradecode:ResultParameter[index].ngradecode};}else{selectedResultGrade[index]={ngradecode:0};}}if(parameter.nparametertypecode===parameterType.CHARACTER){if(ResultParameter[index].sresult!==null&&ResultParameter[index].sresult.trim()!==\"\"){//selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\nselectedResultGrade[index]={ngradecode:4};}else{selectedResultGrade[index]={ngradecode:-1};}}//this.props.Login.masterData[\"selectedResultGrade\"] = selectedResultGrade;\nselectedRecord.selectedResultGrade=selectedResultGrade;_this.setState({selectedRecord:selectedRecord});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { masterData: this.props.Login.masterData }\n// }\n// this.props.updateStore(updateInfo);\n}};_this.onCommentsSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var _this$state6=_this.state,testskip=_this$state6.testskip,testtake=_this$state6.testtake;var testList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");if(_this.props.Login.screenName===\"IDS_TESTCOMMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestComments(saveParam,selectedTestList);}if(_this.props.Login.screenName===\"IDS_SUBSAMPLECOMMENTS\"){var sampleList=[];if(_this.props.Login.masterData.searchedSubSample!==undefined){sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSubSample,_this.props.Login.masterData.RE_SUBSAMPLE.slice(_this.state.subSampleSkip,_this.state.subSampleSkip+_this.state.subSampleTake),\"npreregno\");}else{sampleList=_this.props.Login.masterData.RE_SUBSAMPLE.slice(_this.state.subSampleSkip,_this.state.subSampleSkip+_this.state.subSampleTake);}var acceptList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.RESelectedSubSample,\"ntransactionsamplecode\");// let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\nvar _saveParam={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\"):\"-1\"};inputParam=onSaveSubSampleComments(_saveParam,acceptList);}if(_this.props.Login.screenName===\"IDS_SAMPLECOMMENTS\"){var _sampleList=[];if(_this.props.Login.masterData.searchedSample!==undefined){_sampleList=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSample,_this.props.Login.masterData.RE_SAMPLE.slice(_this.state.skip,_this.state.skip+_this.state.take),\"npreregno\");}else{_sampleList=_this.props.Login.masterData.RE_SAMPLE.slice(_this.state.skip,_this.state.skip+_this.state.take);}var _acceptList=getSameRecordFromTwoArrays(_sampleList,_this.props.Login.masterData.RESelectedSample,\"npreregno\");// let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\nvar _saveParam2={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};inputParam=onSaveSampleComments(_saveParam2,_acceptList);}if(_this.props.Login.screenName===\"IDS_SUBSAMPLECOMMENTS\"){var _sampleList2=[];if(_this.props.Login.masterData.searchedSubSample!==undefined){_sampleList2=getSameRecordFromTwoArrays(_this.props.Login.masterData.searchedSubSample,_this.props.Login.masterData.RESelectedSubSample.slice(_this.state.subsampleskip,_this.state.subsampleskip+_this.state.subsampletake),\"npreregno\");}else{_sampleList2=_this.props.Login.masterData.RESelectedSubSample.slice(_this.state.subsampleskip,_this.state.subsampleskip+_this.state.subSampleTake);}var _acceptList2=getSameRecordFromTwoArrays(_sampleList2,_this.props.Login.masterData.RESelectedSubSample,\"ntransactionsamplecode\");var _saveParam3={userInfo:_this.props.Login.userInfo,isTestComment:_this.props.isTestComment,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\"):\"-1\"};inputParam=onSaveSubSampleComments(_saveParam3,_acceptList2);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openCommentModal\");}};_this.onAttachmentSaveClick=function(saveType,formRef,selectedRecord){var masterData=_this.props.Login.masterData;var inputData={};var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var _this$state7=_this.state,testskip=_this$state7.testskip,testtake=_this$state7.testtake,skip=_this$state7.skip,take=_this$state7.take;var testList=_toConsumableArray(_this.props.Login.masterData.RE_TEST);testList=testList.slice(testskip,testskip+testtake);var selectedTestList=getSameRecordFromTwoArrays(testList,_this.props.Login.masterData.RESelectedTest,\"ntransactiontestcode\");var sampleList=_toConsumableArray(_this.props.Login.masterData.RE_SAMPLE);sampleList=sampleList.slice(skip,skip+take);var selectedSampleList=getSameRecordFromTwoArrays(sampleList,_this.props.Login.masterData.RESelectedSample,\"npreregno\");if(_this.props.Login.screenName===\"IDS_SAMPLEATTACHMENTS\"){var saveParam={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,npreregno:_this.props.Login.masterData.RESelectedSample?_this.props.Login.masterData.RESelectedSample.map(function(x){return x.npreregno;}).join(\",\"):\"-1\"};inputParam=onSaveSampleAttachment(saveParam,selectedSampleList);}else if(_this.props.Login.screenName===\"IDS_TESTATTACHMENTS\"){var _saveParam4={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\"};inputParam=onSaveTestAttachment(_saveParam4,selectedTestList);}else if(_this.props.Login.screenName===\"IDS_SUBSAMPLEATTACHMENTS\"){var _saveParam5={userInfo:_this.props.Login.userInfo,selectedRecord:selectedRecord,masterData:_this.props.Login.masterData,saveType:saveType,formRef:formRef,operation:_this.props.Login.operation,selectedMaster:_this.props.selectedMaster,ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample?_this.props.Login.masterData.RESelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\"):\"-1\"};inputParam=onSaveSubSampleAttachment(_saveParam5,_this.props.Login.masterData.RESelectedSubSample);}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:_this.props.Login.operation,screenName:_this.props.Login.screenName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openAttachmentModal\");}};_this.onKeyPress=function(event,index,paremterResultcode){if(event.keyCode===13){for(var i=0;i<event.target.form.elements.length;i++){if(parseInt(event.target.form.elements[i].id)===paremterResultcode[index+1]){event.target.form.elements[i].focus();break;}}event.preventDefault();}};_this.onResultInputChange=function(parameterResults){_this.setState({parameterResults:_toConsumableArray(parameterResults),isParameterInitialRender:false// currentAlertResultCode,\n//  currentntestgrouptestpredefcode\n});};_this.onSampleAdd=function(selectedsubcode){_this.setState({selectedsubcode:_toConsumableArray(selectedsubcode),isaddSampleRender:false// currentAlertResultCode,\n//  currentntestgrouptestpredefcode\n});};_this.onSaveMean=function(saveType){var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var resultParameter=_this.props.Login.selectedTestParameterMean||{};//let resultParameter = { };\nresultParameter[\"ncalculatedresult\"]=4;resultParameter[\"sresult\"]=_this.state.testMean;resultParameter[\"sfinal\"]=numberConversion(parseFloat(_this.state.testMean),parseInt(resultParameter.nroundingdigit));resultParameter[\"ngradecode\"]=numericGrade(resultParameter,parseInt(_this.state.testMean));resultParameter['nenteredrole']=_this.props.Login.userInfo.nuserrole;resultParameter['nenteredby']=_this.props.Login.userInfo.nusercode;// resultParameter['ntransactionresultcode'] = meanParameter.ntransactionresultcode;\n// resultParameter['ntransactiontestcode'] = meanParameter.ntransactiontestcode;\n// resultParameter['nparametertypecode'] = meanParameter.nparametertypecode;\n//console.log(\"result:\", resultParameter);\nvar formData=new FormData();formData.append(\"filecount\",0);formData.append(\"nregtypecode\",nregtypecode);formData.append(\"nregsubtypecode\",nregsubtypecode);formData.append(\"ncontrolcode\",_this.props.Login.ncontrolcode);formData.append(\"transactiontestcode\",resultParameter.ntransactiontestcode);//formData.append(\"resultData\", JSON.stringify([resultParameter]));\nformData.append(\"resultData\",resultParameter);var inputParam={classUrl:\"resultentrybysample\",methodUrl:\"TestParameterResult\",inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:\"update\",displayName:_this.props.Login.inputParam.displayName,saveType:saveType};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.editpredefinedcomments=function(dataItem){var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"IDS_RESULTPARAMETERCOMMENTS\",openModal:true,selectedRecord:{'sresultcomment':dataItem['sresultcomment'],'selectedPredefinedComments':dataItem},operation:\"update\"}};_this.props.updateStore(updateInfo);};_this.enforceResult=function(dataItem){var inputParam={};inputParam={dataItem:dataItem,masterData:_this.props.Login.masterData,screenName:\"IDS_ENFORCERESULT\",openModal:true,operation:\"update\",ncontrolcode:dataItem['ncontrolcode']};_this.props.enforceResult(inputParam,_this.props.Login.userInfo);};_this.onSavePredefinedComments=function(saveType){var inputParam={};var stransactiontestcode=\"\";_this.props.Login.masterData.RESelectedTest.map(function(x){stransactiontestcode+=x['ntransactiontestcode']+\",\";});var inputData={'selectedPredefinedComments':_this.state.selectedRecord['selectedPredefinedComments'],'ntransactionresultcode':_this.state.selectedRecord['selectedPredefinedComments']['ntransactionresultcode'],'sresultcomment':_this.state.selectedRecord['sresultcomment'],'ntransactiontestcode':stransactiontestcode.substring(0,stransactiontestcode.length-1),//this.state.selectedRecord['selectedPredefinedComments']['ntransactiontestcode'],\n'userinfo':_this.props.Login.userInfo};inputParam={classUrl:'resultentrybysample',methodUrl:\"PredefinedComments\",inputData:inputData,//    isFileupload: false,\n//  activeTestKey: \"IDS_INSTRUMENT\",\noperation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveEnforceResult=function(saveType){var inputParam={};var stransactiontestcode=\"\";var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);// this.props.Login.masterData.RESelectedTest.map(x=>{ \n//     stransactiontestcode+=x['ntransactiontestcode']+\",\"\n// }\n//   )\nvar inputData={'ResultParameter':{//  ngradecode:this.state.selectedRecord['ngradecode'].value,\nnparametertypecode:parameterType.CHARACTER,sfinal:_this.state.selectedRecord['senforceresult'],senforceresultcomment:_this.state.selectedRecord['senforceresultcomment'],ntransactiontestcode:_this.state.selectedRecord['ntransactiontestcode'],ntransactionresultcode:_this.state.selectedRecord['ntransactionresultcode']},'ntransactionresultcode':_this.state.selectedRecord['ntransactionresultcode'],\"nregtypecode\":nregtypecode,\"nregsubtypecode\":nregsubtypecode,\"ndesigntemplatemappingcode\":ndesigntemplatemappingcode,'userinfo':_this.props.Login.userInfo};inputParam={classUrl:'resultentrybysample',methodUrl:\"EnforceResult\",inputData:inputData,operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onSaveClick=function(saveType,data){if(_this.props.Login.screenName===\"IDS_MEANPARAMETER\"){_this.onSaveMean(saveType);}else if(_this.props.Login.screenName===\"IDS_RESULTPARAMETERCOMMENTS\"){_this.onSavePredefinedComments(saveType);}else if(_this.props.Login.screenName===\"IDS_ENFORCERESULT\"){_this.onSaveEnforceResult(saveType);}else{var ResultParameter=_this.state.parameterResults;//this.props.Login.parameterResults\n//let ResultParameter = this.state.selectedRecord.ResultParameter || [];\n//    let ResultParameter = this.props.Login.parameterResults || [];\n// let ResultParameter = saveType.parameterResults || [];\nvar selectedRecord=_this.state.selectedRecord||{};var selectedRecordMaterialForm=_this.state.selectedRecordMaterialForm||{};var selectedRecordInstrumentForm=_this.state.selectedRecordInstrumentForm||{};var selectedRecordTaskForm=_this.state.selectedRecordTaskForm||{};var selectedId=_this.props.Login.selectedId||null;var additionalInfo=_this.state.selectedRecord.additionalInfo||[];var nregtypecode=parseInt(_this.props.Login.masterData.realRegTypeValue.nregtypecode);var nregsubtypecode=parseInt(_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);var ndesigntemplatemappingcode=parseInt(_this.props.Login.masterData.ndesigntemplatemappingcode&&_this.props.Login.masterData.ndesigntemplatemappingcode);var classUrl=\"resultentrybysample\";var formData=new FormData();var neditable=0;var resultParameters=[];var inputParam={};var inputData=[];var i=0;//const postParam = {inputListName: \"RESelectedTest\", selectedObject: \"RESelectedTest\", primaryKeyField: \"ntransactionstestcode\" };\nif(_this.props.Login.screenName===\"IDS_RESULTENTRY\"){if(ResultParameter.length>0&&ResultParameter!==undefined){ResultParameter.map(function(resultData,index){var results={};if(resultData.editable===true){neditable=1;switch(resultData.nparametertypecode){case 1:results[\"jsondata\"]={ncalculatedresult:resultData[\"ncalculatedresult\"],sresult:resultData.sresult,sfinal:resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\"};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=resultData[\"ncalculatedresult\"];results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\";results[\"ngradecode\"]=resultData.sresult!==\"\"?numericGrade(resultData,results[\"sfinal\"]):-1;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 2:results[\"jsondata\"]={ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sfinal,false),sresultcomment:resultData.sresultcomment==='null'?\"-\":resultData.sresultcomment,salertmessage:resultData.salertmessage,additionalInfo:resultData['additionalInfo'],additionalInfoUidata:resultData['additionalInfoUidata']===undefined?\"\":resultData['additionalInfoUidata'],ntestgrouptestpredefcode:resultData.ntestgrouptestpredefcode};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.ngradecode;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 3:results[\"jsondata\"]={ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sresult,false)};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.sresult.trim()===\"\"?-1:grade.FIO;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;results['ntransactionresultcode']=resultData.ntransactionresultcode;results['ntransactiontestcode']=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;break;case 4:if(resultData.sfinal.length>0){var splittedFileName=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.'):\"\";var fileExtension=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.')[splittedFileName.length-1]:\"\";var uniquefilename=create_UUID()+'.'+fileExtension;results[\"jsondata\"]={ssystemfilename:uniquefilename,nfilesize:resultData.sfinal[0]&&resultData.sfinal[0].size,ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sresult,false)};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=4;results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.sresult.trim()===\"\"?-1:grade.FIO;results[\"nenteredrole\"]=_this.props.Login.userInfo.nuserrole;results[\"nenteredby\"]=_this.props.Login.userInfo.nusercode;results[\"ntransactionresultcode\"]=resultData.ntransactionresultcode;results[\"ntransactiontestcode\"]=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;results[\"ssystemfilename\"]=uniquefilename;results[\"nfilesize\"]=resultData.sfinal[0]&&resultData.sfinal[0].size;formData.append(\"uploadedFile\"+index,resultData.sfinal[0]&&resultData.sfinal[0]);formData.append(\"uniquefilename\"+index,uniquefilename);formData.append(\"ntransactiontestcode\",resultData.ntransactiontestcode);i++;}else{var _splittedFileName=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.'):\"\";var _fileExtension=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.')[_splittedFileName.length-1]:\"\";var _uniquefilename=\"\";results[\"jsondata\"]={ssystemfilename:_uniquefilename,nfilesize:resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].size:\"\",ncalculatedresult:4,sresult:\"\",sfinal:\"\"};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=4;results[\"sresult\"]=\"\";results[\"sfinal\"]=\"\";results[\"ngradecode\"]=-1;results[\"nenteredrole\"]=_this.props.Login.userInfo.nuserrole;results[\"nenteredby\"]=_this.props.Login.userInfo.nusercode;results[\"ntransactionresultcode\"]=resultData.ntransactionresultcode;results[\"ntransactiontestcode\"]=resultData.ntransactiontestcode;results['nparametertypecode']=resultData.nparametertypecode;results[\"ssystemfilename\"]=\"\";results[\"nfilesize\"]=\"\";formData.append(\"uploadedFile\"+index,\"\");formData.append(\"uniquefilename\"+index,\"\");formData.append(\"ntransactiontestcode\",\"\");}break;default:break;}if(Object.values(results).length>0){resultParameters.push(results);}}return null;});if(neditable===0){var updateInfo={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false,parameterResults:[],selectedRecord:{}}};return _this.props.updateStore(updateInfo);}formData.append(\"filecount\",i);formData.append(\"nregtypecode\",nregtypecode);formData.append(\"nregsubtypecode\",nregsubtypecode);formData.append(\"ncontrolcode\",_this.props.Login.ncontrolcode);formData.append(\"ndesigntemplatemappingcode\",ndesigntemplatemappingcode);formData.append(\"resultData\",JSON.stringify(resultParameters));var tests=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"\";formData.append(\"transactiontestcode\",tests);//let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\ninputParam={classUrl:classUrl,methodUrl:\"TestParameterResult\",inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:\"update\",displayName:_this.props.Login.inputParam.displayName,saveType:saveType//, postParam\n};}else{var _updateInfo3={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false}};return _this.props.updateStore(_updateInfo3);}}if(_this.props.Login.screenName===\"IDS_RESULTENTRYPARAMETER\"){if(_this.state.selectedsubcode&&_this.state.selectedsubcode.length>0&&_this.state.selectedsubcode!==undefined){if(ResultParameter.length>0&&ResultParameter!==undefined){ResultParameter.map(function(resultData,index){var results={};if(resultData.editable===true){neditable=1;switch(resultData.nparametertypecode){case 1:results[\"jsondata\"]={ncalculatedresult:resultData[\"ncalculatedresult\"],sresult:resultData.sresult,sfinal:resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\"};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=resultData[\"ncalculatedresult\"];results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\";results[\"ngradecode\"]=resultData.sresult!==\"\"?numericGrade(resultData,results[\"sfinal\"]):-1;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;//results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n//results['ntransactiontestcode'] = resultData.ntransactiontestcode;\nresults['nparametertypecode']=resultData.nparametertypecode;results['ntestgrouptestparametercode']=resultData.ntestgrouptestparametercode;break;case 2:results[\"jsondata\"]={ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sfinal,false),sresultcomment:resultData.sresultcomment==='null'?\"-\":resultData.sresultcomment,salertmessage:resultData.salertmessage,additionalInfo:resultData['additionalInfo'],additionalInfoUidata:resultData['additionalInfoUidata']===undefined?\"\":resultData['additionalInfoUidata'],ntestgrouptestpredefcode:resultData.ntestgrouptestpredefcode};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.ngradecode;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;//results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n//results['ntransactiontestcode'] = resultData.ntransactiontestcode;\nresults['nparametertypecode']=resultData.nparametertypecode;results['ntestgrouptestparametercode']=resultData.ntestgrouptestparametercode;break;case 3:results[\"jsondata\"]={ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sresult,false)};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"sresult\"]=resultData.sresult;results[\"ncalculatedresult\"]=4;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.sresult.trim()===\"\"?-1:grade.FIO;results['nenteredrole']=_this.props.Login.userInfo.nuserrole;results['nenteredby']=_this.props.Login.userInfo.nusercode;//results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n//results['ntransactiontestcode'] = resultData.ntransactiontestcode;\nresults['nparametertypecode']=resultData.nparametertypecode;results['ntestgrouptestparametercode']=resultData.ntestgrouptestparametercode;break;case 4:if(resultData.sfinal.length>0){var splittedFileName=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.'):\"\";var fileExtension=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.')[splittedFileName.length-1]:\"\";var uniquefilename=create_UUID()+'.'+fileExtension;results[\"jsondata\"]={ssystemfilename:uniquefilename,nfilesize:resultData.sfinal[0]&&resultData.sfinal[0].size,ncalculatedresult:4,sresult:Lims_JSON_stringify(resultData.sresult,false),sfinal:Lims_JSON_stringify(resultData.sresult,false)};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=4;results[\"sresult\"]=resultData.sresult;results[\"sfinal\"]=resultData.sresult;results[\"ngradecode\"]=resultData.sresult.trim()===\"\"?-1:grade.FIO;results[\"nenteredrole\"]=_this.props.Login.userInfo.nuserrole;results[\"nenteredby\"]=_this.props.Login.userInfo.nusercode;//results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n//results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\nresults['ntestgrouptestparametercode']=resultData.ntestgrouptestparametercode;results['nparametertypecode']=resultData.nparametertypecode;results[\"ssystemfilename\"]=uniquefilename;results[\"nfilesize\"]=resultData.sfinal[0]&&resultData.sfinal[0].size;formData.append(\"uploadedFile\"+index,resultData.sfinal[0]&&resultData.sfinal[0]);formData.append(\"uniquefilename\"+index,uniquefilename);//formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\ni++;}else{var _splittedFileName2=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.'):\"\";var _fileExtension2=resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].name.split('.')[_splittedFileName2.length-1]:\"\";var _uniquefilename2=\"\";results[\"jsondata\"]={ssystemfilename:_uniquefilename2,nfilesize:resultData.sfinal?resultData.sfinal[0]&&resultData.sfinal[0].size:\"\",ncalculatedresult:4,sresult:\"\",sfinal:\"\"};results[\"jsonstring\"]=JSON.stringify(results[\"jsondata\"]);results[\"ncalculatedresult\"]=4;results[\"sresult\"]=\"\";results[\"sfinal\"]=\"\";results[\"ngradecode\"]=-1;results[\"nenteredrole\"]=_this.props.Login.userInfo.nuserrole;results[\"nenteredby\"]=_this.props.Login.userInfo.nusercode;//results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n//results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\nresults['nparametertypecode']=resultData.nparametertypecode;results['ntestgrouptestparametercode']=resultData.ntestgrouptestparametercode;results[\"ssystemfilename\"]=\"\";results[\"nfilesize\"]=\"\";formData.append(\"uploadedFile\"+index,\"\");formData.append(\"uniquefilename\"+index,\"\");//formData.append(\"ntransactiontestcode\", \"\");\n}break;default:break;}if(Object.values(results).length>0){resultParameters.push(results);}}return null;});if(neditable===0){var _updateInfo4={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false,parameterResults:[],selectedRecord:{}}};return _this.props.updateStore(_updateInfo4);}formData.append(\"filecount\",i);formData.append(\"nregtypecode\",nregtypecode);formData.append(\"nregsubtypecode\",nregsubtypecode);formData.append(\"ncontrolcode\",_this.props.Login.ncontrolcode);formData.append(\"ndesigntemplatemappingcode\",ndesigntemplatemappingcode);formData.append(\"resultData\",JSON.stringify(resultParameters));var _tests=_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"\";var sampleid=_this.state.selectedsubcode?_this.state.selectedsubcode.map(function(test){return test.ssampleid;}).join(\"','\"):\"\";formData.append(\"transactiontestcode\",_tests);formData.append(\"sampleid\",sampleid);formData.append(\"ntestcode\",_this.props.Login.masterData.realTestcodeValue&&_this.props.Login.masterData.realTestcodeValue.ntestcode);formData.append(\"nallottedspeccode\",_this.state.selectedRecord.nallottedspeccode.value);formData.append(\"nspecsampletypecode\",_this.state.selectedRecord.ncomponentcode.value);//let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\ninputParam={classUrl:classUrl,methodUrl:\"MultiSampleTestParameterResult\",inputData:{userinfo:_this.props.Login.userInfo},formData:formData,isFileupload:true,operation:\"update\",displayName:_this.props.Login.inputParam.displayName,saveType:saveType//, postParam\n};}else{var _updateInfo5={typeName:DEFAULT_RETURN,data:{loading:false,openModal:false}};return _this.props.updateStore(_updateInfo5);}}else{var _updateInfo6={typeName:DEFAULT_RETURN,data:{loading:false}};toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSAMPLE\"}));return _this.props.updateStore(_updateInfo6);}}if(_this.props.Login.screenName===\"IDS_TESTMETHODSOURCE\"){inputData={ntype:3,nflag:3,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:_this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,ntranscode:_this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),ntestcode:_this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:_this.props.Login.masterData.RESelectedSample&&_this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"),ntransactionsamplecode:_this.props.Login.masterData.RESelectedSubSample&&_this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample.ntransactionsamplecode;}).join(\",\"),nmethodcode:selectedRecord.nmethodcode.value,nsourcecode:selectedRecord.nsourcecode.value,ntransactiontestcode:selectedRecord.ntransactiontestcode,userinfo:_this.props.Login.userInfo,activeTestKey:\"IDS_RESULTS\",ncontrolcode:_this.props.Login.ncontrolcode};// inputParam = {\n//     classUrl: classUrl,\n//     methodUrl: \"TestMethodSource\",\n//     inputData: inputData,\n//     isFileupload: false,\n//     operation: \"update\",\n//     displayName: this.props.Login.inputParam.displayName, saveType//postParam\n// }\n_this.updateTestMethodSource(inputData,_this.props.Login.masterData,_this.props.Login.ncontrolcode);return;}if(_this.props.Login.screenName===\"IDS_INSTRUMENT\"){var _inputData3=[];if(_this.props.Login.operation===\"update\"){_inputData3={ResultUsedInstrument:{nresultusedinstrumentcode:selectedRecordInstrumentForm.nresultusedinstrumentcode,npreregno:selectedRecordInstrumentForm.npreregno,ninstrumentcatcode:selectedRecordInstrumentForm.ninstrumentcatcode.value,ninstrumentcode:selectedRecordInstrumentForm.ninstrumentcode.value,dfromdate:formatInputDate(selectedRecordInstrumentForm.dfromdate,false),dtodate:formatInputDate(selectedRecordInstrumentForm.dtodate,false),stzfromdate:selectedRecordInstrumentForm.ntzfromdate.label,stztodate:selectedRecordInstrumentForm.ntztodate.label,ntzfromdate:selectedRecordInstrumentForm.ntzfromdate.value,ntztodate:selectedRecordInstrumentForm.ntztodate.value,ntransactiontestcode:selectedRecordInstrumentForm.ntransactiontestcode},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\"};}else{_inputData3={ResultUsedInstrument:{ntransactiontestcode:selectedRecordInstrumentForm.ntransactiontestcode,npreregno:selectedRecordInstrumentForm.npreregno,ninstrumentcatcode:selectedRecordInstrumentForm.ninstrumentcatcode.value,ninstrumentcode:selectedRecordInstrumentForm.ninstrumentcode.value,dfromdate:formatInputDate(selectedRecordInstrumentForm.dfromdate,false),dtodate:formatInputDate(selectedRecordInstrumentForm.dtodate,false),stzfromdate:selectedRecordInstrumentForm.ntzfromdate.label,stztodate:selectedRecordInstrumentForm.ntztodate.label,ntzfromdate:selectedRecordInstrumentForm.ntzfromdate.value,ntztodate:selectedRecordInstrumentForm.ntztodate.value},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,transactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\"};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedInstrument\",inputData:_inputData3,selectedId:selectedId,isFileupload:false,activeTestKey:\"IDS_INSTRUMENT\",operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}if(_this.props.Login.screenName===\"IDS_MATERIAL\"){var _inputData4=[];if(_this.state.selectedRecordMaterialForm.nmaterialcode!=\"\"){if(_this.state.selectedRecordMaterialForm.nmaterialinventorycode!=\"\"){if(parseFloat(_this.state.selectedRecordMaterialForm.susedquantity)<=parseFloat(_this.state.selectedRecordMaterialForm.savailablequantity)){if(_this.props.Login.operation===\"update\"){_inputData4={ResultUsedMaterial:{nresultusedmaterialcode:selectedRecordMaterialForm.nresultusedmaterialcode,ntransactiontestcode:selectedRecordMaterialForm.ntransactiontestcode,npreregno:selectedRecordMaterialForm.npreregno,nmaterialtypecode:selectedRecordMaterialForm.nmaterialtypecode.value,nmaterialcategorycode:selectedRecordMaterialForm.nmaterialcategorycode.value,nmaterialcode:selectedRecordMaterialForm.nmaterialcode.value,ninventorycode:selectedRecordMaterialForm.nmaterialinventorycode.value,nsectioncode:selectedRecordMaterialForm.nsectioncode,jsondata:{sarno:selectedRecordMaterialForm.sarno,ssamplearno:selectedRecordMaterialForm.ssamplearno,stestsynonym:selectedRecordMaterialForm.stestsynonym,smaterialcatname:selectedRecordMaterialForm.nmaterialcatcode.label,smaterialname:selectedRecordMaterialForm.nmaterialcode.label,sinventoryid:selectedRecordMaterialForm.nmaterialinventorycode.label,nqtyused:selectedRecordMaterialForm.susedquantity,scarriergas:selectedRecordMaterialForm.scarriergas,smobilephase:selectedRecordMaterialForm.smobilephase,sremarks:selectedRecordMaterialForm.sremarks,susername:_this.props.Login.userInfo.susername,nsectioncode:selectedRecordMaterialForm.nsectioncode,ssectionname:selectedRecordMaterialForm.ssectionname,ntestgroupmaterial:selectedRecordMaterialForm.ntestgroupmaterial,ntestgrouptestcode:selectedRecordMaterialForm.ntestgroupmaterial==transactionStatus.YES?_this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode:-1}},MaterialInventoryTrans:{nmaterialinventorycode:selectedRecordMaterialForm.nmaterialinventorycode.value,nsectioncode:selectedRecordMaterialForm.nsectioncode,jsondata:{IDS_INVENTORYID:selectedRecordMaterialForm.nmaterialinventorycode.label,nqtyused:selectedRecordMaterialForm.susedquantity}},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,nresultusedmaterialcode:selectedRecordMaterialForm.nresultusedmaterialcode,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\").toString():\"\"};}else{_inputData4={ResultUsedMaterial:{ntransactiontestcode:selectedRecordMaterialForm.ntransactiontestcode,npreregno:selectedRecordMaterialForm.npreregno,nmaterialtypecode:selectedRecordMaterialForm.nmaterialtypecode.value,nmaterialcategorycode:selectedRecordMaterialForm.nmaterialcatcode.value,nmaterialcode:selectedRecordMaterialForm.nmaterialcode.value,ninventorycode:selectedRecordMaterialForm.nmaterialinventorycode.value,nsectioncode:selectedRecordMaterialForm.nsectioncode,jsondata:{sarno:selectedRecordMaterialForm.sarno,ssamplearno:selectedRecordMaterialForm.ssamplearno,stestsynonym:selectedRecordMaterialForm.stestsynonym,smaterialcatname:selectedRecordMaterialForm.nmaterialcatcode.label,smaterialname:selectedRecordMaterialForm.nmaterialcode.label,sinventoryid:selectedRecordMaterialForm.nmaterialinventorycode.label,nqtyused:selectedRecordMaterialForm.susedquantity,scarriergas:selectedRecordMaterialForm.scarriergas,smobilephase:selectedRecordMaterialForm.smobilephase,sremarks:selectedRecordMaterialForm.sremarks,smaterialtypename:selectedRecordMaterialForm.nmaterialtypecode.label,nsectioncode:selectedRecordMaterialForm.nsectioncode,ntestgroupmaterial:selectedRecordMaterialForm.ntestgroupmaterial,ssectionname:selectedRecordMaterialForm.ssectionname,ntestgrouptestcode:selectedRecordMaterialForm.ntestgroupmaterial==transactionStatus.YES?_this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode:-1}},MaterialInventoryTrans:{nmaterialinventorycode:selectedRecordMaterialForm.nmaterialinventorycode.value,nsectioncode:selectedRecordMaterialForm.nsectioncode,jsondata:{nqtyused:selectedRecordMaterialForm.susedquantity,IDS_INVENTORYID:selectedRecordMaterialForm.nmaterialinventorycode.label}},userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode,transactiontestcode:_this.props.Login.masterData.RESelectedTest?_this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\"};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedMaterial\",inputData:_inputData4,selectedId:selectedId,isFileupload:false,activeTestKey:\"IDS_MATERIAL\",operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}else{toast.warn(_this.props.intl.formatMessage({id:\"Quantity Not available\"}));return null;}}else{toast.warn(_this.props.intl.formatMessage({id:\"Select Material Inventory\"}));return null;}}else{toast.warn(_this.props.intl.formatMessage({id:\"Select Material\"}));return null;}}if(_this.props.Login.screenName===\"IDS_TASK\"){// if ((selectedRecord.sanalysistime && selectedRecord.sanalysistime !== \"\")\n//     || (selectedRecord.smisctime && selectedRecord.smisctime !== \"\")\n//     || (selectedRecord.spreanalysistime && selectedRecord.spreanalysistime !== \"\")\n//     || (selectedRecord.spreparationtime && selectedRecord.spreparationtime !== \"\")\n//     || (selectedRecord.scomments && selectedRecord.scomments !== \"\")) {\n//     if (this.props.Login.operation === \"update\") {\nif(selectedRecordTaskForm.sanalysistime&&selectedRecordTaskForm.sanalysistime!==\"\"||selectedRecordTaskForm.smisctime&&selectedRecordTaskForm.smisctime!==\"\"||selectedRecordTaskForm.spreanalysistime&&selectedRecordTaskForm.spreanalysistime!==\"\"||selectedRecordTaskForm.spreparationtime&&selectedRecordTaskForm.spreparationtime!==\"\"||selectedRecordTaskForm.scomments&&selectedRecordTaskForm.scomments!==\"\"){if(_this.props.Login.operation===\"update\"){inputData={ResultUsedTasks:{nresultusedtaskcode:selectedRecordTaskForm.nresultusedtaskcode,jsondata:{//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nsarno:_this.props.Login.masterData.RESelectedTest[0].sarno,ssamplearno:_this.props.Login.masterData.RESelectedTest[0].ssamplearno,stestsynonym:selectedRecordTaskForm.stestsynonym,sanalysistime:selectedRecordTaskForm.sanalysistime?selectedRecordTaskForm.sanalysistime:\"\",sanalyst:_this.props.Login.userInfo.susername,smisctime:selectedRecordTaskForm.smisctime?selectedRecordTaskForm.smisctime:\"\",spreanalysistime:selectedRecordTaskForm.spreanalysistime?selectedRecordTaskForm.spreanalysistime:\"\",spreparationtime:selectedRecordTaskForm.spreparationtime?selectedRecordTaskForm.spreparationtime:\"\",staskprocedure:selectedRecordTaskForm.staskprocedure?selectedRecordTaskForm.staskprocedure:\"\",scomments:selectedRecordTaskForm.scomments?selectedRecordTaskForm.scomments:\"\"}},userinfo:_this.props.Login.userInfo,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\"),nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode};}else{var taskArry=[];_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(test){return taskArry.push({//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nntransactiontestcode:parseInt(test.ntransactiontestcode),npreregno:parseInt(test.npreregno),// sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\n// sanalyst: this.props.Login.userInfo.susername,\n// smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\n// spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\n// spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\n// scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\n// npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\njsondata:{//ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\nsarno:test.sarno,ssamplearno:test.ssamplearno,stestsynonym:test.stestsynonym,sanalysistime:selectedRecordTaskForm.sanalysistime?selectedRecordTaskForm.sanalysistime:\"\",sanalyst:_this.props.Login.userInfo.susername,smisctime:selectedRecordTaskForm.smisctime?selectedRecordTaskForm.smisctime:\"\",spreanalysistime:selectedRecordTaskForm.spreanalysistime?selectedRecordTaskForm.spreanalysistime:\"\",spreparationtime:selectedRecordTaskForm.spreparationtime?selectedRecordTaskForm.spreparationtime:\"\",staskprocedure:selectedRecordTaskForm.staskprocedure?selectedRecordTaskForm.staskprocedure:\"\",scomments:selectedRecordTaskForm.scomments?selectedRecordTaskForm.scomments:\"\"}});});inputData={ResultUsedTasks:taskArry,userinfo:_this.props.Login.userInfo,ntransactiontestcode:_this.props.Login.masterData.RESelectedTest&&_this.props.Login.masterData.RESelectedTest.map(function(sample){return sample.ntransactiontestcode;}).join(\",\"),nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ndesigntemplatemappingcode:ndesigntemplatemappingcode};}inputParam={classUrl:classUrl,methodUrl:\"ResultUsedTasks\",inputData:inputData,selectedId:selectedId,activeTestKey:\"IDS_TASK\",isFileupload:false,operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ENTERTASKTIME\"}));return;}}if(_this.props.Login.screenName===\"IDS_PARAMETERCOMMENTS\"){inputData={ntransactiontestcode:selectedRecord.ntransactiontestcode,ntransactionresultcode:selectedRecord.ntransactionresultcode,sresultcomment:selectedRecord.sresultcomment,transactiontestcode:selectedRecord.transactiontestcode,userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode,ncontrolcode:_this.props.Login.ncontrolcode};// inputParam = {\n//     classUrl: classUrl,\n//     methodUrl: \"ParameterComments\",\n//     inputData: inputData, selectedId,\n//     isFileupload: false,\n//     operation: this.props.Login.operation,\n//     displayName: this.props.Login.inputParam.displayName, saveType//postParam\n// }\n_this.updateParameterComments(inputData,_this.props.Login.masterData,selectedRecord.ncontrolcode);return;}if(_this.props.Login.screenName===\"IDS_CHECKLISTRESULT\"){var lstResultCheckList=[];if(selectedRecord&&selectedRecord.editedQB){selectedRecord.editedQB.map(function(qbcode){return lstResultCheckList.push(selectedRecord[qbcode]);});inputData={ntransactiontestcode:selectedRecord.ntransactiontestcode.toString(),ntransactionresultcode:selectedRecord.ntransactionresultcode,transactiontestcode:selectedRecord.transactiontestcode,ResultCheckList:lstResultCheckList,userinfo:_this.props.Login.userInfo,nregtypecode:nregtypecode,nregsubtypecode:nregsubtypecode};inputParam={classUrl:classUrl,methodUrl:\"ResultEntryChecklist\",inputData:inputData,selectedId:selectedId,isFileupload:false,operation:_this.props.Login.operation,displayName:_this.props.Login.inputParam.displayName,saveType:saveType//postParam\n};}}var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var _updateInfo7={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(_updateInfo7);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}}};_this.searchSampleRef=React.createRef();_this.searchSubSampleRef=React.createRef();_this.searchTestRef=React.createRef();_this.childRef=React.createRef();_this.state={subSampleCommentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'groupingField' }] \n},subSampleAttachmentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'groupingField' }] \n},sampleGridDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},resultDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},instrumentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},materialDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},taskDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},documentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }]\n},resultChangeDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }]\n},testCommentDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},historyDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'stestsynonym' }] \n},sampleHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'sarno' }] \n},userRoleControlRights:[],controlMap:new Map(),masterStatus:\"\",error:\"\",operation:\"\",showSample:false,showSubSample:false,showTest:true,tabPane:0,subsampleskip:0,sampleListColumns:[],subSampleListColumns:[],testListColumns:[],TableExpandableItem:[],SingleItem:[],SampleGridItem:[],SampleGridExpandableItem:[],sampleListMainField:[],subSampleListMainField:[],testListMainField:[],testMoreField:[],selectedRecord:{},selectedRecordMaterialForm:{},selectedRecordInstrumentForm:{},selectedRecordTaskForm:{},validateFormulaMandyFields:[],splitChangeWidthPercentage:22,skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],subSampleSkip:0,subSampleTake:_this.props.Login.settings&&_this.props.Login.settings[12],// subsampletake: this.props.Login.settings\n// && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\ntestskip:0,testtake:_this.props.Login.settings&&_this.props.Login.settings[12],initialVerticalWidth:\"57vh\",enablePin:false,openELNSheet:false,enlLink:\"\",sampleSearchField:[],subsampleSearchField:[],testSearchField:[]};//openELNSheet: false\n_this.formRef=React.createRef();//this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\nreturn _this;}_createClass(ResultEntry,[{key:\"showRESampleInfo\",value:function showRESampleInfo(){this.setState({showSample:true,showTest:false});}},{key:\"showRETestList\",value:function showRETestList(){this.setState({showTest:true,showSample:false,showSubSample:false});}// getMeanTestParameter =(meanParam)=>{\n//     const inputData = {npreregno:meanParam.selectedRecord.npreregno,\n//                        userinfo:this.props.Login.userInfo}\n//     return rsapi.post(\"resultentrybysample/getMeanCalculationTestParameter\", inputData)\n//         .then(response => {\n//            const list =  response.data || [];\n//            const optionList = [];\n//            list.map(item=>{optionList.push({item:item, label:item.stestsynonym+\"-\"+item.sparametername+\"-\"+item.sresult, value:item.ntransactiontestresultcode})})\n//            this.setState({meanTestParameterList:optionList});                \n//         })\n//         .catch(error => {\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             } else {\n//                 toast.warn(error.response.data);\n//             }\n//         })\n// }\n},{key:\"showRESubSampleinfo\",value:function showRESubSampleinfo(){this.setState({showSample:false,showTest:true,showSubSample:!this.state.showSubSample});}},{key:\"sampleTabDetail\",value:// sampleTabDetail = () => {\n//     const tabMap = new Map();\n//     {\n//         this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\n//             tabMap.set(\"IDS_SAMPLEINFO\", <SampleInfoView\n//                 data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0 ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\n//                 SingleItem={this.state.SingleItem}\n//                 screenName=\"IDS_SAMPLEINFO\"\n//             />) :\n//             tabMap.set(\"IDS_SAMPLEGRID\", <SampleInfoGrid\n//                 selectedSample={this.props.Login.masterData.RESelectedSample}\n//                 dataState={this.state.dataState}\n//                 dataStateChange={this.dataStateChange}\n//                 detailedFieldList={this.state.SampleGridExpandableItem}\n//                 extractedColumnList={this.state.SampleGridItem}\n//                 userInfo={this.props.Login.userInfo}\n//                 inputParam={this.props.Login.inputParam}\n//                 screenName=\"IDS_SAMPLEGRID\"\n//             />)\n//         // tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <></>)\n//         // tabMap.set(\"IDS_SAMPLECOMMENTS\", <></>)\n//         // tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <></>)\n//         // tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <></>)\n//         return tabMap;\n//     }\n// }\nfunction sampleTabDetail(){var tabMap=new Map();var npreregno=this.props.Login.masterData.RESelectedSample?this.props.Login.masterData.RESelectedSample.map(function(sample){return sample.npreregno;}).join(\",\"):\"-1\";tabMap.set(\"IDS_SAMPLEATTACHMENTS\",/*#__PURE__*/React.createElement(Attachments,{screenName:\"IDS_SAMPLEATTACHMENTS\",selectedMaster:this.props.Login.masterData.RESelectedSample,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,attachments:this.props.Login.masterData.RegistrationAttachment||[],deleteRecord:this.props.deleteAttachment,onSaveClick:this.onAttachmentSaveClick,masterList:this.props.Login.masterData.RESelectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDATTACHEMENT\",fetchRecord:this.props.getAttachmentCombo,addName:\"AddSampleAttachment\",editName:\"EditSampleAttachment\",deleteName:\"DeleteSampleAttachment\",viewName:\"ViewSampleAttachment\",methodUrl:\"SampleAttachment\",nsubsampleneed:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,userInfo:this.props.Login.userInfo,deleteParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,screenName:this.props.Login.screenName},editParam:{methodUrl:\"SampleAttachment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,masterList:this.props.Login.masterData.RESelectedSample},selectedListName:\"IDS_ARNUMBER\",displayName:\"sarno\"}));tabMap.set(\"IDS_SAMPLECOMMENTS\",/*#__PURE__*/React.createElement(Comments,{screenName:\"IDS_SAMPLECOMMENTS\",onSaveClick:this.onCommentsSaveClick,selectedMaster:\"RESelectedSample\",controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,Comments:this.props.Login.masterData.RegistrationComment||[],fetchRecord:this.props.getCommentsCombo,masterData:this.props.Login.masterData,addName:\"AddSampleComment\",editName:\"EditSampleComment\",deleteName:\"DeleteSampleComment\",methodUrl:\"SampleComment\",isTestComment:false,masterList:this.props.Login.masterData.RESelectedSample,masterAlertStatus:\"IDS_SELECTSAMPLETOADDCOMMENTS\",primaryKeyField:\"nregcommentcode\",dataState:this.state.testCommentDataState,dataStateChange:this.testDataStateChange,deleteParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\"},editParam:{methodUrl:\"SampleComment\",npreregno:npreregno,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,esignRights:this.props.Login.userRoleControlRights,screenName:\"IDS_SAMPLECOMMENTS\",operation:\"update\",masterList:this.props.Login.masterData.RESelectedSample||[],ncontrolCode:this.state.controlMap.has(\"EditSampleComment\")&&this.state.controlMap.get(\"EditSampleComment\").ncontrolcode},selectedListName:\"IDS_ARNUMBER\",displayName:\"sarno\",selectedId:this.props.Login.selectedId||null}));tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",/*#__PURE__*/React.createElement(SampleApprovalHistory,{userInfo:this.props.Login.userInfo,ApprovalHistory:this.props.Login.masterData.SampleApprovalHistory,inputParam:this.props.Login.inputParam,dataState:this.state.sampleHistoryDataState,dataStateChange:this.sampleDataStateChange,masterData:this.props.Login.masterData,screenName:\"IDS_SAMPLEAPPROVALHISTORY\",controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedId:null}));return tabMap;}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height});}}},{key:\"getActiveTestURL\",value:function getActiveTestURL(){var url=\"resultentrybysample/getTestbasedParameter\";switch(this.props.Login.activeTestKey){case\"IDS_RESULTS\":url=\"resultentrybysample/getTestbasedParameter\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";break;case\"IDS_DOCUMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"resultentrybysample/getResultChangeHistory\";break;case\"IDS_APPROVALHISTORY\":url=\"resultentrybysample/getSampleApprovalHistory\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"resultentrybysample/getTestbasedParameter\";break;}return url;}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.props.Login.openModal&&this.props.Login.screenName==='IDS_MATERIAL'&&nextState.isMaterialInitialRender===false&&nextState.selectedRecordMaterialForm!==this.state.selectedRecordMaterialForm){return false;}else if(this.props.Login.openModal&&this.props.Login.screenName==='IDS_INSTRUMENT'&&nextState.isInstrumentInitialRender===false&&nextState.selectedRecordInstrumentForm!==this.state.selectedRecordInstrumentForm){return false;}else if(this.props.Login.openModal&&this.props.Login.screenName==='IDS_RESULTENTRY'&&nextState.isParameterInitialRender===false&&nextState.parameterResults!==this.state.parameterResults){return false;}else if(this.props.Login.openModal&&this.props.Login.screenName==='IDS_RESULTENTRYPARAMETER'&&nextState.isaddSampleRender===false&&nextState.parameterResults1!==this.state.parameterResults1){return false;}else if(this.props.Login.openModal&&this.props.Login.screenName==='IDS_TASK'&&nextState.isTaskInitialRender===false&&nextState.selectedRecordTaskForm!==this.state.selectedRecordTaskForm){return false;}else{return true;}}},{key:\"render\",value:function render(){var _testGetREParam,_fecthInputObject,_this2=this;// const auditInfoFields = [{ \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \n// { \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \n// { \"fieldName\": \"sfirstname\", \"label\": \"IDS_PATIENTNAME\" },\n// { \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\n// { \"fieldName\": \"sgendername\", \"label\": \"IDS_GENDER\" },\n// { \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\n// { \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\n// { \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\n// ];\nvar auditInfoFields=[{\"label\":this.props.Login.genericLabel&&this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\"fieldName\":\"sarno\"},{\"fieldName\":\"stestsynonym\",\"label\":\"IDS_TEST\"},{\"fieldName\":\"sfirstname\",\"label\":\"IDS_PATIENTNAME\"},{\"fieldName\":\"sgendername\",\"label\":\"IDS_GENDER\"}];// this.feildsForGrid =\n// [\n//   // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }, \n//   { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"100px\" },\n//   { \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"100px\" },      \n//   { \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"sparametersynonym\", \"width\": \"100px\" },\n//   { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"100px\" },\n//   { \"idsName\": \"IDS_GRADE\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\n// ];\nthis.feildsForGrid=[// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\n{\"idsName\":\"IDS_REPORTREFNO\",\"dataField\":\"sreportno\",\"width\":\"200px\"},{\"idsName\":this.props.Login.genericLabel&&this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\"dataField\":\"sarno\",\"width\":\"200px\"},{\"idsName\":this.props.Login.genericLabel&&this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\"dataField\":\"ssamplearno\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARAMETER\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULT\",\"dataField\":\"sfinal\",\"width\":\"200px\"},{\"idsName\":\"IDS_GRADE\",\"dataField\":\"sgradename\",\"width\":\"200px\"},{\"idsName\":\"IDS_REGISTRATIONDATE\",\"dataField\":\"sregdate\",\"width\":\"200px\"}];// console.log(this.state.enlLink);\n// console.log(this.state.enlLink);\nvar sampleListRE=this.props.Login.masterData.RE_SAMPLE?sortData(this.props.Login.masterData.RE_SAMPLE,\"descending\",\"npreregno\"):[];//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\n//let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\n//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ?  this.props.Login.masterData.RE_SUBSAMPLE : []\n//let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\n//let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\nvar subSampleListRE=this.props.Login.masterData.RE_SUBSAMPLE?this.props.Login.masterData.RE_SUBSAMPLE:[];//let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST : []\nvar testListRE=this.props.Login.masterData.RE_TEST?this.props.Login.masterData.RE_TEST:[];var startDate=this.props.Login.masterData.realFromDate||this.props.Login.masterData.fromDate||new Date();var endDate=this.props.Login.masterData.realToDate||this.props.Login.masterData.toDate||new Date();// let obj = this.covertDatetoString(startDate, endDate)\nvar obj=convertDateValuetoString(startDate,endDate,this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var subSampleGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample&&sample.npreregno;}).join(\",\"),fromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestTab||'IDS_RESULTS',activeSampleKey:this.props.Login.activeTestTab||'IDS_IDS_SAMPLEINFO',testskip:this.state.testskip,testtake:this.state.testtake,subSampleSkip:this.state.subSampleSkip,subSampleTake:this.state.subSampleTake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,sampleChangeDataState:this.state.sampleChangeDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,searchSubSampleRef:this.searchSubSampleRef,searchTestRef:this.searchTestRef,nneedtemplatebasedflow:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow||false,//Aravindh\ncheckBoxOperation:3,nworlistcode:this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1,nbatchmastercode:this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1,activeTabIndex:this.state.enableAutoClick&&this.state.activeTabIndex==undefined?8:this.state.enableAutoClick&&this.state.activeTabIndex==0?8:this.state.enableAutoClick?this.state.activeTabIndex:0};var testGetREParam=(_testGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntranscode:String(this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString()),ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample&&sample.npreregno;}).join(\",\"),activeTestKey:this.props.Login.activeTestTab||'IDS_RESULTS',activeSampleKey:this.props.Login.activeTestTab||'IDS_IDS_SAMPLEINFO',activeSubSampleTab:this.props.Login.activeTestTab||\"IDS_SUBSAMPLEATTACHMENTS\",resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,testskip:this.state.testskip,testtake:this.state.testtake,subSampleSkip:this.state.subSampleSkip,subSampleTake:this.state.subSampleTake},_defineProperty(_testGetREParam,\"resultDataState\",this.state.resultDataState),_defineProperty(_testGetREParam,\"instrumentDataState\",this.state.instrumentDataState),_defineProperty(_testGetREParam,\"materialDataState\",this.state.materialDataState),_defineProperty(_testGetREParam,\"taskDataState\",this.state.taskDataState),_defineProperty(_testGetREParam,\"documentDataState\",this.state.documentDataState),_defineProperty(_testGetREParam,\"resultChangeDataState\",this.state.resultChangeDataState),_defineProperty(_testGetREParam,\"testCommentDataState\",this.state.testCommentDataState),_defineProperty(_testGetREParam,\"historyDataState\",this.state.historyDataState),_defineProperty(_testGetREParam,\"samplePrintHistoryDataState\",this.state.samplePrintHistoryDataState),_defineProperty(_testGetREParam,\"sampleHistoryDataState\",this.state.sampleHistoryDataState),_defineProperty(_testGetREParam,\"activeTabIndex\",this.state.enableAutoClick&&this.state.activeTabIndex==undefined?1:this.state.enableAutoClick&&this.state.activeTabIndex==0?1:this.state.enableAutoClick?this.state.activeTabIndex:0),_defineProperty(_testGetREParam,\"nworlistcode\",this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1),_defineProperty(_testGetREParam,\"nbatchmastercode\",this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1),_testGetREParam);var testChildGetREParam={masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntransactionstatus:this.props.Login.masterData.realFilterStatusValue&&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,npreregno:this.props.Login.masterData.RESelectedSample&&this.props.Login.masterData.RESelectedSample.map(function(sample){return sample&&sample.npreregno;}).join(\",\"),ntransactionsamplecode:this.props.Login.masterData.RESelectedSubSample&&this.props.Login.masterData.RESelectedSubSample.map(function(sample){return sample&&sample.ntransactionsamplecode;}).join(\",\"),activeTestKey:this.props.Login.activeTestTab||'IDS_RESULTS',fromdate:fromDate,todate:toDate,testskip:this.state.testskip,testtake:this.state.testtake,resultDataState:this.state.resultDataState,instrumentDataState:this.state.instrumentDataState,materialDataState:this.state.materialDataState,taskDataState:this.state.taskDataState,documentDataState:this.state.documentDataState,resultChangeDataState:this.state.resultChangeDataState,testCommentDataState:this.state.testCommentDataState,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,activeTabIndex:this.state.enableAutoClick&&this.state.activeTabIndex==undefined?1:this.state.enableAutoClick&&this.state.activeTabIndex==0?1:this.state.enableAutoClick?this.state.activeTabIndex:0,//activeTabIndex: this.state.enableAutoClick ? this.state.activeTabIndex : this.state.activeTabIndex ? this.state.activeTabIndex : 1,\nnworlistcode:this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1,nbatchmastercode:this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1};var filterSampleParam={inputListName:\"RE_SAMPLE\",selectedObject:\"RESelectedSample\",primaryKeyField:\"npreregno\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],fecthInputObject:(_fecthInputObject={ntype:2,nflag:2,ntransactiontestcode:0,masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntranscode:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString():0:0),ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,//npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\nfromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestTab||'IDS_RESULTS',//nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\nnneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample?true:false,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,checkBoxOperation:3},_defineProperty(_fecthInputObject,\"ndesigntemplatemappingcode\",this.props.Login.masterData.ndesigntemplatemappingcode&&this.props.Login.masterData.ndesigntemplatemappingcode||-1),_defineProperty(_fecthInputObject,\"nworlistcode\",this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1),_defineProperty(_fecthInputObject,\"nbatchmastercode\",this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1),_fecthInputObject),masterData:this.props.Login.masterData,// searchFieldList: [\"sarno\", \"ssampletypestatus\"],\nsearchFieldList:this.state.sampleSearchField,changeList:[\"RE_SUBSAMPLE\",\"RE_TEST\",\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedSample\",\"RESelectedSubSample\",\"RESelectedTest\"]};var filterSubSampleParam={inputListName:\"RE_SUBSAMPLE\",selectedObject:\"RESelectedSubSample\",primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"resultentrybysample/getResultEntrySubSampleDetails\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],fecthInputObject:{ntype:3,nflag:3,ntransactiontestcode:0,masterData:this.props.Login.masterData,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,napprovalversioncode:this.props.Login.masterData.realApproveConfigVersion&&this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,ntranscode:String(this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus?this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString():0:0),ntestcode:this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.ntestcode,//npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\nfromdate:fromDate,todate:toDate,activeTestKey:this.props.Login.activeTestTab||'IDS_RESULTS',nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample?true:false,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,checkBoxOperation:3,nworlistcode:this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1,nbatchmastercode:this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1},masterData:this.props.Login.masterData,// searchFieldList: [\"sarno\", \"ssampletypestatus\"],\nsearchFieldList:this.state.subsampleSearchField,changeList:[\"RE_TEST\",\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedSubSample\",\"RESelectedTest\"]};var filterTestParam={inputListName:\"RE_TEST\",selectedObject:\"RESelectedTest\",primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),fecthInputObject:{ntransactiontestcode:this.props.Login.masterData.RESelectedTest?this.props.Login.masterData.RESelectedTest.map(function(test){return test.ntransactiontestcode;}).join(\",\"):\"-1\",userinfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode&&this.props.Login.masterData.ndesigntemplatemappingcode||-1,nworlistcode:this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode||-1,nbatchmastercode:this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode||-1},masterData:this.props.Login.masterData,searchFieldList:this.state.testSearchField,changeList:[\"TestParameters\",\"ResultChangeHistory\",\"ApprovalHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\",\"RegistrationAttachment\",\"RESelectedTest\"],ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,nneedsubsample:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample?true:false,checkBoxOperation:3//nworlistcode : (this.props.Login.masterData.defaultWorklistvalue && this.props.Login.masterData.defaultWorklistvalue.nworklistcode) || -1\n};this.postParamList=[{filteredListName:\"searchedSample\",clearFilter:\"no\",searchRef:this.searchSampleRef,primaryKeyField:\"npreregno\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",fecthInputObject:filterSampleParam,selectedObject:\"RESelectedSample\",inputListName:\"RE_SAMPLE\",updatedListname:\"\",childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedSubSample\",updatedListname:\"updatedSubSample\",clearFilter:\"no\",searchRef:this.searchSubSampleRef,primaryKeyField:\"ntransactionsamplecode\",fetchUrl:\"resultentrybysample/getResultEntryDetails\",fecthInputObject:testGetREParam,selectedObject:\"RESelectedSubSample\",childRefs:[{ref:this.searchTestRef,childFilteredListName:\"searchedTest\"}],inputListName:\"RE_SUBSAMPLE\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]},{filteredListName:\"searchedTest\",clearFilter:\"yes\",searchRef:this.searchTestRef,primaryKeyField:\"ntransactiontestcode\",fetchUrl:this.getActiveTestURL(),childRefs:[{ref:this.searchSubSampleRef,childFilteredListName:\"searchedSubSample\"},{ref:this.searchSampleRef,childFilteredListName:\"\"}],fecthInputObject:testChildGetREParam,selectedObject:\"RESelectedTest\",inputListName:\"RE_TEST\",updatedListname:\"updatedTest\",unchangeList:[\"realSampleTypeValue\",\"SampleTypeValue\",\"realRegTypeValue\",\"RegTypeValue\",\"realRegSubTypeValue\",\"RegSubTypeValue\",\"realApprovalVersionValue\",\"ApprovalVersionValue\",\"realFilterStatusValue\",\"FilterStatusValue\",\"fromDate\",\"toDate\",\"UserSectionValue\",\"SampleType\",\"RegType\",\"RegSubType\",\"ApprovalVersion\",\"JobStatus\",\"JobStatusValue\",\"FilterStatus\"]}];this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// },\n{\"label\":\"IDS_TEST\",\"value\":this.props.Login.masterData.realTestcodeValue&&this.props.Login.masterData.realTestcodeValue.stestsynonym?this.props.Login.masterData.realTestcodeValue.stestsynonym:\"NA\"},{\"label\":\"IDS_TESTSTATUS\",\"value\":this.props.Login.masterData.realFilterStatusValue?this.props.Login.masterData.realFilterStatusValue.sfilterstatus:\"NA\"}];if(this.props.Login.masterData.realWorklistCodeValue&&this.props.Login.masterData.realWorklistCodeValue.nworklistcode){this.breadCrumbData.push({\"label\":\"IDS_WORKLIST\",\"value\":this.props.Login.masterData.realWorklistCodeValue?this.props.Login.masterData.realWorklistCodeValue.sworklistno:\"NA\"});}if(this.props.Login.masterData.realBatchCodeValue&&this.props.Login.masterData.realBatchCodeValue.nbatchmastercode){this.breadCrumbData.push({\"label\":\"IDS_BATCH\",\"value\":this.props.Login.masterData.realBatchCodeValue?this.props.Login.masterData.realBatchCodeValue.sbatcharno:\"NA\"});}var testStartId=this.state.controlMap.has(\"TestStart\")&&this.state.controlMap.get(\"TestStart\").ncontrolcode;var resultEnterId=this.state.controlMap.has(\"ResultEnter\")&&this.state.controlMap.get(\"ResultEnter\").ncontrolcode;var completeResultId=this.state.controlMap.has(\"CompleteResult\")&&this.state.controlMap.get(\"CompleteResult\").ncontrolcode;var setDefaultId=this.state.controlMap.has(\"SetDefaultResult\")&&this.state.controlMap.get(\"SetDefaultResult\").ncontrolcode;var editSourceMethodId=this.state.controlMap.has(\"EditSourceMethod\")&&this.state.controlMap.get(\"EditSourceMethod\").ncontrolcode;var addResultUsedInstrumentId=this.state.controlMap.has(\"AddResultUsedInstrument\")&&this.state.controlMap.get(\"AddResultUsedInstrument\").ncontrolcode;var addResultUsedMaterailId=this.state.controlMap.has(\"AddResultUsedMaterial\")&&this.state.controlMap.get(\"AddResultUsedMaterial\").ncontrolcode;var adhocId=this.state.controlMap.has(\"AdhocParameter\")&&this.state.controlMap.get(\"AdhocParameter\").ncontrolcode;var openELNSheet=this.state.controlMap.has(\"OpenELNSheet\")&&this.state.controlMap.get(\"OpenELNSheet\").ncontrolcode;var patientPreviousResultView=this.state.controlMap.has(\"PatientPreviousResultView\")&&this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode;var identicalResultEnterId=this.state.controlMap.has(\"IdenticalResultEnter\")&&this.state.controlMap.get(\"IdenticalResultEnter\").ncontrolcode;var mandatoryFieldsInstrument=[{\"mandatory\":true,\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"ninstrumentcatcode\"},{\"mandatory\":true,\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"ninstrumentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_FORMDATE\",\"dataField\":\"dfromdate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TODATE\",\"dataField\":\"dtodate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntzfromdate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntztodate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsMaterial=[{\"mandatory\":true,\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"nmaterialtypecode\"},{\"mandatory\":true,\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"nmaterialcatcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"nmaterialcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"nmaterialinventorycode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_AVAILABLEQUANTITY\",\"dataField\":\"savailablequantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsTask=[{\"mandatory\":true,\"idsName\":\"IDS_PREANALYSISTIME\",\"dataField\":\"spreanalysistime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_PREPARATIONTIME\",\"dataField\":\"spreparationtime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_ANALYSISTIME\",\"dataField\":\"sanalysistime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_MISCTIME\",\"dataField\":\"smisctime\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var mandatoryFieldsTestMethodSource=[{\"mandatory\":true,\"idsName\":\"IDS_SOURCE\",\"dataField\":\"nsourcecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_METHOD\",\"dataField\":\"nmethodcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryEnforceResult=[{\"mandatory\":true,\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforceresult\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"mandatory\":true,\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"senforceresultcomment\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}// { \"mandatory\": true, \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"ngradecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\" },\n];var mandatoryFieldsParameter=[{\"mandatory\":true,\"idsName\":\"IDS_PARAMETERCOMMENTS\",\"dataField\":\"sresultcomment\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var validateFormulaMandyFields=this.state.validateFormulaMandyFields;var reportPreviewId=this.state.controlMap.has(\"SamplePreviewReport\")&&this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;var testDesign=/*#__PURE__*/React.createElement(ContentPanel,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_TEST\"})))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0 sm-pager\"},/*#__PURE__*/React.createElement(TransactionListMasterJsonView,{progressTimerStart:this.props.Login.progressTimerStart||false,clickIconGroup:true,cardHead:94//paneHeight={this.state.initialVerticalWidth}\n// paneHeight={`${testListRE && testListRE !== null && testListRE.length > 0 ? testListRE.length * 13 : 5}vh`}\n,masterList:this.props.Login.masterData.searchedTest||testListRE,selectedMaster:this.props.Login.masterData.RESelectedTest,primaryKeyField:\"ntransactiontestcode\"//getMasterDetail={this.props.getTestChildTabREDetail}\n,getMasterDetail:function getMasterDetail(event,status){_this2.props.getTestChildTabREDetail(event,status);_this2.changePropertyView(1,\"IDS_RESULTS\",event,\"click\");},inputParam:testChildGetREParam,subFieldsLabel:true,additionalParam:[],mainField:\"stestsynonym\",selectedListName:\"RESelectedTest\",objectName:\"test\",listName:\"IDS_TEST\",pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",needMultiSelect:true,subFields:this.state.testListColumns||[],moreField:this.state.testMoreField,needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedTest\",searchRef:this.searchTestRef,filterParam:filterTestParam,selectionField:\"ntransactionstatus\",showStatusName:true,selectionFieldName:\"sfilterstatus\",childTabsKey:[\"TestParameters\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"ResultChangeHistory\",\"RegistrationTestComment\",\"ResultChangeHistory\"// , \"RegistrationComment\"\n]// selectionList={this.props.Login.masterData.REFilterStatus && this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.REFilterStatus : []}\n,selectionList:this.state.selectedFilter,skip:this.state.testskip,take:this.state.testtake,handlePageChange:this.handleTestPageChange,selectionColorField:\"scolorhexcode\",showMoreResetList:true,showMoreResetListName:\"RE_SAMPLE\",buttonCount:5,jsonField:'jsondata',jsonDesignFields:true,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_OPENELNSHEET\"}),controlname:\"elnimage\",hidden:this.state.userRoleControlRights.indexOf(openELNSheet)===-1,onClick:this.openClosePortal,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,elnUserInfo:this.props.Login.elnUserInfo,elnSite:this.props.Login.elnSite}},{title:this.props.intl.formatMessage({id:\"IDS_PREVIOUSRESULTVIEW\"}),controlname:\"faEye\",dataplace:\"left\",hidden:this.state.userRoleControlRights.indexOf(patientPreviousResultView)===-1,onClick:this.viewSample,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo}},{title:this.props.intl.formatMessage({id:\"IDS_EDITMETHODSSOURCE\"}),controlname:\"faPencilAlt\",dataplace:\"left\",hidden:this.state.userRoleControlRights.indexOf(editSourceMethodId)===-1,onClick:this.testMethodSourceEdit,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,editSourceMethodId:editSourceMethodId}},{title:this.props.intl.formatMessage({id:\"IDS_ADHOCPARAMETER\"}),controlname:\"faAdhocParameter\",dataplace:\"left\",hidden:this.state.userRoleControlRights.indexOf(adhocId)===-1,onClick:this.adhocTestParameter,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,adhocId:adhocId}},//{ title: this.props.intl.formatMessage({ id: \"IDS_EDITMETHODSSOURCE\" }), controlname: \"faPencilAlt\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\n{title:this.props.intl.formatMessage({id:\"IDS_ADDINSTRUMENT\"}),controlname:\"faMicroscope\",hidden:false,onClick:this.addREInstrument,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedInstrumentId:addResultUsedInstrumentId}},{title:this.props.intl.formatMessage({id:\"IDS_ADDMATERIAL\"}),controlname:\"faFlask\",hidden:false,onClick:this.props.addREMaterial,objectName:\"test\",inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,addResultUsedMaterailId:addResultUsedMaterailId}}// { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\n],commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex justify-content-end icon-group-wrap\"},testListRE.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedtestinitiate?/*#__PURE__*/React.createElement(FontIconWrap//  data-for=\"tooltip-common-wrap\" \n,{\"data-tip\":this.props.intl.formatMessage({id:\"IDS_TESTSTART\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.testStartActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,testStartId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay})):\"\",/*#__PURE__*/React.createElement(Nav.Link,{// data-for=\"tooltip-common-wrap\"\n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENTERRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(resultEnterId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.props.resultGetModule(_this2.props.Login.masterData,_this2.props.Login.userInfo,resultEnterId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook})),/*#__PURE__*/React.createElement(Nav.Link,{// data-for=\"tooltip-common-wrap\" \n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_FILLDEFAULTRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(setDefaultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.defaultActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.masterData.RESelectedSample,setDefaultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilRuler})),/*#__PURE__*/React.createElement(Nav.Link,{// data-for=\"tooltip-common-wrap\"\n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),hidden:this.state.userRoleControlRights.indexOf(completeResultId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.completeActions(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake,3);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle})),/*#__PURE__*/React.createElement(Nav.Link,{//data-for=\"tooltip-common-wrap\" \n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTRESULT\"}),hidden:true,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.resultImport(testChildGetREParam,_this2.props.Login.masterData.RESelectedTest,_this2.props.Login.userInfo,completeResultId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))):\"\")// </Tooltip>\n}))));var mainDesign=\"\";if(this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nneedsubsample){mainDesign=/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:30},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottom:\"0px\"}},/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title\"},this.props.intl.formatMessage({id:\"IDS_SUBSAMPLE\"})))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0 sm-pager\"},/*#__PURE__*/React.createElement(TransactionListMasterJsonView,{cardHead:94//paneHeight={this.state.initialVerticalWidth}\n,masterList:this.props.Login.masterData.searchedSubSample||subSampleListRE,selectedMaster:this.props.Login.masterData.RESelectedSubSample,primaryKeyField:\"ntransactionsamplecode\",getMasterDetail:this.props.getTestREDetail,inputParam:testGetREParam,additionalParam:[],mainField:\"ssamplearno\",selectedListName:\"RESelectedSubSample\",objectName:\"subSample\",listName:\"IDS_SUBSAMPLE\",jsonField:'jsondata',jsonDesignFields:true,subFields:this.state.DynamicSubSampleColumns,moreField:this.state.subSampleMoreField,needValidation:false,needMultiSelect:true,needFilter:false,skip:this.state.subSampleSkip,take:this.state.subSampleTake,pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),handlePageChange:this.handleSubSamplePageChange,showStatusLink:true,showStatusName:false,selectionList:this.state.selectedFilter,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",selectionFieldName:\"sfilterstatus\",selectionField:\"ntransactionstatus\",childTabsKey:[\"RE_TEST\",\"Registration\",\"RegistrationSampleComment\",\"RegistrationSampleAttachment\"],filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSubSample\",searchRef:this.searchSubSampleRef,filterParam:filterSubSampleParam,subFieldsFile:true}))),testDesign);}else{mainDesign=testDesign;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true,bsPrefix:\"toolbar-top\"},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(ListWrapper,{className:\"vertical-tab-top \".concat(this.state.enablePropertyPopup?'active-popup':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"tab-left-area \".concat(this.state.activeTabIndex?'active':\"\",\" \").concat(this.state.enablePropertyPopup?'active-popup':\"\")},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:this.state.splitChangeWidthPercentage//onSecondaryPaneSizeChange={this.paneSizeChange} \n,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(\"div\",{className:\"toolbar-top-inner\"},/*#__PURE__*/React.createElement(TransactionListMasterJsonView,{clickIconGroup:true// paneHeight={this.state.parentHeight}\n,splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:this.props.Login.masterData.searchedSample||sampleListRE,selectedMaster:this.props.Login.masterData.RESelectedSample,primaryKeyField:\"npreregno\",getMasterDetail:this.props.getsubSampleREDetail,inputParam:subSampleGetREParam,additionalParam:['napprovalversioncode'],mainField:\"sarno\",selectedListName:\"RESelectedSample\",objectName:\"sample\",listName:\"IDS_SAMPLE\",needValidation:false,validationKey:\"napprovalversioncode\",validationFailMsg:\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",subFields:this.state.DynamicSampleColumns||[],moreField:this.state.sampleMoreField,needFilter:true,needMultiSelect:true,showFilter:this.props.Login.showFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onREFilterSubmit,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedSample\",searchRef:this.searchSampleRef,handlePageChange:this.handlePageChange,filterParam:filterSampleParam,skip:this.state.skip,take:this.state.take,hidePaging:false,showStatusLink:true,showStatusName:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\"//splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n,childTabsKey:[\"RegistrationAttachment\",\"RE_SUBSAMPLE\",\"RE_TEST\",\"SampleApprovalHistory\",\"RegistrationComment\",\"RegistrationSampleComment\",\"RegistrationSampleAttachment\"],selectionList:this.state.selectedFilter,selectionColorField:\"scolorhexcode\",selectionFieldName:\"sfilterstatus\",selectionField:\"ntransactionstatus\",jsonField:'jsondata',jsonDesignFields:true,callCloseFunction:true,filterComponent:[{\"Sample Filter\":/*#__PURE__*/React.createElement(ResultEntryFilter,{fromDate:this.props.Login.masterData.fromDate?//new Date(this.props.Login.masterData.fromDate) \nrearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):new Date(),toDate:this.props.Login.masterData.toDate?//new Date(this.props.Login.masterData.toDate) \nrearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):new Date(),SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.props.Login.masterData.defaultRegistrationSubType||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.REFilterStatus||[],FilterStatusValue:this.props.Login.masterData.defaultFilterStatus||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.props.Login.masterData.defaultApprovalConfigVersion||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],Batch:this.state.Batchvalues||[],BatchValue:this.props.Login.masterData.defaultBatchvalue||[],Worklist:this.state.Worklistvalues||[],WorklistValue:this.props.Login.masterData.defaultWorklistvalue||[],TestValue:this.props.Login.masterData.defaultTestvalues||[],ConfigurationFilter:this.state.ConfigurationFilterValues||[],ConfigurationFilterValue:this.props.Login.masterData.defaultConfigurationFilterValue||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}],actionIcons:[this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL?{title:\"Report\",controlname:\"reports\",objectName:\"sample\",hidden:this.state.userRoleControlRights.indexOf(reportPreviewId)===-1,onClick:this.props.previewSampleReport,inputData:{userinfo:this.props.Login.userInfo,ncontrolcode:reportPreviewId}}:{}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode===SampleType.CLINICALTYPE?/*#__PURE__*/React.createElement(Nav.Link,{// data-for=\"tooltip-common-wrap\"\n\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENTERIDENTICALRESULT\"}),hidden:this.state.userRoleControlRights.indexOf(identicalResultEnterId)===-1,className:\"btn btn-circle outline-grey ml-2\",role:\"button\",onClick:function onClick(){return _this2.props.resultEntryGetSpec(_this2.props.Login.masterData,_this2.props.Login.userInfo,resultEnterId,_this2.state.testskip,_this2.state.testtake);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAddressBook})):\"\",/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this2.onReload();},\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}}))))})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:this.state.showTest===true?{display:\"block\",background:\"#FFFF\"}:{display:\"none\",background:\"#FFFF\"}},mainDesign)))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.state.enablePropertyPopup?'active-popup':\"\",\" vertical-tab \").concat(this.state.activeTabIndex?'active':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.state.enablePropertyPopup?'active-popup':\"\",\" vertical-tab-content pager_wrap wrap-class \").concat(this.state.activeTabIndex?'active':\"\"),style:{width:this.state.enablePropertyPopup?this.state.propertyPopupWidth+'%':\"\"}},/*#__PURE__*/React.createElement(\"span\",{className:\" vertical-tab-close \".concat(this.state.activeTabIndex?'active':\"\"),onClick:function onClick(){return _this2.changePropertyViewClose(false);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronRight}),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-common sm-view-v-t position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==1?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),this.state.activeTabIndex&&this.state.activeTabIndex==1?this.sideNavDetail(\"IDS_RESULTS\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-grid position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==2?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),this.state.activeTabIndex&&this.state.activeTabIndex==2?this.sideNavDetail(\"IDS_ATTACHMENTS\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-grid-tab position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==3?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),this.state.activeTabIndex&&this.state.activeTabIndex==3?this.sideNavDetail(\"IDS_COMMENTS\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-grid position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==4?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},this.props.intl.formatMessage({id:\"IDS_INSTRUMENT\"})),this.state.activeTabIndex&&this.state.activeTabIndex==4?this.sideNavDetail(\"IDS_INSTRUMENT\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-comments vertical-tab-content-common position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==5?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},this.props.intl.formatMessage({id:\"IDS_MATERIAL\"})),this.state.activeTabIndex&&this.state.activeTabIndex==5?this.sideNavDetail(\"IDS_MATERIAL\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-comments vertical-tab-content-common position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==6?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},this.props.intl.formatMessage({id:\"IDS_TASK\"})),this.state.activeTabIndex&&this.state.activeTabIndex==6?this.sideNavDetail(\"IDS_TASK\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-comments vertical-tab-content-common position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==7?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},this.props.intl.formatMessage({id:\"IDS_TESTAPPROVALHISTORY\"})),this.state.activeTabIndex&&this.state.activeTabIndex==7?this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\"):\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-comments vertical-tab-content-common position-relative \".concat(this.state.activeTabIndex&&this.state.activeTabIndex==8?'active':\"\")},/*#__PURE__*/React.createElement(Nav.Link,{className:\"tab-expand-collapse-btn p-0\",onClick:function onClick(){return _this2.setState({enablePropertyPopup:!_this2.state.enablePropertyPopup});}},!this.state.enablePropertyPopup?/*#__PURE__*/React.createElement(\"img\",{src:fullviewExpand,alt:\"Fullview\",width:\"20\",height:\"20\"}):/*#__PURE__*/React.createElement(\"img\",{src:fullviewCollapse,alt:\"Collapse\",width:\"24\",height:\"24\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},this.props.intl.formatMessage({id:\"IDS_SAMPLEDETAILS\"})),this.state.activeTabIndex&&this.state.activeTabIndex==8?this.sideNavDetail(\"IDS_SAMPLEDETAILS\"):\"\")),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-head\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==1?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(1,\"IDS_RESULTS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileInvoice,\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_RESULT\"})}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_RESULT\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==2?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(2,\"IDS_ATTACHMENTS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLink}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_ATTACHMENTS\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==3?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(3,\"IDS_COMMENTS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faComments}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==4?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(4,\"IDS_INSTRUMENT\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMicroscope}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_INSTRUMENT\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==5?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(5,\"IDS_MATERIAL\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFlask}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_MATERIAL\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==6?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(6,\"IDS_TASK\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCommentDots}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_TASK\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(this.state.activeTabIndex&&this.state.activeTabIndex==8?'active':\"\"),onClick:function onClick(){return _this2.changePropertyView(8,\"IDS_SAMPLEDETAILS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_SAMPLEDETAILS\"})))),/*#__PURE__*/React.createElement(\"span\",{className:\"tab-click-toggle-btn\"},/*#__PURE__*/React.createElement(CustomSwitch// label={\"Auto Show\"}\n,{label:this.props.intl.formatMessage({id:\"IDS_AUTOSHOW\"}),type:\"switch\",name:\"Auto Click\",onChange:function onChange(event){return _this2.onInputSwitchOnChange(event);},defaultValue:this.state.enableAutoClick,isMandatory:false,required:true,checked:this.state.enableAutoClick})))))))),/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{centered:true,scrollable:true,bsPrefix:\"model model_zindex\",show:this.props.Login.openELNSheet// show={this.state.openELNSheet}\n,onHide:this.openClosePortal,dialogClassName:\"\".concat(this.props.nflag&&this.props.nflag===2?'alert-popup':'',\" modal-fullscreen\"),backdrop:\"static\",keyboard:false,enforceFocus:false,\"aria-labelledby\":\"example-custom-modal-styling-title\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{style:{\"line-height\":\"1.0\"},id:\"example-custom-modal-styling-title\"},this.props.intl.formatMessage({id:\"IDS_ELNSHEET\"})),/*#__PURE__*/React.createElement(ReactTooltip,{globalEventOff:\"true\"})),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal-inner-content\"},/*#__PURE__*/React.createElement(Iframe,{url:this.props.Login.masterData.enlLink,width:\"98%\",height:\"1000px\",id:\"reportviewID\",className:\"reportview\"//display=\"initial\"\n/// position=\"relative\" \n})))))),/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(ModalShow,{modalShow:this.props.Login.showAlertGrid,modalTitle:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?this.props.intl.formatMessage({id:\"IDS_ADDITIONALINFOREQURIED\"})//this.props.Login.onlyAlertMsgAvailable?\"Alert\":this.props.Login.masterData['salertmessage']\n// :this.props.intl.formatMessage({ id: \"IDS_COMPLETETHEFOLLOWINGTESTS\" })} \n:this.props.intl.formatMessage({id:\"IDS_RULECOMPLETEVALIDATION\"})//  needCloseButton={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\n,closeModal:this.closeModalShow,rulesenginealret:true,onSaveClick:this.props.Login.showAlertGrid==true?this.onskiprule:this.onModalSave,removeCancel:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false// needSubmit={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\n,needSubmit:true,needSave:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":true,selectedRecord:this.state.selectedRecord||{}// mandatoryFields={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\n//     this.mandatoryFieldsForAdditionalInfo():\"\"}\n,size:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":'lg',showAlertMsg:this.props.Login.showAlertForPredefined?true:false,modalBody:this.props.Login.additionalInfoView?this.state.selectedRecord['additionalResultData']:this.props.Login.showAlertForPredefined?/*#__PURE__*/React.createElement(ResultEntryPredefinedComments,{onlyAlertMsgAvailable:this.props.Login.onlyAlertMsgAvailable,salertmessage:this.props.Login.masterData['salertmessage'],showMultiSelectCombo:this.props.Login.showMultiSelectCombo,testgrouptestpredefsubresultOptions:this.props.Login.masterData.testgrouptestpredefsubresultOptions||[],selectedRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,onComboChange:this.onComboChange}):/*#__PURE__*/React.createElement(CustomTabs,{tabDetail:this.tabAlertRulesEngine(),onTabChange:this.onTabChangeRulesEngine,destroyInactiveTabPane:true})})),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:this.props.Login.screenName==='IDS_MEANPARAMETER'||this.props.Login.screenName===\"IDS_PREVIOUSRESULTVIEW\"?\"xl\":\"lg\",closeModal:this.closeModal,showCalculate:this.props.Login.screenName==='IDS_RESULTFORMULA'?true:false,operation:// this.props.Login.screenName === 'IDS_RESULTPARAMETERCOMMENTS'?\"\":\nthis.props.Login.screenName==='IDS_RESULTENTRY'||this.props.Login.screenName==='IDS_ENFORCERESULT'||this.props.Login.screenName==='IDS_RESULTENTRYPARAMETER'?\"\":this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName===\"IDS_RESULTENTRYPARAMETER\"?this.props.Login.masterData.realTestcodeValue.stestsynonym:this.props.Login.screenName,selectedRecord:this.props.Login.screenName==='IDS_INSTRUMENT'&&!this.props.Login.loadEsign?this.state.selectedRecordInstrumentForm:this.props.Login.screenName==='IDS_MATERIAL'&&!this.props.Login.loadEsign?this.state.selectedRecordMaterialForm:this.props.Login.screenName==='IDS_TASK'&&!this.props.Login.loadEsign?this.state.selectedRecordTaskForm:this.props.Login.screenName==='IDS_RESULTFORMULA'?this.state.selectedRecord.selectedMandatory:this.state.selectedRecord||{},mandatoryFields://  this.props.Login.screenName === 'IDS_INSTRUMENT' ? mandatoryFieldsInstrument :\n//  this.props.Login.screenName === 'IDS_TASK' ? mandatoryFieldsTask :\nthis.props.Login.screenName==='IDS_TESTMETHODSOURCE'?mandatoryFieldsTestMethodSource:this.props.Login.screenName==='IDS_PARAMETERCOMMENTS'?mandatoryFieldsParameter:this.props.Login.screenName==='IDS_RESULTFORMULA'?validateFormulaMandyFields:this.props.Login.screenName==='IDS_ENFORCERESULT'?mandatoryEnforceResult:[],esign:this.props.Login.loadEsign,innerPopup:this.props.Login.screenName,validateEsign:this.validateEsign,onSaveClick:this.props.Login.screenName==='IDS_INSTRUMENT'?function(e){return onSaveMandatoryValidation(_this2.state.selectedRecordInstrumentForm,mandatoryFieldsInstrument,_this2.onSaveClick);}:this.props.Login.screenName==='IDS_MATERIAL'?function(e){return onSaveMandatoryValidation(_this2.state.selectedRecordMaterialForm,mandatoryFieldsMaterial,_this2.onSaveClick);}:this.props.Login.showValidate?this.calculateFormula:this.props.Login.screenName==='IDS_RESULTIMPORTFILE'?this.onSaveFileClick:this.props.Login.screenName==='IDS_ADHOCPARAMETER'?this.onSaveClickAdhocParam:this.onSaveClick,showValidate:this.props.Login.screenName==='IDS_RESULTFORMULA'?false:this.props.Login.showValidate,modalEvent:this.state.modalEvent,hideSave:this.props.Login.screenName===\"IDS_PREVIOUSRESULTVIEW\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName==='IDS_RESULTENTRY'?this.state.selectedRecord.ResultParameter&&this.state.selectedRecord.ResultParameter.map(function(parameterResult,index){return/*#__PURE__*/React.createElement(ResultEntryForm,{index:index//  wrappedComponentRef={ref => this.resultEntryFormRef = ref}\n//   ref={this.resultEntryFormRef}\n//  getPredefinedData={this.props.getPredefinedData}\n,ResultParameter:_toConsumableArray(_this2.state.selectedRecord.ResultParameter),predefinedValues:_this2.props.Login.masterData.PredefinedValues,defaultPredefinedValues:_this2.props.Login.masterData.PredefinedValues,gradeValues:_this2.props.Login.masterData.GradeValues||[],selectedNumericData:_this2.props.Login.masterData.selectedNumericData,selectedResultGrade:_this2.state.selectedRecord.selectedResultGrade||[],paremterResultcode:_this2.props.Login.masterData.paremterResultcode||[],parameterResults:parameterResult//this.state.selectedRecord.ResultParameter\n||[],Login:_this2.props.Login,handleClose:_this2.handleClose,onSaveClick:_this2.onSaveClick,onResultInputChange:_this2.onResultInputChange//onGradeEvent={this.onGradeEvent}\n,getFormula:_this2.getFormula,onDropTestFile:_this2.onDropTestFile,onKeyPress:_this2.onKeyPress,deleteAttachmentParamFile:_this2.deleteAttachmentParameterFile,viewAdditionalInfo:_this2.viewAdditionalInfo,needSubSample:_this2.props.Login.masterData.realRegSubTypeValue.nneedsubsample,intl:_this2.props.intl});}):this.props.Login.screenName==='IDS_RESULTENTRYPARAMETER'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,this.state.selectedRecord.selectedSpecification&&/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PROFILETREE\"})+' / '+this.props.intl.formatMessage({id:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Specification\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]}),isSearchable:true,name:\"nallottedspeccode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isClearable:false,options:this.state.selectedRecord.selectedSpecification||[],value:this.state.selectedRecord.nallottedspeccode&&this.state.selectedRecord.nallottedspeccode||\"\",defaultValue:this.state.selectedRecord.selectedSpecification&&this.state.selectedRecord.selectedSpecification[\"nallottedspeccode\"]||\"\",onChange:function onChange(event){return _this2.onChange(event,\"nallottedspeccode\",1);},closeMenuOnSelect:true}),this.state.selectedRecord.selectedComponent&&/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]}),isSearchable:true,name:\"ncomponentcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isClearable:false,options:this.state.selectedRecord.selectedComponent||[],value:this.state.selectedRecord.ncomponentcode&&this.state.selectedRecord.ncomponentcode||\"\",defaultValue:this.state.selectedRecord.selectedComponent&&this.state.selectedRecord.selectedComponent[\"ncomponentcode\"]||\"\",onChange:function onChange(event){return _this2.onChange(event,\"ncomponentcode\",2);},closeMenuOnSelect:true})),this.state.selectedRecord.ResultParameter&&this.state.selectedRecord.ResultParameter.map(function(parameterResult,index){return/*#__PURE__*/React.createElement(ResultEntryParameterForm,{index:index//  wrappedComponentRef={ref => this.resultEntryFormRef = ref}\n//   ref={this.resultEntryFormRef}\n//  getPredefinedData={this.props.getPredefinedData}\n,ResultParameter:_toConsumableArray(_this2.state.selectedRecord.ResultParameter),predefinedValues:_this2.props.Login.masterData.PredefinedValues,defaultPredefinedValues:_this2.props.Login.masterData.PredefinedValues,gradeValues:_this2.props.Login.masterData.GradeValues||[],selectedNumericData:_this2.props.Login.masterData.selectedNumericData,selectedResultGrade:_this2.state.selectedRecord.selectedResultGrade||[],paremterResultcode:_this2.props.Login.masterData.paremterResultcode||[],parameterResults:parameterResult//this.state.selectedRecord.ResultParameter\n||[],Login:_this2.props.Login,handleClose:_this2.handleClose,onSaveClick:_this2.onSaveClick,onResultInputChange:_this2.onResultInputChange,onSampleAdd:_this2.onSampleAdd//onGradeEvent={this.onGradeEvent}\n,getFormula:_this2.getFormula,onDropTestFile:_this2.onDropTestFile,onKeyPress:_this2.onKeyPress,deleteAttachmentParamFile:_this2.deleteAttachmentParameterFile,viewAdditionalInfo:_this2.viewAdditionalInfo,needSubSample:_this2.props.Login.masterData.realRegSubTypeValue.nneedsubsample,intl:_this2.props.intl,controlMap:_this2.state.controlMap,userRoleControlRights:_this2.state.userRoleControlRights});})):this.props.Login.screenName==='IDS_TESTMETHODSOURCE'?/*#__PURE__*/React.createElement(TestEditForm,{methodValues:this.props.Login.masterData.MethodData,sourceValues:this.props.Login.masterData.SourceData,selecteRecord:this.state.selectedRecord||{},onComboChange:this.onComboChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_INSTRUMENT'?/*#__PURE__*/React.createElement(ResultEntryInstrumentForm,{selectedRecordInstrumentForm:this.props.Login.selectedRecordInstrumentForm,instrumentcatValue:this.props.Login.masterData.InstrumentCategory,instrumentValue:this.props.Login.masterData.Instrument,selecteRecord:this.state.selectedRecord||{},timeZoneListData:this.props.Login.timeZoneList||[],onComboChange:this.onComboChange,onComboCategoryChange:this.onComboCategoryChange,onDateChange:this.onDateChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick,onChildDataChange:this.onChildDataChange,userInfo:this.props.Login.userInfo,needSubSample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}):this.props.Login.screenName==='IDS_MATERIAL'?/*#__PURE__*/React.createElement(ResultEntryMaterialForm,{Login:this.props.Login,materialType:this.props.Login.materialType,materialCategory:this.props.Login.materialCat,material:this.props.Login.material,materialInventory:this.props.Login.materialInventory,selectedRecord:this.state.selectedRecord||{},selectedRecordMaterialForm:this.state.selectedRecordMaterialForm||{},onMaterialComboChange:this.onMaterialComboChange,onInputOnChange:this.onInputOnChange,onChildDataChange:this.onChildDataChange,onDateChange:this.onDateChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick,userInfo:this.props.Login.userInfo,needSubSample:this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}):this.props.Login.screenName==='IDS_TASK'?/*#__PURE__*/React.createElement(ResultEntryTaskForm,{selectedRecordTaskForm:this.state.selectedRecordTaskForm||{},selectedRecord:this.state.selectedRecord||{},onNumericChange:this.ontaskNumericChange,onInputChange:this.ontaskInputChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_PARAMETERCOMMENTS'?/*#__PURE__*/React.createElement(ResultEntryParamCommetsForm,{selecteRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,handleClose:this.handleClose,onSaveClick:this.onSaveClick}):this.props.Login.screenName==='IDS_RESULTFORMULA'?/*#__PURE__*/React.createElement(ResultEntryFormulaForm,{DynamicFields:this.props.Login.masterData.DynamicFormulaFields// formRef={this.formRef}\n,masterData:this.props.Login.masterData,handleClose:this.handleClose,screenName:this.props.Login.screenName,selectedForumulaInput:this.state.selectedForumulaInput||[],onFormulaInputChange:this.onFormulaInputChange,getAverageResult:this.getAverageResult,Login:this.props.Login,showValidate:this.props.Login.showValidate,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName==='IDS_RESULTIMPORTFILE'?/*#__PURE__*/React.createElement(ResultEntryImport,{handleClose:this.handleClose,screenName:this.props.Login.screenName,onDropFile:this.onDropFile,selectedImportFile:this.props.Login.masterData.selectedImportFile||{},deleteAttachment:this.deleteAttachment}):this.props.Login.screenName==='IDS_MEANPARAMETER'?/*#__PURE__*/React.createElement(ResultEntryMean// onInputOnChange={this.onMeanInputOnChange}\n// onComboChange={this.onMeanComboChange}\n,{screenName:this.props.Login.screenName,headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,selectAll:this.state.selectAll,testMean:this.state.testMean,userInfo:this.props.Login.userInfo,meanTestParameterList:this.state.meanTestParameterList||[],selectedTestParam:this.state.selectedTestParam}):this.props.Login.screenName==='IDS_RESULTPARAMETERCOMMENTS'?/*#__PURE__*/React.createElement(ResultEntryPredefinedComments,{selectedRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,onComboChange:this.onComboChange}):this.props.Login.screenName==='IDS_ENFORCERESULT'?/*#__PURE__*/React.createElement(ResultEntryEnforceResult,{selectedRecord:this.state.selectedRecord||{},GradeList:this.props.Login.masterData.GradeList&&this.props.Login.masterData.GradeList,onInputChange:this.onInputChange,onComboChange:this.onComboChange}):this.props.Login.screenName==='IDS_PREVIOUSRESULTVIEW'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(SpecificationInfo,{controlMap:this.state.controlMap,auditInfoFields:auditInfoFields,userRoleControlRights:this.state.userRoleControlRights,selectedSpecification:this.props.Login.masterData.viewdetails,userInfo:this.props.Login.userInfo,selectedNode:this.props.Login.masterData.selectedNode,selectedRecord:this.state.filterData,approvalRoleActionDetail:this.props.Login.masterData.ApprovalRoleActionDetail,screenName:\"IDS_PREVIOUSRESULTVIEW\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntransactiontestcode\"//data={this.props.Login.addComponentDataList || []}\n,data:this.props.Login.masterData.AuditModifiedComments||[],detailedFieldList:this.feildsForGrid,extractedColumnList:this.feildsForGrid//dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\n// && process(this.props.Login.masterData.AuditModifiedComments, { skip: 0, take: 10 })}\n// dataState={{ skip: 0, take: 10 }}\n,dataResult:this.props.Login.masterData.AuditModifiedComments&&this.props.Login.masterData.AuditModifiedComments.length>0&&process(this.props.Login.masterData.AuditModifiedComments,this.state.dataState?this.state.dataState:{skip:0,take:10})//dataState={{ skip: 0, take: 10 }}\n,dataState:this.state.dataState?this.state.dataState:{skip:0,take:10},pageable:true,scrollable:'scrollable',dataStateChange:this.dataResultStateChange})):this.props.Login.screenName==='IDS_ADHOCPARAMETER'?/*#__PURE__*/React.createElement(AddAdhocParameter,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,adhocParamter:this.props.Login.masterData.AdhocParamter||{}//operation={this.props.operation}\n}):\"\"}):\"\",this.props.Login.masterData.ChecklistData&&this.props.Login.screenName==='IDS_CHECKLISTRESULT'?/*#__PURE__*/React.createElement(TemplateForm,{templateData:this.props.Login.masterData.ChecklistData,nregtypecode:parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode),nregsubtypecode:parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode),needSaveButton:this.props.Login.needSaveButton,formRef:this.formRef,onTemplateInputChange:this.onTemplateInputChange,handleClose:this.closeModal,onTemplateComboChange:this.onTemplateComboChange,screenName:this.props.Login.screenName,onSaveClick:this.onSaveCheckList,Login:this.props.Login,viewScreen:this.props.Login.openTemplateModal,selectedRecord:this.state.selectedRecord||[],onTemplateDateChange:this.onTemplateDateChange,needValidation:true}):\"\");}},{key:\"valiateCheckAll\",value:function valiateCheckAll(data){var selectAll=true;if(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;}});}else{selectAll=false;}return selectAll;}},{key:\"updateTestMethodSource\",value:// onResultInputChange = (event, index, parameter) => {\n//     //let ResultParameter = this.props.Login.masterData.ResultParameter ? this.props.Login.masterData.ResultParameter : [];\n//     let selectedRecord = this.state.selectedRecord || [];\n//     let ResultParameter = this.state.selectedRecord.ResultParameter ? this.state.selectedRecord.ResultParameter : [];\n//     let sresult = \"\";\n//     let sfinal = \"\";\n//     let sresultpredefinedname= \"\";\n//     let salertmessage = \"\";\n//     let sresultcomment = \"\";\n//     let value = -1;\n//     let acceptedFile = [];\n//     let ncalculatedresult; \n//     let currentAlertResultCode=0;\n//     let currentntestgrouptestpredefcode=0;\n//     let inputData={}\n//     if (parameter.nparametertypecode === parameterType.NUMERIC) {\n//         if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\n//             sresult = event.target.value;\n//             ncalculatedresult = 4\n//         } else {\n//             sresult = ResultParameter[index]['sresult'] === null ? \"\" : ResultParameter[index]['sresult'];\n//             ncalculatedresult = ResultParameter[index]['ncalculatedresult'];\n//         }\n//     }\n//     if (parameter.nparametertypecode === parameterType.PREDEFINED) {\n//          currentAlertResultCode= event.item.ntransactionresultcode ;\n//          currentntestgrouptestpredefcode= event.item.ntestgrouptestpredefcode ;\n//         if (event != null) {\n//             sresult = event.item.spredefinedname;\n//             sresultpredefinedname = event.item.sresultpredefinedname;\n//             sfinal=event.item.spredefinedsynonym\n//             value = event.item.ngradecode;\n//             salertmessage=event.item.salertmessage?event.item.salertmessage:\"\";\n//             sresultcomment= event.item.spredefinedcomments?event.item.spredefinedcomments:\"\";\n//             ncalculatedresult = 4; \n//         }\n//         else {\n//             sresult = \"\";\n//             sfinal = \"\";\n//             sresultpredefinedname= \"\";\n//             value = -1;\n//             ncalculatedresult = 4\n//         }\n//         inputData={\n//             'ntestgrouptestpredefcode':event.item.ntestgrouptestpredefcode,\n//             'salertmessage':salertmessage,\n//             'nneedresultentryalert':event.item.nneedresultentryalert,\n//             'nneedsubcodedresult':event.item.nneedsubcodedresult\n//         }\n//         // ResultParameter[index]['additionalInfo']&& delete ResultParameter[index]['additionalInfo'] \n//         // ResultParameter[index]['additionalInfo']&& delete ResultParameter[index]['additionalInfoUidata']  \n//         if(event.item.nneedresultentryalert===transactionStatus.NO&&\n//             event.item.nneedsubcodedresult===transactionStatus.NO){\n//                 if(ResultParameter[index]['additionalInfo']){ \n//                     ResultParameter[index]['additionalInfo']=\"\" \n//                 } \n//                 if(ResultParameter[index]['additionalInfoUidata']){  \n//                     ResultParameter[index]['additionalInfoUidata']=\"\" \n//                 } \n//             }\n//     }\n//     if (parameter.nparametertypecode === parameterType.CHARACTER) {\n//         sresult = event.target.value;\n//         if (event.target.value.trim() === \"\")\n//             ncalculatedresult = -1;\n//         else\n//             ncalculatedresult = 4;\n//     }\n//     if (parameter.nparametertypecode === parameterType.ATTACHMENT) {\n//         sresult = event[0] && event[0].name;\n//         sfinal= event;\n//         ncalculatedresult = 4\n//     }\n//     ResultParameter[index]['sresult'] = sresult\n//     ResultParameter[index]['sfinal'] = sfinal\n//     ResultParameter[index]['sresultpredefinedname'] = sresultpredefinedname\n//     ResultParameter[index]['sresultcomment'] = sresultcomment\n//     ResultParameter[index]['salertmessage'] = salertmessage\n//     ResultParameter[index]['acceptedFile'] = acceptedFile\n//     ResultParameter[index]['editable'] = true\n//     ResultParameter[index]['ngradecode'] = value\n//     ResultParameter[index]['ncalculatedresult'] = ncalculatedresult \n//     // this.props.Login.masterData.ResultParameter = ResultParameter;\n//     selectedRecord.ResultParameter = ResultParameter\n//     if (parameter.nparametertypecode === parameterType.PREDEFINED) {\n//         this.props.getPredefinedData(inputData,selectedRecord,currentAlertResultCode,this.props.Login.masterData) \n//     }\n//     this.setState({\n//         selectedRecord: selectedRecord,\n//         currentAlertResultCode,\n//         currentntestgrouptestpredefcode\n//     });\n//     // const updateInfo = {\n//     //     typeName: DEFAULT_RETURN,\n//     //     data: { masterData: this.props.Login.masterData }\n//     // }\n//     // this.props.updateStore(updateInfo);\n// }\nfunction updateTestMethodSource(inputData,masterData,ncontrolcode){var inputParam={inputData:_objectSpread(_objectSpread({},inputData),{},{'userinfo':this.props.Login.userInfo,ncontrolcode:ncontrolcode}),// formData: formData,\n// isFileupload: true,\noperation:\"createMethod\",screenName:\"IDS_TESTMETHODSOURCE\",displayName:this.props.Login.inputParam.displayName,//, postParam,\n//inputData1: inputData,\nmasterData:masterData};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,//screenName: \"completeaction\",\noperation:\"createMethod\"}};this.props.updateStore(updateInfo);}else{this.props.updateTestMethodSource(inputData,masterData);}}},{key:\"updateParameterComments\",value:function updateParameterComments(inputData,masterData,ncontrolcode){// let inputData1 = { ...inputData, ncontrolcode }\nvar ndesigntemplatemappingcode=parseInt(this.props.Login.masterData.ndesigntemplatemappingcode&&this.props.Login.masterData.ndesigntemplatemappingcode);inputData=_objectSpread(_objectSpread({},inputData),{},{ndesigntemplatemappingcode:ndesigntemplatemappingcode});var inputParam={inputData:_objectSpread(_objectSpread({},inputData),{},{ncontrolcode:ncontrolcode,'userinfo':this.props.Login.userInfo}),operation:this.props.Login.operation,screenName:\"IDS_RESULT\",displayName:this.props.Login.inputParam.displayName,//, postParam,\n//inputData: inputData1,\nmasterData:masterData};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},openModal:true,//screenName: \"completeaction\",\noperation:\"updateParameterComments\"}};this.props.updateStore(updateInfo);}else{this.props.updateParameterComments(inputData,masterData);}}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this3=this;//  const tempArray = [];\nvar temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this3.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\",\"dataType\":[option[designProperties.LISTITEM]]};});return temparray;}},{key:\"constructDesign\",value:function constructDesign(list){var newList=[];if(list.length>0){list.map(function(i){var _newList$push;newList.push((_newList$push={},_defineProperty(_newList$push,designProperties.LABEL,i),_defineProperty(_newList$push,designProperties.VALUE,i),_newList$push));});}return newList;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state8=this.state,showTest=_this$state8.showTest,showSample=_this$state8.showSample,userRoleControlRights=_this$state8.userRoleControlRights,controlMap=_this$state8.controlMap,resultDataState=_this$state8.resultDataState,instrumentDataState=_this$state8.instrumentDataState,materialDataState=_this$state8.materialDataState,taskDataState=_this$state8.taskDataState,documentDataState=_this$state8.documentDataState,resultChangeDataState=_this$state8.resultChangeDataState,testCommentDataState=_this$state8.testCommentDataState,historyDataState=_this$state8.historyDataState,sampleListColumns=_this$state8.sampleListColumns,subSampleListColumns=_this$state8.subSampleListColumns,testListColumns=_this$state8.testListColumns,SingleItem=_this$state8.SingleItem,sampleListMainField=_this$state8.sampleListMainField,subSampleListMainField=_this$state8.subSampleListMainField,testListMainField=_this$state8.testListMainField,SampleGridItem=_this$state8.SampleGridItem,SampleGridExpandableItem=_this$state8.SampleGridExpandableItem,sampleMoreField=_this$state8.sampleMoreField,subSampleMoreField=_this$state8.subSampleMoreField,testMoreField=_this$state8.testMoreField,selectedRecord=_this$state8.selectedRecord,SampleType=_this$state8.SampleType,RegistrationType=_this$state8.RegistrationType,RegistrationSubType=_this$state8.RegistrationSubType,REFilterStatus=_this$state8.REFilterStatus,REJobStatus=_this$state8.REJobStatus,Testvalues=_this$state8.Testvalues,ApprovalConfigVersion=_this$state8.ApprovalConfigVersion,DynamicSampleColumns=_this$state8.DynamicSampleColumns,DynamicSubSampleColumns=_this$state8.DynamicSubSampleColumns,DynamicTestColumns=_this$state8.DynamicTestColumns,DynamicGridItem=_this$state8.DynamicGridItem,DynamicGridMoreField=_this$state8.DynamicGridMoreField,validateFormulaMandyFields=_this$state8.validateFormulaMandyFields,skip=_this$state8.skip,take=_this$state8.take,testskip=_this$state8.testskip,testtake=_this$state8.testtake,selectedFilter=_this$state8.selectedFilter,stateDynamicDesign=_this$state8.stateDynamicDesign,activeTabIndex=_this$state8.activeTabIndex,activeTabId=_this$state8.activeTabId,sampleChangeDataState=_this$state8.sampleChangeDataState,testSearchField=_this$state8.testSearchField,AdhocParamter=_this$state8.AdhocParamter,Batchvalues=_this$state8.Batchvalues,Worklistvalues=_this$state8.Worklistvalues,ConfigurationFilterValues=_this$state8.ConfigurationFilterValues,enlLink=_this$state8.enlLink,openELNSheet=_this$state8.openELNSheet,parameterResults=_this$state8.parameterResults,isParameterInitialRender=_this$state8.isParameterInitialRender,isaddSampleRender=_this$state8.isaddSampleRender,selectedRecordTaskForm=_this$state8.selectedRecordTaskForm,isTaskInitialRender=_this$state8.isTaskInitialRender,selectedRecordMaterialForm=_this$state8.selectedRecordMaterialForm,isMaterialInitialRender=_this$state8.isMaterialInitialRender,selectedRecordInstrumentForm=_this$state8.selectedRecordInstrumentForm,isInstrumentInitialRender=_this$state8.isInstrumentInitialRender,subSampleSkip=_this$state8.subSampleSkip,subSampleTake=_this$state8.subSampleTake,sampleSearchField=_this$state8.sampleSearchField,subsampleSearchField=_this$state8.subsampleSearchField;//,currentAlertResultCode,currentntestgrouptestpredefcode\nvar bool=false;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){bool=true;this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);DynamicSampleColumns=dynamicColumn.samplelistitem?dynamicColumn.samplelistitem:[];DynamicSubSampleColumns=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];DynamicTestColumns=dynamicColumn.testlistitem?dynamicColumn.testlistitem:[];DynamicGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];DynamicGridMoreField=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];SingleItem=dynamicColumn.sampledisplayfields?dynamicColumn.sampledisplayfields:[];// testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n// testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\ntestMoreField=dynamicColumn.testListFields.testlistmoreitems?dynamicColumn.testListFields.testlistmoreitems:[];testListColumns=dynamicColumn.testListFields.testlistitem?dynamicColumn.testListFields.testlistitem:[];testSearchField=dynamicColumn.testListFields.testsearchfields?dynamicColumn.testListFields.testsearchfields:[];sampleSearchField=dynamicColumn.samplesearchfields?dynamicColumn.samplesearchfields:[];subsampleSearchField=dynamicColumn.subsamplesearchfields?dynamicColumn.subsamplesearchfields:[];this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nneedsubsample&&DynamicSubSampleColumns.push({1:{'en-US':'Specimen','ru-RU':'Образец','tg-TG':'Намуна'},2:\"scomponentname\"});bool=true;}if(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;resultDataState=dataState;instrumentDataState=dataState;materialDataState=dataState;taskDataState=dataState;documentDataState=dataState;resultChangeDataState=dataState;historyDataState=dataState;testCommentDataState=dataState;sampleChangeDataState=dataState;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){bool=true;selectedRecord=this.props.Login.selectedRecord;}if(this.props.Login.selectedRecordTaskForm!==previousProps.Login.selectedRecordTaskForm){bool=true;selectedRecordTaskForm=this.props.Login.selectedRecordTaskForm;}if(this.props.Login.selectedRecordMaterialForm!==previousProps.Login.selectedRecordMaterialForm){bool=true;selectedRecordMaterialForm=this.props.Login.selectedRecordMaterialForm;}if(this.props.Login.selectedRecordInstrumentForm!==previousProps.Login.selectedRecordInstrumentForm){bool=true;selectedRecordInstrumentForm=this.props.Login.selectedRecordInstrumentForm;}if(this.props.Login.parameterResults!==previousProps.Login.parameterResults){bool=true;parameterResults=this.props.Login.parameterResults;}if(this.props.Login.isTaskInitialRender!==previousProps.Login.isTaskInitialRender){bool=true;isTaskInitialRender=this.props.Login.isTaskInitialRender;}if(this.props.Login.isParameterInitialRender!==previousProps.Login.isParameterInitialRender){bool=true;isParameterInitialRender=this.props.Login.isParameterInitialRender;}if(this.props.Login.isaddSampleRender!==previousProps.Login.isaddSampleRender){bool=true;isaddSampleRender=this.props.Login.isaddSampleRender;}// if (this.props.Login.currentAlertResultCode !== previousProps.Login.currentAlertResultCode) {\n//     bool = true;\n//     currentAlertResultCode = this.props.Login.currentAlertResultCode;\n// }\n// if (this.props.Login.currentntestgrouptestpredefcode !== previousProps.Login.currentntestgrouptestpredefcode) {\n//     bool = true;\n//     currentntestgrouptestpredefcode = this.props.Login.currentntestgrouptestpredefcode;\n// }\nif(this.props.Login.validateFormulaMandyFields!==previousProps.Login.validateFormulaMandyFields){bool=true;validateFormulaMandyFields=this.props.Login.validateFormulaMandyFields;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);REFilterStatus=constructOptionList(this.props.Login.masterData.REFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestsynonym','ascending','ntestcode',false);Batchvalues=constructOptionList(this.props.Login.masterData.Batchvalues||[],'nbatchmastercode','sbatcharno','ascending','nbatchmastercode',false);Worklistvalues=constructOptionList(this.props.Login.masterData.Worklistvalues||[],'nworklistcode','sworklistno','ascending','nworklistcode',false);ConfigurationFilterValues=constructOptionList(this.props.Login.masterData.ConfigurationFilterValues||[],'nconfigfiltercode','sfiltername','ascending','nconfigfiltercode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);// AdhocParamter = constructOptionList(this.props.Login.masterData.AdhocParamter || [], 'ntestparametercode', 'sparametersynonym',\n//     'ascending', 'ntestparametercode', false);\nskip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;subSampleSkip=this.props.Login.subSampleSkip===undefined?subSampleSkip:this.props.Login.subSampleSkip;subSampleTake=this.props.Login.subSampleTake||subSampleTake;if(this.props.Login.resultDataState&&this.props.Login.resultDataState!==previousProps.Login.resultDataState){resultDataState=this.props.Login.resultDataState;}if(this.props.Login.instrumentDataState&&this.props.Login.instrumentDataState!==previousProps.Login.instrumentDataState){instrumentDataState=this.props.Login.instrumentDataState;}if(this.props.Login.taskDataState&&this.props.Login.taskDataState!==previousProps.Login.taskDataState){taskDataState=this.props.Login.taskDataState;}if(this.props.Login.resultChangeDataState&&this.props.Login.resultChangeDataState!==previousProps.Login.resultChangeDataState){resultChangeDataState=this.props.Login.resultChangeDataState;}if(this.props.Login.historyDataState&&this.props.Login.historyDataState!==previousProps.Login.historyDataState){historyDataState=this.props.Login.historyDataState;}if(this.props.Login.testCommentDataState&&this.props.Login.testCommentDataState!==previousProps.Login.testCommentDataState){testCommentDataState=this.props.Login.testCommentDataState;}if(this.props.Login.sampleChangeDataState&&this.props.Login.sampleChangeDataState!==previousProps.Login.sampleChangeDataState){sampleChangeDataState=this.props.Login.sampleChangeDataState;}// if (this.props.Login.enlLink !== previousProps.Login.enlLink) {\n//     bool = true;\n//     enlLink = this.props.Login.enlLink;\n//     openELNSheet=true;\n//     }\nvar selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.REFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {masterData: this.props.Login.masterData,showTest,showSample }\n// }\n// this.props.updateStore(updateInfo);\nSampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");REFilterStatus=REFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");Batchvalues=Batchvalues.get(\"OptionList\");Worklistvalues=Worklistvalues.get(\"OptionList\");ConfigurationFilterValues=ConfigurationFilterValues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");// AdhocParamter=AdhocParamter.get(\"OptionList\")\n}if(this.props.Login.activeTabIndex!==previousProps.Login.activeTabIndex){activeTabIndex=this.props.Login.activeTabIndex;activeTabId=this.props.Login.activeTabId;bool=true;}if(this.props.Login.masterData.DesignTemplateMapping!==previousProps.Login.masterData.DesignTemplateMapping){var DesignTemplateMappingMap=constructOptionList(this.props.Login.masterData.DesignTemplateMapping||[],\"ndesigntemplatemappingcode\",\"sregtemplatename\",undefined,undefined,false);stateDynamicDesign=DesignTemplateMappingMap.get(\"OptionList\");}if(bool){this.setState({showTest:showTest,showSample:showSample,userRoleControlRights:userRoleControlRights,controlMap:controlMap,resultDataState:resultDataState,instrumentDataState:instrumentDataState,materialDataState:materialDataState,taskDataState:taskDataState,documentDataState:documentDataState,resultChangeDataState:resultChangeDataState,testCommentDataState:testCommentDataState,historyDataState:historyDataState,sampleListColumns:sampleListColumns,subSampleListColumns:subSampleListColumns,testListColumns:testListColumns,SingleItem:SingleItem,sampleListMainField:sampleListMainField,subSampleListMainField:subSampleListMainField,testListMainField:testListMainField,SampleGridItem:SampleGridItem,SampleGridExpandableItem:SampleGridExpandableItem,sampleMoreField:sampleMoreField,subSampleMoreField:subSampleMoreField,testMoreField:testMoreField,selectedRecord:selectedRecord,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,REFilterStatus:REFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,Batchvalues:Batchvalues,Worklistvalues:Worklistvalues,ConfigurationFilterValues:ConfigurationFilterValues,ApprovalConfigVersion:ApprovalConfigVersion,validateFormulaMandyFields:validateFormulaMandyFields,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,DynamicSampleColumns:DynamicSampleColumns,DynamicSubSampleColumns:DynamicSubSampleColumns,DynamicTestColumns:DynamicTestColumns,DynamicGridItem:DynamicGridItem,DynamicGridMoreField:DynamicGridMoreField,stateDynamicDesign:stateDynamicDesign,activeTabIndex:activeTabIndex,activeTabId:activeTabId,sampleChangeDataState:sampleChangeDataState,testSearchField:testSearchField,AdhocParamter:AdhocParamter,parameterResults:parameterResults,isParameterInitialRender:isParameterInitialRender,isaddSampleRender:isaddSampleRender,selectedRecordTaskForm:selectedRecordTaskForm,isTaskInitialRender:isTaskInitialRender,selectedRecordMaterialForm:selectedRecordMaterialForm,isMaterialInitialRender:isMaterialInitialRender,selectedRecordInstrumentForm:selectedRecordInstrumentForm,isInstrumentInitialRender:isInstrumentInitialRender//,currentAlertResultCode,currentntestgrouptestpredefcode\n,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake,sampleSearchField:sampleSearchField,subsampleSearchField:subsampleSearchField});}if(this.props.Login.meanTestParameterList!==previousProps.Login.meanTestParameterList){this.setState({meanTestParameterList:this.props.Login.meanTestParameterList});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\nreturn null;}}]);return ResultEntry;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{Login:state.Login};};export default connect(mapStatetoProps,{crudMaster:crudMaster,updateStore:updateStore,getsubSampleREDetail:getsubSampleREDetail,getTestREDetail:getTestREDetail,getTestChildTabREDetail:getTestChildTabREDetail,resultGetModule:resultGetModule,completeTest:completeTest,testMethodSourceEdit:testMethodSourceEdit,addREInstrument:addREInstrument,addREMaterial:addREMaterial,deleteInstrumentRecord:deleteInstrumentRecord,fetchInstrumentRecord:fetchInstrumentRecord,deleteTaskRecord:deleteTaskRecord,fetchTaskRecord:fetchTaskRecord,parameterRecord:parameterRecord,checkListRecord:checkListRecord,onSaveCheckList:onSaveCheckList,defaultTest:defaultTest,getFormula:getFormula,getRERegistrationType:getRERegistrationType,getRERegistrationSubType:getRERegistrationSubType,fetchMaterialRecord:fetchMaterialRecord,getREApprovalConfigVersion:getREApprovalConfigVersion,getResultEntryDetails:getResultEntryDetails,calculateFormula:calculateFormula,getREFilterStatus:getREFilterStatus,getREFilterTestData:getREFilterTestData,getREJobStatus:getREJobStatus,getSampleChildTabREDetail:getSampleChildTabREDetail,viewAttachment:viewAttachment,getAttachmentCombo:getAttachmentCombo,deleteAttachment:deleteAttachment,resultImportFile:resultImportFile,validateEsignCredentialComplete:validateEsignCredentialComplete,getCommentsCombo:getCommentsCombo,updateTestMethodSource:updateTestMethodSource,filterTransactionList:filterTransactionList,validateEsignCredential:validateEsignCredential,updateParameterComments:updateParameterComments,previewSampleReport:previewSampleReport,getMeanCalculationTestParameter:getMeanCalculationTestParameter,getREMaterialCategoryByType:getREMaterialCategoryByType,getREMaterialByCategory:getREMaterialByCategory,getREMaterialInvertoryByMaterial:getREMaterialInvertoryByMaterial,getAvailableMaterialQuantity:getAvailableMaterialQuantity,testStart:testStart,getSubSampleChildTabDetail:getSubSampleChildTabDetail,getSampleChildTabDetail:getSampleChildTabDetail,getREFilterTemplate:getREFilterTemplate,getAverageResult:getAverageResult,getREMaterialComboGet:getREMaterialComboGet//,deleteResultUsedMaterial\n,getPredefinedData:getPredefinedData,getELNTestValidation:getELNTestValidation,getConfigurationFilter:getConfigurationFilter,getTestBasedBatchWorklist:getTestBasedBatchWorklist,addREAdhocParamter:addREAdhocParamter,createAdhocParamter:createAdhocParamter,enforceResult:enforceResult,ResultEntryViewPatientDetails:ResultEntryViewPatientDetails,resultEntryGetParameter:resultEntryGetParameter,resultEntryGetSpec:resultEntryGetSpec,resultEntryGetComponent:resultEntryGetComponent})(injectIntl(ResultEntry));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntry.jsx"],"names":["React","Component","faPlay","faAddressBook","faCheckCircle","faEye","faPencilRuler","faFileImport","faSync","faBorderAll","faLink","faComment","faComments","faPaperclip","faCommentDots","faChevronRight","faMicroscope","faFlask","faHistory","faBookMedical","faNotesMedical","Card","Col","Row","Nav","Button","Modal","FormattedMessage","injectIntl","connect","Axios","ListWrapper","FontAwesomeIcon","faFileInvoice","SplitterLayout","ContentPanel","PortalModal","Iframe","ReactTooltip","crudMaster","updateStore","getsubSampleREDetail","getTestREDetail","getTestChildTabREDetail","resultGetModule","fetchMaterialRecord","completeTest","testMethodSourceEdit","addREInstrument","addREMaterial","deleteInstrumentRecord","fetchInstrumentRecord","deleteTaskRecord","fetchTaskRecord","parameterRecord","checkListRecord","onSaveCheckList","defaultTest","getFormula","getRERegistrationType","getRERegistrationSubType","getREApprovalConfigVersion","getResultEntryDetails","calculateFormula","getREFilterStatus","getREFilterTestData","getREJobStatus","viewAttachment","validateEsignCredentialComplete","getAttachmentCombo","deleteAttachment","getCommentsCombo","updateTestMethodSource","resultImportFile","filterTransactionList","validateEsignCredential","getSampleChildTabREDetail","updateParameterComments","getREMaterialCategoryByType","getREMaterialByCategory","getREMaterialInvertoryByMaterial","previewSampleReport","getMeanCalculationTestParameter","getAvailableMaterialQuantity","testStart","getSubSampleChildTabDetail","getSampleChildTabDetail","getREFilterTemplate","getAverageResult","getREMaterialComboGet","getPredefinedData","getELNTestValidation","getConfigurationFilter","getTestBasedBatchWorklist","addREAdhocParamter","createAdhocParamter","enforceResult","ResultEntryViewPatientDetails","resultEntryGetParameter","resultEntryGetSpec","resultEntryGetComponent","sortData","create_UUID","getControlMap","listDataFromDynamicArray","formatInputDate","validateTwoDigitDate","showEsign","constructOptionList","deleteAttachmentDropZone","Lims_JSON_stringify","CF_encryptionData","onSaveMandatoryValidation","rsapi","toast","SampleType","parameterType","grade","transactionStatus","RegistrationType","RegistrationSubType","FORMULAFIELDTYPE","designProperties","SideBarSeqno","SideBarTabIndex","ProductList","CustomTabs","ResultEntryResultsTab","DEFAULT_RETURN","SlideOutModal","Esign","BreadcrumbComponent","ResultEntryFilter","ResultEntryInstrumentForm","ResultEntryForm","ResultEntryParameterForm","TestEditForm","SampleInfoView","SampleInfoGrid","ApprovalInstrumentTab","ResultEntryTaskTab","ResultEntryTaskForm","ResultEntryParamCommetsForm","TemplateForm","templateChangeHandler","numberConversion","numericGrade","PerfectScrollbar","ResultEntryFormulaForm","SampleApprovalHistory","ResultChangeHistoryTab","Attachments","Comments","onSaveSampleAttachment","onSaveTestAttachment","onSaveSubSampleAttachment","onSaveSampleComments","onSaveTestComments","onSaveSubSampleComments","ResultEntryImport","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","ResultEntryMean","ScrollBar","ResultEntryMaterialForm","AddAdhocParameter","ResultUsedMaterial","FontIconWrap","CustomSwitch","TransactionListMasterJsonView","ModalShow","DataGrid","process","ResultEntryPredefinedComments","ResultEntryEnforceResult","SpecificationInfo","FormSelectSearch","ResultEntry","props","paneSizeChange","d","setState","splitChangeWidthPercentage","event","file","fieldName","selectedRecord","Login","masterData","selectedImportFile","updateInfo","typeName","data","deleteAttachmentParameterFile","index","selectedRecordParameter","state","ResultParameter","closeModalShow","showAlertGrid","forEach","object","onTabChangeRulesEngine","tabProps","activeTabName","handleExpandChange","mapobject","childListMap","Map","keylst","Object","keys","map","key","set","parseInt","values","availableTestFilter","lstntransactionsamplecode","RegistrationTestAlert","boolean1","includes","ntransactiontestcode","toString","unavailableTestFilter","NewTestGroupTestAlert","dataStateAvailabletestAlert","dataStateavailabletest","dataState","dataStateUnAvailabletestAlert","dataStateunavailabletest","tabAlertRulesEngine","tabMap","RESelectedTest","filter","length","skip","take","controlMap","userRoleControlRights","realRegSubTypeValue","nneedsubsample","closeModal","loadEsign","openModal","openTemplateModal","screenName","operation","loadFile","selectedId","showValidate","validateFormulaMandyFields","onFilterComboChange","fieldname","inputData","dateObj","toDate","userInfo","realDesignTemplateMapping","realApproveConfigVersion","realApprovalConfigVersionList","realDesignTemplateMappingList","realFilterStatusList","realRegistrationSubTypeList","realRegistrationTypeList","realTestvaluesList","nflag","fromdate","fromDate","todate","nsampletypecode","defaultSampleType","nregtypecode","defaultRegistrationType","nregsubtypecode","defaultRegistrationSubType","transcode","defaultFilterStatus","ntransactionstatus","REFilterStatus","item","join","String","userinfo","obj","value","inputParamData","napprovalversioncode","ApprovalConfigVersion","napprovalconfigversioncode","ntranscode","ndesigntemplatemappingcode","DesignTemplateMappingValue","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","defaultTestvalues","ntestcode","defaultConfigurationFilterValue","realdefaultConfigurationFilterValue","nconfigfiltercode","defaultWorklistvalue","defaultBatchvalue","OnDateConverstion","date","month","getMonth","day","getDate","getFullYear","onReload","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realFilterStatusValue","realTestcodeValue","realWorklistCodeValue","activeTestKey","showTest","showSample","checkBoxOperation","nworlistcode","nworklistcode","inpuParamData","refs","searchSampleRef","searchSubSampleRef","searchTestRef","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","warn","intl","formatMessage","id","onDesignTemplateChange","labelname","onREFilterSubmit","realBatchCodeValue","DesignTemplateMapping","realConfigurationFilterValuesList","ConfigurationFilterValues","nneedtemplatebasedflow","nbatchmastercode","undefined","onSecondaryPaneSizeChange","e","val","onComboCategoryChange","uRL","ninstrumentcatcode","ncalibrationRequired","ncalibrationreq","post","then","response","TagInstrument","Instrument","TagListInstrument","get","catch","error","status","message","testRETabDetail","testTabMap","test","testskip","testtake","testList","RE_TEST","slice","meanControlId","has","ncontrolcode","selectedTestList","genericLabel","inputParam","dataStateChange","editpredefinedcomments","primaryKeyField","ncontrolCode","deleteMaterialRecord","addResultEntryTask","onAttachmentSaveClick","RegistrationTestAttachment","VALUE","methodUrl","esignRights","masterList","onCommentsSaveClick","RegistrationTestComment","ResultChangeHistory","sampleDataStateChange","activeSampleKey","sampleHistoryDataState","sampleGridDataState","sampleGridDataStateChange","sampleChangeDataState","dataResultStateChange","subsampleTabDetail","ntransactionsamplecode","RESelectedSubSample","sample","subsampleList","RE_SUBSAMPLE","subsampleskip","subsampletake","selectedSubSampleList","RegistrationSampleAttachment","attachmentskip","attachmenttake","settings","RegistrationSampleComment","subSampleCommentDataState","subSampledataStateChange","onSampleTabChange","activeSampleTab","RESelectedSample","npreregno","activeTabIndex","onTestTabChange","preregno","openClosePortal","openELNSheet","enlLink","integrationSettings","onSubSampleTabChange","activeSubSampleTab","selectedSubSample","subSampleAttachmentDataState","viewSample","viewdetails","popUptestDataState","adhocTestParameter","ntestgrouptestcode","adhocId","displayName","nformcode","screenData","classUrl","nresultusedmaterialcode","selectedRecordTaskForm","stestsynonym","isTaskInitialRender","addResultUsedTaskId","parameterData","modalEvent","currentTarget","selectedForumulaInput","senableAverage","svalues","soldvalue","lstDynamicFields","dynamicfields","push","selectedResultGrade","resultImport","closeFilter","inputValues","realSampleTypeList","SampleTypeValue","RegTypeValue","RegSubTypeValue","FilterStatusValue","ApprovalVersionValue","JobStatusValue","Testvalues","Batchvalues","realBatchvaluesList","BatchValue","realBatchvalue","Worklistvalues","RealWorklistvaluesList","WorklistValue","realWorklistvalue","TestValue","ConfigurationFilterValue","Date","showFilter","handlePageChange","handleSubSamplePageChange","subSampleSkip","subSampleTake","handleTestPageChange","sampletakeDataState","verticalPaneSizeChange","enableAutoHeight","initialVerticalWidth","changeSplitterOption","sideNavDetail","searchedTests","editTestCommentsId","activeTestTab","resultTabDetail","onTabChange","attachmentTabDetail","commentTabDetail","SingleItem","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","resultTabMap","TEST","attachmentTabMap","SUBSAMPLE","SAMPLE","RegistrationAttachment","testDataStateChange","testAttachmentDataState","commentTabMap","RegistrationComment","onInputSwitchOnChange","target","name","enablePropertyPopup","enableAutoClick","changePropertyViewClose","activeTabId","changePropertyView","window","innerWidth","tabSequence","tabseqno","mandatoryFieldsForAdditionalInfo","mandatoryFieldsAdditionalInfo","showMultiSelectCombo","defaultActions","testChildGetREParam","setDefaultId","TestList","splice","acceptTestList","completeActions","completeResultId","validation","postParamList","basedrulesengine","testStartActions","progressTimerStart","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onEsignInputOnChange","type","checked","YES","NO","onChildDataChange","childData","selectedRecordMaterialForm","isMaterialInitialRender","selectedRecordInstrumentForm","isInstrumentInitialRender","onInputOnChange","ntestgroupmaterial","onSaveFileClick","saveType","formRef","acceptedFile","sfilename","formData","FormData","append","JSON","stringify","x","onSaveClickAdhocParam","testParameter","nparamtercode","ntestgroupparamtercode","ntestparametercode","adhocpreregno","adhoctransactiontestcode","action","onDropFile","onFormulaInputChange","fields","selectedMandatory","dynamicformulafields","ndynamicformulafieldcode","INTEGER","replace","formulainput","sparameter","sdescription","onTemplateInputChange","control","onTemplateComboChange","comboData","onTemplateDateChange","dateData","handleDateChange","dateName","dateValue","viewAdditionalInfo","currentAlertResultCode","additionalInfo","additionalInfoView","onModalSave","currentntestgrouptestpredefcode","bool","some","Parameter","ntestgrouptestpredefsubcode","substring","onskiprule","startDate","endDate","ontaskInputChange","Data","ontaskNumericChange","numericData","numericName","onInputChange","onNumericChange","onDateChange","headerSelectionChange","syntheticEvent","meanTestParameterList","selectedMeanTestParam","selected","ntransactionresultcode","sresult","selectedTestParam","selectedTestParamMean","size","testMean","selectAll","selectionChange","dataItem","delete","valiateCheckAll","onMeanComboChange","comboName","onMaterialComboChange","nmaterialcatcode","needSectionwise","nsectioncode","onComboChange","onChange","caseNo","selectedsubcode","onGradeEvent","parameter","nparametertypecode","NUMERIC","ngradecode","parseFloat","nroundingdigits","PREDEFINED","CHARACTER","trim","saveParam","isTestComment","sampleList","searchedSubSample","acceptList","searchedSample","RE_SAMPLE","selectedSampleList","selectedMaster","onKeyPress","paremterResultcode","keyCode","i","form","elements","focus","preventDefault","onResultInputChange","parameterResults","isParameterInitialRender","onSampleAdd","isaddSampleRender","onSaveMean","resultParameter","selectedTestParameterMean","nroundingdigit","nuserrole","nusercode","isFileupload","onSavePredefinedComments","stransactiontestcode","onSaveEnforceResult","sfinal","senforceresultcomment","onSaveClick","neditable","resultParameters","resultData","results","editable","ncalculatedresult","sresultcomment","salertmessage","additionalInfoUidata","ntestgrouptestpredefcode","FIO","splittedFileName","split","fileExtension","uniquefilename","ssystemfilename","nfilesize","loading","tests","ntestgrouptestparametercode","sampleid","ssampleid","nallottedspeccode","ncomponentcode","ntype","nmethodcode","nsourcecode","ResultUsedInstrument","nresultusedinstrumentcode","ninstrumentcode","dfromdate","dtodate","stzfromdate","ntzfromdate","stztodate","ntztodate","transactiontestcode","nmaterialcode","nmaterialinventorycode","susedquantity","savailablequantity","nmaterialtypecode","nmaterialcategorycode","ninventorycode","jsondata","sarno","ssamplearno","smaterialcatname","smaterialname","sinventoryid","nqtyused","scarriergas","smobilephase","sremarks","susername","ssectionname","MaterialInventoryTrans","IDS_INVENTORYID","smaterialtypename","sanalysistime","smisctime","spreanalysistime","spreparationtime","scomments","ResultUsedTasks","nresultusedtaskcode","sanalyst","staskprocedure","taskArry","info","lstResultCheckList","editedQB","qbcode","ResultCheckList","createRef","childRef","masterStatus","showSubSample","tabPane","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","enablePin","sampleSearchField","subsampleSearchField","testSearchField","parentHeight","height","clientHeight","firstPane","url","nextProps","nextState","parameterResults1","auditInfoFields","slanguagetypecode","feildsForGrid","sampleListRE","subSampleListRE","testListRE","subSampleGetREParam","testGetREParam","samplePrintHistoryDataState","filterSampleParam","inputListName","selectedObject","fetchUrl","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","sfilterstatus","sworklistno","sbatcharno","testStartId","resultEnterId","editSourceMethodId","addResultUsedInstrumentId","addResultUsedMaterailId","patientPreviousResultView","identicalResultEnterId","mandatoryFieldsInstrument","mandatoryFieldsMaterial","mandatoryFieldsTask","mandatoryFieldsTestMethodSource","mandatoryEnforceResult","mandatoryFieldsParameter","reportPreviewId","testDesign","borderBottom","display","searchedTest","setting","selectedFilter","title","controlname","hidden","indexOf","onClick","objectName","elnUserInfo","elnSite","dataplace","nneedtestinitiate","mainDesign","marginTop","DynamicSubSampleColumns","subSampleMoreField","DynamicSampleColumns","sampleMoreField","REJobStatus","stateDynamicDesign","PLASMA_POOL","CLINICALTYPE","background","width","propertyPopupWidth","fullviewExpand","fullviewCollapse","showAlertForPredefined","onlyAlertMsgAvailable","testgrouptestpredefsubresultOptions","parameterResult","PredefinedValues","GradeValues","selectedNumericData","handleClose","onDropTestFile","selectedSpecification","selectedComponent","MethodData","SourceData","InstrumentCategory","timeZoneList","materialType","materialCat","material","materialInventory","DynamicFormulaFields","GradeList","selectedNode","filterData","ApprovalRoleActionDetail","AuditModifiedComments","AdhocParamter","ChecklistData","needSaveButton","temparray","option","LABEL","LISTITEM","list","newList","previousProps","DynamicTestColumns","DynamicDesign","dynamicColumn","parse","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","sampledisplayfields","testListFields","testlistmoreitems","testsearchfields","samplesearchfields","subsamplesearchfields","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","findIndex","DesignTemplateMappingMap","errorCode","mapStatetoProps"],"mappings":"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AClB,GAAI6b,CAAAA,SAAS,CAAG,IAAhB,CACA,GAAI7b,IAAI,EAAIA,IAAI,CAAC2C,MAAL,CAAc,CAA1B,CAA6B,CACzB3C,IAAI,CAACQ,OAAL,CAAa,SAAAub,QAAQ,CAAI,CACrB,GAAIA,QAAQ,CAACT,QAAb,CAAuB,CACnB,GAAIS,QAAQ,CAACT,QAAT,GAAsB,KAA1B,CAAiC,CAC7BO,SAAS,CAAG,KAAZ,CACH,CACJ,CAJD,IAKK,CACDA,SAAS,CAAG,KAAZ,CACH,CACJ,CATD,EAUH,CAXD,IAYK,CACDA,SAAS,CAAG,KAAZ,CACH,CACD,MAAOA,CAAAA,SAAP,CACH,C,sCA+VD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,gCAAuB/X,SAAvB,CAAkClE,UAAlC,CAA8CgM,YAA9C,CAA4D,CACxD,GAAIG,CAAAA,UAAU,CAAG,CAEbjI,SAAS,gCAAOA,SAAP,MAAkB,WAAY,KAAK5E,KAAL,CAAWS,KAAX,CAAiBsE,QAA/C,CAAyD2H,YAAY,CAAZA,YAAzD,EAFI,CAGb;AACA;AACArI,SAAS,CAAE,cALE,CAMbD,UAAU,CAAE,sBANC,CAObqM,WAAW,CAAE,KAAKzQ,KAAL,CAAWS,KAAX,CAAiBoM,UAAjB,CAA4B4D,WAP5B,CAOwC;AACrD;AACA/P,UAAU,CAAEA,UATC,CA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","sourcesContent":["import React, { Component } from 'react';\r\nimport { faPlay, faAddressBook, faCheckCircle, faEye, faPencilRuler, faFileImport, faSync, faBorderAll, faLink, faComment, faComments, faPaperclip, faCommentDots, faChevronRight, faMicroscope, faFlask, faHistory,faBookMedical,faNotesMedical} from '@fortawesome/free-solid-svg-icons';\r\nimport { Card, Col, Row, Nav, Button, Modal } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Axios from \"axios\";\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileInvoice } from '@fortawesome/free-solid-svg-icons';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport PortalModal from '../../PortalModal';\r\nimport Iframe from 'react-iframe';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport {\r\n    crudMaster, updateStore, getsubSampleREDetail, getTestREDetail, getTestChildTabREDetail, resultGetModule, fetchMaterialRecord,\r\n    completeTest, testMethodSourceEdit, addREInstrument, addREMaterial, deleteInstrumentRecord, fetchInstrumentRecord, deleteTaskRecord,\r\n    fetchTaskRecord, parameterRecord, checkListRecord, onSaveCheckList, defaultTest, getFormula, getRERegistrationType, getRERegistrationSubType,\r\n    getREApprovalConfigVersion, getResultEntryDetails, calculateFormula, getREFilterStatus, getREFilterTestData, getREJobStatus,\r\n    viewAttachment, validateEsignCredentialComplete, getAttachmentCombo, deleteAttachment, getCommentsCombo, updateTestMethodSource, resultImportFile,\r\n    filterTransactionList, validateEsignCredential, getSampleChildTabREDetail, updateParameterComments, getREMaterialCategoryByType, getREMaterialByCategory, getREMaterialInvertoryByMaterial,\r\n    previewSampleReport, getMeanCalculationTestParameter, getAvailableMaterialQuantity, testStart, getSubSampleChildTabDetail, getSampleChildTabDetail,\r\n    getREFilterTemplate, getAverageResult,getREMaterialComboGet ,getPredefinedData\r\n    ,getELNTestValidation//,deleteResultUsedMaterial\r\n   \r\n    ,getConfigurationFilter,getTestBasedBatchWorklist,\r\n    addREAdhocParamter,createAdhocParamter\r\n   // ,getPredefinedData,getConfigurationFilter,getTestBasedBatchWorklist//,deleteResultUsedMaterial\r\n         ,enforceResult//,deleteResultUsedMaterial\r\n         ,ResultEntryViewPatientDetails,resultEntryGetParameter,resultEntryGetSpec,resultEntryGetComponent} from '../../actions';\r\n//import { sortData, create_UUID, getControlMap, listDataFromDynamicArray, formatInputDate, validateTwoDigitDate, showEsign, constructOptionList, deleteAttachmentDropZone,CF_encryptionData } from '../../components/CommonScript';\r\nimport { sortData, create_UUID, getControlMap, listDataFromDynamicArray, formatInputDate, validateTwoDigitDate, showEsign, constructOptionList, deleteAttachmentDropZone, Lims_JSON_stringify,CF_encryptionData, onSaveMandatoryValidation } from '../../components/CommonScript';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { SampleType,parameterType, grade, transactionStatus, RegistrationType, RegistrationSubType, FORMULAFIELDTYPE, designProperties, SideBarSeqno, SideBarTabIndex } from '../../components/Enumeration';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component'; \r\n\r\nimport ResultEntryResultsTab from './ResultEntryResultsTab';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ResultEntryFilter from './ResultEntryFilter';\r\nimport ResultEntryInstrumentForm from './ResultEntryInstrumentForm';\r\nimport ResultEntryForm from './ResultEntryForm';\r\nimport ResultEntryParameterForm from './ResultEntryParameterForm';\r\nimport TestEditForm from './TestEditForm';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\r\nimport ApprovalInstrumentTab from '../approval/ApprovalInstrumentTab';\r\nimport ResultEntryTaskTab from './ResultEntryTaskTab';\r\nimport ResultEntryTaskForm from './ResultEntryTaskForm';\r\nimport ResultEntryParamCommetsForm from './ResultEntryParamCommetsForm';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport { numberConversion, numericGrade } from './ResultEntryValidation';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport ResultEntryFormulaForm from './ResultEntryFormulaForm';\r\nimport SampleApprovalHistory from '../approval/SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from '../approval/ResultChangeHistoryTab';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions';\r\nimport ResultEntryImport from './ResultEntryImport';\r\nimport { getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript'\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ResultEntryMean from './ResultEntryMean';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ResultEntryMaterialForm from './ResultEntryMaterialForm';\r\nimport AddAdhocParameter from './AddAdhocParameter';\r\nimport ResultUsedMaterial from './UsedMaterial';\r\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ResultEntryPredefinedComments from './ResultEntryPredefinedComments';\r\nimport ResultEntryEnforceResult from './ResultEntryEnforceResult';\r\nimport SpecificationInfo from '../testgroup/SpecificationInfo';\r\nimport fullviewExpand from '../../assets/image/fullview-expand.svg';\r\nimport fullviewCollapse from '../../assets/image/fullview-collapse.svg';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nclass ResultEntry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef(); \r\n        this.childRef = React.createRef();\r\n        this.state = {\r\n\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            instrumentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            materialDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            taskDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            documentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }]\r\n            },\r\n            resultChangeDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }]\r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'stestsynonym' }] \r\n            },\r\n            sampleHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'sarno' }] \r\n            },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            operation: \"\",\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showTest: true,\r\n            tabPane: 0,\r\n            subsampleskip: 0,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            selectedRecord: {},\r\n            selectedRecordMaterialForm:{},\r\n            selectedRecordInstrumentForm:{},\r\n            selectedRecordTaskForm:{},\r\n            validateFormulaMandyFields: [],\r\n            splitChangeWidthPercentage: 22,\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            subSampleSkip: 0,\r\n            subSampleTake: this.props.Login.settings && this.props.Login.settings[12],\r\n            // subsampletake: this.props.Login.settings\r\n            // && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false,\r\n            openELNSheet: false,\r\n            enlLink:\"\",\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n        }\r\n        //openELNSheet: false\r\n        this.formRef = React.createRef();\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.props.Login.masterData.selectedImportFile\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: { ...this.props.Login.masterData, selectedImportFile: selectedRecord } }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    deleteAttachmentParameterFile = (event,file, fieldName,index) => {\r\n        let selectedRecordParameter = this.state.selectedRecord.ResultParameter[index];\r\n       \r\n        selectedRecordParameter[fieldName] = deleteAttachmentDropZone(selectedRecordParameter[fieldName],\r\n            file)\r\n        let selectedRecord =  this.state.selectedRecord\r\n        selectedRecord['ResultParameter'][index]['editable']= true;\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { masterData: { ...this.props.Login.masterData, ResultParameter.editable\r\n        //         //selectedImportFile: selectedRecord \r\n        //     } }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({\r\n            selectedRecord : selectedRecord//fileToDelete:file.name \r\n        });\r\n\r\n    }\r\n    closeModalShow = () => {\r\n        let showAlertGrid = this.props.Login.showAlertGrid;\r\n        let  selectedRecord=this.props.Login.selectedRecord;\r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        masterData['RESelectedTest'].forEach(object => {\r\n            object['expanded']&&delete object['expanded'];\r\n          });\r\n          selectedRecord['ntestgrouptestpredefsubcode'] &&delete selectedRecord['ntestgrouptestpredefsubcode'] \r\n        showAlertGrid = false;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showAlertGrid ,masterData,selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onTabChangeRulesEngine = (tabProps) => {\r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        masterData['RESelectedTest'].forEach(object => {\r\n            object['expanded']&&delete object['expanded'];\r\n          });\r\n        masterData['activeTabName'] = tabProps.activeTabName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handleExpandChange = (mapobject) => {  \r\n        let childListMap =  new Map(); \r\n        let keylst = Object.keys(mapobject); \r\n        keylst.map((key) => {\r\n            childListMap.set(parseInt(key),\r\n            Object.values(mapobject[key]));\r\n        })\r\n        this.setState({ childListMap })\r\n    }\r\n    availableTestFilter = (data) => { \r\n        let lstntransactionsamplecode=[];\r\n        if (this.props.Login.RegistrationTestAlert) {\r\n            let keylst = Object.keys(this.props.Login.RegistrationTestAlert); \r\n            // keylst.map(x=>{ \r\n            //    this.props.Login.RegistrationTestAlert[x].map(y=> lstntransactionsamplecode.push(y['ntransactionsamplecode'])) \r\n            // }); \r\n           // let boolean1 = keylst.includes(data.ntestgrouptestcode.toString())\r\n            let boolean1 = keylst.includes(data.ntransactiontestcode.toString())\r\n          //  let boolean2 = lstntransactionsamplecode.includes(data.ntransactionsamplecode)\r\n            if (boolean1//&&boolean2\r\n                ) {\r\n                return data;\r\n            }\r\n        } \r\n    } \r\n    unavailableTestFilter = (data) => { \r\n        let lstntransactionsamplecode=[];\r\n        if (this.props.Login.NewTestGroupTestAlert) {\r\n            let keylst = Object.keys(this.props.Login.NewTestGroupTestAlert); \r\n            // keylst.map(x=>{ \r\n            //     this.props.Login.NewTestGroupTestAlert[x].map(y=> lstntransactionsamplecode.push(y['ntransactionsamplecode'])) \r\n            // });\r\n           // let boolean1 = keylst.includes(data.ntestgrouptestcode.toString())\r\n            let boolean1 = keylst.includes(data.ntransactiontestcode.toString())\r\n          //  let boolean2 = lstntransactionsamplecode.includes(data.ntransactionsamplecode)\r\n            if (boolean1//&&boolean2\r\n                ) {\r\n                return data;\r\n            }\r\n        } \r\n    } \r\n    dataStateAvailabletestAlert = (event) => { \r\n            this.setState({ \r\n                dataStateavailabletest: event.dataState\r\n            }); \r\n    }\r\n    dataStateUnAvailabletestAlert = (event) => {  \r\n            this.setState({ \r\n                dataStateunavailabletest: event.dataState\r\n            }); \r\n    }\r\n    tabAlertRulesEngine = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            this.props.Login.RegistrationTestAlert&&this.props.Login.masterData.RESelectedTest&&this.props.Login.masterData.RESelectedTest.filter(this.availableTestFilter).length>0 &&//this.props.Login.RegistrationTestAlert.length>0 &&\r\n            tabMap.set(\"IDS_AVAILABLETESTUNDERSAMPLE\",\r\n                <DataGrid\r\n                    primaryKeyField=\"ntransactiontestcode\" \r\n                    dataResult={process(sortData(this.props.Login.masterData.RESelectedTest.filter(this.availableTestFilter), 'descending', 'ntransactiontestcode') || [],\r\n                    this.state.dataStateavailabletest?this.state.dataStateavailabletest:{ skip: 0, take: 10 })} \r\n                    dataState={this.state.dataStateavailabletest?this.state.dataStateavailabletest:{ skip: 0, take: 10 }}\r\n                    dataStateChange={this.dataStateAvailabletestAlert}\r\n                    extractedColumnList={[\r\n                        { \"idsName\": \"IDS_RULEAPPLIEDTESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }\r\n                    ]}\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                        pageable={true} \r\n                    scrollable={'scrollable'}\r\n                    hideColumnFilter={true}\r\n                    selectedId={0}\r\n                    gridHeight={'350px'}\r\n                    gridWidth={'700px'}\r\n                    expandField=\"expanded\"\r\n                    handleExpandChange={() => {this.handleExpandChange(this.props.Login.RegistrationTestAlert)}}\r\n                    hasChild={true}\r\n                    childMappingField={'ntransactiontestcode'}\r\n                    childColumnList={\r\n                        this.props.Login.masterData.realRegSubTypeValue.nneedsubsample ?\r\n                        [\r\n                        { \"idsName\": \"IDS_RULEDEPENDENTTESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"samplearno\", \"width\": \"200px\" },\r\n                        { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" }\r\n                    ]: [\r\n                        { \"idsName\": \"IDS_RULEDEPENDENTTESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }, \r\n                        { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" }\r\n                    ]}\r\n                    childList={this.state.childListMap}\r\n                    activeTabName={\"IDS_AVAILABLETESTUNDERSAMPLE\"}\r\n                >\r\n                </DataGrid>) \r\n        this.props.Login.NewTestGroupTestAlert&&this.props.Login.masterData.RESelectedTest&&this.props.Login.masterData.RESelectedTest.filter(this.unavailableTestFilter).length>0  &&//this.props.Login.NewTestGroupTestAlert.length>0  &&\r\n            tabMap.set(\"IDS_TESTSNOTAVAILABLEUNDERSAMPLE\",\r\n                <DataGrid\r\n                    primaryKeyField=\"ntransactiontestcode\"\r\n                    dataResult={process(sortData(this.props.Login.masterData.RESelectedTest.filter(this.unavailableTestFilter), 'descending', 'ntransactiontestcode') || [],\r\n                    this.state.dataStateunavailabletest?this.state.dataStateunavailabletest:{ skip: 0, take: 10 })}\r\n                    dataState={this.state.dataStateunavailabletest?this.state.dataStateunavailabletest:{ skip: 0, take: 10 }}\r\n                    dataStateChange={this.dataStateUnAvailabletestAlert}\r\n                    extractedColumnList={[\r\n                        { \"idsName\": \"IDS_RULEAPPLIEDTESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }\r\n                    ]}\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                       pageable={true} \r\n                    scrollable={'scrollable'}\r\n                    hideColumnFilter={true}\r\n                    selectedId={0}\r\n                    expandField=\"expanded\"\r\n                    handleExpandChange={() => {this.handleExpandChange(this.props.Login.NewTestGroupTestAlert)}}\r\n                    gridHeight={'350px'}\r\n                    gridWidth={'700px'}\r\n                    hasChild={true}\r\n                    childMappingField={'ntransactiontestcode'}\r\n                    childColumnList={[ \r\n                        { \"idsName\": \"IDS_RULEDEPENDENTTESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }\r\n                    ]}\r\n                    childList={this.state.childListMap}\r\n                    activeTabName={\"IDS_TESTSNOTAVAILABLEUNDERSAMPLE\"}\r\n                >\r\n                </DataGrid>\r\n            ) \r\n        }\r\n        return tabMap;\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        //let additionInfo=this.props.Login.additionInfo ||{};\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let loadFile = this.props.Login.loadFile;\r\n        let selectedId = this.props.Login.selectedId;\r\n        let updateInfo = {};\r\n        //additionInfo={...selectedRecord};\r\n        if (screenName === \"IDS_RESULTFORMULA\") {\r\n            screenName = \"IDS_RESULTENTRY\";\r\n            operation = \"update\";\r\n            let showValidate = !this.props.Login.showValidate;\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { screenName, operation, showValidate, validateFormulaMandyFields: [] }\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.loadEsign) {\r\n                if (this.props.Login.operation === \"delete\"\r\n                    || this.props.Login.operation === \"complete\"\r\n                    || this.props.Login.operation === \"default\"\r\n                    || this.props.Login.operation === \"deleteTask\"\r\n                    || this.props.Login.operation === \"deleteInstrument\" || this.props.Login.operation === \"deleteMaterial\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                    selectedRecord = {};\r\n                }\r\n                else if (this.props.Login.operation === \"updatechecklist\") {\r\n                    loadEsign = false;\r\n                    openModal = false;\r\n                }\r\n                else {\r\n                    loadEsign = false;\r\n                    selectedRecord['esignpassword'] = \"\";\r\n                    selectedRecord['esigncomments'] = \"\";\r\n                    selectedRecord['esignreason']=\"\";\r\n                }\r\n            } else {\r\n                openModal = false;\r\n                openTemplateModal = false;\r\n                selectedRecord = {};\r\n                loadFile = false;\r\n                selectedId=null;\r\n            }\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { openModal, loadEsign,openTemplateModal,screenName, selectedRecord,loadFile,selectedId }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    realDesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMapping,\r\n                    realApproveConfigVersion:this.props.Login.masterData.realApproveConfigVersion,\r\n                    realApprovalConfigVersionList:this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                    realFilterStatusList:this.props.Login.masterData.realFilterStatusList,\r\n                    realRegistrationSubTypeList:this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realRegistrationTypeList:this.props.Login.masterData.realRegistrationTypeList,\r\n                    realTestvaluesList:this.props.Login.masterData.realTestvaluesList,\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    todate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    //ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    transcode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                    this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    realDesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMapping,\r\n                    realApproveConfigVersion:this.props.Login.masterData.realApproveConfigVersion,\r\n                    realApprovalConfigVersionList:this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                    realFilterStatusList:this.props.Login.masterData.realFilterStatusList,\r\n                    realRegistrationSubTypeList:this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realRegistrationTypeList:this.props.Login.masterData.realRegistrationTypeList,\r\n                    realTestvaluesList:this.props.Login.masterData.realTestvaluesList,\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    //ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    transcode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                    this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString((this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    (this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    realDesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMapping,\r\n                    realApproveConfigVersion:this.props.Login.masterData.realApproveConfigVersion,\r\n                    realApprovalConfigVersionList:this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                    realFilterStatusList:this.props.Login.masterData.realFilterStatusList,\r\n                     realRegistrationSubTypeList:this.props.Login.masterData.realRegistrationSubTypeList,\r\n                     realRegistrationTypeList:this.props.Login.masterData.realRegistrationTypeList,\r\n                     realTestvaluesList:this.props.Login.masterData.realTestvaluesList,\r\n                    nflag: 2,\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromdate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getRERegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString((this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    (this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    realRegistrationSubTypeList:this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realDesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMapping,\r\n                    realApproveConfigVersion:this.props.Login.masterData.realApproveConfigVersion,\r\n                    realApprovalConfigVersionList:this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                    realFilterStatusList:this.props.Login.masterData.realFilterStatusList,\r\n                    realRegistrationTypeList:this.props.Login.masterData.realRegistrationTypeList,\r\n                    realTestvaluesList:this.props.Login.masterData.realTestvaluesList,\r\n                    nflag: 3,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromdate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getRERegistrationSubType(inputData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    realRegistrationSubTypeList:this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realDesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMapping,\r\n                    realApproveConfigVersion:this.props.Login.masterData.realApproveConfigVersion,\r\n                    realApprovalConfigVersionList:this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realDesignTemplateMappingList:this.props.Login.masterData.realDesignTemplateMappingList,\r\n                    realFilterStatusList:this.props.Login.masterData.realFilterStatusList,\r\n                    realRegistrationTypeList:this.props.Login.masterData.realRegistrationTypeList,\r\n                    realTestvaluesList:this.props.Login.masterData.realTestvaluesList,\r\n                    nflag: 4,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultRegistrationSubType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    //ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    ntranscode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                    this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item,\r\n                    defaultRegistrationSubType : this.props.Login.masterData.defaultRegistrationSubType\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getREFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 4,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultApprovalConfigVersion: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                   //ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                   ntranscode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                                this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                    defaultRegistrationSubType : this.props.Login.masterData.defaultRegistrationSubType\r\n                }\r\n                this.props.getREJobStatus(inputData)\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getREFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: 1,// parseInt(this.props.Login.masterData.defaultjobstatus.njobstatuscode),\r\n                    ntranscode: event.value === 0 ?  this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\"): String(event.value),\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultFilterStatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType\r\n                }\r\n                this.props.getREFilterTestData(inputData)\r\n            }\r\n            else if (fieldname === \"test\") {\r\n\r\n                let defaultTestvalues = event.item;\r\n                this.props.Login.masterData.defaultTestvalues = defaultTestvalues;\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: { masterData: { ...this.props.Login.masterData } }\r\n                // }\r\n                // this.props.updateStore(updateInfo);\r\n                inputData = {\r\n                    defaultTestvalues,\r\n                    ntestcode : this.props.Login.masterData.defaultTestvalues.ntestcode,\r\n                    masterData: this.props.Login.masterData,\r\n                    defaultRegistrationSubType : this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                                this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    userinfo:this.props.Login.userInfo,\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode)\r\n\r\n                }\r\n                this.props.getConfigurationFilter(inputData)\r\n            }\r\n            else if (fieldname === \"nconfigfiltercode\") {\r\n\r\n                let defaultConfigurationFilterValue = event.item;\r\n                this.props.Login.masterData.defaultConfigurationFilterValue = defaultConfigurationFilterValue;\r\n                this.props.Login.masterData.realdefaultConfigurationFilterValue = defaultConfigurationFilterValue;\r\n                inputData = {\r\n                    defaultConfigurationFilterValue,\r\n                    nconfigfiltercode : parseInt(this.props.Login.masterData.defaultConfigurationFilterValue.nconfigfiltercode),\r\n                    ntestcode : this.props.Login.masterData.defaultTestvalues.ntestcode,\r\n                    masterData: this.props.Login.masterData,\r\n                    defaultRegistrationSubType : this.props.Login.masterData.defaultRegistrationSubType,\r\n                    //ntranscode: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n                                this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode)\r\n                }\r\n                this.props.getTestBasedBatchWorklist(inputData)\r\n            }\r\n            else if (fieldname === \"nworklistcode\") {\r\n\r\n                let defaultWorklistvalue = event.item;\r\n                this.props.Login.masterData.defaultWorklistvalue = defaultWorklistvalue;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            if (fieldname === \"nbatchmastercode\") \r\n            {\r\n                let defaultBatchvalue = event.item;\r\n                this.props.Login.masterData.defaultBatchvalue = defaultBatchvalue;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n    }\r\n}\r\n        else\r\n        {\r\n            if(fieldname === \"nconfigfiltercode\")\r\n            {\r\n                this.props.Login.masterData.defaultConfigurationFilterValue = [];\r\n                this.props.Login.masterData.defaultWorklistvalue = [];\r\n                this.props.Login.masterData.defaultBatchvalue = [];\r\n\r\n                 const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: { ...this.props.Login.masterData } }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n    }\r\n    OnDateConverstion = (date, fieldname) => {\r\n        const month = validateTwoDigitDate(String(date.getMonth() + 1));\r\n        const day = validateTwoDigitDate(String(date.getDate()));\r\n        if (fieldname === \"fromDate\") {\r\n            date = date.getFullYear() + '-' + month + '-' + day + \"T00:00:00\";\r\n        }\r\n        else {\r\n            date = date.getFullYear() + '-' + month + '-' + day + \"T23:59:00\";\r\n        }\r\n        return date;\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realApproveConfigVersion,\r\n            realFilterStatusValue, realTestcodeValue,realWorklistCodeValue } = this.props.Login.masterData\r\n        //let obj = this.covertDatetoString(realFromDate, realToDate)\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\r\n        let masterData = { ...this.props.Login.masterData, realFromDate: obj.fromDate, realToDate: obj.toDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApproveConfigVersion, realTestcodeValue }\r\n        let inputData = {\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            napprovalversioncode: (realApproveConfigVersion && realApproveConfigVersion.napprovalconfigversioncode) || -1,\r\n            ntranscode: String(realFilterStatusValue ? realFilterStatusValue.ntransactionstatus : -1),\r\n            ntestcode: realTestcodeValue ? realTestcodeValue.ntestcode : -1,\r\n            ntransactiontestcode: 0,\r\n            njobstatuscode: (this.props.Login.masterData.defaultjobstatus && this.props.Login.masterData.defaultjobstatus.njobstatuscode) || 1,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestKey || \"IDS_RESULTS\",\r\n            showTest: true,\r\n            showSample: false,\r\n            checkBoxOperation: 3,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            nworlistcode : (realWorklistCodeValue && realWorklistCodeValue.nworklistcode) || -1\r\n        }\r\n        const inpuParamData = {\r\n            inputData,\r\n            masterData,\r\n            refs: { searchSampleRef: this.searchSampleRef, searchSubSampleRef: this.searchSubSampleRef, searchTestRef: this.searchTestRef },\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.napprovalversioncode !== -1\r\n            && inputData.ntranscode !== -1 && inputData.njobstatuscode !== -1 && inputData.ntestcode !== -1) {\r\n            this.props.getResultEntryDetails(inpuParamData)\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    onDesignTemplateChange = (event, fieldName, labelname) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData = {\r\n            ...masterData,\r\n            [labelname]: { ...event.item }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onREFilterSubmit = (event) => {\r\n        // let realFromDate = new Date(this.props.Login.masterData.fromDate)\r\n        // let realToDate = new Date(this.props.Login.masterData.toDate)\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n        let realSampleTypeValue = this.props.Login.masterData.defaultSampleType && this.props.Login.masterData.defaultSampleType\r\n        let realRegTypeValue = this.props.Login.masterData.defaultRegistrationType && this.props.Login.masterData.defaultRegistrationType\r\n        let realRegSubTypeValue = this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType\r\n        let realApproveConfigVersion = this.props.Login.masterData.defaultApprovalConfigVersion && this.props.Login.masterData.defaultApprovalConfigVersion\r\n        let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus\r\n        let realTestcodeValue = this.props.Login.masterData.defaultTestvalues && this.props.Login.masterData.defaultTestvalues\r\n        let realWorklistCodeValue = this.props.Login.masterData.defaultWorklistvalue &&  this.props.Login.masterData.defaultWorklistvalue\r\n        let realBatchCodeValue = this.props.Login.masterData.defaultBatchvalue &&  this.props.Login.masterData.defaultBatchvalue\r\n        let realDesignTemplateMapping = this.props.Login.masterData.DesignTemplateMappingValue &&  this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realDesignTemplateMappingList=this.props.Login.masterData.DesignTemplateMapping &&  this.props.Login.masterData.DesignTemplateMapping\r\n        let realApprovalConfigVersionList=this.props.Login.masterData.ApprovalConfigVersion &&  this.props.Login.masterData.ApprovalConfigVersion\r\n        let realFilterStatusList=this.props.Login.masterData.REFilterStatus && this.props.Login.masterData.REFilterStatus\r\n        let realRegistrationTypeList=this.props.Login.masterData.RegistrationType && this.props.Login.masterData.RegistrationType\r\n        let realRegistrationSubTypeList=this.props.Login.masterData.RegistrationSubType && this.props.Login.masterData.RegistrationSubType\r\n       // let realBatchvaluesList=this.props.Login.masterData.RegistrationType\r\n       // let  RealWorklistvaluesList=this.props.Login.masterData.RegistrationType\r\n        let realConfigurationFilterValuesList=this.props.Login.masterData.ConfigurationFilterValues && this.props.Login.masterData.ConfigurationFilterValues\r\n        \r\n\r\n\r\n         //let obj = this.covertDatetoString(realFromDate, realToDate)\r\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\r\n        let masterData = { ...this.props.Login.masterData, realFromDate: obj.fromDate,\r\n             realToDate: obj.toDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, \r\n             realApproveConfigVersion, realTestcodeValue,realWorklistCodeValue,realBatchCodeValue \r\n             ,realDesignTemplateMapping,realDesignTemplateMappingList,realApprovalConfigVersionList,realFilterStatusList,realRegistrationTypeList,realRegistrationSubTypeList,\r\n             realConfigurationFilterValuesList }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.defaultSampleType && this.props.Login.masterData.defaultSampleType.nsampletypecode) || -1,\r\n            nregtypecode: (this.props.Login.masterData.defaultRegistrationType && this.props.Login.masterData.defaultRegistrationType.nregtypecode) || -1,\r\n            nregsubtypecode: (this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode) || -1,\r\n            napprovalversioncode: (this.props.Login.masterData.defaultApprovalConfigVersion && this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode) || -1,\r\n            ntranscode: this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? \r\n            this.props.Login.masterData.REFilterStatus.map(item => item.ntransactionstatus).join(\",\") : String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus), \r\n            //ntranscode: String(this.props.Login.masterData.defaultFilterStatus ? this.props.Login.masterData.defaultFilterStatus.ntransactionstatus : -1),\r\n            ntestcode: this.props.Login.masterData.defaultTestvalues ? this.props.Login.masterData.defaultTestvalues.ntestcode : -1,\r\n            ntransactiontestcode: 0,\r\n            njobstatuscode: (this.props.Login.masterData.defaultjobstatus && this.props.Login.masterData.defaultjobstatus.njobstatuscode) || 1,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestKey: this.props.Login.activeTestKey || \"IDS_RESULTS\",\r\n            showTest: true,\r\n            showSample: false,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            checkBoxOperation: 3,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nworlistcode : (this.props.Login.masterData.defaultWorklistvalue && this.props.Login.masterData.defaultWorklistvalue.nworklistcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.defaultBatchvalue && this.props.Login.masterData.defaultBatchvalue.nbatchmastercode) || -1\r\n        }\r\n        const inpuParamData = {\r\n            inputData,\r\n            masterData,\r\n            refs: { searchSampleRef: this.searchSampleRef, searchSubSampleRef: this.searchSubSampleRef, searchTestRef: this.searchTestRef },\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState\r\n        }\r\n\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.napprovalversioncode !== -1\r\n            && inputData.ntranscode !== -1 && inputData.njobstatuscode !== -1 && inputData.ntestcode !== undefined) {\r\n            this.props.getResultEntryDetails(inpuParamData)\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n\r\n    //     const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay + \"T00:00:00\";\r\n    //     const toDate = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    onSecondaryPaneSizeChange = (e, val) => {\r\n\r\n        // let hGrand = this.state.grandparentheight\r\n        // let check = e - 400;\r\n        // if (check > 1) {\r\n        //     hGrand = this.state.parentHeight + check\r\n        // }\r\n        // this.setState({\r\n        //     paneHeight: e - val,\r\n        //     secondPaneHeight: hGrand - e - 70,\r\n        //     grandparentheight: hGrand\r\n        // })\r\n        // this.setState({\r\n        //     paneHeight: e - val,\r\n        //     secondPaneHeight: this.state.parentHeight - e - 70\r\n        // })\r\n    }\r\n\r\n    onComboCategoryChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'resultentrybysample/getResultUsedInstrumentCombo';\r\n            if (fieldname === \"ninstrumentcatcode\") {\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nflag: 2,\r\n                    ninstrumentcatcode: event.value,\r\n                    ncalibrationRequired: event.item.ncalibrationreq\r\n                }\r\n            }\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n                    const TagInstrument = constructOptionList(response.data.Instrument || [], \"ninstrumentcode\",\r\n                        \"sinstrumentid\", undefined, undefined, undefined);\r\n                    const TagListInstrument = TagInstrument.get(\"OptionList\")\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            masterData: { ...this.props.Login.masterData, Instrument: TagListInstrument },\r\n                            selectedRecord: {\r\n                                ...this.props.Login.selectedRecord,\r\n                                [fieldname]: event,\r\n                                ninstrumentcode: TagInstrument.get(\"DefaultValue\") ? TagInstrument.get(\"DefaultValue\") : [],\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                    // const selectedRecord = this.state.selectedRecord || {};\r\n                    // selectedRecord[fieldname] = event;\r\n                    // this.setState({ selectedRecord });\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    showRESampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showRETestList() {\r\n        this.setState({ showTest: true, showSample: false, showSubSample: false })\r\n    }\r\n\r\n    // getMeanTestParameter =(meanParam)=>{\r\n    //     const inputData = {npreregno:meanParam.selectedRecord.npreregno,\r\n    //                        userinfo:this.props.Login.userInfo}\r\n    //     return rsapi.post(\"resultentrybysample/getMeanCalculationTestParameter\", inputData)\r\n    //         .then(response => {\r\n    //            const list =  response.data || [];\r\n    //            const optionList = [];\r\n    //            list.map(item=>{optionList.push({item:item, label:item.stestsynonym+\"-\"+item.sparametername+\"-\"+item.sresult, value:item.ntransactiontestresultcode})})\r\n    //            this.setState({meanTestParameterList:optionList});                \r\n    //         })\r\n    //         .catch(error => {\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             } else {\r\n    //                 toast.warn(error.response.data);\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    showRESubSampleinfo() {\r\n        this.setState({ showSample: false, showTest: true, showSubSample: !this.state.showSubSample })\r\n    } \r\n    testRETabDetail = () => {\r\n        const testTabMap = new Map();\r\n        //let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.RE_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n\r\n        const meanControlId = this.state.controlMap.has(\"CalculateMean\") && this.state.controlMap.get(\"CalculateMean\").ncontrolcode\r\n\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        testTabMap.set(\"IDS_RESULTS\", <ResultEntryResultsTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel ={this.props.Login.genericLabel}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            fetchRecord={this.props.parameterRecord}\r\n            editpredefinedcomments={this.editpredefinedcomments}\r\n            enforceResult={this.enforceResult}\r\n            controlMap={this.state.controlMap}\r\n            parameterParam={{ primaryKeyField: \"ntransactionresultcode\", masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            checkListRecord={this.checkListRecord}\r\n            checklistParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            viewFile={this.props.viewAttachment}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_RESULTS\"\r\n            getMeanTestParameter={this.props.getMeanCalculationTestParameter}\r\n            meanParam={{ \"userInfo\": this.props.Login.userInfo, ncontrolCode: meanControlId }}\r\n        />)\r\n        testTabMap.set(\"IDS_INSTRUMENT\", <ApprovalInstrumentTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel ={this.props.Login.genericLabel}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedInstrument\"}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            dataState={this.state.instrumentDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteInstrumentRecord}\r\n            fetchRecord={this.fetchInstrumentRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_INSTRUMENT\"\r\n        />)\r\n        testTabMap.set(\"IDS_MATERIAL\", <ResultUsedMaterial\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel ={this.props.Login.genericLabel}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedMaterial\"}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            dataState={this.state.materialDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteMaterialRecord}\r\n            fetchRecord={this.props.fetchMaterialRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_MATERIAL\"\r\n        />)\r\n        testTabMap.set(\"IDS_TASK\", <ResultEntryTaskTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel={this.props.Login.genericLabel}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            methodUrl={\"ResultUsedTask\"}\r\n            addResultEntryTask={this.addResultEntryTask}\r\n            controlMap={this.state.controlMap}\r\n            deleteParam={{\r\n                masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.state.controlMap.has(\"DeleteResultUsedTask\") && this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode\r\n            }}\r\n            editParam={{\r\n                masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.state.controlMap.has(\"EditResultUsedTask\") && this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode\r\n            }}\r\n            dataState={this.state.taskDataState}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            isActionRequired={true}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteRecord={this.deleteTaskRecord}\r\n            fetchRecord={this.fetchTaskRecord}\r\n            //fetchRecord={this.fetchInstrumentRecord}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_TASK\" />)\r\n        testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"RESelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n            userInfo={this.props.Login.userInfo}\r\n            isneedReport = {false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList//this.props.Login.masterData.RESelectedTest\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n        testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            isSampleTestComment={true}\r\n            selectedMaster=\"RESelectedTest\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            isTestComment={true}\r\n\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    masterList: this.props.Login.masterData.RESelectedTest,\r\n                    ncontrolCode: this.state.controlMap.has(\"DeleteTestComment\") && this.state.controlMap.get(\"DeleteTestComment\").ncontrolcode\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RESelectedTest,\r\n                ncontrolCode: this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode\r\n\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        testTabMap.set(\"IDS_RESULTCHANGEHISTORY\", <ResultChangeHistoryTab\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel={this.props.Login.genericLabel}\r\n            ApprovalResultChangeHistory={this.props.Login.masterData.ResultChangeHistory || []}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultChangeDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n            controlMap={this.state.controlMap}\r\n            masterData={this.props.Login.masterData}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            selectedId={null}\r\n\r\n        />)\r\n\r\n        return testTabMap;\r\n    }\r\n\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleKey) {\r\n            case \"IDS_APPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({ sampleGridDataState: event.dataState })\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestKey) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    dataResultStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState })\r\n      }\r\n\r\n    // sampleTabDetail = () => {\r\n    //     const tabMap = new Map();\r\n\r\n    //     {\r\n    //         this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\r\n    //             tabMap.set(\"IDS_SAMPLEINFO\", <SampleInfoView\r\n    //                 data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0 ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\r\n    //                 SingleItem={this.state.SingleItem}\r\n    //                 screenName=\"IDS_SAMPLEINFO\"\r\n    //             />) :\r\n    //             tabMap.set(\"IDS_SAMPLEGRID\", <SampleInfoGrid\r\n    //                 selectedSample={this.props.Login.masterData.RESelectedSample}\r\n    //                 dataState={this.state.dataState}\r\n    //                 dataStateChange={this.dataStateChange}\r\n    //                 detailedFieldList={this.state.SampleGridExpandableItem}\r\n    //                 extractedColumnList={this.state.SampleGridItem}\r\n    //                 userInfo={this.props.Login.userInfo}\r\n    //                 inputParam={this.props.Login.inputParam}\r\n    //                 screenName=\"IDS_SAMPLEGRID\"\r\n    //             />)\r\n    //         // tabMap.set(\"IDS_SAMPLEATTACHMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SAMPLECOMMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <></>)\r\n    //         // tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <></>)\r\n    //         return tabMap;\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.RESelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.RESelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.RESelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"RESelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.RESelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RESelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId = {this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                masterData={this.props.Login.masterData}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n\r\n    subsampleTabDetail = () => {\r\n        let ntransactionsamplecode = this.props.Login.masterData.RESelectedSubSample ?\r\n            this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n        let subsampleList = this.props.Login.masterData.RE_SUBSAMPLE || [];\r\n        let { subsampleskip, subsampletake } = this.state\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.RESelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"selectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.RESelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.RE_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"RESelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            masterData={this.props.Login.masterData}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.RESelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RE_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLEARNO\"\r\n            displayName=\"ssamplearno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                RESelectedSample: this.props.Login.masterData.RESelectedSample,\r\n                npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n        const activeTestKey = tabProps.screenName;\r\n        if (activeTestKey !== this.props.Login.activeTestKey) {\r\n            if (this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    RESelectedTest: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest : \"\",\r\n                    // ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                    //     this.props.Login.masterData.selectedTestCode : this.props.Login.masterData.RESelectedTest ?\r\n                    //         String(this.props.Login.masterData.RESelectedTest.ntransactiontestcode) : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: activeTestKey,\r\n                    screenName: activeTestKey,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    sampleChangeDataState: this.state.sampleChangeDataState\r\n                }\r\n                this.props.getTestChildTabREDetail(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    openClosePortal = (test) => {\r\n        if(this.props.Login.openELNSheet===undefined || !this.props.Login.openELNSheet)\r\n        {\r\n            this.props.Login.masterData.enlLink=\"\";\r\n        // if(test.RESelectedTest.length === 1)\r\n        // {           \r\n                this.props.getELNTestValidation(test,this.props.Login.integrationSettings);            \r\n        // }\r\n        // else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONLYONETEST\" }));\r\n        // }\r\n    }\r\n        else{\r\n           //this.props.Login.masterData.enlLink=undefined;\r\n\r\n            const updateInfo = {\r\n               typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openELNSheet: false,\r\n                    masterData: {\r\n                        openELNSheet: false,\r\n                        ...this.props.Login.masterData,  \r\n                        enlLink:\"\"\r\n                    }\r\n                                        \r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n       \r\n    /*openClosePortal = (test) => {\r\n        if(this.state.openELNSheet === false )\r\n        {\r\n            this.props.Login.masterData.enlLink=\"\";\r\n        // if(test.RESelectedTest.length === 1)\r\n        // {           \r\n                this.props.getELNTestValidation(test,this.props.Login.integrationSettings);            \r\n        // }\r\n        // else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONLYONETEST\" }));\r\n        // }\r\n    }\r\n        else{\r\n           //this.props.Login.masterData.enlLink=undefined;\r\n\r\n            // const updateInfo = {\r\n            //    typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         openELNSheet: false,\r\n            //         masterData: {\r\n            //             openELNSheet: false,\r\n            //             ...this.props.Login.masterData,  \r\n            //             enlLink:\"\"\r\n            //         },\r\n            //         enlLink:\"\"                 \r\n            //     }\r\n                \r\n            // }\r\n            //this.props.updateStore(updateInfo);\r\n            this.setState({ openELNSheet: false,  enlLink:\"\" })\r\n        }\r\n        // if (this.state.openELNSheet === false) {\r\n            // if (test.test.selensheetname !== null) {\r\n                /*let enlLink = \"\";\r\n                   const elnuser= {\r\n                     usercode: test.elnUserInfo.nelncode,\r\n                     username: test.elnUserInfo.selnusername,\r\n                     userfullname: test.elnUserInfo.selnusername,\r\n                    lsusergroup: {\r\n                     usergroupcode: test.elnUserInfo.nelnusergroupcode,\r\n                     usergroupname: test.elnUserInfo.nelnusergroupcode,\r\n                     },\r\n                    //  lssitemaster:{ sitecode:sitecode }\r\n                    }\r\n\r\n                    const user = CF_encryptionData(elnuser).EncryptData;\r\n                const enlcredential = {\r\n                    ElnUser: CF_encryptionData(this.props.Login.settings[20]).EncryptData,\r\n                    Elntenant: CF_encryptionData(\"-1\").EncryptData,\r\n                    Elnloginfrom: CF_encryptionData(\"-1\").EncryptData,\r\n                    //Elntoken: CF_encryptionData(\"\").EncryptData,\r\n                    Elnpassword: CF_encryptionData(this.props.Login.settings[21]).EncryptData,\r\n                    Elnsitecode: CF_encryptionData(this.props.Login.settings[22]).EncryptData,\r\n                    Elnsitename: CF_encryptionData(this.props.Login.settings[23]).EncryptData,\r\n                    Elnusergroupname: CF_encryptionData(this.props.Login.settings[24]).EncryptData,\r\n                    Elnusergroupcode: CF_encryptionData(this.props.Login.settings[25]).EncryptData,\r\n                }\r\n\r\n                //Axios.post(\"http://5.189.171.17:8095/ELN-0.0.1-SNAPSHOT/authenticate\",inputou)\r\n                //Axios.post(this.props.Login.settings[27], inputou)\r\n                // Axios.post(\"https://logilabelntesting.azurewebsites.net/\", user)\r\n                //     .then(response => {\r\n                        const testname = test.test.stestname.substring(0, test.test.stestname.indexOf(\"[\")).trim();\r\n\r\n                        //const batchId = test.test.sarno+'-'+test.test.stestname;\r\n                        const batchId = test.test.sarno + '-' + testname;\r\n                        const ntransactiontestcode = CF_encryptionData(batchId//test.RESelectedTest[0].ntransactiontestcode\r\n                        ).EncryptData;\r\n                        // const Elntoken = CF_encryptionData(\"Bearer \" + response.data.token).EncryptData;\r\n\r\n\r\n                        // const link =\r\n                        //     //window.location.href.toString() \r\n                        //     \"\" +\r\n                        //     '#{\"orderid\":\"' +\r\n                        //     ntransactiontestcode +\r\n                        //     '\",\"u\":\"' +\r\n                        //     enlcredential.ElnUser +\r\n                        //     '\",\"t\":\"' +\r\n                        //     enlcredential.Elntenant +\r\n                        //     '\",\"l\":\"' +\r\n                        //     enlcredential.Elnloginfrom +\r\n                        //     '\",\"k\":\"' +\r\n                        //     Elntoken +\r\n                        //     //response.data.token+\r\n                        //     '\",\"uc\":\"' +\r\n                        //     enlcredential.Elnusergroupcode +\r\n                        //     '\",\"ug\":\"' +\r\n                        //     enlcredential.Elnusergroupname +\r\n                        //     '\",\"sc\":\"' +\r\n                        //     enlcredential.Elnsitecode +\r\n                        //     '\",\"sn\":\"' +\r\n                        //     enlcredential.Elnsitename +\r\n                        //     '\",\"LO\":\"' +\r\n                        //     ntransactiontestcode +\r\n                        //     '\"}';\r\n\r\n                        const link =\r\n                            //window.location.href.toString() \r\n                            \"\" +\r\n                            '#{\"orderid\":\"' +\r\n                            ntransactiontestcode +\r\n                            '\",\"user\":\"' +\r\n                            user +\r\n                            '\",\"batchid\":\"' +\r\n                            ntransactiontestcode +\r\n                            '\"}';\r\n                        \r\n                        //enlLink = \"https://logilabelntest.azurewebsites.net/vieworder\".concat(link);\r\n                        enlLink=\"https://logilabelntesting.azurewebsites.net/\";\r\n                        console.log(\"eln link:\", enlLink);\r\n                        //}\r\n                        // this.setState({ openELNSheet: !this.state.openELNSheet, nflag: 1, enlLink })\r\n                        this.setState({ openELNSheet: true, nflag: 1, enlLink })\r\n                        //this.props.encryptionData(test);\r\n                    // })\r\n                    //this.getActiveTestURL() \r\n                    // .catch(response => { })\r\n            // }\r\n            // else {\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOSHEETFORTHISTEST\" }));\r\n\r\n            // }\r\n/*}\r\nelse {\r\n            this.setState({ openELNSheet: !this.state.openELNSheet, nflag: 1 })\r\n\r\n            let testChildGetREParam = {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                activeTestKey: 'IDS_RESULTS',\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                RESelectedTest: this.props.Login.masterData.RESelectedTest\r\n            }\r\n\r\n            this.props.getTestChildTabREDetail(testChildGetREParam, true)\r\n\r\n\r\n\r\n            //this.filterTestParam\r\n        }*/\r\n\r\n     }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSubSampleTab = tabProps.screenName;\r\n        if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSubSample: this.props.Login.masterData.RESelectedSubSample,\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSubSampleTab,\r\n                activeSubSampleTab,\r\n                subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n\r\n    viewSample = (viewdetails) => {\r\n        this.props.ResultEntryViewPatientDetails(this.props.Login.masterData, \"IDS_PREVIOUSRESULTVIEW\", this.props.Login.userInfo, viewdetails);\r\n      };\r\n\r\n    subSampledataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subSampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subSampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    testMethodSourceEdit = (test) => {\r\n        this.props.testMethodSourceEdit(test)\r\n    }\r\n\r\n    addREInstrument = (test) => {\r\n        this.props.addREInstrument(test)\r\n    }\r\n    adhocTestParameter = (test) => {\r\n        \r\n        const inputData = {\r\n            ntestcode: test.test.ntestcode,\r\n            ntestgrouptestcode: test.test.ntestgrouptestcode,\r\n            ntransactiontestcode: test.test.ntransactiontestcode,\r\n            npreregno:test.test.npreregno,\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: test.userInfo,\r\n            adhocId:test.adhocId\r\n        }\r\n            this.props.addREAdhocParamter(inputData)\r\n    }\r\n\r\n    deleteInstrumentRecord = (test) => {\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        test = { ...test, 'ndesigntemplatemappingcode': ndesigntemplatemappingcode }\r\n        let inputParam = {\r\n            inputData: { ...test, 'ndesigntemplatemappingcode': ndesigntemplatemappingcode, 'userinfo': this.props.Login.userInfo },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"deleteInstrument\",\r\n            screenName: \"deleteInstrumentAction\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteInstrumentAction\",\r\n                    operation: \"deleteInstrument\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.deleteInstrumentRecord(test)\r\n        }\r\n\r\n\r\n    }\r\n    fetchInstrumentRecord = (test) => {\r\n        this.props.fetchInstrumentRecord(test)\r\n    }\r\n    fetchMaterialRecord = (test) => {\r\n        this.props.fetchMaterialRecord(test)\r\n    }\r\n\r\n    //Aravindh\r\n    deleteMaterialRecord = (test) => {\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n        test = { ...test, nregtypecode: nregtypecode, nregsubtypecode: nregsubtypecode, ndesigntemplatemappingcode: ndesigntemplatemappingcode }\r\n        let inputParam = {\r\n            inputData: {\r\n                ...test.selectedRecord,\r\n                nregtypecode: nregtypecode, nregsubtypecode: nregsubtypecode, ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                ntransactiontestcode: test.masterData.RESelectedTest ?\r\n                    test.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n\r\n            classUrl: 'resultentrybysample',\r\n            methodUrl: \"ResultUsedMaterial\",\r\n            operation: \"delete\",\r\n            //screenName: \"deleteMaterialAction\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n            nresultusedmaterialcode: test.selectedRecord.nresultusedmaterialcode,\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteMaterialAction\",\r\n                    operation: \"deleteMaterial\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            //this.props.deleteResultUsedMaterial(test)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteTaskRecord = (test) => {\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n        test = { ...test, ndesigntemplatemappingcode: ndesigntemplatemappingcode }\r\n        let inputParam = {\r\n            inputData: { ...test, 'userinfo': this.props.Login.userInfo },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"deleteTask\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //test: test\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, test.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"deleteTaskaction\",\r\n                    operation: \"deleteTask\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.deleteTaskRecord(test)\r\n        }\r\n\r\n    }\r\n    fetchTaskRecord = (test) => {\r\n        this.props.fetchTaskRecord(test)\r\n    }\r\n    addResultEntryTask = (inputData) => {\r\n        let selectedRecord = {}\r\n        let selectedRecordTaskForm = {}\r\n        selectedRecord = {\r\n            npreregno: inputData.npreregno,\r\n            ntransactiontestcode: inputData.ntransactiontestcode,\r\n            stestsynonym: inputData.stestsynonym\r\n        }\r\n        selectedRecordTaskForm = {\r\n            npreregno: inputData.npreregno,\r\n            ntransactiontestcode: inputData.ntransactiontestcode,\r\n            stestsynonym: inputData.stestsynonym\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: selectedRecord,\r\n                selectedRecordTaskForm:selectedRecordTaskForm,\r\n                operation: \"create\",\r\n                screenName: \"IDS_TASK\",\r\n                openModal: true,\r\n                activeTestKey: \"IDS_TASK\",\r\n                isTaskInitialRender:true,\r\n                ncontrolcode: inputData.addResultUsedTaskId,\r\n                selectedId: null\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    checkListRecord = (parameterData) => {\r\n        this.props.checkListRecord(parameterData, this.props.Login.userInfo)\r\n    }\r\n    getFormula = (parameterData, userInfo, masterData, index, event) => {\r\n        this.setState({\r\n            modalEvent: event.currentTarget\r\n        })\r\n        this.props.getFormula(parameterData, userInfo, masterData, index, this.state.selectedRecord)\r\n    }\r\n\r\n    getAverageResult = (event, parameterData, index, selectedForumulaInput, masterData, selectedRecord) => {\r\n\r\n        if (!selectedRecord.selectedForumulaInput[index].senableAverage) {\r\n            this.props.getAverageResult(parameterData, index, selectedForumulaInput, this.props.Login.userInfo, masterData, selectedRecord);\r\n        }\r\n        else {\r\n            selectedForumulaInput[index].senableAverage = !selectedRecord.selectedForumulaInput[index].senableAverage;\r\n            selectedForumulaInput[index].svalues = selectedForumulaInput[index].soldvalue;\r\n\r\n            this.setState({  \r\n                selectedRecord:{\r\n                    ...selectedRecord,\r\n                    selectedForumulaInput\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    calculateFormula = () => {\r\n        const selectedRecord = this.state.selectedRecord || []\r\n        const selectedForumulaInput = selectedRecord.selectedForumulaInput || []\r\n        let lstDynamicFields = [];\r\n\r\n        if (selectedForumulaInput) {\r\n            selectedForumulaInput.map(dynamicfields =>\r\n                lstDynamicFields.push(dynamicfields)\r\n            );\r\n            const inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                lstDynamicFields: lstDynamicFields,\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: selectedRecord,\r\n                selectedResultGrade: this.state.selectedRecord.selectedResultGrade,\r\n                ResultParameter: this.state.selectedRecord.ResultParameter || {}\r\n            }\r\n            this.props.calculateFormula(inputData)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n    getActiveTestURL() {\r\n        let url = \"resultentrybysample/getTestbasedParameter\"\r\n        switch (this.props.Login.activeTestKey) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"resultentrybysample/getTestbasedParameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                url = \"attachment/getSampleAttachment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"resultentrybysample/getResultChangeHistory\"\r\n                break;\r\n            case \"IDS_APPROVALHISTORY\":\r\n                url = \"resultentrybysample/getSampleApprovalHistory\"\r\n                break;\r\n            case \"IDS_SAMPLEATTACHMENTS\":\r\n                url = \"attachment/getSampleAttachment\"\r\n                break;\r\n            default:\r\n                url = \"resultentrybysample/getTestbasedParameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    resultImport = () => {\r\n        this.props.Login.masterData.selectedImportFile = []\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                operation: \"create\",\r\n                screenName: \"IDS_RESULTIMPORTFILE\",\r\n                openModal: true,\r\n                loadFile: true,\r\n                activeTestKey: \"IDS_RESULTS\",\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues={\r\n        SampleType:this.props.Login.masterData.realSampleTypeList || [],\r\n        SampleTypeValue:this.props.Login.masterData.realSampleTypeValue || {},\r\n        RegistrationType:this.props.Login.masterData.realRegistrationTypeList || [],\r\n        RegTypeValue:this.props.Login.masterData.realRegTypeValue || {},\r\n        RegistrationSubType:this.props.Login.masterData.realRegistrationSubTypeList || [],\r\n        RegSubTypeValue:this.props.Login.masterData.realRegSubTypeValue || {},\r\n        DesignTemplateMappingValue:this.props.Login.masterData.realDesignTemplateMapping || {},\r\n        DesignTemplateMapping:this.props.Login.masterData.realDesignTemplateMappingList || [],\r\n        REFilterStatus:this.props.Login.masterData.realFilterStatusList || [],\r\n        FilterStatusValue:this.props.Login.masterData.realFilterStatusValue || {},\r\n        ApprovalConfigVersion:this.props.Login.masterData.realApprovalConfigVersionList || [],\r\n        ApprovalVersionValue:this.props.Login.masterData.realApproveConfigVersion || {},\r\n       // REJobStatus:this.state.REJobStatus || [],\r\n       JobStatusValue:this.props.Login.masterData.defaultjobstatus || {},\r\n       Testvalues:this.props.Login.masterData.realTestvaluesList   || [],\r\n        Batchvalues:this.props.Login.masterData.realBatchvaluesList || [],\r\n        BatchValue :this.props.Login.masterData.realBatchvalue || {},\r\n        Worklistvalues:this.props.Login.masterData.RealWorklistvaluesList || [],\r\n        WorklistValue :this.props.Login.masterData.realWorklistvalue || {},\r\n        TestValue:this.props.Login.masterData.realTestcodeValue || {},\r\n        ConfigurationFilterValues:this.props.Login.masterData.realConfigurationFilterValuesList || [],\r\n        ConfigurationFilterValue :this.props.Login.masterData.realdefaultConfigurationFilterValue || {},\r\n        defaultSampleType:this.props.Login.masterData.realSampleTypeValue || {},\r\n        defaultRegistrationType:this.props.Login.masterData.realRegTypeValue || {},\r\n        defaultRegistrationSubType:this.props.Login.masterData.realRegSubTypeValue || {},\r\n        defaultFilterStatus:this.props.Login.masterData.realFilterStatusValue || {},\r\n        defaultApprovalConfigVersion:this.props.Login.masterData.realApproveConfigVersion || {},\r\n        defaultBatchvalue:this.props.Login.masterData.realBatchvalue || {},\r\n        defaultWorklistvalue:this.props.Login.masterData.realWorklistvalue || {},\r\n        defaultTestvalues:this.props.Login.masterData.realTestcodeValue || {},\r\n        defaultConfigurationFilterValue:this.props.Login.masterData.realdefaultConfigurationFilterValue || {},\r\n        fromDate:this.props.Login.masterData.realFromDate  || new Date(),\r\n        toDate:this.props.Login.masterData.realToDate || new Date()\r\n       // DynamicDesignMapping:this.state.stateDynamicDesign || []\r\n        }\r\n      \r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false,masterData:{...this.props.Login.masterData,...inputValues} }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subSampleSkip: e.skip,\r\n            subSampleTake: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take,\r\n            sampletakeDataState: e.take\r\n        });\r\n    };\r\n    verticalPaneSizeChange = (val) => {\r\n        if (this.state.enableAutoHeight) {\r\n            this.setState({\r\n                initialVerticalWidth: val - 150\r\n            })\r\n        }\r\n    }\r\n    changeSplitterOption = () => {\r\n        this.setState({\r\n            enableAutoHeight: !this.state.enableAutoHeight,\r\n            initialVerticalWidth: \"57vh\"\r\n\r\n        })\r\n    }\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.RE_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName == \"IDS_RESULTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"} tabDetail={this.resultTabDetail()}  onTabChange={this.onTabChange} />\r\n                : screenName == \"IDS_ATTACHMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName == \"IDS_COMMENTS\" ?\r\n                        <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                        :\r\n                        screenName == \"IDS_INSTRUMENT\" ?\r\n                            <ApprovalInstrumentTab\r\n                                userInfo={this.props.Login.userInfo}\r\n                                genericLabel ={this.props.Login.genericLabel}\r\n                                masterData={this.props.Login.masterData}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                methodUrl={\"ResultUsedInstrument\"}\r\n                                controlMap={this.state.controlMap}\r\n                                deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                dataState={this.state.instrumentDataState}\r\n                                selectedId={this.props.Login.selectedId || null}\r\n                                isActionRequired={true}\r\n                                dataStateChange={this.dataStateChange}\r\n                                deleteRecord={this.deleteInstrumentRecord}\r\n                                fetchRecord={this.fetchInstrumentRecord}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                screenName=\"IDS_INSTRUMENT\"\r\n                            />\r\n                            :\r\n                            screenName == \"IDS_MATERIAL\" ?\r\n                                <ResultUsedMaterial\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    genericLabel ={this.props.Login.genericLabel}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    methodUrl={\"ResultUsedMaterial\"}\r\n                                    controlMap={this.state.controlMap}\r\n                                    deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                                    dataState={this.state.materialDataState}\r\n                                    selectedId={this.props.Login.selectedId || null}\r\n                                    isActionRequired={true}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    deleteRecord={this.deleteMaterialRecord}\r\n                                    fetchRecord={this.props.fetchMaterialRecord}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    screenName=\"IDS_MATERIAL\"\r\n                                />\r\n                                :\r\n                                screenName == \"IDS_TASK\" ?\r\n                                    <ResultEntryTaskTab\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        genericLabel ={this.props.Login.genericLabel}\r\n                                        masterData={this.props.Login.masterData}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        methodUrl={\"ResultUsedTask\"}\r\n                                        addResultEntryTask={this.addResultEntryTask}\r\n                                        controlMap={this.state.controlMap}\r\n                                        deleteParam={{\r\n                                            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                                            ncontrolcode: this.state.controlMap.has(\"DeleteResultUsedTask\") && this.state.controlMap.get(\"DeleteResultUsedTask\").ncontrolcode\r\n                                        }}\r\n                                        editParam={{\r\n                                            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n                                            ncontrolcode: this.state.controlMap.has(\"EditResultUsedTask\") && this.state.controlMap.get(\"EditResultUsedTask\").ncontrolcode\r\n                                        }}\r\n                                        dataState={this.state.taskDataState}\r\n                                        selectedId={this.props.Login.selectedId || null}\r\n                                        isActionRequired={true}\r\n                                        dataStateChange={this.dataStateChange}\r\n                                        deleteRecord={this.deleteTaskRecord}\r\n                                        fetchRecord={this.fetchTaskRecord}\r\n                                        //fetchRecord={this.fetchInstrumentRecord}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        screenName=\"IDS_TASK\" />\r\n                                    :\r\n                                    screenName == \"IDS_SAMPLEDETAILS\" ?\r\n                                        this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length === 1 ?\r\n                                            <SampleInfoView\r\n                                                data={this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.length > 0\r\n                                                    ? this.props.Login.masterData.RESelectedSample[this.props.Login.masterData.RESelectedSample.length - 1] : {}}\r\n                                                SingleItem={this.state.SingleItem}\r\n\r\n                                                screenName=\"IDS_SAMPLEINFO\"\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                            /> :\r\n                                            <SampleInfoGrid\r\n                                                selectedSample={this.props.Login.masterData.RESelectedSample}\r\n                                                dataState={this.state.sampleGridDataState}\r\n                                                dataStateChange={this.sampleGridDataStateChange}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                screenName=\"IDS_SAMPLEGRID\"\r\n                                                jsonField={\"jsondata\"}\r\n                                                expandField=\"expanded\"\r\n                                            />\r\n\r\n                                        : \"\"\r\n        )\r\n    }\r\n\r\n\r\n    resultTabDetail = () => {\r\n        const resultTabMap = new Map();\r\n        //let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        // let { testskip, testtake } = this.state\r\n        // let testList = this.props.Login.masterData.RE_TEST || [];\r\n        // testList = testList.slice(testskip, testskip + testtake);\r\n        const meanControlId = this.state.controlMap.has(\"CalculateMean\") && this.state.controlMap.get(\"CalculateMean\").ncontrolcode\r\n        //let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n\r\n\r\n        resultTabMap.set(\"IDS_RESULTS\", <ResultEntryResultsTab\r\n            tabSequence={SideBarSeqno.TEST}\r\n            userInfo={this.props.Login.userInfo}\r\n            genericLabel ={this.props.Login.genericLabel}\r\n            masterData={this.props.Login.masterData}\r\n            inputParam={this.props.Login.inputParam}\r\n            dataState={this.state.resultDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            fetchRecord={this.props.parameterRecord}\r\n            controlMap={this.state.controlMap}\r\n            parameterParam={{ primaryKeyField: \"ntransactionresultcode\", masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            checkListRecord={this.checkListRecord}\r\n            editpredefinedcomments={this.editpredefinedcomments}\r\n            enforceResult={this.enforceResult}\r\n            checklistParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n            selectedId={this.props.Login.selectedId || null}\r\n            viewFile={this.props.viewAttachment}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            screenName=\"IDS_RESULTS\"\r\n            getMeanTestParameter={this.props.getMeanCalculationTestParameter}\r\n            meanParam={{ \"userInfo\": this.props.Login.userInfo, ncontrolCode: meanControlId }}\r\n        />)\r\n\r\n        resultTabMap.set(\"IDS_RESULTCHANGEHISTORY\",\r\n            <ResultChangeHistoryTab\r\n                tabSequence={SideBarSeqno.TEST}\r\n                userInfo={this.props.Login.userInfo}\r\n                genericLabel={this.props.Login.genericLabel}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ResultChangeHistory || []}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.dataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n\r\n            />)\r\n\r\n        return resultTabMap;\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake, subsampleskip, subsampletake } = this.state\r\n        let testList = this.props.Login.masterData.RE_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        const meanControlId = this.state.controlMap.has(\"CalculateMean\") && this.state.controlMap.get(\"CalculateMean\").ncontrolcode\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactionsamplecode = this.props.Login.masterData.RESelectedSubSample ?\r\n            this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.RE_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.RESelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            tabSequence={SideBarSeqno.TEST}\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"RESelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"screateddate\" }]}\r\n            userInfo={this.props.Login.userInfo}\r\n            isneedReport = {false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList//this.props.Login.masterData.RESelectedTest\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                selectedMaster=\"selectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                masterList={this.props.Login.masterData.RESelectedSubSample}\r\n                masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                viewFile={this.props.viewAttachment}\r\n                addName={\"AddSubSampleAttachment\"}\r\n                editName={\"EditSubSampleAttachment\"}\r\n                deleteName={\"DeleteSubSampleAttachment\"}\r\n                viewName={\"ViewSubSampleAttachment\"}\r\n                methodUrl={\"SubSampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n                take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleAttachment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.RE_SUBSAMPLE || []\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLEARNO\"\r\n                displayName=\"ssamplearno\"\r\n            />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster={this.props.Login.masterData.RESelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.RESelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.RESelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_ARNUMBER\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TEST\":\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subSampleSkip, subSampleTake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.RE_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.RE_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.RESelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\" \r\n            isSampleTestComment={true}\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            isneedReport = {false}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n                screenName=\"IDS_SUBSAMPLECOMMENTS\" \r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                selectedMaster=\"selectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                addName={\"AddSubSampleComment\"}\r\n                editName={\"EditSubSampleComment\"}\r\n                deleteName={\"DeleteSubSampleComment\"}\r\n                methodUrl={\"SubSampleComment\"}\r\n                masterData={this.props.Login.masterData}\r\n                isTestComment={false}\r\n                masterList={this.props.Login.masterData.RESelectedSubSample}\r\n                masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n                primaryKeyField={\"nsamplecommentcode\"}\r\n                dataState={this.state.subSampleCommentDataState}\r\n                dataStateChange={this.subSampledataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleComment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: this.props.Login.masterData.RE_SUBSAMPLE || [],\r\n                    ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n                }}\r\n                selectedListName=\"IDS_SAMPLEARNO\"\r\n                displayName=\"ssamplearno\"\r\n                selectedId={this.props.Login.selectedId || null}\r\n            />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"RESelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.RESelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.dataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.RESelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_ARNUMBER\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    changePropertyView = (index, screenName, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n        //console.log(this.state.activeTabId, id , \"=======>\")\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n            //activeTabId = this.state.activeTabIndex !== index ? true:false;\r\n        }\r\n        if (status != \"click\") {\r\n            if (index) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName,\r\n                    activeTabIndex,\r\n                    //activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            // if (index == SideBarTabIndex.RESULT) {\r\n            //     const tabProps = {\r\n            //         tabSequence: SideBarSeqno.TEST,\r\n            //         screenName: \"IDS_RESULTS\",\r\n            //         activeTabIndex,\r\n            //         //activeTabId\r\n            //     }\r\n            //     this.onTabChange(tabProps);\r\n            // }\r\n\r\n            // else if (index == SideBarTabIndex.ATTACHMENTS) {\r\n            //     const tabProps = {\r\n            //         tabSequence: SideBarSeqno.TEST,\r\n            //         screenName: \"IDS_TESTATTACHMENTS\",\r\n            //         activeTabIndex,\r\n            //        // activeTabId\r\n            //     }\r\n            //     this.onTabChange(tabProps);\r\n            // }\r\n            // else if (index == SideBarTabIndex.COMMENTS) {\r\n            //     const tabProps = {\r\n            //         tabSequence: SideBarSeqno.TEST,\r\n            //         screenName: \"IDS_TESTCOMMENTS\",\r\n            //         activeTabIndex,\r\n            //         //activeTabId\r\n            //     }\r\n            //     this.onTabChange(tabProps);\r\n            // }\r\n            // else {\r\n            //     if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n            //                 activeTabId: id\r\n            //             }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        // if (activeTestTab !== this.props.Login.activeTestTab) {\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    RESelectedTest: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest : \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    //activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                    activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                }\r\n                this.props.getTestChildTabREDetail(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.RESelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                    subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    RESelectedSample: this.props.Login.masterData.RESelectedSample,\r\n                    npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab,\r\n                    activeTestTab,\r\n                    sampleChangeDataState: this.state.sampleChangeDataState,\r\n                    activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n\r\n        //}\r\n    }\r\n    mandatoryFieldsForAdditionalInfo = () => { \r\n        let mandatoryFieldsAdditionalInfo=[] \r\n        if(this.props.Login.showMultiSelectCombo){\r\n            mandatoryFieldsAdditionalInfo.push({ \"idsName\": this.props.Login.masterData['salertmessage'], \"dataField\": \"ntestgrouptestpredefsubcode\", \"mandatory\": true,\r\n             \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"file\" })\r\n        }else{\r\n            mandatoryFieldsAdditionalInfo.push({ \"idsName\": this.props.Login.masterData['salertmessage'], \"dataField\": \"ntestgrouptestpredefsubcode\", \"mandatory\": true,\r\n            \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" })\r\n        } \r\n        return mandatoryFieldsAdditionalInfo; \r\n    }\r\n    shouldComponentUpdate (nextProps,nextState) {  \r\n        if (this.props.Login.openModal&&\r\n            this.props.Login.screenName === 'IDS_MATERIAL'&&nextState.isMaterialInitialRender===false&&\r\n          (nextState.selectedRecordMaterialForm !==this.state.selectedRecordMaterialForm)) {\r\n            return false;\r\n          }\r\n          else if (this.props.Login.openModal&&\r\n            this.props.Login.screenName === 'IDS_INSTRUMENT'&&nextState.isInstrumentInitialRender===false&&\r\n          (nextState.selectedRecordInstrumentForm !==this.state.selectedRecordInstrumentForm)) {\r\n            return false;\r\n          }\r\n       else if (this.props.Login.openModal&&\r\n          this.props.Login.screenName === 'IDS_RESULTENTRY'&&nextState.isParameterInitialRender===false&&\r\n        (nextState.parameterResults !==this.state.parameterResults)) {\r\n          return false;\r\n        }\r\n        else if (this.props.Login.openModal&&\r\n            this.props.Login.screenName === 'IDS_RESULTENTRYPARAMETER'&&nextState.isaddSampleRender===false&&\r\n          (nextState.parameterResults1 !==this.state.parameterResults1)) {\r\n            return false;\r\n            \r\n          }\r\n        \r\n        else if(\r\n            this.props.Login.openModal&&\r\n          this.props.Login.screenName === 'IDS_TASK'&&nextState.isTaskInitialRender===false&&\r\n            (nextState.selectedRecordTaskForm!==this.state.selectedRecordTaskForm)){\r\n            return false;\r\n        }  else {\r\n          return true;\r\n        }\r\n    }\r\n    render() {  \r\n        // const auditInfoFields = [{ \"fieldName\": \"sarno\", \"label\": \"IDS_ARNO\" }, \r\n        // { \"fieldName\": \"spatientid\", \"label\": \"IDS_PATIENTID\" },   \r\n        // { \"fieldName\": \"sfirstname\", \"label\": \"IDS_PATIENTNAME\" },\r\n        // { \"fieldName\": \"sage\", \"label\": \"IDS_AGE\" },\r\n        // { \"fieldName\": \"sgendername\", \"label\": \"IDS_GENDER\" },\r\n        // { \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\r\n        // { \"fieldName\": \"sregdate\", \"label\": \"IDS_REGISTRATIONDATE\" },\r\n        // { \"fieldName\": \"scompletedate\", \"label\": \"IDS_COMPLETEDDATEANDTIME\" }\r\n        \r\n        // ];\r\n        const auditInfoFields = [\r\n            { \"label\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"fieldName\": \"sarno\",},\r\n            { \"fieldName\": \"stestsynonym\", \"label\": \"IDS_TEST\" },\r\n            { \"fieldName\": \"sfirstname\", \"label\": \"IDS_PATIENTNAME\" },\r\n            { \"fieldName\": \"sgendername\", \"label\": \"IDS_GENDER\" },\r\n     \r\n            \r\n            ];\r\n        // this.feildsForGrid =\r\n        // [\r\n        //   // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }, \r\n        //   { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"100px\" },\r\n        //   { \"idsName\": \"IDS_SUBSAMPLE\", \"dataField\": \"ssamplearno\", \"width\": \"100px\" },      \r\n        //   { \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"sparametersynonym\", \"width\": \"100px\" },\r\n        //   { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"100px\" },\r\n        //   { \"idsName\": \"IDS_GRADE\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n        // ];\r\n        this.feildsForGrid =\r\n    [\r\n      // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_REPORTREFNO\", \"dataField\": \"sreportno\", \"width\": \"200px\" },   \r\n      { \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n      { \"idsName\":  this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"ssamplearno\", \"width\": \"200px\" },             \r\n      { \"idsName\": \"IDS_PARAMETER\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_GRADE\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_REGISTRATIONDATE\", \"dataField\": \"sregdate\", \"width\": \"200px\" },\r\n      \r\n     \r\n      \r\n    ];\r\n       // console.log(this.state.enlLink);\r\n       // console.log(this.state.enlLink);\r\n        let sampleListRE = this.props.Login.masterData.RE_SAMPLE ? sortData(this.props.Login.masterData.RE_SAMPLE, \"descending\", \"npreregno\") : [];\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ?  this.props.Login.masterData.RE_SUBSAMPLE : []\r\n        //let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? sortData(this.props.Login.masterData.RE_SUBSAMPLE, 'descending', 'ntransactionsamplecode') : [];\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? sortData(this.props.Login.masterData.RE_TEST,'descending','ntransactiontestcode') : [] //? sortData(this.props.Login.masterData.RE_TEST, 'descending', 'ntransactiontestcode') : [];\r\n        let subSampleListRE = this.props.Login.masterData.RE_SUBSAMPLE ? this.props.Login.masterData.RE_SUBSAMPLE : []\r\n\r\n        //let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST : []\r\n        let testListRE = this.props.Login.masterData.RE_TEST ? this.props.Login.masterData.RE_TEST  : []\r\n        const startDate = (this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date());\r\n        const endDate = (this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date());\r\n\r\n        // let obj = this.covertDatetoString(startDate, endDate)\r\n        let obj = convertDateValuetoString(startDate, endDate, this.props.Login.userInfo);\r\n\r\n        const fromDate = obj.fromDate;\r\n        const toDate = obj.toDate;\r\n\r\n       \r\n        let subSampleGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample &&   this.props.Login.masterData.RESelectedSample.map(sample => sample&&sample.npreregno).join(\",\"),\r\n            fromdate: fromDate,\r\n            todate: toDate,\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n            activeSampleKey: this.props.Login.activeTestTab || 'IDS_IDS_SAMPLEINFO',\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            sampleChangeDataState: this.state.sampleChangeDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            //Aravindh\r\n            checkBoxOperation: 3,\r\n            nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 8 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 8 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        }\r\n        let testGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntranscode: String(this.props.Login.masterData.realFilterStatusValue &&this.props.Login.masterData.realFilterStatusValue.ntransactionstatus&& (this.props.Login.masterData.realFilterStatusValue.ntransactionstatus).toString()),\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample&&sample.npreregno).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n            activeSampleKey: this.props.Login.activeTestTab || 'IDS_IDS_SAMPLEINFO',\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            // activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : 0,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n            nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n        }\r\n        let testChildGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample&&sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample&&sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n            fromdate: fromDate,\r\n            todate: toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n            //activeTabIndex: this.state.enableAutoClick ? this.state.activeTabIndex : this.state.activeTabIndex ? this.state.activeTabIndex : 1,\r\n            nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n        }\r\n\r\n    \r\n        const filterSampleParam = {\r\n            inputListName: \"RE_SAMPLE\",\r\n            selectedObject: \"RESelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                ntransactiontestcode: 0,\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntranscode: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString() : 0 : 0),\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                //npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                fromdate: fromDate,\r\n                todate: toDate,\r\n                activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n                //nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample  ? true : false,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n                nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"ssampletypestatus\"],\r\n            searchFieldList: this.state.sampleSearchField,\r\n            changeList: [\"RE_SUBSAMPLE\", \"RE_TEST\", \"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedSample\", \"RESelectedSubSample\", \"RESelectedTest\"]\r\n        };\r\n\r\n        const filterSubSampleParam = {\r\n            inputListName: \"RE_SUBSAMPLE\",\r\n            selectedObject: \"RESelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"resultentrybysample/getResultEntrySubSampleDetails\",\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n            fecthInputObject: {\r\n                ntype: 3,\r\n                nflag: 3,\r\n                ntransactiontestcode: 0,\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n                ntranscode: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString() : 0 : 0),\r\n                ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                //npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                fromdate: fromDate,\r\n                todate: toDate,\r\n                activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n                nneedsubsample:  this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample  ? true : false,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                checkBoxOperation: 3,\r\n                nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n                nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"ssampletypestatus\"],\r\n            searchFieldList:this.state.subsampleSearchField,\r\n            changeList: [\"RE_TEST\", \"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedSubSample\", \"RESelectedTest\"]\r\n        };\r\n        let filterTestParam = {\r\n            inputListName: \"RE_TEST\",\r\n            selectedObject: \"RESelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n                nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n                nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.testSearchField,\r\n            changeList: [\"TestParameters\",\r\n                \"ResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"RESelectedTest\"],\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample  ? true : false,\r\n            checkBoxOperation: 3,\r\n            //nworlistcode : (this.props.Login.masterData.defaultWorklistvalue && this.props.Login.masterData.defaultWorklistvalue.nworklistcode) || -1\r\n\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n                fecthInputObject: filterSampleParam,\r\n                selectedObject: \"RESelectedSample\",\r\n                inputListName: \"RE_SAMPLE\",\r\n                updatedListname: \"\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"resultentrybysample/getResultEntryDetails\",\r\n                fecthInputObject: testGetREParam,\r\n                selectedObject: \"RESelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                inputListName: \"RE_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }, {\r\n                filteredListName: \"searchedTest\",\r\n                clearFilter: \"yes\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchSampleRef, childFilteredListName: \"\" }],\r\n                fecthInputObject: testChildGetREParam,\r\n                selectedObject: \"RESelectedTest\",\r\n                inputListName: \"RE_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\"]\r\n            }];\r\n\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, \r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // },\r\n            {\r\n                \"label\": \"IDS_TEST\",\r\n                \"value\": this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.stestsynonym ? this.props.Login.masterData.realTestcodeValue.stestsynonym : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus : \"NA\"\r\n            }\r\n        ]\r\n\r\n        if(this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode)\r\n        {\r\n            this.breadCrumbData.push({\r\n                \"label\": \"IDS_WORKLIST\",\r\n                \"value\": this.props.Login.masterData.realWorklistCodeValue ? this.props.Login.masterData.realWorklistCodeValue.sworklistno : \"NA\"\r\n            });\r\n        }\r\n        if(this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode)\r\n        {\r\n            this.breadCrumbData.push({\r\n                \"label\": \"IDS_BATCH\",\r\n                \"value\": this.props.Login.masterData.realBatchCodeValue ? this.props.Login.masterData.realBatchCodeValue.sbatcharno : \"NA\"\r\n            });\r\n        }\r\n\r\n        const testStartId = this.state.controlMap.has(\"TestStart\") && this.state.controlMap.get(\"TestStart\").ncontrolcode\r\n        const resultEnterId = this.state.controlMap.has(\"ResultEnter\") && this.state.controlMap.get(\"ResultEnter\").ncontrolcode\r\n        const completeResultId = this.state.controlMap.has(\"CompleteResult\") && this.state.controlMap.get(\"CompleteResult\").ncontrolcode\r\n        const setDefaultId = this.state.controlMap.has(\"SetDefaultResult\") && this.state.controlMap.get(\"SetDefaultResult\").ncontrolcode\r\n\r\n        const editSourceMethodId = this.state.controlMap.has(\"EditSourceMethod\") && this.state.controlMap.get(\"EditSourceMethod\").ncontrolcode\r\n        const addResultUsedInstrumentId = this.state.controlMap.has(\"AddResultUsedInstrument\") && this.state.controlMap.get(\"AddResultUsedInstrument\").ncontrolcode\r\n        const addResultUsedMaterailId = this.state.controlMap.has(\"AddResultUsedMaterial\") && this.state.controlMap.get(\"AddResultUsedMaterial\").ncontrolcode\r\n        const adhocId = this.state.controlMap.has(\"AdhocParameter\") && this.state.controlMap.get(\"AdhocParameter\").ncontrolcode\r\n        const openELNSheet = this.state.controlMap.has(\"OpenELNSheet\") && this.state.controlMap.get(\"OpenELNSheet\").ncontrolcode\r\n        const patientPreviousResultView = this.state.controlMap.has(\"PatientPreviousResultView\") && this.state.controlMap.get(\"PatientPreviousResultView\").ncontrolcode\r\n        const identicalResultEnterId = this.state.controlMap.has(\"IdenticalResultEnter\") && this.state.controlMap.get(\"IdenticalResultEnter\").ncontrolcode\r\n\r\n\r\n        const mandatoryFieldsInstrument = [{ \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"ninstrumentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_FORMDATE\", \"dataField\": \"dfromdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TODATE\", \"dataField\": \"dtodate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzfromdate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntztodate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]\r\n     \r\n        const mandatoryFieldsMaterial = [{ \"mandatory\": true, \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"nmaterialtypecode\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"nmaterialcatcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"nmaterialcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"nmaterialinventorycode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequantity\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n    ]\r\n        const mandatoryFieldsTask = [{ \"mandatory\": true, \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        ]\r\n\r\n        const mandatoryFieldsTestMethodSource = [{ \"mandatory\": true, \"idsName\": \"IDS_SOURCE\", \"dataField\": \"nsourcecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_METHOD\", \"dataField\": \"nmethodcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }]\r\n\r\n\r\n        const mandatoryEnforceResult = [\r\n        { \"mandatory\": true, \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforceresultcomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n       // { \"mandatory\": true, \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"ngradecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\" },\r\n        ]\r\n\r\n        const mandatoryFieldsParameter = [{ \"mandatory\": true, \"idsName\": \"IDS_PARAMETERCOMMENTS\", \"dataField\": \"sresultcomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n        const validateFormulaMandyFields = this.state.validateFormulaMandyFields;\r\n\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager'>\r\n                    <TransactionListMasterJsonView\r\n                        progressTimerStart={this.props.Login.progressTimerStart||false}\r\n                        clickIconGroup = {true}\r\n                        cardHead={94}\r\n                        //paneHeight={this.state.initialVerticalWidth}\r\n                        // paneHeight={`${testListRE && testListRE !== null && testListRE.length > 0 ? testListRE.length * 13 : 5}vh`}\r\n                        masterList={this.props.Login.masterData.searchedTest || testListRE}\r\n                        selectedMaster={this.props.Login.masterData.RESelectedTest}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        //getMasterDetail={this.props.getTestChildTabREDetail}\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabREDetail(event, status); this.changePropertyView(1, \"IDS_RESULTS\", event, \"click\") }}\r\n                        inputParam={testChildGetREParam}\r\n                        subFieldsLabel={true}\r\n                        additionalParam={[]}\r\n                        mainField=\"stestsynonym\"\r\n                        selectedListName=\"RESelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        needMultiSelect={true}\r\n                        subFields={this.state.testListColumns || []}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTest\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={filterTestParam}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        showStatusName={true}\r\n                        selectionFieldName=\"sfilterstatus\"\r\n                        childTabsKey={[\"TestParameters\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\",\r\n                            \"ResultChangeHistory\", \"RegistrationTestComment\", \"ResultChangeHistory\"\r\n                            // , \"RegistrationComment\"\r\n                        ]}\r\n                        // selectionList={this.props.Login.masterData.REFilterStatus && this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.REFilterStatus : []}\r\n                        selectionList={this.state.selectedFilter}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"RE_SAMPLE\"\r\n                        buttonCount={5}\r\n                        jsonField={'jsondata'}\r\n                        jsonDesignFields={true}\r\n                        actionIcons={\r\n                             [ \r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_OPENELNSHEET\" }), controlname: \"elnimage\", hidden: this.state.userRoleControlRights.indexOf(openELNSheet) === -1, onClick: this.openClosePortal, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,elnUserInfo: this.props.Login.elnUserInfo,elnSite: this.props.Login.elnSite} },\r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }), controlname: \"faEye\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(patientPreviousResultView)  === -1, onClick: this.viewSample, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo} },\r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_EDITMETHODSSOURCE\" }), controlname: \"faPencilAlt\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_ADHOCPARAMETER\" }), controlname: \"faAdhocParameter\", dataplace: \"left\", \r\n                              hidden: this.state.userRoleControlRights.indexOf(adhocId) === -1,\r\n                              onClick: this.adhocTestParameter, objectName: \"test\",\r\n                                  inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, adhocId } },\r\n                            //{ title: this.props.intl.formatMessage({ id: \"IDS_EDITMETHODSSOURCE\" }), controlname: \"faPencilAlt\", dataplace: \"left\", hidden: this.state.userRoleControlRights.indexOf(editSourceMethodId) === -1, onClick: this.testMethodSourceEdit, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, editSourceMethodId } },\r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_ADDINSTRUMENT\" }), controlname: \"faMicroscope\", hidden: false, onClick: this.addREInstrument, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedInstrumentId } },\r\n                            { title: this.props.intl.formatMessage({ id: \"IDS_ADDMATERIAL\" }), controlname: \"faFlask\", hidden: false, onClick: this.props.addREMaterial, objectName: \"test\", inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, addResultUsedMaterailId } }\r\n                                // { title: \"Add Task\", controlname: \"faTasks\", hidden: this.state.userRoleControlRights.indexOf(addResultUsedTaskId) === -1, onClick: this.addResultEntryTask, objectName: \"test\", inputData: { addResultUsedTaskId } }\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n                            // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                            <ProductList className=\"d-flex justify-content-end icon-group-wrap\">\r\n                                {testListRE.length > 0 ?\r\n                                    <>\r\n                                        {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                        {/* <Nav.Link data-for=\"tooltip-common-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_TESTSTART\" })} hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.testStartActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, testStartId, this.state.testskip, this.state.testtake)}>\r\n                                                                                                <FontAwesomeIcon icon={faPlay} />\r\n                                                                                            </Nav.Link> */}\r\n\r\n                                        {this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtestinitiate ?\r\n\r\n                                            <FontIconWrap\r\n                                                //  data-for=\"tooltip-common-wrap\" \r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_TESTSTART\" })} hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                className=\"btn btn-circle outline-grey ml-2\" role=\"button\"\r\n                                                onClick={() => this.testStartActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest,\r\n                                                    this.props.Login.userInfo, testStartId, this.state.testskip, this.state.testtake)} >\r\n                                                <FontAwesomeIcon icon={faPlay} />\r\n                                                \r\n                                            </FontIconWrap> : \"\"}\r\n\r\n\r\n\r\n                                        <Nav.Link\r\n                                            // data-for=\"tooltip-common-wrap\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(resultEnterId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.props.resultGetModule(this.props.Login.masterData, this.props.Login.userInfo, resultEnterId, this.state.testskip, this.state.testtake)} >\r\n                                            <FontAwesomeIcon icon={faAddressBook} />\r\n                                        </Nav.Link>\r\n                                        <Nav.Link\r\n                                            // data-for=\"tooltip-common-wrap\" \r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_FILLDEFAULTRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(setDefaultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.defaultActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.masterData.RESelectedSample, setDefaultId, this.state.testskip, this.state.testtake)}>\r\n                                            <FontAwesomeIcon icon={faPencilRuler} />\r\n                                        </Nav.Link>\r\n                                        <Nav.Link\r\n                                            // data-for=\"tooltip-common-wrap\"\r\n                                              data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })} hidden={this.state.userRoleControlRights.indexOf(completeResultId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.completeActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake,3)}>\r\n                                            <FontAwesomeIcon icon={faCheckCircle} />\r\n                                        </Nav.Link>\r\n                                        <Nav.Link\r\n                                            //data-for=\"tooltip-common-wrap\" \r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTRESULT\" })} hidden={true} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.resultImport(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake)}>\r\n                                            <FontAwesomeIcon icon={faFileImport} />\r\n                                        </Nav.Link>\r\n                                    </>\r\n                                    : \"\"}\r\n                            </ProductList>\r\n\r\n                            // </Tooltip>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue &&\r\n            this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card>\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0 sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            cardHead={94}\r\n                            //paneHeight={this.state.initialVerticalWidth}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || subSampleListRE}\r\n                            selectedMaster={this.props.Login.masterData.RESelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={this.props.getTestREDetail}\r\n                            inputParam={testGetREParam}\r\n                            additionalParam={[]}\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"RESelectedSubSample\"\r\n                            objectName=\"subSample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            jsonField={'jsondata'}\r\n                            jsonDesignFields={true}\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            moreField={this.state.subSampleMoreField}\r\n                            needValidation={false}\r\n                            needMultiSelect={true}\r\n                            needFilter={false}\r\n                            skip={this.state.subSampleSkip}\r\n                            take={this.state.subSampleTake}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            selectionList={this.state.selectedFilter}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"sfilterstatus\"\r\n                            selectionField=\"ntransactionstatus\"\r\n                            childTabsKey={[\"RE_TEST\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={filterSubSampleParam}\r\n                            subFieldsFile={true}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        }\r\n        else {\r\n            mainDesign = testDesign\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {/* <PerfectScrollbar> */}\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <Row noGutters={true} bsPrefix=\"toolbar-top\">\r\n                        {/* sticky_head_parent ref={(parentHeight) => { this.parentHeight = parentHeight }} secondaryInitialSize={40}*/}\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        //onSecondaryPaneSizeChange={this.paneSizeChange} \r\n                                        primaryMinSize={40} secondaryMinSize={20}>\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                clickIconGroup={true}\r\n                                                // paneHeight={this.state.parentHeight}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedSample || sampleListRE}\r\n                                                selectedMaster={this.props.Login.masterData.RESelectedSample}\r\n                                                primaryKeyField=\"npreregno\"\r\n                                                getMasterDetail={this.props.getsubSampleREDetail}\r\n                                                inputParam={subSampleGetREParam}\r\n                                                additionalParam={['napprovalversioncode']}\r\n                                                mainField=\"sarno\"\r\n                                                selectedListName=\"RESelectedSample\"\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                needValidation={false}\r\n                                                validationKey=\"napprovalversioncode\"\r\n                                                validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                                subFields={this.state.DynamicSampleColumns || []}\r\n                                                moreField={this.state.sampleMoreField}\r\n                                                needFilter={true}\r\n                                                needMultiSelect={true}\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onREFilterSubmit}\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                searchListName=\"searchedSample\"\r\n                                                searchRef={this.searchSampleRef}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                filterParam={filterSampleParam}\r\n                                                skip={this.state.skip}\r\n                                                take={this.state.take}\r\n                                                hidePaging={false}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                childTabsKey={[\"RegistrationAttachment\", \"RE_SUBSAMPLE\", \"RE_TEST\", \"SampleApprovalHistory\", \"RegistrationComment\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                                                selectionList={this.state.selectedFilter}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                selectionFieldName=\"sfilterstatus\"\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                jsonField={'jsondata'}\r\n                                                jsonDesignFields={true}\r\n                                                callCloseFunction={true}\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <ResultEntryFilter\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? //new Date(this.props.Login.masterData.fromDate) \r\n                                                                rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate)\r\n                                                                : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? //new Date(this.props.Login.masterData.toDate) \r\n                                                                rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate)\r\n                                                                : new Date()}\r\n                                                            SampleType={this.state.SampleType || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                                            RegType={this.state.RegistrationType || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                                            RegSubType={this.state.RegistrationSubType || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.defaultRegistrationSubType || []}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                                            FilterStatus={this.state.REFilterStatus || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.defaultFilterStatus || []}\r\n                                                            ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.defaultApprovalConfigVersion || []}\r\n                                                            REJobStatus={this.state.REJobStatus || []}\r\n                                                            JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                                            Test={this.state.Testvalues || []}\r\n                                                            Batch={this.state.Batchvalues || []}\r\n                                                            BatchValue = {this.props.Login.masterData.defaultBatchvalue || []}\r\n                                                            Worklist={this.state.Worklistvalues || []}\r\n                                                            WorklistValue = {this.props.Login.masterData.defaultWorklistvalue || []}\r\n                                                            TestValue={this.props.Login.masterData.defaultTestvalues || []}\r\n                                                            ConfigurationFilter={this.state.ConfigurationFilterValues || []}\r\n                                                            ConfigurationFilterValue = {this.props.Login.masterData.defaultConfigurationFilterValue || []}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n                                                actionIcons={\r\n                                                    [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                        {\r\n                                                            title: \"Report\",\r\n                                                            controlname: \"reports\",\r\n                                                            objectName: \"sample\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                            onClick: this.props.previewSampleReport,\r\n                                                            inputData: {\r\n                                                                userinfo: this.props.Login.userInfo,\r\n                                                                ncontrolcode: reportPreviewId\r\n                                                            },\r\n                                                        } : {}\r\n                                                    ]\r\n                                                }\r\n                                                commonActions={\r\n                                                    <>\r\n\r\n                                                        <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        { this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE ?\r\n                                                        <Nav.Link\r\n                                            // data-for=\"tooltip-common-wrap\"\r\n                                                  data-tip={this.props.intl.formatMessage({ id: \"IDS_ENTERIDENTICALRESULT\" })} hidden={this.state.userRoleControlRights.indexOf(identicalResultEnterId) === -1} className=\"btn btn-circle outline-grey ml-2\" role=\"button\" onClick={() => this.props.resultEntryGetSpec(this.props.Login.masterData, this.props.Login.userInfo, resultEnterId, this.state.testskip, this.state.testtake)}   >\r\n                                                    <FontAwesomeIcon icon={faAddressBook} />\r\n                                                     </Nav.Link>\r\n                                                   : \"\"}\r\n                                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                                onClick={() => this.onReload()}\r\n                                                                data-for=\"tooltip-common-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                            </Button>\r\n                                                        </ProductList>\r\n                                                    </>\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-common sm-view-v-t position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           {this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_RESULTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_INSTRUMENT\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 5 ? this.sideNavDetail(\"IDS_MATERIAL\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 6 ? this.sideNavDetail(\"IDS_TASK\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                           <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 7 ? this.sideNavDetail(\"IDS_TESTAPPROVALHISTORY\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments vertical-tab-content-common position-relative ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <Nav.Link className='tab-expand-collapse-btn p-0' onClick= {()=>this.setState({enablePropertyPopup:!this.state.enablePropertyPopup})}>\r\n                                                {!this.state.enablePropertyPopup ?\r\n                                                    <img src={fullviewExpand} alt=\"Fullview\" width=\"20\" height=\"20\" /> :\r\n                                                    <img src={fullviewCollapse} alt=\"Collapse\" width=\"24\" height=\"24\" />\r\n                                                }\r\n                                            </Nav.Link>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(1, \"IDS_RESULTS\")}>\r\n                                                <FontAwesomeIcon icon={faFileInvoice}\r\n                                                    data-for=\"tooltip-common-wrap\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULT\" })} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_RESULT\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2, \"IDS_ATTACHMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3, \"IDS_COMMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4, \"IDS_INSTRUMENT\")}>\r\n                                                <FontAwesomeIcon icon={faMicroscope} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENT\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 5 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(5, \"IDS_MATERIAL\")}>\r\n                                                <FontAwesomeIcon icon={faFlask} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_MATERIAL\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 6 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(6, \"IDS_TASK\")}>\r\n                                                <FontAwesomeIcon icon={faCommentDots} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TASK\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 7 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(7)}>\r\n                                                <FontAwesomeIcon icon={faHistory} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_TESTAPPROVALHISTORY\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8, \"IDS_SAMPLEDETAILS\")}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                // label={\"Auto Show\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                // label={\"Popup Nav\"}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper >\r\n                            {/* </PerfectScrollbar> */}\r\n                        </Col >\r\n                    </Row >\r\n                </ListWrapper >\r\n                {/* </PerfectScrollbar> */}\r\n\r\n                <PortalModal>\r\n                    <div>\r\n                        <Modal\r\n                            centered\r\n                            scrollable\r\n                            bsPrefix=\"model model_zindex\"\r\n                            show={this.props.Login.openELNSheet}\r\n                            // show={this.state.openELNSheet}\r\n                            onHide={this.openClosePortal}\r\n                            dialogClassName={`${this.props.nflag && this.props.nflag === 2 ? 'alert-popup' : ''} modal-fullscreen`}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            enforceFocus={false}\r\n                            aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title style={{ \"line-height\": \"1.0\" }} id=\"example-custom-modal-styling-title\">\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_ELNSHEET\" })}\r\n                                </Modal.Title>\r\n                                <ReactTooltip globalEventOff=\"true\" />\r\n\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\"modal-inner-content\">\r\n                                    {/* <Iframe url={this.state.enlLink} */}\r\n                                    <Iframe \r\n                                        url={this.props.Login.masterData.enlLink}\r\n                                        width=\"98%\"\r\n                                        height=\"1000px\"\r\n                                        id=\"reportviewID\"\r\n                                        className=\"reportview\"\r\n                                    //display=\"initial\"\r\n                                    /// position=\"relative\" \r\n                                    />\r\n                                </div>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </div>\r\n                </PortalModal>\r\n                <PortalModal>\r\n                <ModalShow\r\n                    modalShow={this.props.Login.showAlertGrid}\r\n                    modalTitle={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?this.props.intl.formatMessage({ id: \"IDS_ADDITIONALINFOREQURIED\" })//this.props.Login.onlyAlertMsgAvailable?\"Alert\":this.props.Login.masterData['salertmessage']\r\n                    // :this.props.intl.formatMessage({ id: \"IDS_COMPLETETHEFOLLOWINGTESTS\" })} \r\n                    :this.props.intl.formatMessage({ id: \"IDS_RULECOMPLETEVALIDATION\" })}\r\n                  //  needCloseButton={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\r\n                    closeModal={this.closeModalShow}\r\n                    rulesenginealret={true}\r\n                    onSaveClick ={this.props.Login.showAlertGrid==true? this.onskiprule:this.onModalSave}\r\n                    removeCancel={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\r\n                    // needSubmit={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\r\n                    needSubmit={true}\r\n                    needSave={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":true}\r\n                    selectedRecord={this.state.selectedRecord || {}} \r\n                    // mandatoryFields={this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\r\n                    //     this.mandatoryFieldsForAdditionalInfo():\"\"}\r\n                    size={ this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":'lg'}\r\n                    showAlertMsg={this.props.Login.showAlertForPredefined?true:false}\r\n                    modalBody={this.props.Login.additionalInfoView?\r\n                        this.state.selectedRecord['additionalResultData'] :\r\n                         this.props.Login.showAlertForPredefined? \r\n                       <ResultEntryPredefinedComments \r\n                       onlyAlertMsgAvailable={this.props.Login.onlyAlertMsgAvailable}\r\n                       salertmessage={this.props.Login.masterData['salertmessage']}\r\n                       showMultiSelectCombo={this.props.Login.showMultiSelectCombo}\r\n                       testgrouptestpredefsubresultOptions={this.props.Login.masterData.testgrouptestpredefsubresultOptions||[]}\r\n                       selectedRecord={this.state.selectedRecord || {}} \r\n                       onInputChange = {this.onInputChange}\r\n                       onComboChange={this.onComboChange} \r\n                       />  :\r\n                        <CustomTabs tabDetail={this.tabAlertRulesEngine()} onTabChange={this.onTabChangeRulesEngine} destroyInactiveTabPane={true}/>\r\n                    }\r\n                />\r\n </PortalModal>\r\n        {  this.props.Login.openModal ?\r\n                <SlideOutModal\r\n                    show={this.props.Login.openModal}\r\n                    size={this.props.Login.screenName === 'IDS_MEANPARAMETER' || this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? \"xl\" : \"lg\"}\r\n                    \r\n                    closeModal={this.closeModal}\r\n                    showCalculate={this.props.Login.screenName === 'IDS_RESULTFORMULA' ? true : false}\r\n                    operation={// this.props.Login.screenName === 'IDS_RESULTPARAMETERCOMMENTS'?\"\":\r\n                        this.props.Login.screenName === 'IDS_RESULTENTRY'||  this.props.Login.screenName === 'IDS_ENFORCERESULT' || this.props.Login.screenName === 'IDS_RESULTENTRYPARAMETER' ? \"\"\r\n                            : this.props.Login.operation\r\n                    }\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName===\"IDS_RESULTENTRYPARAMETER\"?this.props.Login.masterData.realTestcodeValue.stestsynonym :this.props.Login.screenName}\r\n                    selectedRecord={\r\n                        this.props.Login.screenName === 'IDS_INSTRUMENT'&&!this.props.Login.loadEsign ?\r\n                        this.state.selectedRecordInstrumentForm:\r\n                        this.props.Login.screenName === 'IDS_MATERIAL'&&!this.props.Login.loadEsign ?\r\n                        this.state.selectedRecordMaterialForm:\r\n                        this.props.Login.screenName === 'IDS_TASK'&&!this.props.Login.loadEsign ?\r\n                        this.state.selectedRecordTaskForm:\r\n                        this.props.Login.screenName === 'IDS_RESULTFORMULA' ?\r\n                            this.state.selectedRecord.selectedMandatory : this.state.selectedRecord || {}\r\n                    }\r\n                    mandatoryFields={\r\n                      //  this.props.Login.screenName === 'IDS_INSTRUMENT' ? mandatoryFieldsInstrument :\r\n                          //  this.props.Login.screenName === 'IDS_TASK' ? mandatoryFieldsTask :\r\n                                this.props.Login.screenName === 'IDS_TESTMETHODSOURCE' ? mandatoryFieldsTestMethodSource :\r\n                                    this.props.Login.screenName === 'IDS_PARAMETERCOMMENTS' ? mandatoryFieldsParameter :\r\n                                        this.props.Login.screenName === 'IDS_RESULTFORMULA' ? validateFormulaMandyFields :\r\n                                        this.props.Login.screenName === 'IDS_ENFORCERESULT' ?   mandatoryEnforceResult: []\r\n                    }\r\n                    esign={this.props.Login.loadEsign}\r\n                    innerPopup={this.props.Login.screenName}\r\n                    validateEsign={this.validateEsign}\r\n                    \r\n                    onSaveClick={\r\n                        this.props.Login.screenName === 'IDS_INSTRUMENT' ? \r\n                        (e)=> \r\n                        onSaveMandatoryValidation(this.state.selectedRecordInstrumentForm,mandatoryFieldsInstrument,\r\n                         this.onSaveClick) : \r\n                         this.props.Login.screenName === 'IDS_MATERIAL' ? \r\n                         (e)=> \r\n                         onSaveMandatoryValidation(this.state.selectedRecordMaterialForm,mandatoryFieldsMaterial,\r\n                          this.onSaveClick) :\r\n                        this.props.Login.showValidate ? this.calculateFormula\r\n                            : this.props.Login.screenName === 'IDS_RESULTIMPORTFILE' ? this.onSaveFileClick \r\n                            : this.props.Login.screenName === 'IDS_ADHOCPARAMETER' ? this.onSaveClickAdhocParam \r\n                            : this.onSaveClick\r\n                    }\r\n                    showValidate={this.props.Login.screenName === 'IDS_RESULTFORMULA'?false:this.props.Login.showValidate}\r\n                    modalEvent={this.state.modalEvent}\r\n                    hideSave={this.props.Login.screenName === \"IDS_PREVIOUSRESULTVIEW\" ? true : false}\r\n                    addComponent={\r\n                        this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.screenName === 'IDS_RESULTENTRY' ?\r\n                            this.state.selectedRecord.ResultParameter&&\r\n                             this.state.selectedRecord.ResultParameter.map((parameterResult, index) => {\r\n                              return   <ResultEntryForm \r\n                                        index={index} \r\n                                      //  wrappedComponentRef={ref => this.resultEntryFormRef = ref}\r\n                                      //   ref={this.resultEntryFormRef}\r\n                                       //  getPredefinedData={this.props.getPredefinedData}\r\n                                        ResultParameter={[...this.state.selectedRecord.ResultParameter]}\r\n                                        predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                       gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                       selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                       selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                       paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                       parameterResults={  parameterResult //this.state.selectedRecord.ResultParameter\r\n                                            || []}\r\n                                       Login={this.props.Login}\r\n                                       handleClose={this.handleClose}\r\n                                       onSaveClick={this.onSaveClick}\r\n                                       onResultInputChange={this.onResultInputChange}\r\n                                       //onGradeEvent={this.onGradeEvent}\r\n                                       getFormula={this.getFormula}\r\n                                       onDropTestFile={this.onDropTestFile}\r\n                                       onKeyPress={this.onKeyPress}\r\n                                       deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                       viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                       needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                       intl={this.props.intl}\r\n                                /> \r\n                             })\r\n                              :\r\n\r\n                              this.props.Login.screenName === 'IDS_RESULTENTRYPARAMETER' ? \r\n                             <>\r\n                             <Row>\r\n                             {this.state.selectedRecord.selectedSpecification &&\r\n                              <FormSelectSearch\r\n                              formLabel={this.props.intl.formatMessage({ id: \"IDS_PROFILETREE\"}) +' / '+ this.props.intl.formatMessage({ id: this.props.Login.genericLabel && this.props.Login.genericLabel[\"Specification\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]})}\r\n                              isSearchable={true}\r\n                              name={\"nallottedspeccode\"}\r\n                              isDisabled={false}\r\n                              placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                             \r\n                              isClearable={false}\r\n                              options={this.state.selectedRecord.selectedSpecification||[]}\r\n                              value={this.state.selectedRecord.nallottedspeccode && this.state.selectedRecord.nallottedspeccode || \"\"}\r\n                              defaultValue={this.state.selectedRecord.selectedSpecification && this.state.selectedRecord.selectedSpecification[\"nallottedspeccode\"]||\"\"}\r\n                              onChange={(event) => this.onChange(event, \"nallottedspeccode\", 1)}\r\n                              closeMenuOnSelect={true}\r\n                          >\r\n                          </FormSelectSearch>}\r\n\r\n\r\n                          {this.state.selectedRecord.selectedComponent &&\r\n                              <FormSelectSearch\r\n                              formLabel={this.props.intl.formatMessage({ id:this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]})}\r\n                              isSearchable={true}\r\n                              name={\"ncomponentcode\"}\r\n                              isDisabled={false}\r\n                              placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                              isClearable={false}\r\n                              options={this.state.selectedRecord.selectedComponent||[]}\r\n                              value={this.state.selectedRecord.ncomponentcode && this.state.selectedRecord.ncomponentcode || \"\"}\r\n                              defaultValue={this.state.selectedRecord.selectedComponent && this.state.selectedRecord.selectedComponent[\"ncomponentcode\"]||\"\"}\r\n                              onChange={(event) => this.onChange(event, \"ncomponentcode\", 2)}\r\n                              closeMenuOnSelect={true}\r\n                          >\r\n                          </FormSelectSearch>\r\n                          \r\n                          \r\n                          }\r\n                           </Row>\r\n                              {this.state.selectedRecord.ResultParameter&&\r\n                               this.state.selectedRecord.ResultParameter.map((parameterResult, index) => {\r\n                                return   <ResultEntryParameterForm\r\n                                          index={index} \r\n                                        //  wrappedComponentRef={ref => this.resultEntryFormRef = ref}\r\n                                        //   ref={this.resultEntryFormRef}\r\n                                         //  getPredefinedData={this.props.getPredefinedData}\r\n                                          ResultParameter={[...this.state.selectedRecord.ResultParameter]}\r\n                                          predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                          defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                         gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                         selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                         selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                         paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                         parameterResults={  parameterResult //this.state.selectedRecord.ResultParameter\r\n                                              || []}\r\n                                         Login={this.props.Login}\r\n                                         handleClose={this.handleClose}\r\n                                         onSaveClick={this.onSaveClick}\r\n                                         onResultInputChange={this.onResultInputChange}\r\n                                         onSampleAdd={this.onSampleAdd}\r\n                                         //onGradeEvent={this.onGradeEvent}\r\n                                         getFormula={this.getFormula}\r\n                                         onDropTestFile={this.onDropTestFile}\r\n                                         onKeyPress={this.onKeyPress}\r\n                                         deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                         viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                         needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                         intl={this.props.intl}\r\n                                         controlMap={this.state.controlMap}\r\n                                         userRoleControlRights={this.state.userRoleControlRights}\r\n                                  /> \r\n                               })}\r\n                             \r\n                               </>\r\n                               :\r\n                                this.props.Login.screenName === 'IDS_TESTMETHODSOURCE' ?\r\n                                    <TestEditForm\r\n                                        methodValues={this.props.Login.masterData.MethodData}\r\n                                        sourceValues={this.props.Login.masterData.SourceData}\r\n                                        selecteRecord={this.state.selectedRecord || {}}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                    /> :\r\n                                    this.props.Login.screenName === 'IDS_INSTRUMENT' ?\r\n                                        <ResultEntryInstrumentForm\r\n                                        selectedRecordInstrumentForm={this.props.Login.selectedRecordInstrumentForm}\r\n                                        instrumentcatValue={this.props.Login.masterData.InstrumentCategory}\r\n                                        instrumentValue={this.props.Login.masterData.Instrument}\r\n                                        selecteRecord={this.state.selectedRecord || {}}\r\n                                        timeZoneListData={this.props.Login.timeZoneList || []}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onComboCategoryChange={this.onComboCategoryChange}\r\n                                        onDateChange={this.onDateChange}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        onChildDataChange={this.onChildDataChange}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                        /> :\r\n                                        this.props.Login.screenName === 'IDS_MATERIAL' ?\r\n                                            <ResultEntryMaterialForm\r\n                                            Login={this.props.Login}\r\n                                            materialType={this.props.Login.materialType}\r\n                                            materialCategory={this.props.Login.materialCat}\r\n                                            material={this.props.Login.material}\r\n                                            materialInventory={this.props.Login.materialInventory}\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            selectedRecordMaterialForm={this.state.selectedRecordMaterialForm || {}}\r\n                                            onMaterialComboChange={this.onMaterialComboChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onChildDataChange={this.onChildDataChange}\r\n                                            onDateChange={this.onDateChange}\r\n                                            handleClose={this.handleClose}\r\n                                            onSaveClick={this.onSaveClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                            /> :\r\n                                            this.props.Login.screenName === 'IDS_TASK' ?\r\n                                                <ResultEntryTaskForm\r\n                                                selectedRecordTaskForm={this.state.selectedRecordTaskForm || {}}\r\n                                                 selectedRecord={this.state.selectedRecord || {}}\r\n                                                    onNumericChange={this.ontaskNumericChange}\r\n                                                    onInputChange={this.ontaskInputChange}\r\n                                                    handleClose={this.handleClose}\r\n                                                    onSaveClick={this.onSaveClick}\r\n                                                /> :\r\n                                                this.props.Login.screenName === 'IDS_PARAMETERCOMMENTS' ?\r\n                                                    <ResultEntryParamCommetsForm\r\n                                                        selecteRecord={this.state.selectedRecord || {}}\r\n                                                        onInputChange={this.onInputChange}\r\n                                                        handleClose={this.handleClose}\r\n                                                        onSaveClick={this.onSaveClick}\r\n                                                    /> : this.props.Login.screenName === 'IDS_RESULTFORMULA' ?\r\n                                                        <ResultEntryFormulaForm\r\n                                                            DynamicFields={this.props.Login.masterData.DynamicFormulaFields}\r\n                                                            // formRef={this.formRef}\r\n                                                            masterData={this.props.Login.masterData}\r\n                                                            handleClose={this.handleClose}\r\n                                                            screenName={this.props.Login.screenName}\r\n                                                            selectedForumulaInput={this.state.selectedForumulaInput || []}\r\n                                                            onFormulaInputChange={this.onFormulaInputChange}\r\n                                                            getAverageResult={this.getAverageResult}\r\n                                                            Login={this.props.Login}\r\n                                                            showValidate={this.props.Login.showValidate}\r\n                                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                                        />\r\n                                                        : this.props.Login.screenName === 'IDS_RESULTIMPORTFILE' ?\r\n                                                            <ResultEntryImport\r\n                                                                handleClose={this.handleClose}\r\n                                                                screenName={this.props.Login.screenName}\r\n                                                                onDropFile={this.onDropFile}\r\n                                                                selectedImportFile={this.props.Login.masterData.selectedImportFile || {}}\r\n                                                                deleteAttachment={this.deleteAttachment}\r\n                                                            /> :\r\n                                                            this.props.Login.screenName === 'IDS_MEANPARAMETER' ?\r\n                                                                <ResultEntryMean\r\n                                                                    // onInputOnChange={this.onMeanInputOnChange}\r\n                                                                    // onComboChange={this.onMeanComboChange}\r\n                                                                    screenName={this.props.Login.screenName}\r\n                                                                    headerSelectionChange={this.headerSelectionChange}\r\n                                                                    selectionChange={this.selectionChange}\r\n                                                                    selectAll={this.state.selectAll}\r\n                                                                    testMean={this.state.testMean}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    meanTestParameterList={this.state.meanTestParameterList || []}\r\n                                                                    selectedTestParam={this.state.selectedTestParam}\r\n                                                                /> :\r\n                                                                this.props.Login.screenName === 'IDS_RESULTPARAMETERCOMMENTS' ? \r\n                                                                <ResultEntryPredefinedComments \r\n                                                                 selectedRecord={this.state.selectedRecord || {}} \r\n                                                                 onInputChange = {this.onInputChange}\r\n                                                                 onComboChange={this.onComboChange}\r\n                                                                 />:\r\n                                                                 this.props.Login.screenName === 'IDS_ENFORCERESULT' ? \r\n                                                                 <ResultEntryEnforceResult \r\n                                                                  selectedRecord={this.state.selectedRecord || {}} \r\n                                                                  GradeList={this.props.Login.masterData.GradeList&&\r\n                                                                    this.props.Login.masterData.GradeList}\r\n                                                                  onInputChange = {this.onInputChange}\r\n                                                                  onComboChange={this.onComboChange}\r\n                                                                  /> :\r\n                                                                  \r\n                                    this.props.Login.screenName === 'IDS_PREVIOUSRESULTVIEW' ?\r\n                                    (\r\n                                        <>\r\n                  \r\n                                          <Card className='one' >\r\n                                            <Card.Body>\r\n                                              <SpecificationInfo\r\n                                                controlMap={this.state.controlMap}\r\n                                                auditInfoFields={auditInfoFields}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                selectedSpecification={this.props.Login.masterData.viewdetails}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                selectedNode={this.props.Login.masterData.selectedNode}\r\n                                                selectedRecord={this.state.filterData}\r\n                                                approvalRoleActionDetail={this.props.Login.masterData.ApprovalRoleActionDetail}\r\n                                                screenName=\"IDS_PREVIOUSRESULTVIEW\"\r\n                  \r\n                                              />\r\n                                            </Card.Body>\r\n                                          </Card>\r\n                                          <br></br>\r\n                  \r\n                                          <DataGrid\r\n                                            primaryKeyField={\"ntransactiontestcode\"}\r\n                                            //data={this.props.Login.addComponentDataList || []}\r\n                                            data={this.props.Login.masterData.AuditModifiedComments || []}\r\n                                            detailedFieldList={this.feildsForGrid}\r\n                                            extractedColumnList={this.feildsForGrid}\r\n                                            //dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                             // && process(this.props.Login.masterData.AuditModifiedComments, { skip: 0, take: 10 })}\r\n                                           // dataState={{ skip: 0, take: 10 }}\r\n                                           dataResult={this.props.Login.masterData.AuditModifiedComments && this.props.Login.masterData.AuditModifiedComments.length > 0\r\n                                            && process(this.props.Login.masterData.AuditModifiedComments, this.state.dataState ? this.state.dataState : { skip: 0, take: 10 })}\r\n                                          //dataState={{ skip: 0, take: 10 }}\r\n                                          dataState={this.state.dataState\r\n                                            ? this.state.dataState : { skip: 0, take: 10 }}\r\n                                        pageable={true}\r\n                                        scrollable={'scrollable'}\r\n                                        dataStateChange={this.dataResultStateChange}\r\n                  \r\n                  \r\n                                          />\r\n                                        </>\r\n                                      )\r\n                                        :\r\n                                                              this.props.Login.screenName === 'IDS_ADHOCPARAMETER' ?\r\n                                                                 <AddAdhocParameter\r\n                                                                 selectedRecord={this.state.selectedRecord || {}}\r\n                                                                 onInputOnChange={this.onInputOnChange}\r\n                                                                 onComboChange={this.onComboChange}\r\n                                                                 adhocParamter={this.props.Login.masterData.AdhocParamter || {}}\r\n                                                                //operation={this.props.operation}\r\n                                                             />: \"\"\r\n                                                                \r\n                                                                \r\n                    }\r\n                />\r\n                :\"\"}\r\n                {\r\n                    this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                        <TemplateForm\r\n                            templateData={this.props.Login.masterData.ChecklistData}\r\n                            nregtypecode={parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode)}\r\n                            nregsubtypecode={parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode)}\r\n                            needSaveButton={this.props.Login.needSaveButton}\r\n                            formRef={this.formRef}\r\n                            onTemplateInputChange={this.onTemplateInputChange}\r\n                            handleClose={this.closeModal}\r\n                            onTemplateComboChange={this.onTemplateComboChange}\r\n                            screenName={this.props.Login.screenName}\r\n                            onSaveClick={this.onSaveCheckList}\r\n                            Login={this.props.Login}\r\n                            viewScreen={this.props.Login.openTemplateModal}\r\n                            selectedRecord={this.state.selectedRecord || []}\r\n                            onTemplateDateChange={this.onTemplateDateChange}\r\n                            needValidation={true}\r\n                        /> : \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    defaultActions = (testChildGetREParam, RESelectedTest, RESelectedSample, setDefaultId, testskip, testtake) => {\r\n        const nregtypecode = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        const nregsubtypecode = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"completeTest\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'nregtypecode': nregtypecode, 'nregsubtypecode': nregsubtypecode, 'ncontrolcode': setDefaultId },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"default\",\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: { ...testChildGetREParam, ncontrolcode: setDefaultId },\r\n                RESelectedTest: acceptTestList,\r\n                RESelectedSample: RESelectedSample,\r\n                ndesigntemplatemappingcode: parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode)\r\n\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, setDefaultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"defaultaction\",\r\n                        operation: \"default\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.defaultTest(inputParam.testChildGetREParam, acceptTestList, RESelectedSample, nregtypecode, nregsubtypecode, ndesigntemplatemappingcode)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTTEST\" }));\r\n        }\r\n\r\n    }\r\n\r\n    completeActions = (testChildGetREParam, RESelectedTest, userInfo, completeResultId, testskip, testtake,validation) => {\r\n\r\n\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"completeTest\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'ncontrolcode': completeResultId },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"complete\",\r\n                postParamList: this.postParamList,\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: testChildGetREParam,\r\n                RESelectedTest: acceptTestList,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                subSampleSkip: this.state.subSampleSkip,\r\n                subSampleTake: this.state.subSampleTake,\r\n                basedrulesengine:validation\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeResultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"complete\",\r\n                        operation: \"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n           this.props.completeTest(inputParam, acceptTestList, userInfo, completeResultId,false,{basedrulesengine:validation})\r\n              \r\n              \r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOCOMPLETE\" }));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    testStartActions = (testChildGetREParam, RESelectedTest, userInfo, completeResultId, testskip, testtake) => {\r\n\r\n        let TestList = [...this.props.Login.masterData.RE_TEST];\r\n        TestList = TestList.splice(testskip, testskip + testtake);\r\n        let acceptTestList = getSameRecordFromTwoArrays(TestList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n\r\n        if (acceptTestList && acceptTestList.length > 0) {\r\n            let inputParam = {\r\n                classUrl: 'resultentrybysample',\r\n                methodUrl: \"testInitiated\",\r\n                inputData: { 'userinfo': this.props.Login.userInfo, 'ncontrolcode': completeResultId,'subSampleNeeded': this.props.Login.masterData.defaultRegistrationSubType.nneedsubsample },\r\n                // formData: formData,\r\n                // isFileupload: true,\r\n                operation: \"testinitiate\",\r\n                postParamList: this.postParamList,\r\n                displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n                testChildGetREParam: testChildGetREParam,\r\n                RESelectedTest: acceptTestList,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                progressTimerStart:true,\r\n                testtake: this.state.testtake,\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeResultId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        screenName: \"complete\",\r\n                        operation: \"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.testStart(inputParam, acceptTestList, userInfo, completeResultId)\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOINITIATE\" }));\r\n        }\r\n    }\r\n\r\n    onSaveCheckList = (selectedRecord, userInfo, nregtypecode, nregsubtypecode) => {\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            let inputParam = {\r\n                \"inputData\": { userinfo: userInfo }\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: {\r\n                        selectedRecord, userInfo, nregtypecode, nregsubtypecode, ndesigntemplatemappingcode,\r\n                        operation: \"updatechecklist\", inputParam,\r\n                    },\r\n                    openModal: true,\r\n                    operation: \"updatechecklist\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.onSaveCheckList(selectedRecord, userInfo, nregtypecode, nregsubtypecode, ndesigntemplatemappingcode)\r\n        }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'testinitiate' || this.props.Login.operation === 'complete' || this.props.Login.operation === 'default' || this.props.Login.operation === \"updatechecklist\" ||\r\n            this.props.Login.operation === 'deleteInstrument' || this.props.Login.operation === 'createMethod' || this.props.Login.operation === 'deleteTask' || this.props.Login.operation === 'updateParameterComments') {\r\n            this.props.validateEsignCredentialComplete(inputParam, \"openModal\");\r\n        }\r\n\r\n        else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    onChildDataChange=(childData)=>{\r\n        if(this.props.Login.screenName==='IDS_MATERIAL'){\r\n            this.setState({selectedRecordMaterialForm:{...childData}, isMaterialInitialRender:false}) \r\n        }else{\r\n            this.setState({selectedRecordInstrumentForm:{...childData}, isInstrumentInitialRender:false}) \r\n        }  \r\n    }\r\n    onInputOnChange = (event,name) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        switch (name) {\r\n            case 'ntestgroupmaterial':\r\n              const ntestgrouptestcode =  selectedRecord.ntestgroupmaterial == transactionStatus.YES ? this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode : -1\r\n                this.props.getREMaterialComboGet({ ntestgroupmaterial:selectedRecord.ntestgroupmaterial, ntestgrouptestcode,RESelectedTest:this.props.Login.masterData.RESelectedTest,test:this.props.Login.masterData.RESelectedTest[0], userInfo: this.props.Login.userInfo })\r\n                break; \r\n        default:\r\n        this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onSaveFileClick = (saveType, formRef) => {\r\n        const selectedImportFile = this.props.Login.masterData.selectedImportFile;\r\n        const acceptedFile = selectedImportFile ? selectedImportFile.sfilename : [];\r\n        const formData = new FormData();\r\n\r\n        if (acceptedFile && acceptedFile.length > 0) {\r\n            acceptedFile.forEach((file, index) => {\r\n                formData.append(\"uploadedFile\" + index, file);\r\n            });\r\n            formData.append(\"filecount\", acceptedFile.length);\r\n        } else {\r\n            return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONEFILETOSUBMIT\" }))\r\n        }\r\n\r\n        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n        formData.append(\"nregtypecode\", JSON.stringify(this.props.Login.masterData.realRegTypeValue.nregtypecode));\r\n        formData.append(\"nregsubtypecode\", JSON.stringify(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode));\r\n        formData.append(\"stransactiontestcode\", JSON.stringify(this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"));\r\n        this.props.resultImportFile(formData, this.props.Login.masterData);\r\n    }\r\n\r\n    onSaveClickAdhocParam = (saveType) =>{\r\n        if(Object.keys(this.state.selectedRecord).length >0){\r\n            \r\n         let Map = {};\r\n         let testParameter=[];\r\n         this.state.selectedRecord && this.state.selectedRecord.nparamtercode.forEach((data,index)=>\r\n         testParameter.push(data.item));\r\n\r\n         Map[\"ntestparametercode\"] = testParameter.map(ntestgroupparamtercode => ntestgroupparamtercode.item.ntestparametercode).join(\",\");\r\n         Map[\"ntestgrouptestcode\"] = testParameter.map(ntestgrouptestcode => ntestgrouptestcode.item.ntestgrouptestcode).join(\",\");\r\n         Map[\"ntestcode\"] = testParameter.map(ntestgrouptestcode => ntestgrouptestcode.item.ntestcode).join(\",\");\r\n         Map[\"userinfo\"] = this.props.Login.userInfo;\r\n         Map[\"npreregno\"]=this.props.Login.adhocpreregno;\r\n         Map[\"ntransactiontestcode\"]=this.props.Login.adhoctransactiontestcode;\r\n         Map[\"masterData\"] = this.props.Login.masterData;\r\n         Map[\"multiselecttransactiontestcode\"] =  this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\");\r\n         Map[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n         Map[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n         Map[\"ndesigntemplatemappingcode\"] =  this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode;\r\n         Map[\"nneedsubsample\"]=this.props.Login.masterData.nneedsubsample;\r\n         let inputParam = {\r\n            inputData: Map,\r\n            action: 'createAdhocParameter',\r\n            operation:\"create\",\r\n            methodUrl:\"AdhocParamter\",\r\n            classUrl:\"resultentrybysample\"\r\n\r\n        }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.adhocId)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    screenName: \"Resultentry\",\r\n                    operation: \"adhocTestParameter\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }else{\r\n          this.props.createAdhocParamter(inputParam);\r\n        }\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id:\"IDS_SELECTRECORD\" }))\r\n      }\r\n    }\r\n    onDropFile = (acceptedFile) => {\r\n        this.props.Login.masterData.selectedImportFile['sfilename'] = acceptedFile\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: this.props.Login.masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFormulaInputChange = (event, index, fields) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        let selectedForumulaInput = this.state.selectedRecord.selectedForumulaInput || [];\r\n        let selectedMandatory = this.state.selectedRecord.selectedMandatory || [];\r\n        let dynamicformulafields = {};\r\n\r\n        if (event) {\r\n            if (fields.ndynamicformulafieldcode === FORMULAFIELDTYPE.INTEGER) {\r\n                const value = event.target.value.replace(/[^-^0-9]/g, '');\r\n                if (/^-?\\d*?$/.test(value) || value === \"\") {\r\n                    if (this.state.selectedRecord.formulainput) {\r\n                        dynamicformulafields.svalues = value;\r\n                        dynamicformulafields.sparameter = fields.sdescription;\r\n                        selectedForumulaInput[index] = dynamicformulafields;\r\n                        selectedMandatory[index] = event.target.value;\r\n                    }\r\n                }\r\n                selectedRecord[\"selectedForumulaInput\"] = selectedForumulaInput;\r\n                selectedRecord[\"selectedMandatory\"] = selectedMandatory;\r\n\r\n                this.setState({ selectedRecord: selectedRecord });\r\n            } else {\r\n                const value = event.target.value.replace(/[^-^0-9.]/g, '');\r\n                if (/^-?\\d*?\\.?\\d*?$/.test(value) || value === \"\") {\r\n                    if (this.state.selectedRecord.formulainput) {\r\n                        dynamicformulafields.svalues = value;\r\n                        dynamicformulafields.sparameter = fields.sdescription;\r\n                        selectedForumulaInput[index] = dynamicformulafields;\r\n                        selectedMandatory[index] = event.target.value;\r\n                    }\r\n                }\r\n                selectedRecord[\"selectedForumulaInput\"] = selectedForumulaInput;\r\n                selectedRecord[\"selectedMandatory\"] = selectedMandatory;\r\n\r\n                this.setState({ selectedRecord: selectedRecord });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    viewAdditionalInfo = (currentAlertResultCode) => {\r\n        const selectedRecord = this.state.selectedRecord || [];   \r\n        let additionalInfo=selectedRecord['additionalInfo'];  \r\n        let  showAlertGrid=this.props.Login.showAlertGrid;\r\n        let  additionalInfoView=this.props.Login.additionalInfoView\r\n        if(additionalInfo[currentAlertResultCode]){\r\n            showAlertGrid=true;\r\n            additionalInfoView=true; \r\n            selectedRecord['additionalResultData']=additionalInfo[currentAlertResultCode]\r\n        }\r\n       // this.setState({selectedRecord,additionalInfoView});\r\n     const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedRecord: selectedRecord,showAlertGrid,additionalInfoView }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    } \r\n    onModalSave=()=>{\r\n      const selectedRecord = this.state.selectedRecord || [];\r\n      let currentAlertResultCode=this.state.currentAlertResultCode||0; \r\n      let currentntestgrouptestpredefcode=this.state.currentntestgrouptestpredefcode||0; \r\n      let bool=this.state.selectedRecord.ResultParameter.some(x=>x['ntransactionresultcode']===currentAlertResultCode) \r\n      if(bool){\r\n        this.state.selectedRecord.ResultParameter.map(Parameter=>\r\n            {\r\n                if(Parameter['ntransactionresultcode']===currentAlertResultCode){ \r\n                    Parameter['additionalInfoUidata']={ntestgrouptestpredefsubcode: selectedRecord['ntestgrouptestpredefsubcode']}\r\n                    if(selectedRecord['ntestgrouptestpredefsubcode']){\r\n                        if(typeof selectedRecord['ntestgrouptestpredefsubcode']==='string'){\r\n                            Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode']\r\n                        }else{\r\n                            Parameter['additionalInfo']=\"\"\r\n                            // selectedRecord['ntestgrouptestpredefsubcode'].map(x=>{ \r\n                            //     Parameter['additionalInfo']+= x.label+\",\"  \r\n                            // }).join('\\n')\r\n                            Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'].map(x=>x.label+\",\").join('\\n')\r\n                              Parameter['additionalInfo']=Parameter['additionalInfo'].substring(0,\r\n                                 Parameter['additionalInfo'].length-1) \r\n                        } \r\n                    } else{\r\n                        Parameter['additionalInfo']=\"\"\r\n                        Parameter['additionalInfoUidata'] && delete Parameter['additionalInfoUidata']\r\n                    }\r\n                    Parameter['ntestgrouptestpredefcode']=currentntestgrouptestpredefcode\r\n                }\r\n            }\r\n            );  \r\n      } \r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { selectedRecord: selectedRecord,showAlertGrid:false}\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onskiprule=()=>{\r\n        const startDate = (this.props.Login.masterData.realFromDate || this.props.Login.masterData.fromDate || new Date());\r\n        const endDate = (this.props.Login.masterData.realToDate || this.props.Login.masterData.toDate || new Date());\r\n\r\n        // let obj = this.covertDatetoString(startDate, endDate)\r\n        let obj = convertDateValuetoString(startDate, endDate, this.props.Login.userInfo);\r\n\r\n        const fromDate = obj.fromDate;\r\n        const toDate = obj.toDate;\r\n        const completeResultId = this.state.controlMap.has(\"CompleteResult\") && this.state.controlMap.get(\"CompleteResult\").ncontrolcode;\r\n        let testChildGetREParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample&&sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample&&sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestKey: this.props.Login.activeTestTab || 'IDS_RESULTS',\r\n            fromdate: fromDate,\r\n            todate: toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 1 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 1 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n            //activeTabIndex: this.state.enableAutoClick ? this.state.activeTabIndex : this.state.activeTabIndex ? this.state.activeTabIndex : 1,\r\n            nworlistcode : (this.props.Login.masterData.realWorklistCodeValue && this.props.Login.masterData.realWorklistCodeValue.nworklistcode) || -1,\r\n            nbatchmastercode : (this.props.Login.masterData.realBatchCodeValue && this.props.Login.masterData.realBatchCodeValue.nbatchmastercode) || -1\r\n        }\r\n\r\n        this.completeActions(testChildGetREParam, this.props.Login.masterData.RESelectedTest, this.props.Login.userInfo, completeResultId, this.state.testskip, this.state.testtake,4)\r\n    }\r\n\r\n    ontaskInputChange = (Data, name) => {\r\n        const selectedRecordTaskForm = this.state.selectedRecordTaskForm || [];\r\n        selectedRecordTaskForm[name] = Data.target.value;\r\n        this.setState({ selectedRecordTaskForm:{...selectedRecordTaskForm},isTaskInitialRender:false  });\r\n    }\r\n    ontaskNumericChange = (numericData, numericName) => {\r\n        const selectedRecordTaskForm = this.state.selectedRecordTaskForm || [];\r\n        if (numericData) {\r\n            if (numericName !== \"scomments\") {\r\n                selectedRecordTaskForm[numericName] = numericData;\r\n            } else {\r\n                selectedRecordTaskForm[numericName] = numericData.target.value;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecordTaskForm[numericName] = \"\";\r\n        }\r\n        this.setState({ selectedRecordTaskForm:{...selectedRecordTaskForm},isTaskInitialRender:false });\r\n    }\r\n\r\n\r\n\r\n    onInputChange = (Data, name) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode=this.state.currentAlertResultCode||0; \r\n        if (Data) {\r\n            if(name==='ntestgrouptestpredefsubcode'){\r\n                // if(!selectedRecord['additionalInfo']){\r\n                //     selectedRecord['additionalInfo']=[] \r\n                // } \r\n                // if(selectedRecord['additionalInfo']){\r\n                //     selectedRecord['additionalInfo'][currentAlertResultCode]= Data.target.value\r\n                // } \r\n                // let bool=this.state.selectedRecord.ResultParameter.some(x=>x['ntransactionresultcode']===currentAlertResultCode) \r\n                // if(bool){\r\n                //   this.state.selectedRecord.ResultParameter.map(Parameter=>\r\n                //       {\r\n                //           if(Parameter['ntransactionresultcode']===currentAlertResultCode){\r\n                //               Parameter[\"jsondata\"]={};\r\n                //               Parameter['additionalInfo']=selectedRecord['additionalInfo'][currentAlertResultCode]\r\n                //             //   Parameter[\"jsondata\"] = { \r\n                //             //       ...Parameter[\"jsondata\"],\r\n                //             //       additionalInfo:selectedRecord['additionalInfo'][currentAlertResultCode]\r\n                //             //   }\r\n                //           }\r\n                //       }\r\n                //       );  \r\n                // }\r\n              //  selectedRecord[name] = Data.target.value;\r\n            }\r\n            //else{\r\n                selectedRecord[name] = Data.target.value;\r\n          //  } \r\n        }\r\n        else {\r\n            selectedRecord[name] = [];\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericChange = (numericData, numericName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        if (numericData) {\r\n            if (numericName !== \"scomments\") {\r\n                selectedRecord[numericName] = numericData;\r\n            } else {\r\n                selectedRecord[numericName] = numericData.target.value;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[numericName] = \"\";\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDateChange = (dateName, dateValue) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        selectedRecord[dateName] = dateValue;\r\n        if (dateName === \"dfromdate\" || dateName === \"dtodate\") {\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let meanTestParameterList = this.state.meanTestParameterList || [];\r\n        let selectedMeanTestParam = this.state.selectedMeanTestParam || new Map();\r\n        if (checked) {\r\n            const data = meanTestParameterList.map(item => {\r\n                item.selected = checked;\r\n                selectedMeanTestParam.set(item.ntransactionresultcode, item.sresult);\r\n                return item;\r\n            });\r\n\r\n            let selectedTestParam = \"\";\r\n            let selectedTestParamMean = 0;\r\n            let size = 0;\r\n            if (selectedMeanTestParam.size > 0) {\r\n                [...selectedMeanTestParam.values()].forEach(item => (\r\n                    item !== null && item !== \"\" ?\r\n                        (selectedTestParam = selectedTestParam === \"\" ? item : selectedTestParam + \"+\" + item,\r\n                            size = size + 1,\r\n                            selectedTestParamMean = parseInt(selectedTestParamMean) + parseInt(item)) : \"\"\r\n                ));\r\n                selectedTestParamMean = selectedTestParamMean / size;\r\n            }\r\n\r\n            this.setState({\r\n                meanTestParameterList: data, selectedMeanTestParam, selectedTestParam,\r\n                testMean: selectedTestParamMean,\r\n                selectAll: checked\r\n            });\r\n        }\r\n        else {\r\n            const data = meanTestParameterList.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            this.setState({\r\n                meanTestParameterList: data, selectedMeanTestParam: new Map(),\r\n                selectedTestParam: \"\",\r\n                testMean: \"\",\r\n                selectAll: checked\r\n            });\r\n        }\r\n    }\r\n\r\n    selectionChange = (event) => {\r\n        let meanTestParameterList = this.state.meanTestParameterList || [];\r\n        let selectedMeanTestParam = this.state.selectedMeanTestParam || new Map();\r\n        meanTestParameterList.map(item => {\r\n            if (item.ntransactionresultcode === event.dataItem.ntransactionresultcode) {\r\n                item.selected = !event.dataItem.selected;\r\n            }\r\n            return item;\r\n        });\r\n        if (event.dataItem.selected) {\r\n            selectedMeanTestParam.set(event.dataItem.ntransactionresultcode, event.dataItem.sresult);\r\n        }\r\n        else {\r\n            if (selectedMeanTestParam.has(event.dataItem.ntransactionresultcode)) {\r\n                selectedMeanTestParam.delete(event.dataItem.ntransactionresultcode)\r\n            }\r\n        }\r\n        let selectedTestParam = \"\";\r\n        let selectedTestParamMean = 0;\r\n        let size = 0;\r\n        if (selectedMeanTestParam.size > 0) {\r\n            [...selectedMeanTestParam.values()].forEach(item => (\r\n                item !== null && item !== \"\" ?\r\n                    (selectedTestParam = selectedTestParam === \"\" ? item : selectedTestParam + \"+\" + item,\r\n                        size = size + 1,\r\n                        selectedTestParamMean = parseInt(selectedTestParamMean) + parseInt(item)) : \"\"\r\n            ));\r\n            selectedTestParamMean = selectedTestParamMean / size;\r\n        }\r\n        this.setState({\r\n            meanTestParameterList, selectedMeanTestParam, selectedTestParam, testMean: selectedTestParamMean,\r\n            selectAll: this.valiateCheckAll(meanTestParameterList)\r\n        });\r\n    }\r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            selectAll = false;\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n    onMeanComboChange = (comboData, comboName) => {\r\n        const selectedMeanTestParam = this.state.selectedMeanTestParam || [];\r\n        selectedMeanTestParam[comboName] = comboData[0];\r\n        let data = \"\";\r\n        if (selectedMeanTestParam[\"parametervalue\"] === undefined) {\r\n            data = comboData[0].value;\r\n        }\r\n        else {\r\n            data = selectedMeanTestParam[\"parametervalue\"] + \"+\" + comboData[0].value;\r\n        }\r\n        selectedMeanTestParam[\"parametervalue\"] = data;\r\n        this.setState({ selectedMeanTestParam });\r\n    }\r\n\r\n    onMaterialComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        const ntestgrouptestcode = selectedRecord.ntestgroupmaterial == transactionStatus.YES ?  this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode : -1;\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n            //this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n            //this.setState({ selectedRecord });\r\n        }\r\n        switch (comboName) {\r\n            case 'nmaterialtypecode':\r\n                this.props.getREMaterialCategoryByType({ntestgrouptestcode,selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            case 'nmaterialcatcode':\r\n                selectedRecord['nsectioncode'] = selectedRecord.nmaterialcatcode.item.needSectionwise == transactionStatus.YES ? \r\n                                        this.props.Login.masterData.RESelectedTest[0].nsectioncode : -1;\r\n                this.props.getREMaterialByCategory({ ntestgrouptestcode,selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            case 'nmaterialcode':\r\n                this.props.getREMaterialInvertoryByMaterial({ ntestgrouptestcode,selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n            default:\r\n                this.props.getAvailableMaterialQuantity({ ntestgrouptestcode,selectedRecord, userInfo: this.props.Login.userInfo })\r\n                break;\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode=this.state.currentAlertResultCode||0;\r\n        if (comboData) { \r\n            // if(comboName==='ntestgrouptestpredefsubcode'){\r\n                 \r\n            //     if(!selectedRecord['additionalInfo']){\r\n            //         selectedRecord['additionalInfo']=[] \r\n            //     }  \r\n            //         selectedRecord['additionalInfo'][currentAlertResultCode]=\"\"\r\n            //         comboData.map(x=>{ \r\n            //             selectedRecord['additionalInfo'][currentAlertResultCode]+= x.label+\",\"//+<br/> \r\n            //         })\r\n            //         selectedRecord['additionalInfo'][currentAlertResultCode]=selectedRecord['additionalInfo'][currentAlertResultCode].substring(0,\r\n            //             selectedRecord['additionalInfo'][currentAlertResultCode].length-1) \r\n            // } \r\n                selectedRecord[comboName] = comboData; \r\n        } else {\r\n            selectedRecord[comboName] = [] \r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord: selectedRecord }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n\r\n    onChange = (comboData, fieldName, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const selectedsubcode=[];\r\n        if (comboData !== null) {\r\n          switch (caseNo) {\r\n            \r\n            case 1:\r\n              selectedRecord[fieldName] = comboData;\r\n              delete selectedRecord[\"ResultParameter\"];\r\n              \r\n             this.setState({selectedsubcode}) \r\n              this.props.resultEntryGetComponent(selectedRecord,this.props.Login.masterData, this.props.Login.userInfo,this.props.Login.ncontrolcode, this.state.testskip, this.state.testtake)\r\n              break;\r\n              case 2:         \r\n              selectedRecord[fieldName] = comboData;\r\n              delete selectedRecord[\"ResultParameter\"];\r\n              this.setState({selectedsubcode})  \r\n              this.props.resultEntryGetParameter(selectedRecord,this.props.Login.masterData, this.props.Login.userInfo,this.props.Login.ncontrolcode, this.state.testskip, this.state.testtake)\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        // else {\r\n        //   if (selectedRecord[\"nsectioncode\"]) {\r\n        //     delete selectedRecord[\"nsectioncode\"];\r\n        //     delete selectedRecord[\"nusercode\"];\r\n    \r\n        //   }\r\n        //   const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedRecord,selectedsubcode:undefined }\r\n        //   }\r\n        //   this.props.updateStore(updateInfo);\r\n        // }\r\n      };\r\n\r\n    onGradeEvent = (ResultParameter, index, parameter) => {\r\n        if (ResultParameter.length > 0 && ResultParameter[index] !== undefined && ResultParameter[index].sresult !== null) {\r\n            let selectedRecord = this.state.selectedRecord || [];\r\n            let selectedResultGrade = this.state.selectedRecord.selectedResultGrade || [];\r\n            if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n                selectedResultGrade[index] = {\r\n                    ngradecode: ResultParameter[index].sresult !== \"\" ?\r\n                        numericGrade(parameter, numberConversion(parseFloat(ResultParameter[index].sresult), parseInt(parameter.nroundingdigits))) : -1\r\n                };\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n                if (ResultParameter[index].sresult !== null) {\r\n                    selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: 0 };\r\n                }\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n                if (ResultParameter[index].sresult !== null && ResultParameter[index].sresult.trim() !== \"\") {\r\n                    //selectedResultGrade[index] = { ngradecode: ResultParameter[index].ngradecode };\r\n                    selectedResultGrade[index] = { ngradecode: 4 };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: -1 };\r\n                }\r\n            }\r\n            //this.props.Login.masterData[\"selectedResultGrade\"] = selectedResultGrade;\r\n            selectedRecord.selectedResultGrade = selectedResultGrade;\r\n\r\n            this.setState({\r\n                selectedRecord\r\n            });\r\n\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: { masterData: this.props.Login.masterData }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = [...this.props.Login.masterData.RE_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.RE_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.RE_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.RESelectedSubSample, \"ntransactionsamplecode\");\r\n            // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.RE_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.RE_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.RESelectedSample, \"npreregno\");\r\n            // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n\r\n\r\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.RESelectedSubSample.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.RESelectedSubSample.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subSampleTake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.RESelectedSubSample, \"ntransactionsamplecode\");\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = [...this.props.Login.masterData.RE_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.RESelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = [...this.props.Login.masterData.RE_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.RESelectedSample, \"npreregno\");\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.RESelectedTest ? this.props.Login.masterData.RESelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n        }\r\n\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample ? this.props.Login.masterData.RESelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.RESelectedSubSample);\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender:false\r\n           // currentAlertResultCode,\r\n          //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n\r\n    onSampleAdd = (selectedsubcode) => {\r\n        this.setState({\r\n            selectedsubcode: [...selectedsubcode],\r\n            isaddSampleRender:false\r\n           // currentAlertResultCode,\r\n          //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n\r\n    // onResultInputChange = (event, index, parameter) => {\r\n    //     //let ResultParameter = this.props.Login.masterData.ResultParameter ? this.props.Login.masterData.ResultParameter : [];\r\n    //     let selectedRecord = this.state.selectedRecord || [];\r\n    //     let ResultParameter = this.state.selectedRecord.ResultParameter ? this.state.selectedRecord.ResultParameter : [];\r\n    //     let sresult = \"\";\r\n    //     let sfinal = \"\";\r\n    //     let sresultpredefinedname= \"\";\r\n    //     let salertmessage = \"\";\r\n    //     let sresultcomment = \"\";\r\n    //     let value = -1;\r\n    //     let acceptedFile = [];\r\n    //     let ncalculatedresult; \r\n    //     let currentAlertResultCode=0;\r\n    //     let currentntestgrouptestpredefcode=0;\r\n    //     let inputData={}\r\n    //     if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n    //         if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\r\n    //             sresult = event.target.value;\r\n    //             ncalculatedresult = 4\r\n    //         } else {\r\n    //             sresult = ResultParameter[index]['sresult'] === null ? \"\" : ResultParameter[index]['sresult'];\r\n    //             ncalculatedresult = ResultParameter[index]['ncalculatedresult'];\r\n    //         }\r\n    //     }\r\n    //     if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n    //          currentAlertResultCode= event.item.ntransactionresultcode ;\r\n    //          currentntestgrouptestpredefcode= event.item.ntestgrouptestpredefcode ;\r\n    //         if (event != null) {\r\n    //             sresult = event.item.spredefinedname;\r\n    //             sresultpredefinedname = event.item.sresultpredefinedname;\r\n    //             sfinal=event.item.spredefinedsynonym\r\n    //             value = event.item.ngradecode;\r\n    //             salertmessage=event.item.salertmessage?event.item.salertmessage:\"\";\r\n    //             sresultcomment= event.item.spredefinedcomments?event.item.spredefinedcomments:\"\";\r\n    //             ncalculatedresult = 4; \r\n    //         }\r\n    //         else {\r\n    //             sresult = \"\";\r\n    //             sfinal = \"\";\r\n    //             sresultpredefinedname= \"\";\r\n    //             value = -1;\r\n    //             ncalculatedresult = 4\r\n    //         }\r\n    //         inputData={\r\n    //             'ntestgrouptestpredefcode':event.item.ntestgrouptestpredefcode,\r\n    //             'salertmessage':salertmessage,\r\n    //             'nneedresultentryalert':event.item.nneedresultentryalert,\r\n    //             'nneedsubcodedresult':event.item.nneedsubcodedresult\r\n    //         }\r\n    //         // ResultParameter[index]['additionalInfo']&& delete ResultParameter[index]['additionalInfo'] \r\n    //         // ResultParameter[index]['additionalInfo']&& delete ResultParameter[index]['additionalInfoUidata']  \r\n    //         if(event.item.nneedresultentryalert===transactionStatus.NO&&\r\n    //             event.item.nneedsubcodedresult===transactionStatus.NO){\r\n    //                 if(ResultParameter[index]['additionalInfo']){ \r\n    //                     ResultParameter[index]['additionalInfo']=\"\" \r\n    //                 } \r\n    //                 if(ResultParameter[index]['additionalInfoUidata']){  \r\n    //                     ResultParameter[index]['additionalInfoUidata']=\"\" \r\n    //                 } \r\n    //             }\r\n          \r\n    //     }\r\n    //     if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n    //         sresult = event.target.value;\r\n    //         if (event.target.value.trim() === \"\")\r\n    //             ncalculatedresult = -1;\r\n    //         else\r\n    //             ncalculatedresult = 4;\r\n    //     }\r\n    //     if (parameter.nparametertypecode === parameterType.ATTACHMENT) {\r\n    //         sresult = event[0] && event[0].name;\r\n    //         sfinal= event;\r\n    //         ncalculatedresult = 4\r\n    //     }\r\n    //     ResultParameter[index]['sresult'] = sresult\r\n    //     ResultParameter[index]['sfinal'] = sfinal\r\n    //     ResultParameter[index]['sresultpredefinedname'] = sresultpredefinedname\r\n    //     ResultParameter[index]['sresultcomment'] = sresultcomment\r\n    //     ResultParameter[index]['salertmessage'] = salertmessage\r\n    //     ResultParameter[index]['acceptedFile'] = acceptedFile\r\n    //     ResultParameter[index]['editable'] = true\r\n    //     ResultParameter[index]['ngradecode'] = value\r\n    //     ResultParameter[index]['ncalculatedresult'] = ncalculatedresult \r\n\r\n    //     // this.props.Login.masterData.ResultParameter = ResultParameter;\r\n    //     selectedRecord.ResultParameter = ResultParameter\r\n    //     if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n    //         this.props.getPredefinedData(inputData,selectedRecord,currentAlertResultCode,this.props.Login.masterData) \r\n    //     }\r\n    //     this.setState({\r\n    //         selectedRecord: selectedRecord,\r\n    //         currentAlertResultCode,\r\n    //         currentntestgrouptestpredefcode\r\n    //     });\r\n\r\n    //     // const updateInfo = {\r\n    //     //     typeName: DEFAULT_RETURN,\r\n    //     //     data: { masterData: this.props.Login.masterData }\r\n    //     // }\r\n    //     // this.props.updateStore(updateInfo);\r\n    // }\r\n\r\n    updateTestMethodSource(inputData, masterData, ncontrolcode) {\r\n        let inputParam = {\r\n\r\n            inputData: { ...inputData, 'userinfo': this.props.Login.userInfo, ncontrolcode },\r\n            // formData: formData,\r\n            // isFileupload: true,\r\n            operation: \"createMethod\",\r\n            screenName: \"IDS_TESTMETHODSOURCE\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //inputData1: inputData,\r\n            masterData: masterData\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    //screenName: \"completeaction\",\r\n                    operation: \"createMethod\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateTestMethodSource(inputData, masterData)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateParameterComments(inputData, masterData, ncontrolcode) {\r\n        // let inputData1 = { ...inputData, ncontrolcode }\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        inputData = { ...inputData, ndesigntemplatemappingcode: ndesigntemplatemappingcode }\r\n        let inputParam = {\r\n            inputData: { ...inputData, ncontrolcode, 'userinfo': this.props.Login.userInfo },\r\n            operation: this.props.Login.operation,\r\n            screenName: \"IDS_RESULT\",\r\n            displayName: this.props.Login.inputParam.displayName,//, postParam,\r\n            //inputData: inputData1,\r\n            masterData: masterData\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true,\r\n                    //screenName: \"completeaction\",\r\n                    operation: \"updateParameterComments\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateParameterComments(inputData, masterData)\r\n        }\r\n    }\r\n\r\n    onSaveMean = (saveType) => {\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n\r\n        let resultParameter = this.props.Login.selectedTestParameterMean || {};\r\n        //let resultParameter = { };\r\n\r\n        resultParameter[\"ncalculatedresult\"] = 4;\r\n        resultParameter[\"sresult\"] = this.state.testMean;\r\n        resultParameter[\"sfinal\"] = numberConversion(parseFloat(this.state.testMean), parseInt(resultParameter.nroundingdigit));\r\n\r\n        resultParameter[\"ngradecode\"] = numericGrade(resultParameter, parseInt(this.state.testMean));\r\n        resultParameter['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n        resultParameter['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n        // resultParameter['ntransactionresultcode'] = meanParameter.ntransactionresultcode;\r\n        // resultParameter['ntransactiontestcode'] = meanParameter.ntransactiontestcode;\r\n        // resultParameter['nparametertypecode'] = meanParameter.nparametertypecode;\r\n        //console.log(\"result:\", resultParameter);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"filecount\", 0);\r\n        formData.append(\"nregtypecode\", nregtypecode);\r\n        formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n        formData.append(\"transactiontestcode\", resultParameter.ntransactiontestcode);\r\n        //formData.append(\"resultData\", JSON.stringify([resultParameter]));\r\n        formData.append(\"resultData\", resultParameter);\r\n\r\n        const inputParam = {\r\n            classUrl: \"resultentrybysample\",\r\n            methodUrl: \"TestParameterResult\",\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: \"update\",\r\n            displayName: this.props.Login.inputParam.displayName, saveType\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    editpredefinedcomments=(dataItem)=>{\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                screenName: \"IDS_RESULTPARAMETERCOMMENTS\",\r\n                openModal: true,\r\n                selectedRecord:{'sresultcomment':dataItem['sresultcomment'],'selectedPredefinedComments':dataItem},\r\n                operation: \"update\" \r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    enforceResult=(dataItem)=>{ \r\n        let inputParam = {}\r\n        inputParam = {\r\n            dataItem:dataItem,\r\n            masterData:this.props.Login.masterData,\r\n            screenName: \"IDS_ENFORCERESULT\",\r\n            openModal: true, \r\n            operation: \"update\" ,\r\n            ncontrolcode:dataItem['ncontrolcode']\r\n        }\r\n        this.props.enforceResult(inputParam,this.props.Login.userInfo);\r\n    }\r\n    onSavePredefinedComments = (saveType) => { \r\n        let inputParam={}\r\n        let stransactiontestcode=\"\";\r\n        this.props.Login.masterData.RESelectedTest.map(x=>{ \r\n            stransactiontestcode+=x['ntransactiontestcode']+\",\"\r\n        }\r\n          )\r\n        let inputData={\r\n            'selectedPredefinedComments':this.state.selectedRecord['selectedPredefinedComments'],\r\n            'ntransactionresultcode': this.state.selectedRecord['selectedPredefinedComments']['ntransactionresultcode']\r\n            ,\r\n            'sresultcomment':this.state.selectedRecord['sresultcomment'],\r\n            'ntransactiontestcode':stransactiontestcode.substring(0,stransactiontestcode.length-1),//this.state.selectedRecord['selectedPredefinedComments']['ntransactiontestcode'],\r\n            'userinfo':this.props.Login.userInfo\r\n        } \r\n        inputParam = {\r\n            classUrl: 'resultentrybysample',\r\n            methodUrl: \"PredefinedComments\", \r\n            inputData: inputData, \r\n        //    isFileupload: false,\r\n          //  activeTestKey: \"IDS_INSTRUMENT\",\r\n            operation: this.props.Login.operation,\r\n            displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveEnforceResult = (saveType) => { \r\n        let inputParam={}\r\n        let stransactiontestcode=\"\";\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n        // this.props.Login.masterData.RESelectedTest.map(x=>{ \r\n        //     stransactiontestcode+=x['ntransactiontestcode']+\",\"\r\n        // }\r\n        //   )\r\n        let inputData={\r\n            'ResultParameter':{ \r\n              //  ngradecode:this.state.selectedRecord['ngradecode'].value,\r\n                nparametertypecode:parameterType.CHARACTER,\r\n                sfinal:this.state.selectedRecord['senforceresult'],\r\n                senforceresultcomment:this.state.selectedRecord['senforceresultcomment'],\r\n                ntransactiontestcode:this.state.selectedRecord['ntransactiontestcode'],\r\n                ntransactionresultcode:this.state.selectedRecord['ntransactionresultcode']\r\n            },  \r\n           'ntransactionresultcode':this.state.selectedRecord['ntransactionresultcode'],\r\n            \"nregtypecode\" : nregtypecode ,\r\n             \"nregsubtypecode\" : nregsubtypecode,\r\n            \"ndesigntemplatemappingcode\" : ndesigntemplatemappingcode,\r\n            'userinfo':this.props.Login.userInfo\r\n        } \r\n        inputParam = {\r\n            classUrl: 'resultentrybysample',\r\n            methodUrl: \"EnforceResult\", \r\n            inputData: inputData,  \r\n            operation: this.props.Login.operation,\r\n            displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    // callbackToParent=(childData)=>{\r\n    //     console.log('childData',childData)\r\n    //     this.setState({childData})\r\n    // }\r\n    onSaveClick = (saveType,data) => {\r\n        if (this.props.Login.screenName === \"IDS_MEANPARAMETER\") {\r\n            this.onSaveMean(saveType);\r\n        }else if(this.props.Login.screenName === \"IDS_RESULTPARAMETERCOMMENTS\"){\r\n            this.onSavePredefinedComments(saveType);\r\n        }\r\n        else if(this.props.Login.screenName === \"IDS_ENFORCERESULT\"){\r\n            this.onSaveEnforceResult(saveType);\r\n        }\r\n        else {\r\n            let ResultParameter = this.state.parameterResults//this.props.Login.parameterResults\r\n\r\n            //let ResultParameter = this.state.selectedRecord.ResultParameter || [];\r\n        //    let ResultParameter = this.props.Login.parameterResults || [];\r\n         // let ResultParameter = saveType.parameterResults || [];\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            let selectedRecordMaterialForm = this.state.selectedRecordMaterialForm || {}; \r\n            let selectedRecordInstrumentForm= this.state.selectedRecordInstrumentForm || {}; \r\n            let selectedRecordTaskForm= this.state.selectedRecordTaskForm || {};\r\n            let selectedId = this.props.Login.selectedId || null;\r\n            let additionalInfo=this.state.selectedRecord.additionalInfo || []; \r\n            const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n            const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n            const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n\r\n            const classUrl = \"resultentrybysample\";\r\n            const formData = new FormData();\r\n            let neditable = 0;\r\n            let resultParameters = [];\r\n            let inputParam = {};\r\n            let inputData = [];\r\n            let i = 0;\r\n            //const postParam = {inputListName: \"RESelectedTest\", selectedObject: \"RESelectedTest\", primaryKeyField: \"ntransactionstestcode\" };\r\n            if (this.props.Login.screenName === \"IDS_RESULTENTRY\") {\r\n                if (ResultParameter.length > 0 && ResultParameter !== undefined) {\r\n                    ResultParameter.map((resultData, index) => {\r\n                        let results = {};\r\n                        if (resultData.editable === true) {\r\n                            neditable = 1;\r\n                            switch (resultData.nparametertypecode) {\r\n                                case 1:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                        sresult: resultData.sresult,\r\n                                        sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\"\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                        numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                    results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                        numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 2:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sfinal,false),  \r\n                                        sresultcomment: resultData.sresultcomment==='null'?\"-\":resultData.sresultcomment,\r\n                                        salertmessage: resultData.salertmessage,\r\n                                        additionalInfo:resultData['additionalInfo'],\r\n                                        additionalInfoUidata:resultData['additionalInfoUidata']===undefined?\"\":resultData['additionalInfoUidata'],\r\n                                        ntestgrouptestpredefcode:resultData.ntestgrouptestpredefcode  \r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                   \r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.ngradecode;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 3:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sresult,false)\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : grade.FIO;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    break;\r\n                                case 4:\r\n                                    if (resultData.sfinal.length>0 ) {\r\n                                        const splittedFileName = resultData.sfinal ?resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                        const fileExtension = resultData.sfinal ?resultData.sfinal[0]&& resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                        const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                        results[\"jsondata\"] = {\r\n                                            ssystemfilename: uniquefilename,\r\n                                            nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                            ncalculatedresult: 4,\r\n                                            sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                            sfinal: Lims_JSON_stringify(resultData.sresult,false)\r\n                                        }\r\n                                        results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                        results[\"ncalculatedresult\"] = 4;\r\n                                        results[\"sresult\"] = resultData.sresult;\r\n                                        results[\"sfinal\"] = resultData.sresult;\r\n                                        results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : grade.FIO;\r\n                                        results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                        results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                        results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                        results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                        results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                        results[\"ssystemfilename\"] = uniquefilename;\r\n                                        results[\"nfilesize\"] =resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                        formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                        formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                        i++;\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        const splittedFileName = resultData.sfinal ?resultData.sfinal[0] &&  resultData.sfinal[0].name.split('.') : \"\";\r\n                                        const fileExtension = resultData.sfinal ? resultData.sfinal[0] &&  resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                        const uniquefilename = \"\";\r\n                                        results[\"jsondata\"] = {\r\n                                            ssystemfilename: uniquefilename,\r\n                                            nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                            ncalculatedresult: 4,\r\n                                            sresult: \"\",\r\n                                            sfinal: \"\"\r\n                                        }\r\n                                        results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                        results[\"ncalculatedresult\"] = 4;\r\n                                        results[\"sresult\"] = \"\";\r\n                                        results[\"sfinal\"] = \"\";\r\n                                        results[\"ngradecode\"] = -1;\r\n                                        results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                        results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                        results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                        results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                        results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                        results[\"ssystemfilename\"] = \"\";\r\n                                        results[\"nfilesize\"] = \"\";\r\n                                        formData.append(\"uploadedFile\" + index,\"\");\r\n                                        formData.append(\"uniquefilename\" + index, \"\");\r\n                                        formData.append(\"ntransactiontestcode\", \"\");\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            if (Object.values(results).length > 0) {\r\n                                resultParameters.push(results);\r\n                            }\r\n                        }\r\n                        return null;\r\n                    });\r\n\r\n                    if (neditable === 0) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: { loading: false, openModal: false,parameterResults:[] ,selectedRecord :{} }\r\n                        }\r\n                        return this.props.updateStore(updateInfo);\r\n                    }\r\n\r\n                    formData.append(\"filecount\", i);\r\n                    formData.append(\"nregtypecode\", nregtypecode);\r\n                    formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n                    formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n                    formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n\r\n                    formData.append(\"resultData\", JSON.stringify(resultParameters));\r\n                    const tests = this.props.Login.masterData.RESelectedTest ?\r\n                        this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\"\r\n                    formData.append(\"transactiontestcode\", tests);\r\n                    //let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"TestParameterResult\",\r\n                        inputData: { userinfo: this.props.Login.userInfo },\r\n                        formData: formData,\r\n                        isFileupload: true,\r\n                        operation: \"update\",\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n                    }\r\n                }\r\n                else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { loading: false, openModal: false }\r\n                    }\r\n                    return this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n            if (this.props.Login.screenName === \"IDS_RESULTENTRYPARAMETER\") {\r\n                if (this.state.selectedsubcode && this.state.selectedsubcode.length > 0 && this.state.selectedsubcode !== undefined) {\r\n                if (ResultParameter.length > 0 && ResultParameter !== undefined) {\r\n                    ResultParameter.map((resultData, index) => {\r\n                        let results = {};\r\n                        if (resultData.editable === true) {\r\n                            neditable = 1;\r\n                            switch (resultData.nparametertypecode) {\r\n                                case 1:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                        sresult: resultData.sresult,\r\n                                        sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\"\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                        numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                    results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                        numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    //results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    //results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results['ntestgrouptestparametercode'] = resultData.ntestgrouptestparametercode;\r\n                                    break;\r\n                                case 2:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sfinal,false),  \r\n                                        sresultcomment: resultData.sresultcomment==='null'?\"-\":resultData.sresultcomment,\r\n                                        salertmessage: resultData.salertmessage,\r\n                                        additionalInfo:resultData['additionalInfo'],\r\n                                        additionalInfoUidata:resultData['additionalInfoUidata']===undefined?\"\":resultData['additionalInfoUidata'],\r\n                                        ntestgrouptestpredefcode:resultData.ntestgrouptestpredefcode  \r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                   \r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.ngradecode;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    //results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    //results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results['ntestgrouptestparametercode'] = resultData.ntestgrouptestparametercode;\r\n                                    break;\r\n                                case 3:\r\n                                    results[\"jsondata\"] = {\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sresult,false)\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : grade.FIO;\r\n                                    results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                    results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                    //results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                    //results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results['ntestgrouptestparametercode'] = resultData.ntestgrouptestparametercode;\r\n                                    break;\r\n                                case 4:\r\n                                    if (resultData.sfinal.length>0 ) {\r\n                                        const splittedFileName = resultData.sfinal ?resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                        const fileExtension = resultData.sfinal ?resultData.sfinal[0]&& resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                        const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                        results[\"jsondata\"] = {\r\n                                            ssystemfilename: uniquefilename,\r\n                                            nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                            ncalculatedresult: 4,\r\n                                            sresult: Lims_JSON_stringify(resultData.sresult,false),\r\n                                            sfinal: Lims_JSON_stringify(resultData.sresult,false)\r\n                                        }\r\n                                        results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                        results[\"ncalculatedresult\"] = 4;\r\n                                        results[\"sresult\"] = resultData.sresult;\r\n                                        results[\"sfinal\"] = resultData.sresult;\r\n                                        results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : grade.FIO;\r\n                                        results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                        results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                        //results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                        //results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                        results['ntestgrouptestparametercode'] = resultData.ntestgrouptestparametercode;\r\n                                        results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                        results[\"ssystemfilename\"] = uniquefilename;\r\n                                        results[\"nfilesize\"] =resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                        formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                        //formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                        i++;\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        const splittedFileName = resultData.sfinal ?resultData.sfinal[0] &&  resultData.sfinal[0].name.split('.') : \"\";\r\n                                        const fileExtension = resultData.sfinal ? resultData.sfinal[0] &&  resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                        const uniquefilename = \"\";\r\n                                        results[\"jsondata\"] = {\r\n                                            ssystemfilename: uniquefilename,\r\n                                            nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                            ncalculatedresult: 4,\r\n                                            sresult: \"\",\r\n                                            sfinal: \"\"\r\n                                        }\r\n                                        results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                        results[\"ncalculatedresult\"] = 4;\r\n                                        results[\"sresult\"] = \"\";\r\n                                        results[\"sfinal\"] = \"\";\r\n                                        results[\"ngradecode\"] = -1;\r\n                                        results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                        results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                        //results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                        //results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                        results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                        results['ntestgrouptestparametercode'] = resultData.ntestgrouptestparametercode;\r\n                                        results[\"ssystemfilename\"] = \"\";\r\n                                        results[\"nfilesize\"] = \"\";\r\n                                        formData.append(\"uploadedFile\" + index,\"\");\r\n                                        formData.append(\"uniquefilename\" + index, \"\");\r\n                                        //formData.append(\"ntransactiontestcode\", \"\");\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            if (Object.values(results).length > 0) {\r\n                                resultParameters.push(results);\r\n                            }\r\n                        }\r\n                        return null;\r\n                    });\r\n\r\n                    if (neditable === 0) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: { loading: false, openModal: false,parameterResults:[] ,selectedRecord :{} }\r\n                        }\r\n                        return this.props.updateStore(updateInfo);\r\n                    }\r\n\r\n                    formData.append(\"filecount\", i);\r\n                    formData.append(\"nregtypecode\", nregtypecode);\r\n                    formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n                    formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n                    formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n\r\n                    formData.append(\"resultData\", JSON.stringify(resultParameters));\r\n                    const tests = this.props.Login.masterData.RESelectedTest ?\r\n                        this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\"\r\n                        const sampleid = this.state.selectedsubcode ?\r\n                        this.state.selectedsubcode.map(test => test.ssampleid).join(\"','\") : \"\"\r\n\r\n                    formData.append(\"transactiontestcode\", tests);\r\n                    formData.append(\"sampleid\", sampleid);\r\n                    formData.append(\"ntestcode\",this.props.Login.masterData.realTestcodeValue && this.props.Login.masterData.realTestcodeValue.ntestcode)\r\n                    formData.append(\"nallottedspeccode\",this.state.selectedRecord.nallottedspeccode.value);\r\n                    formData.append(\"nspecsampletypecode\",this.state.selectedRecord.ncomponentcode.value);\r\n                    //let postParam = {inputListName: \"RE_TEST\", selectedObject: \"\", primaryKeyField: \"ntransactionresultcode\" };\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"MultiSampleTestParameterResult\",\r\n                        inputData: { userinfo: this.props.Login.userInfo },\r\n                        formData: formData,\r\n                        isFileupload: true,\r\n                        operation: \"update\",\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n                    }\r\n                }\r\n                else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { loading: false, openModal: false }\r\n                    }\r\n                    return this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loading: false }\r\n                }\r\n                \r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }));\r\n                return this.props.updateStore(updateInfo);\r\n            }\r\n            }\r\n\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTMETHODSOURCE\") {\r\n                inputData = {\r\n                    ntype: 3,\r\n                    nflag: 3,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    ntranscode: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n                    ntestcode: this.props.Login.masterData.realTestcodeValue.ntestcode,\r\n                    npreregno: this.props.Login.masterData.RESelectedSample && this.props.Login.masterData.RESelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n                    ntransactionsamplecode: this.props.Login.masterData.RESelectedSubSample && this.props.Login.masterData.RESelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                    nmethodcode: selectedRecord.nmethodcode.value,\r\n                    nsourcecode: selectedRecord.nsourcecode.value,\r\n                    ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestKey: \"IDS_RESULTS\",\r\n                    ncontrolcode: this.props.Login.ncontrolcode\r\n                }\r\n                // inputParam = {\r\n                //     classUrl: classUrl,\r\n                //     methodUrl: \"TestMethodSource\",\r\n                //     inputData: inputData,\r\n                //     isFileupload: false,\r\n                //     operation: \"update\",\r\n                //     displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                // }\r\n\r\n                this.updateTestMethodSource(inputData, this.props.Login.masterData, this.props.Login.ncontrolcode);\r\n                return;\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n                let inputData = []; \r\n                \r\n                if (this.props.Login.operation === \"update\") {\r\n                    inputData = {\r\n                        ResultUsedInstrument: {\r\n                            nresultusedinstrumentcode: selectedRecordInstrumentForm.nresultusedinstrumentcode,\r\n                            npreregno: selectedRecordInstrumentForm.npreregno,\r\n                            ninstrumentcatcode: selectedRecordInstrumentForm.ninstrumentcatcode.value,\r\n                            ninstrumentcode: selectedRecordInstrumentForm.ninstrumentcode.value,\r\n                            dfromdate: formatInputDate(selectedRecordInstrumentForm.dfromdate, false),\r\n                            dtodate: formatInputDate(selectedRecordInstrumentForm.dtodate, false),\r\n                            stzfromdate: selectedRecordInstrumentForm.ntzfromdate.label,\r\n                            stztodate: selectedRecordInstrumentForm.ntztodate.label,\r\n                            ntzfromdate: selectedRecordInstrumentForm.ntzfromdate.value,\r\n                            ntztodate: selectedRecordInstrumentForm.ntztodate.value,\r\n                            ntransactiontestcode: selectedRecordInstrumentForm.ntransactiontestcode\r\n\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode,\r\n                        ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                        ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                            this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    }\r\n                }\r\n                else {\r\n                    inputData = {\r\n                        ResultUsedInstrument: {\r\n                            ntransactiontestcode: selectedRecordInstrumentForm.ntransactiontestcode,\r\n                            npreregno: selectedRecordInstrumentForm.npreregno,\r\n                            ninstrumentcatcode: selectedRecordInstrumentForm.ninstrumentcatcode.value,\r\n                            ninstrumentcode: selectedRecordInstrumentForm.ninstrumentcode.value,\r\n                            dfromdate: formatInputDate(selectedRecordInstrumentForm.dfromdate, false),\r\n                            dtodate: formatInputDate(selectedRecordInstrumentForm.dtodate, false),\r\n                            stzfromdate: selectedRecordInstrumentForm.ntzfromdate.label,\r\n                            stztodate: selectedRecordInstrumentForm.ntztodate.label,\r\n                            ntzfromdate: selectedRecordInstrumentForm.ntzfromdate.value,\r\n                            ntztodate: selectedRecordInstrumentForm.ntztodate.value\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode,\r\n                        ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                        transactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                            this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                    }\r\n                }\r\n                inputParam = {\r\n                    classUrl: classUrl,\r\n                    methodUrl: \"ResultUsedInstrument\",\r\n\r\n                    inputData: inputData, selectedId,\r\n                    isFileupload: false,\r\n                    activeTestKey: \"IDS_INSTRUMENT\",\r\n                    operation: this.props.Login.operation,\r\n                    displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n                let inputData = [];\r\n                if (this.state.selectedRecordMaterialForm.nmaterialcode != \"\") {\r\n                    if (this.state.selectedRecordMaterialForm.nmaterialinventorycode != \"\") {\r\n                        if (parseFloat(this.state.selectedRecordMaterialForm.susedquantity) <= parseFloat(this.state.selectedRecordMaterialForm.savailablequantity)) {\r\n                            if (this.props.Login.operation === \"update\") {\r\n                                inputData = {\r\n                                    ResultUsedMaterial: {\r\n                                        nresultusedmaterialcode: selectedRecordMaterialForm.nresultusedmaterialcode,\r\n                                        ntransactiontestcode: selectedRecordMaterialForm.ntransactiontestcode,\r\n                                        npreregno: selectedRecordMaterialForm.npreregno,\r\n                                        nmaterialtypecode: selectedRecordMaterialForm.nmaterialtypecode.value,\r\n                                        nmaterialcategorycode: selectedRecordMaterialForm.nmaterialcategorycode.value,\r\n                                        nmaterialcode: selectedRecordMaterialForm.nmaterialcode.value,\r\n                                        ninventorycode: selectedRecordMaterialForm.nmaterialinventorycode.value,\r\n                                        nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                        jsondata: {\r\n                                            sarno: selectedRecordMaterialForm.sarno,\r\n                                            ssamplearno: selectedRecordMaterialForm.ssamplearno,\r\n                                            stestsynonym: selectedRecordMaterialForm.stestsynonym,\r\n                                            smaterialcatname: selectedRecordMaterialForm.nmaterialcatcode.label,\r\n                                            smaterialname: selectedRecordMaterialForm.nmaterialcode.label,\r\n                                            sinventoryid: selectedRecordMaterialForm.nmaterialinventorycode.label,\r\n                                            nqtyused: selectedRecordMaterialForm.susedquantity,\r\n                                            scarriergas: selectedRecordMaterialForm.scarriergas,\r\n                                            smobilephase: selectedRecordMaterialForm.smobilephase,\r\n                                            sremarks: selectedRecordMaterialForm.sremarks,\r\n                                            susername: this.props.Login.userInfo.susername,\r\n                                            nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                            ssectionname: selectedRecordMaterialForm.ssectionname,\r\n                                            ntestgroupmaterial:selectedRecordMaterialForm.ntestgroupmaterial,\r\n                                            ntestgrouptestcode:selectedRecordMaterialForm.ntestgroupmaterial == transactionStatus.YES ? \r\n                                            this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode :-1\r\n                                        }\r\n                                    },\r\n                                    MaterialInventoryTrans: {\r\n                                        nmaterialinventorycode: selectedRecordMaterialForm.nmaterialinventorycode.value,\r\n                                        nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                        jsondata: {\r\n                                            IDS_INVENTORYID: selectedRecordMaterialForm.nmaterialinventorycode.label,\r\n                                            nqtyused: selectedRecordMaterialForm.susedquantity,\r\n                                        }\r\n                                    },\r\n                                    userinfo: this.props.Login.userInfo,\r\n                                    nregtypecode: nregtypecode,\r\n                                    nregsubtypecode: nregsubtypecode,\r\n                                    ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                                    nresultusedmaterialcode: selectedRecordMaterialForm.nresultusedmaterialcode,\r\n                                    ntransactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                                        this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                                }\r\n                            }\r\n                            else {\r\n                                inputData = {\r\n                                    ResultUsedMaterial: {\r\n                                        ntransactiontestcode: selectedRecordMaterialForm.ntransactiontestcode,\r\n                                        npreregno: selectedRecordMaterialForm.npreregno,\r\n                                        nmaterialtypecode: selectedRecordMaterialForm.nmaterialtypecode.value,\r\n                                        nmaterialcategorycode: selectedRecordMaterialForm.nmaterialcatcode.value,\r\n                                        nmaterialcode: selectedRecordMaterialForm.nmaterialcode.value,\r\n                                        ninventorycode: selectedRecordMaterialForm.nmaterialinventorycode.value,\r\n                                        nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                        jsondata: {\r\n                                            sarno: selectedRecordMaterialForm.sarno,\r\n                                            ssamplearno: selectedRecordMaterialForm.ssamplearno,\r\n                                            stestsynonym: selectedRecordMaterialForm.stestsynonym,\r\n                                            smaterialcatname: selectedRecordMaterialForm.nmaterialcatcode.label,\r\n                                            smaterialname: selectedRecordMaterialForm.nmaterialcode.label,\r\n                                            sinventoryid: selectedRecordMaterialForm.nmaterialinventorycode.label,\r\n                                            nqtyused: selectedRecordMaterialForm.susedquantity,\r\n                                            scarriergas: selectedRecordMaterialForm.scarriergas,\r\n                                            smobilephase: selectedRecordMaterialForm.smobilephase,\r\n                                            sremarks: selectedRecordMaterialForm.sremarks,\r\n                                            smaterialtypename: selectedRecordMaterialForm.nmaterialtypecode.label,\r\n                                            nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                            ntestgroupmaterial:selectedRecordMaterialForm.ntestgroupmaterial,\r\n                                            ssectionname: selectedRecordMaterialForm.ssectionname,\r\n                                            ntestgrouptestcode:selectedRecordMaterialForm.ntestgroupmaterial == transactionStatus.YES ? \r\n                                            this.props.Login.masterData.RESelectedTest[0].ntestgrouptestcode :-1\r\n                                        }\r\n                                    },\r\n                                    MaterialInventoryTrans: {\r\n                                        nmaterialinventorycode: selectedRecordMaterialForm.nmaterialinventorycode.value,\r\n                                        nsectioncode: selectedRecordMaterialForm.nsectioncode,\r\n                                        jsondata: {\r\n                                            nqtyused: selectedRecordMaterialForm.susedquantity,\r\n                                            IDS_INVENTORYID: selectedRecordMaterialForm.nmaterialinventorycode.label\r\n                                        }\r\n                                    },\r\n                                    userinfo: this.props.Login.userInfo,\r\n                                    nregtypecode: nregtypecode,\r\n                                    nregsubtypecode: nregsubtypecode,\r\n                                    ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                                    transactiontestcode: this.props.Login.masterData.RESelectedTest ?\r\n                                        this.props.Login.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                                }\r\n                            }\r\n                            inputParam = {\r\n                                classUrl: classUrl,\r\n                                methodUrl: \"ResultUsedMaterial\",\r\n                                inputData: inputData, selectedId,\r\n                                isFileupload: false,\r\n                                activeTestKey: \"IDS_MATERIAL\",\r\n                                operation: this.props.Login.operation,\r\n                                displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                            }\r\n                        } else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: \"Quantity Not available\" }))\r\n                            return null;\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"Select Material Inventory\" }))\r\n                        return null;\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"Select Material\" }))\r\n                    return null;\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_TASK\") {\r\n                // if ((selectedRecord.sanalysistime && selectedRecord.sanalysistime !== \"\")\r\n                //     || (selectedRecord.smisctime && selectedRecord.smisctime !== \"\")\r\n                //     || (selectedRecord.spreanalysistime && selectedRecord.spreanalysistime !== \"\")\r\n                //     || (selectedRecord.spreparationtime && selectedRecord.spreparationtime !== \"\")\r\n                //     || (selectedRecord.scomments && selectedRecord.scomments !== \"\")) {\r\n                //     if (this.props.Login.operation === \"update\") {\r\n                    if ((selectedRecordTaskForm.sanalysistime && selectedRecordTaskForm.sanalysistime !== \"\")\r\n                    || (selectedRecordTaskForm.smisctime && selectedRecordTaskForm.smisctime !== \"\")\r\n                    || (selectedRecordTaskForm.spreanalysistime && selectedRecordTaskForm.spreanalysistime !== \"\")\r\n                    || (selectedRecordTaskForm.spreparationtime && selectedRecordTaskForm.spreparationtime !== \"\")\r\n                    || (selectedRecordTaskForm.scomments && selectedRecordTaskForm.scomments !== \"\")) {\r\n                    if (this.props.Login.operation === \"update\") {\r\n                        inputData = {\r\n                            ResultUsedTasks: {\r\n                                nresultusedtaskcode: selectedRecordTaskForm.nresultusedtaskcode,\r\n                                jsondata: {\r\n                                    //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                    sarno: this.props.Login.masterData.RESelectedTest[0].sarno,\r\n                                    ssamplearno: this.props.Login.masterData.RESelectedTest[0].ssamplearno,\r\n                                    stestsynonym: selectedRecordTaskForm.stestsynonym,\r\n                                    sanalysistime: selectedRecordTaskForm.sanalysistime ? selectedRecordTaskForm.sanalysistime : \"\",\r\n                                    sanalyst: this.props.Login.userInfo.susername,\r\n                                    smisctime: selectedRecordTaskForm.smisctime ? selectedRecordTaskForm.smisctime : \"\",\r\n                                    spreanalysistime: selectedRecordTaskForm.spreanalysistime ? selectedRecordTaskForm.spreanalysistime : \"\",\r\n                                    spreparationtime: selectedRecordTaskForm.spreparationtime ? selectedRecordTaskForm.spreparationtime : \"\",\r\n                                    staskprocedure: selectedRecordTaskForm.staskprocedure ? selectedRecordTaskForm.staskprocedure : \"\",\r\n                                    scomments: selectedRecordTaskForm.scomments ? selectedRecordTaskForm.scomments : \"\"\r\n                                }\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ntransactiontestcode: this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.map(sample => sample.ntransactiontestcode).join(\",\"),\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode,\r\n                            ndesigntemplatemappingcode: ndesigntemplatemappingcode,\r\n                        }\r\n                    }\r\n                    else {\r\n                        let taskArry = [];\r\n                        this.props.Login.masterData.RESelectedTest &&\r\n                            this.props.Login.masterData.RESelectedTest.map(test =>\r\n\r\n                                taskArry.push({\r\n                                    //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                    ntransactiontestcode: parseInt(test.ntransactiontestcode),\r\n                                    npreregno: parseInt(test.npreregno),\r\n                                    // sanalysistime: selectedRecord.sanalysistime ? selectedRecord.sanalysistime : \"\",\r\n                                    // sanalyst: this.props.Login.userInfo.susername,\r\n                                    // smisctime: selectedRecord.smisctime ? selectedRecord.smisctime : \"\",\r\n                                    // spreanalysistime: selectedRecord.spreanalysistime ? selectedRecord.spreanalysistime : \"\",\r\n                                    // spreparationtime: selectedRecord.spreparationtime ? selectedRecord.spreparationtime : \"\",\r\n                                    // scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\r\n                                    // npreregno: this.props.Login.masterData.RESelectedSample ? this.props.Login.masterData.RESelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                                    jsondata: {\r\n                                        //ntransactiontestcode: parseInt(selectedRecord.ntransactiontestcode),\r\n                                        sarno: test.sarno,\r\n                                        ssamplearno: test.ssamplearno,\r\n                                        stestsynonym: test.stestsynonym,\r\n                                        sanalysistime: selectedRecordTaskForm.sanalysistime ? selectedRecordTaskForm.sanalysistime : \"\",\r\n                                        sanalyst: this.props.Login.userInfo.susername,\r\n                                        smisctime: selectedRecordTaskForm.smisctime ? selectedRecordTaskForm.smisctime : \"\",\r\n                                        spreanalysistime: selectedRecordTaskForm.spreanalysistime ? selectedRecordTaskForm.spreanalysistime : \"\",\r\n                                        spreparationtime: selectedRecordTaskForm.spreparationtime ? selectedRecordTaskForm.spreparationtime : \"\",\r\n                                        staskprocedure: selectedRecordTaskForm.staskprocedure ? selectedRecordTaskForm.staskprocedure : \"\",\r\n                                        scomments: selectedRecordTaskForm.scomments ? selectedRecordTaskForm.scomments : \"\"\r\n                                    }\r\n                                })\r\n                            )\r\n                        inputData = {\r\n                            ResultUsedTasks: taskArry,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ntransactiontestcode: this.props.Login.masterData.RESelectedTest && this.props.Login.masterData.RESelectedTest.map(sample => sample.ntransactiontestcode).join(\",\"),\r\n                            nregtypecode: nregtypecode,\r\n                            nregsubtypecode: nregsubtypecode,\r\n                            ndesigntemplatemappingcode: ndesigntemplatemappingcode\r\n                        }\r\n                    }\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"ResultUsedTasks\",\r\n                        inputData: inputData, selectedId,\r\n                        activeTestKey: \"IDS_TASK\",\r\n                        isFileupload: false,\r\n                        operation: this.props.Login.operation,\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                    }\r\n                } else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERTASKTIME\" }));\r\n                    return;\r\n                }\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_PARAMETERCOMMENTS\") {\r\n                inputData = {\r\n                    ntransactiontestcode: selectedRecord.ntransactiontestcode,\r\n                    ntransactionresultcode: selectedRecord.ntransactionresultcode,\r\n                    sresultcomment: selectedRecord.sresultcomment,\r\n                    transactiontestcode: selectedRecord.transactiontestcode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nregtypecode: nregtypecode,\r\n                    nregsubtypecode: nregsubtypecode,\r\n                    ncontrolcode: this.props.Login.ncontrolcode\r\n\r\n                }\r\n                // inputParam = {\r\n                //     classUrl: classUrl,\r\n                //     methodUrl: \"ParameterComments\",\r\n                //     inputData: inputData, selectedId,\r\n                //     isFileupload: false,\r\n                //     operation: this.props.Login.operation,\r\n                //     displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                // }\r\n                this.updateParameterComments(inputData, this.props.Login.masterData, selectedRecord.ncontrolcode);\r\n                return;\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_CHECKLISTRESULT\") {\r\n                let lstResultCheckList = [];\r\n                if (selectedRecord && selectedRecord.editedQB) {\r\n                    selectedRecord.editedQB.map(qbcode =>\r\n                        lstResultCheckList.push(selectedRecord[qbcode]));\r\n                    inputData = {\r\n                        ntransactiontestcode: selectedRecord.ntransactiontestcode.toString(),\r\n                        ntransactionresultcode: selectedRecord.ntransactionresultcode,\r\n                        transactiontestcode: selectedRecord.transactiontestcode,\r\n                        ResultCheckList: lstResultCheckList,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nregtypecode: nregtypecode,\r\n                        nregsubtypecode: nregsubtypecode\r\n                    }\r\n                    inputParam = {\r\n                        classUrl: classUrl,\r\n                        methodUrl: \"ResultEntryChecklist\",\r\n                        inputData: inputData, selectedId,\r\n                        isFileupload: false,\r\n                        operation: this.props.Login.operation,\r\n                        displayName: this.props.Login.inputParam.displayName, saveType//postParam\r\n                    }\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\",\"dataType\":[option[designProperties.LISTITEM]] };\r\n        });\r\n        return temparray;\r\n    }\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { showTest, showSample, userRoleControlRights, controlMap, resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState, documentDataState, resultChangeDataState, testCommentDataState,\r\n            historyDataState, sampleListColumns, subSampleListColumns, testListColumns,\r\n            SingleItem, sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, sampleMoreField, subSampleMoreField,\r\n            testMoreField, selectedRecord, SampleType, RegistrationType, RegistrationSubType,\r\n            REFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion, DynamicSampleColumns,\r\n            DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem, DynamicGridMoreField,\r\n            validateFormulaMandyFields, skip, take, testskip, testtake, selectedFilter, stateDynamicDesign,\r\n            activeTabIndex, activeTabId, sampleChangeDataState,testSearchField,AdhocParamter,\r\n            Batchvalues,Worklistvalues,ConfigurationFilterValues,enlLink,openELNSheet,parameterResults,isParameterInitialRender,isaddSampleRender\r\n        ,selectedRecordTaskForm ,isTaskInitialRender,selectedRecordMaterialForm,isMaterialInitialRender\r\n        ,selectedRecordInstrumentForm,isInstrumentInitialRender\r\n        , subSampleSkip, subSampleTake,sampleSearchField,subsampleSearchField\r\n    } = this.state;\r\n             //,currentAlertResultCode,currentntestgrouptestpredefcode\r\n       \r\n        let bool = false;\r\n \r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                bool = true;\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n        }\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            // testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            // testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n            \r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems: []; \r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : []; \r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];  \r\n            \r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n\r\n\r\n            this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample &&\r\n            DynamicSubSampleColumns.push({1:{'en-US': 'Specimen', 'ru-RU': 'Образец', 'tg-TG': 'Намуна'},\r\n            2:\"scomponentname\"});\r\n            \r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n            resultDataState = dataState;\r\n            instrumentDataState = dataState;\r\n            materialDataState = dataState;\r\n            taskDataState = dataState;\r\n            documentDataState = dataState;\r\n            resultChangeDataState = dataState;\r\n            historyDataState = dataState;\r\n            testCommentDataState = dataState;\r\n            sampleChangeDataState = dataState;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n        }\r\n        if (this.props.Login.selectedRecordTaskForm !== previousProps.Login.selectedRecordTaskForm) {\r\n            bool = true;\r\n            selectedRecordTaskForm = this.props.Login.selectedRecordTaskForm;\r\n        }\r\n        if (this.props.Login.selectedRecordMaterialForm !== previousProps.Login.selectedRecordMaterialForm) {\r\n            bool = true;\r\n            selectedRecordMaterialForm = this.props.Login.selectedRecordMaterialForm;\r\n        }\r\n\r\n        if (this.props.Login.selectedRecordInstrumentForm !== previousProps.Login.selectedRecordInstrumentForm) {\r\n            bool = true;\r\n            selectedRecordInstrumentForm = this.props.Login.selectedRecordInstrumentForm;\r\n        }\r\n        if (this.props.Login.parameterResults !== previousProps.Login.parameterResults) {\r\n            bool = true;\r\n            parameterResults = this.props.Login.parameterResults;\r\n        }\r\n        if (this.props.Login.isTaskInitialRender !== previousProps.Login.isTaskInitialRender) {\r\n            bool = true;\r\n            isTaskInitialRender = this.props.Login.isTaskInitialRender;\r\n        }\r\n        if (this.props.Login.isParameterInitialRender !== previousProps.Login.isParameterInitialRender) {\r\n            bool = true;\r\n            isParameterInitialRender = this.props.Login.isParameterInitialRender;\r\n        }\r\n        if (this.props.Login.isaddSampleRender !== previousProps.Login.isaddSampleRender) {\r\n            bool = true;\r\n            isaddSampleRender = this.props.Login.isaddSampleRender;\r\n        }\r\n        \r\n\r\n        // if (this.props.Login.currentAlertResultCode !== previousProps.Login.currentAlertResultCode) {\r\n        //     bool = true;\r\n        //     currentAlertResultCode = this.props.Login.currentAlertResultCode;\r\n        // }\r\n        // if (this.props.Login.currentntestgrouptestpredefcode !== previousProps.Login.currentntestgrouptestpredefcode) {\r\n        //     bool = true;\r\n        //     currentntestgrouptestpredefcode = this.props.Login.currentntestgrouptestpredefcode;\r\n        // }\r\n        if (this.props.Login.validateFormulaMandyFields !== previousProps.Login.validateFormulaMandyFields) {\r\n            bool = true;\r\n            validateFormulaMandyFields = this.props.Login.validateFormulaMandyFields;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            REFilterStatus = constructOptionList(this.props.Login.masterData.REFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", \"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestsynonym', 'ascending', 'ntestcode', false);\r\n            Batchvalues = constructOptionList(this.props.Login.masterData.Batchvalues || [], 'nbatchmastercode', 'sbatcharno', 'ascending', 'nbatchmastercode', false);\r\n            Worklistvalues = constructOptionList(this.props.Login.masterData.Worklistvalues || [], 'nworklistcode', 'sworklistno', 'ascending', 'nworklistcode', false);\r\n            ConfigurationFilterValues = constructOptionList(this.props.Login.masterData.ConfigurationFilterValues || [], 'nconfigfiltercode', 'sfiltername', 'ascending', 'nconfigfiltercode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            // AdhocParamter = constructOptionList(this.props.Login.masterData.AdhocParamter || [], 'ntestparametercode', 'sparametersynonym',\r\n            //     'ascending', 'ntestparametercode', false);\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            subSampleSkip = this.props.Login.subSampleSkip === undefined ? subSampleSkip : this.props.Login.subSampleSkip\r\n            subSampleTake = this.props.Login.subSampleTake || subSampleTake\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.sampleChangeDataState && this.props.Login.sampleChangeDataState !== previousProps.Login.sampleChangeDataState) {\r\n                sampleChangeDataState = this.props.Login.sampleChangeDataState;\r\n            }\r\n\r\n\r\n\r\n            // if (this.props.Login.enlLink !== previousProps.Login.enlLink) {\r\n\r\n            //     bool = true;\r\n                \r\n            //     enlLink = this.props.Login.enlLink;\r\n            //     openELNSheet=true;\r\n                \r\n                \r\n            //     }\r\n\r\n\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.REFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {masterData: this.props.Login.masterData,showTest,showSample }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            REFilterStatus = REFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            Batchvalues = Batchvalues.get(\"OptionList\")\r\n            Worklistvalues = Worklistvalues.get(\"OptionList\")\r\n            ConfigurationFilterValues = ConfigurationFilterValues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n           // AdhocParamter=AdhocParamter.get(\"OptionList\")\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                showTest, showSample, userRoleControlRights, controlMap, resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState, documentDataState, resultChangeDataState, testCommentDataState,\r\n                historyDataState, sampleListColumns, subSampleListColumns, testListColumns,\r\n                SingleItem, sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, sampleMoreField, subSampleMoreField,\r\n                testMoreField, selectedRecord,\r\n                SampleType,\r\n                RegistrationType,\r\n                RegistrationSubType,\r\n                REFilterStatus,\r\n                REJobStatus,\r\n                Testvalues,\r\n                Batchvalues,\r\n                Worklistvalues,\r\n                ConfigurationFilterValues,\r\n                ApprovalConfigVersion,\r\n                validateFormulaMandyFields,\r\n                skip, take, testskip, testtake, \r\n                selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                DynamicGridItem, DynamicGridMoreField, stateDynamicDesign,\r\n                 activeTabIndex, activeTabId, sampleChangeDataState,testSearchField,AdhocParamter\r\n                 ,parameterResults,isParameterInitialRender,isaddSampleRender,selectedRecordTaskForm,isTaskInitialRender,\r\n                 selectedRecordMaterialForm,isMaterialInitialRender,\r\n                 selectedRecordInstrumentForm,isInstrumentInitialRender\r\n                  //,currentAlertResultCode,currentntestgrouptestpredefcode\r\n                  , subSampleSkip, subSampleTake,sampleSearchField,subsampleSearchField\r\n            })\r\n        }\r\n\r\n        if (this.props.Login.meanTestParameterList !== previousProps.Login.meanTestParameterList) {\r\n            this.setState({ meanTestParameterList: this.props.Login.meanTestParameterList });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n        //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n        // }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n    crudMaster, updateStore, getsubSampleREDetail, getTestREDetail, getTestChildTabREDetail, resultGetModule,\r\n    completeTest, testMethodSourceEdit, addREInstrument, addREMaterial, deleteInstrumentRecord, fetchInstrumentRecord, deleteTaskRecord, fetchTaskRecord,\r\n    parameterRecord, checkListRecord, onSaveCheckList, defaultTest, getFormula, getRERegistrationType, getRERegistrationSubType, fetchMaterialRecord,\r\n    getREApprovalConfigVersion, getResultEntryDetails, calculateFormula, getREFilterStatus, getREFilterTestData, getREJobStatus, getSampleChildTabREDetail,\r\n    viewAttachment, getAttachmentCombo, deleteAttachment, resultImportFile, validateEsignCredentialComplete, getCommentsCombo, updateTestMethodSource,\r\n    filterTransactionList, validateEsignCredential, updateParameterComments, previewSampleReport, getMeanCalculationTestParameter, \r\n    getREMaterialCategoryByType, getREMaterialByCategory, getREMaterialInvertoryByMaterial, getAvailableMaterialQuantity, testStart,\r\n     getSubSampleChildTabDetail, getSampleChildTabDetail, getREFilterTemplate, getAverageResult,getREMaterialComboGet//,deleteResultUsedMaterial\r\n      ,getPredefinedData\r\n     ,getELNTestValidation\r\n     ,getConfigurationFilter,getTestBasedBatchWorklist,addREAdhocParamter,createAdhocParamter,enforceResult,ResultEntryViewPatientDetails,resultEntryGetParameter,resultEntryGetSpec,resultEntryGetComponent\r\n\r\n})(injectIntl(ResultEntry));"]},"metadata":{},"sourceType":"module"}